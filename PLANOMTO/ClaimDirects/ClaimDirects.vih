#ifndef __ClaimDirects__
#define __ClaimDirects__

#include system.vih
#include IModify.vih

#component "AGAT"

const
  ClaimDirectsSpKindCostitem = 1;
  ClaimDirectsSpKindMcUsl = 0;
end;

table struct local tClaimDirectsSp (
  nrec           : comp,
  parentNrec     : comp,
  kind           : byte,
  spmnplanNrec   : comp,
  conditionNrec  : comp,
  number         : string[20],
  costitemNrec   : comp,
  itemType       : word,
  itemNrec       : comp,
  otpedNrec      : comp,
  priceStructNrec: comp,
  deviceNrec     : comp,
  katorgNrec     : comp,
  Description    : string,
  allowAddChild  : boolean,
  qty            : double,
  price          : double,
  sum            : double,
  orderedQty     : double,
  monthQty       : array[1..12] of double,
  monthSum       : array[1..12] of double,
  monthOrderedQty: array[1..12] of double
) with index (
  i01 = nrec (unique, surrogate),
  i02 = parentNrec + costitemNrec,
  i03 = spmnplanNrec
);

type TtClaimDirectsSp = record as table tClaimDirectsSp;

objinterface IClaimDirectsSp; forward;

objinterface IClaimDirects;
  function  IsDirty: boolean;
  function  Load(aMnplanNrec: comp): boolean;
  function  Save: boolean;
  procedure SetDirty;
  property MnplanNrec: comp read;
  property PeriodNrec: comp;
  property KatpodrNrec: comp;
  property KatstroyNrec: comp;
  property SlojNrec: comp;
  property Number: string[20];
  property Name: string;
  property StartDate: date;
  property EndDate: date;
  property Sp: IClaimDirectsSp read;
end;

objinterface IClaimDirectsSp;
  function  Load(aMnplanNrec: comp): boolean;
  procedure CheckCostitems;
  function  Save: boolean;
  function  IsLeaf: boolean;
  function  IsCostitem: boolean;
  function  MonthQty(monthIndex: byte): double;
  function  MonthSum(monthIndex: byte): double;
  function  MonthOrderedQty(monthIndex: byte): double;
  function  GetBuffer(aSpNrec: comp): TtClaimDirectsSp;
  function  InsertNewWithBuffer(buf: TtClaimDirectsSp): TtClaimDirectsSp;
  procedure SetMonthQty(monthIndex: byte; value: double);
  property Nrec                : comp;
  property ParentNrec          : comp;
  property Kind                : byte;
  property SpmnplanNrec        : comp;
  property ConditionNrec       : comp;
  property Number              : string[20];
  property CostitemNrec        : comp;
  property Description         : string;
  property ItemType            : word;
  property ItemNrec            : comp;
  property OtpedNrec           : comp;
  property PriceStructNrec     : comp;
  property DeviceNrec          : comp;
  property KatorgNrec          : comp;
  property Price               : double;
  property Qty                 : double;
  property Sum                 : double;
  property AllowAddChildren    : boolean;
  property Claim               : IClaimDirects;
  index iByNrec = Nrec;
  index iByParentNrec = ParentNrec;
end;

vipinterface ClaimDirects implements IClaimDirects;
public:
  constructor Init;
end;

vipinterface ClaimDirectsSp implements IClaimDirectsSp, IModify;

vipinterface ClaimDirectsSpTreeView;
public:
  constructor Init;
  destructor Done;
  procedure SetSp(aSp: IClaimDirectsSp);
  procedure OpenAllNodes;
  procedure CloseAllNodes;
  procedure UnsetTreeBounds;
  procedure SetTreeBounds;
  function JumpToFirst: boolean;
end;

#end
