#include ClaimDirects.vih

#component "AGAT"

interface SelectQty;

table struct tSelectQty (
  crec: comp,
  qty: double
) with index (
  i01 = crec
);

create view
as select *
from tSelectQty tq, tSelectQty;

//#region ISelectQty properties

property ISelectQty.cRec: comp absolute tq.crec;

property ISelectQty.SelectedQty: double absolute tq.qty;

//#endregion

//#region IModify methods

Function IModify.doInsert : Word;
{
  result := insert current tq;
}

Function IModify.doUpdate : Word;
{
  result := update current tq;
}

Function IModify.doDelete : Word;
{
  result := delete current tq;
}

implementation IModify.doFlush  abstract;

//#endregion

//#region ISelectQty methods

procedure ISelectQty.Add(aCrec: comp; aSelectedQty: double);
{
  insert tSelectQty set tSelectQty.crec := aCrec, tSelectQty.qty := aSelectedQty;
}

procedure ISelectQty.Delete(aCrec: comp);
{
  delete tSelectQty where ((aCrec == tSelectQty.crec));
}

procedure ISelectQty.Clear;
{
  delete all tSelectQty;
}

//#endregion

index ISelectQty.iByCrec auto;

end.
