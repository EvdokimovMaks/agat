#include IPlanOmto.obj
#include PlanOmtoActionWithParamsUI.vih
#include System.vih

#component "AGAT"

#include PlanOmtoLinkedDocsManager.vih
interface PlanOmtoLinkedDocsManager;

var
  _createActions: IDictionary;
  _linkActions: IDictionary;

//#region вспомогательные

function GetActionByTidkgal(tidkgal: word; actionDictionary: IDictionary): IPlanOmtoActionWithParamsUI;
{
  result := IPlanOmtoActionWithParamsUI(actionDictionary.ValueGet(tidkgal));
}

procedure RegisterAction(tidkgal: word; aAction: IPlanOmtoActionWithParamsUI; actionDictionary: IDictionary);
{
  actionDictionary.AddKeyValue(tidkgal, aAction);
}

function DoAction(tidkgal: word; aPlanOmto: IPlanOmto; actionDictionary: IDictionary): word;
{
  var a: IPlanOmtoActionWithParamsUI;
  a := GetActionByTidkgal(tidkgal, actionDictionary);
  if a != nullref
  {
    a.InitParams;
    if a.ShowParamsUi = cmDefault
      result := a.DoAction(aPlanOmto);
    else
      result := PlanOmtoActionCanceled;
  }
  else
    result := PlanOmtoActionNotFound;
}

//#endregion

//#region IPlanOmtoLinkedDocsManager

function IPlanOmtoLinkedDocsManager.CreateLinkedDoc(tidkgal: word; aPlanOmto: IPlanOmto): word;
{
  result := DoAction(tidkgal, aPlanOmto, _createActions);
}

function IPlanOmtoLinkedDocsManager.LinkDoc(tidkgal: word; aPlanOmto: IPlanOmto): word;
{
  result := DoAction(tidkgal, aPlanOmto, _linkActions);
}

//#endregion


//#region  vipinterface

function RegisterCreateAction(tidkgal: word; aAction: IPlanOmtoActionWithParamsUI): PlanOmtoLinkedDocsManager;
{
  RegisterAction(tidkgal, aAction, _createActions);
  result := self;
}

function RegisterLinkAction(tidkgal: word; aAction: IPlanOmtoActionWithParamsUI): PlanOmtoLinkedDocsManager;
{
  RegisterAction(tidkgal, aAction, _linkActions);
  result := self;
}

constructor Init;
{
  _createActions := IDictionary(new(System::Dictionary));
  _linkActions   := IDictionary(new(System::Dictionary));
  result := true;
}

//#endregion

end.
