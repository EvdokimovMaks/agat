#include PlanOmto.vih
#include Query.vih
#include IModify.vih

#component "AGAT"

interface PlanOmtoBase;

create view
as select *
from tPlanOmto tpo,
     katnotes
;

//#region IModify
Function IModify.doInsert: Word;
{
  result := insert current tpo;
}

Function IModify.doUpdate: Word;
{
  result := update current tpo;
}

Function IModify.doDelete: Word;
{
  result := delete current tpo;
}

implementation IModify.doFlush abstract;

//#endregion

//#regin IPlanOmto методы, свойства, индексы

implementation IPlanOmto.LoadData abstract;

implementation IPlanOmto.SaveData abstract;

procedure IPlanOmto.InsertWithBuffer(buf: ttplanOmto);
{
  tpo.buffer := buf;
  doInsert;
}

function IPlanOmto.JumpToClaimNrec(aClaimNrec: comp): word;
{
  result := getfirst tpo where ((aClaimNrec == tpo.claimNrec));
}

procedure setState(stateNrec: comp);
{
  tpo.ClaimStateNrec := stateNrec;
  if getfirst katnotes where ((stateNrec == katnotes.nrec)) = tsOk
  {
    tpo.ClaimState := katnotes.status;
    case katnotes.status of
      1: tpo.ClaimAcceptDate := 0;
      2: tpo.ClaimAcceptDate := cur_date;
    end;
  }
  update current tpo;
}

procedure IPlanOmto.SetAccept(value: boolean);
{
  if value
  {
    case tpo.ClaimStateNrec of
      ClaimStateMadeoutTop      : setState(ClaimStateAcceptTop);
      ClaimStateMadeout         : setState(ClaimStateAccept);
      ClaimStateMadeoutReplacing: setState(ClaimStateAcceptReplacing);
    else
      setState(ClaimStateAcceptTop);
    end;
  }
  else
  {
    case tpo.ClaimStateNrec of
      ClaimStateAcceptTop      : setState(ClaimStateMadeoutTop);
      ClaimStateAccept         : setState(ClaimStateMadeout);
      ClaimStateAcceptReplacing: setState(ClaimStateMadeoutReplacing);
    else
      setState(ClaimStateMadeoutTop);
    end;
  }
}

property IPlanOmto.ClaimNrec         : comp   absolute tpo.ClaimNrec         ;
property IPlanOmto.IndentNrec        : comp   absolute tpo.IndentNrec        ;
property IPlanOmto.KatpodrNrec       : comp   absolute tpo.KatpodrNrec       ;
property IPlanOmto.ClaimState        : word   absolute tpo.ClaimState        ;
property IPlanOmto.ClaimStateNrec    : comp   read     tpo.ClaimStateNrec     write setState(result);
property IPlanOmto.DeliverOrgNrec    : comp   absolute tpo.DeliverOrgNrec    ;
property IPlanOmto.KatstroyNrec      : comp   absolute tpo.KatstroyNrec      ;
property IPlanOmto.PersonNrec        : comp   absolute tpo.PersonNrec        ;
property IPlanOmto.DeviceNrec        : comp   absolute tpo.DeviceNrec        ;
property IPlanOmto.GroupmcNrec       : comp   absolute tpo.GroupmcNrec       ;
property IPlanOmto.KatmcNrec         : comp   absolute tpo.KatmcNrec         ;
property IPlanOmto.OtpedNrec         : comp   absolute tpo.OtpedNrec         ;
property IPlanOmto.Tu                : string absolute tpo.Tu                ;
property IPlanOmto.Description       : string absolute tpo.Description       ;
property IPlanOmto.ClaimQty          : double absolute tpo.ClaimQty          ;
property IPlanOmto.ClaimPrice        : double absolute tpo.ClaimPrice        ;
property IPlanOmto.SaldoQty          : double absolute tpo.SaldoQty          ;
property IPlanOmto.RegradeQty        : double absolute tpo.RegradeQty        ;
property IPlanOmto.BasedocQty        : double absolute tpo.BasedocQty        ;
property IPlanOmto.BasedocSum        : double absolute tpo.BasedocSum        ;
property IPlanOmto.PaidSum           : double absolute tpo.PaidSum           ;
property IPlanOmto.DeliveredQty      : double absolute tpo.DeliveredQty      ;
property IPlanOmto.IssuedQty         : double absolute tpo.IssuedQty         ;
property IPlanOmto.IndentDate        : date   absolute tpo.IndentDate        ;
property IPlanOmto.IndentDeliverDate : date   absolute tpo.IndentDeliverDate ;
property IPlanOmto.ClaimAcceptDate   : date   absolute tpo.ClaimAcceptDate   ;
property IPlanOmto.DeliverDatePlan   : date   absolute tpo.DeliverDatePlan   ;
property IPlanOmto.DeliverDateChanged: date   absolute tpo.DeliverDateChanged;
property IPlanOmto.DeliverDateFact   : date   absolute tpo.DeliverDateFact   ;
property IPlanOmto.BasedocDate       : date   absolute tpo.BasedocDate       ;
property IPlanOmto.PaidDate          : date   absolute tpo.PaidDate          ;
property IPlanOmto.DeliverClaimNumber: string[20] absolute tpo.DeliverClaimNumber;
property IPlanOmto.PlanOmtoBuffer    : ttplanOmto read ttplanomto(tpo.buffer) write tpo.buffer := result;
index IPlanOmto.iByClaimNrec auto;

//#endRegion

end.
