#include UserFilterViewmodel.vih
#include UserFilter.vih

#component "AGAT"

#include PlanOmtoFiltersView.vih
interface PlanOmtoFiltersView;

var
  _filters   : PlanOmtoFilters noauto;
  _customerVm: UserFilterByMarkerViewmodelKAU noauto;
  _groupmcVm : UserFilterByMarkerViewmodelKAU noauto;
  _katmcVm   : UserFilterByMarkerViewmodelKAU noauto;
  _indentVm  : UserFilterByMarkerViewmodelKAU noauto;
  _katstroyVm: UserFilterByMarkerViewmodelKAU noauto;
  _personVm  : UserFilterByMarkerViewmodelKAU noauto;
  _katorgVm  : UserFilterByMarkerViewmodelKAU noauto;
  _basedocVm : UserFilterByMarkerViewmodelKAU noauto;
  _statusVm  : UserFilterByMarkerViewmodelKatnotes noauto;

  //TODO: Фильтр по приоритетам нужен?

create view
  (
    customerVmPresentation,
    groupmcVmPresentation,
    katmcVmPresentation,
    indentVmPresentation,
    katstroyVmPresentation,
    personVmPresentation,
    katorgVmPresentation,
    basedocVmPresentation,
    statusVmPresentation
  )
as select
  _customerVm.Presentation,
  _groupmcVm.Presentation,
  _katmcVm.Presentation,
  _indentVm.Presentation,
  _katstroyVm.Presentation,
  _personVm.Presentation,
  _katorgVm.Presentation,
  _basedocVm.Presentation,
  _statusVm.Presentation
;

#declare ScreenFieldsDateFilter(FilterName)
  _filters.#Filtername.IsSet    : noprotect, noFrame;
  _filters.#Filtername.StartDate: noprotect;
  _filters.#Filtername.EndDate  : noprotect;
#end

#declare ScreenFieldsMarkerFilterVM(FilterVMName, FieldName)
  #FilterVMName.Filter.IsSet: noprotect, noFrame;
  #FieldName: protect, pickbutton;
#end

#declare ScreenFieldsTextFilter(FilterName)
  _filters.#Filtername.IsSet    : noprotect, noFrame;
  _filters.#Filtername.Text     : noprotect;
#end

screen scFilters;
fields
  #ScreenFieldsMarkerFilterVM(_customerVm, customerVmPresentation)
  #ScreenFieldsMarkerFilterVM(_groupmcVm , groupmcVmPresentation )
  #ScreenFieldsMarkerFilterVM(_katmcVm   , katmcVmPresentation   )
  #ScreenFieldsMarkerFilterVM(_indentVm  , indentVmPresentation  )
  #ScreenFieldsMarkerFilterVM(_katstroyVm, katstroyVmPresentation)
  #ScreenFieldsMarkerFilterVM(_personVm  , personVmPresentation  )
  #ScreenFieldsMarkerFilterVM(_katorgVm  , katorgVmPresentation  )
  #ScreenFieldsMarkerFilterVM(_basedocVm , basedocVmPresentation )
  #ScreenFieldsMarkerFilterVM(_statusVm  , statusVmPresentation  )
  #ScreenFieldsTextFilter(DeliverClaimNumberFilter)
  #ScreenFieldsDateFilter(BasedocDateFilter)
buttons
  cmFilter;
<<

<.               Обновить                .>

`Фильтры по атрибутам:`
 [:] Заказчик`      .@@@@@@@@@@@@@@@@@@@@@@
 [:] Группа МЦ`     .@@@@@@@@@@@@@@@@@@@@@@
 [:] Матценность`   .@@@@@@@@@@@@@@@@@@@@@@
 [:] Заявка`        .@@@@@@@@@@@@@@@@@@@@@@
 [:] Заказ`         .@@@@@@@@@@@@@@@@@@@@@@
 [:] Отв. сотрудник`.@@@@@@@@@@@@@@@@@@@@@@
 [:] Поставщик`     .@@@@@@@@@@@@@@@@@@@@@@
 [:] Счет`          .@@@@@@@@@@@@@@@@@@@@@@
 [:] Статус`        .@@@@@@@@@@@@@@@@@@@@@@
 [:] Заявка поставщику`.@@@@@@@@@@@@@@@@@@@

`Фильтры по периоду:`
 [.] Счет` с .@@@@@@@@@@ по .@@@@@@@@@@
>>
end;

function GetVmByField(aField: longint): IUserFilterMarkerViewmodel;
{
  case aField of
    #customerVmPresentation: result := IUserFilterMarkerViewmodel(_customerVm);
    #groupmcVmPresentation : result := IUserFilterMarkerViewmodel(_groupmcVm );
    #katmcVmPresentation   : result := IUserFilterMarkerViewmodel(_katmcVm   );
    #indentVmPresentation  : result := IUserFilterMarkerViewmodel(_indentVm  );
    #katstroyVmPresentation: result := IUserFilterMarkerViewmodel(_katstroyVm);
    #personVmPresentation  : result := IUserFilterMarkerViewmodel(_personVm  );
    #katorgVmPresentation  : result := IUserFilterMarkerViewmodel(_katorgVm  );
    #basedocVmPresentation : result := IUserFilterMarkerViewmodel(_basedocVm );
    #statusVmPresentation  : result := IUserFilterMarkerViewmodel(_statusVm  );
  else
    result := nullref;
  end;
}

handleevent

cmFilter: OnClickRefresh;

cmPick:
{
  var vm: IUserFilterMarkerViewmodel;
  vm := GetVmByField(curfield);
  if vm != nullref
    if vm.Pick
      Rereadrecord;
}

cmDelOnProtect:
{
  var vm: IUserFilterMarkerViewmodel;
  vm := GetVmByField(curfield);
  if vm != nullref
  {
    vm.SetDefault;
    Rereadrecord;
  }
}

cmHotkeys     : OnHandleevent(cmHotkeys     );
cmCalcUslParam: OnHandleevent(cmCalcUslParam);
cmOpenFile    : OnHandleevent(cmOpenFile    );
cmNal         : OnHandleevent(cmNal         );
cmOneRec      : OnHandleevent(cmOneRec      );

end;

constructor Create(aFilters: PlanOmtoFilters);
{
  Filters := aFilters;
  result := _filters != nullref;
}

procedure CreateViewmodels;
{
  _customerVm := new(UserFilterByMarkerViewmodelKAU,
                     ConstructorWithKAU(_filters.CustomerFilter, 'Заказчик', 2));

  _groupmcVm  := new(UserFilterByMarkerViewmodelKAU,
                     ConstructorWithKAU(_filters.GroupmcFilter, 'Группа МЦ', 8));

  _katmcVm    := new(UserFilterByMarkerViewmodelKAU,
                     ConstructorWithKAU(_filters.KatmcFilter, 'Матценность', 4));

  _indentVm   := new(UserFilterByMarkerViewmodelKAU,
                     ConstructorWithKAU(_filters.IndentFilter, 'Заявка', 26));

  _katstroyVm := new(UserFilterByMarkerViewmodelKAU,
                     ConstructorWithKAU(_filters.KatstroyFilter, 'Заказ', 40));

  _personVm   := new(UserFilterByMarkerViewmodelKAU,
                     ConstructorWithKAU(_filters.PersonFilter, 'Отв. сотрудник', 3));

  _katorgVm   := new(UserFilterByMarkerViewmodelKAU,
                     ConstructorWithKAU(_filters.DeliverOrgFilter, 'Поставщик', 1));

  _basedocVm  := new(UserFilterByMarkerViewmodelKAU,
                     ConstructorWithKAU(_filters.BasedocFilter, 'Счет', 6));

  _statusVm   := new(UserFilterByMarkerViewmodelKatnotes,
                     ConstructorWithViddoc(_filters.ClaimStatusFilter, 'Статус', 1001));
}

procedure SetFiltersProperty(value: PlanOmtoFilters);
{
  _filters := value;
  CreateViewmodels;
}

property Filters: PlanOmtoFilters read _filters write SetFiltersProperty(result);

end.
