#component "AGAT"

interface PlanOMTOLinkBasedoc 'Привязка позиций плана к позициям ДО', escclose, doaccept;

sql query q1 =
select sps.nrec,
       sps.cmcusl,
       coalesce(sm.cobj,#comp(0)),
       sps.kol,
       coalesce(linked.qty, 0)
from stepdoc
join spstep sps on stepdoc.nrec = sps.cstepdoc and 1 = sps.prmc
left join specmtr sm on #comp(0001000000000001h) = sm.csaldtune and 1104 = sm.cotable and sps.nrec = sm.cspec
left join (select spstep.nrec as SpstepNrec, sum(valspmnp.vprice) as Qty
           from spstep
           join spobjacc spoa on 35 = spoa.typeobj and spstep.nrec = spoa.cobject and 31 = spoa.typepos
           join spmnpl on spoa.cpos = spmnpl.nrec
           join valspmnp on spmnpl.nrec = valspmnp.cspmnpl
           group by spstep.nrec
          ) linked on sps.nrec = linked.SpstepNrec
where stepdoc.cbasedoc = ?
;

sql query q2 =
select spm.nrec,
       spl.nrec,
       vsp.nrec,
       spm.cizd,
       spm.canval1,
       spm.canval4,
       vsp.vprice,
       #comp(0)
from spmnplan spm
join spmnpl spl on spm.nrec = spl.cspmnplan and 25 = spl.wkolan and 29 = spl.wkodgr4 and ? = spl.canval4
join valspmnp vsp on spl.nrec = vsp.cspmnpl
where spm.nrec = ? and spm.cmnplan = ? and spm.canval5 = #comp(0)
;

table struct tSpstep (
  SpstepNrec: comp,
  KatmcNrec: comp,
  KatstroyNrec: comp,
  SpstepQty: double,
  LinkedQty: double
) with index (
  i00 = SpstepNrec,
  i01 = KatmcNrec + KatstroyNrec
);

table struct tPlanSpec (
  SpmnplanNrec: comp,
  SpmnplNrec  : comp,
  ValspmnpNrec: comp,
  KatmcNrec   : comp,
  KatstroyNrec: comp,
  IndentNrec  : comp,
  Qty         : double,
  SpstepNrec  : comp
);

var
  _mnplanNrec: comp;
  _basedocNrec: comp;

create view
as select *
from mnplan mnp, pick, tSpstep, tPlanSpec, tPlanSpec brPlanSpec, tSpstep brLinkedSpstep, indent brindent, tSpstep brSpstep,
     objacct oa, spobjacc spoa, spobjacc spoa1, spmnplan, basedoc, spstep
where ((
  _mnplanNrec == mnp.nrec and
  20000       == pick.wlist and
  brPlanSpec.SpstepNrec == brLinkedSpstep.SpstepNrec and
  brPlanSpec.IndentNrec == brIndent.nrec
));

parameters _mnplanNrec;

window wPickSpstep 'Выбор позиции счета', doaccept, escclose;
browse brPickSpstep;
table brSpstep;
fields
  if(getanykau(0, 4, brSpstep.KatmcNrec), givenanname(1), '') 'Наименование матценности': [30], protect;
  if(getanykau(0, 40, brSpstep.KatstroyNrec), givenanname(1), '') 'Заказ': [20], protect;
  brSpstep.SpstepQty 'Количество по счету': [8,3], protect;
  brSpstep.LinkedQty 'Количество распределено': [8,3], noprotect;
  (brSpstep.SpstepQty - brSpstep.LinkedQty) 'Количество осталось': [8,3], protect;
end; //browse brPickSpstep
handleevent
  cmDefault:
  {
    if (brSpstep.SpstepNrec = brPlanSpec.SpstepNrec) exit;
    var resultQty: double;
    resultQty := brSpstep.SpstepQty - brSpstep.LinkedQty - brPlanSpec.Qty;
    if (resultQty < -0.0001)
    {
      message('Нельзя привязать к этой позиции ДО, т.к. количество для распределения больше'#13''+
              'чем остаток по позиции ДО ('+double(brSpstep.SpstepQty - brSpstep.LinkedQty)+' - '+brPlanSpec.Qty+' = '+resultQty+')');
      Stop;
    }
  }
end;
end; //window wPickSpstep

browse br1;
show(,,,19);
table brPlanSpec
fields
  if(getanykau(0, 4, brPlanSpec.KatmcNrec), givenanname(1), '') 'План - наименование матценности': [40], protect;
  if(getanykau(0, 40, brPlanSpec.KatstroyNrec), givenanname(1), '') 'План - заказ': [10], protect;
  if(getfirst brIndent = tsOk, brIndent.noind+' от '+brIndent.dind, '') 'План - заявка': [10], protect;
  brPlanSpec.Qty 'План - количество к закупке': [8,3], protect;
  [LinkedSpstepKatmc] if(getfirst brLinkedSpstep = tsOk, if(getanykau(0, 4, brLinkedSpstep.KatmcNrec), givenanname(1), ''), '') 'Счет - наименование матценности': [30], protect, pickbutton;
  [LinkedSpstepKatstroy] if(getfirst brLinkedSpstep = tsOk, if(getanykau(0, 40, brLinkedSpstep.KatstroyNrec), givenanname(1), ''), '') 'Счет - заказ': [10], protect, pickbutton;
end; //browse br1

screen sc1;
show(,20,,) fixed_y;
buttons
  cmDoOk, default;
<<

                                                                                      <. Сохранить изменения.>
>>
end; //screen sc1

procedure SaveDistribution;
{
  _loop tPlanSpec where (tPlanSpec.SpstepNrec != 0)
  {
    if getfirst oa where (( 34 == oa.typeown and _basedocNrec == oa.cowner and 29 == oa.typeobj and _mnplanNrec == oa.cobject )) != tsOk
    {
      clearbuffer(#oa);
      oa.typeown := 34;
      oa.cowner := _basedocNrec;
      oa.kindrec := 1;
      oa.typeobj := 29;
      oa.cobject := _mnplanNrec;
      oa.vidsopr := 101;
      insert current oa;
    }

    if getfirst spoa where (( 31 == spoa.typepos and tPlanSpec.SpmnplNrec == spoa.cpos and oa.nrec == spoa.cobjacct and 0 == spoa.typehier)) != tsOk
    {
      clearbuffer(#spoa);
      spoa.cobjacct := oa.nrec;
      spoa.kindrec := 1;
      spoa.typenorm := 1;
      spoa.typepos := 31;
      spoa.cpos := tPlanSpec.SpmnplNrec;
      spoa.typeed := 1;
      if getfirst spmnplan where (( tPlanSpec.SpmnplanNrec == spmnplan.nrec )) = tsOk
      {
        spoa.cotped := spmnplan.cotped;
      }
      spoa.kolcpos := tPlanSpec.Qty;
      spoa.vidsopr := 101;
      insert current spoa;
    }

    if getfirst spoa1 where ((spoa.nrec == spoa1.cspobjacc and 35 == spoa1.typeobj and tPlanSpec.SpstepNrec == spoa1.cobject)) != tsOk
    {
      clearbuffer(#spoa1);
      spoa1.cobjacct := oa.nrec;
      spoa1.kindrec := 1;
      spoa1.typepos := 31;
      spoa1.cpos := tPlanSpec.SpmnplNrec;
      if getfirst spstep where ((tPlanSpec.SpstepNrec == spstep.nrec)) = tsOk
      {
        spoa1.cotped := spstep.cotped;
      }
      spoa1.kolcpos := tPlanSpec.Qty;
      if getfirst basedoc where ((_basedocNrec == basedoc.nrec)) = tsOk
      {
        spoa1.startdate := basedoc.ddoc;
      }
      spoa1.typeobj := 35;
      spoa1.cobject := tPlanSpec.SpstepNrec;
      spoa1.typehier := 1;
      spoa1.cspobjacc := spoa.nrec;
      spoa1.vidsopr := 101;
      insert current spoa1;
    }

    if getfirst spmnplan where ((tPlanSpec.SpmnplanNrec == spmnplan.nrec)) = tsOk
    {
      spmnplan.canval5 := _basedocNrec;
      spmnplan.wkodgr5 := 6;
      spmnplan.crolean5 := 0001000000000011h;
      update current spmnplan;
    }

  }
}

function DistributeSpec: boolean;
{
  result := true;
  _loop tPlanSpec
  {
    if getfirst tSpstep where ((tPlanSpec.KatmcNrec == tSpstep.KatmcNrec and
                                tPlanSpec.KatstroyNrec == tSpstep.KatstroyNrec and
                                ( (tSpstep.SpstepQty - tSpstep.LinkedQty) >= tPlanSpec.Qty ) )) = tsOk
    {
      update current tPlanSpec set tPlanSpec.SpstepNrec := tSpstep.SpstepNrec;
      update current tSpstep set tSpstep.LinkedQty := tSpstep.LinkedQty + tPlanSpec.Qty;
    }
    else
    {
      result := false;
    }
  }
}

function tPlanSpecPrepare: boolean;
{
  result := false;

  var stmt: longint;
  stmt := sqlAllocStmt;

  sqlPrepare(stmt, q2);

  _loop pick
  {
    sqlBindParam(stmt, 1, _mnplanNrec);
    sqlBindParam(stmt, 2, pick.crec);
    sqlBindParam(stmt, 3, _mnplanNrec);

    if sqlExecute(stmt) != tsOk
    {
      message('Ошибка выполнения запроса выборки спецификации плана');
      sqlFreeStmt(stmt);
      exit;
    }

    sqlFetchInto(stmt,#tPlanSpec);
  }

  sqlFreeStmt(stmt);

  if recordsintable(#tPlanSpec) = 0
  {
    message('Все помеченные позиции уже распределены');
    exit;
  }

  result := true;
}

function tSpstepPrepare(basedocNrec: comp): boolean;
{
  var stmt: longint;

  stmt := sqlAllocStmt;
  sqlPrepare(stmt, q1);

  sqlBindParam(stmt, 1, basedocNrec);

  if sqlExecute(stmt) != tsOk
  {
    message('Ошибка выполнения запроса выборки спецификации ДО');
    sqlFreeStmt(stmt);
    result := false;
  }
  else
  {
    sqlFetchInto(stmt, #tSpstep);
    sqlFreeStmt(stmt);
    result := true;
  }

}

handleevent

cmDelOnProtect:
{
  if getfirst brLinkedSpstep = tsOk
    update current brLinkedSpstep set brLinkedSpstep.LinkedQty := brLinkedSpstep.LinkedQty - brPlanSpec.qty;

  update current brPlanSpec set brPlanSpec.SpstepNrec := 0;

  rereadrecord(#brPlanSpec);
}

cmPick:
{
  if runwindowmodal(wPickSpstep) = cmDefault
  {
    if getfirst brLinkedSpstep = tsOk
      update current brLinkedSpstep set brLinkedSpstep.LinkedQty := brLinkedSpstep.LinkedQty - brPlanSpec.qty;

    update current brPlanSpec set brPlanSpec.SpstepNrec := brSpstep.SpstepNrec;

    if getfirst brLinkedSpstep = tsOk
      update current brLinkedSpstep set brLinkedSpstep.LinkedQty := brLinkedSpstep.LinkedQty + brPlanSpec.qty;
  }
  rereadrecord(#brPlanSpec);
}

cmDoOk:
{
  SaveDistribution;
  closeinterface(cmDefault);
}

cminit:
{
  if getfirst mnp != tsOk
  {
    message('Некорректная ссылка на заголовок плана');
    closeinterface(cmCancel);
  }

  delete all tPlanSpec;
  if not tPlanSpecPrepare exit;

  var stepdocNrec, orgNrec : Comp;
  var basedocSum : Double;
  var rslt: longint;

  rslt := runinterface(L_COMMON::GETDBASESTAT, true, 2, 101, _basedocNrec, stepdocNrec, orgNrec, basedocSum, 2);

  if (rslt = cmDefault)
  {
    delete all tSpstep;
    if tSpstepPrepare(_basedocNrec)
      if DistributeSpec
      {
        SaveDistribution;
        closeinterface(cmDefault);
      }
  }
  else
    closeinterface(cmCancel);
}
end;

end.
