#include PlanOmto.vih

#component "AGAT"

interface PlanOmtoMain 'План ОМТО';

var
  _filters     : PlanOmtoFilters noauto;
  _queryText   : ISqlString;
  _dataProvider: IPlanOmtoDataProvider;
  _dataSaver   : IPlanOmtoDataSaver;
  _planOmto    : IPlanOmto;
  _planOmtoView: PlanOmtoView noauto;
  _filtersView : PlanOmtoFiltersView noauto;
  _helper      : PlanOmtoHelper;

embedded embFilters 'Фильтры' interface _filtersView;
show (,,45,) fixed_x;
end;

embedded embPlanOmto '' interface _planOmtoView;
show (46,,,);
end;

procedure Refresh;
{
  _planOmto.Load;
  _planOmtoView.Refresh;
}

procedure OnFiltersClickRefresh;
{
  refresh;
}

procedure toggleFiltersPanelVisiblity;
{
  if cfsGetCurrentContainerSelf != 0
  {
    var isVisible: boolean;
    if cfsGetProp('EMBFILTERS', 'Visible', isVisible) = cfOk
    {
      cfsSetProp('EMBFILTERS', 'Hidden' , isVisible);
      cfsSetProp('EMBFILTERS', 'Visible', not isVisible);
      cfsSetProp('EMBPLANOMTO', 'RectA_X', if(not isVisible, 46, 1));
    }
  }
}

procedure OnHandleevent(cmd: word); forward;

procedure AddLinkedDocsMenu(m: longint; lm: TLinkedDocsMenu; DocTypeName: string);
{
  if lm.ItemsCount = 1
    ConcatMenu(m, lm.MenuId);
  else if lm.ItemsCount = 0
    AddMenuItem(m, 'Не сформированы ' + DocTypeName, word(-1));
  else if lm.ItemsCount > 1
    AddSubmenu(m, lm.MenuId, 'Открыть ' + DocTypeName, '', hcNoContext);
}

procedure OnCmHotkeys;
{
  var m: longint;
  m := LoadMenu('mnuAgatPlanOmtoView', false);
  AddMenuItem(m, 'separator', word(-1));
  AddLinkedDocsMenu(m, _helper.GetLinkedBasedocsMenu(_planOmto.IndentNrec, _planOmto.KatmcNrec), 'ДО');
  AddLinkedDocsMenu(m, _helper.GetLinkedIncomeKatsoprsMenu(_planOmto.IndentNrec, _planOmto.KatmcNrec),
                    'приходные накладные');
  AddLinkedDocsMenu(m, _helper.GetLinkedRegradeKatsoprsMenu(_planOmto.IndentNrec, _planOmto.KatmcNrec),
                    'акты на пересортицу');
  AddLinkedDocsMenu(m, _helper.GetLinkedIssueKatsoprsMenu(_planOmto.IndentNrec, _planOmto.KatmcNrec),
                    'накладные на отпуск в пр-во');
  OnHandleevent(RunLoadMenu(m));
}

procedure OnHandleevent(cmd: word);
{
  case cmd of
    cmHotkeys     : OnCmHotkeys;
    cmCalcUslParam: _planOmtoView.SetAcceptMarked;     //Alt+W  Принять к исполнению помеченные
    cmOpenFile    : _planOmtoView.UnsetAcceptMarked;   //Alt+R  Отменить прием к исполнению помеченных
    cmNal         : toggleFiltersPanelVisiblity;       //Alt+F  Показать/скрыть настройки
    cmOneRec      : _planOmtoView.SetDeliverOrgByBasedocMarked; //Alt+K  Установить поставщика из ДО
  end;
}

handleevent

cmInit:
{
  _filters      := new(PlanOmtoFilters);
  _queryText    := ISqlString(new(PlanOmtoQueryText, PlanOmtoQueryText(_filters)));
  _dataProvider := IPlanOmtoDataProvider(new(PlanOmtoDataProvider, Create(_queryText)));
  _dataSaver    := IPlanOmtoDataSaver(new(PlanOmtoDataSaverCurrent));
  _planOmto     := IPlanOmto(new(PlanOmto, Create(_dataProvider, _dataSaver)));
  _planOmtoView := new(PlanOmtoView, Create(_planOmto));
  _filtersView  := new(PlanOmtoFiltersView, Create(_filters));

  bindEvent(OnFiltersClickRefresh, _filtersView.OnClickRefresh);
  bindEvent(OnHandleevent, _planOmtoView.OnHandleevent);
  bindEvent(OnHandleevent, _filtersView.OnHandleevent);

  _filters.InitFilter;

  refresh;
}

cmDone:
{
  _filters.DoneFilter;
}

end;

end.

mnuAgatPlanOmtoView Menu
{
- 'Показать/скрыть настройки', cmNal, 'Показать/скрыть панель с фильтрами', , 'Alt+F', kbAltF, sci1Esc;
- 'Принять к исполнению помеченные', cmCalcUslParam,
  'Установить статус "Принята к исполнению" у помеченных позиций', , 'Alt+W', kbAltW, sci1Esc;
- 'Отменить прием к исполнению помеченных', cmOpenFile,
  'Установить статус "Оформляемый" у помеченных позиций', , 'Alt+R', kbAltR, sci1Esc;
- 'Установить поставщика из ДО у помеченных позиций', cmOneRec,
  '', , 'Alt+K', kbAltK, sci1Esc;
}
