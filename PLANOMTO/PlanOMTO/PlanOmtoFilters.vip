#include UserFilter.vih

#component "AGAT"

#include PlanOmtoFilters.vih
interface PlanOmtoFilters;

var
  _customerFilter   : IUserFilterByMarker;
  _groupmcFilter    : IUserFilterByMarker;
  _katmcFilter      : IUserFilterByMarker;
  _indentFilter     : IUserFilterByMarker;
  _katstroyFilter   : IUserFilterByMarker;
  _personFilter     : IUserFilterByMarker;
  _deliverOrgFilter : IUserFilterByMarker;
  _basedocFilter    : IUserFilterByMarker;
  _claimStatusFilter: IUserFilterByMarker;
  _priorityFilter   : IUserFilterByMarker;
  _basedocDateFilter: IUserFilterByPeriod;
  _deliverClaimNumberFilter: IUserFilterByText;


function NewUserFilterByMarker(aDSKName: string): IUserFilterByMarker;
{
  var f: IUserFilterByMarker;
  f := IUserFilterByMarker(
    new(UserFilterByMarker, WithDSKName('planomto_'+aDSKName))
  );
  AddUserFilter(IUserFilter(f));
  result := f;
}

function NewUserFilterByPeriod(aDSKName: string): IUserFilterByPeriod;
{
  var f: IUserFilterByPeriod;
  f := IUserFilterByPeriod(
    new(UserFilterByPeriod, WithDSKName('planomto_'+aDSKName))
  );
  AddUserFilter(IUserFilter(f));
  result := f;
}

function NewUserFilterByText(aDSKName: string): IUserFilterByText;
{
  var f: IUserFilterByText;
  f := IUserFilterByText(
    new(UserFilterByText, WithDSKName('planomto_'+aDSKName))
  );
  AddUserFilter(IUserFilter(f));
  result := f;
}

constructor Init;
{
  inherited::Init;

  _customerFilter    := NewUserFilterByMarker('customerFilter');
  _groupmcFilter     := NewUserFilterByMarker('groupmcFilter');
  _katmcFilter       := NewUserFilterByMarker('katmcFilter');
  _indentFilter      := NewUserFilterByMarker('indentFilter');
  _katstroyFilter    := NewUserFilterByMarker('katstroyFilter');
  _personFilter      := NewUserFilterByMarker('personFilter');
  _deliverOrgFilter  := NewUserFilterByMarker('deliverOrgFilter');
  _basedocFilter     := NewUserFilterByMarker('basedocFilter');
  _claimStatusFilter := NewUserFilterByMarker('claimStatusFilter');
  _priorityFilter    := NewUserFilterByMarker('priorityFilter');
  _basedocDateFilter := NewUserFilterByPeriod('basedocDateFilter');
  _deliverClaimNumberFilter := NewUserFilterByText('deliverClaimNumberFilter');

  result := _groupmcFilter     != nullref
        and _katmcFilter       != nullref
        and _indentFilter      != nullref
        and _customerFilter    != nullref
        and _katstroyFilter    != nullref
        and _personFilter      != nullref
        and _deliverOrgFilter  != nullref
        and _basedocFilter     != nullref
        and _claimStatusFilter != nullref
        and _priorityFilter    != nullref
        and _basedocDateFilter != nullref
        and _deliverClaimNumberFilter != nullref;
}

property CustomerFilter   : IUserFilterByMarker absolute _customerFilter   ;
property GroupmcFilter    : IUserFilterByMarker absolute _groupmcFilter    ;
property KatmcFilter      : IUserFilterByMarker absolute _katmcFilter      ;
property IndentFilter     : IUserFilterByMarker absolute _indentFilter     ;
property KatstroyFilter   : IUserFilterByMarker absolute _katstroyFilter   ;
property PersonFilter     : IUserFilterByMarker absolute _personFilter     ;
property DeliverOrgFilter : IUserFilterByMarker absolute _deliverOrgFilter ;
property BasedocFilter    : IUserFilterByMarker absolute _basedocFilter    ;
property ClaimStatusFilter: IUserFilterByMarker absolute _claimStatusFilter;
property PriorityFilter   : IUserFilterByMarker absolute _priorityFilter   ;
property BasedocDateFilter: IUserFilterByPeriod absolute _basedocDateFilter;
property DeliverClaimNumberFilter: IUserFilterByText absolute _deliverClaimNumberFilter;
end.
