#include ClaimOverheadsTotal.vih
#include QueryTextWithUserFilter.vih
#include QueryTextWithUserFilterExt1.vih

#component "AGAT"

vipinterface ClaimOverheadsTotalQueryTextBase(QueryText);
public:
  procedure IQueryText.CreateSelect (var sqlString: longint; params: IParams = nullref);
  procedure IQueryText.CreateFrom   (var sqlString: longint; params: IParams = nullref);
  procedure IQueryText.CreateJoin   (var sqlString: longint; params: IParams = nullref);
  procedure IQueryText.CreateWhere  (var sqlString: longint; params: IParams = nullref);
  procedure IQueryText.CreateGroupBy(var sqlString: longint; params: IParams = nullref);
  procedure IQueryText.CreateOrderBy(var sqlString: longint; params: IParams = nullref);
end;

interface ClaimOverheadsTotalQueryTextBase;

//#region Queries

sql query qSelect  = insert tData (CostitemNrec, KatmcNrec, KatpodrNrec, SpmnplanNrec, QtyTotal, Price, SumTotal,
                                   Qty[1], Sum[1], Ordered[1],
                                   Qty[2], Sum[2], Ordered[2],
                                   Qty[3], Sum[3], Ordered[3],
                                   Qty[4], Sum[4], Ordered[4],
                                   Qty[5], Sum[5], Ordered[5],
                                   Qty[6], Sum[6], Ordered[6],
                                   Qty[7], Sum[7], Ordered[7],
                                   Qty[8], Sum[8], Ordered[8],
                                   Qty[9], Sum[9], Ordered[9],
                                   Qty[10], Sum[10], Ordered[10],
                                   Qty[11], Sum[11], Ordered[11],
                                   Qty[12], Sum[12], Ordered[12])
                     select spmnplan.canval1 as CostitemNrec,
                            katmc.nrec       as KatmcNrec,
                            katpodr.nrec     as KatpodrNrec,
                            spmnplan.nrec    as SpmnplanNrec,
                            valspmnp.kol     as QtyTotal,
                            valspmnp.price   as Price,
                            valspmnp.vprice  as SumTotal;

sql query qFrom    = from mnplan;

sql query qJoin    = join fpperiod on fpperiod.nrec = mnplan.canval1
                     join katpodr  on katpodr.nrec = mnplan.canval2
                     join spmnplan on spmnplan.cmnplan = mnplan.nrec and spmnplan.typeizd = 1
                     join katmc    on katmc.nrec = spmnplan.cizd
                     left join spmnpl on spmnpl.cspmnplan = spmnplan.nrec and spmnpl.wkolan = 25 and spmnpl.wkodgr4 = 29 and spmnpl.canval4 = mnplan.nrec
                     left join valspmnp on valspmnp.cspmnpl = spmnpl.nrec and valspmnp.num = 1

                     join fpperiod perQ1 on perQ1.cmain = fpperiod.cmain and perQ1.cnode = fpperiod.nrec and perQ1.levelcode = '01'
                     join fpperiod perm1 on perm1.cmain = perQ1.cmain and perm1.cnode = perQ1.nrec and perm1.levelcode = '01'
                     join fpperiod perm2 on perm2.cmain = perQ1.cmain and perm2.cnode = perQ1.nrec and perm2.levelcode = '02'
                     join fpperiod perm3 on perm3.cmain = perQ1.cmain and perm3.cnode = perQ1.nrec and perm3.levelcode = '03'

                     join fpperiod perQ2 on perQ2.cmain = fpperiod.cmain and perQ2.cnode = fpperiod.nrec and perQ2.levelcode = '02'
                     join fpperiod perm4 on perm4.cmain = perQ2.cmain and perm4.cnode = perQ2.nrec and perm4.levelcode = '01'
                     join fpperiod perm5 on perm5.cmain = perQ2.cmain and perm5.cnode = perQ2.nrec and perm5.levelcode = '02'
                     join fpperiod perm6 on perm6.cmain = perQ2.cmain and perm6.cnode = perQ2.nrec and perm6.levelcode = '03'

                     join fpperiod perQ3 on perQ3.cmain = fpperiod.cmain and perQ3.cnode = fpperiod.nrec and perQ3.levelcode = '03'
                     join fpperiod perm7 on perm7.cmain = perQ3.cmain and perm7.cnode = perQ3.nrec and perm7.levelcode = '01'
                     join fpperiod perm8 on perm8.cmain = perQ3.cmain and perm8.cnode = perQ3.nrec and perm8.levelcode = '02'
                     join fpperiod perm9 on perm9.cmain = perQ3.cmain and perm9.cnode = perQ3.nrec and perm9.levelcode = '03'

                     join fpperiod perQ4 on perQ4.cmain = fpperiod.cmain and perQ4.cnode = fpperiod.nrec and perQ4.levelcode = '04'
                     join fpperiod perm10 on perm10.cmain = perQ4.cmain and perm10.cnode = perQ4.nrec and perm10.levelcode = '01'
                     join fpperiod perm11 on perm11.cmain = perQ4.cmain and perm11.cnode = perQ4.nrec and perm11.levelcode = '02'
                     join fpperiod perm12 on perm12.cmain = perQ4.cmain and perm12.cnode = perQ4.nrec and perm12.levelcode = '03';

sql query qWhere   = where mnplan.cwayaccou = #comp(00010000000001E3h);

sql query qGroupBy = ;

sql query qOrderBy = ;

//#endregion

procedure IQueryText.CreateSelect (var sqlString: longint; params: IParams = nullref);
{
  params := params;
  sqlAddStr(sqlString, qSelect);
  var i: byte = 0;
  for(i := 1; i <= 12; i++)
    sqlAddStr(sqlString, replace(', coalesce(vsp&.kol, 0) as Qty&, coalesce(vsp&.vprice, 0) as Sum&, coalesce(tOrderedInMonth&.Qty, 0) as Ordered&', '&', i));
}
procedure IQueryText.CreateFrom   (var sqlString: longint; params: IParams = nullref);
{
  sqlAddStr(sqlString, qFrom); params := params;
}
procedure IQueryText.CreateJoin   (var sqlString: longint; params: IParams = nullref);
{
  params := params;
  sqlAddStr(sqlString, qJoin);
  var i: byte = 0;
  for(i := 1; i <= 12; i++)
  {
    sqlAddStr(sqlString,
                replace('left join spmnpl spl& on spl&.cspmnplan = spmnplan.nrec and spl&.wkolan = 1 and spl&.wkodgr4 = 21 and spl&.canval4 = perm&.nrec', '&', i));
    sqlAddStr(sqlString,
                replace('left join valspmnp vsp& on vsp&.cspmnpl = spl&.nrec and vsp&.num = 1', '&', i));
    sqlAddStr(sqlString,'left join (select spoa.cpos as spmnplNrec, sum(spoa.kolcpos) as Qty');
    sqlAddStr(sqlString,'           from claim');
    sqlAddStr(sqlString,'           join spobjacc spoa on spoa.typeobj = 13 and spoa.cobject = claim.nrec and spoa.typepos = 31 and spoa.cpos <> #comp(0)');
    sqlAddStr(sqlString,
                replace('           group by spoa.cpos) tOrderedInMonth& on tOrderedInMonth&.spmnplNrec = spl&.nrec', '&', i));
  }
}
procedure IQueryText.CreateWhere  (var sqlString: longint; params: IParams = nullref);
{
  sqlAddStr(sqlString, qWhere); params := params;
}
procedure IQueryText.CreateGroupBy(var sqlString: longint; params: IParams = nullref);
{
  sqlAddStr(sqlString, qGroupBy); params := params;
}
procedure IQueryText.CreateOrderBy(var sqlString: longint; params: IParams = nullref);
{
  sqlAddStr(sqlString, qOrderBy); params := params;
}

end.

interface ClaimOverheadsTotalQueryText;

var
  _filters: ClaimOverheadsTotalFilters noauto;
  _queryText: IQueryText;

constructor ClaimOverheadsTotalQueryText(filters: ClaimOverheadsTotalFilters);
{
  result := true;
  _filters := filters;
  _queryText := IQueryText(new(ClaimOverheadsTotalQueryTextBase));
  _queryText := _queryText
                //По подразделению
                .Decorate(IQueryTextDecorator(
                  new(WhereFieldWithMarkerFilter,
                      WhereFieldWithMarkerFilter(_filters.KatpodrFilter, 'katpodr.nrec'))
                ))
                //По годам
                .Decorate(IQueryTextDecorator(
                  new(WhereFieldWithBetweenWordFilter,
                      WhereFieldWithBetweenWordFilter(_filters.YearFilter, 'year(datetime(fpperiod.dbeg,0))'))
                ))
                ;

}

procedure ISqlString.Create(var sqlString: longint; params: IParams = nullref);
{
  _queryText.Create(sqlString, params);
}

end.
