#include UserFilterExt1.vih

#component "AGAT"

interface UserFilterBetweenWords;

var
  _minValue: word;
  _maxValue: word;
  _defaultMinValue: word;
  _defaultMaxValue: word;

function IUserFilterBetweenWords.InitFilter: boolean;
{
  result := false;
  if inherited::InitFilter
  {
    if not readmydsk(_minValue, getDSKVarName('minValue'), false) _minValue := _defaultMinValue;
    if not readmydsk(_maxValue, getDSKVarName('maxValue'), false) _maxValue := _defaultMaxValue;
    result := true;
  }
}

function IUserFilterBetweenWords.DoneFilter: boolean;
{
  result := false;
  if inherited::DoneFilter
  {
    savemydsk(_minValue, getDSKVarName('minValue'));
    savemydsk(_maxValue, getDSKVarName('maxValue'));
    result := true;
  }
}

function IUserFilterBetweenWords.SetDefault: boolean;
{
  result := false;
  if inherited::SetDefault
  {
    _minValue := _defaultMinValue;
    _maxValue := _defaultMaxValue;
    result := true;
  }
}

property IUserFilterBetweenWords.DefaultMinValue: word absolute _defaultMinValue;
property IUserFilterBetweenWords.DefaultMaxValue: word absolute _defaultMaxValue;
property IUserFilterBetweenWords.MinValue: word absolute _minValue;
property IUserFilterBetweenWords.MaxValue: word absolute _maxValue;

end.
