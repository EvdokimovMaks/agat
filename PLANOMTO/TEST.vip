#include Query.vih

Function MoveCompToDouble (
  Comp
) : Double;
external 'G_ZARPL.DLL';

interface FuckThisShit;

table struct t (
  nrec    : comp,
  MatHelp : double
) with index (
  i01 = nrec (unique, surrogate)
);

create view
as select *
from t;

sql query qFuuu =
select p.fio    as FIO,
       p.tabnmb as TabNumber,
       s.datan  as BeginDate,
       s.datok  as EndDate,
       s.datav  as PayDate,
       s.OBLAGS as SummaDohod,
       s.SUMUD  as SummaUderzh,
       s.PROC   as UchtenoVychetov,
       s.cpodr  as FullSummaMatHelp,
       coalesce(vo.nvidopl, '') as VidOpl,
       s.CPODROZ as LinkToDataSource
from SUMVIDUD s
join persons p on p.tabnmb = s.tabn
left join klvidopl vo on vo.vidopl = s.prper
left join spplban sp on sp.nrec = s.cpodroz and sp.tabn = s.tabn
left join sbban sb on sb.nrec = sp.CSBBAN
where s.vidud = 182 and s.yearn = 2016 and s.tabn = 31110 and s.mes = 1
order by p.fio
;

screen sc1;
show(,,,2);
buttons
  cmFuckAll;
<<
  <. GO .>
>>
end;

browse br1;
show(,3);
table t;
fields
  t.MatHelp 'Ипучая матпосчь': [20], protect;
end;

handleevent
cmFuckAll:
{
  var rs: IResultSet;
  rs := querymanager.createQuery(qFuuu).getresultSet;
  if rs = nullref
  {
    message('It''s not working, fuuuuuuuu!');
    exit;
  }
  if rs.getfirst = tsOk do
  {
    ClearBuffer(#t);
    t.MatHelp := MoveCompToDouble(rs.row.val('FullSummaMatHelp'));
    insert current t;
  } while rs.getnext = tsOk;
  RereadRecord(#t);
}
end;

end.
