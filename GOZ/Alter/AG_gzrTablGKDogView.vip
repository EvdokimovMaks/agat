/******************************************************************************\
 Наименование: Список госконтрактов
 Контур/Модуль: Электронная отчетность ГОЗ
 Примечание: За основу взят стандартный список (gzrTablGKDogView.vip).
             Убран фильтр по виду договора.
 Вид работы  |Номер         |Дата    |Исполнитель              |Проект
 -------------------------------------------------------------------------------
 Разработка  |              |31/07/19|Евдокимов М.А.           |Агат
\******************************************************************************/

#component "F_GOZReport"
#include AG_gzrTablGKDogView.Vih

//==============================================================================
#doc
Агат. Табличный объект чтения : "Государственные контракты". За основу взят
стандартный список (gzrTablGKDogView.vip). Убран фильтр по виду договора.
#end
Interface AG_gzrTablGKDogView;
#include gzrTablGKView.Inc  // константы табличного объекта : "Государственные контракты"
//------------------------------------------------------------------------------
var
  DOGNAMEINDOANDSOPRDOC : word;  // DOG.DOGNAMEINDOANDSOPRDOC
  DATEDOGINDOANDSOPRDOC : word;  // DOG.DATEDOGINDOANDSOPRDOC

Create View
Var
  wExClassSegIGK : word;
As select
  if(Dogovor.Direct = lc_DogDirect_Sel, Dogovor.cBankPol, Dogovor.cBankPlat)  (FieldName = cDogKatBank)
From
  ExClassSeg
, ExClassVal
, Dogovor
, KatBank
Where
((
    wExClassSegIGK    == ExClassVal.ClassCode (NoIndex)
and ExClassVal.cClassSeg == ExClassSeg.NRec

and ExClassVal.cRec  /== Dogovor.NRec
and comp(0)           == Dogovor.cDogovor     (NoIndex)
and lc_DogDirect_Sel  == Dogovor.Direct       (NoIndex)

and cDogKatBank       == KatBank.NRec
));

//==============================================================================
//#region FIELDS
//------------------------------------------------------------------------------
// Получить номер контракта
function Get_NoDoc : string;
{ Result := iExtAttrClassInfo::sGetAttr(coExClassSeg, ExClassSeg.NRec, lc_GK_ExAttrName_NoDoc);
}

// Получить номер контракта
function Get_Dog_NoDoc : string;
{ Result := Dogovor.NoDoc;
  case DOGNAMEINDOANDSOPRDOC of
  1: Result:= Dogovor.NoDoc_Ext;
  2: Result:= Dogovor.NoDoc+'/'+Dogovor.NoDoc_Ext;
  end;
}

//------------------------------------------------------------------------------
// Получить дату заключения контракта
function Get_dDoc : date;
{ Result := iExtAttrClassInfo::dGetAttr(coExClassSeg, ExClassSeg.NRec, lc_GK_ExAttrName_dDoc );
}

//------------------------------------------------------------------------------
// Получить дату заключения контракта
function Get_Dog_dDoc : date;
{ Result := Dogovor.DDoc;
  case DateDogInDoAndSoprDoc of
  1: Result := Dogovor.dInput;
  end;
}

//------------------------------------------------------------------------------
// Получить плановую дату контракта
function Get_dPlan : date;
{ Result := Dogovor.dEnd;
}

//------------------------------------------------------------------------------
// Получить статус Договора
function Get_wDogovorStatus : word;
{ Result := Dogovor.Status;
}
//------------------------------------------------------------------------------
// Получить ссылку на статус Договора
function Get_cDogovorStatus : comp;
{ Result := Dogovor.cNote;
}
//------------------------------------------------------------------------------
// Получить наименование статуса Договора
function Get_sDogovorStatus : string;
{ Result := Dogovor.cNote->Name;
}

//------------------------------------------------------------------------------
// Получить ссылку на контрагента по Договору
function Get_KatOrgNRec : comp;
{ Result := Dogovor.cOrg;
}
//------------------------------------------------------------------------------
// Получить наименование контрагента по Договору
function Get_KatOrgName : string;
{ Result := Dogovor.cOrg->Name;
}

//------------------------------------------------------------------------------
// Получить ссылку на "отдельный счет" по Договору
function Get_KatBankNRec : comp;
{ Result := cDogKatBank;
}
//------------------------------------------------------------------------------
// Получить наименование "отдельный счет" по Договору
function Get_KatBankName : string;
{ Result := KatBank.SCHET1;//MFO1
}

//------------------------------------------------------------------------------
// Получить признак что контракт является ГОЗ
function Get_IsGOS : boolean;
{
  Result := False;
  if (iExtAttrClassInfo::sGetAttr(coExClassSeg, ExClassSeg.NRec, lc_GK_ExAttrName_IsGOZ)='нет')
  { Exit; }
  Result := True;
}
//#endregion FIELDS
//******************************************************************************


//==============================================================================
//#region PROPERTY
//------------------------------------------------------------------------------
Property IgzrTablGKDogView.NRec      : comp         absolute  ExClassVal.NRec       read;  // номер записи
Property IgzrTablGKDogView.cIgk      : comp         absolute  ExClassVal.cClassSeg  read;  // номер записи
Property IgzrTablGKDogView.IGK       : string[250]  absolute  ExClassSeg.Name       read;  // ИГК
Property IgzrTablGKDogView.cDogovor  : comp         absolute  ExClassVal.cRec       read;  // ссылка на "Договор исполнения госзаказа"
//#endregion PROPERTY
//******************************************************************************


//==============================================================================
//#region INDEX
//------------------------------------------------------------------------------
Index IgzrTablGKDogView.gzrTablRepHead01 auto;
//#endregion INDEX
//******************************************************************************


//==============================================================================
//#region INIT/DONE
//------------------------------------------------------------------------------
constructor Init;
{
  Result := False;
  if (not inherited::Init)
  { Exit; }

  wExClassSegIGK := iExtAttrClassInfo::GetClassCode(coDogovor, lc_GK_ExClassSegNameIGK);
  DOGNAMEINDOANDSOPRDOC := wGetTune('DOG.DOGNAMEINDOANDSOPRDOC');
  DATEDOGINDOANDSOPRDOC := wGetTune('DOG.DATEDOGINDOANDSOPRDOC');

  Result := True;
} // constructor Init
//------------------------------------------------------------------------------
destructor  Done;
{
  inherited::Done;
} // destructor  Done
//#endregion INIT/DONE
//******************************************************************************


End. // Interface
