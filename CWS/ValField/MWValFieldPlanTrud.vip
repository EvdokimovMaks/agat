#component "AGAT"
interface iMWValFieldPlanTrud;

create view
as select *
from normas, paramvol;

procedure oMWValField.LoadValue(Row:  oMWRow);
{
  if (not Row.isLeaf) exit;
  var _trud: double;
  _trud := 0;
  _loop normas where ((11005           == normas.tmaster and
                       Row.cMarshSp    == normas.cmaster and
                       (36              = normas.tresource and
                        Row.cPost       = normas.cresource and
                        102             = normas.normsort)
                     ))
  {
    if getfirst paramvol where ((11000       == paramvol.tobject and
                                 normas.nrec == paramvol.cobject
                               )) = tsOk
    {
      _trud += double(paramvol.value[2]) / if(normas.dnormed > 0, normas.dnormed, 1);
    }
  }
  SetValue(Row, _trud);
}

function oMWValField.CheckValue(Row: oMWRow; _Value: double): boolean;
{
  Row := Row;
  _Value := _Value;
  result := false;
}

function oMWValField.Editable(Row: oMWRow): boolean;
{
  Row := Row;
  result := false;
}

function oMWValField.SetValue(Row: oMWRow; _Value: double): boolean;
{
  var rslt: boolean;
  rslt := inherited::SetValue(Row, _Value);
  if rslt
    fMWValFieldsManager.ValFieldFactTrud.SetValue(Row, double(fMWValFieldsManager.ValFieldProcTrud.GetValue(Row))*_Value/100);
  result := rslt;
}

function  oMWValField.GetFontBackColor(Row: oMWRow): integer;
{
  Row := Row;
  result := 67;
}
end.
