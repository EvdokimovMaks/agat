#component "AGAT"
interface iMWValFieldPlanTrud;

create view
var
  _cMarshSp: comp;
  _cPost: comp;
as select
  normas.nrec
from
  normas
, paramvol
where ((
  11005           == normas.tmaster and
  _cMarshSp       == normas.cmaster and
  ( 36             = normas.tresource and
    _cPost         = normas.cresource and
    102            = normas.normsort) and

  11000       == paramvol.tobject and
  normas.nrec == paramvol.cobject
));

procedure oMWValField.LoadValue(Row:  oMWRow);
{
  if (not Row.isLeaf) exit;
  var _trud: double = 0;
  _cMarshSp := Row.cMarshSp;
  _cPost    := Row.cPost;
  _loop normas
    if getfirst fastfirstrow paramvol = tsOk
      _trud += double(paramvol.value[2]) / if(normas.dnormed > 0, normas.dnormed, 1);
  SetValue(Row, _trud, false);
}

function oMWValField.CheckValue(Row: oMWRow; _Value: double): boolean;
{
  Row := Row;
  _Value := _Value;
  result := false;
}

function oMWValField.Editable(Row: oMWRow): boolean;
{
  Row := Row;
  result := false;
}

function oMWValField.SetValue(Row: oMWRow; _Value: double; bSync: boolean): boolean;
{
  var rslt: boolean;
  rslt := inherited::SetValue(Row, _Value, bSync);
  if rslt
    fMWValFieldsManager.ValFieldFactTrud.SetValue(Row, double(fMWValFieldsManager.ValFieldProcTrud.GetValue(Row))*_Value/100, bSync);
  result := rslt;
}

function  oMWValField.GetFontBackColor(Row: oMWRow): integer;
{
  Row := Row;
  result := 67;
}
end.
