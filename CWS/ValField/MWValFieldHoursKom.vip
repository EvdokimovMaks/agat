#component "AGAT"
interface iMWValFieldHoursKom;

create view
var
  _cPerson: comp;
as select td.cPerson
from td
where ((
    _cPerson == td.cPerson
and comp(-2) == td.cCostItem
));

procedure oMWValField.LoadValue(Row:  oMWRow);
{
  inherited::LoadValue(Row);
  if Row.isPersonLevel
  {
    // if GetFirst LSchet where ((Row.cPerson == LSchet.tPerson and (lschet.datuv = 0 or lschet.datuv >= PeriodDBeg) )) = tsOk
    //   if LoadWorkingTable(LSchet.nRec, Month(PeriodDBeg), Year(PeriodDBeg)) = 0
    //   {
    //     var _d: double;
    //     _d  := 0;
    //     if WT_LoadMonthlyAbsences = 0
    //     {
    //       var i, _cnt: integer;
    //       var _s: string;
    //       var _n: double;
    //       _cnt := WT_GetMonthlyAbsenceCount;
    //       for(i:=0;i<_cnt;inc(i))
    //       {
    //         if WT_GetMonthlyAbsenceAttribute(i, 1, _s)
    //           if (_s='Š')
    //             if WT_GetMonthlyAbsenceAttribute(i, 5, _n)
    //               _d += _n;
    //       }
    //     }
    //   }
    _cPerson := Row.cPerson;
    if (getfirst td = tsOk)
      SetDistribute(Row, td.Summa);
  }
}
function  oMWValField.GetValue(Row: oMWRow): string;
{
  var _v: double;
  _v := inherited::GetValue(Row);
  if Row.isPersonLevel
  {
    var _d: double = GetDistribute(Row);
    var _delta: double = round(_d - _v, 2);
    result := _v + ' / ' + _d + if(_delta = 0, '', ' (' + doubletostr(_delta,'[+|-]3666666666666.88')+')');
  }
  else
    result := _v;
}
function  oMWValField.GetFontBackColor(Row: oMWRow): integer;
{
  if Row.isLeaf
    result := 100 //if(_v > 0, 100, 0)
  else
  {
    var _v, _d: double;
    if getfirst tVal where ((Row.nRec == tVal.cRow and fcValField == tVal.cValField)) = tsOk
    {
      _v := tVal.Value;
      _d := tVal.Distribute;
    }
    else
    {
      _v := 0;
      _d := 0;
    }
    result := if(_v=_d, 78, if(_v>_d, 10 ,67));
  }
}
handleevent
  cmOnVipLoad:
  {
    //InitWorkingTable;
  }
end;
end.
