#include oTemplan.vih

#component "AGAT"

interface iTemplanLinkManager;

var
  _tsManager: iTemplanSpecManager;
  _tfManager: iTemplanFactManager;

create view
as select *
from tTemplanLink;

// Процедура для Обновления записи
procedure oTemplanLinkManager.NotifyLinkedForUpdate(oldBuf: TemplanSpecType; newBuf: TemplanSpecType);
{
  var bufNrec: comp; bufNrec := oldBuf.Nrec;
  _loop tTemplanLink where ((bufNrec == tTemplanLink.SrcNrec))
  {
    var obj: oTemplanSpecObject;
    obj := _tsManager.GetTemplanSpec(tTemplanLink.DstNrec);
    if obj != nullref
    {
      pushpos(#tTemplanLink);
      obj.OnLinkedUpdate(oldBuf, newBuf);
      obj.Save;
      poppos(#tTemplanLink);
    }
  }
}

procedure oTemplanLinkManager.NotifyLinkedFactForUpdate(oldBuf: TemplanSpecType; newBuf: TemplanSpecType);
{
  var bufNrec: comp; bufNrec := oldBuf.Nrec;
  _loop tTemplanLink where ((bufNrec == tTemplanLink.SrcNrec))
  {
    var obj: oTemplanSpecObject;
    obj := _tfManager.GetTemplanSpec(tTemplanLink.DstNrec);
    if obj != nullref
    {
      pushpos(#tTemplanLink);
      obj.OnLinkedUpdate(oldBuf, newBuf);
      obj.Save;
      poppos(#tTemplanLink);
    }
  }
}

// Процедура для удаления записи
procedure oTemplanLinkManager.NotifyLinkedForRemove(buf: TemplanSpecType);
{
  _loop tTemplanLink where ((buf.Nrec == tTemplanLink.SrcNrec))
  {
    var obj: oTemplanSpecObject;
    obj := _tsManager.GetTemplanSpec(tTemplanLink.DstNrec);
    if obj != nullref
    {
      pushpos(#tTemplanLink);
      obj.OnLinkedRemove(buf);
      obj.Save;
      poppos(#tTemplanLink);
    }
  }
}

// Процедура для создания записи
procedure oTemplanLinkManager.NotifyLinkedForCreate(buf: TemplanSpecType);
{
  _loop tTemplanLink where ((buf.Nrec == tTemplanLink.SrcNrec))
  {
    var obj: oTemplanSpecObject;
    obj := _tsManager.GetTemplanSpec(tTemplanLink.DstNrec);
    if obj != nullref
    {
      pushpos(#tTemplanLink);
      obj.OnLinkedCreate(buf);
      obj.Save;
      poppos(#tTemplanLink);
    }
  }
}

procedure oTemplanLinkManager.NotifyLinkedFactForCreate(buf: TemplanSpecType);
{
  _loop tTemplanLink where ((buf.Nrec == tTemplanLink.SrcNrec))
  {
    var obj: oTemplanSpecObject;
    obj := _tfManager.GetTemplanSpec(tTemplanLink.DstNrec);
    if obj != nullref
    {
      pushpos(#tTemplanLink);
      obj.OnLinkedCreate(buf);
      obj.Save;
      poppos(#tTemplanLink);
    }
  }
}

function oTemplanLinkManager.AddLink(aSrcNrec: comp; aDstNrec: comp): boolean;
{
  result := false;
  if getfirst tTemplanLink where ((aSrcNrec == tTemplanLink.SrcNrec and aDstNrec == tTemplanLink.DstNrec)) != tsOk
  {
    clearbuffer(#tTemplanLink);
    tTemplanLink.SrcNrec := aSrcNrec;
    tTemplanLink.DstNrec := aDstNrec;
    insert current tTemplanLink;
    result := true;
  }
}

/*
function oTemplanLinkManager.RemoveLink(aSrcNrec: comp; aDstNrec: comp): boolean;
{
  result := delete all tTemplanLink where ((aSrcNrec == tTemplanLink.SrcNrec and aDstNrec == tTemplanLink.DstNrec)) = tsOk;
}
*/

// Функция для удаления конкретной связи
function oTemplanLinkManager.ClearLinks(aSrcNrec: comp): boolean;
{
  result := delete all tTemplanLink where ((aSrcNrec == tTemplanLink.SrcNrec)) = tsOk;
}

end.
