/*
 ╔═══════════════════════════════════════════════════════════════════════════╗
 ║                     (c) 1994,97 корпорация ГАЛАКТИКА                      ║
 ║ Проект        : ГАЛАКТИКА                                                 ║
 ║ Система       : Заработная плата                                          ║
 ║ Версия        : 5.7 - 7.1                                                 ║
 ║ Назначение    : объектный интерфейс "Параметры формирования пост. доплат" ║
 ║ Ответственный : Корзюк Виталий Францевич                                  ║
 ╚═══════════════════════════════════════════════════════════════════════════╝
*/

#ifndef _APFPRMS_INCLUDED_
#define _APFPRMS_INCLUDED_

#include SHPZ.VIH

#ifdef ComponentVersion
#component "Z_Zar"
#end
#doc
  Объектный интерфейс хранилища параметров формирования постоянных доплат.
#end
objinterface oAddPaymentsFormingParameters;
  #doc
    Возвращает ссыдку на подразделение.
  #end
  function GetDepartment: comp;

  #doc
    Устанавливает ссылку на подразделение.
  #end
  procedure SetDepartment(Value: comp);

  #doc
    Возвращает код вида оплаты.
  #end
  function GetPaymentKind: longint;

  #doc
    Устанавливает код вида оплаты.
  #end
  procedure SetPaymentKind(Value: longint);

  #doc
    Устанавливает режим функционирования.</brief>
    <ul>
    <li> 0 - сформировать доплаты
    <li> 1 - переформировать доплаты
    <li> 2 - удалить доплаты
    <li> 4 - импортировать суммы из dbf-файла
    </ul>
  #end
  function GetOperatingMode: word;

  #doc
    Возвращает режим функционирования.</brief>
    <ul>
    <li> 0 - сформировать доплаты
    <li> 1 - переформировать доплаты
    <li> 2 - удалить доплаты
    <li> 4 - импортировать суммы из dbf-файла
    </ul>
  #end
  procedure SetOperatingMode(Value: word);

  #doc
    Возвращает значение атрибута "Учитывать при расчете".
  #end
  function GetCalcFlag: string;

  #doc
    Устанавливает значение атрибута "Учитывать при расчете".
  #end
  procedure SetCalcFlag(Value: string);

  #doc
    Возвращает сумму доплаты.
  #end
  function GetSum: double;

  #doc
    Устанавливает режим доплаты.
  #end
  procedure SetSum(Value: double);

  #doc
    Возвращает процент доплаты.
  #end
  function GetPercent: double;

  #doc
    Устанавливает процент доплаты.
  #end
  procedure SetPercent(Value: double);

  #doc
    Возвращает признак контроля процесса формирования доплат.
  #end
  function GetControlOption: word;

  #doc
    Устанавливает признак контроля процесса формирования доплат.
  #end
  procedure SetControlOption(Value: word);

  #doc
    Возворащает источник сведений о ШПЗ.
  #end
  function GetAccountingSource: word;

  #doc
    Устанавливает источник сведений о ШПЗ.
  #end
  procedure SetAccountingSource(Value: word);

  #doc
    Возвращает ШПЗ (счет, субсчет, аналитика, ТХО, параметр выбора).
  #end
  function GetAccounting: oSHPZ;

  #doc
    Устанавливает ШПЗ (счет, субсчет, аналитика, ТХО, параметр выбора).
  #end
  procedure SetAccounting(Value: oSHPZ);

  #doc
    Возвращает дату назначения доплаты.
  #end
  function GetFixDate: date;

  #doc
    Устанавливает дату назначения доплаты.
  #end
  procedure SetFixDate(Value: date);

  #doc
    Возвращает дату начала доплаты (дата начала сторнирования).
  #end
  function GetBeginning: date;

  #doc
    Устанавливает дату начала доплаты (дату начала сторнирования).
  #end
  procedure SetBeginning(Value: date);

  #doc
    Возвращает дату окончания доплаты.
  #end
  function GetEnding: date;

  #doc
    Устанавливает дату окончания доплаты.
  #end
  procedure SetEnding(Value: date);

  #doc
    Возвращает ссылку на валюту.
  #end
  function GetCurrency: comp;

  #doc
    Устанавливает ссылку на валюту.
  #end
  procedure SetCurrency(Value: comp);

  #doc
    Возвращает имя файла для импорта.
  #end
  function GetImportFileName: string;

  #doc
    Устанавливает имя файла для импорта.
  #end
  procedure SetImportFileName(Value: string);

  #doc
    Возвращает код вида налогового вычета.
  #end
  function GetTaxAbatement: comp;

  #doc
    Устанавливает код вида налогового вычета.
  #end
  procedure SetTaxAbatement(Value: comp);

  #doc
    Возвращает сумму налогового вычета.
  #end
  function GetTaxAbatementSum: double;

  #doc
    Устанавливает сумму налогового вычета.
  #end
  procedure SetTaxAbatementSum(Value: double);

//------------------------------------------------------------------------------
  #doc
    Возвращает значение признака необходимости копирования в доплату значения атрибута "Учитывать при расчете".
  #end
  function IsCalcFlagToBeSet: boolean;

  #doc
    Устанавливает значение признака необходимости копирования в доплату значения атрибута "Учитывать при расчете".
  #end
  procedure SetCalcFlagToBeSet(Value: boolean);

  #doc
    Возвращает значение признака необходимости заполнения суммы доплаты.
  #end
  function IsSumToBeSet: boolean;

  #doc
    Устанавливает значение признака необходимости заполнения суммы доплаты.
  #end
  procedure SetSumToBeSet(Value: boolean);

  #doc
    Возвращает значение признака необходимости заполнения процента доплаты.
  #end
  function IsPercentToBeSet: boolean;

  #doc
    Устанавливает значение признака необходимости заполнения процента доплаты.
  #end
  procedure SetPercentToBeSet(Value: boolean);

  #doc
    Возвращает значение признака необходимости заполнения даты назначения доплаты.
  #end
  function IsFixDateToBeSet: boolean;

  #doc
    Устанавливает значение признака необходимости заполнения даты назначения доплаты.
  #end
  procedure SetFixDateToBeSet(Value: boolean);

  #doc
    Возвращает значение признака необходимости заполнения даты начала доплаты.
  #end
  function IsBeginningToBeSet: boolean;

  #doc
    Устанавливает значение признака необходимости заполнения даты начала доплаты.
  #end
  procedure SetBeginningToBeSet(Value: boolean);

  #doc
    Возвращает значение признака необходимости заполнения даты окончания доплаты.
  #end
  function IsEndingToBeSet: boolean;

  #doc
    Устанавливает значение признака необходимости заполнения даты окончания доплаты.
  #end
  procedure SetEndingToBeSet(Value: boolean);

  #doc
    Возвращает значение признака необходимости заполнения валюты в доплате.
  #end
  function IsCurrencyToBeSet: boolean;

  #doc
    Устнавливает значение признака необходимости заполнения валюты в доплате.
  #end
  procedure SetCurrencyToBeSet(Value: boolean);

  #doc
    Возвращает значение признака необходимости заполнения в доплате кода налогового вычета.
  #end
  function IsTaxAbatementToBeSet: boolean;

  #doc
    Устанавливает значение признака необходимости заполнения в доплате кода налогового вычета.
  #end
  procedure SetTaxAbatementToBeSet(Value: boolean);

  #doc
    Возвращает значение признака необходимости заполнения суммы налогового вычета в доплате.
  #end
  function IsTaxAbatementSumToBeSet: boolean;

  #doc
    Устанавливает значение признака необходимости заполнения суммы налогового вычета в доплате.
  #end
  procedure SetTaxAbatementSumToBeSet(Value: boolean);


  #doc
    Устанавливает или сбрасывает признаки необходимости заполнения значений атрибутов доплаты.
  #end
  procedure SetToBeSet(Value: boolean);
end;

vipinterface AddPaymentsFormingParameters implements oAddPaymentsFormingParameters
#ifdef ATL51
Licensed(Free)
#end
;

#end
