//------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Галактика 7.12 - Заработная плата
// Отнесение затрат
//------------------------------------------------------------------------------

/*
 Такой интерфейс удобно использовать (встраивать, передавать в качестве
 параметра, вешать на кнопку) везде, где есть необходимость вводить счет,
 субстчет, КАУ, ТХО, параметр выбора ТХО.
*/

#ifndef _COSTSASSIGNMENT_VIH_INCLUDED_
#define _COSTSASSIGNMENT_VIH_INCLUDED_

#include ANALYTICS.VIH

#component "Z_Zar"

//------------------------------------------------------------------------------
//                                                              ICostsAssignment
//------------------------------------------------------------------------------
ObjInterface ICostsAssignment; forward;

ObjInterface ICostsAssignment;
  //загрузить ШПЗ из desk, использую в качестве префикса для названий параметров
  //ResourcePrefix
  procedure Load(ResourcePrefix: string);
  //сохранить ШПЗ в desk, использую в качестве префикса для названий параметров
  //ResourcePrefix
  procedure Store(ResourcePrefix: string);
//------------------------------------------------------------------------------
// методы возврата/установки значений
//------------------------------------------------------------------------------
  function GetID: comp;
  procedure SetID(Value: comp);
  // код отнесения затрат
  function GetCode: string;
  procedure SetCode(Value: string);
  //счет
  function GetAccount: string;
  procedure SetAccount(Value: string);
  //субсчет
  function GetControlAccount: string;
  procedure SetControlAccount(Value: string);
  // аналитика
  function GetAnalytics: IAnalytics;
  procedure SetAnalytics(Value: IAnalytics);
  //хозоперация
  function GetBusinessTransaction: comp;
  procedure SetBusinessTransaction(Value: comp);
  //параметр выбора
  function GetBusinessTransactionParam: string;
  procedure SetBusinessTransactionParam(Value: string);

//------------------------------------------------------------------------------
// вспомогательные методы
//------------------------------------------------------------------------------
  // вернуть текстовое содержание аналитики
  function GetAnalyticsStr: string;
  // вернуть название хозоперации
  function GetBusinessTransactionStr: string;

  procedure Assign(Obj: ICostsAssignment);
  function Equals(Obj: ICostsAssignment): boolean;

  procedure ClearID;
  procedure ClearCode;
  procedure ClearAccount;
  procedure ClearControlAccount;
  procedure ClearAnalytics;
  procedure ClearBusinessTransaction;
  procedure ClearBusinessTransactionParam;
  // установка значений по умолчанию
  procedure Clear;
End;

ObjInterface ICostsAssignmentFunctions;
  function Edit(Assignment: ICostsAssignment): boolean;
  function PickCode(Assignment: ICostsAssignment; OpenQuickChoice: boolean): boolean;
  function PickAccount(Assignment: ICostsAssignment; OpenQuickChoice: boolean): boolean;
  function PickControlAccount(Assignment: ICostsAssignment; OpenQuickChoice: boolean): boolean;
  function PickAnalytics(Assignment: ICostsAssignment): boolean;
  function PickBusinessTransaction(Assignment: ICostsAssignment; OpenQuickChoice: boolean): boolean;
  function PickBusinessTransactionParam(Assignment: ICostsAssignment): boolean;
End;

//------------------------------------------------------------------------------
//                                                  ICostsAssignmentListIterator
//------------------------------------------------------------------------------
ObjInterface ICostsAssignmentListIterator;
  function First: ICostsAssignment;
  function Next: ICostsAssignment;
End;

//------------------------------------------------------------------------------
//                                                          ICostsAssignmentList
//------------------------------------------------------------------------------
ObjInterface ICostsAssignmentList;
  procedure Add(Item: ICostsAssignment);
  function  GetIterator: ICostsAssignmentListIterator;
  function  Empty: boolean;
  procedure Clear;
End;

ObjInterface ICostsAssignmentCodeList;
  function GetCostsAssignmentById(Id: comp): ICostsAssignment;
  function GetCostsAssignmentByCode(Code: string): ICostsAssignment;
End;

VipInterface CostsAssignment
  implements ICostsAssignment
  licensed(free);

VipInterface CostsAssignmentList
  implements ICostsAssignmentList
  licensed(free);

VipInterface CostsAssignmentFunctions
  implements ICostsAssignmentFunctions
  licensed(free);

VipInterface CostsAssignmentCodeList
  implements ICostsAssignmentCodeList
  licensed(free);

#end
