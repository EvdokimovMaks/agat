/*
 ╔═══════════════════════════════════════════════════════════════════════════╗
 ║                     (c) 2000,3000 корпорация ГАЛАКТИКА                    ║
 ║ Проект        : ГАЛАКТИКА                                                 ║
 ║ Система       : Заработная плата                                          ║
 ║ Версия        : 5.8-7.1                                                   ║
 ║ Назначение    : Макроопределения для обработки объектного инт-са oSHPZ    ║
 ║ Ответственный : Корзюк Виталий Францевич                                  ║
 ╚═══════════════════════════════════════════════════════════════════════════╝
*/

//------------------------------------------------------------------------------
// описание вычисляемых полей для отображения ШПЗ (для скринов)
//------------------------------------------------------------------------------
#declare DeclareAccountingFields(Accounting,FieldPrefix=Debit)
  [#(FieldPrefix)AccountStr] (#Accounting.GetAccountStr) ('Счет',, sci13Esc): protect, pickbutton;
  [#(FieldPrefix)ControlAccountStr] (#Accounting.GetControlAccountStr) ('Субсчет',, sci13Esc): protect, pickbutton;
  [#(FieldPrefix)AnalyticsStr] (#Accounting.GetAnalyticsStr) ('Аналитика',, sci13Esc): protect, pickbutton;
  [#(FieldPrefix)HozOperStr] (#Accounting.GetHozOperStr) ('Типовая хозяйственная операция',, sci13Esc): protect, pickbutton;
  [#(FieldPrefix)ParamTXO] (#Accounting.GetParamTXO) ('Параметр выбора ТХО',, sci13Esc): noprotect, pickbutton;
#end

//------------------------------------------------------------------------------
// для включения в обработчик cmPick
//------------------------------------------------------------------------------
#declare PickAccounting(Accounting,OpenQuickChoice,FieldPrefix=Debit)
  ##(FieldPrefix)AccountStr: if #Accounting.Pick('Account', #OpenQuickChoice) ReDrawPanel(CurTable);
  ##(FieldPrefix)ControlAccountStr: if #Accounting.Pick('ControlAccount', #OpenQuickChoice) ReDrawPanel(CurTable);
  ##(FieldPrefix)AnalyticsStr: if #Accounting.Pick('Analytics', #OpenQuickChoice) ReDrawPanel(CurTable);
  ##(FieldPrefix)HozOperStr: if #Accounting.Pick('HozOper', #OpenQuickChoice) ReDrawPanel(CurTable);
  ##(FieldPrefix)ParamTXO: if #Accounting.Pick('ParamTXO', #OpenQuickChoice) ReDrawPanel(CurTable);
#end

//------------------------------------------------------------------------------
// для включения в обработчик cmDelOnProtect
//------------------------------------------------------------------------------
#declare DelOnAccounting(Accounting,FieldPrefix=Debit)
  ##(FieldPrefix)AccountStr: {#Accounting.Clear('Account'); ReDrawPanel(CurTable)}
  ##(FieldPrefix)ControlAccountStr: {#Accounting.Clear('ControlAccount'); ReDrawPanel(CurTable)}
  ##(FieldPrefix)AnalyticsStr: {#Accounting.Clear('Analytics'); ReDrawPanel(CurTable)}
  ##(FieldPrefix)HozOperStr: {#Accounting.Clear('HozOper'); ReDrawPanel(CurTable)}
  ##(FieldPrefix)ParamTXO: {#Accounting.Clear('ParamTXO'); ReDrawPanel(CurTable)}
#end

//------------------------------------------------------------------------------
// для включения в обработчик cmExprFieldChanged
//------------------------------------------------------------------------------
#declare OnChangeAccounting(Accounting,FieldPrefix=Debit)
  ##(FieldPrefix)AccountStr,
  ##(FieldPrefix)ControlAccountStr,
  ##(FieldPrefix)AnalyticsStr,
  ##(FieldPrefix)HozOperStr: {}

  ##(FieldPrefix)ParamTXO: {#Accounting.SetParamTXO(ExprFieldValue); ReDrawPanel(CurTable)}
#end

//------------------------------------------------------------------------------
// скрыть ШПЗ
//------------------------------------------------------------------------------
#declare HideAccounting(Accounting,FieldPrefix=Debit)
{
  HideLabel4Field(##(FieldPrefix)AccountStr);
  HideLabel4Field(##(FieldPrefix)ControlAccountStr);
  HideLabel4Field(##(FieldPrefix)AnalyticsStr);
  HideLabel4Field(##(FieldPrefix)HozOperStr);
  HideLabel4Field(##(FieldPrefix)ParamTXO);
  ClearFieldState(##(FieldPrefix)AccountStr, sfVisible);
  ClearFieldState(##(FieldPrefix)ControlAccountStr, sfVisible);
  ClearFieldState(##(FieldPrefix)AnalyticsStr, sfVisible);
  ClearFieldState(##(FieldPrefix)HozOperStr, sfVisible);
  ClearFieldState(##(FieldPrefix)ParamTXO, sfVisible);
}
#end

//------------------------------------------------------------------------------
// показать ШПЗ
//------------------------------------------------------------------------------
#declare ShowAccounting(Accounting,FieldPrefix=Debit)
{
  SetFieldState(##(FieldPrefix)AccountStr, sfVisible);
  SetFieldState(##(FieldPrefix)ControlAccountStr, sfVisible);
  SetFieldState(##(FieldPrefix)AnalyticsStr, sfVisible);
  SetFieldState(##(FieldPrefix)HozOperStr, sfVisible);
  SetFieldState(##(FieldPrefix)ParamTXO, sfVisible);
  ShowLabel4Field(##(FieldPrefix)AccountStr);
  ShowLabel4Field(##(FieldPrefix)ControlAccountStr);
  ShowLabel4Field(##(FieldPrefix)AnalyticsStr);
  ShowLabel4Field(##(FieldPrefix)HozOperStr);
  ShowLabel4Field(##(FieldPrefix)ParamTXO);
}
#end

//------------------------------------------------------------------------------
// копирование ШПЗ с суффиксом Sfx из S: оSHPZ в таблицу DstTable
//------------------------------------------------------------------------------
#declare CopyInfoFromSHPZ(DstTable,S,Sfx=D)
{
  if (not NullVipRef(#S))
  {
    var I : Integer;
    #DstTable.cSCHET#Sfx  := #S.GetAccount;
    #DstTable.cSUBSCH#Sfx := #S.GetControlAccount;
    for (I := cFirstKAU; I <= cLastKAU; I := I + 1)
    {
      #DstTable.Tbl#Sfx[I]  := #S.GetAnalyticsTbl(I);
      #DstTable.cKAU#Sfx[I] := #S.GetAnalytics(I);
    }
  }
}
#end

//------------------------------------------------------------------------------
// скопировать хозоперацию из S: oSHPZ в таблицу DstTable
//------------------------------------------------------------------------------
#declare CopyHozOperFromSHPZ(DstTable,S)
{
  if (not NullVipRef(#S))
  {
    #DstTable.CHOZOPER := #S.GetHozOper;
    #DstTable.PARAM := #S.GetParamTXO;
  }
}
#end

//------------------------------------------------------------------------------
// копирование ШПЗ с суффиксом Sfx из таблицы SrcTable в S: oSHPZ
//------------------------------------------------------------------------------
#declare CopyInfoToSHPZ(S,SrcTable,Sfx=D)
{
  if (not NullVipRef(#S))
  {
    var I : Integer;
    #S.SetAccount(#SrcTable.cSCHET#Sfx);
    #S.SetControlAccount(#SrcTable.cSUBSCH#Sfx);
    for (I := cFirstKAU; I <= cLastKAU; I := I + 1)
    {
      #S.SetAnalyticsTbl(I, #SrcTable.Tbl#Sfx[I]);
      #S.SetAnalytics(I, #SrcTable.cKAU#Sfx[I]);
    }
  }
}
#end

//------------------------------------------------------------------------------
// скопировать хозоперацию из таблицы SrcTable в S: oSHPZ
//------------------------------------------------------------------------------
#declare CopyHozOperToSHPZ(S,SrcTable)
{
  if (not NullVipRef(#S))
  {
    #S.SetHozOper(#SrcTable.CHOZOPER);
    #S.SetParamTXO(#SrcTable.PARAM);
  }
}
#end

//------------------------------------------------------------------------------
// копирование ШПЗ из Src: oSHPZ в Dst: oSHPZ
//------------------------------------------------------------------------------
#declare AssignSHPZ(Dst,Src)
{
  if not NullVipRef(#Src) and not NullVipRef(#Dst)
  {
    #Dst.SetAccount(#Src.GetAccount);
    #Dst.SetControlAccount(#Src.GetcontrolAccount);
    var I: integer;
    for (I := cFirstKAU; I <= cLastKAU; I := I + 1)
    {
      #Dst.SetAnalytics(I, #Src.GetAnalytics(I));
      #Dst.SetAnalyticsTbl(I, #Src.GetAnalyticsTbl(I));
    }
    #Dst.SetHozOper(#Src.GetHozOper);
    #Dst.SetParamTXO(#Src.GetParamTXO);
  }
}
#end