//------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Галактика ERP 5.7 - Заработная плата
// Макроопределения для обработки счетов, субсчетов и КАУ
//------------------------------------------------------------------------------

#include XGetKau.vih   // Объектный интерфейс выбора многих КАУ
#include StickyAnalytics.vih

#define ZeroSchet cgDefSch

#define ZeroSubSchet cgDefSub

#define FiledOpt protect, pickbutton

#define DelRel , delrel
//------------------------------------------------------------------------------
//синоним для справочника счетов
#declare DeclSchetTable(SchetTable)
  synonym Buhschet #SchetTable
#end

//синоним для справочника субсчетов
#declare DeclSubSchTable(SubSchTable)
  synonym Buhschet #SubSchTable
#end

//синоним для справочника КАУ
#declare DeclKAUTable(KAUTable)
  synonym Buhschet #KAUTable
#end

#declare DeclFavoriteAnalyticsStr(TableName,Sfx,Level)
  if (#Level = 0, '', if (GetAnyKau(cgAkSimple, #TableName.TBL#Sfx[#Level], #TableName.CKAU#Sfx[#Level]), GivenAnName(cgAnName), ''))
#end

#declare DeclDelOnFavoriteAnalytics(TableName,Sfx,Level)
  if #Level <> 0
  {
    #TableName.TBL#Sfx[#Level] := 0;
    set #TableName.CKAU#Sfx[#Level] := 0;
  }
#end

//подцепки
#declare Relations_DebTbl (TableName,SchetTable,SubSchTable,KAUTable)
      and PlansSch.Kod + #TableName.cSCHETD == #SchetTable.Schet
      and #TableName.cSubSchD == #SchetTable.SubSch
      and PlansSch.Kod + #TableName.cSCHETD == #SubSchTable.Schet
      and #TableName.cSubSchD == #SubSchTable.SubSch
      and PlansSch.Kod + #TableName.cSCHETD == #KAUTable.Schet
      and #TableName.cSubSchD == #KAUTable.SubSch
#end //Relations_DebTbl

//вычисление счета, субсчета, КАУ

#ifndef _12KAU_
  #declare CalcField_DebTbl (TableName,SchetTable,SubSchTable)
    #TableName.cSchetD, #TableName.cSubSchD,
    RTrim(if (GetAnyKau(cgAkSimple, #TableName.TBLD[1], #TableName.CKAUD[1]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBLD[2], #TableName.CKAUD[2]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBLD[3], #TableName.CKAUD[3]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBLD[4], #TableName.CKAUD[4]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBLD[5], #TableName.CKAUD[5]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBLD[6], #TableName.CKAUD[6]), GivenAnName(cgAnName), '') , '\')
  #end //CalcField_DebTbl
#else
  #declare CalcField_DebTbl (TableName,SchetTable,SubSchTable)
    #TableName.cSchetD, #TableName.cSubSchD,
    RTrim(if (GetAnyKau(cgAkSimple, #TableName.TBLD[1], #TableName.CKAUD[1]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBLD[2], #TableName.CKAUD[2]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBLD[3], #TableName.CKAUD[3]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBLD[4], #TableName.CKAUD[4]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBLD[5], #TableName.CKAUD[5]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBLD[6], #TableName.CKAUD[6]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBLD[7], #TableName.CKAUD[7]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBLD[8], #TableName.CKAUD[8]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBLD[9], #TableName.CKAUD[9]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBLD[10], #TableName.CKAUD[10]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBLD[11], #TableName.CKAUD[11]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBLD[12], #TableName.CKAUD[12]), GivenAnName(cgAnName), '') , '\')
  #end //CalcField_DebTbl
#endif

//вычисление счета, субсчета, КАУ, суффикс
#ifndef _12KAU_
  #declare CalcField_DebTblSfx (TableName,SchetTable,SubSchTable,Sfx)
    #TableName.cSchetD
    (fieldname = SchetDeb#Sfx),

    #TableName.cSubSchD
    (fieldname = SubSchDeb#Sfx),
    RTrim(if (GetAnyKau(cgAkSimple, #TableName.TBLD[1], #TableName.CKAUD[1]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBLD[2], #TableName.CKAUD[2]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBLD[3], #TableName.CKAUD[3]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBLD[4], #TableName.CKAUD[4]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBLD[5], #TableName.CKAUD[5]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBLD[6], #TableName.CKAUD[6]), GivenAnName(cgAnName), '') , '\')
    (fieldname = NamKAUD#Sfx)
  #end //CalcField_DebTblSfx
#else
  #declare CalcField_DebTblSfx (TableName,SchetTable,SubSchTable,Sfx)
    #TableName.cSchetD
    (fieldname = SchetDeb#Sfx),

    #TableName.cSubSchD
    (fieldname = SubSchDeb#Sfx),
    RTrim(if (GetAnyKau(cgAkSimple, #TableName.TBLD[1], #TableName.CKAUD[1]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBLD[2], #TableName.CKAUD[2]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBLD[3], #TableName.CKAUD[3]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBLD[4], #TableName.CKAUD[4]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBLD[5], #TableName.CKAUD[5]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBLD[6], #TableName.CKAUD[6]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBLD[7], #TableName.CKAUD[7]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBLD[8], #TableName.CKAUD[8]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBLD[9], #TableName.CKAUD[9]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBLD[10], #TableName.CKAUD[10]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBLD[11], #TableName.CKAUD[11]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBLD[12], #TableName.CKAUD[12]), GivenAnName(cgAnName), '') , '\')
    (fieldname = NamKAUD#Sfx)
  #end //CalcField_DebTblSfx
#endif

//------------------------------------------------------------------------------
#ifndef _12KAU_
  #declare CalcField_Deb (TableName)
    #TableName.cSchetD,
    #TableName.cSubSchD,
    RTrim(if (GetAnyKau(cgAkSimple, #TableName.TBLD[1], #TableName.CKAUD[1]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBLD[2], #TableName.CKAUD[2]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBLD[3], #TableName.CKAUD[3]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBLD[4], #TableName.CKAUD[4]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBLD[5], #TableName.CKAUD[5]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBLD[6], #TableName.CKAUD[6]), GivenAnName(cgAnName), '') , '\')
  #end //CalcField_Deb
#else
  #declare CalcField_Deb (TableName)
    #TableName.cSchetD,
    #TableName.cSubSchD,
    RTrim(if (GetAnyKau(cgAkSimple, #TableName.TBLD[1], #TableName.CKAUD[1]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBLD[2], #TableName.CKAUD[2]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBLD[3], #TableName.CKAUD[3]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBLD[4], #TableName.CKAUD[4]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBLD[5], #TableName.CKAUD[5]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBLD[6], #TableName.CKAUD[6]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBLD[7], #TableName.CKAUD[7]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBLD[8], #TableName.CKAUD[8]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBLD[9], #TableName.CKAUD[9]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBLD[10], #TableName.CKAUD[10]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBLD[11], #TableName.CKAUD[11]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBLD[12], #TableName.CKAUD[12]), GivenAnName(cgAnName), '') , '\')
  #end //CalcField_Deb
#endif

#ifndef _12KAU_
  #declare CalcField_Kr (TableName)
    #TableName.cSchetK,
    #TableName.cSubSchK,
    RTrim(if (GetAnyKau(cgAkSimple, #TableName.TBLK[1], #TableName.CKAUK[1]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBLK[2], #TableName.CKAUK[2]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBLK[3], #TableName.CKAUK[3]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBLK[4], #TableName.CKAUK[4]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBLK[5], #TableName.CKAUK[5]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBLK[6], #TableName.CKAUK[6]), GivenAnName(cgAnName), '') , '\')
  #end //CalcField_Kr
#else
  #declare CalcField_Kr (TableName)
    #TableName.cSchetK,
    #TableName.cSubSchK,
    RTrim(if (GetAnyKau(cgAkSimple, #TableName.TBLK[1], #TableName.CKAUK[1]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBLK[2], #TableName.CKAUK[2]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBLK[3], #TableName.CKAUK[3]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBLK[4], #TableName.CKAUK[4]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBLK[5], #TableName.CKAUK[5]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBLK[6], #TableName.CKAUK[6]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBLK[7], #TableName.CKAUK[7]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBLK[8], #TableName.CKAUK[8]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBLK[9], #TableName.CKAUK[9]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBLK[10], #TableName.CKAUK[10]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBLK[11], #TableName.CKAUK[11]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBLK[12], #TableName.CKAUK[12]), GivenAnName(cgAnName), '') , '\')
  #end //CalcField_Kr
#endif

#ifndef _12KAU_
  #declare CalcField_K (TableName)
    #TableName.cSchetK,
    #TableName.cSubSchK,
    RTrim(if (GetAnyKau(cgAkSimple, #TableName.TBLK[1], #TableName.CKAUK[1]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBLK[2], #TableName.CKAUK[2]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBLK[3], #TableName.CKAUK[3]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBLK[4], #TableName.CKAUK[4]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBLK[5], #TableName.CKAUK[5]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBLK[6], #TableName.CKAUK[6]), GivenAnName(cgAnName), '') , '\')
  #end //CalcField_K
#else
  #declare CalcField_K (TableName)
    #TableName.cSchetK,
    #TableName.cSubSchK,
    RTrim(if (GetAnyKau(cgAkSimple, #TableName.TBLK[1], #TableName.CKAUK[1]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBLK[2], #TableName.CKAUK[2]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBLK[3], #TableName.CKAUK[3]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBLK[4], #TableName.CKAUK[4]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBLK[5], #TableName.CKAUK[5]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBLK[6], #TableName.CKAUK[6]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBLK[7], #TableName.CKAUK[7]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBLK[8], #TableName.CKAUK[8]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBLK[9], #TableName.CKAUK[9]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBLK[10], #TableName.CKAUK[10]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBLK[11], #TableName.CKAUK[11]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBLK[12], #TableName.CKAUK[12]), GivenAnName(cgAnName), '') , '\')
  #end //CalcField_K
#endif

#ifndef _12KAU_
  #declare CalcField_ (TableName,Ends)
    #TableName.cSchet#Ends, #TableName.cSubSch#Ends,
    RTrim(
      if (GetAnyKau(cgAkSimple, #TableName.TBL#Ends[1], #TableName.CKAU#Ends[1]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBL#Ends[2], #TableName.CKAU#Ends[2]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBL#Ends[3], #TableName.CKAU#Ends[3]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBL#Ends[4], #TableName.CKAU#Ends[4]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBL#Ends[5], #TableName.CKAU#Ends[5]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBL#Ends[6], #TableName.CKAU#Ends[6]), GivenAnName(cgAnName), '') , '\')
  #end //CalcField_
#else
  #declare CalcField_ (TableName,Ends)
    #TableName.cSchet#Ends, #TableName.cSubSch#Ends,
    RTrim(
      if (GetAnyKau(cgAkSimple, #TableName.TBL#Ends[1], #TableName.CKAU#Ends[1]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBL#Ends[2], #TableName.CKAU#Ends[2]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBL#Ends[3], #TableName.CKAU#Ends[3]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBL#Ends[4], #TableName.CKAU#Ends[4]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBL#Ends[5], #TableName.CKAU#Ends[5]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBL#Ends[6], #TableName.CKAU#Ends[6]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBL#Ends[7], #TableName.CKAU#Ends[7]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBL#Ends[8], #TableName.CKAU#Ends[8]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBL#Ends[9], #TableName.CKAU#Ends[9]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBL#Ends[10], #TableName.CKAU#Ends[10]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBL#Ends[11], #TableName.CKAU#Ends[11]), GivenAnName(cgAnName), '') + '\' +
      if (GetAnyKau(cgAkSimple, #TableName.TBL#Ends[12], #TableName.CKAU#Ends[12]), GivenAnName(cgAnName), '') , '\')
  #end //CalcField_
#endif

#ifndef _12KAU_
  #declare CalcField_P (TableName,Ends)
    #TableName.cSchet#Ends, #TableName.cSubSch#Ends,
    RTrim(if (#TableName.FormKau[1] = cgPick_Money,'<очистить>',
      if (GetAnyKau(cgAkSimple, #TableName.TBL#Ends[1], #TableName.CKAU#Ends[1]), GivenAnName(cgAnName), '')) + '\' +
      if (#TableName.FormKau[2] = cgPick_Money,'<очистить>',
      if (GetAnyKau(cgAkSimple, #TableName.TBL#Ends[2], #TableName.CKAU#Ends[2]), GivenAnName(cgAnName), '')) + '\' +
      if (#TableName.FormKau[3] = cgPick_Money,'<очистить>',
      if (GetAnyKau(cgAkSimple, #TableName.TBL#Ends[3], #TableName.CKAU#Ends[3]), GivenAnName(cgAnName), '')) + '\' +
      if (#TableName.FormKau[4] = cgPick_Money,'<очистить>',
      if (GetAnyKau(cgAkSimple, #TableName.TBL#Ends[4], #TableName.CKAU#Ends[4]), GivenAnName(cgAnName), '')) + '\' +
      if (#TableName.FormKau[5] = cgPick_Money,'<очистить>',
      if (GetAnyKau(cgAkSimple, #TableName.TBL#Ends[5], #TableName.CKAU#Ends[5]), GivenAnName(cgAnName), '')) + '\' +
      if (#TableName.FormKau[6] = cgPick_Money,'<очистить>',
      if (GetAnyKau(cgAkSimple, #TableName.TBL#Ends[6], #TableName.CKAU#Ends[6]), GivenAnName(cgAnName), '')) , '\')
  #end //CalcField_P
#else
  #declare CalcField_P (TableName,Ends)
    #TableName.cSchet#Ends, #TableName.cSubSch#Ends,
    RTrim(if (#TableName.FormKau[1] = cgPick_Money,'<очистить>',
      if (GetAnyKau(cgAkSimple, #TableName.TBL#Ends[1], #TableName.CKAU#Ends[1]), GivenAnName(cgAnName), '')) + '\' +
      if (#TableName.FormKau[2] = cgPick_Money,'<очистить>',
      if (GetAnyKau(cgAkSimple, #TableName.TBL#Ends[2], #TableName.CKAU#Ends[2]), GivenAnName(cgAnName), '')) + '\' +
      if (#TableName.FormKau[3] = cgPick_Money,'<очистить>',
      if (GetAnyKau(cgAkSimple, #TableName.TBL#Ends[3], #TableName.CKAU#Ends[3]), GivenAnName(cgAnName), '')) + '\' +
      if (#TableName.FormKau[4] = cgPick_Money,'<очистить>',
      if (GetAnyKau(cgAkSimple, #TableName.TBL#Ends[4], #TableName.CKAU#Ends[4]), GivenAnName(cgAnName), '')) + '\' +
      if (#TableName.FormKau[5] = cgPick_Money,'<очистить>',
      if (GetAnyKau(cgAkSimple, #TableName.TBL#Ends[5], #TableName.CKAU#Ends[5]), GivenAnName(cgAnName), '')) + '\' +
      if (#TableName.FormKau[6] = cgPick_Money,'<очистить>',
      if (GetAnyKau(cgAkSimple, #TableName.TBL#Ends[6], #TableName.CKAU#Ends[6]), GivenAnName(cgAnName), '')) + '\' +
      if (#TableName.FormKau[7] = cgPick_Money,'<очистить>',
      if (GetAnyKau(cgAkSimple, #TableName.TBL#Ends[7], #TableName.CKAU#Ends[7]), GivenAnName(cgAnName), '')) + '\' +
      if (#TableName.FormKau[8] = cgPick_Money,'<очистить>',
      if (GetAnyKau(cgAkSimple, #TableName.TBL#Ends[8], #TableName.CKAU#Ends[8]), GivenAnName(cgAnName), '')) + '\' +
      if (#TableName.FormKau[9] = cgPick_Money,'<очистить>',
      if (GetAnyKau(cgAkSimple, #TableName.TBL#Ends[9], #TableName.CKAU#Ends[9]), GivenAnName(cgAnName), '')) + '\' +
      if (#TableName.FormKau[10] = cgPick_Money,'<очистить>',
      if (GetAnyKau(cgAkSimple, #TableName.TBL#Ends[10], #TableName.CKAU#Ends[10]), GivenAnName(cgAnName), '')) + '\' +
      if (#TableName.FormKau[11] = cgPick_Money,'<очистить>',
      if (GetAnyKau(cgAkSimple, #TableName.TBL#Ends[11], #TableName.CKAU#Ends[11]), GivenAnName(cgAnName), '')) + '\' +
      if (#TableName.FormKau[12] = cgPick_Money,'<очистить>',
      if (GetAnyKau(cgAkSimple, #TableName.TBL#Ends[12], #TableName.CKAU#Ends[12]), GivenAnName(cgAnName), '')) , '\')
  #end //CalcField_P
#endif

//------------------------------------------------------------------------------

#declare Relations_Deb (TableName)
  PLANSSCH.KOD + #TableName.CSCHETD == SCHETKAU.SCHET and
  #TableName.CSUBSCHD == SCHETKAU.SUBSCH
#end //Relations_Deb

#declare Relations_Kr (TableName)
  PLANSSCH.KOD + #TableName.CSCHETK == SCHETKAU1.SCHET and
  #TableName.CSUBSCHK == SCHETKAU1.SUBSCH
#end // Relations_Kr

#declare Relations_  (TableName,Ends)
  PLANSSCH.KOD + #TableName.CSCHET#Ends == SCHETKAU2.SCHET and
  #TableName.CSUBSCH#Ends == SCHETKAU2.SUBSCH
#end // Relations_

#declare SetDef_Deb (TableName)
begin
  var I : Integer;
  #TableName.CSCHETD   := cgDefSch;
  #TableName.CSUBSCHD  := cgDefSub;
  for (I := cFirstKAU; I <= cLastKAU; I := I + 1)
  {
    #TableName.TBLD[I]   := 0;
    #TableName.CKAUD[I]  := SetDefKodeKau;
  }
end;
#end //SetDef_Deb

#declare SetDef_Kr (TableName)
 begin
   var I : Integer;
    #TableName.CSCHETK  := cgDefSch;
    #TableName.CSUBSCHK := cgDefSub;
    for (I := cFirstKAU; I <= cLastKAU; I := I + 1)
    {
      #TableName.TBLK[I]   := 0;
      #TableName.CKAUK[I]  := SetDefKodeKau;
    }
 end;
#end //SetDef_Kr

#declare SetDef_ (TableName,Ends)
begin
  var I : Integer;
  #TableName.CSCHET#Ends  := cgDefSch;
  #TableName.CSUBSCH#Ends := cgDefSub;
  for (I := cFirstKAU; I <= cLastKAU; I := I + 1)
  {
    #TableName.TBL#Ends[I]   := 0;
    #TableName.CKAU#Ends[I]  := SetDefKodeKau;
  }
end;
#end //SetDef_

#declare Pick_Deb (TableName, SchetField, SubschField, KAUField)
begin
    if (CurField = #SchetField) or (CurField = #SubschField)
    {
      if (CurCommand = cmOpenSearch)
        QuickChoiceName := if (CurField = #SchetField, 'qcBuh_SchetAndSub', 'qcBuh_SubSchet');
      else
        QuickChoiceName := '';
      shpzar := PLANSSCH.KOD + #TableName.CSCHETD;
      if (RunInterface('GetBuhSchet', word(cgiPick), MyPlansNo, shpzar, #TableName.CSUBSCHD) <> cmCancel)
      {
        #TableName.cSchetD  := SubStr(shpzar, 2, cgSchetLength-1);
        var SA: StickyAnalytics;
        SA.Stick(shpzar, #TableName.CSUBSCHD, #TableName.TBLD, #TableName.CKAUD);
        set #TableName.cSchetD := #TableName.CSCHETD;
      }
    }
    if (CurField = #KAUField)
    {
      var psKod: string[1];
      while (true)
      {
        psKod := PlansSch.Kod;
        shpzar := psKod + #TableName.cSchetD;

        iXGetKau.PickKauBuh(cgiPick, 0, shpzar, #TableName.cSubSchD, #TableName.TBLD, #TableName.CKAUD);

        var cPlan: comp;
        cPlan := coGetTune('Fin.User.cPlansSch');
        if (GetFirst PlansSch where (( cPlan == PlansSch.NRec )) = tsOk)
        {
          myPlansNo := cPlan;
          if (psKod <> PlansSch.Kod)
            continue; // Изменили план счетов, надо попробовать ещё раз
        }

        set #TableName.CKAUD[1] := #TableName.CKAUD[1];
        break;
      }
    }
end;
#end //Pick_Deb

#declare Pick_Kr (TableName, SchetField, SubschField, KAUField)
begin
    if (CurField = #SchetField) or (CurField = #SubschField)
    {
      if (CurCommand = cmOpenSearch)
        QuickChoiceName := if (CurField = #SchetField, 'qcBuh_SchetAndSub', 'qcBuh_SubSchet');
      else
        QuickChoiceName := '';
      shpzar := PLANSSCH.KOD + #TableName.CSCHETK;
      if (RunInterface('GetBuhSchet', word(cgiPick), MyPlansNo, shpzar, #TableName.CSUBSCHK) <> cmCancel)
      {
        #TableName.CSCHETK := SubStr(shpzar, 2, cgSchetLength-1);
        var SA: StickyAnalytics;
        SA.Stick(shpzar, #TableName.CSUBSCHk, #TableName.TBLK, #TableName.CKAUK);
        set #TableName.CSCHETK := #TableName.CSCHETK;
      }
    }
    if (CurField = #KAUField)
    {
      var psKod: string[1];
      while (true)
      {
        psKod := PlansSch.Kod;
        shpzar := psKod + #TableName.CSCHETK;
        iXGetKau.PickKauBuh(cgiPick, 0, shpzar, #TableName.CSUBSCHK, #TableName.TBLK, #TableName.CKAUK);

        var cPlan: comp;
        cPlan := coGetTune('Fin.User.cPlansSch');
        if (GetFirst PlansSch where (( cPlan == PlansSch.NRec )) = tsOk)
        {
          myPlansNo := cPlan;
          if (psKod <> PlansSch.Kod)
            continue; // Изменили план счетов, надо попробовать ещё раз
        }

        set #TableName.CKAUK[1] := #TableName.CKAUK[1]
        break;
      }
    }
end;
#end // Pick_Kr

#declare Pick_ (TableName, SchetField, SubschField, KAUField, Ends)
begin
    if (CurField = #SchetField) or (CurField = #SubschField)
    {
      if (CurCommand = cmOpenSearch)
        QuickChoiceName := if (CurField = #SchetField, 'qcBuh_SchetAndSub', 'qcBuh_SubSchet');
      else
        QuickChoiceName := '';
      shpzar := PLANSSCH.KOD + #TableName.CSCHET#Ends;
      if (RunInterface('GetBuhSchet', word(cgiPick), MyPlansNo, shpzar, #TableName.CSUBSCH#Ends) <> cmCancel)
      {
        #TableName.CSCHET#Ends  := SubStr(shpzar, 2, cgSchetLength-1);
        var SA: StickyAnalytics;
        SA.Stick(shpzar, #TableName.CSUBSCH#Ends, #TableName.TBL#Ends, #TableName.CKAU#Ends);
        set #TableName.CSCHET#Ends := #TableName.CSCHET#Ends;
      }
    }
    if (CurField = #KAUField)
    {
      var psKod: string[1];
      while (true)
      {
        psKod := PlansSch.Kod;
        shpzar := psKod + #TableName.CSCHET#Ends;
        iXGetKau.PickKauBuh(cgiPick, 0, shpzar, #TableName.CSUBSCH#Ends, #TableName.TBL#Ends, #TableName.CKAU#Ends);

        var cPlan: comp;
        cPlan := coGetTune('Fin.User.cPlansSch');
        if (GetFirst PlansSch where (( cPlan == PlansSch.NRec )) = tsOk)
        {
          myPlansNo := cPlan;
          if (psKod <> PlansSch.Kod)
            continue; // Изменили план счетов, надо попробовать ещё раз
        }

        set #TableName.CKAU#Ends[1] := #TableName.CKAU#Ends[1];
        break;
      }
    }
end;
#end //Pick_

#declare PickSch_ (TableName,SchetField,Ends)
{
  if (CurField = #SchetField)
  {
    if (CurCommand = cmOpenSearch)
        QuickChoiceName := 'qcBuh_SchetAndSub';
      else
        QuickChoiceName := '';
    shpzar := PLANSSCH.KOD + #TableName.CSCHET#Ends;
    if (RunInterface('GetBuhSchet', word(cgiPick), MyPlansNo, shpzar, #TableName.CSUBSCH#Ends) <> cmCancel)
    {
      #TableName.CSCHET#Ends := SubStr(shpzar, 2, cgSchetLength-1);
      var SA: StickyAnalytics;
      SA.Stick(shpzar, #TableName.CSUBSCH#Ends, #TableName.TBL#Ends, #TableName.CKAU#Ends);
      set #TableName.CSCHET#Ends := #TableName.CSCHET#Ends;
    }
  }
}
#end //PickSch_

#declare PickSbSch_ (TableName,SubschField,Ends)
{
  if (CurField = #SubschField)
  {
    if (CurCommand = cmOpenSearch)
        QuickChoiceName := 'qcBuh_SubSchet';
      else
        QuickChoiceName := '';
    shpzar := PLANSSCH.KOD + #TableName.CSCHET#Ends;
    if (RunInterface('GetBuhSchet', word(cgiPick), MyPlansNo, shpzar, #TableName.CSUBSCH#Ends) <> cmCancel)
    {
      #TableName.CSCHET#Ends := SubStr(shpzar, 2, cgSchetLength-1);
      var SA: StickyAnalytics;
      SA.Stick(shpzar, #TableName.CSUBSCH#Ends, #TableName.TBL#Ends, #TableName.CKAU#Ends);
      set #TableName.CSCHET#Ends := #TableName.CSCHET#Ends;
    }
  }
}
#end //PickSbSch_

#declare PickAnalyticsLevel(TableName,Level,Suffix)
  iXGetKau.PickKauBuh
  (
    cgiPick,
    #Level,
    PLANSSCH.KOD + #TableName.cSchet#Suffix,
    #TableName.CSUBSCH#Suffix,
    #TableName.TBL#Suffix,
    #TableName.CKAU#Suffix
  )
#end

//------------------------------------------------------------------------------
// Проверка корректности счетов|субсчетов
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
// Проверка корректности дебетового счета|субсчета
//------------------------------------------------------------------------------
#declare CheckField_Deb (TableName)
{}
#end // CheckField_Deb

#declare CheckField_Kr (TableName)
{}
#end // CheckField_Kr


//------------------------------------------------------------------------------
// Обработка cmDelOnProtect
//------------------------------------------------------------------------------

#declare DelonProtect_Deb (TableName, SchetField, SubschField ,KAUField)
begin
  var I : Integer;
  if (CurField = #SchetField)
  {
    #TableName.cSchetD  := cgDefSch;
    for (I := cFirstKAU; I <= cLastKAU; I := I + 1)
    {
      #TableName.TblD[I]  := 0;
      #TableName.cKauD[I] := SetDefKodeKau;
    }
    set #TableName.cSubSchD := cgDefSub;
    //ReDrawPanel(tn#TableName);
    stop;
  }

  if (CurField = #SubschField)
  {
    var SA: StickyAnalytics;
    SA.Stick(PLANSSCH.KOD + #TableName.cSchetD, cgDefSub, #TableName.TBLD, #TableName.CKAUD);
    set #TableName.cSubSchD := cgDefSub;
    //ReDrawPanel(tn#TableName);
    stop;
  }

  if (CurField = #KAUField)
  {
    for (I := cFirstKAU; I <= cLastKAU; I := I + 1)
    {
      #TableName.TblD[I]  := 0;
      #TableName.cKauD[I] := SetDefKodeKau;
    }
    set #TableName.cSchetD := #TableName.cSchetD;
    //ReDrawPanel(tn#TableName);
    stop;
  }
end;
#end // DelonProtect_Deb

#declare DelonProtect_Kr (TableName, SchetField, SubschField,KAUField)
begin
  var I : Integer;
  if (CurField = #SchetField)
  {
    #TableName.cSchetK  := cgDefSch;
    for (I := cFirstKAU; I <= cLastKAU; I := I + 1)
    {
      #TableName.TblK[I] := 0;
      #TableName.cKauK[I] := SetDefKodeKau;
    }
    set #TableName.cSubSchK := cgDefSub;
    //ReDrawPanel(tn#TableName);
    stop;
  }

  if (CurField = #SubschField)
  {
    var SA: StickyAnalytics;
    SA.Stick(PLANSSCH.KOD + #TableName.cSchetK, cgDefSub, #TableName.TBLK, #TableName.CKAUK);
    //ReDrawPanel(tn#TableName);
    set #TableName.cSubSchK := cgDefSub;
    stop;
  }

  if (CurField = #KAUField)
  {
    for (I := cFirstKAU; I <= cLastKAU; I := I + 1)
    {
      #TableName.TblK[I]  := 0;
      #TableName.cKauK[I] := SetDefKodeKau;
    }
    set #TableName.cSchetK := #TableName.cSchetK;
    //ReDrawPanel(tn#TableName);
    stop;
  }
 end;
#end // DelonProtect_Kr

#declare DelonProtect_ (TableName, SchetField, SubschField, KAUField, Ends)
begin
  var I : Integer;
  if (CurField = #SchetField)
  {
    #TableName.CSCHET#Ends  := cgDefSch;
    for (I := cFirstKAU; I <= cLastKAU; I := I + 1)
    {
      #TableName.TBL#Ends[I]  := 0;
      #TableName.CKAU#Ends[I] := SetDefKodeKau;
    }
    set #TableName.CSUBSCH#Ends := cgDefSub;
    //ReDrawPanel(tn#TableName);
    stop;
  }

  if (CurField = #SubschField)
  {
    var SA: StickyAnalytics;
    SA.Stick(PLANSSCH.KOD + #TableName.cSchet#Ends, cgDefSub, #TableName.TBL#Ends, #TableName.CKAU#Ends);
    set #TableName.CSUBSCH#Ends := cgDefSub;
    //ReDrawPanel(tn#TableName);
    stop;
  }

  if (CurField = #KAUField)
  {
    for (I := cFirstKAU; I <= cLastKAU; I := I + 1)
    {
      #TableName.TBL#Ends[I]  := 0;
      #TableName.CKAU#Ends[I] := SetDefKodeKau;
    }
    set #TableName.CSCHET#Ends := #TableName.CSCHET#Ends;
    //ReDrawPanel(tn#TableName);
    stop;
  }
end;
#end // DelonProtect_


#declare CopyInfo_ (DestTable, SourceTable)
begin
  var I : Integer;
  #DestTable.cSCHETD  := #SourceTable.cSCHETD;
  #DestTable.cSUBSCHD := #SourceTable.cSUBSCHD;
  for (I := cFirstKAU; I <= cLastKAU; I := I + 1)
  {
    #DestTable.TblD[I]  := #SourceTable.TblD[I];
    #DestTable.cKAUD[I] := #SourceTable.cKAUD[I];
  }
end;
#end //CopyInfo_

#declare CopyInfo_K (DestTable, SourceTable)
 begin
   var I : Integer;
   #DestTable.cSCHETK  := #SourceTable.cSCHETK;
   #DestTable.cSUBSCHK := #SourceTable.cSUBSCHK;
   for (I := cFirstKAU; I <= cLastKAU; I := I + 1)
   {
     #DestTable.TblK[I]  := #SourceTable.TblK[I];
     #DestTable.cKAUK[I] := #SourceTable.cKAUK[I];
   }
 end;
#end //CopyInfo_K

#declare CopyHozOper(DestTable, SourceTable)
{
  set #DestTable.CHOZOPER := #SourceTable.CHOZOPER;
  set #DestTable.PARAM    := #SourceTable.PARAM;
}
#end //CopyHozOper

#declare SetCurField_Deb (TableName)
begin
  if (Target = #SchetDeb) and (#TableName.cSchetD = cgDefSch)
    PutCommand(cmPick);
end;
#end //SetCurField_Deb

#declare SetCurField_Kr (TableName)
begin
  if (Target = #SchetKr) and (#TableName.cSchetK = cgDefSub)
    PutCommand(cmPick);
end;
#end //SetCurField_Kr
