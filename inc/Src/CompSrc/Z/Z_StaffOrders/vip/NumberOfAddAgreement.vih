/*
  Проект        : ГАЛАКТИКА
  Система       : Управление персоналом
  Назначение    : Объектный интерфейс обработки номеров доп. соглашений
*/
#ifndef _NumberOfAddAgreement_INCLUDED_
#define _NumberOfAddAgreement_INCLUDED_

#ifdef ComponentVersion
#component "Z_StaffOrders"
#end

#doc
Объектный интерфейс обработки номеров доп. соглашений
#end
objinterface INumberOfAddAgreement;
deprecated 'Функции, описанные в INumberOfAddAgreement2, работают с текущим договором сотрудника. Они устарели, т.к. учет доп. соглашений теперь ведется в разрезе договоров, а не карточек. Используйте методы, описанные в INumberOfAddAgreementNew.';

#doc
Функция проверки уникальности присваемого номера
#end
Function CheckNumberAgreement(cPsn: comp; fNum: longint; cCont: comp): boolean;

#doc
Функция нахождения последнего номера задействованного доп. соглашения
ff - возвращаемый номер, dd - возвращаемая дата доп. соглашения
#end
Function GetLastAgreement(cPsn: comp; var ff: longint; var dd: date): boolean;

#doc
Функция нахождения следующего номера для очередного доп. соглашения
#end
Function GetNewAgreement(cPsn: comp): longint;

#doc
Функция печати свободных номеров доп. соглашений
#end
Procedure PrintFreeAgreement(cPsn: comp);

end;

#doc
Расширение объектного интерфейса по работе с номерами доп. соглашений
#end
objinterface INumberOfAddAgreement2;
deprecated 'Функции, описанные в INumberOfAddAgreement2, работают с текущим договором сотрудника. Они устарели, т.к. учет доп. соглашений теперь ведется в разрезе договоров, а не карточек. Используйте методы, описанные в INumberOfAddAgreementNew.';

#doc
Функция нахождения последнего номера задействованного доп. соглашения
без учета неутвержденных приказов
ff - возвращаемый номер, dd - возвращаемая дата доп. соглашения
#end
Function GetLastAgreementWithoutOrders(cPsn: comp; var ff: longint; var dd: date): boolean;


#doc
Функция проверки уникальности присваемого номера
без учета неутвержденных приказов
#end
Function CheckNumberAgreementWithoutOrders(cPsn: comp; fNum: longint; cCont: comp): boolean;

end;

#doc
Расширение объектного интерфейса по работе с номерами доп. соглашений
#end
objinterface INumberOfAddAgreement3;
deprecated 'Функции, описанные в INumberOfAddAgreement2, работают с текущим договором сотрудника. Они устарели, т.к. учет доп. соглашений теперь ведется в разрезе договоров, а не карточек. Используйте методы, описанные в INumberOfAddAgreementNew.';

#doc
Функция печати информации о номерах доп. соглашений, использованных для карточки с кодом _cPerson
за исключением номера, использованного в позиции документа (ContDoc) с кодом _cCont.
#end
procedure PrintFreeAgreement4ContDoc(_cPerson, _cCont: comp);

end;

private objinterface INumberOfAddAgreementPrivate;

procedure SetRelation(_cContract: comp);

end;

objinterface INumberOfAddAgreementNew;

#doc
Проверка поддержки системой возможности формирования доп. соглашений для РПД по персоналу с кодом <code>_wPersRPD</code>.
#end
function CanFormAddAgreementPers(_wPersRPD: word): boolean;

#doc
Проверка поддержки системой возможности формирования доп. соглашений для РПД по штатному расписанию с кодом <code>_wShrRPD</code>.
#end
function CanFormAddAgreementSHR(_wShrRPD: word): boolean;

#doc
Получение значения настройки необходимости формирования доп. соглашений для РПД по персоналу с кодом <code>_wPersRPD</code>.</brief>
<p>При проверке учитывается и значение системной настройки, и установленность признака в классификаторе РПД.</p>
#end
function NeedFormAddAgreementPers(_wPersRPD: word): boolean;

#doc
Получение значения настройки необходимости формирования доп. соглашений для РПД по штатному расписанию с кодом <code>_wShrRPD</code>.</brief>
<p>При проверке учитывается и значение системной настройки, и установленность признака в классификаторе РПД.</p>
#end
function NeedFormAddAgreementSHR(_wShrRPD: word): boolean;

#doc
Получение текстового представления информации о доп. соглашении с кодом <code>_cAgreement</code>.</brief>
<p>Пример возвращаемого значения: "от 11/06/2015 № 2005".</p>
#end
function GetAgreementString(_cAgreement: comp): string;

#doc
Получение номера доп. соглашении с кодом <code>_cAgreement</code>.
#end
function GetAgreementNmb(_cAgreement: comp): string;

#doc
Получение даты доп. соглашении с кодом <code>_cAgreement</code>.
#end
function GetAgreementDate(_cAgreement: comp): date;

#doc
Функция создает доп. соглашения к трудовому договору и возвращает на него ссылку.</brief>
<h3>Параметры</h3>
<ul>
  <li><code>_cContract</code> - ссылка на трудовой договор</li>
  <li><code>_dateAgreement</code> - дата доп. соглашения</li>
  <li><code>_wLink</code> - константа-код сущности, ссылающейся на доп. соглашение (к примеру, <code>coAppHist</code>, <code>coContDoc</code>)</li>
  <li><code>_cLink</code> - уникальный идентификатор сущности, ссылающейся на доп. соглашение (к примеру, <code>AppHist.NRec</code>, <code>ContDoc.NRec</code>)</li>
  <li><code>_cDopLink</code> - дополнительная ссылка (к примеру, ссылка на назначение для соглашения к истории каталогов) - необязательный параметр</li>
</ul>
#end
function CreateAgreement(_cContract: comp; _dateAgreement: date; _wLink: word; _cLink: comp; _cDopLink: comp = 0): comp;

#doc
Отображение окна просмотра/редактирования доп. соглашения.</brief>
<h3>Параметры</h3>
<ul>
  <li><code>_wLink</code> - константа-код сущности, ссылающейся на доп. соглашение (к примеру, <code>coAppHist</code>, <code>coContDoc</code>)</li>
  <li><code>_cLink</code> - уникальный идентификатор сущности, ссылающейся на доп. соглашение (к примеру, <code>AppHist.NRec</code>, <code>ContDoc.NRec</code>)</li>
  <li><code>_dateAgreement</code> - дата доп. соглашения</li>
  <li><code>_cContract</code> - ссылка на трудовой договор, если <code>0</code>, то будет выведен перечень договоров сотрудника по следующим параметрам</li>
  <li><code>_cPsn</code> - ссылка карточку сотрудника, если <code>0</code>, то карточка будет взята из назначения по следующему параметру (необязательный параметр)</li>
  <li><code>_cApp</code> - ссылка на назначение сотрудника (необязательный параметр)</li>
</ul>
#end
procedure ShowAgreementWin(_wLink: word; _cLink: comp; _dateAgreement: date; _cContract: comp; _cPsn: comp = 0; _cApp: comp = 0);

#doc
Получение ссылки на договор, по которому оформлено доп. соглашение с кодом <code>_cAgreement</code>.
#end
function GetContractByAgreement(_cAgreement: comp): comp;

#doc
Получение ссылки на любое доп. соглашение, связанное с сущностью.</brief>
<p>Функция применима в тех случаях, когда с сущностью может быть связано только одно доп. соглашение (к примеру, запись истории назначения от приказа по персоналу).</p>
<h3>Параметры</h3>
<ul>
  <li><code>_wLink</code> - константа-код сущности, ссылающейся на доп. соглашение (к примеру, <code>coAppHist</code>, <code>coContDoc</code>)</li>
  <li><code>_cLink</code> - уникальный идентификатор сущности, ссылающейся на доп. соглашение (к примеру, <code>AppHist.NRec</code>, <code>ContDoc.NRec</code>)</li>
</ul>
#end
function GetFirstAgreementByLink(_wLink: word; _cLink: comp): comp;

#doc
Получение ссылки на доп. соглашение, связанное с договором и сущностью.</brief>
<p>Функция применима в тех случаях, когда с сущностью может быть связано множество доп. соглашений (к примеру, запись истории каталогов от приказа по ШР).</p>
<h3>Параметры</h3>
<ul>
  <li><code>_cContract</code> - ссылка на трудовой договор</li>
  <li><code>_wLink</code> - константа-код сущности, ссылающейся на доп. соглашение (к примеру, <code>coAppHist</code>, <code>coContDoc</code>)</li>
  <li><code>_cLink</code> - уникальный идентификатор сущности, ссылающейся на доп. соглашение (к примеру, <code>AppHist.NRec</code>, <code>ContDoc.NRec</code>)</li>
  <li><code>_cDopLink</code> - дополнительная ссылка (к примеру, ссылка на назначение для соглашения к истории каталогов) - необязательный параметр</li>
</ul>
#end
function GetContractAgreementByLink(_cContract: comp; _wLink: word; _cLink: comp; _cDopLink: comp = 0): comp;

#doc
Связать сущность с доп. соглашением.</brief>
<p>В том случае, если сущность уже связана с каким-либо доп. соглашением, функция не создает связей и возвращает <code>false</code>.</p>
<h3>Параметры</h3>
<ul>
  <li><code>_cAgreement</code> - код доп. соглашения</li>
  <li><code>_wLink</code> - константа-код сущности, ссылающейся на доп. соглашение (к примеру, <code>coAppHist</code>, <code>coContDoc</code>)</li>
  <li><code>_cLink</code> - уникальный идентификатор сущности, ссылающейся на доп. соглашение (к примеру, <code>AppHist.NRec</code>, <code>ContDoc.NRec</code>)</li>
  <li><code>_cDopLink</code> - дополнительная ссылка (к примеру, ссылка на назначение для соглашения к истории каталогов) - необязательный параметр</li>
</ul>
#end
function AddToAgreement(_cAgreement: comp; _wLink: word; _cLink: comp; _cDopLink: comp = 0): boolean;

#doc
Отвязать сущность от всех доп. соглашений.</brief>
<p>При удалении связи проводится проверка на то, связано ли доп. соглашение с другими сущностями. Если связей не найдено, доп. соглашение удаляется.</p>
<h3>Параметры</h3>
<ul>
  <li><code>_wLink</code> - константа-код сущности, ссылающейся на доп. соглашение (к примеру, <code>coAppHist</code>, <code>coContDoc</code>)</li>
  <li><code>_cLink</code> - уникальный идентификатор сущности, ссылающейся на доп. соглашение (к примеру, <code>AppHist.NRec</code>, <code>ContDoc.NRec</code>)</li>
  <li><code>_cDopLink</code> - дополнительная ссылка (к примеру, ссылка на назначение для соглашения к истории каталогов) - необязательный параметр</li>
</ul>
#end
procedure DeleteAgreementLinks(_wLink: word; _cLink: comp; _cDopLink: comp = 0);

#doc
Вызов формирования потока для доп. соглашения с кодом <code>_cAgreement</code>.
#end
procedure PrintAgreement(_cAgreement: comp);

#doc
Вызов формирования потока для доп. соглашений, связанных с сущностью.</brief>.
<h3>Параметры</h3>
<ul>
  <li><code>_wLink</code> - константа-код сущности, ссылающейся на доп. соглашение (к примеру, <code>coAppHist</code>, <code>coContDoc</code>)</li>
  <li><code>_cLink</code> - уникальный идентификатор сущности, ссылающейся на доп. соглашение (к примеру, <code>AppHist.NRec</code>, <code>ContDoc.NRec</code>)</li>
</ul>
#end
procedure PrintAllAgreements(_wLink: word; _cLink: comp);

#doc
Вызов формирования потока для доп. соглашений, связанных с записью истории ставки с кодом <code>_cHistoryStr</code>.
#end
procedure PrintAllAgreementsByHistoryStr(_cHistoryStr: comp);

#doc
Инициализировать перечень сущностей, привязанных к доп. соглашению с кодом <code>_cAgreement</code>.</brief>.
<p>Функция возвращает количество ссылок. Для их получения должен использоваться метод <link function Z_StaffOrders::INumberOfAddAgreementNew.PutLinkByNum>PutLinkByNum</link>.</p>
#end
function InitAgreement(_cAgreement: comp): word;

#doc
Получить ссылку на сущность, связанную с доп. соглашением.</brief>
<p>Перед использованием следует инициализировать перечень сущностей с помощью метода <link function Z_StaffOrders::INumberOfAddAgreementNew.InitAgreement>InitAgreement</link>.</p>
<p>Функция возвращает <code>true</code>, если получение ссылки завершилось успешно.</p>
<h3>Параметры</h3>
<ul>
  <li><code>_wNum</code> - порядковый номер сущности, установленный для нее при инициализации (<b>нумерация начиная от единицы</b>)</li>
  <li><code>_wLink</code> - возвращаемый параметр - константа-код сущности, ссылающейся на доп. соглашение (к примеру, <code>coAppHist</code>, <code>coContDoc</code>)</li>
  <li><code>_cLink</code> - возвращаемый параметр - уникальный идентификатор сущности, ссылающейся на доп. соглашение (к примеру, <code>AppHist.NRec</code>, <code>ContDoc.NRec</code>)</li>
</ul>
#end
function PutLinkByNum(_wNum: word; var _wLink: word; var _cLink: comp): boolean;

#doc
Получить ссылку последнее по дате утвержденное доп. соглашение к договору <code>_cContract</code>.</brief>
<p>Доп. соглашение считается утвержденным, если по хотя бы одной связанной с ним сущности приказ отсутствует или утвержден.</p>
#end
public function GetLastConfirmedAgreement(_cContract: comp): comp;

#doc
Вывод на печать отчета по номерам доп. соглашений к договору <code>_cContract</code>.</brief>
<p>Номер доп. соглашения с кодом <code>_cIgnoreAgreement</code> считается свободным.</p>
#end
public procedure PrintAgreementNumbers(_cContract: comp; _cIgnoreAgreement: comp = 0);

end;

objinterface INumberOfAddAgreement4;

#doc
Определение даты, номера и заголовка приказа, а также назначения для доп. соглашения <code>_cAgreement</code>.</brief>
#end
public procedure prPutDocInfoAndApp(_cAgreement: comp; var _dTitle: date; var _sTitle, _sTitleText: string; var _cAppoint : comp);

#doc
Проверка статуса доп. соглашения с кодом <code>_cAgreement</code>.</brief>.
<p>Функция возвращает <code>true</code>, если доп. соглашение имеет статус утвержденного.</p>
#end
public function AgreementConfirmed(_cAgreement: comp): boolean;

end;

objinterface INumberOfAddAgreement5;

#doc
Позиционирование на нужном доп. соглашении (актуально, если открыт интерфейс со списком доп. соглашений)
#end
public procedure SetPosition(_cAgreement: comp);

end;

vipinterface NumberOfAddAgreement implements
  INumberOfAddAgreement, INumberOfAddAgreement2, INumberOfAddAgreement3, INumberOfAddAgreementPrivate,
  INumberOfAddAgreementNew, INumberOfAddAgreement4, INumberOfAddAgreement5
  Licensed (free)
;

#end
