//------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Галактика 9.10 - модуль "Заработная плата"
// Интерфейс редактирования: "Документы РСВ-1"
//------------------------------------------------------------------------------
#include RepConst.vih

const
    cgRep_AllTune     = 100;
  cSocnalPaymentSolidPart     = 'Л'; // солидарная часть взносов
  cSocnalPaymentInsurancePart = 'С'; // страховая часть взносов
  cSocnalPaymentStoragePart   = 'Н'; // накопительная часть взносов
  cSpis1                      = '1'; // взносы по списку 1
  cSpis2                      = '2'; // взносы по списку 2

    //разделы
  cnRazdel_01      = 1;
  cnRazdel_21      = 21;
  cnRazdel_22      = 22;
  cnRazdel_23      = 23;
  cnRazdel_24      = 24;
  cnRazdel_25      = 25;
  cnRazdel_252     = 252;
  cnRazdel_31      = 31;
  cnRazdel_32      = 32;
  cnRazdel_33      = 33;
  cnRazdel_04      = 4;
  cnRazdel_05      = 5;
  cnRazdel_06      = 6;

  //для Раздела 6
  cnMainRazd6      = 0; //основные сведения Раздела 6
  cnCorrRazd6      = 1; //корректирующие сведения Раздела 6
  cnMainSumRazd6   = 0; //суммы по страховым взносам и Ф О М С
  cnRaspNegSumRazd6= 10;//распределение отр. сумм по страховым взносам и Ф О М С
  cnNegSumRazd6    = 11;//отр. суммы по страховым взносам и Ф О М С
  cnNegSumSpis1    = 12;//отр. суммы по доп.тарифу (список 1)
  cnNegSumSpis2    = 13;//отр. суммы по доп.тарифу (список 2)
  cnSpis1          = 1; //суммы по доп.тарифу (список 1)
  cnSpis2          = 2; //суммы по доп.тарифу (список 2)
  cnSvedV          = 64;
  cnSvedSp         = 65;

  //доначисления в Разделе 6
  cnDonachRazd6    = 3;
  cnVznStr         = 1;
  cnVznNak         = 2;
  cnVznSol         = 3;
  cnVznSp1         = 4;
  cnVznSp2         = 5;
  cnVznFoms        = 6;

    //подклассы
  cnPodKlass_04    = 40;
  cnPodKlass_34    = 34;
  cnPodKlass_33    = 33;
  cnPodKlass_32    = 32;
  cnPodKlass_31    = 31;
  cnPodKlass_0     =  0; //без подкласса

  //код основания
  cnKodOsn_1       = 0;
  cnKodOsn_2       = 1;

  //тариф - основной/дополнительный
  cnOsnTarif       = 1;
  cnDopTarif       = 2;

  //взносы для раздела 2.1
  cnVzn_Str        = 0;
  cnVzn_Foms       = 1;

  //суммы разделов Р С В - 1
  cnSummaV         = 0;
  cnSummaN         = 1;
  cnSummaNV        = 2;
  cnSummaB         = 3;
  cnSummaVzn       = 4;
  cnSummaVznP      = 5;
  cnSummaFL        = 6;
  cnSummaFLP       = 7;
  cnSummaVFoms     = 8;
  cnSummaNFoms     = 9;
  cnSummaNVFoms    = 10;
  cnSummaVznFoms   = 11;
  cnSummaFLFoms    = 12;
  cnSummaP         = 13;
  cnSummaBD        = 14;

  //суммы разделов Р С В - 1 по подклассам
  //СПИСОК 1
  //выплаты
  cnSumV_Sp1_0     = 1001;
  cnSumV_Sp1_4     = 1401;
  cnSumV_Sp1_34    = 1341;
  cnSumV_Sp1_33    = 1331;
  cnSumV_Sp1_32    = 1321;
  cnSumV_Sp1_31    = 1311;
  //н е о б л а г а е м ы е суммы
  cnSumN_Sp1_0     = 1002;
  cnSumN_Sp1_4     = 1402;
  cnSumN_Sp1_34    = 1342;
  cnSumN_Sp1_33    = 1332;
  cnSumN_Sp1_32    = 1322;
  cnSumN_Sp1_31    = 1312;
  //взносы
  cnSumVzn_Sp1_0   = 1003;
  cnSumVzn_Sp1_4   = 1403;
  cnSumVzn_Sp1_34  = 1343;
  cnSumVzn_Sp1_33  = 1333;
  cnSumVzn_Sp1_32  = 1323;
  cnSumVzn_Sp1_31  = 1313;
  //СПИСОК 2
  //выплаты
  cnSumV_Sp2_0     = 2001;
  cnSumV_Sp2_4     = 2401;
  cnSumV_Sp2_34    = 2341;
  cnSumV_Sp2_33    = 2331;
  cnSumV_Sp2_32    = 2321;
  cnSumV_Sp2_31    = 2311;
  //н е о б л а г а е м ы е суммы
  cnSumN_Sp2_0     = 2002;
  cnSumN_Sp2_4     = 2402;
  cnSumN_Sp2_34    = 2342;
  cnSumN_Sp2_33    = 2332;
  cnSumN_Sp2_32    = 2322;
  cnSumN_Sp2_31    = 2312;
  //взносы
  cnSumVzn_Sp2_0   = 2003;
  cnSumVzn_Sp2_4   = 2403;
  cnSumVzn_Sp2_34  = 2343;
  cnSumVzn_Sp2_33  = 2333;
  cnSumVzn_Sp2_32  = 2323;
  cnSumVzn_Sp2_31  = 2313;

  //итоги ЗАМЕНИТЬ!!!
  cn_Itog          = 0;
  cn_StrVzn        = 1;
  cn_StrVznOld     = 2;
  cn_NakVznOld     = 3;
  cn_DopTVznSp1    = 4;
  cn_DopTVznSp2    = 5;
  cn_FomsVzn       = 6;
  cn_DopTVzn       = 7;
  cn_DolDoh        = 8;
  cn_DolDoh_1      = 9;
  cn_DolDoh_2      = 10;
  cn_DolDohPr      = 11;
  cn_DolDohCur     = 12;

  //терр. условия
  cnTerrCatEntry   = -178;

  cnPkl4_Sp1       = 4001;
  cnPkl34_Sp1      = 3401;
  cnPkl33_Sp1      = 3301;
  cnPkl32_Sp1      = 3201;
  cnPkl31_Sp1      = 3101;

  cnPkl4_Sp2       = 4002;
  cnPkl34_Sp2      = 3402;
  cnPkl33_Sp2      = 3302;
  cnPkl32_Sp2      = 3202;
  cnPkl31_Sp2      = 3102;

  cnNoPkl          = 300;
  cn_foreign       = 1; //иностранец
  //Раздел 6
  cn_SvedV    = 0; // раздел 6.4 - сведения о сумме выплат и иных вознаграждений
  cn_SvedVSP  = 1; // раздел 6.7 - сведения о сумме выплат и иных вознаграждений по спискам
end;

// Таблица с доначислениями
 Table struct TP_Donachisl
(
  Period     : word
 ,Period_Ish : word    // квартал для сортировки
 ,Year       : word
 ,Sum1       : double
 ,SumStr     : double
 ,SumNak     : double
)
With Index
(
  TP_Donachisl01 = Year + Period,
  tp_Donachisl02 = Year + Period_Ish
);

table struct tp_XMLStaj
(
 wNum        : word    // номер по порядку
 ,sOsnTU     : string  // ОснованиеТУ
 ,sKoef      : string  // Коэффициент (ТУ)
 ,sOsnOUT    : string  // ОснованиеОУТ
 ,sPos       : string  // ПозицияСписка (ОУТ)
 //ИсчисляемыйСтаж
 ,sOsnIS     : string  // ОснованиеИС
 //Выработка (ИС)
 ,sMonthIS   : string
 ,sDayIS     : string
 ,sHourIS    : string
 ,sMinIS     : string
 ,sChildrens : string  // ДекретДети
 //ВыслугаЛет
 ,sOsnVL     : string  // ОснованиеВЛ
 //Выработка (ВЛ)
 ,sMonthVL   : string
 ,sDayVL     : string
 ,sHourVL    : string
 ,sMinVL     : string
 ,sDest      : string // ДоляСтавки (DK)
) with index
(
  tp_FRStaj01 = wNum
);

table struct tp_FRRazd6
(
  wChoice    : word    // cn_SvedV/cn_SvedVSP - Choice для определения раздела СЗВ-6-4
 ,sKod       : s10     // код категории застрахованного лица/код специальной оценки условий труда
 ,wKod       : word
 ,wNumStr    : word    // номер строки 1-4
 ,Summa      : array [1..4]  of double // сумма выплат для раздела 6.4/ сумма выплат по списку 1 для раздела 6.7
 ,SummaCat   : array [1..12] of double
 ,SummaVZN   : double
 ,VZNCat     : array [1..3]  of double
) with index
(
  tp_FRRazd601 = wChoice + wKod
 ,tp_FRRazd602 = sKod    + wChoice + wNumStr
);

table struct tp_PenStaj
(
  cPenStaj    : tNRec   // PenStaj.nRec
 ,tPerson     : tNRec   // Person.nRec
 ,FromDate    : Date    // Дата начала отсчета стажа
 ,ToDate      : Date    // Дата конца отсчета стажа
 ,Rate        : Double  // Коэффициент
 ,PriorityRec : word    // приоритет записей
)
With Index
(
  tp_PenStaj01 = FromDate
 ,tp_PenStaj02 = tPerson
 ,tp_PenStaj03 = PriorityRec(desc) + FromDate
);

table struct tp_FRStaj
(
  nRec       : word    // номер строки для вывода
 ,wNum       : word    // номер по порядку
 ,dtBeg      : date    // дата начала    периода стажа
 ,dtEnd      : date    // дата окончания периода стажа
 ,sKod1      : s20     // территориальные условия (код)
 ,sKod2      : s20     // особые условия (код)
 ,sKod3      : s20     // основание для исчисления стажа (код)
 ,sKod4      : s20     // доп. сведения (код)
 ,sKod5      : s20     // условия досрочного назначения - основание (код)
 ,sKod6      : s20     // условия досрочного назначения - доп. сведения (код)
) with index
(
  tp_FRStaj01 = nRec
);

table struct tp_SumDopTar
(
  wNumRazd: word
 ,wCodOsn : word
 ,wPodkl  : word
 ,SumV    : array [1..4] of tSumma //сумма выплат
 ,SumN    : array [1..4] of tSumma //сумма н е о б л а г а е м а я
 ,SumVzn  : array [1..4] of tSumma //сумма страховых взносов с базы
 ,CountFl : array [1..4] of word   //количество физ. лиц
)
with index
(
  tp_SumDopTar01 = wNumRazd + wCodOsn + wPodkl
);

table struct tp_DonachVzn
(
  VidVzn     : word                    // признак, какие взносы доначисляются
 ,wNumPk     : word                    // подкласс для списков 1 и 2
 ,Year       : word                    // год доначисления
 ,Summa      : array [1..12] of tSumma // сумма доначисления
 ,SummaPrev  : array [1..12] of tSumma // сумма доначисления с превышения
 ,SummaP     : array [1..12] of tSumma // сумма взносов с превышения
) with index
(
  tp_DonachVzn01 = VidVzn + wNumPk + Year
);

table struct tp_VidOpl_Tar
(
  VidOpl     : longInt
 ,wNeobl     : word
) with index
(
  tp_VidOpl_Tar01 = VidOpl + wNeobl
 ,tp_VidOpl_Tar02 = wNeobl + VidOpl
);

table struct tp_SumTar
(
  cLschO     : comp
 ,cLsch      : comp
 ,TabN       : tabnStr
 ,TabNDop    : tabnStr
 ,FIO        : s60
 ,VidOpl     : LongInt
 ,VidOplP    : LongInt
 ,SummaV     : double
 ,SummaRas   : double
 ,SummaNeobl : double
 ,SummaPrev  : double
 ,SolNoPrev  : double
 ,SolPrev    : double
 ,VznFOMS    : double
 ,VznStrah   : double
 ,Month      : word
 ,wCodeTar   : word
 ,wPrSocN    : word
 ,wNeobl     : word
 ,DatUv      : date
 ,DatUvDop   : date
) with index
(
  tp_SumTar01 = cLschO   + cLsch  + wCodeTar + Month    + VidOpl + wNeobl
 ,tp_SumTar02 = FIO      + cLschO + cLsch    + wCodeTar + Month  + VidOpl
 ,tp_SumTar03 = wNeobl   + FIO    + cLschO   + cLsch    + wCodeTar + Month  + VidOpl
 ,tp_SumTar04 = wCodeTar + VidOpl + cLschO   + cLsch    + Month
 ,tp_SumTar05 = wCodeTar + VidOpl + cLschO   + Month
 ,tp_SumTar06 = wCodeTar + cLschO + cLsch    + Month
 ,tp_SumTar07 = wCodeTar + cLschO + Month
 ,tp_SumTar08 = Month
 ,tp_SumTar09 = FIO      + wCodeTar + Month  + cLschO   + cLsch + VidOpl 
);

table struct tp_SumCodeTar
(
  wCodTar: word
 ,SumV     : array [1..4] of double //сумма выплат
 ,SumN1    : array [1..4] of double //сумма н е о б л а г а е м а я
 ,SumN2    : array [1..4] of double //сумма н е о б л а г а е м а я к вычету
 ,SumP     : array [1..4] of double //сумма превышения
 ,SumVF    : array [1..4] of double //сумма выплат  Ф О М С
 ,SumN1F   : array [1..4] of double //сумма н е о б л а г а е м а я
 ,SumN2F   : array [1..4] of double //сумма н е о б л а г а е м а я к вычету
 ,SumVznS  : array [1..4] of double //сумма страховых взносов с базы
 ,SumVznP  : array [1..4] of double //сумма страховых взносов с превышения
 ,SumVznF  : array [1..4] of double //сумма взносов Ф О М С
 ,CountFl  : array [1..4] of LongInt //количество физ. лиц, кот. начислены взносы
 ,CountFlP : array [1..4] of LongInt //количество физ. лиц, кот. начислены взносы с превышения
 ,CntFlFOMS: array [1..4] of LongInt //количество физ. лиц, кот. начислены взносы Ф О М С
 ,boCountFl  : boolean //признак заполнения количества физ. лиц, кот. начислены взносы
 ,boCountFlP : boolean //признак заполнения количества физ. лиц, кот. начислены взносы с превышения
 ,boCntFlFOMS: boolean //признак заполнения количества физ. лиц, кот. начислены взносы Ф О М С
)
with index
(
  tp_SumCodeTar01 = wCodTar
);

table struct tp_CountFl
(
  wNumR   : word
 ,wPodkl  : word
 ,wVidSum : word
 ,wCount  : array [1..4] of word  //количество физ. лиц
)
with index
(
  tp_CountFl01 = wNumR + wPodkl + wVidSum
);

//------------------------------------------------------------------------------
//суммы выплат по сотруднику
Type TSumLS = record
cLsch          : comp;
wPrDopTar      : word;
Prizn          : array [1..12] of word;   // SumUlSoc.Summa2
Proc           : array [1..12] of double; // процент SumUlSoc.Summa3
wTarif         : array [1..12] of word;   // тариф сотрудника
wCatLgot       : array [1..12] of word;   // категория при наличии льготы с причиной
SumV           : array [1..12] of double; // сумма выплат
SumN1          : array [1..12] of double; // н е о б л а г а е м а я сумма
SumN2          : array [1..12] of double; // н е о б л а г а е м а я сумма к вычету
SumP           : array [1..12] of double; // сумма превышения
SumBDog        : array [1..12] of double; // база по договорам
SumVF          : array [1..12] of double; // сумма выплат ФОМС
SumN1F         : array [1..12] of double; // н е о б л а г а е м а я сумма ФОМС
SumN2F         : array [1..12] of double; // н е о б л а г а е м а я сумма к вычету ФОМС
SumVSP1        : array [1..12] of double; // сумма выплат по списку 1
SumVPk4_SP1    : array [1..12] of double; // сумма выплат по подклассу 4
SumVPk34_SP1   : array [1..12] of double; // сумма выплат по подклассу 3.4
SumVPk33_SP1   : array [1..12] of double; // сумма выплат по подклассу 3.3
SumVPk32_SP1   : array [1..12] of double; // сумма выплат по подклассу 3.2
SumVPk31_SP1   : array [1..12] of double; // сумма выплат по подклассу 3.1
SumVSP2        : array [1..12] of double; // сумма выплат по списку 2
SumVPk4_SP2    : array [1..12] of double; // сумма выплат по подклассу 4
SumVPk34_SP2   : array [1..12] of double; // сумма выплат по подклассу 3.4
SumVPk33_SP2   : array [1..12] of double; // сумма выплат по подклассу 3.3
SumVPk32_SP2   : array [1..12] of double; // сумма выплат по подклассу 3.2
SumVPk31_SP2   : array [1..12] of double; // сумма выплат по подклассу 3.1
SumNSP1        : array [1..12] of double; // необл. сумма выплат по списку 1
SumNPk4_SP1    : array [1..12] of double; // необл. сумма выплат по подклассу 4
SumNPk34_SP1   : array [1..12] of double; // необл. сумма выплат по подклассу 3.4
SumNPk33_SP1   : array [1..12] of double; // необл. сумма выплат по подклассу 3.3
SumNPk32_SP1   : array [1..12] of double; // необл. сумма выплат по подклассу 3.2
SumNPk31_SP1   : array [1..12] of double; // необл. сумма выплат по подклассу 3.1
SumNSP2        : array [1..12] of double; // необл. сумма выплат по списку 1
SumNPk4_SP2    : array [1..12] of double; // необл. сумма выплат по подклассу 4
SumNPk34_SP2   : array [1..12] of double; // необл. сумма выплат по подклассу 3.4
SumNPk33_SP2   : array [1..12] of double; // необл. сумма выплат по подклассу 3.3
SumNPk32_SP2   : array [1..12] of double; // необл. сумма выплат по подклассу 3.2
SumNPk31_SP2   : array [1..12] of double; // необл. сумма выплат по подклассу 3.1
//взносы
SumVznStr      : array [1..12] of double; // начислено страховых взносов с базы
SumVznStrP     : array [1..12] of double; // начислено страховых взносов с превышения
SumVznFOMS     : array [1..12] of double; // начислено взносов в Ф О М С
SumVznSp1      : array [1..12] of double; // начислено взносов по списку 1 (без подкласса)
SumVznPk4_SP1  : array [1..12] of double; // начислено взносов по подклассу 4
SumVznPk34_SP1 : array [1..12] of double; // начислено взносов по подклассу 3.4
SumVznPk33_SP1 : array [1..12] of double; // начислено взносов по подклассу 3.3
SumVznPk32_SP1 : array [1..12] of double; // начислено взносов по подклассу 3.2
SumVznPk31_SP1 : array [1..12] of double; // начислено взносов по подклассу 3.1
SumVznSp2      : array [1..12] of double; // начислено взносов по списку 2 (без подкласса)
SumVznPk4_SP2  : array [1..12] of double; // начислено взносов по подклассу 4
SumVznPk34_SP2 : array [1..12] of double; // начислено взносов по подклассу 3.4
SumVznPk33_SP2 : array [1..12] of double; // начислено взносов по подклассу 3.3
SumVznPk32_SP2 : array [1..12] of double; // начислено взносов по подклассу 3.2
SumVznPk31_SP2 : array [1..12] of double; // начислено взносов по подклассу 3.1
end;
#define sMaskDouble2Format [14.2, '\2p[|-]36 666 666 666 666.88']
#define sMaskDouble4Format [14.4, '\4p[|-]36 666 666 666 666.8888']
