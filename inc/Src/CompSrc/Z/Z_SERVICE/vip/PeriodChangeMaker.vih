#ifndef _PERIODCHANGEMAKER_INCLUDED_
#define _PERIODCHANGEMAKER_INCLUDED_

#component "Z_Service"

#doc
  Объектный интерфейс для осуществления перехода к новому расчетному периоду
#end
objinterface IPeriodChangeMaker;
  #doc
    Функция перехода к новому расчетному периоду
  #end
  function ChangePeriod(stagesMarker : TPtr) : boolean;

  #doc
    Флаг готовности интерфейса к осуществлению перехода
  #end
  function IsReady  : boolean;

  #doc
    Событие в начале выполнения этапа перехода
  #end
  event procedure OnStageBegin(stagePriority : integer; stageName : string);

  #doc
    Событие в случае ошибки на очередной итерации цикличного процесса
  #end
  event procedure OnStageIterationError(tableCode : word; recordNumber : comp);

  #doc
    Событие в конце выполнения этапа перехода
  #end
  event procedure OnStageEnd(stagePriority : integer; stageResult : boolean; canRestart : boolean);
end;

#doc
  Объектный интерфейс для установки параметров объекта
#end
objinterface IConfigurable;
  #doc
    Функция установки boolean - параметра
  #end
  function SetBooleanParam(key : string; value : boolean) : boolean;

  #doc
    Функция установки string - параметра
  #end
  function SetStringParam(key : string; value : string) : boolean;

  #doc
    Функция установки comp - параметра
  #end
  function SetCompParam(key : string; value : comp) : boolean;

  #doc
    Функция установки date - параметра
  #end
  function SetDateParam(key : string; value : date) : boolean;

  #doc
    Функция установки longint - параметра
  #end
  function SetLongintParam(key : string; value : longint) : boolean;

  #doc
    Функция установки integer - параметра
  #end
  function SetIntegerParam(key : string; value : integer) : boolean;
end;

private objinterface IPeriodChangeMakerEvents;
  event procedure OnStageMessage(_message: string; _messageType: word = Information);
  event procedure OnRecordMessage(_message: string; _messageType: word = mfInformation; _cLS: comp = 0; _wTable: word = 0; _cTable: comp = 0);
end;

vipinterface PeriodChangeMaker
  implements IPeriodChangeMaker, IConfigurable, IPeriodChangeMakerEvents
  licensed(free);

#end
