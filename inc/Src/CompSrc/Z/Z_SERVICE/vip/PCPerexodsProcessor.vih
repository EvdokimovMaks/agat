//------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Галактика 8.1 - Заработная плата
// Интерфейс обработки переходов при переходе на новый расчетный период
//------------------------------------------------------------------------------

#ifndef _PCPEREXODSPROCESSOR_VIH_INCLUDED_
#define _PCPEREXODSPROCESSOR_VIH_INCLUDED_

#component "Z_SERVICE"

// Управляющие флажки для objинтерфейса IPCPerexodsProcessor
const
  pcpp_IgnorePerexodVP = 1; // Игнорировать значение поля PEREXOD.VP при обработке
  pcpp_ExtendedLog     = 2; // Подробный протокол
  pcpp_NotFillMarker   = 4; // Не работать с маркером MarkedPersonalAccounts
  pcpp_NotProcessFirstDayNextPeriod = 8; // Не обрабатывать переходы, начавшиеся с первого числа нового периода
  pcpp_StrictFirstDayChange = 16; // Корректировать лицевой счет при обработке постоянных переходов с первого числа нового периода
end;

#doc
<brief>Интерфейс для обработки переходов при переходе к новому расчетному периоду
(I[P]eriod[C]hangePerexodsProcessor)</brief>
Представляет набор функций для вызова процесса обработки переходов, происходящей при переходе
на новый расчетный период в Зарплате. Используется при переходе на новый расчетный период, а также
в специальной сервисной функции для обработки переходов.
#end
objInterface IPCPerexodsProcessor;
#doc
  <brief>Обязательная процедура инициализации</brief>
  Данная процедура предназначена для установки параметров, без которых
  <link function Z_SERVICE::IPCPerexodsProcessor.ProcessPerexods>запускать функцию обработки переходов</link> нельзя.

  Параметры следующие:
  <ul>
    <li><i>MarkedPersonalAccounts</i> - маркер, в который будут занесены NRec-и лицевых счетов,
      для которых произошел перенос параметров из перехода в лицевой счёт</li>
    <li><i>OldPeriodBeginDate</i> - дата начала прошлого расчетного периода (с которого переходим)</li>
    <li>
      <i>Flags</i> - набор флагов:
      <ul>
        <li>pcpp_IgnorePerexodVP = 1; // Игнорировать значение поля PEREXOD.VP при обработке</li>
        <li>pcpp_ExtendedLog     = 2; // Подробный протокол</li>
        <li>pcpp_NotFillMarker   = 4; // Не работать с маркером MarkedPersonalAccounts</li>
        <li>pcpp_NotProcessFirstDayNextPeriod = 8; // Не обрабатывать переходы, начавшиеся с первого числа нового периода</li>
        <li>pcpp_StrictFirstDayChange = 16; // Корректировать лицевой счет при обработке постоянных переходов с первого числа нового периода</li>
      </ul>
    </li>
  </ul>
#end
procedure SetParams(par_MarkedPersonalAccounts: TPtr;
                    par_OldPeriodBeginDate: date;
                    par_Flags: longint);

#doc
  <brief>Функция обработки переходов</brief>
  Предварительно требует установки параметров при помощи
  <link function Z_SERVICE::IPCPerexodsProcessor.SetParams>SetParams</link>.
#end
function ProcessPerexods: boolean;

#doc
  <brief>Событие в случае ошибки на очередной итерации цикличного процесса.</brief>
  Имеет то же назначение, что и <link function Z_SERVICE::IPeriodChangeMaker.OnStageIterationError>аналогичное событие</link>
  у <link objInterface Z_SERVICE::IPeriodChangeMaker>объектного интерфейса IPeriodChangeMaker</link>
#end
event procedure OnStageIterationError(tableCode: word; recordNumber: comp);

end;

//------------------------------------------------------------------------------

#doc
  Каноничная и единственно расово верная реализация объектного интерфейса <link objInterface Z_SERVICE::IPCPerexodsProcessor>IPCPerexodsProcessor</link>.
#end
vipInterface PCPerexodsProcessor implements IPCPerexodsProcessor licensed(free);

#endif
