/*
                      (c) 1994,2003 корпорация ГАЛАКТИКА
  Проект        : ГАЛАКТИКА
  Система       : Управление персоналом
  Назначение    : объектный интерфейс реализации приказа по ШР
*/

#ifndef _SHR_RPD_INCLUDED_
#define _SHR_RPD_INCLUDED_

#ifdef ComponentVersion
#component "Z_StaffSHR"
#end

#doc
  все РПД
#end

var bUpdateSotr: boolean;
var bShowUpdateSotr: boolean;

objinterface ISHR_RPD;
#doc
  Процедура установки начальных параметров для формирования логической таблицы
  содержимого приказа
#end
  procedure SetRelation(Value: comp);

#doc
  Процедура установки режима работы с интерфейсом. Актуальна при работе из других
  мест, не "перечня приказов". cStrCont - ссылка на сотрудника, если приказ групповой
#end
  procedure SetView(ModView: word; cStrCont: comp);

#doc
  Проверка возможно ли удаление приказа
#end
  function CheckDeleteOrder: boolean;

#doc
  Процедура удаления приказа
#end
  function DeleteOrder: boolean;

#doc
  Процедура проверки корректности заполнения приказа
#end
  function CheckOrder: boolean;

#doc
  Процедура утверждения приказа по текущему работнику (по таблице StrCont)
#end
  Function ConfirmOrder: boolean;

#doc
  Процедура печати приказа( пока 0: печатаем через отдельный интерфейс; что-то другое - ссылка на форму: CommomRep)
#end
  procedure PrintOrder(typePrint: TPtr; fcEnter: word);

#doc
  Процедура, сообщающая интерфейсу-владельцу об изменении данных
#end
  event procedure OnIdle(Sender: comp); // сообщили об этом

#doc
  Процедура, которая находит ContDoc
#end
  event procedure GetCont(cPart: comp; cCont: comp); // сообщили об этом

#doc
  Процедура перерисовки доступных панелей
#end
  procedure ReDrawPanels;

#doc
  Безусловная (жесткая) перерисовка всех панелей (ReReadRecord)
#end
  procedure ReReadRecords;
end;

private objinterface ISHR_RPD_Base;
  function CheckCurrOrder: boolean;
  function ConfirmCurrOrder: boolean;
  function CheckDeleteCurrOrder: boolean;
  function DeleteCurrOrder: boolean;

  procedure EnableDisable;
  procedure PosOnField;

  procedure AfterConfirmAllCont;
  procedure AfterDeleteAllCont;
end;

#doc
Базовый интерфейс всех РПД по ШР
#end
private VipInterface SHR_RPD_Base
  implements ISHR_RPD, ISHR_RPD_Base
  licensed(free);

#doc
Базовый интерфейс РПД по ШР для работы с подразделениями
#end
private VipInterface SHR_RPD_Base_Dep(SHR_RPD_Base)
  licensed(free);
public:

end;

#doc
Базовый интерфейс РПД по ШР для работы со ставками
#end
private VipInterface SHR_RPD_Base_Str(SHR_RPD_Base)
  licensed(free);

#doc
Базовый интерфейс РПД по ШР для работы с доплатами
#end
private VipInterface SHR_RPD_Base_Raise(SHR_RPD_Base)
  licensed(free);
public:

end;

// Создание структурного подразделения
vipinterface SHR_RPD_1(SHR_RPD_Base_Dep)
  Licensed(Free);
public:
  function ISHR_RPD_Base.CheckCurrOrder: boolean;
  function ISHR_RPD_Base.ConfirmCurrOrder: boolean;
  function ISHR_RPD_Base.CheckDeleteCurrOrder: boolean;
  function ISHR_RPD_Base.DeleteCurrOrder: boolean;

  procedure ISHR_RPD_Base.EnableDisable;
end;

// Ликвидация структурного подразделения
vipinterface SHR_RPD_2(SHR_RPD_Base_Dep)
  Licensed(Free);
public:
  function ISHR_RPD_Base.DeleteCurrOrder: boolean;
  function ISHR_RPD_Base.CheckCurrOrder: boolean;
  function ISHR_RPD_Base.ConfirmCurrOrder: boolean;

  procedure ISHR_RPD_Base.EnableDisable;
  procedure ISHR_RPD_Base.PosOnField;
end;

// Переименование структурного подразделения
vipinterface SHR_RPD_3(SHR_RPD_Base_Dep)
  Licensed(Free);
public:
  function ISHR_RPD_Base.DeleteCurrOrder: boolean;
  function ISHR_RPD_Base.CheckCurrOrder: boolean;
  function ISHR_RPD_Base.ConfirmCurrOrder: boolean;

  procedure ISHR_RPD_Base.EnableDisable;
  procedure ISHR_RPD_Base.PosOnField;
end;

// Переподчинение структурного подразделения
vipinterface SHR_RPD_4(SHR_RPD_Base_Dep)
  Licensed(Free);
public:
  function ISHR_RPD_Base.DeleteCurrOrder: boolean;
  function ISHR_RPD_Base.CheckCurrOrder: boolean;
  function ISHR_RPD_Base.ConfirmCurrOrder: boolean;

  procedure ISHR_RPD_Base.EnableDisable;
  procedure ISHR_RPD_Base.PosOnField;
end;

// Создание ставки
vipinterface SHR_RPD_20(SHR_RPD_Base_Str)
  Licensed(Free);
public:
  function ISHR_RPD_Base.CheckCurrOrder: boolean;
  function ISHR_RPD_Base.ConfirmCurrOrder: boolean;
  function ISHR_RPD_Base.CheckDeleteCurrOrder: boolean;
  function ISHR_RPD_Base.DeleteCurrOrder: boolean;

  procedure ISHR_RPD_Base.EnableDisable;
end;

// Ликвидация ставки
vipinterface SHR_RPD_21(SHR_RPD_Base_Str)
  Licensed(Free);
public:
  function ISHR_RPD_Base.CheckCurrOrder: boolean;
  function ISHR_RPD_Base.ConfirmCurrOrder: boolean;
  function ISHR_RPD_Base.DeleteCurrOrder: boolean;

  procedure ISHR_RPD_Base.EnableDisable;
  procedure ISHR_RPD_Base.PosOnField;
end;

// Изменение количества ставок
vipinterface SHR_RPD_22(SHR_RPD_Base_Str)
  Licensed(Free);
public:
  procedure ISHR_RPD.SetRelation(Value: comp);

  function ISHR_RPD_Base.CheckCurrOrder: boolean;
  function ISHR_RPD_Base.ConfirmCurrOrder: boolean;
  function ISHR_RPD_Base.DeleteCurrOrder: boolean;

  procedure ISHR_RPD_Base.EnableDisable;
  procedure ISHR_RPD_Base.PosOnField;
end;

// Изменение атрибутов ставки
vipinterface SHR_RPD_23(SHR_RPD_Base_Str)
  Licensed(Free);
public:
  function ISHR_RPD_Base.CheckCurrOrder: boolean;
  function ISHR_RPD_Base.ConfirmCurrOrder: boolean;
  function ISHR_RPD_Base.DeleteCurrOrder: boolean;

  procedure ISHR_RPD_Base.EnableDisable;
  procedure ISHR_RPD_Base.AfterConfirmAllCont;
  procedure ISHR_RPD_Base.AfterDeleteAllCont;
end;

//  Добавление доплаты
vipinterface SHR_RPD_30(SHR_RPD_Base_Raise)
  Licensed(Free);
public:
  function ISHR_RPD_Base.DeleteCurrOrder: boolean;
  function ISHR_RPD_Base.CheckCurrOrder: boolean;
  function ISHR_RPD_Base.ConfirmCurrOrder: boolean;

  procedure ISHR_RPD_Base.EnableDisable;
end;

// Снятие доплаты
vipinterface SHR_RPD_31(SHR_RPD_Base_Raise)
  Licensed(Free);
public:
  function ISHR_RPD_Base.DeleteCurrOrder: boolean;
  function ISHR_RPD_Base.CheckCurrOrder: boolean;
  function ISHR_RPD_Base.ConfirmCurrOrder: boolean;

  procedure ISHR_RPD_Base.EnableDisable;
end;

// Изменение доплаты
vipinterface SHR_RPD_32(SHR_RPD_Base_Raise)
  Licensed(Free);
public:
  function ISHR_RPD_Base.DeleteCurrOrder: boolean;
  function ISHR_RPD_Base.CheckCurrOrder: boolean;
  function ISHR_RPD_Base.ConfirmCurrOrder: boolean;

  procedure ISHR_RPD_Base.EnableDisable;
end;

// Прочие
vipinterface SHR_RPD_100(SHR_RPD_Base)
  Licensed(Free);
public:
  procedure ISHR_RPD_Base.EnableDisable;
  procedure ISHR_RPD_Base.PosOnField;
end;

#end
