/*
 ╔═══════════════════════════════════════════════════════════════════════════╗
 ║                     (c) 1994,97 корпорация ГАЛАКТИКА                      ║
 ║ Проект        : ГАЛАКТИКА                                                 ║
 ║ Система       : Заработная плата                                          ║
 ║ Версия        : 5.7 - 7.1                                                 ║
 ║ Назначение    : объектный инт-с "Параметры формирования межрасч. выплаты" ║
 ║ Ответственный : Корзюк Виталий Францевич                                  ║
 ╚═══════════════════════════════════════════════════════════════════════════╝
*/

#ifndef _PMNTPRMS_INCLUDED_
#define _PMNTPRMS_INCLUDED_

#include SHPZ.VIH

#component "Z_MP"

const
// идентификатор полей для импорта из xls
idfStrTabN = 1;
idfTabN = 2;
idfFIO = 3;
idfSumma = 4;
idfProc = 5;
idfCountDays = 6;
idfCountHours = 7;
idfLschet = 8;
idfCAppoint = 9;
idfInsuranceNum = 10;
idfSchetDeb = 11;
idfSubSchetDeb = 12;
idfMnPlanNo = 13;
idfDateApp = 14;

// тип файла
ftUnKnow = 0;
ftXls = 1;
ftDbf = 2;

ctfStrTabN = 'Строковый табельный номер';
ctfTabN = 'Табельный номер';
ctfFIO = 'ФИО';
ctfSumma = 'Сумма';
ctfProc = 'Процент';
ctfCountDays = 'Количество дней ';
ctfCountHours = 'Количество часов';
ctfLschet = 'Лицевой счет';
ctfCAppoint = 'Должность';
ctfInsuranceNum = 'Страховой номер';
ctfSchetDeb = 'Счет (дебет)';
ctfSubSchetDeb = 'Субсчет (дебет)';
ctfMnPlanNo = 'Номер производственного заказа';
ctfDateApp = 'Дата назначения';
end;

#doc
объектный инт-с "Параметры формирования межрасч. выплаты"
#end
objinterface oPaymentParameters;
  #doc
  #end
  procedure SetDeductionKind(Value: word);
  #doc
  #end
  function GetDeductionKind: word;

  procedure SetExtrKau(Value1 : tGetKau; Value2 : tTabKau);

  function GetExtrTbl: tTabKau;

  function GetExtrKau: tGetKau;

  #doc
  #end
  procedure SetPaymentKind(Value: word);
  #doc
  #end
  function GetPaymentKind: word;

  #doc
  #end
  procedure SetAdditionalDeductionKind(Value: word);
  #doc
  #end
  function GetAdditionalDeductionKind: word;

  #doc
  #end
  procedure SetSum(Value: double);
  #doc
  #end
  function GetSum: double;

  #doc
  #end
  procedure SetPercent(Value: double);
  #doc
  #end
  function GetPercent: double;

  #doc
  #end
  procedure SetCurrency(Value: comp);
  #doc
  #end
  function GetCurrency: comp;

  #doc
  #end
  procedure SetRateOfExchange(Value: double);
  #doc
  #end
  function GetRateOfExchange: double;

  #doc
  #end
  procedure SetBeginning(Value: date);
  #doc
  #end
  function GetBeginning: date;

  #doc
  #end
  procedure SetEnding(Value: date);
  #doc
  #end
  function GetEnding: date;

  #doc
  #end
  procedure SetDays(Value: double);
  #doc
  #end
  function GetDays: double;

  #doc
  #end
  procedure SetHours(Value: double);
  #doc
  #end
  function GetHours: double;

  #doc
  источник сведений о и подразделение отнесения затрат
  #end
  procedure SetCostAssignmentDepartment(Value: comp);
  #doc
  #end
  function GetCostAssignmentDepartment: comp;

  #doc
  #end
  procedure SetAccountingSource(Value: word);
  #doc
  #end
  function GetAccountingSource: word;

  #doc
  #end
  function GetAccounting: oSHPZ;

  #doc
  #end
  procedure SetDefaultDepartment(Value: comp);
  #doc
  #end
  function GetDefaultDepartment: comp;

  #doc
  #end
  procedure SetCashier(Value: word);
  #doc
  #end
  function GetCashier: word;
end;

objinterface oExtrParams;
  // Заполнять ПОЗ только из лицевого счета
  procedure SetOnlyFromLsch;
  function IsOnlyFromLsch : boolean;
end;

objinterface oPaymentParameters1;
  // Ссылка на код вычета
  #doc
  #end
  procedure SetSkidNew(Value: comp);
  #doc
  #end
  function GetSkidNew: comp;
  // Сумма вычета
  #doc
  #end
  procedure SetPrdeduct(Value: double);
  #doc
  #end
  function GetPrdeduct: double;
end;

objinterface oDivideChangesForm;
  // Формирование начислений по переходам
  #doc
  #end
  procedure SetFormDivideChanges(prizn: word);
  function  GetDivChangesParam: word;
  //procedure SetParamsFromChanges;
  //function  IsParamsFromChanges: boolean;
end;

objinterface oPaymentParameters2;
  // При отсутствии  суммы выплаты формировать на сумму начисления да/нет
  #doc
  #end
  procedure SetNulPaym(Value: word);
  #doc
  #end
  function GetNulPaym: word;
end;

objinterface oPaymentParameters3;
  // erp-599 установить дату назначения
  #doc
  #end
  procedure SetDateApp(Value: date);
  #doc
  #end
  function GetDateApp: date;
end;

private objinterface oPaymentParametersPrivate;
  procedure SetNachPeriodStart(Value: date);
  function GetNachPeriodStart: date;
  procedure SetNachPeriodEnd(Value: date);
  function GetNachPeriodEnd: date;
  procedure SetCanUseNachislPeriod(Value: boolean);
  function GetCanUseNachislPeriod: boolean;
end;


vipinterface PaymentParameters implements oPaymentParameters, oExtrParams, oPaymentParameters1,
                                          oDivideChangesForm, oPaymentParameters2, oPaymentParametersPrivate, oPaymentParameters3
Licensed(Free)
;
#end
