//******************************************************************************
//                                                      (с) корпорация Галактика
// Галактика 7.12 - Заработная плата
// Описания вспомогательных объектных интерфейсов для импорта нарядов
//******************************************************************************

#ifndef _JOBSHEETS_VIH_INCLUDED_
#define _JOBSHEETS_VIH_INCLUDED_

#include SHPZ.VIH

#ifdef ComponentVersion
#component "Z_MP"
#end

#doc
  Объектный интерфейс для создания записей в перечне нарядов.
#end
objinterface IJobSheet;
  #doc
    Вставляет запись данного типа в соответствующий перечень нарядов.
  #end
  function  DoInsert(AType: word): boolean;

  #doc
    Включает (Value = true) или выключает (Value = false) автоматическую
    генерацию наименования наряда при вставке его в перечень.
  #end
  procedure SetAutoName(Value: boolean);

  #doc
    Возвращает значение признака автоматической генерации наименований нарядов.
  #end
  function  GetAutoName: boolean;

  #doc
    Возвращает nrec наряда.
  #end
  function  GetID: comp;

  #doc
    Возвращает внутренний номер наряда.
  #end
  function  GetNumber: word;

  #doc
    Устанавливает наименование наряда.
  #end
  procedure SetName(Value: string);

  #doc
    Устанавливает сумму наряда.
  #end
  procedure SetSum(Value: double);

  #doc
  Устанавливает величину премии на наряд.
  #end
  procedure SetPremium(Value: double);

  #doc
    Устанавливает признак источника сведений о ШПЗ.
  #end
  procedure SetAccountingSource(Value: byte);

  #doc
    Возвращает значение признака источника сведений о ШПЗ.
  #end
  function  GetAccountingSource: byte;

  #doc
    Устанавливает ШПЗ.
  #end
  procedure SetAccounting(Value: oSHPZ);

  #doc
    Возвращает ШПЗ.
  #end
  function  GetAccounting: oSHPZ;

  #doc
    Устанавливает подразделение привязки наряда.
  #end
  procedure SetDepartment(Value: comp);

  #doc
    Возвращает значение ссылки на подразделение привязки наряда.
  #end
  function GetDepartment: comp;

  #doc
    Устанавливает номер бригады.
  #end
  procedure SetBrigade(Value: word);

  #doc
    Возвращает номер бригады.
  #end
  function GetBrigade: word;

  #doc
    Обновляет текущую запись.
  #end
  procedure DoUpdate;

  #doc
    Подсуммирует стоимости работ на лицевой стороне наряда.
  #end
  procedure TotalJobListItemCost;

  #doc
    Устанавливает текст примечания (обычно - описание фильтра по подразделению/бригаде).
  #end
  procedure SetNote(Value: string);
end;

#doc
  Объектный интерфейс для создания записей в перечне нарядов.
#end
objinterface IJobSheet1(IJobSheet);
  #doc
    Вставляет запись данного типа в соответствующий перечень нарядов.
  #end
  function  DoInsertEx(AType: word; markers: TPtr; maxCount: longint): boolean;   //АВЗ024
end;

#doc
  Объектный интерфейс для создания записей в перечне нарядов.
#end
objinterface IJobSheet2(IJobSheet1);
  #doc
    Возвращает внутренний номер наряда.
  #end
  function  GetNumberEx: longint;
end;

#doc
  Объектный интерфейс для создания записей в перечне нарядов.
#end
objinterface IJobSheet3(IJobSheet2);
  #doc
    Вставляет запись данного типа в соответствующий перечень нарядов с указанными параметрами нумерации.
  #end
  function  DoCustomInsert(AType: word; sub: string; len: byte): boolean;
end;

#doc
  Объектный интерфейс для создания записей в перечне нарядов.
#end
objinterface IJobSheet4(IJobSheet3);
  #doc
    Вставляет запись данного типа в соответствующий перечень нарядов с указанными параметрами нумерации.
    Возвращает в параметре по ссылке номер наряда в строковом формате.
  #end
  function  DoCustomInsertEx(AType: word; sub: string; len: byte; var jsNumber: string): boolean;
end;

//******************************************************************************
#doc
  Объектный интерфейс для создания записей на лицевой стороне наряда.
#end
objinterface IJobListItem;
  #doc
    Добавляет новую запись на лицевую сторону данного наряда.
  #end
  function  DoInsert(JS: IJobSheet): boolean;

  #doc
    Возвращает nrec записи.
  #end
  function  GetID: comp;

  #doc
    Устанавливает количество единиц работы.
  #end
  procedure SetQuantity(Value: double);

  #doc
    Возвращает количество единиц работы.
  #end
  function  GetQuantity: double;

  #doc
    Устанавливает расценку за единицу работы.
  #end
  procedure SetRate(Value: double);

  #doc
    Возвращает значение расценки за единицу работы.
  #end
  function  GetRate: double;

  #doc
    Устанавливает норму времени на единицу работы.
  #end
  procedure SetStandardTime(Value: double);

  #doc
    Возвращает величину нормы времени на единицу работы.
  #end
  function  GetStandardTime: double;

  #doc
    Устанавливает ШПЗ.
  #end
  procedure SetAccounting(Value: oSHPZ);

  #doc
    Возвращает ШПЗ.
  #end
  function  GetAccounting: oSHPZ;

  #doc
    Устанавливает код работы.
  #end
  procedure SetWork(Value: longint);

  #doc
    Устанавливает номер операции.
  #end
  procedure SetOperation(Value: longint);

  #doc
    Устанавливает наименование работы.
  #end
  procedure SetWorkName(Value: string);

  #doc
    Устанавливает наименование операции.
  #end
  procedure SetOperationName(Value: string);

  #doc
    Устанавливает стоимость работы.
  #end
  procedure SetCost(Value: double);

  #doc
    Устанавливает общую продолжительность работы.
  #end
  procedure SetWorkTime(Value: double);

  #doc
    Устанавливает количество фактически затраченного на работу времени.
  #end
  procedure SetActualTime(Value: double);

  #doc
    Обновляет текущую запись.
  #end
  procedure DoUpdate;
end;

#doc
  Объектный интерфейс для создания спецификаций нарядов.
#end
objinterface IJob;
  #doc
    Создает запись в спецификации данного наряда.</brief>

    <p>Наряд задается параметром JS, в ClockNumber передается табельный номер
    лицевого счета работника, в Beginning и Ending - даты начала и окончания
    периода.</p>
  #end
  function  DoInsert(JS: IJobSheet; ClockNumber: longint; Beginning: date; Ending: date): boolean;

  #doc
    Возвращает nrec записи.
  #end
  function  GetID: comp;

  #doc
    Устанавливает значение ссылки на работу с лицевой стороны наряда.
  #end
  procedure SetJobListLink(JLI: IJobListItem);

  #doc
    Устанавливает Количество дней и часов по факту (Actual = true) или плану
    (Actual = false).
  #end
  procedure SetTime(Days: double; Hours: double; Actual: boolean);

  #doc
    Устанавливает величину заработка по наряду (сумма сдельно).
  #end
  procedure SetSum(Value: double);

  #doc
    Устанавливает величину премии на наряд.
  #end
  procedure SetPremium(Value: double);

  #doc
    Устанавливает процент премии на наряд.
  #end
  procedure SetPremiumPercent(Value: double);

  #doc
    Устанавливает количество изделий.
  #end
  procedure SetQuantity(Value: double);

  #doc
    Устанавливает системный код вида оплаты.
  #end
  procedure SetPaymentKind(Value: word);

  #doc
    Устанавливает системный код вида премии.
  #end
  procedure SetPremiumKind(Value: word);

  #doc
    Устанавливает ШПЗ (счет/субсчет/аналитика/хозоперация/параметр ТХО).
  #end
  procedure SetAccounting(Value: oSHPZ);

  #doc
    Устанавливает значение ссылки на подразделение отнесения затрат.
  #end
  procedure SetCostAssignmentDepartment(Value: comp);

  #doc
    Обновляет текущую запись.
  #end
  procedure DoUpdate;
end;

#doc
  Объектный интерфейс для создания персональных доплат.
#end
objinterface IJobAdditionalPayment;
  #doc
    Создает доплату и связывает ее с данной записью из спецификации наряда.</brief>

    <p>Nrec наряда задается параметром J, системный код вида оплаты -
    параметром PaymentKind, сумма доплаты и количество часов по ней передаются
    в Sum и Hours.</p>
  #end
  function DoInsert(J: IJob; PaymentKind: longint; Sum: double; Hours: double): boolean;

  #doc
    Устанавливает значение исходной суммы для расчета доплаты.
  #end
  procedure SetInitialSum(Value: double);
end;


vipinterface JobSheet implements IJobSheet, IJobSheet1, IJobSheet2, IJobSheet3, IJobSheet4
#ifdef ATL51
Licensed(Free)
#end
;
vipinterface JobListItem implements IJobListItem
#ifdef ATL51
Licensed(Free)
#end
;
vipinterface Job implements IJob
#ifdef ATL51
Licensed(Free)
#end
;
vipinterface JobAdditionalPayment implements IJobAdditionalPayment
#ifdef ATL51
Licensed(Free)
#end
;
#end
