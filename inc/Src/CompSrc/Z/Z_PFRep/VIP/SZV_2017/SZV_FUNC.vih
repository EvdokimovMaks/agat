//------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Галактика ERP 9.1 - Заработная плата
// РФ. Функции для формирования форм ОДВ-1 и форм СЗВ-ИСХ, СЗВ-КОРР, СЗВ-СТАЖ
//
//------------------------------------------------------------------------------
#ifndef _SZV_FUNC_vih_INCLUDED_
#define _SZV_FUNC_vih_INCLUDED_

#component "Z_PFRep"

#doc
  РФ. Функции для формирования форм ОДВ-1 и форм СЗВ-ИСХ, СЗВ-КОРР, СЗВ-СТАЖ
#end

ObjInterface oSZV_Func;
// возвращает наименование организации - полное или альтернативное
function fGetNamePred(wNamePred: word): string;
// возвращает рег.номер в ПФ в формате, соответствующем типу УТ:ТипРегНомер
function fGetRegNumPred(boGetFromNastr: boolean;           // брать из настройки или нет
                        RegNumPred: string): string;       // значение рег.ном, не из настройки
// возвращает КПП предприятия
function fGetKppPred: string;
// возвращает ИНН предприятия
function fGetINNPred: string;
// Установка параметров руководителя страхователя
function SetBossPredParams(tPersonBoss: comp; var NameBossPred, PostBossPred: string): boolean; //  из настройки
// наименование XML-файла для любой из СЗВ-ИСХ, СЗВ-КОРР, СЗВ-СТАЖ
function GetXMLFileName(RegNumPred: string[14]; TypeForm: word; GUID, sCodeTO: s50): string;
//------------------------------------------------------------------------------
function DateToString(_Value: date): string;
// преобразование данных типа TSumma в строку
function TSummaToString(_Value: TSumma; _Precision: byte = 2): string;
// определение кода месяца
function fGetMonthCode(_Month: word): string[3];
end;


ObjInterface oSZV_Func1;
function fGetNameSZV_Ru(TypeForm: word): string;
// получить код периода для отображения в отчете
function fGetPeriodCode(wYear: longInt; wPeriod_: word): word;
function fsCodeKateg(wNumCode: word): s10;
// нахождение месяцев начала/окончания периода по константе-периоду
procedure pFindBegEndPeriodForRSV(wPerCor: word; wYear: longInt;
                                  var wMonthBegPer, wMonthEndPer,   // месяцы начала/окончания периода
                                      wMonthBegLastKv: word;        // месяц начала последнего квартала отчетного периода
                                  var dDateNextPer: date);          // день, следующий за отчетным периодом
function DateToStringWithFormat(dDate: date; sFormat: string): string;
end;


ObjInterface oSZV_Func2;
function fReplaceSpaces(sOriginalString: string): string;
function GetStrNote(_cStr: comp): string;
// Замена запрещенных символов
function fReplaceForbiddenSymbols(sOriginalString: string): string;
function fsCodeKategByTypeSZV(TypeForm, TypeSZV: word; yearForCorrection: longInt): s10;
end;

ObjInterface oSZV_Func3;
#doc
  Метод для подключение правила проверки ВСЗЛ.ОП.1.1 "Последние 2 цифры Страхового номера должны быть числом,
  подсчитанным по Алгоритму формирования контрольного числа Страхового номера"
#end
  function pCheckStrachNum(sTabN,                // #docl таб.номер работника
                           sStrachNum: string;   // #docl проверяемый страховой номер
                           var sMessage: string  // #docl сообщение об ошибке для вывода в протокол
                           ): boolean;
end;

VipInterface SZV_Func implements oSZV_Func, oSZV_Func1, oSZV_Func2, oSZV_Func3
  #licensed_Free;
static:
  function SaveMyDskWithBranch(buf: string; Name: string): boolean; // Запись в DSK с учетом филиала
  function ReadMyDskWithBranch(var buf: string; Name: string; DateChanged: boolean): boolean; // Чтение из DSK с учетом филиала
  // Запись значения переменной типа WORD в DSK с учетом филиала
  function wSaveMyDskWithBranch(buf: word; Name: string): boolean; // Запись в DSK с учетом филиала
  // Чтение значения переменной типа WORD из DSK с учетом филиала
  function wReadMyDskWithBranch(var buf: word; Name: string; DateChanged: boolean): boolean; // Чтение из DSK с учетом филиала
  // Запись значения переменной типа COMP в DSK с учетом филиала
  function cSaveMyDskWithBranch(buf: comp; Name: string): boolean;
  // Чтение значения переменной типа WORD из DSK с учетом филиала
  function cReadMyDskWithBranch(var buf: comp; Name: string; DateChanged: boolean): boolean;
end;

#end
