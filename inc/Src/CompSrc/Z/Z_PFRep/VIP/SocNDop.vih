//------------------------------------------------------------------------------
//                                                     (c) корпорация ГАЛАКТИКА
// Галактика 8.1 - Заработная плата
// Вспомогательные Функции для получения сумм по страховым взносам по дополнительному тарифу
//------------------------------------------------------------------------------
#ifndef _SocNDop_vih_INCLUDED_
#define _SocNDop_vih_INCLUDED_

#ifdef ComponentVersion
#component "Z_PfRep"
#end

#doc
  Вспомогательные Функции для получения сумм по страховым взносам и выплатам
#end
//------------------------------------------------------------------------------
table struct tp_NLsch
(
  cLsch     : tNRec                    // ссылка на лицевой счет
 ,cPerson   : tNRec                    // ссылка на Persons
 ,FIO       : s60                      // Ф И О
 ,Tabn      : TabnStr                  // табельный номер
 ,TabnL     : tTabn                    // табельный номер - числовой
 ,KoefSolid : array [1..12] of double  //коэффициент по солидарной части по месяцам
 ,wLgot     : array [1..12] of word    //льгота по месяцам
 ,boBaseStah: array [1..12] of boolean //наличие страховых взносов по месяцам
 ,SumNeobl  : array [1..12] of double  //н е о б л а г а е м ы е суммы
 ,SumNeoblD1: array [1..12] of double  //н е о б л а г а е м ы е суммы по доп. тарифу список 1
 ,SumNeoblD2: array [1..12] of double  //н е о б л а г а е м ы е суммы по доп. тарифу список 2
 ,wDopT     : array [1..12] of word    //признак наличия сумм по доп. тарифу по месяцам
 ,wPrDopT   : word
)
with index
(
  tp_NLsch01 = cLsch
 ,tp_NLsch02 = FIO
 ,tp_NLsch03 = Tabn
 ,tp_NLsch04 = wPrDopT + FIO
 ,tp_NLsch05 = wPrDopT + Tabn
 ,tp_NLsch06 = TabnL
 ,tp_NLsch07 = wPrDopT + TabnL
);
//------------------------------------------------------------------------------
table struct tp_NDop
(
  nRec     : tNRec
 ,cLsch    : tNRec      // ссылка на лицевой счет
 ,cPodr    : tNRec      // ссылка на подразделение
 ,Cappoint : tNRec      // ссылка на должность
 ,wRecTable: word       // код источника
 ,cRecTable: tNRec      // nRec источника
 ,VIDOPL   : tVidOpl    // вид оплаты системный
 ,VIDOPLP  : tVidOpl    // вид оплаты пользовательский
 ,NVIDOPL  : string
 ,KOLDN    : double
 ,CHASF    : double
 ,Summa28  : double     // Summa28 из начислений сотрудника для определения условий работы и подкласса
 ,wUslRab  : word       // условия работы
 ,OsUslSys : s50        // особые условия (верхний системный уровень)
 ,Dolg     : s60        // должность
 ,NmPodr   : s150       // наименование подразделения
 ,KodPodr  : s20        // код подразделения
 ,Month    : word       // месяц В котором
 ,Year     : word       // год В котором
 ,MonthZa  : word       // месяц За который
 ,YearZa   : word       // год За который
 ,dtBeg    : date       // дата начала выплат
 ,dtEnd    : date       // дата окончания выплат
 ,Summa    : double     // сумма по виду оплаты
 ,SumNeobl : double     // необлагаемая  сумма
 ,SumBase  : double     // база
 ,SumOver  : double     // сумма сверх базы
 ,BaseDopN : double     // База Доп Налог
 ,SumSolid : double     // СолидЧасть (до пред величины)
 ,VidPer   : array [1..5] of word
 ,NAMEPER  : array [1..5] of s50
 ,SumPER   : array [1..5] of double
 ,OblagSO  : array [1..5] of double
 ,SumRSV   : array [1..6] of double
 ,SumStrah : array [1..5] of double // с 2015 г. база до и после прев., страх.взносы до и после прев. в ПФ
) with index
(
  tp_NDop01 = cLsch + wUslRab + Month + Year + VIDOPLP
 ,tp_NDop02 = nRec(Unique, Surrogate)
 ,tp_NDop03 = cLsch + Month + wUslRab + Summa28 + cPodr + VIDOPLP
);
//------------------------------------------------------------------------------
table struct tp_Perech
(
  Vidper   : word
 ,sPar     : s1
 ,sNamePer : s50
) with index
(
  tp_Perech01 = Vidper
 ,tp_Perech02 = sPar
);
//------------------------------------------------------------------------------
#ifdef ComponentVersionInDict
  public
#end
//суммы выплат и взносов для формы С З В
Type TSumSZV = record
  SummaV     : double; //сумма выплат и иных вознаграждений
  SummaB1    : double; //в том числе, на которые начислены взносы,не превышающие предельную
  SummaB2    : double; //в том числе, на которые начислены взносы,   превышающие предельную
  SummaV_Dg  : double; //сумма выплат и иных вознаграждений по договору
  SummaB1_Dg : double; //в том числе, на которые начислены взносы,не превышающие предельную по договору
  SummaB2_Dg : double; //в том числе, на которые начислены взносы,   превышающие предельную по договору
  SummaS1    : double; //сумма выплат и иных вознаграждений по списку 1
  SummaS2    : double; //сумма выплат и иных вознаграждений по списку 2
  SummaS1_Dg : double; //сумма выплат и иных вознаграждений по списку 1  по договору
  SummaS2_Dg : double; //сумма выплат и иных вознаграждений по списку 2  по договору
  SummaS1_vzn : double; //сумма страховых взносов по списку 1
  SummaS2_vzn : double; //сумма страховых взносов по списку 2
  SumStrN    : double; //сумма взносов на страховую часть (начислено)
  SumNakN    : double; //сумма взносов на накопительную часть (начислено)
  SumStrN_Dg : double; //сумма взносов на страховую часть (начислено)     по договору
  SumNakN_Dg : double; //сумма взносов на накопительную часть (начислено) по договору
  SumSolN    : double; //сумма взносов на солидарную часть (начислено)
  SumSolN_Dg : double; //сумма взносов на солидарную часть (начислено) по договору
end;
//------------------------------------------------------------------------------

#ifdef ComponentVersionInDict
  public
#end
//суммы уплаченных взносов в С З В
Type TSumUplSZV = record
  SumStrUpl  : array [1..12] of double; //сумма взносов на страховую часть
  SumNakUpl  : array [1..12] of double; //сумма взносов на накопительную часть
  SumSolUpl  : array [1..12] of double; //сумма взносов на солидарную часть
  SumStrUpl_T: array [1..12] of double; //сумма взносов на страховую часть     (по труд. договору)
  SumNakUpl_T: array [1..12] of double; //сумма взносов на накопительную часть (по труд. договору)
  SumSolUpl_T: array [1..12] of double; //сумма взносов на солидарную часть    (по труд. договору)
  SumStrUpl_D: array [1..12] of double; //сумма взносов на страховую часть     (по договору подряда)
  SumNakUpl_D: array [1..12] of double; //сумма взносов на накопительную часть (по договору подряда)
  SumSolUpl_D: array [1..12] of double; //сумма взносов на солидарную часть    (по договору подряда)
end;
//------------------------------------------------------------------------------

#doc
#end
objinterface ObjSocNDop;
  #doc
  заполнение tp_Perech из Perech, чтобы не использовать NoIndex
  #end
//******************************************************************************
public procedure pInsert_tp_Perech;
//******************************************************************************
  #doc
    процедура инициализации значений переменных, используемых в интерфейсе
  #end
//******************************************************************************
public procedure pInit_Param(wParDopT_: word);
//******************************************************************************
  #doc
    процедура поиска сумм по страховым взносам по дополнительным тарифам
    cRec_Lsch - ссылка на лицевой
    Month1    - начальный месяц
    Month2    - конечный  месяц
    YearOtch_ - год
  #end
//******************************************************************************
public procedure pSearhSum_Lsch(cnRec_LSchet_: comp; Month1_, Month2_, YearOtch_: word);
//******************************************************************************

  #doc
    процедура установки параметров для поиска сумм выплат и сумм по страховым взносам
    для отчетов С З В
    wPar = 0 - настройка для СЗВ-6-4
    wPar = 1 - настройка для сверки отчетности
  #end
//******************************************************************************
public procedure pSetParam_SZV(wPar: word);
//******************************************************************************

  #doc
    процедура поиска сумм выплат и сумм по страховым взносам
    для отчетов С З В
    cRec_Lsch - ссылка на лицевой
    Month1    - начальный месяц
    Month2    - конечный  месяц
    YearOtch_ - год
  #end
//******************************************************************************
public procedure pSearhSum_SZV(cnRec_LSchet_: comp; Month_, YearOtch_: word; var rSumSZV: TSumSZV);
//******************************************************************************

  #doc
    Расчет уплаченных взносов из реестров по налогам на ФОТ
    cnRec_LSchet_ - ссылка на лицевой;
    wPer_         - квартал (1, 2, 3, 4)
    wYear_        - год
    rSumUplSZV    - возвращаемый параметр (запись с уплаченными суммами взносов)
  #end
public procedure pGetSumVznUpl_Reestr(cnRec_LSchet_: comp; wPer_, wYear_: word; var rSumUplSZV: TSumUplSZV);

  #doc
    процедура создания таблицы в памяти по налогам на ФОТ
    cRec_Lsch - ссылка на лицевой
    YearOtch_ - год
  #end
public procedure pAdd_tp_Perevod_SZV(cnRec_LSchet_: comp; YearOtch_: word);

  #doc
    функция возвращает сумму налога по солидарной части
    cnRec_LSchet_ - ссылка на лицевой;
    Month_        - месяц
    YearOtch_     - год
    dKoefSolid    - коэффициент по солидарной части
  #end
public function fdoGetNalog_Solid(cnRec_LSchet_: comp; Month_, YearOtch_: word; var dKoefSolid: double): double;

  #doc
    функция заканчивает работу с маркерами, которые использовались в расчете
  #end
public procedure pDoneParam_SZV;

end;

objinterface ObjSocNDop1;
  #doc
    процедура установки параметров для поиска сумм выплат и сумм по страховым взносам
    для отчетов С З В
    wPar = 0 - настройка для СЗВ-6-4
    wPar = 1 - настройка для сверки отчетности
    wParPrint -  параметры печати
    wUchPeriodUpl - дополнительно анализировать для упл взносов период из ZarOper
  #end
//******************************************************************************
public procedure pSetParam_SZVDop(wPar: word; wParPrint: word; wUchPeriodUpl: word);
//******************************************************************************
end;

vipinterface SocNDop implements objSocNDop, ObjSocNDop1
#ifdef ATL51
  licensed(Free)
#end
;
#end
