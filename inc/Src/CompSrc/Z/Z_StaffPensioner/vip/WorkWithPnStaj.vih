//------------------------------------------------------------------------------
// Версия        : 8.1
// Назначение    : Объектный интерфейс с функциями работы по пенсионным стажам
//------------------------------------------------------------------------------

#ifndef _WorkWithPnStaj_INCLUDED_
#define _WorkWithPnStaj_INCLUDED_

#component "Z_StaffPensioner"
//******************************************************************************
#doc
Объектный интерфейс с функциями работы по пенсионным стажам.
Создание, удаление, слияние...
Главное - работа в функциях формирования стажей
#end

Table Struct cut_Penstaj
(
  Nrec: comp
)
with index
(
  Ind2222 = Nrec
);

objinterface IWorkWithPnStaj;
//------------------------------------------------------------------------------
#doc
Функция создает новую запись в пенсионном стаже на основании получаемых полей и буферов.
Если bUseBuffer, то полученный буфер используем, если нет, то нет
#end
function CreateNewPnStaj(PnBuffer: type$PenStaj;
                         bUseBuffer: boolean;
                         cPsn, cAppoint: comp;
                         dBeg, dEnd: date;
                         c1, c2, c3, cRabota, cNameCompany, cPost, c4
                         , cOtpCur, cAdd1Cur: comp;
                         bTypeCur: word;
                         Percent: double
                         ): comp;
#doc
Функция сливает стажи по сотруднику, начиная с даты dBeg (если пусто, то по всем),
на основании параметров. В особенности wConnect, который работает по флагам.
cPsn - ссылка на персону
cAppoint - на назначение (скорее всего не понадобится)
wConnect - параметр объединения стажей
bLog - кидать ли в лог информацию
#end
function MergePnStajFromDate(cPsn: comp;
                             dBeg: date;
                             bLog: boolean;
                             wConnect: word): boolean;
#doc
Удаление стажей по сотруднику
bOnlyService = true - только сформированные сервисными функциями
Если dBeg пустая, то удаляем все начиная с этой даты, а предыдущий закрываем
typeDog - учитываем тип договора
#end
function DeletePnStaj(cPsn : comp; dBeg : date; dEnd : date; typeDog : word): boolean;

#doc
Исходя из справочника, найти заполнение полей по справочнику
(-198: Дополнительные параметры) и его деток (-151..-153)
#end
function GetCatalogs(var Rec1, Rec2, Rec3: comp): boolean;

#doc
Создание доп. записей для одного стажа, наследуя его же характеристики.
Возвращает nRec созданного стажа
#end
function CreateAddPens(cPnSt: comp): comp;

end;
//******************************************************************************

objinterface IWorkWithPnStaj1;
//------------------------------------------------------------------------------
#doc
Есть ли оплачиваемый отпуск у сотрудника за период
#end
function isOplOtpusk(PsnNrec : comp; DatBeg : date; DatEnd : date) : boolean;

#doc
Какие специальные условия труда (тер.условия, КПС, выслуга и т.д.) есть у сотрудника за период (по пен. стажам)
#end
function GetSpecUsl(PsnNrec : comp; DatBeg : date; DatEnd : date) : word;

#doc
Проверка наличия начислений в месяце MonthOtch года YearOtch у сотрудника
#end
function isSalaryNull(PsnNrec : comp; YearOtch : word; MonthOtch : word) : boolean;

#doc
Проверка наличия начислений по договорам подряда в месяце MonthOtch года YearOtch у сотрудника
#end
function isSalaryNullForDogPodr(DogNRec : comp; PsnNrec : comp; YearOtch : word; MonthOtch : word) : boolean;

#doc
Формирование пенсионного стажа по договорам подряда по архиву оплат
#end
procedure CreatePenStajWhithArchOpl(PsnNrec : comp; DatBeg : date; DatEnd : date); deprecated 'Не используется';

end;
//******************************************************************************

objinterface IWorkWithPnStaj2;
#doc
Функция для определения льготных условий на заданную дату
#end
public function fGetPreferentialTerms(cPsn: comp; dDate: date; wKind, wMobule: word): variant;

end;

objinterface IWorkWithPnStaj5;
#doc
Удаление стажей по сотруднику по лицевому счету
bOnlyService = true - только сформированные сервисными функциями
Если dBeg пустая, то удаляем все начиная с этой даты, а предыдущий закрываем
typeDog - учитываем тип договора
#end
public function DeletePnStajbyLschet(cLschet : comp; cPsn : comp; dBeg : date; dEnd : date; typeDog : word): boolean;

#doc
Проверка наличия начислений по договорам подряда в месяце MonthOtch года YearOtch у сотрудника
#end
public function isSalaryNullForDogPodrNew(DogNRec : comp; PsnNrec, cLs : comp; YearOtch : word; MonthOtch : word) : boolean;
end;

objinterface IWorkWithPnStaj6;

#doc
Процедура сливает стажи по сотруднику, начиная с даты dBeg (если пусто, то по всем),
на основании параметров. В особенности wConnect, который работает по флагам.
cPsn - ссылка на персону
cAppoint - на назначение (скорее всего не понадобится)
wConnect - параметр объединения стажей
bLog - кидать ли в лог информацию
cCR - вид договора
#end
procedure MergePnStajFromDateByCurRec(cPsn: comp;
                                      dBeg: date;
                                      bLog: boolean;
                                      wConnect: word;
                                      cCR: integer);

end;

private objinterface IWorkWithPnStaj7;
#doc
Проверка наличия начислений в месяце MonthOtch года YearOtch у сотрудника
#end
function isSalaryNullForRB(PsnNrec, cAppoint: comp; YearOtch : word; MonthOtch : word): boolean;

#doc
Ссылка на настройки
#end
procedure SetNPS(vNPS: objRef);

end;

//******************************************************************************

vipinterface WorkWithPnStaj implements IWorkWithPnStaj, IWorkWithPnStaj1, IWorkWithPnStaj2, IWorkWithPnStaj5, IWorkWithPnStaj6, IWorkWithPnStaj7
Licensed (free)
;

#end
