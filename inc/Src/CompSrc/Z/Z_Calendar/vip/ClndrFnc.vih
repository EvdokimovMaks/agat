//------------------------------------------------------------------------------
//                                                      (с) корпорация Галактика
// Галактика 9.1 - базовая функциональность
// Общесистемные функции работы с календарем
//------------------------------------------------------------------------------

#ifndef _CLNDRFNC_INCLUDED_
#define _CLNDRFNC_INCLUDED_

#component "Z_Calendar"

#doc
  Объектный интерфейс для доступа к общесистемным календарям.
#end
objinterface ICalendarFunctions;
  #doc
    Возвращает значение признака дня в заданном календаре.</brief>

    <p>Признаки дня:
    <ul>
    <li> 0 - рабочий день
    <li> 1 - выходной день
    <li> 2 - праздничный день
    </ul>
    В параметре PrRrec передается nrec календаря, в DDate - дата.</p>
  #end
  function GetDayInfo(prrec: comp; ddate: date): byte;

  #doc
    Возвращает введенное пользователем наименование дня или название
    приходящегося на данную дату праздника.</brief>

    <p>В параметре PrRrec передается nrec календаря, в DDate - дата.</p>
  #end
  function GetNameDay(prrec: comp; ddate: date): string;

  #doc
    Возвращает true, если в данном календаре день помечен как
    праздничный.</brief>

   <p>В параметре cCalendar передается nrec календаря, в D - дата.</p>
  #end
  function IsHoliday(cCalendar: comp; D: Date): boolean;

  #doc
    Возвращает true, если в данном календаре день помечен как
    рабочий.</brief>

   <p>В параметре cCalendar передается nrec календаря, в D - дата.</p>
  #end
  function IsWorking(cCalendar: comp; D: Date): boolean;

  #doc
    Возвращает true, если в данном календаре день помечен как
    выходной.</brief>

   <p>В параметре cCalendar передается nrec календаря, в D - дата.</p>
  #end
  function IsWeekEnd(cCalendar: comp; D: Date): boolean;

  #doc
    Возвращает количество рабочих дней между датами по данному
    календарю.</brief>

    <p>В параметре PrRrec передается nrec календаря, в D1 - начальная дата, в
    D2 - конечная.</p>
  #end
  function WorkDaysBetween(prrec: comp; d1: date; d2: date): longint;

  #doc
    Возвращает дату, отстоящую от данной на заданное количество рабочих
    дней.</brief>

    <p>В параметре PrRrec передается nrec календаря, в Beginning - начальная
    дата, в Days - количество рабочих дней.</p>
  #end
  function DateAfterWorkDay(prrec: comp; Beginning: date; Days: longint): date;

  #doc
    Возвращает дату, предшествующую данной и отстоящую от нее на заданное
    количество рабочих дней.</brief>

    <p>В параметре PrRrec передается nrec календаря, в Beginning - начальная
    дата, в Days - количество рабочих дней.</p>
  #end
  function DateBeforeWorkDay(prrec: comp; Beginning: date; days: longint): date;
end;

objinterface ICalendarFunctionsWithVariances(ICalendarFunctions);
  #doc
    <brief>Реализация GetDayInfo с возможностью учитывать / не учитывать отклонения календаря</brief>

    matchVariances - учитывать отклонения календаря при определении праздника
  #end
  function GetDayInfoWithVariances(prrec: comp; ddate: date; matchVariances: boolean): byte;

  #doc
    <brief>Реализация IsHoliday с возможностью учитывать / не учитывать отклонения календаря</brief>

    matchVariances - учитывать отклонения календаря при определении праздника
  #end
  function IsHolidayWithVariances(cCalendar: comp; D: date; matchVariances: boolean): boolean;

  #doc
    <brief>Реализация IsWeekEnd с возможностью учитывать / не учитывать отклонения календаря</brief>

    matchVariances - учитывать отклонения календаря при определении праздника
  #end
  function IsWeekEndWithVariances(cCalendar: comp; D: date; matchVariances: boolean): boolean;
end;

vipinterface CalendarFunctions implements ICalendarFunctionsWithVariances licensed(Free);

#end
