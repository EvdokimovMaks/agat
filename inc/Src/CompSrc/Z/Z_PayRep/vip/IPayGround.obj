//------------------------------------------------------------------------------
//                                                      (с) корпорация Галактика
// Галактика 8.1 - Заработная плата
// Объектные описатели документов для выплаты
//------------------------------------------------------------------------------
#ifndef _IPayGround_obj_INCLUDED_
#define _IPayGround_obj_INCLUDED_

#ifdef ComponentVersion
  #component "Z_PAYREP"
#end

#doc
  Описатель оснований для выплаты
#end
objinterface IPayGround;
  property RefDoc:  comp read;
  property SrcDoc:  word read;
  property DateRas: date read;
  property DateBeg: date read;
  property DateEnd: date read;
  property DatePay: date read;
  property Visible: boolean read write;
  property Marked:  boolean read write;

  index Idx0 = RefDoc(unique);
  index Idx1 = DateRas, DateBeg, DatePay;
  index Idx2 = DateRas, DatePay, DateBeg;
  index Idx3 = DateBeg, DateRas, DatePay;
  index Idx4 = DatePay, DateRas, DateBeg;
  index Idx5 = Visible, DateBeg;
  index Idx6 = Visible, DateRas;
  index Idx7 = Visible, DatePay;
  index Idx8 = Marked;
end;

#doc
  Описатель выбора и пометки документов
#end
objinterface IPayMarks;
  procedure SetCode(MarkCode: word);
  function  GetCode: word;
  function  LoadMarks: boolean;
  function  UnLoadMarks: boolean;
  procedure Mark(RefDoc: comp; SetMark: boolean);
  procedure MarkAll(SetMark: boolean);
  function  GetMarksCount: longint;
  function  GetMarkedName: string;
  function  First: comp;
  function  Next: comp;
  function  Pick: word;
  event procedure OnChanged(Sender: IPayMarks);
end;

#doc
  Описатель загрузчика документов
#end
objinterface IPayLoader;
  procedure Clear;
  procedure Load(Reload: boolean);
  procedure SetSortOrder(AOrder: word);
  function  First: comp;
  function  Next: comp;
  function  GetMarks: IPayMarks;
  event procedure OnChanged(Sender: IPayLoader);
end;

#doc
  Нотификатор пометок
#end
objinterface IPayMarksNotifier;
  procedure Changed(Sender: IPayMarks);
  event procedure OnChanged(Sender: IPayMarks);
end;

objinterface IPasserPeriod; forward;

#doc
  Описатель настройки ограничений для периода
#end
objinterface IPasserPeriod;
  property BegDate: date read write;
  property EndDate: date read write;
  procedure SetEnable(Value: boolean);
  function IsEnable: boolean;
  event procedure OnChanged(Sender: IPasserPeriod);
end;

#doc
  Описатель набора фильтров по периодам начала, расчета и выплаты
#end
objinterface IMaskPeriods;
  function IsSetPeriods: boolean;
  function BegPeriod: IPasserPeriod;
  function RasPeriod: IPasserPeriod;
  function PayPeriod: IPasserPeriod;
  procedure SetEdgeDates(Sender: IPasserPeriod);
  procedure ResetPeriods;
  procedure Refresh;
end;

#doc
   Параметр для видимости данных
#end
objinterface IParamData;
  property TypeReestr : word write;
  procedure SetParam(RefDoc: comp; Value : word);
end;

#end
