//------------------------------------------------------------------------------
//                                                      (c) корпорация ГАЛАКТИКА
// Галактика 9.1 - Заработная плата
// Методы для упрощенного формирования реестров
//------------------------------------------------------------------------------
#ifndef _FormPayRoll_vih_INCLUDED_
#define _FormPayRoll_vih_INCLUDED_

#component "Z_PayRep"

#doc
Объектный интерфейс для формирования реестра в банк </brief>
Алгоритм действий:
1. Выставляем параметры для формирования реестров с помощью методов:
    SetSBBANNAME(stName: string);
    SetSBBANMNEM(stNMnem: string);
    SetFORMINGDATE(Formdate: date);
    SetDATAZA(dZA: date);
    SetDATAV(dV: date);
    SetPREFIX(PR: string);
2. Наполняем данными таблицу в памяти, с помощью методов : Set*
3. С помощью метода CreatePayRoll запускаем процесс формирования.
#end
objinterface IFormPayRoll;

#doc
  Подразделение группировки, которое записывается в реестр при его создании.
#end
procedure SetCexAkt(coValue: comp);

#doc
  Ссылка на контрагента (из справочника организаций), которому перечисляются суммы.
#end
procedure SetCPol(coValue: comp);

#doc
  Ссылка на банк контрагента (из каталога банков данного контрагента).
#end
procedure SetCBankPol(coValue: comp);

#doc
  Ссылка на лицевой счет физического лица.
#end
procedure SetCLsch(coValue: comp);

#doc
  Ссылка на физическое лицо.
#end
procedure SetTPerson(coValue: comp);

#doc
  Ссылка на подразделение физического лица.
#end
procedure SetCex(coValue: comp);

#doc
  Номер персонального банковского счета, который открыт получателю в банке контрагента.
#end
procedure SetNomLsh(stValue: string);

#doc
  Номер банковской карты получателя (выдается банком к персональному банковскому счету).
#end
procedure SetNomCard(stValue: string);

#doc
  ФИО получателя.
#end
procedure SetFio(stValue:  string[60]);

#doc
  Табельный номер.
#end
procedure SetTabN(vValue: variant);

#doc
  Строка с адресом.
#end
procedure SetAdres(stValue: string);

#doc
  Перечисляемая в банк сумма.
#end
procedure SetSumma(doValue: double);

#doc
  Сумма сбора.
#end
procedure SetSbor(doValue: double);

#doc
  Вид удержания для реестра.
#end
procedure SetVidud(wValue: word);

#doc
  Имя ребенка.
#end
procedure SetFamCh(stFIO: string);

#doc
  Дата рождения ребенка.
#end
procedure SetDatRog(dRog: date);

#doc
  Функция для сохранения введенных данных по физическому лицу.
#end
function InsertRmoney: word;

#doc
  Наименование реестра.
#end
procedure SetSbbanName(stName: string);

#doc
  Наименование реестра старое (можно не заполнять).
#end
procedure SetSbbanMnem(stNMnem: string);

#doc
  Дата формирования реестра.
#end
procedure SetFormingDate(Formdate: date);

#doc
  Месяц, из начислений которого выплачивают суммы (начало этого месяца).
#end
procedure SetDataZa(dZA: date);

#doc
  Дата для перечисления/выплаты сумм реестра.
#end
procedure SetDataV(dV: date);

#doc
  Префикс реестра.
#end
procedure SetPrefix(PR: string);

#doc
Функция создания реестров </brief>
FiltrPodr - строка для отображения варианта формирования реестра
nazva     - параметры формирования
            cgFormPR_NazvaPol  = 0 - наименование реестра по получателям
            cgFormPR_NazvaBank = 1 - наименование реестра по банкам
            cgFormPR_NoMess    = 2 - не выдавать сообщения в процессе формирования (для пакетных режимов)
NomReestr - номер реестра, который надо сформировать
PereForm  - что мы делаем, переформиовываем или нет реестр
ProcVipl  - процент к выплате от исходной суммы
SumVipl   - сумма к выплате
#end
function CreatePayRoll(FiltrPodr: string; nazva: word; NomReestr: string[20]; PereForm: boolean; ProcVipl, sumVipl: double):  comp;

#doc
  Записанная ссылка на контрагента.
#end
function GetCPol: comp;

#doc
  Записанная ссылка на банк контрагента.
#end
function GetCBankPol: comp;

#doc
  Сумма в текущей записи.
#end
function GetSumma: double;

#doc
  Функция для удаления реестра, на который передана ссылка.
#end
function DeletePayRoll(coValue: comp): boolean;

end;
//------------------------------------------------------------------------------
//
//------------------------------------------------------------------------------
objinterface IFormPayOper;
#doc
  Оплачиваемый период [работы, отпуска, и т.д.] в пределах месяца.
#end
procedure SetPeriod(D1,D2: date);

#doc
  Системный код вида оплаты, которым оплачивается этот период.
#end
procedure SetVidopl(Value: longint);

#doc
  Код таблицы и ссылка на основание (отпуск, больничный, пособие, доплата...),
  сумма (или же часть суммы) которого будет выплачена.
#end
procedure SetTblVipl(wTbl: word; cRec: comp);

end;
//------------------------------------------------------------------------------
// объект для подписки на события создания реестра
//------------------------------------------------------------------------------
objinterface IFormPayRollExt;
#doc
  Событие генерируемое при создании записи cRec в таблице wTable.
#end
event procedure Event_GetInsertedSbBan(wTable: word; cRec: comp);

end;
//------------------------------------------------------------------------------
vipinterface FormPayRoll
  implements
    IFormPayRoll
    , IFormPayRollExt
    , IFormPayOper
  licensed (free)
;

#end
