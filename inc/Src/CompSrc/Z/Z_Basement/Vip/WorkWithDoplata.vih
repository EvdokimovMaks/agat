//------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Галактика ERP 9.1 - Заработная плата
// Типовые операции с постоянными доплатами в интерфейсах редактирования
//------------------------------------------------------------------------------

#ifndef _WORKWITHDOPLATA_VIH_INCLUDED_
#define _WORKWITHDOPLATA_VIH_INCLUDED_

#component "Z_ZAR"

#doc
<brief>Объект для осуществления типовых операций с постоянными доплатами
в интерфейсах редактирования.</brief>
Для каждого интерфейса редактирования должен создаваться свой экземпляр объекта!
#end
// Кривой объект, но в випе вынесение логики обработки событий в методы объектов не может выглядеть красиво.
objInterface IWorkWithDoplata;
//--- Настройка ----------------------------------------------------------------
  #doc
  <brief>Указать номер поля в интерфейсе</brief>
  <p>
    Заданный данной функцией номер поля будет использоваться при генерации данным объектом событий
    GotoField, SetAndReread. Таким образом в обработчиках данных событий можно будет использовать
    непосредственно номер поля в интерфейсе, что удобно для кодирования.
  </p>
  <p>
    Возможные значения параметра KeyWordOrFieldName приведены ниже.
    При этом функция не чувствительна к регистру.
  </p>
  <p>
    Если в интерфейсе редактирования то или иное поле не отображается и не фигурирует в связях таблиц
    (соответственно, нет необходимости перерисовывать его / нет возможности стать на него),
    то для него данную функцию можно не вызывать.
  </p>
  <ul>
    <li>'FieldToSelectVIDOPL' - поле, на которое будем становиться при необходимости выбрать
      вид оплаты (код вида оплаты либо наименование, как будет удобно)</li>
    <li>'FieldToSelectLSCHET' - поле, на которое будем становиться при необходимости выбрать
      лицевой счет (например, табельный номер, ФИО)</li>
    <li>'DOPLATA.DATAN' - поле DOPLATA.DATAN</li>
    <li>'DOPLATA.DATANN' - поле DOPLATA.DATANN</li>
    <li>'DOPLATA.DATOK' - поле DOPLATA.DATOK</li>
    <li>'DOPLATA.SUMMA' - поле DOPLATA.SUMMA</li>
    <li>'DOPLATA.SUMMAVKL' - поле DOPLATA.SUMMAVKL</li>
    <li>'DOPLATA.PROC' - поле DOPLATA.PROC</li>
    <li>'DOPLATA.VIDOPL' - поле DOPLATA.VIDOPL</li>
    <li>'DOPLATA.KODVALUT' - поле DOPLATA.KODVALUT</li>
    <li>'DOPLATA.CHOZOPER' - поле DOPLATA.CHOZOPER</li>
    <li>'DOPLATA.PARAM' - поле DOPLATA.PARAM</li>
  </ul>
  #end
  procedure SetFieldNO(KeyWordOrFieldName: string; fieldNo: longint);

//--- cmCheckField -------------------------------------------------------------
  #doc
  <brief>Стандартная обработка события cmCheckField для поля DOPLATA.DATAN</brief>
  <p>
    IsValid_LSCHET - валидность позиции в таблице LSCHET, буфер которой передали в функцию.
    Если валиден, то предполагается, что значения входных параметров согласованы: доплата относится именно к данному ЛС.
  </p>
  <p>
    Может приводить к генерации событий: SetAndReread, OnDataModified с параметром coLSCHET
  </p>
  <h3>Возвращаемое значение</h3>
  <p> true - значение введено корректно, либо было обработано, чтобы стать корректным. </p>
  <p> false - значение некорректно, необходимо вызвать abort.</p>
  #end
  function CheckDATAN(var BufDOPLATA: type$DOPLATA; const BufLSCHET: type$LSCHET;
                      IsValid_LSCHET: boolean): boolean;

  #doc
  <brief>Стандартная обработка события cmCheckField для поля DOPLATA.DATOK</brief>
  <p>
    IsValid_LSCHET - валидность позиции в таблице LSCHET, буфер которой передали в функцию.
    Если валиден, то предполагается, что значения входных параметров согласованы: доплата относится именно к данному ЛС.
  </p>
  <p>
    Может приводить к генерации событий: SetAndReread, OnDataModified с параметром coLSCHET,
    SetRecommendedDoplataDATOK
  </p>
  <h3>Возвращаемое значение</h3>
  <p> true - значение введено корректно, либо было обработано, чтобы стать корректным. </p>
  <p> false - значение некорректно, необходимо вызвать abort.</p>
  #end
  function CheckDATOK(var BufDOPLATA: type$DOPLATA; const BufLSCHET: type$LSCHET;
                      IsValid_LSCHET: boolean): boolean;

  #doc
  <brief>Стандартная обработка события cmCheckField для поля DOPLATA.SUMMA</brief>
  <p>
    Предполагается, что значения входных параметров согласованы: доплата относится
    именно к переданному ЛС, в доплате указан именно переданный вид оплаты.
    IsValid_KLVIDOPL - определена ли позиция в KLVIDOPL (указан ли вид оплаты).
  </p>
  <p>
    Может приводить к генерации событий: SetAndReread, OnDataModified с параметром coLSCHET
  </p>
  <h3>Возвращаемое значение</h3>
  <p> true - значение введено корректно, либо было обработано, чтобы стать корректным. </p>
  <p> false - значение некорректно, необходимо вызвать abort.</p>
  #end
  function CheckSUMMA(var BufDOPLATA: type$DOPLATA; const BufLSCHET: type$LSCHET;
                      const BufKLVIDOPL: type$KLVIDOPL;
                      IsValid_LSCHET: boolean;
                      IsValid_KLVIDOPL: boolean): boolean;

  #doc
  <brief>Стандартная обработка события cmCheckField для поля DOPLATA.PROC</brief>
  <p>
    IsValid_LSCHET - валидность позиции в таблице LSCHET, буфер которой передали в функцию.
    Если валиден, то предполагается, что значения входных параметров согласованы: доплата относится именно к данному ЛС.
  </p>
  <p>
    Может приводить к генерации событий: SetAndReread, OnDataModified с параметром coLSCHET
  </p>
  <h3>Возвращаемое значение</h3>
  <p> true - значение введено корректно, либо было обработано, чтобы стать корректным. </p>
  <p> false - значение некорректно, необходимо вызвать abort.</p>
  #end
  function CheckPROC(var BufDOPLATA: type$DOPLATA; const BufLSCHET: type$LSCHET;
                     IsValid_LSCHET: boolean): boolean;

//--- cmPick / cmDelOnProtect --------------------------------------------------
  #doc
  <brief>Стандартная обработка события выбора для поля вида оплаты в постоянной доплате</brief>
  <p>
    Передается текущее содержимое буферов таблиц DOPLATA, LSCHET, PERSONS.
    Предполагается, что определена позиция в соотв. узлах ЛТ, и что записи связаны
    корректным образом: доплата относится к указанному ЛС, ЛС относится к указанной персоне.
  </p>
  <p>
    Может приводить к генерации события SetAndReread.
  </p>
  <h3>Возвращаемое значение</h3>
  <p> true - выбор осуществлен успешно. </p>
  <p> false - выбор отменен. Необходимо вызвать abort. </p>
  #end
  function PickPaymentKind(var BufDOPLATA: type$DOPLATA;
                           const BufLSCHET: type$LSCHET;
                           const BufPERSONS: type$PERSONS): boolean;

  #doc
  <brief>Стандартная обработка события выбора валюты в постоянной доплате</brief>
  <p>
    Передается текущее содержимое буфера таблицы DOPLATA.
    Может приводить к генерации события SetAndReread.
  </p>
  <h3>Возвращаемое значение</h3>
  <p> true - выбор осуществлен успешно. </p>
  <p> false - пользователь отказался от выбора, ничего не делаем. </p>
  #end
  function PickCurrency(var BufDOPLATA: type$DOPLATA): boolean;

//--- Табличные события, кроме cmCheckField ------------------------------------
  #doc
  <brief>Стандартная обработка события cmSetDefault для постоянной доплаты</brief>
  <p>
    Предполагается, что доплата относится именно к переданному ЛС, и вид оплаты в ней
    выбран соответствующий (естественно, предположение действует, когда передано
    true в параметрах IsValid_LSCHET, IsValid_KLVIDOPL).
    Валидность позиции в узлах LSCHET и KLVIDOPOL передается в соотв. переменных.
  </p>
  <p>
    Перед вызовом данной процедуры необходимо сделать ClearBuffer для таблицы DOPLATA.
  </p>
  #end
  procedure SetDefault(var BufDOPLATA: type$DOPLATA;
                       const BufLSCHET: type$LSCHET;
                       const BufKLVIDOPL: type$KLVIDOPL;
                       IsValid_LSCHET: boolean;
                       IsValid_KLVIDOPL: boolean);

  #doc
  <brief>Стандартная обработка события cmCheckRecord для постоянной доплаты</brief>
  <p>
    Может привести к генерации события GotoField.
  </p>
  <h3>Возвращаемое значение</h3>
  <p>
    true - всё нормально. false - запись некорректная, необходимо вызвать abort.
  </p>
  #end
  function CheckRecord(var BufDOPLATA: type$DOPLATA): boolean;

//--- Вставка, обновление, улаление --------------------------------------------
  #doc
  <brief>Действия, выполняемые после вставки записи DOPLATA</brief>
  <p>Предполагается, что вставленная в БД доплата относится именно к переданному ЛС</p>
  <p>Может приводить к генерации события OnDataModified с параметром coLSCHET</p>
  #end
  procedure AfterInsertDoplata(const BufDOPLATA: type$DOPLATA; const BufLSCHET: type$LSCHET);

  #doc
  <brief>Стандартная обработка события удаления записи DOPLATA</brief>
  <p>
    Удаляет указанную запись DOPLATA, производя необходимые проверки и удаляя всё,
    что с данной доплатой связано.
  </p>
  <h3>Возвращаемое значение</h3>
  <p>
    true, если произошло удаление. В этом случае нужно перечитать запись DOPLATA,
    буфер которой передали.
  </p>
  <p>
    false, если удаление было отменено по причине запрета, либо пользователь отказался от удаления.
    В этом случае ничего делать не нужно.
  </p>
  #end
  function DeleteRecord(var BufDOPLATA: type$DOPLATA): boolean;

  #doc
  <brief>Производит удаление записи DOPLATA не спрашивая</brief>
  <p>
    Удаляет указанную запись таблицы DOPLATA, заданную буфером BufDOPLATA,
    и всё, что необходимо удалить при удалении данной записи.
    Возвращает признак, удачно ли прошло удаление.
  </p>
  #end
  function DelDoplata(var BufDOPLATA: type$DOPLATA): boolean;

//--- Генерируемые события для интерфейса редактирования -----------------------
  #doc
  <brief>Сигнал о том, что интерфейсу, использующему данный объект, необходимо
    перечитать запись некоторой таблицы</brief>
  <p>
    Событие генерируется, если в процессе работы данного объекта произошло
    обновление какой-либо записи в БД, для того, чтобы интерфейс, использующий
    данный объект, смог актуализировать свои данные. Передается код таблицы
    и номер измененной записи этой таблицы.
  </p>
  <p>
    Возможные значения параметра tableCode: coLSCHET
  </p>
  #end
  event procedure OnDataModified(tableCode: word; recordNumber: comp);

  #doc
  <brief>Требование интерфейсу редактирования изменить значение некоторого
    поля таблицы DOPLATA и перечитать привязанные к этому полю записи</brief>
  <p>
    Нужно сделать присваивание при помощи set нужного поля из буфера BufDOPLATA
    в буфер доплаты, принадлежащий интерфейсу и находящийся в логической таблице.
  </p>
  <p>
    fieldNo - номер поля в интерфейсе. Для того, чтобы объект знал, какое поле
    какой номер имеет, необходимо его настроить с помощью процедуры SetFieldNO.
  </p>
  <h3>Примечание</h3>
  <p>
    Буфер доплаты здесь передается, потому что основной интерфейс не будет видеть изменений
    в своём буфере доплаты (который в логической таблице), пока не завершится метод
    данного объекта, в который этот буфер передали. Соответственно, актуальные данные
    находятся в BufDOPLATA, а у самого интерфейса в буфере лежат устаревшие значения.
    Это связано с реализацией передачи в функции значений вида TABLENAME.BUFFER:
    происходит всё-таки копия буфера, а по окончании работы значения из копии переносятся
    обратно в буфер в ЛТ. То есть, новые значения в основном интерфейсе мы и так получим,
    но чтобы сделать правильный set, приходится передавать их досрочно.
  </p>
  #end
  event procedure SetAndReread(const BufDOPLATA: type$DOPLATA; fieldNo: longint);

  #doc
  <brief>Требование интерфейсу редактирования стать на какое-либо поле (SelectField)</brief>
  <p>
    fieldNo - номер поля в интерфейсе. Для того, чтобы объект знал, какое поле
    какой номер имеет, необходимо его настроить при помощи процедуры SetFieldNO.
  </p>
  #end
  event procedure GotoField(fieldNo: longint);

  #doc
  <brief>Установить рекомендуемую дату окончания для доплаты</brief>
  <p>
    Событие генерируется, если при проверке даты окончания в процедуре CheckDATOK
    обнаруживается, что дата окончания меньше даты начала. В этом случае
    интерфейс редактирования должен переопределить значение поля DATOK в буфере доплаты BufDOPLATA,
    который передаётся в эту процедуру, чтобы оно стало корректным.
    Здесь поведение различается для разных интерфейсов редактирования, поэтому
    логика вынесена в отдельное событие.
  </p>
  <h3>Примечание</h3>
  <p>
    Буфер доплаты здесь передается, потому что основной интерфейс не будет видеть изменений
    в своём буфере доплаты (который в логической таблице) до окончания выполнения метода CheckDATOK.
    Это связано с реализацией передачи в функции значений вида TABLENAME.BUFFER:
    происходит всё-таки копия буфера, а по окончании работы значения из копии переносятся
    в буфер в ЛТ.
  </p>
  #end
  event procedure SetRecommendedDoplataDATOK(var BufDOPLATA: type$DOPLATA);
end;

ObjInterface IWorkWithDoplata2;
  #doc
  Проверка пересечения переданного периода с периода приема-увольнения и возврат ближайшей даты приема
  #end
  function CheckParamByHistory(AID: tNrec; ABeg, AEnd, ACheckParam: date; var employmentDate: date): boolean;
  #doc
  Очистка временной таблицы
  #end
  procedure ClearLschHistory;
end;

#component "Z_Basement"
// Канонiчная реализация
vipInterface WorkWithDoplata implements IWorkWithDoplata, IWorkWithDoplata2 licensed(free);

#endif
