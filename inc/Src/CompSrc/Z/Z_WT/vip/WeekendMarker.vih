//------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Галактика ERP 9.1 - Заработная плата
// Условное обозначение выходного в табеле
//------------------------------------------------------------------------------

#ifndef _WEEKENDMARKER_VIH_INCLUDED_
#define _WEEKENDMARKER_VIH_INCLUDED_

#component "Z_WT"

#doc
  Обозначение выходных дней в табеле
#end
objInterface IWeekendMarker;
  #doc
  <brief>Условное обозначение выходного для дня <code>D</code></brief>
  <p>
    Возвращает пользовательский код условного обозначения выходного
    для режима работы, имеющего место на день <code>D</code>
    текущего месяца табеля. Текущий лицевой счет, месяц и год задаются
    предварительно вызовом функции
    <code><link externalFunction c_extfun.chm|LoadWorkingTable>LoadWorkingTable</link></code>
  </p>
  <h3>См. также</h3>
  <code><link function Z_WT::IWeekendMarker.MarkByOM>MarkByOM</link></code> <br />
  #end
  function Mark(D: byte): string;

  #doc
  <brief>Типовой код выходного для дня <code>D</code></brief>
  <p>
    Возвращает типовой код условного обозначения выходного
    для режима работы, имеющего место на день <code>D</code>
    текущего месяца табеля. Текущий лицевой счет, месяц и год задаются
    предварительно вызовом функции
    <code><link externalFunction c_extfun.chm|LoadWorkingTable>LoadWorkingTable</link></code>
  </p>
  <h3>См. также</h3>
  <code><link function Z_WT::IWeekendMarker.StandardMarkByOM>StandardMarkByOM</link></code> <br />
  #end
  function StandardMark(D: byte): string;

  #doc
  <brief>"Код неявки" выходного для дня <code>D</code></brief>
  <p>
    Возвращает "код неявки" условного обозначения выходного
    для режима работы, имеющего место на день <code>D</code>
    текущего месяца табеля. Текущий лицевой счет, месяц и год задаются
    предварительно вызовом функции
    <code><link externalFunction c_extfun.chm|LoadWorkingTable>LoadWorkingTable</link></code>
  </p>
  <h3>См. также</h3>
  <code><link function Z_WT::IWeekendMarker.AbsenceCodeByOM>AbsenceCodeByOM</link></code> <br />
  #end
  function AbsenceCode(D: byte): string;

  #doc
  <brief>Описание условного обозначения выходного для дня <code>D</code></brief>
  <p>
    Возвращает описание условного обозначения выходного
    для режима работы, имеющего место на день <code>D</code>
    текущего месяца табеля. Текущий лицевой счет, месяц и год задаются
    предварительно вызовом функции
    <code><link externalFunction c_extfun.chm|LoadWorkingTable>LoadWorkingTable</link></code>
  </p>
  <h3>См. также</h3>
  <code><link function Z_WT::IWeekendMarker.NotationDescriptionByOM>NotationDescriptionByOM</link></code> <br />
  #end
  function NotationDescription(D: byte): string;

  #doc
  <brief>NRec условного обозначения выходного для дня <code>D</code></brief>
  <p>
    Возвращает NRec условного обозначения выходного
    для режима работы, имеющего место на день <code>D</code>
    текущего месяца табеля. Текущий лицевой счет, месяц и год задаются
    предварительно вызовом функции
    <code><link externalFunction c_extfun.chm|LoadWorkingTable>LoadWorkingTable</link></code>
  </p><p>
    Может вернуть <code>0</code>, поскольку условное обозначение выходного не всегда присутствует в классификаторе.
  </p>
  <h3>См. также</h3>
  <code><link function Z_WT::IWeekendMarker.NotationRecordNumberByOM>NotationRecordNumberByOM</link></code> <br />
  #end
  function NotationRecordNumber(D: byte): comp;

  #doc
  <brief>Условное обозначение выходного для режима работы <code>OperatingMode</code></brief>
  <p>
    В отличие от <code><link function Z_WT::IWeekendMarker.Mark>Mark</link></code>,
    не требует предварительной инициализации и загрузки табеля, поскольку получает
    нужный режим работы напрямую.
  </p>
  #end
  function MarkByOM(OperatingMode: word): string;

  #doc
  <brief>Типовой код выходного для режима работы <code>OperatingMode</code></brief>
  <p>
    В отличие от <code><link function Z_WT::IWeekendMarker.StandardMark>StandardMark</link></code>,
    не требует предварительной инициализации и загрузки табеля, поскольку получает
    нужный режим работы напрямую.
  </p>
  #end
  function StandardMarkByOM(OperatingMode: word): string;

  #doc
  <brief>"Код неявки" выходного дня для режима работы <code>OperatingMode</code></brief>
  <p>
    В отличие от <code><link function Z_WT::IWeekendMarker.AbsenceCode>AbsenceCode</link></code>,
    не требует предварительной инициализации и загрузки табеля, поскольку получает
    нужный режим работы напрямую.
  </p>
  #end
  function AbsenceCodeByOM(OperatingMode: word): string;

  #doc
  <brief>Описание условного обозначения выходного для режима работы <code>OperatingMode</code></brief>
  <p>
    В отличие от <code><link function Z_WT::IWeekendMarker.NotationDescription>NotationDescription</link></code>,
    не требует предварительной инициализации и загрузки табеля, поскольку получает
    нужный режим работы напрямую.
  </p>
  #end
  function NotationDescriptionByOM(OperatingMode: word): string;

  #doc
  <brief>NRec условного обозначения выходного для режима работы <code>OperatingMode</code></brief>
  <p>
    В отличие от <code><link function Z_WT::IWeekendMarker.NotationRecordNumber>NotationRecordNumber</link></code>,
    не требует предварительной инициализации и загрузки табеля, поскольку получает
    нужный режим работы напрямую.
  </p>
  #end
  function NotationRecordNumberByOM(OperatingMode: word): comp;

  #doc
  <brief>Очистить кэш объекта</brief>
  #end
  procedure ClearCache;
end;

vipInterface WeekendMarker implements IWeekendMarker licensed(free);

#endif
