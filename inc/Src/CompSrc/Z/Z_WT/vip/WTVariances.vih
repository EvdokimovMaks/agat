/*
                      (c) 1994,2000 корпорация ГАЛАКТИКА
  Проект        : ГАЛАКТИКА
  Система       : Бухгалтерский контур
  Назначение    : obj-интерфейс "Отклонения табеля учета рабочего времени"
  Ответственный : Корзюк Виталий Францевич
  Параметры     : нет
*/

#ifndef _WTVARIANCES_INCLUDED_
#define _WTVARIANCES_INCLUDED_

#include WTCONTAINER.VIH
#include IProtectable.obj

#ifdef ComponentVersion
#component "Z_WT"
#end

#doc
  Объектный интерфейс редактора отклонений от табеля учета рабочего времени.
#end
objinterface IWTVariances;
  #doc
    Настраивает редактор на просмотр отклонений от табеля учета рабочего
    времени.</brief>

    <p>В параметре WorkingTable передается Nrec табеля. Если параметр DayOfMOnth
    отличен от нуля, в редакторе отображаются только приходящиеся на данный
    день месяца отклонения.</p>

    <p>Метод используется в случае встраивания реализаций данного объектного
    интерфейса в другие интерфейсы.</p>
  #end
  procedure LinkTo(WorkingTable: comp; DayOfMonth: byte);

  #doc
    Отображает окно просмотра отклонений от табеля учета рабочего
    времени.</brief>

    <p>В параметре WorkingTable передается Nrec табеля. Если параметр DayOfMOnth
    отличен от нуля, в окне отображаются только приходящиеся на данный
    день месяца отклонения.</p>
  #end
  procedure Run(WorkingTable: comp; DayOfMonth: byte);

  #doc
    Генерируется после вставки новой записи в перечень.
  #end
  event procedure OnInsert;

  #doc
    Генерируется после обновления любой записи в перечне.
  #end
  event procedure OnUpdate;

  #doc
    Генерируется после удаления любой записи (группы записей) из перечня.
  #end
  event procedure OnDelete;
end;

#doc
  Расширение интерфейса редактирования отклонений
#end
objInterface IWTVariances2(IWTVariances);
  #doc
    <brief>Получение информации о записи из кода обработчиков событий OnInsert, OnUpdate, OnDelete.</brief>
    <p>
      Процедура предназначена для вызова из кода обработчиков событий OnInsert, OnUpdate, OnDelete
      объектного интерфейса IWTVariances, и заполняет переменную buffer
      значениями из записи VARIANCE, повлекшей генерацию соотв. события.
      Возвращает, производилось ли заполнение переменной buffer.
    </p>
    <p>
      При вызове при обработке событий OnUpdate и OnDelete буфер принимает тот вид, который
      имела запись в БД до осуществления удаления/модификаций. Функция возвращает true.
    <p></p>
      При вызове при обработке события OnInsert, а также при вызове вне обработчиков событий
      OnInsert, OnUpdate, OnDelete, возвращает false, и ничего не происходит.
    </p>
  #end
  function GetStateBefore(var buffer: type$VARIANCE): boolean;

  #doc
    <brief>Получение информации о записи из кода обработчиков событий OnInsert, OnUpdate, OnDelete.</brief>
    <p>
      Процедура предназначена для вызова из кода обработчиков событий OnInsert, OnUpdate, OnDelete
      объектного интерфейса IWTVariances, и заполняет переменную buffer
      значениями из записи VARIANCE, повлекшей генерацию соотв. события.
      Возвращает, производилось ли заполнение переменной buffer.
    </p>
    <p>
      При вызове при обработке событий OnInsert и OnUpdate буфер принимает тот вид, который
      имеет запись в БД после добавления/модификации. Функция возвращает true.
    <p></p>
      При вызове при обработке события OnDelete, а также при вызове вне обработчиков событий
      OnInsert, OnUpdate, OnDelete, возвращает false, и ничего не происходит.
    </p>
  #end
  function GetStateAfter(var buffer: type$VARIANCE): boolean;
end;

vipinterface WTVariances implements IWTVariances, IWTVariances2, IWTContainerItem, IProtectable
#ifdef ATL51
Licensed(Free)
#end
;

#end