//******************************************************************************
//                                                      (с) корпорация Галактика
// Галактика 8.1 - Заработная плата
// Объектные инт-сы для импорта табеля из текстового файла
//******************************************************************************

#ifndef _WTIMPORT_INCLUDED_
#define _WTIMPORT_INCLUDED_

#ifdef ComponentVersion
#component "Z_WT"
#end

//------------------------------------------------------------------------------
#doc
  Объектный интерфейс итератора по отклонениям табеля учета рабочего времени.
#end
objinterface IWorkingTableVarianceIterator;
  #doc
    Устанавливает курсор на первое отклонение. Возвращает true, если
    позиционирование прошло успешно, в противном случае возвращает false.
  #end
  function First: boolean;

  #doc
    Устанавливает курсор на следующее отклонение. Возвращает true, если
    позиционирование прошло успешно, в противном случае возвращает false.
  #end
  function Next: boolean;

  #doc
    Возвращает в B содержимое буфера отклонения.
  #end
  procedure GetData(var B: type$VARIANCE);
end;

//******************************************************************************
#doc
  Объектный интерфейс импортера данных табеля учета рабочего времени.
#end
objinterface IWorkingTableImporter;

  #doc
    Открывает файл с данными.
  #end
  function OpenFile(FileName: string): boolean;

  #doc
    Закрывает файл с данными.
  #end
  procedure CloseFile;

  #doc
    Тестирует содержимое файла на соответствие формату.
  #end
  function TestFile: boolean;

  #doc
    Переходит к данным первого импортируемого табеля. Возвращает true в случае
    успеха, иначе возвращает false.
  #end
  function First: boolean;

  #doc
    Переходит к данным следующего импортируемого табеля.  Возвращает true в
    случае успеха, иначе возвращает false.
  #end
  function Next: boolean;

  #doc
    Возвращает true, если в процессе загрузки данных очередного табеля
    произошла какая-либо ошибка.
  #end
  function ErrorFound: boolean;

  #doc
    Возвращает значение числового табельного номера лицевого счета.
  #end
  function GetClockNumber: longint;

  #doc
    Возвращает месяц, к которому относятся данные импортируемого табеля.
  #end
  function GetMonth: byte;

  #doc
    Возвращает год, к которому относятся данные импортируемого табеля.
  #end
  function GetYear: word;

  #doc
    Возвращает true, если данные о количестве часов вида HourKind за день D
    были представлены в файле импорта. Количество часов при этом передается в
    Hours. Возвращает false в противном случае.
  #end
  function GetDailyHours(D: byte; HourKind: byte; var Hours: double): boolean;

  #doc
    Возвращает true, если данные о суммарном количестве часов вида HourKind
    были представлены в файле импорта. Количество часов при этом передается в
    Hours. Возвращает false в противном случае.
  #end
  function GetMonthlyHours(HourKind: byte; var Hours: double): boolean;

  #doc
    Возвращает ссылку на итератор по табельным отклонениям.
  #end
  function GetVarianceIterator: IWorkingTableVarianceIterator;
end;

//******************************************************************************
#doc
  Расширение объектного интерфейса импортера данных табеля учета рабочего
  времени.
#end
objinterface IWorkingTableImporter2(IWorkingTableImporter);
  #doc
    Возвращает nrec лицевого счета.
  #end
  function GetPersonalAccount: comp;
end;

//******************************************************************************
#doc
  Объектный интерфейс для определения кодовой страницы
  (функции определения кодировки файла-источника)
#end
objinterface ICodePage;
  #doc
    Восстанавливает для кодовой страницы значение по умолчанию и возвращает это значение
  #end
  function SetDefaultCodePage: longint;

  #doc
    Переопределяет (назначает) кодовую страницу считывания импортируемого файла.
    Внимание! Функция не занимается перекодировкой файла, а лишь определяет, в
    какой кодировке считывать содержимое файла. В случае, если назначаемая
    кодировка не поддерживается, возвращает false
    "0" - DOS кодировка (CP-866)
    "1" - Windows кодировка (CP-1251)
  #end
  function SetCodePage(CodePage: longint): boolean;

  #doc
    Возвращает текущее значение кодовой страницы для импортируемого файла.
  #end
  function GetCodePage: longint;
end;

//******************************************************************************
#doc
  Объектный интерфейс описателя и загрузчика импортера данных табеля учета
  рабочего времени.</brief>

  <p>ВНИМАНИЕ: имена всех реализаций данного объектного интерфейса должны
  начинаться с "VWorkingTableImporterLoader_"!</p>

  <p>Интерфейс ввода параметров импорта табеля загружает список имен реализаций
  объектного интерфейса IWorkingTableImporterLoader, загружает каждую
  реализацию и вызывает ее метод GetFormat. Таким образом заполняется список
  форматов файлов.</p>

  <p>После того, как пользователь выбрал интересующий его формат и задал имя файла,
  инициализируется соответствующий загрузчик и вызывается его метод GetImporter.
  Далее вызываются методы импортера OpenFile и TestFile для открытия файла
  импорта и проверки корректности его формата.</p>

  <p>Вызов методов First и Next импортера означает подгрузку из файла и проверку
  корректности данных первого/следующего табеля. Если данные загружены
  корректно, посредством метода GetDailyHours выбираются часы за каждый день.
  Затем, при помощи метода GetMonthlyHours, - итоговые величины за месяц.
  Завершается цикл проходом по списку отклонений.</p>
#end
objinterface IWorkingTableImporterLoader;

  #doc
    Возвращает краткое описание поддерживаемого формата.</brief>

    <p>Используется для составления списка поддерживаемых форматов в интерфейсе
    настройки параметров импорта табелей учета рабочего времени.</p>
  #end
  function GetFormat: string;

  #doc
    Возвращает краткое описание синтаксиса записи импортируемых данных.
  #end
  function GetSyntax: string;

  #doc
    Возвращает ссылку на импортер, представленный данным загрузчиком.
  #end
  function GetImporter: IWorkingTableImporter;
end;

//******************************************************************************
vipinterface VWorkingTableVarianceIterator implements IWorkingTableVarianceIterator
#ifdef ATL51
Licensed(Free)
#end
;
vipinterface VWorkingTableImporterLoader_CSV implements IWorkingTableImporterLoader
#ifdef ATL51
Licensed(Free)
#end
;
vipinterface vWorkingTableImporter_CSV
  implements
    IWorkingTableImporter
    , IWorkingTableImporter2
    , ICodePage
#ifdef ATL51
Licensed(Free)
#end
;
#end
