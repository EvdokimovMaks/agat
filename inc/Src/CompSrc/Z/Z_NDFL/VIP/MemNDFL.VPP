//-----------------------------------------------------------------------------
//                                                     (c) корпорация ГАЛАКТИКА
// Галактика 7.12 - заработная плата
// Таблицы в памяти для формирования НДФЛ-1, НДФЛ-2
//-----------------------------------------------------------------------------
table struct PODLGNDFL
(
  DATREC: date,    //Дата последнего изменения закона о налоге
#ifdef Gal8_1
  ENDINT: double,  //Конец интервала для предоставления вычетов на работника
#else
  ENDINT: longint, //Конец интервала для предоставления вычетов на работника
#end
  KOLMIN: longint  //Конец интервала для предоставления вычетов на иждивенцев
)

With Index
(
  PODLGNDFL01  =  DATREC + ENDINT(Desc),
  PODLGNDFL02  =  DATREC + KOLMIN(Desc)
);

table struct SumCexoz
(
  nRec:        comp,
  OKATO:       string[20],
  KPP:         string[9],
  OrgRef:      comp,
  Cexoz:       comp,
  cLsch:       comp,
  tPerson:     comp,
  cGNI:        comp,
  TabN:        longint,
  Sovm:        word,
  Strahnom:    String[20],  // страховой номер
#ifdef Gal8_1
  StrTabN:     string,
#end
  Fio:         string,
  MycLsch:     comp,
  Month:       array [1..12] of word,
  cOtpDop:     array [1..12] of comp,
  wPrint:      word,
  boPovt:      boolean
 ,DataN:       array [1..12] of date
 ,cPodrUch:    comp
 ,cexoz_tbl:   array [1..12] of comp
)
with index
(
  SumCexoz01 = Cexoz + cLsch,
  SumCexoz02 = OKATO + KPP + FIO + Strahnom,
  SumCexoz03 = OKATO + KPP + TabN + Strahnom,
#ifdef Gal8_1
  SumCexoz04 = OKATO + KPP + TabN + StrTabN + Strahnom,
#end
  SumCexoz05 = MycLsch + OKATO + KPP,
  SumCexoz06 = OKATO + KPP + FIO + cLsch,
  SumCexoz07 = cLsch,
  SumCexoz08 = wPrint + OKATO + KPP + FIO + Strahnom,
  SumCexoz09 = nRec(Unique, Surrogate),
  SumCexoz10 = cPodrUch + FIO + Strahnom,
  SumCexoz11 = MycLsch + cPodrUch
);

table struct TableGNI
(
  KodGNI: string[15]
)
with index
(
  TableGNI01 = KodGNI
);

table struct DataNDFL
(
  nRec:         comp,
  cSumCexoz:    comp,
  OKATO:        string[20],
  Strahnom:     String[20],  // страховой номер
  Fio:          string,
  cLsch:        comp,
  tPerson:      comp,
  KPP:          string[9],
  SumZPDog:     array [1..12] of double,  // суммы зарплаты договорника
  // налоги
  NalogRezI:    array [1..12] of double, // исчисленный налог на доходы резидента
  NalogNoRezI:  array [1..12] of double, // исчисленный налог на доходы нерезидента
  NalogRezU:    array [1..12] of double, // удержанный налог на доходы резидента
  NalogNoRezU:  array [1..12] of double, // удержанный налог на доходы нерезидента
  Nalog35U:     array [1..12] of double, // удержанный налог с дохода 35%
  NalDividendU: array [1..12] of double, // удержанный налог с дивидендов

  VozvratNalog: array [1..12] of double, // 6.3 сумма возвратов налогов по перерасчету с доходов прошлых лет
  PererasNalog: array [1..12] of double, // 6.4 сумма, зачтенная при уплате налога по перерасчету с доходов прошлых лет
  // это суммы стандартных вычетов на работника по месяцам по номеру вычета
  StVich1:      array [1..20] of double,
  StVich2:      array [1..20] of double,
  StVich3:      array [1..20] of double,
  StVich4:      array [1..20] of double,
  StVich5:      array [1..20] of double,
  StVich6:      array [1..20] of double,
  StVich7:      array [1..20] of double,
  StVich8:      array [1..20] of double,
  StVich9:      array [1..20] of double,
  StVich10:     array [1..20] of double,
  StVich11:     array [1..20] of double,
  StVich12:     array [1..20] of double,
  StVichD:      array [1..12] of double, // стандартные вычеты на детей по месяцам
  StVichD_2009: array [1..12] of double, // стандартные вычеты на детей со ссылкой
  StVichDInv:   array [1..12] of double, // стандартные вычеты на детей по месяцам
  StVichDV:     array [1..12] of double, // стандартные вычеты на детей вдовы по месяцам
  StVichDVInv:  array [1..12] of double, // стандартные вычеты на детей вдовы по месяцам
  ChildOne:     array [1..12] of double, // вычеты на одного ребенка по месяцам
  // какие  стандартныe вычеты на работника есть
  PravoVich:    array [1..20] of integer,
  SummaVich:    array [1..20] of double,
  PravoVichD:   boolean,
  SummaVichD:   double,
  PravoVichDV:  boolean,
  SummaVichDV:  double,
  PravoVichDV_2009: comp, //ссылка на код из окна Семейное положение
  PravoVichDInv:   boolean, //дети-инвалиды
  SummaVichDInv:   double,
  PravoVichDVInv:  boolean,
  SummaVichDVInv:  double,
  PravoVichDVInv_2009: comp,//ссылка на код из окна Семейное положение на детей-инвалидов вдовы
  OldRab:          double,
  IschNalog2620:   array [1..12] of double,
  NotVzNalog2620:  array [1..12] of double,
  VozvratNalog184: array [1..12] of double, // 6.3 сумма возвратов налогов по перерасчету с доходов прошлых лет
  PererasNalog184: array [1..12] of double,  // 6.4 сумма, зачтенная при уплате налога по перерасчету с доходов прошлых лет
  Summa45No:       array [1..12] of double  // 4.5 сумма учтенных вычетов по настройке "разница по вычетам не переносится"
)
with index
(
  DataNDFL01 = Fio + cLsch,
  DataNDFL02 = cLsch + cSumCexoz,
  DataNDFL03 = nRec(Unique, Surrogate),
  DataNDFL04 = cSumCexOz + Fio
);

table struct Dohod35  // доход, облагаемый по ставке 35%
(
  cLsch:     comp,
  Code35:    string[7], // пользовательский  код дохода, облагаемого по ставке 35% по видам доходов
  Summa35:   array [1..12] of double, // суммы дохода, облагаемого по ставке 35% по видам доходов
  CodSkid35: string[7], // пользовательский код скидки с дохода, облагаемого по ставке 35% по видам доходов
  Skid35:    array [1..12] of double // суммы скидки с дохода, облагаемого по ставке 35% по видам доходов
)
with index
(
  Dohod3501 = cLsch + Code35
);

// виды доходов и скидки с них
table struct IncomeDiscountNDFL
(
   cLsch:            comp
  ,cSumCexOz:        comp
  ,MonthINCOME:      integer  //  "Месяц"
  ,INCOMECODE:       longint  //  "Код вида дохода системный"
  ,INCOMEMonthSum:   double   //  "Сумма дохода за месяц"
  ,DISCOUNTCODE:     string[7]//  "Код вида скидки пользовательский"
  ,DISCOUNTMonthSum: double   //  "Cумма скидки за месяц"
 )
 with index
 (
   IncomeDiscountNDFL00 = cLsch + cSumCexOz + INCOMECODE,
   IncomeDiscountNDFL01 = cLsch + MonthINCOME,
   IncomeDiscountNDFL02 = cLsch + INCOMECODE + MonthINCOME
 );

// скидки по налогу на доходы со всей суммы дохода (н-р, стр-во жилья)
table struct SkidkiNDFL
(
  cLsch:      comp
  ,cSumCexOz: comp
  ,Mes:       integer
  ,CODE:      string[5] //  "Код скидки пользовательский"
  ,Summa:     double
  ,AllSumma:  double
  ,SummaBeg:  double
  ,OKATO:     string[20]
  ,KPP:       string[9]
  ,Strahnom : String[20]
)
with index
(
  SkidkiNDFL01 = cLsch + Mes + CODE,
  SkidkiNDFL02 = cLsch + CODE + Mes,
  SkidkiNDFL03 = OKATO + KPP + cLsch + CODE,
  SkidkiNDFL04 = OKATO + KPP + cLsch + CODE + Mes,
  SkidkiNDFL05 = cLsch + cSumCexOz + Mes + CODE,
  SkidkiNDFL06 = cLsch + cSumCexOz + CODE + Mes
);

// суммы вычетов на детей после 2009г
table struct Skidki_2009
(
  skid_NRec   :  comp //ссылка на SkidNew
  ,skid_Kol   : Longint //сумма вычета на ребенка из SkidNew
)
with index
(
  Skidki_200901 = skid_NRec
);

table struct Ndfltmp  //для печати отсортированных сумм
(
  Code    : s5,                      //пользовательский код
  cFpStBud: comp,
  Summa   : array [1..12] of double, //суммы по месяцам
  SummaV  : array [1..12] of double, //суммы по месяцам
  wMes    : word,                    //текущий месяц
  MesN    : array [1..12] of word,   //месяц а котором начислено
  CodeV   : string[7],               //код вычета
  wSort   : word,                    //поле для сортировки
  Date1   : array [1..12] of date,
  OsnOpl  : array [1..12] of word,   //признак выплаты в м е ж п е р и о д (cn_MegPeriod)
  wPlat   : word                     //признак суммы дохода пропорционально платежкам
)
with index
(
  Ndfltmp01 = Code + cFpStBud,
  Ndfltmp02 = wMes + Code + CodeV,
  Ndfltmp03 = wSort + wMes,
  Ndfltmp04 = CodeV,
  Ndfltmp05 = CODE + WSORT + cFpStBud
);

table struct tpReestr
//таблица для печати реестра
(
   sNmFile  : string                 //имя файла
  ,OKATO    : string[20]             //OKATO
  ,KPP      : string[9]              //КПП
  ,CountDoc : longint                //количество документов в пачке
  ,SummaD   : double                 //общая сумма дохода
  ,SummaNi  : double                 //общая сумма налога исчисленная
  ,SummaNu  : double                 //общая сумма налога удержанная
  ,SumNalUpl : double                //общая сумма налога перечисленная
  ,Summa    : array [1..12] of double
  ,VidUd    : word
)

With Index
(
  tpReestr01 = OKATO + KPP + VidUd
);
