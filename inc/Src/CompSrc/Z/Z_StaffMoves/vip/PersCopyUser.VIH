/*
 ╔═══════════════════════════════════════════════════════════════════════════╗
 ║ Проект        : Управление персоналом                                     ║
 ║ Версия        : 8.1                                                       ║
 ║ Назначение    : Сервисная функция: Копирование данных сотрудников         ║
 ║                 при переводе из филиала в филиал                          ║
 ╚═══════════════════════════════════════════════════════════════════════════╝
*/

#ifndef _PersCopyUser_INCLUDED_
#define _PersCopyUser_INCLUDED_

#ifdef ComponentVersion
#component "z_StaffMoves"
#end

#doc
Сервисная функция: Копирование данных сотрудников
при переводе из филиала в филиал
#end
objinterface IPersCopyUser;

#doc
  Сама функция копирования данных
#end
function CopyPersInfo(_cPersonCur: comp; _cPersonOld: comp; cFilial: comp): boolean;

#doc
  Функция создания новой карточки с принадлежностью к филиалу.
  _cPers - ссылка на карточку, из коей производить копирование
  tt - числовой табельный
  stt - строковый табельный
  Если оба табельных пустые, то берутся из старой карточки
  cFilial - ссылка на филиал
  cDepartment - ссылка на новое подразделение (СЕ ШР)
  wShouldCheckIdentity -Разрешать перевод сотрудников с идентичными данными,
  только по ФИО + дата рождения
    0 -'Нет',
    1 - 'Запрос',
    2- 'Да'
  Возвращает ссылку на новую карточку

#end
function CreateNewPersonInFilial(_cPers: comp; tt: longint;
                                  stt: string[20];
                                  cDepartment, cFilial: comp;
                                  wShouldCheckIdentity: word): comp;

end;


#doc
Объект по обработке назначений одной карточки, но различных лицевых счетов
#end
objinterface IPersCopyUser02;

#doc
  Функция проверки совпадения дат назначения\л.с.
  dChange - дата проверки перевода.
#end
function CheckLSInApp(_cPsn, _OldLS, _NewLS: comp
                      ; dChange: date): boolean;
#doc
  Функция перепривязки сообщений, пришедших в РК с некоей даты от одного л\с к другому
  dChange - дата, сигналы, пришедшие после которой, нужно грохать
  wFlag - какие именно сигналы необходимо модифицировать
  0 - все
  1 - изменения л/с
  2 - изменения по доплатам
#end
function ReConnectMsgInZarsignal(_cPsn, _OldLS, _NewLS: comp
                                  ; dChange: date; wFlag: word): boolean;
#doc
  перепривязывание лицевых к найденному назначению
  dChange - дата перевода.
#end
function ConnectLSInApp(_cPsn, _OldLS, _NewLS: comp
                        ; dChange: date): boolean;

end;

vipinterface PersCopyUser implements IPersCopyUser, IPersCopyUser02
  Licensed (free)
;

#end
