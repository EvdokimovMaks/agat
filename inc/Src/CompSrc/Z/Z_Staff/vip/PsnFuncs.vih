//------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Галактика 5.8 - Общая функциональность контура "Управление персоналом"
// Функции работы с таблицей Persons
//------------------------------------------------------------------------------

#ifndef _PsnFunc_vih_Included
#define _PsnFunc_vih_Included

#component "Z_Staff"

#ifdef ComponentVersionInDict
  #include ipersons.vih
  public type TPersons = record as table PERSONS;
  #define TPersons TPersons
#else
  #define TPersons type$Persons
#end

#doc
Объектный интерфейс "Функции работы с таблицей Persons"
#end
ObjInterface IPersonsFunctions;

  #doc
  количество активных работников (без архивных и еще не принятых на работу)
  #end
  function GetEmployeeCount: longint;

  #doc
  максимальное разрешенное кол-во активных работников
  #end
  function GetAllowedEmployeeCount: longint;

  #doc
  есть ли возможность вставить еще одного работника
  #end
  function CanInsert(Silent: boolean): boolean;

  #doc
  Передача модифицированного буфера
  #end
  function SetBufferPersons(var BuffPers : #TPersons; NrecPers : comp) : word;

  #doc
  Получение модифицированного буфера
  #end
  function GetBufferPersons(NrecPers : comp) : #TPersons;

  #doc
  Получение Nrec сотрудника, информация по которому была модифицирована;
  #end
  function GetNrecModifiedBuffer : comp;

  #doc
  Получение персонального номера сотрудника
  #end
  function GetUniquePsnNumber(NrecPers : comp) : string;

  #doc
  Получение номера страхового свидетельства
  #end
  function GetNumberInsurance(NrecPers : comp) : string;

  #doc
  Получение номера ИНН
  #end
  function GetUniqueTaxNumber(NrecPers : comp) : string;

  #doc
  Получение Кода ГНИ
  #end
  function GetCodeGNI(NrecPers : comp) : string;

  #doc
  Функция проверяет пересечение командировки сотрудника с заданным периодом
  #end
  function GetInfoCrossBusinessTrip(NrecPers : comp; BegDate  : date; EndDate  : date) : boolean;

  #doc
  Получение ведомственного звания/категории - ссылка
  #end
  function GetRank(NrecPers : comp; NeedDate  : date) : comp;

  #doc
  Получение ведомственного звания/категории - Наименование
  #end
  function sGetRank(NrecPers : comp; NeedDate  : date) : string;

  #doc
  Получение статуса молодого специалиста
  #end
  function GetYoungStatus(WordCat : word): string;

  #doc
  Получение статуса работника
  #end
  function GetStatusPers(IsEmpl : string) : string;

  #doc
  Наличие утвержденного приказа о приеме на работу. Если найдена хотя бы одна утвержденная позиция, возвращает 1, иначе 0.
  #end
  function GetStatusPR_T1(NrecPers : comp) : word;

  #doc
  Наличие утвержденного приказа об увольнении. Если найдена хотя бы одна утвержденная позиция, возвращает 1, иначе 0.
  #end
  function GetStatusPR_T8(NrecPers : comp) : word;

  #doc
  Статус приказа о приеме на работу. Если позиция приказа утверждена, возвращает 1.
  #end
  function GetStatusPR_T1_App(ContDoc_Nrec : comp) : word;

  #doc
  Статус приказа о временном замещении. Если позиция приказа утверждена, возвращает 1.
  #end
  function GetStatusPR_T3_App(ContDoc_Nrec : comp) : word;

  #doc
  Статус приказа о совмещении. Если позиция приказа утверждена, возвращает 1.
  #end
  function GetStatusPR_T4_App(ContDoc_Nrec : comp) : word;

  #doc
  Статус приказа о перемещении. Если позиция приказа утверждена, возвращает 1.
  #end
  function GetStatusPR_T5_App(ContDoc_Nrec : comp) : word;

  #doc
  Статус произвольного приказа приказа. Если позиция приказа утверждена, возвращает 1.
  #end
  function GetStatusPR(ContDoc_Nrec : comp) : word;

  #doc
  Северная категория сотрудника на указанную дату
  #end
  function GetNorthernCategory(NorthernCategorySource : word; NrecPers : comp; RunDate : date) : word;

  #doc
  статус резидент/нерезидент в картотеке
  #end
  function GetStatusRez(NrecPers : comp; RunDate : Date) : string;

  #doc
  Очистка Флагов модификации
  #end
  procedure ClearFlagFields;

  #doc
  Установка флагов модификации
  #end
  procedure SetFlagFields
  (
      isModFIO           : boolean;
      isModBornDate      : boolean;
      isModBornAddr      : boolean;
      isModDependants    : boolean;
      isModSex           : boolean;
      isModNationality   : boolean;
      isModPasspRus      : boolean;
      isModPasspFor      : boolean;
      isModLiveAddr      : boolean;
      isModPasspAddr     : boolean;
      isModFamilyState   : boolean;
      isModEducation     : boolean;
      isModPublications  : boolean;
      isModInventions    : boolean;
      isModPassNmb       : boolean;
      isModDepartment    : boolean;
      isModGalDep        : boolean;
      isModGalDepHost    : boolean;
      isModTabNmb        : boolean;
      isModTestPeriod    : boolean;
      isModJobNature     : boolean;
      isModComplSrc      : boolean;
      isModInvalidGrp    : boolean;
      isModPensionDate   : boolean;
      isModPensionCause  : boolean;
      isModDisOrderDate  : boolean;
      isModDisOrderNmb   : boolean;
      isModDisDate       : boolean;
      isModDisReason     : boolean;
      isModDisMotive     : boolean;
      isModDisProfNmb    : boolean;
      isModDisProfDate   : boolean;
      isModAppDate       : boolean;
      isModAppointCur    : boolean;
      isModAppointFirst  : boolean;
      isModAppointLast   : boolean;
      isModIsEmployee    : boolean;
      isModIsPersBuh     : boolean;
      isModGr            : boolean;
      isModcSovm         : boolean;
      isModDisDatePr     : boolean;
      isModcAddNrec1     : boolean;
      isModdAddDate1     : boolean;
      isModcAddNrec2     : boolean;
      isModdAddDate2     : boolean;
      isModwAddWord      : boolean;
      isModcBaseProf     : boolean;
      isModcAddProf      : boolean;
      isModcDopRef1      : boolean;
      isModcDopRef2      : boolean;
      isModcDopRef3      : boolean;
      isModwPrizn1       : boolean;
      isModwPrizn2       : boolean;
      isModdDat1         : boolean;
      isModdDat2         : boolean;
      isModiAttr         : boolean
  );

  #doc
  модификация записи таблицы Persons
  #end
  function UpdateCurrentPersons(BuffPers : #TPersons) : integer;

end;

#doc
Расширение №4 объектного интерфейса IPersonsFunctions
#end
ObjInterface IPersonsFunctions4;

  #doc
  Установка флагов модификации
  #end
  procedure SetFlagFields1
  (
      isModLastUser      : boolean;
      isModFIO           : boolean;
      isModBornDate      : boolean;
      isModBornAddr      : boolean;
      isModDependants    : boolean;
      isModSex           : boolean;
      isModNationality   : boolean;
      isModPasspRus      : boolean;
      isModPasspFor      : boolean;
      isModLiveAddr      : boolean;
      isModPasspAddr     : boolean;
      isModFamilyState   : boolean;
      isModEducation     : boolean;
      isModPublications  : boolean;
      isModInventions    : boolean;
      isModPassNmb       : boolean;
      isModDepartment    : boolean;
      isModGalDep        : boolean;
      isModGalDepHost    : boolean;
      isModTabNmb        : boolean;
      isModTestPeriod    : boolean;
      isModJobNature     : boolean;
      isModComplSrc      : boolean;
      isModInvalidGrp    : boolean;
      isModPensionDate   : boolean;
      isModPensionCause  : boolean;
      isModDisOrderDate  : boolean;
      isModDisOrderNmb   : boolean;
      isModDisDate       : boolean;
      isModDisReason     : boolean;
      isModDisMotive     : boolean;
      isModDisProfNmb    : boolean;
      isModDisProfDate   : boolean;
      isModAppDate       : boolean;
      isModAppointCur    : boolean;
      isModAppointFirst  : boolean;
      isModAppointLast   : boolean;
      isModIsEmployee    : boolean;
      isModIsPersBuh     : boolean;
      isModGr            : boolean;
      isModcSovm         : boolean;
      isModDisDatePr     : boolean;
      isModcAddNrec1     : boolean;
      isModdAddDate1     : boolean;
      isModcAddNrec2     : boolean;
      isModdAddDate2     : boolean;
      isModwAddWord      : boolean;
      isModcBaseProf     : boolean;
      isModcAddProf      : boolean;
      isModcDopRef1      : boolean;
      isModcDopRef2      : boolean;
      isModcDopRef3      : boolean;
      isModwPrizn1       : boolean;
      isModwPrizn2       : boolean;
      isModdDat1         : boolean;
      isModdDat2         : boolean;
      isModiAttr         : boolean

  );
end;

#doc
Расширение №5 объектного интерфейса IPersonsFunctions
#end
ObjInterface IPersonsFunctions5;

  #doc
  Установка флагов модификации
  #end
  procedure SetFlagFields2
  (
      isModLastUser      : boolean;
      isModFIO           : boolean;
      isModBornDate      : boolean;
      isModBornAddr      : boolean;
      isModDependants    : boolean;
      isModSex           : boolean;
      isModNationality   : boolean;
      isModPasspRus      : boolean;
      isModPasspFor      : boolean;
      isModLiveAddr      : boolean;
      isModPasspAddr     : boolean;
      isModFamilyState   : boolean;
      isModEducation     : boolean;
      isModPublications  : boolean;
      isModInventions    : boolean;
      isModPassNmb       : boolean;
      isModDepartment    : boolean;
      isModGalDep        : boolean;
      isModGalDepHost    : boolean;
      isModTabNmb        : boolean;
      isModTestPeriod    : boolean;
      isModJobNature     : boolean;
      isModComplSrc      : boolean;
      isModInvalidGrp    : boolean;
      isModPensionDate   : boolean;
      isModPensionCause  : boolean;
      isModDisOrderDate  : boolean;
      isModDisOrderNmb   : boolean;
      isModDisDate       : boolean;
      isModDisReason     : boolean;
      isModDisMotive     : boolean;
      isModDisProfNmb    : boolean;
      isModDisProfDate   : boolean;
      isModAppDate       : boolean;
      isModAppointCur    : boolean;
      isModAppointFirst  : boolean;
      isModAppointLast   : boolean;
      isModIsEmployee    : boolean;
      isModIsPersBuh     : boolean;
      isModGr            : boolean;
      isModcSovm         : boolean;
      isModDisDatePr     : boolean;
      isModcAddNrec1     : boolean;
      isModdAddDate1     : boolean;
      isModcAddNrec2     : boolean;
      isModdAddDate2     : boolean;
      isModwAddWord      : boolean;
      isModcBaseProf     : boolean;
      isModcAddProf      : boolean;
      isModcDopRef1      : boolean;
      isModcDopRef2      : boolean;
      isModcDopRef3      : boolean;
      isModwPrizn1       : boolean;
      isModwPrizn2       : boolean;
      isModdDat1         : boolean;
      isModdDat2         : boolean;
      isModiAttr         : boolean;
      isModdDOP2         : boolean;
      isModdDOP1         : boolean
  );
end;

#doc
Работа с картотекой
#end
ObjInterface IPersonEraser;

  #doc
  Удаление карточки сотрудника
  #end
  function DelPerson(RecNum: comp): boolean;

end;

#doc
Расширение №1 объектного интерфейса IPersonEraser
#end
ObjInterface IPersonEraser1;

  #doc
  Копирование карточки сотрудника
  #end
  function CopyInfPerson (oldNrec, newNrec: comp): comp;

end;

#doc
Расширение №6 объектного интерфейса IPersonsFunctions
#end
ObjInterface IPersonsFunctions6;

  #doc
  Возвращает TRUE, если у сотрудника есть договор о материальной ответственности
  #end
  function isPsnDocMatOtv(PsnNrec: comp; TestDate: Date): boolean;

end;

#doc
Расширение №7 объектного интерфейса IPersonsFunctions
#end
ObjInterface IPersonsFunctions7;

  #doc
  Возвращает дату заключения договора о материальной ответственности
  Если PaspNrec = 0 то последнего договора
  #end
  function GetDocMatOtvDateBeg(PsnNrec: comp; PaspNrec: comp): date;

  #doc
  Возвращает дату заключения договора о материальной ответственности
  Если PaspNrec = 0 то последнего договора
  #end
  function GetDocMatOtvDateEnd(PsnNrec: comp; PaspNrec: comp): date;

  #doc
  Возвращает дату заключения договора о материальной ответственности
  Если PaspNrec = 0 то последнего договора
  #end
  function GetNumDocMatOtv(PsnNrec: comp; PaspNrec: comp): string;

  #doc
  Возвращает договор о материальной ответственности
  #end
  function GetDocMatOtv(PsnNrec: comp; PaspNrec: comp): string;

end;

#doc
Расширение №8 объектного интерфейса IPersonsFunctions
#end
ObjInterface IPersonsFunctions8;

  #doc
  Возвращает название звания на дату для сотрудника
  #end
  function GetRankName(psnNrec: comp; testDate: date): string;

  #doc
  Возвращает сумму за звание на дату для сотрудника
  #end
  function GetRankSum(psnNrec: comp; testDate: date): double;

end;

#doc
Расширение №9 объектного интерфейса IPersonsFunctions
#end
ObjInterface IPersonsFunctions9;

  #doc
  Возвращает номер доверенности главного бухгалтера
  #end
  function GetNumDovGB(PsnNrec : comp): string;

end;

#doc
Расширение №10 объектного интерфейса IPersonsFunctions
#end
ObjInterface IPersonsFunctions10;

  #doc
  Функция возвращает Фамилию
  #end
  function GetFirstName(psnNrec: comp): string;
    deprecated 'Вместо GetFirstName следует использовать IPersonsFunctions16::Get_LastName';

  #doc
  Функция возвращает Имя
  #end
  function GetLastName(psnNrec: comp): string;
    deprecated 'Вместо GetLastName следует использовать IPersonsFunctions16::Get_FirstName';

  #doc
  Функция возвращает Отчество
  #end
  function GetPatronymic(psnNrec: comp): string;

  #doc
  ФИО в формате, заданном настройкой "Вывод инициалов лица, подписывающего приказы"
  #end
  function GetFIO(psnNrec: comp) : string;

end;

#doc
Расширение №11 объектного интерфейса IPersonsFunctions
#end
ObjInterface IPersonsFunctions11;

  #doc
  Функция возвращает данные о документе, удостоверяющим личность
  #end
  function GetDocPersons(psnNrec: comp; TypeData : word) : variant;
  /*TypeData :
    1:  код документа
    2:  наименование документа
    3:  серия документа
    4:  номер документа
    5:  дата выдачи
    6:  кем выдан
   */
end;

#doc
Расширение №12 объектного интерфейса IPersonsFunctions
#end
ObjInterface IPersonsFunctions12;

  #doc
  Возвращает сумму на сегодня за звание сотрудника, которое было на указанную дату
  #end
  function GetRankSumNow(psnNrec: comp; testDate: date): double;

end;


#doc
Расширение №13 объектного интерфейса IPersonsFunctions
#end
ObjInterface IPersonsFunctions13;

  #doc
  Возвращает контактные данные сотрудника (телефон, e-mail)
  #end
  function GetCommunicationPer(psnNrec: comp; typeCommunication: word): string;

end;

#doc
Расширение №14 объектного интерфейса IPersonsFunctions
#end
ObjInterface IPersonsFunctions14;

  #doc
  Возвращает параметры документа по системному коду для сотрудника
  #end
  function GetDocParam(psnNrec: comp; sysCodeDoc: longint; typeParam: word): variant;

end;

#doc
Расширение №15 объектного интерфейса IPersonsFunctions
#end
ObjInterface IPersonsFunctions15;

  function CheckINN(psnNrec: comp): word;

  function IsCorrectINN(psnNrec: comp): string;

end;

#doc
Расширение №16 объектного интерфейса IPersonsFunctions
#end
ObjInterface IPersonsFunctions16;

  #doc
  Функция возвращает Фамилию
  #end
  function Get_LastName(psnNrec: comp): string;

  #doc
  Функция возвращает Имя
  #end
  function Get_FirstName(psnNrec: comp): string;

  #doc
  Функция возвращает ФИО в формате, заданном настройкой "Настройки Галактики \ Управление персоналом \ Расчеты с персоналом \ Отчеты \ Вывод ФИО"
  #end
  function GetFIO_ZAR(psnNrec: comp) : string;

end;

#doc
Расширение №17 объектного интерфейса IPersonsFunctions
#end
ObjInterface IPersonsFunctions17;

  #doc
  Функция возвращает Фамилию Имя Отчество на определенную дату с учетом истории изменения фамилии.
  #end
  function GetFioOnDate(psnNrec: comp; d: date): string;

end;

#doc
Расширение №18 объектного интерфейса IPersonsFunctions
#end
ObjInterface IPersonsFunctions18;

  #doc
  Функция возвращает Фамилию Имя Отчество подписывающего приказы в соответствии с требованиями СТБ 6.38-2004
  #end
  function GetSANameSTB: string;

  #doc
  Функция возвращает должность подписывающего приказы
  #end
  function GetSAPost: string;

end;

ObjInterface IPersonsFunctions19;

  #doc
  Функция возвращает Фамилию Имя Отчество подписывающего приказы в соответствии с требованиями СТБ 6.38-2004 и настройкой UP.Staff.IfoSA
  #end
  function GetFioBossWithTune: string;

end;

ObjInterface IPersonsFunctions20;

  #doc
  Функция возвращает ссылку на карточку сотрудника, подписывающего приказы.
  #end
  function GetNRecSA: comp;

  #doc
  Функция возвращает ссылку на должность сотрудника, подписывающего приказы.
  #end
  function GetNRecSAPost: comp;
end;

ObjInterface IPersonsFunctions21;

  #doc
  Получение номера ИНН страны гражданства
  #end
  function GetUniqueTaxNumberGr(NrecPers : comp) : string;

  #doc
  Получение Кода ГНИ страны гражданства
  #end
  function GetCodeGNIGr(NrecPers : comp) : string;
end;


ObjInterface IPersonsFunctions22;

#doc
// Функция возвращает переданное как параметр ФИО в формате, заданном настройкой "Настройки Галактики \ Управление персоналом \ Расчеты с персоналом \ Отчеты \ Вывод ФИО"
#end
Public function GetStrFIO_ZAR( _sFIO : string ) : string;

end;

VipInterface PersonsFunctions
  implements IPersonsFunctions, IPersonsFunctions4, IPersonsFunctions5, IPersonsFunctions6, IPersonsFunctions7,
             IPersonsFunctions8, IPersonsFunctions9, IPersonsFunctions10, IPersonsFunctions11,
             IPersonsFunctions12, IPersonsFunctions13, IPersonsFunctions14, IPersonsFunctions15,
             IPersonsFunctions16, IPersonsFunctions17, IPersonsFunctions18, IPersonsFunctions19, IPersonsFunctions20,
             IPersonsFunctions21, IPersonsFunctions22
  Licensed (free);

VipInterface PersonEraser
  implements IPersonEraser, IPersonEraser1
  Licensed (free);

#endif
