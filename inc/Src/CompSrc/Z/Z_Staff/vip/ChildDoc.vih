/*
  ╔═════════════════════════════════════════════════════════════════════╗
  ║      Н Т О  "T O P   S O F T",  А О   "Н О В Ы Й   А Т Л А Н Т"     ║
  ║      Проект    : ГАЛАКТИКА  (с) 2000                                ║
  ║      Система   : Управление персоналом                              ║
  ║      Версия    : 5.8                                                ║
  ║      Разработал: Антонович А.К.     22/06/2001                      ║
  ║      Назначение: Функции работы с документами на детей              ║
  ║      Изменения :                                                    ║
  ╚═════════════════════════════════════════════════════════════════════╝
*/

#ifndef _ChildDoc_vih_Included
#define _ChildDoc_vih_Included

#ifdef ComponentVersion
#component "z_Staff"
#end

#doc
Функции работы с документами на детей
#end
ObjInterface ObjChildDoc;

#doc
Получить дату начала действия льготы на инвалида родственника
#end
Public function GetDateBegDocInv(PsnLinksNRec : comp) : Date;

#doc
Получить дату окончания действия льготы на инвалида родственника
#end
Public function GetDateEndDocInv(PsnLinksNRec : comp) : Date;

#doc
Установить дату начала действия льготы на инвалида родственника
#end
Public procedure SetDateBegDocInv(PsnLinksNRec : comp; DateBeg : Date);

#doc
Установить дату окончания действия льготы на инвалида родственника
#end
Public procedure SetDateEndDocInv(PsnLinksNRec : comp; DateEnd : Date);

end;

#doc
Функции работы с документами на детей
#end
ObjInterface ObjChildDoc1;

#doc
#end
function GetPsnLinksDocNum(psnLinksNrec: comp; typeDoc: word): string;

#doc
#end
function GetPsnLinksDocDate(psnLinksNrec: comp; typeDoc: word): date;

#doc
#end
procedure SetPsnLinksDocNum(psnLinksNrec: comp; DocNum: string;  typeDoc: word);

#doc
#end
procedure SetPsnLinksDocDate(psnLinksNrec: comp; DocDate: date; typeDoc: word);

end;

#doc
Функции работы с документами на детей
#end
ObjInterface ObjChildDoc2;

#doc
#end
function GetPsnLinksDocName(psnLinksNrec: comp; typeDoc: word): string;

#doc
#end
function GetPsnLinksDocDateBeg(psnLinksNrec: comp; typeDoc: word): date;

#doc
#end
function GetPsnLinksDocDateEnd(psnLinksNrec: comp; typeDoc: word): date;

#doc
#end
function GetPsnLinksDocParam(psnLinksNrec: comp; typeDoc: word; docParam: word): variant;

end;

#doc
Функции работы с документами на детей
#end

ObjInterface ObjChildDoc3;

#doc
#end
procedure ConvPsnLinksDoc(psnLinksNrec: comp);

#doc
#end
function GetPsnLinksDocNum1(psnLinksNrec: comp; typeDoc: word): string;

#doc
#end
function GetPsnLinksDocDate1(psnLinksNrec: comp; typeDoc: word): date;

end;

#doc
Функции работы с документами на детей
#end

ObjInterface ObjChildDoc4;

#doc
#end
public function IsStatusExistForPeriod(psnLinksNrec: comp; status: word; begDate: Date; endDate: Date): boolean;

#doc
#end
public function IsStatusExistYear(psnLinksNrec: comp; status: word; curYear: word): boolean;

#doc
#end
public function IsAnyStatusExistYear(psnLinksNrec: comp; curYear: word): boolean;

#doc
#end
public function IsStatusExistMonth(psnLinksNrec: comp; status: word; curMonth: word; curYear: word): boolean;

#doc
#end
public function IsAnyStatusExistMonth(psnLinksNrec: comp; curMonth: word; curYear: word): boolean;

#doc
#end
public procedure CreateStatusDepend(psnLinksNrec: comp; status: word; begDate: Date; endDate: Date);

#doc
#end
public function GetMaxStatusDate(psnLinksNrec: comp; status: word): date;

#doc
#end
public function GetMinStatusDate(psnLinksNrec: comp; status: word): date;

#doc
#end
public function IsDocExistForPeriod(psnLinksNrec: comp; typeDoc: word; begDate: Date; endDate: Date): boolean;

#doc
#end
public function IsDocExistYear(psnLinksNrec: comp; typeDoc: word; curYear: word): boolean;

#doc
#end
public function IsAnyDocExistYear(psnLinksNrec: comp; curYear: word): boolean;

#doc
#end
public function IsDocExistMonth(psnLinksNrec: comp; typeDoc: word; curMonth: word; curYear: word): boolean;

#doc
#end
public function IsAnyDocExistMonth(psnLinksNrec: comp; curMonth: word; curYear: word): boolean;

#doc
#end
public procedure CreateDocDepend(psnLinksNrec: comp; typeDoc: word; begDate: Date; endDate: Date);

#doc
#end
public procedure DelAllDocDependAndStatus(psnLinksNrec: comp);

end;

#doc
Функции работы с документами на детей
#end

ObjInterface ObjChildDoc5;

#doc
#end
procedure CreateDocForStatus(psnLinksNrec: comp);

#doc
#end
public procedure SetDocRefForStatus(psnLinksNrec: comp; typeDoc: word);

end;


#doc
Функции работы с документами на детей
#end

ObjInterface ObjChildDoc6;

#doc
#end
function GetPsnLinksDocParamBySysCode (psnLinksNrec: comp; typeDoc: word; docParam: word; SysCode : integer): variant;

end;

#doc
Функции работы с документами на детей
#end

ObjInterface ObjChildDoc7;

#doc
#end
public procedure CreateTableTmpSys_Uder;

end;

#doc
Функции работы с документами на детей расширение 8
#end

ObjInterface ObjChildDoc8;

#doc
Функция возвращает True, если уход за ребенком-инвалидом осуществляют: мать, отец, супруг матери, супруга отца, усыновитель
#end
public Function IsMainCurator(psnLinksNrec: comp) : boolean;

end;

ObjInterface ObjChildDoc9;
#doc
Функция возвращает степень родства
если TypeSource = coShtraf, то SourceNrec - Shtraf.nrec
иначе прямая ссылка PsnLinks.nrec
#end
function GetRelationDegree(SourceNrec: comp; TypeSource: word): string;

end;

ObjInterface ObjChildDoc10;

#doc
Получение указанного параметра документа родственника на дату
  _psnLinksNrec - родственник
  _typeDoc - тип документа ("Типы документов родственников", константы psnLinksDoc...)
  _docParam - параметр документа ("Параметры документа", константы psnLinksDoc...)
  _dateDoc - дата, на которую необходимо получить актуальное значение параметра
#end
function GetPsnLinksDocParamByDate(_psnLinksNrec: comp; _typeDoc: word; _docParam: word; _dateDoc: date): variant;

end;

//------------------------------------------------------------------------------
VipInterface ChildDocFunc implements ObjChildDoc,  ObjChildDoc1, ObjChildDoc2, ObjChildDoc3, ObjChildDoc4,
                                     ObjChildDoc5, ObjChildDoc6, ObjChildDoc7, ObjChildDoc8, ObjChildDoc9,
                                     ObjChildDoc10
#ifdef ATL51
Licensed (free)
#end
;
#endif
