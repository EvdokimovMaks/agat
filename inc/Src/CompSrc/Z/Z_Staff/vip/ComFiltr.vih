//------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Галактика ERP 8.10 - Управление персоналом
// Фильтр по сотрудникам и подразделениям (используется и как встраиваемый)
//------------------------------------------------------------------------------

#ifndef _ComFiltr_INCLUDED_
#define _ComFiltr_INCLUDED_

#component "Z_Staff"

#doc
Объектный интерфейс с процедурами для фильтра по сотрудникам/подразделениям
#end
ObjInterface ICommonFiltr;

  #doc
  Запускаем cmInit Интерфейса
  #end
  procedure ObjInit;

  #doc
  Запуск интерфейса выбора подразделений с набивкой соответствующего маркера DeptMarker
  #end
  procedure SelectPodr;

  #doc
  Запуск интерфейса выбора сотрудников с набивкой соответствующего маркера PsnMarker
  #end
  procedure SelectPsn;

  #doc
  Процедура выравнивания маркеров согласно установленным фильтрам. Актуальна перед
  запуском отчетов или загрузки\переформирования какого-то интерфейса. Собственно,
  как правило, она и так запускается :). Но можно ручками из интерфейса-владельца
  экземпляра объекта
  #end
  procedure EndSelect;

  #doc
  Набивка временной таблицы сотрудников на основании таблицы персонс и выбранных
  ограничений: 'работающие', 'текущие', 'архив', 'вся картотека'
  #end
  procedure InitTmpTable;

  #doc
  Процедура закрытия отката\закрытия. Сохранение части маркеров и т.п. Не актуальна,
  скорее всего, для внешнего использования.
  #end
  procedure IntClose(Flag : boolean);

  #doc
  Процедура наполнения маркеров по подразделениям и сотрудникам в том случае, если
  в реальности их не настраивали, а надо собственно подтянуть всех, кто есть.
  #end
  procedure SelectAllPsn;

  #doc
  Очистка фильтра по подразделениям
  #end
  procedure ClearDepartmentsFilter;

  #doc
  Очистка маркера по персонам
  #end
  procedure ClearPersonsFilter;

  #doc
  Получить ссылку на маркер по подразделениям
  #end
  function GetDepartmentsMarker: TPtr;

  #doc
  Получить ссылку на маркер по сотрудникам
  #end
  function GetPersonsMarker: TPtr;

  #doc
  Получить выбранное подразделение. Работает корректно только для случаев одиночного
  выбора подразделений, в противном возвращает просто первый элемент маркера
  #end
  function GetMarkedDepartment: comp;

  #doc
  Получить выбранного сотрудника. Работает корректно только для случаев одиночного
  выбора сотрудников, в противном возвращает просто первый элемент маркера
  #end
  function GetMarkedPerson: comp;

  #doc
  Получить строковое значение установленного фильтра по подразделениям, например: 'не установлен'
  #end
  function GetDepartmentsFilterStr: string;

  #doc
  Получить строковое значение установленного фильтра по сотрудникам, например: 'не установлен'
  #end
  function GetPersonsFilterStr: string;

  #doc
  Получить значение установленного ограничения на Персонс:
  0 - 'работающие',
  1 - 'текущие',
  2 - 'архив'
  3 - 'вся картотека'
  #end
  function GetPersonsState: word;

  #doc
  Переформировать временную таблицу для заданного другого ограничения на Персонс
  0 - 'работающие',
  1 - 'текущие',
  2 - 'архив'
  3 - 'вся картотека'
  #end
  procedure SetPersonsState(NewState: word);

  #doc
  Открыты ли дополнительные фильтры (характер работы, перевод в филиал).
  1 - если установлен хоть какой-нибудь фильтр
  #end
  function GetAFltState: word;

  #doc
  Открыть/закрыть дополнительные фильтра
  #end
  procedure SetAFltState(NewState: word);

  #doc
  То же самое, что GetAFltState. Просто на будущее
  #end
  function GetPFltState: word;

  #doc
  То же самое, что SetAFltState. Просто на будущее
  #end
  procedure SetPFltState(NewState: word);

  #doc
  Получить количество записей в маркере по подразделениям
  #end
  function GetDeptCount: LongInt;

  #doc
  Получить количество записей в маркере по сотрудникам
  #end
  function GetPsnCount: LongInt;

  #doc
  Сохранить настройки фильтрации
  #end
  procedure StoreAllParams;

end;

#doc
Расширение №1 интерфейса ICommonFiltr
#end
ObjInterface ICommonFiltr2;

  #doc
  Процедура добавления значения в маркер по заданным параметрам и перечитка маркера
  #end
  procedure SetAndRefresh(cValue: comp; wKindMarker: word);

end;

#doc
Расширение №2 интерфейса ICommonFiltr
#end
ObjInterface ICommonFiltr3;

  #doc
  Установка контекста справочника
  #end
  procedure SetHelpContext(sHelpCtx: string);

end;

#doc
Расширение №3 интерфейса ICommonFiltr
#end
private objInterface ICommonFiltr4;

  #doc
  Процедура (событие) обновления списка сотрудников в маркере фильтра
  #end
  event procedure OnUpdatePsnMarker;


  #doc
  Получить ссылку на маркер по сотрудникам без учета флага
  Данный маркер остается наполненным сотрудниками по текущим условиям даже при снятом флаге фильтра по сотрудникам
  #end
  function GetPersonsWOFlagMarker: TPtr;


  #doc
  Получить количество записей в маркере по сотрудникам без учета флага
  Данный маркер остается наполненным сотрудниками по текущим условиям даже при снятом флаге фильтра по сотрудникам
  #end
  function GetPsnWOFlagCount: LongInt;
end;

VipInterface CommonFiltr
  implements ICommonFiltr, ICommonFiltr2, ICommonFiltr3, ICommonFiltr4
  licensed(free);

#end
