//------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Галактика 9.1 - Управление персоналом
// Объект фактических отпусков
//------------------------------------------------------------------------------

#ifndef _FactVacation_vih_Included
#define _FactVacation_vih_Included

#ifdef ComponentVersion
#component "z_Staff"
#end

#doc
#end
objinterface oIFactVacation;

#doc
 Функция подсчета дней отпуска, полагающихся но не предоставленных </br>
</br>
 параметры: </br>
  cParam_PutVac   - ссылка на полагающийся отпуск </br>
  cParam_Vacation - nRec текущего отпуска </br>
</br>
 возвращаемое значение: </br>
  количество дней отпуска, полагающихся но не предоставленных
#end
function funGetBalanceVac(cParam_PutVac, cParam_Vacation: comp; dParam_Date: date): double;


#doc
  Функция расчета полагающихся дней отпуска за определенный период </br>
</br>
  параметры: </br>
    dBeg - дата начала расчетного периода </br>
    dEnd - дата окончания расчетного периода </br>
    cPerson - nRec человека </br>
    cKlOtpusk - nRec классификатора отпусков
#end
public function funGetDayProportion(dBeg, dEnd : date; cPerson, cKlOtpusk, cParam_Vacation : comp) : double;

#doc
 Функция получения ссылки на лицевой счет из текущей записи FactOtpusk </br>
 возвращаемое значение: </br>
  nRec лицевого счета.
#end
public function funGetFactLSchet: comp;

#doc
 Функция определения наличия пакета отпусков для сотрудника </br>
</br>
 параметры: </br>
  cPar_Person - nRec сотрудника, для которого определяется наличие пакета отпусков </br>
</br>
 возвращаемое значение: </br>
  true  - отпуск найден </br>
  false - не найдено пакета отпусков для сотрудника
#end
function funIsValidFact(cPar_Person: comp): boolean;

#doc
 Функция определения наличия отпуска у сотрудника </br>
</br>
 параметры: </br>
  cPar_Person - nRec сотрудника, для которого определяется наличие отпусков </br>
</br>
 возвращаемое значение: </br>
  true  - отпуск найден </br>
  false - не найдено отпуска для сотрудника
#end
function funIsValidVac(cPar_Person: comp): boolean;

#doc
 Функция выбора фактического отпуска для сотрудника </br>
</br>
 параметры: </br>
  cParam_Person   - ссылка на сотрудника </br>
  cParam_Vac      - для позиционирования при запуске (ссылка на отпуск Otpusk) </br>
</br>
 возвращаемое значение: </br>
  ссылка на отпуск Otpusk
#end
function funGetVacation (cParam_Person, cParam_Vac: comp): comp;

#doc
 Процедура передачи параметров в интерфейс </br>
</br>
 параметры: </br>
  cSetPersonNrec  - nRec сотрудника </br>
  cSetAppointNrec - nRec назначения сотрудника
#end
procedure prSetParam(cSetPersonNrec, cSetAppointNrec: comp);

#doc
 Процедура позиционирования на соответствующий ПЛАНУ-ГРАФИКУ факт </br>
</br>
 параметры: </br>
   cParam_PlanOtp            - nRec планового отпуска (PlanOtpusk) </br>
   cParam_Person             - nRec сотрудника </br>
   wVisibleFactParam, </br>
   wVisibleCompensationParam - параметры фильтра
#end
public procedure prSetPosition(cParam_PlanOtp, cParam_Person: comp; wVisibleFactParam, wVisibleCompensationParam: word);

#doc
 Печать отчета о неиспользованных днях отпуска на дату </br>
</br>
 параметры: </br>
   liParam_Marker - уникальный идентификатор маркера </br>
   cParam_Person  - сотрудник для которого происходит расчет </br>
   cParam_Appoint - назначение сотрудника для которого происходит расчет </br>
   dParam_Date    - дата на которую рассчитываются неиспользованные отпуска
#end
public procedure prPrintNoProvide(liParam_Marker: TPtr; cParam_Person, cParam_Appoint: comp; dParam_Date: date);

#doc
 Выводит на экран окно для выбора даты </br>
</br>
 возвращаемое значение: </br>
   выбранная дата
#end
public function funGetDate: date;

#doc
Пересчитывает остаток отпуска в следующем рабочем периоде при предоставлении дополнительных дней отпуска в текущем </br>
</br>
cPar_PutVacNrec - текущий предоставленный отпуск </br>
dNewDayCount - количество предоставленных дней в приказе </br>
bConfirm - признак, проверять или пересчитывать остаток отпуска
#end
public function funCalcNextRemaind(cPar_PutVacNrec: comp; dNewDayCount: double; bConfirm : boolean): boolean;

#doc
Пересчитывает остаток отпуска в следующем рабочем периоде при удалении приказа в текущем </br>
</br>
cPar_PutVacNrec - текущий предоставленный отпуск </br>
dNewDayCount - количество предоставленных дней в приказе
#end
public procedure prBalanceDel(cPar_PutVacNrec: comp; dNewDayCount: word);

#doc
Подсчитывает количество дней на дату предоставления отпуска с признаком "пропорционально за ВУТ" </br>
</br>
  параметры: </br>
    cParam_PutVac - ссылка на полагающийся отпуск </br>
    dParamDateEnd - дата на которую определяется количество дней к предоставлению </br>
    var dResult   - возвращаемый параметр - рассчитанное по пропорции количество дней </br>
</br>
  возвращаемое значение: </br>
    true  - в случае, когда полагающийся отпуск имеет способ предоставления "пропорционально за ВУТ" </br>
    false - способ предоставления полагающегося отпуска НЕ "пропорционально за ВУТ" </br>
   (var dResult   - возвращаемый параметр - рассчитанное по пропорции количество дней)

#end
public function funGetDaysHarmVac(cParam_PutVac: comp; dParamDateEnd: date; var dResult: double): boolean;

end;

#doc
Расширение объектного интерфеса для работы с фактическими отпусками
#end
objinterface oIFactVacation2;

#doc
 Функция выбора фактического отпуска для сотрудника по назначению </br>
</br>
 параметры: </br>
  cParam_Person   - ссылка на сотрудника </br>
  cParam_Vac      - для позиционирования при запуске (ссылка на отпуск Otpusk) </br>
  cParam_App      - ссылка на назначение (необязательный параметр со значением по умолчанию 0 - выбирать
                    отпуска независимо от назначения) </br>
</br>
 возвращаемое значение: </br>
  ссылка на отпуск Otpusk
#end
function funGetVacationByApp (cParam_Person, cParam_Vac: comp; cParam_App: comp = 0): comp;

end;

#doc
Расширение объектного интерфеса для работы с фактическими отпусками
#end
objinterface oIFactVacation3;

#doc
 Функция выбора отпуска по уходу за ребенком для сотрудника по назначению </br>
</br>
 параметры: </br>
  cParam_Person   - ссылка на сотрудника </br>
  cParam_Vac      - для позиционирования при запуске (ссылка на отпуск Vacation) </br>
  cParam_App      - ссылка на назначение (необязательный параметр со значением по умолчанию 0 - выбирать </br>
                    отпуска независимо от назначения) </br>
</br>
 возвращаемое значение: </br>
  ссылка на отпуск Vacation
#end
function funGetDecrVacationByApp(cParam_Person, cParam_Vac: comp; cParam_App: comp = 0): comp;

end;

#doc
Расширение объектного интерфеса для работы с фактическими отпусками
#end
objinterface oIFactVacation4;

#doc
  Функция расчета полагающихся дней отпуска за определенный период </br>
</br>
  параметры: </br>
    dBeg - дата начала расчетного периода </br>
    dEnd - дата окончания расчетного периода </br>
    cAppoint - nRec назначения человека </br>
    cKlOtpusk - nRec классификатора отпусков
#end
public function funGetDayProportionCur(dBeg, dEnd : date; cPutVacation, cParam_Vacation : comp) : double;

end;

#doc
Расширение объектного интерфейса для работы с интерфейсом выбора пакета отпусков при отзыве
#end
objinterface oIFactVacation5;

#doc
 Функция выбора отпуска для сотрудника по назначению </br>
</br>
 параметры: </br>
  cParam_Person   - ссылка на сотрудника </br>
  cParam_Vac      - для позиционирования при запуске (ссылка на отпуск Otpusk) </br>
  bPackage        - определяет, выбран пакет либо конкретный отпуск(возвращаемый параметр) </br>
  cParam_App      - ссылка на назначение (необязательный параметр со значением по умолчанию 0 - выбирать
                    отпуска независимо от назначения) </br>
</br>
 возвращаемое значение: </br>
  ссылка на отпуск Otpusk
#end
function funGetVacationByAppType (cParam_Person, cParam_Vac: comp; var bPackage: boolean; cParam_App: comp = 0): comp;


#doc
 Функция выбора фактического отпуска для сотрудника </br>
</br>
 параметры: </br>
  cParam_Person   - ссылка на сотрудника </br>
  cParam_Vac      - для позиционирования при запуске (ссылка на отпуск Otpusk) </br>
  bPackage        - определяет, выбран пакет либо конкретный отпуск </br>
</br>
 возвращаемое значение: </br>
  ссылка на отпуск Otpusk
#end
function funGetVacationType (cParam_Person, cParam_Vac: comp; var bPackage: boolean): comp;

end;

#doc
Расширение объектного интерфейса для работы с интерфейсом выбора пакета отпусков при отзыве
#end
objinterface oIFactVacation6;

#doc
установка/снятие протекта
#end
procedure SetProtect(isProtect : boolean = True);

end;

#doc
Расширение объектного интерфейса для работы с интерфейсом выбора пакета отпусков при отзыве
#end
objinterface oIFactVacation7;

#doc
установка/снятие протекта
#end
procedure SetTypeVac(wTypeVac : word);

end;

#doc
Расширение объектного интерфейса для работы с фактическими отпусками
#end
objinterface oIFactVacation8;

#doc
функция, проверяющая наличие у заданного сотрудника отпуска, пересекающиегося с указанным периодом
#end
function FindOtpuskInPeriodForPers(cPerson : comp; dBegP, dEndP:date): boolean;

end;

#doc
Расширение объектного интерфейса для работы с фактическими отпусками
#end
objinterface oIFactVacation9;

#doc
функция, проверяющая наличие отпусков (кроме компенсаций) по заданному лицевому счету в указанном периоде.</brief>

<p>Функция не учитывает компенсации, т.к. пересечение с отпусками такого типа допустимо.</p>
<p>В том случае, если в качестве _bLog передано true, формирует протокол о пересечениях вида:</p>
<p>_sPrefix + 'пересечение с отпуском %НазваниеОтпуска (с %ДатаНачалаОтпуска по %ДатаОкончанияОтпуска)'</p>
#end
function FindOtpuskInPeriodForLsch(_cLsch: comp; _dBeg, _dEnd: date; _bLog: boolean = false; _sPrefix: string = ''): boolean;

end;

#doc
Расширение объектного интерфеса для работы с фактическими отпусками
#end
objinterface oIFactVacation10;

#doc
Подсчитывает количество дней на дату предоставления отпуска с признаком "пропорционально за ВУТ" </br>
</br>
  параметры: </br>
    cParam_PutVac - ссылка на полагающийся отпуск </br>
    cParam_GetVac - ссылка на текущий предоставленный фактический отпуск </br>
                    отпуск исключается из расчета </br>
    dParamDateEnd - дата на которую определяется количество дней к предоставлению </br>
    var dResult   - возвращаемый параметр - рассчитанное по пропорции количество дней </br>
    bIsOutInf     - если = true, то выводить информацию о расчете, иначе - не выводить </br>
</br>
  возвращаемое значение: </br>
    true  - в случае, когда полагающийся отпуск имеет способ предоставления "пропорционально за ВУТ" </br>
    false - способ предоставления полагающегося отпуска НЕ "пропорционально за ВУТ" </br>
   (var dResult   - возвращаемый параметр - рассчитанное по пропорции количество дней)

#end
public function funGetDaysHarmVacWithInfParam(cParam_PutVac, cParam_GetVac: comp; dParamDateEnd: date; var dResult: double; bIsOutInf: boolean): boolean;

end;

#doc
Расширение объектного интерфейса для работы с фактическими отпусками
#end
objinterface oIFactVacation11;

#doc
Расчет количества фактически выданных дней по полагающемуся отпуску
#end
public function GetDurationFactVacation(cParam_PutVac, cParam_Vacation: comp; dParam_Date: date; var liVacMarker : TPtr): double;

#doc
Заполнение поля "Из дней" для приказов РПД-6 и РПД-41, а также для проверки в компенсациях при увольнении
#end
public function funGetDayCountIz(cPutVac : comp; wPrWay : word; dWPBeg, dWPEnd, dRasch : date) : integer;

end;

#doc
Расширение объектного интерфейса для работы с фактичкскими отпусками
#end
objinterface oIFacVacation12;

  #doc
  Поиск фактического отпуска у которого количество дней больше или равно значению настройки "Продолжительность части отпуска"
  #end
  public function Search14Day(cPWP : comp): boolean;

  #doc
  функция проверяет корректность добавленных в "пакет отпусков" отпусков.
  #end
  public function TryClose: boolean;

end;

#doc
Расширение объектного интерфейса для работы с фактическими отпусками
#end
objinterface oIFactVacation13;
  #doc
  функция для расчета остатка: полагающееся - только текущий факт
  #end
  public function funGetUpperBalanceVac(cParam_PutVac, cParam_Vacation: comp; dParam_Date: date): double;
end;

#doc
Расширение объектного интерфейса для работы с фактическими отпусками
#end
objinterface oIFactVacation14;
  #doc
  Получить дату начала пакета отпусков по ссылке на конкретный отпуск (<code>Vacations.NRec</code>).
  #end
  public function GetFactBegByVacation(_cVacation: comp): date;

  #doc
  Получить дату окончания пакета отпусков по ссылке на конкретный отпуск (<code>Vacations.NRec</code>).
  #end
  public function GetFactEndByVacation(_cVacation: comp): date;
end;

#doc
Расширение объектного интерфейса для работы с фактическими отпусками
#end
objinterface oIFactVacation15;
#doc
Функция расчета полагающихся дней отпуска за определенный период </br>
</br>
  параметры: </br>
  dBeg            - дата начала расчетного периода </br>
  dEnd            - дата окончания расчетного периода </br>
  cParam_PutVac   - ссылка на полагающийся отпуск </br>
  cParam_Vacation - nRec текущего отпуска </br>
  wFlag           - флаг обработки: 0 - учет всех факт. отпусков, 1 - учет факт. отпусков до dEnd </br>
#end
  public function funGetDayProportionWithFlag(dBeg, dEnd : date; cPutVacation, cParam_Vacation: comp; wFlag : word) : double;
end;

#doc
расгирение объектного интерфейса для работы с фактическими отпусками
#end
objinterface oIFactVacation16;
  #doc
    Возвращает ссылку на рабочиий период, если PutVacation.wTypeVac = 1 (это остаток) или = 2 (отпуск учетного периода),
    то ссылка на РП = PutVacation.cWPRemain, иначе (= 0) - ссылка на РП = PutVacation.cWorkPeriod. . Если параметр wMode = 1
    то если ссылка на рабочий период, за который остаток, пуста, то возвращает ссылку на рабочий период в котором этот остаток заведен
  #end
  function GetWP4MatAid(cVacations:comp; wMode: word = 0): comp;

end;

vipinterface iFactVacation implements oIFactVacation, oIFactVacation2, oIFactVacation3, oIFactVacation4, 
                                      oIFactVacation5, oIFactVacation6, oIFactVacation7, oIFactVacation8,
                                      oIFactVacation9, oIFactVacation10, oIFactVacation11, oIFacVacation12,
                                      oIFactVacation13, oIFactVacation14, oIFactVacation15, oIFactVacation16
#ifdef ATL51
Licensed (free)
parameters (cPersNrec, cAppNRec: comp; wMode: word)
#end
;

#endif
