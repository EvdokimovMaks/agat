//------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Галактика 5.8 - Общая функциональность контура "Управление персоналом"
// Объектный интерфейс "Функции работы с сущностью - Назначения"
//------------------------------------------------------------------------------

#ifndef _AppFuncs_vih_Included
#define _AppFuncs_vih_Included

#ifdef ComponentVersion
  #component "z_Staff"
#end
#ifdef ComponentVersionInDict
  #include iAppHist.vih
  public type TAppHist = record as table AppHist;
  #define TAppHist TAppHist
#else
  #define TAppHist type$AppHist
#end

#doc
Объектный интерфейс "Функции работы с сущностью - Назначения"
#end
objinterface IAppointmentsFunctions;

#doc
ссылка на назначение сотрудника на указанную дату
#end
function GetAppNrec_OnDate(PersNrec : comp; funcDate : date) : comp;

#doc
Отношение к штаному расписанию указанного назначения
#end
function GetRelForShr(AppNrec : comp) : string;

#doc
Получить работы с назначением, если она указана. Для отчетов...
#end
function GetDateEndApp(AppNrec : comp) : date;

#doc
Получить nrec (Catalogs) дополнительной характеристики
из назначения для л/с на указанную дату
#end
function GetAddCharacteristic(PersNrec : comp; LshetNrec : comp; NeedDate : date) : comp;

#doc
Получить Nrec первого назначения сотрудника
#end
function GetFirstAppNrec(PersNrec : comp) : comp;

#doc
Получить Nrec последней записи истории для данного назначения
#end
function GetLastAppHistNrec (AppNrec : comp) : comp;

#doc
Получить дату последней записи истории для данного назначения
#end
function GetLastAppHistDate (AppNrec : comp) : date;

//------------------------------------------------------------------------------
//Данные из истории назначений для указанного назначения на дату

#doc
Получить систему оплаты
#end
function GetSisOplAppHist(AppNrec : comp; funcDate : date): string;

#doc
Получить оклад/ставка
#end
function GetTaxRateAppHist(AppNrec : comp; funcDate : date): double;

#doc
Получить вид валюты
#end
function GetVidValAppHist(AppNrec : comp; funcDate : date): string;

#doc
Получить значение корректирующего коэффициента
#end
function GetCorrectKoffAppHist(AppNrec : comp; funcDate : date): double;

#doc
Получить наименование тарифа
#end
function GetTarifAppHist(AppNrec : comp; funcDate : date): string;

#doc
Получить разряд
#end
function GetCategAppHist(AppNrec : comp; funcDate : date): longint;

#doc
Получить режим работы
#end
function GetKLRejimAppHist(AppNrec : comp; funcDate : date): string;
end;

#doc
#end
objinterface IAppointmentsFunctions4;

#doc
Получить условия труда
#end
function GetWorkCondAppHist(AppNrec : comp; funcDate : date): string;

#doc
Получить Характер работы
#end
function GetCharacterAppHist(AppNrec : comp; funcDate : date): string;

#doc
Получить Buffer записи AppHist
#end
function GetBufferAppHist(AppNrec : comp; funcDate : date): #TAppHist;
end;

#doc
#end
objinterface IAppointmentsFunctions5;

#doc
Получить режим работы
#end
function wKLRejimAppHist(AppNrec : comp; funcDate : date): word;
end;

// -----------------------------------------------------------------------------
#doc
#end
objinterface IAppointmentsFunctions7;

#doc
функиция возврата на предыдущее назначение</brief>
Параметры:
cCurApp -- текущее назначение
cOldApp -- назначение на которое возвращаем
isRK    -- формировать ли запись в РК (1 - да, иначе - нет)
Результат: что получилось в результате выполнения данной функции
#end
function ReturnPreviousAppoint(cCurApp, cOldApp: comp; isRK: boolean): string;

end;

#doc
#end
objinterface IAppointmentsFunctions8;

#doc
ссылка на назначение сотрудника на указанную дату с учетом повторного приема, т.е. обходя
и назначения с признаком 100.
#end
function GetOldAppNrec_OnDate(PersNrec: comp; funcDate: date): comp;

end;

#doc
#end
objinterface IAppointmentsFunctions9;

#doc
ссылка на назначение сотрудника на указанную дату с учетом признака назначения, а именно
// Типы назначений Appointments.lPrizn
//  0 - основное назначение
//  2 - замещение
//  3 - совмещение
//  100 - предыдущих мест работы
#end
function GetAllAppNrec_OnDate(PersNrec: comp; funcDate: date; iPr: integer): comp;

end;

#doc
#end
objinterface IAppointmentsFunctions10;

#doc
Количество ставок у сотрудника на указанную дату
#end
public function GetNumStav_OnDate(PersNrec: comp; funcDate: date): double;

end;

#doc
#end
objinterface IAppointmentsFunctions11;

#doc
Наполнение записи таблицы Appointments данными из другой записи Appointments,  </br>
если наполнение проведено успешно возвращает значение True, иначе False </br>
Параметры:</br>
  FromNRec - ссылка на запись таблицы Appointments из которой будем переносить данные </br>
  ToNRec - ссылка на запись таблицы Appointments в которую будем переносить данные </br>
  BegDate - дата за которую нужно подтянуть актуальную историю назначения
#end
public function FillAppFromApp(FromNRec, ToNRec: comp; BegDate: date): boolean;

#doc
Наполнение записи таблицы Appointments данными из StaffStruct,  </br>
если наполнение проведено успешно возвращает значение True, иначе False </br>
Параметры:</br>
  AppNRec - ссылка на запись таблицы Appointments в которую будем переносить данные </br>
  SStructNrec - ссылка на запись таблицы StaffStruct из которой будем переносить данные </br>
  BegDate - дата за которую нужно подтянуть историю ШР
#end
public function FillAppFromStaffStr(AppNRec, SStructNrec: comp; BegDate: date): boolean;

end;

#doc
#end
objinterface IAppointmentsFunctions12;

#doc
Определение совместительства последнего в цепочке переводов по совместительствам
#end
public function GetLastSovmInChain(cAppoint :comp): comp;

#doc
Определение совместительства первого в цепочке переводов по совместительствам
#end
public function GetFirstSovmInChain(cAppoint :comp): comp;

#doc
Удаление назначения и всей связанной с ним информации
#end
public function DelAppointWithAllInfo(cAppoint: comp; wFlag: word): word;
end;

#doc
#end
objinterface IAppointmentsFunctions13;

#doc
ссылка на назначение сотрудника содержащее указанную дату с учетом признака назначения, а именно
// Типы назначений Appointments.lPrizn (для основных и предыдущих не особо имеет смысл, т.к. они должны идти последовательно)
//  0   - основное назначение
//  2   - замещение
//  3   - совмещение
//  70  - временные переводы
//  100 - предыдущих мест работы
#end
public function GetAllAppNRec_IncludeDate(PersNRec: comp; FuncDate: date; iPr: integer): comp;

end;

objinterface IAppointmentsFunctions14;

#doc
Функция проверяет, существует ли привязанная к карточке с кодом <code>_cPsn</code>
запись о предыдущей трудовой деятельности, соответствующая назначению с кодом <code>_cApp</code>.
#end
public function ExperienceExists(_cPsn, _cApp: comp): boolean;

end;

objinterface IAppointmentsFunctions15;

#doc
<p>Функция создает копию назначения с кодом <code>_cApp</code> и возвращает его <code>NRec</code>.</p>
<p>После вставки записи и ее редактирования используйте метод <link function Z_STAFF::IFromAppointToAppHist.NewHist>IFromAppointToAppHist.NewHist</link>
   для добавления к назначению первой записи истории.</p>
#end
public function InsertCopy(_cApp: comp): comp;

end;

objinterface IAppointmentsFunctions16;

#doc
Функция возвращает наименование должности для назначения
#end
public function GetAppPost(_cApp: comp): string;

end;

// -----------------------------------------------------------------------------

vipinterface AppointmentsFunctions implements IAppointmentsFunctions, IAppointmentsFunctions4,
                                              IAppointmentsFunctions5, IAppointmentsFunctions7,
                                              IAppointmentsFunctions8, IAppointmentsFunctions9,
                                              IAppointmentsFunctions10, IAppointmentsFunctions11,
                                              IAppointmentsFunctions12, IAppointmentsFunctions13,
                                              IAppointmentsFunctions14, IAppointmentsFunctions15,
                                              IAppointmentsFunctions16
#ifdef ATL51
Licensed (free)
#end
;

#endif
