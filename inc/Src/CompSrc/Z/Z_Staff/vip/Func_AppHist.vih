//******************************************************************************
//                                                      (с) корпорация Галактика
// Галактика 7.12 - Управление персоналом
// Декларация методов для работы с историей назначения
//******************************************************************************

#ifndef _Func_AppHist_INCLUDED_
#define _Func_AppHist_INCLUDED_

#ifdef ComponentVersion
  #component "z_Staff"
#end

#ifdef ComponentVersionInDict
  #include iAppHist.vih
  public type TAppHist = record as table AppHist;
  #define TAppHist TAppHist
#else
  #define TAppHist type$AppHist
#end

const
//AH_TaxRate      = 0000000000000001b;  //оклад
//AH_PayModel     = 0000000000000010b;  //система оплаты
//AH_Category     = 0000000000000100b;  //разряд
//AH_PayCurrency  = 0000000000001000b;  //вид валюты
//AH_CorrCoeff    = 0000000000010000b;  //СКК
//AH_Rate         = 0000000000100000b;  //количество ставок
  AH_IF           = 0000000001000000b;  //источники финансирования
  AH_Tariff       = 0000000011111111b;  //тарифна (на данный момент означает изменени и вышестоящих параметров)
  AH_WorkRegime   = 0000000100000000b;  //режим работы
  AH_QualCategory = 0000001000000000b;  //квалификационный разряд/категория
  AH_Advises      = 0000010000000000b;  //КПС
  AH_JobNature    = 0000100000000000b;  //характер работы
  AH_WorkCond     = 0001000000000000b;  //условия работы
  AH_EmpCategory  = 0010000000000000b;  //категория (рабочие, случащие и т.п.)
  AH_Department   = 0100000000000000b;  //подразделение
  AH_Post         = 1000000000000000b;  //должность
end;

objinterface IFunc_AppHist;

// *****************************************************************************
#doc
Функция получения буфера записи истории назначения на указанную дату. </br>
Параметры: </br>
  cCurAppoint - NRec назначения </br>
  dViewDate   - дата, на которую необходимо получить данные </br>
#end
function AH_ViewStateOnDate(cCurAppoint: comp; dViewDate: Date): #TAppHist;
// *****************************************************************************
#doc
Получение NRec -а записи из которой взято значение. </br>
Параметры: </br>
  cCurAppoint - NRec назначения </br>
  dViewDate   - дата, на которую необходимо получить данные </br>
#end
function AH_GetAppHistNrecOnDate(cCurAppoint: comp; dViewDate: Date): comp;
// *****************************************************************************
#doc
Получение "даты начала" записи на которую спозиционировались на указанную дату. </br>
Параметры: </br>
  cCurAppoint - NRec назначения </br>
  dViewDate   - дата, на которую необходимо получить данные </br>
#end
function AH_GetAppHistDRecOnDate(cCurAppoint: comp; dViewDate: Date): date;
// *****************************************************************************
#doc
Получение "даты окончания" записи на которую спозиционировались на указанную дату. </br>
Параметры: </br>
  cCurAppoint - NRec назначения </br>
  dViewDate   - дата, на которую необходимо получить данные </br>
#end
function AH_GetAppHistDEndOnDate(cCurAppoint: comp; dViewDate: Date): date;
// *****************************************************************************
#doc
Функция получения ссылки на режим работы. </br>
Параметры: </br>
  cCurAppoint - NRec назначения </br>
  dViewDate   - дата, на которую необходимо получить данные </br>
#end
function AH_GetRegimOnDate(cCurAppoint: comp; dViewDate: Date): comp;
// *****************************************************************************
#doc
Получение ссылки на режим работы на указанную дату. </br>
Параметры: </br>
  cCurAppoint - NRec назначения </br>
  dViewDate   - дата, на которую необходимо получить данные </br>
#end
function AH_GetNRecRegimOnDate(cCurAppoint: comp; dViewDate: Date): word;
// *****************************************************************************
#doc
Получение режима работы (строкой) на указанную дату. </br>
Параметры: </br>
  cCurAppoint - NRec назначения </br>
  dViewDate   - дата, на которую необходимо получить данные </br>
#end
function AH_GetStrRegimOnDate(cCurAppoint: comp; dViewDate: Date): string;
// *****************************************************************************
#doc
Получение значения оклада на указанную дату. Возвращается double. </br>
Параметры: </br>
  cCurAppoint - NRec назначения </br>
  dViewDate   - дата, на которую необходимо получить данные </br>
#end
function AH_GetTaxRateOnDate(cCurAppoint: comp; dViewDate: Date): double;
// *****************************************************************************
#doc
Получение значения оклада (строкой) на указанную дату. </br>
Параметры: </br>
  cCurAppoint - NRec назначения </br>
  dViewDate   - дата, на которую необходимо получить данные </br>
#end
function AH_GetStrTaxRateOnDate(cCurAppoint: comp; dViewDate: Date): string;
// *****************************************************************************
#doc
Функция получения ссылки на тарифную сетку на указанную дату. </br>
Параметры: </br>
  cCurAppoint - NRec назначения </br>
  dViewDate   - дата, на которую необходимо получить данные </br>
#end
function AH_GetTariffOnDate(cCurAppoint: comp; dViewDate: Date): comp;
// *****************************************************************************
#doc
Функция получения наименования тарифа на указанную дату. </br>
Параметры: </br>
  cCurAppoint - NRec назначения </br>
  dViewDate   - дата, на которую необходимо получить данные </br>
#end
function AH_GetStrTariffOnDate(cCurAppoint: comp; dViewDate: Date): string;
// *****************************************************************************
#doc
Получение "системы оплаты" на указанную дату. </br>
Параметры: </br>
  cCurAppoint - NRec назначения </br>
  dViewDate   - дата, на которую необходимо получить данные </br>
#end
function AH_GetPayModelOnDate(cCurAppoint: comp; dViewDate: Date): word;
// *****************************************************************************
#doc
Функция получения формы оплаты труда на указанную дату. </br>
Параметры: </br>
  cCurAppoint - NRec назначения </br>
  dViewDate   - дата, на которую необходимо получить данные </br>
#end
function AH_GetStrSisOplOnDate(cCurAppoint: comp; dViewDate: Date): string;
// *****************************************************************************
#doc
Получение "разряда" на указанную дату. </br>
Параметры: </br>
  cCurAppoint - NRec назначения </br>
  dViewDate   - дата, на которую необходимо получить данные </br>
#end
function AH_GetCategoryOnDate(cCurAppoint: comp; dViewDate: Date): word;
// *****************************************************************************
#doc
Получение "сетки" на указанную дату. </br>
Параметры: </br>
  cCurAppoint - NRec назначения </br>
  dViewDate   - дата, на которую необходимо получить данные </br>
#end
function AH_GetCodTarOnDate(cCurAppoint: comp; dViewDate: Date): word;
// *****************************************************************************
#doc
Получение "даты тарифной сетки". </br>
Параметры: </br>
  cCurAppoint - NRec назначения </br>
  dViewDate   - дата, на которую необходимо получить данные </br>
#end
function AH_GetDateTariffOnDate(cCurAppoint: comp; dViewDate: Date): date;
// *****************************************************************************
#doc
Функция получения значения корректирующего коэффициента на указанную дату. </br>
Параметры: </br>
  cCurAppoint - NRec назначения </br>
  dViewDate   - дата, на которую необходимо получить данные </br>
#end
function AH_GetKorKoeffOnDate(cCurAppoint: comp; dViewDate: Date): double;
// *****************************************************************************
#doc
Функция получения значения корректирующего коэффициента(строкой) на указанную дату. </br>
Параметры: </br>
  cCurAppoint - NRec назначения </br>
  dViewDate   - дата, на которую необходимо получить данные </br>
#end
function AH_GetStrKorKoeffOnDate(cCurAppoint: comp; dViewDate: Date): string;
// *****************************************************************************
#doc
Функция получения ссылки на валюту оплаты. </br>
Параметры: </br>
  cCurAppoint - NRec назначения </br>
  dViewDate   - дата, на которую необходимо получить данные </br>
#end
function AH_GetNrecCurrencyOnDate(cCurAppoint: comp; dViewDate: Date): comp;
// *****************************************************************************
#doc
Функция получения валюты оплаты. </br>
Параметры: </br>
  cCurAppoint - NRec назначения </br>
  dViewDate   - дата, на которую необходимо получить данные </br>
#end
function AH_GetStrCurrencyOnDate(cCurAppoint: comp; dViewDate: Date): string;
// *****************************************************************************
#doc
Функция получения сслыки на условия работы труда на указанную дату. </br>
Параметры: </br>
  cCurAppoint - NRec назначения </br>
  dViewDate   - дата, на которую необходимо получить данные </br>
#end
function AH_GetWorkCondOnDate(cCurAppoint: comp; dViewDate: Date): comp;
// *****************************************************************************
#doc
Функция получения условия труда (строкой) на указанную дату. </br>
Параметры: </br>
  cCurAppoint - NRec назначения </br>
  dViewDate   - дата, на которую необходимо получить данные </br>
#end
function AH_GetStrWorkCondOnDate(cCurAppoint: comp; dViewDate: Date): string;
// *****************************************************************************
#doc
Функция получения ссылки на характер работы на указанную дату. </br>
Параметры: </br>
  cCurAppoint - NRec назначения </br>
  dViewDate   - дата, на которую необходимо получить данные </br>
#end
function AH_GetJobOnDate(cCurAppoint: comp; dViewDate: Date): comp;
// *****************************************************************************
#doc
Функция получения характера работы на указанную дату. </br>
Параметры: </br>
  cCurAppoint - NRec назначения </br>
  dViewDate   - дата, на которую необходимо получить данные </br>
#end
function AH_GetStrJobOnDate(cCurAppoint: comp; dViewDate: Date): string;
// *****************************************************************************
#doc
Получение даты приказа записи на которую спозиционировались на указанную дату. </br>
Параметры: </br>
  cCurAppoint - NRec назначения </br>
  dViewDate   - дата, на которую необходимо получить данные </br>
#end
function AH_GetDocDateOnDate(cCurAppoint: comp; dViewDate: Date): date;
// *****************************************************************************
#doc
Получение номера приказа записи на которую спозиционировались на указанную дату. </br>
Параметры: </br>
  cCurAppoint - NRec назначения </br>
  dViewDate   - дата, на которую необходимо получить данные </br>
#end
function AH_GetDocNumberOnDate(cCurAppoint: comp; dViewDate: Date): tNoDok;
// *****************************************************************************
#doc
Получить дату контракта на указанную дату. </br>
Параметры: </br>
  cCurAppoint - NRec назначения </br>
  dViewDate   - дата, на которую необходимо получить данные </br>
#end
function AH_GetContractDateOnDate(cCurAppoint: comp; dViewDate: Date): date;
// *****************************************************************************
#doc
Получить дату контракта на указанную дату. </br>
Параметры: </br>
  cCurAppoint - NRec назначения </br>
  dViewDate   - дата, на которую необходимо получить данные </br>
#end
function AH_GetContractNumberOnDate(cCurAppoint: comp; dViewDate: Date): s100;
// *****************************************************************************
#doc
Функция получения персонального разряда на указанную дату. </br>
Параметры: </br>
  cCurAppoint - NRec назначения </br>
  dViewDate   - дата, на которую необходимо получить данные </br>
#end
function AH_GetPersCategoryOnDate(cCurAppoint: comp; dViewDate: Date): longInt;
// *****************************************************************************

end;

objinterface IFunc_AppHist_1;
// *****************************************************************************
#doc
Функция создает запись истории назначения по данным из истории назначения на дату и возвращет ее NRec.</br>
При заполнении записи истории данными могут использоваться параметры, переданные в объект ChangeParam </br>
(если атрибуты вставляемой записи изменяться не должны, перед использованием функции следует вызвать метод ChP_ClearAllParam)</br></br>
Параметры: </br>
  cAppoint - NRec назначения </br>
  wCodOper - код операции </br>
  dOperDate - дата добавляемой записи истории </br>
#end
function AH_InsertRecord( cAppoint: comp; wCodOper: word; dOperDate: date ): comp;
// *****************************************************************************
#doc
Функция получения ссылки на условия труда из истории назначения на дату. </br>
Параметры: </br>
  cCurAppoint - NRec назначения </br>
  dViewDate   - дата, на которую необходимо получить данные </br>
#end
function AH_GetKPSOnDate(cCurAppoint: comp; dViewDate: Date): comp;
end;

objinterface IFunc_AppHist_Check;

#doc
Формирование протокола о различиях в данных между данными из табеля и истории назначения</br>
на дату начала действия записи истории.</br>
Функция возвращает true в том случае, если в протокол были добавлены записи.</br></br>

Запись истории должна быть связана с назначением, а назначение - с лицевым счетом.

Параметры: </br>
  _cAppHist - NRec записи истории назначения
  _bShowLogInstantly - если true, то отображение протокола будет произведено внутри функции
#end
public function CheckDiffWT(_cAppHist: comp; _bShowLogInstantly: boolean = false): boolean;

end;


objinterface IFunc_AppHist_2;

#doc
Получение кода валюты на указанную дату. </br></br>
Параметры: </br>
  cCurAppoint - NRec назначения </br>
  dViewDate   - дата, на которую необходимо получить данные </br>
#end
function AH_GetPayCurrencyOnDate(cCurAppoint: comp; dViewDate: Date): comp;

#doc
Функция возвращает NRec последней действующей на дату _dViewDate записи истории назначения с кодом _cAppoint, </br>
изменившей параметр, соответствующий флагу _cFlag. Если такой записи не найдено, функция вернет 0.
#end
public function GetLastMarkedNRec(_cAppoint: comp; _dViewDate: date; _cFlag: comp): comp;

#doc
Поместить в переменные _cNRec и _wSource уникальный код записи таблицы и константу, соответсвующую таблице,</br>
которыми был изменен параметр назначения, соответствующий флагу _cFlag</br></br>

Данную процедуру следует использовать для получения данных, ссылающихся на запись истории (например СКК или </br>
источников финансирования), в тех случаях, когда при отсутствии изменений в истории нужно получить текущие данные из назначения.</br></br>

Параметры: </br>
  _cAppoint - NRec назначения </br>
  _dViewDate - дата, на которую необходимо получить данные </br>
  _cFlag - флаг (если маска соответствует нескольким флагам, то возвращаемые данные будут соответствовать записи, изменившей все параметры, соответствующие маске) </br>
  _cNrec - возвращаемый параметр - NRec записи таблицы с совпадением маски из _cFlag </br>
  _wSource - возвращаемый параметр - код таблицы, которой соответствует возвращеннй NRec (например coAppointments, coAppHist) </br>
#end
procedure PutNRecAndSourceOnDateByFlag(_cAppoint: comp; _dViewDate: date; _cFlag: comp; var _cNRec: comp; var _wSource: word);

#doc
Функция возвращает true, если все флаги из _wFlag отмечены в _cInf.
#end
function InfIsMarked(_cInf: comp; _wFlag: word): boolean;

#doc
Функция возвращает битовую маску _cInf с выбранными флагами _wFlag без других изменений.
#end
function InfGetMarked(_cInf: comp; _wFlag: word): comp;

#doc
Функция возвращает битовую маску _cInf с отключенными флагами _wFlag без других изменений.
#end
function InfGetUnMarked(_cInf: comp; _wFlag: word): comp;

#doc
Функция возвращает битовую маску _cInf с измененными флагами _wFlag без других изменений.
#end
function InfGetChanged(_cInf: comp; _wFlag: word): comp;

#doc
Функция возвращает битовую маску _cInf с флагами, устанавливаемыми по умолчанию для конкретного распорядительного действия с кодом _wOper.
#end
function InfGetDefaultByOper(_wOper: word): comp;

#doc
После вызова процедуры методы объектного интерфейса будут возвращать данные без учета изменений, </br>
внесенных записью истории с кодом _cAppHist записями истории с той же датой начала, идущими после нее. </br></br>

Вызов данной процедуры необходим для определения параметров назначения, подставляемых в редактируемую </br>
запись истории при снятии флага обновления.</br></br>

Для отмены действия достаточно вызвать метод с параметром 0.
#end
procedure SetNrec4Skip(_cAppHist: comp);

#doc
Установить назначению _cApp параметры, акруальные на дату _dActual.</br>
Функция возвращает флаги для рабочей корзины - комбинацию констант с префиксом RK_.</br>
Перед выполнением остальных действий вызывает SetNrec4Skip(0) и Reset.
#end
public function AppointActualize(_cApp: comp; _dActual: date = ZeroDate): longint;

#doc
Удалить запись истории с кодом _cAppHist вместе с привязанными к номером/датой контракта, СКК и источниками финансирования.</br></br>

Функция возвращает false в том случае, если запись найдена, но при попытке удаления возникла ошибка.</br>
Вызывает Reset.
#end
public function DeleteRecord(_cAppHist: comp): boolean;

#doc
Вызов метода гарантирует, что при следующем получении параметров назначения на дату будет произведен повторный их поиск.
#end
public procedure Reset;

#doc
Получить дату начала действия последней записи истории.
#end
public function AH_GetLastDRec(_cApp: comp): date;

#doc
Заполнить запись истории данными из истории ее назначения на дату начала ее действия.</br></br>

Параметры:</br>
  _cAppHist - код заполняемой записи истории</br>
  _bCheckFlag - признак контроля флагов обновления (если true, то данные в полях с "галочками" изменяться не будут)</br>
  _bFillContract - необязательный параметр - признак заполнения информации о контракте
#end
public procedure FillAppHist(_cAppHist: comp; _bCheckFlag: boolean; _bFillContract: boolean = true);

#doc
Функция проверяет историю назначения на наличие записей с пересечением периодов действия атрибутов к заданным параметрам.</br>
При наличии пересечений функция возвращает true.</br></br>

Параметры:</br>
  _cApp - код назначения</br>
  _cInf - битовая маска для поиска пересечения конкретных параметров (необязательный параметр)
  _dBeg - дата начала периода проверки на пересечения
  _dEnd - дата окончания периода проверки на пересечения
  _bLog - признак формирования протокола о пересечении (если найдены пересечения, протокол можно отобразить с помощью ShowErrors)
  _cAppHist - код записи истории назначения, которая игнорируется при поиске пересечений (необязательный параметр)
#end
public function ExistIntersection(_cApp, _cInf: comp; _dBeg, _dEnd: date; _bLog: boolean; _cAppHist: comp = 0): boolean;

end;

objinterface IFunc_AppHist_4Last;

#doc
Получить NRec последней действующей на дату записи истории. Если запись не найдена, функция вернет 0.</brief>

<p>При наличии в истории нескольких записей с одинаковой датой начала последней из них считается та, у которой<br />
больше дата (AppHist.LastDate) и время (AppHist.LastTime) создания записи.</p>
#end
public function GetLastAppHistNRecOnDate(_cApp: comp; _dViewDate: date): comp;

end;

objinterface IFunc_AppHist_3;

#doc
Получить дату окончания действия последней записи истории.
#end
public function AH_GetLastDEnd(_cApp: comp): date;

end;

objinterface IFunc_AppHist_4;

#doc
Получить значение количества ставок на указанную дату
#end
public function AH_GetRateOnDate(cCurAppoint: comp; dViewDate: Date): double;

end;

objinterface IFunc_AppHist_5;

#doc
Получить ссылку на запись в KlKatego, соответствующую назначению <code>_cApp</code> на дату <code>_dViewDate</code>
#end
public function AH_GetEmpCategoryOnDate(_cApp: comp; _dViewDate: date): comp;

#doc
Получить наименование категории назначения <code>_cApp</code> на дату <code>_dViewDate</code>
#end
public function AH_GetEmpCategoryNameOnDate(_cApp: comp; _dViewDate: date): string;

end;

objinterface IFunc_AppHist_6;

#doc
Получить ссылку на запись истории назначения <code>_cApp</code> с трудовым договором на дату <code>_dViewDate</code>
#end
public function AH_GetNRecWithContractOnDate(_cApp: comp; _dViewDate: date): comp;

#doc
Получить ссылку на трудовой договор, соответствующий назначению <code>_cApp</code> на дату <code>_dViewDate</code>
#end
public function AH_GetContractOnDate(_cApp: comp; _dViewDate: date): comp;

end;

VipInterface Func_AppHist
  implements IFunc_AppHist, IFunc_AppHist_1, IFunc_AppHist_2, IFunc_AppHist_3, IFunc_AppHist_4
            , IFunc_AppHist_Check, IFunc_AppHist_4Last, IFunc_AppHist_5, IFunc_AppHist_6
  licensed(free);

VipInterface Test_Func_AppHist
  licensed(free);

#doc
Блокировать протокол о проверке режима работы после утверждения приказа. Вернуть FALSE, если надо выполнять проверку.
#end
ExtensionPoint epDontCheckDiffWT;

#end