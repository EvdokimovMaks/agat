//------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Галактика ERP 8.1 - Управление персоналом
// Корректирующие коэффициенты
//------------------------------------------------------------------------------

#ifndef _CorrKoef_vih_Included
#define _CorrKoef_vih_Included

#component "Z_Staff"

#include SKK.inc // Константы для сложного корректирующего коэффициента (InfPsn1.cRef2)

#doc
Корректирующие коэффициенты
#end
ObjInterface ObjCorrKoef;

  #doc
  Полный коэффициент по CE
  #end
  function GetFullCorrKoef(cPar: comp): double;

  #doc
  Коэффициент с порядковым номером nPos
  #end
  function GetPosCorrKoef(cPar: comp; nPos: word): double;

  #doc
  Установка коэффициента с порядковым номером nPos в значение value
  #end
  procedure SetPosCorrKoef(cPar: comp; nPos: word; value: double);

end;

#doc
Расширение №1 функций работы с корректирующим коэффициентом
#end
ObjInterface ObjCorrKoef1;

  #doc
  Коэффициент с порядковым номером nPos для сущности choose (константы skkXxxx)
  #end
  function GetPosCorrKoef1(cPar: comp; nPos: word; choose: word): double;

  #doc
  Полный коэффициент по CE для сущности choose (константы skkXxxx)
  #end
  function GetFullCorrKoef1(cPar: comp; choose: word): double;

  function GetCorrKoefDet(cPar: comp; nGr, nPos, choose: word): double;

  function GetNameCorrKoef(cPar: comp; nGr, nPos, choose: word): string;

  function GetCodeCorrKoef(cPar: comp; nGr, nPos, choose: word): string;

  function GetNRecCorrKoef(cPar: comp; nGr, nPos, choose: word): comp;

  function GetCountCorrKoefInGr(cPar: comp; nGr, choose: word): integer;

  procedure SetCorrKoefDet(cPar: comp; nGr, nPos, choose: word; value: double);

end;

//------------------------------------------------------------------------------

#doc
Расширение №2 функций работы с корректирующим коэффициентом
#end
ObjInterface ObjCorrKoef2;

  #doc
  Копирование группы КК из ШР в историю
  #end
  procedure CopyKKStsToHist(cNRecHist: comp);

  #doc
  Копирование группы КК из истории в ШР
  #end
  procedure CopyKKHistToSts(cNRecSts: comp);

end;

//------------------------------------------------------------------------------

#doc
Расширение №3 функций работы с корректирующим коэффициентом
#end
ObjInterface ObjCorrKoef3;

  #doc
  Удаление группы КК
  #end
  procedure DeleteKK(sourceNRec: comp; sourseType: word);

  #doc
  Копирование группы КК из sourceNRec с типом sourseType в targetNRec с типом targetType
  #end
  procedure CopyKK(sourceNRec: comp; sourseType: word; targetNRec: comp; targetType: word);

  #doc
  Копирование группы КК из истории ШР в рабочую корзину
  #end
  procedure CopyKKHistToBasket(cNRecHist, cNRecBasket: comp);

  #doc
  Копирование группы КК из корзины в переход в межпериод
  #end
  procedure CopyKKBasketToPerexod(cNRecBasket, cNRecPerexod : comp);

  #doc
  Копирование группы КК из корзины в лицевой счет
  #end
  procedure CopyKKBasketToLschet(cNRecBasket, cNRecLschet: comp);

  #doc
  Копирование группы КК из перехода в межпериод в лицевой счет
  #end
  procedure CopyKKPerexodToLSchet(cNRecPerexod, cNRecLschet: comp);

  function TestKoef300(cPar: comp; choose: word): boolean;

end;

//------------------------------------------------------------------------------

#doc
Расширение №4 функций работы с корректирующим коэффициентом
#end
ObjInterface ObjCorrKoef4;

  #doc
  Коэффициенты 3-й группы 1-10
  #end
  function GetCorrKoef_3_1_10(cPar: comp; choose: word): double;
  deprecated 'вместо GetCorrKoef_3_1_10 рекомендуется использовать метод z_GetCorrKoef_3_1_10';

  #doc
  Коэффициенты 3-й группы 11-20
  #end
  function GetCorrKoef_3_11_20(cPar: comp; choose: word): double;
  deprecated 'вместо GetCorrKoef_3_11_20 рекомендуется использовать метод z_GetCorrKoef_3_11_20';

end;

//------------------------------------------------------------------------------

#doc
Расширение №5 функций работы с корректирующим коэффициентом
#end
ObjInterface ObjCorrKoef5;

  #doc
  Загрузка составляющих СКК из DSK и присоединение их к некоторой сущности
  #end
  function LoadKKFromDSK(dskPrefix: string // #docl в меру уникальный префикс переменной для загрузки данных из DSK
                       ; targetNRec: comp // #docl ссылка на сущность, к которой подвесить загруженные данные (
                       ; targetType: word // #docl тип сущности, к которой подвесить загруженные данные
                        ): boolean; // #docl успешность проведения операции

  #doc
  Сохранение составляющих СКК в DSK
  #end
  function StoreKKToDSK(sourceNRec: comp // #docl ссылка на сущность, из которой надо взять данные
                      ; sourceType: word // #docl тип сущности, из которой надо взять данные
                      ; dskPrefix: string // #docl в меру уникальный префикс переменной для сохранения данных в DSK
                       ): boolean; // #docl успешность проведения операции

  #doc
  Проверка, подцеплены ли к сущности составляющие СКК
  #end
  function ExistCorrKoefParts(sourceNRec: comp; sourceType: word): boolean;

end;

//------------------------------------------------------------------------------

#doc
Расширение №6 функций работы с корректирующим коэффициентом
#end
ObjInterface ObjCorrKoef6;

  #doc
  Вместо этого метода рекомендуется использовать ExistCorrKoefParts
  #end
  function ExistCorrKoef(cPar: comp; choose: word) : boolean;
    deprecated 'Вместо ExistCorrKoef следует использовать ExistCorrKoefParts';

end;

//------------------------------------------------------------------------------

#doc
Расширение №7 функций работы с корректирующим коэффициентом
#end
ObjInterface ObjCorrKoef7;

  #doc
  Строковое представление СКК
  #end
  function FullCorrKoefToString(sourceNRec: comp // #docl ссылка на сущность, из которой надо взять данные
                              ; sourceType: word // #docl тип сущности, из которой надо взять данные
                               ): string; // #docl Строковое представление СКК

end;

//------------------------------------------------------------------------------
#doc
Расширение №8 функций работы с корректирующим коэффициентом
#end
ObjInterface ObjCorrKoef8;

  #doc
  Коэффициент 3-й группы 11
  #end
  function GetCorrKoef_3_11(cPar: comp; choose: word): double;
  deprecated 'вместо GetCorrKoef_3_11 рекомендуется использовать метод z_GetCorrKoef_3_11';

  #doc
  Коэффициенты 3-й группы 12
  #end
  function GetCorrKoef_3_12(cPar: comp; choose: word): double;
  deprecated 'вместо GetCorrKoef_3_12 рекомендуется использовать метод z_GetCorrKoef_3_12';

end;

#doc
Расширение №9 функций работы с корректирующим коэффициентом
#end
ObjInterface ObjCorrKoef9;

  #doc
  Проверка на равенство СКК двух сущностей
  #end
  function IsEqual(cKoef1: comp  // #docl ссылка на сущность 1, из которой надо взять данные
                  ; wKoef1: word // #docl тип сущности 1, из которой надо взять данные
                  ; cKoef2: comp // #docl ссылка на сущность 2, из которой надо взять данные
                  ; wKoef2: word // #docl тип сущности 2, из которой надо взять данные
                  ): boolean;

end;

#doc
Расширение №10 функций работы с корректирующим коэффициентом
#end
ObjInterface ObjCorrKoef10;

  #doc
  Коэффициенты 3-й группы 1-10 за вычетом 1
  #end
  function z_GetCorrKoef_3_1_10(cPar: comp; choose: word): double;

  #doc
  Коэффициенты 3-й группы 11-20 за вычетом 1
  #end
  function z_GetCorrKoef_3_11_20(cPar: comp; choose: word): double;

  #doc
  Коэффициент 3-й группы 11 за вычетом 1
  #end
  function z_GetCorrKoef_3_11(cPar: comp; choose: word): double;

  #doc
  Коэффициенты 3-й группы 12 за вычетом 1
  #end
  function z_GetCorrKoef_3_12(cPar: comp; choose: word): double;

end;

//------------------------------------------------------------------------------

VipInterface CorrKoefFunctions
  implements ObjCorrKoef,  ObjCorrKoef1, ObjCorrKoef2, ObjCorrKoef3,
             ObjCorrKoef4, ObjCorrKoef5, ObjCorrKoef6, ObjCorrKoef7, 
             ObjCorrKoef8, ObjCorrKoef9, ObjCorrKoef10
  Licensed (free);

#endif
