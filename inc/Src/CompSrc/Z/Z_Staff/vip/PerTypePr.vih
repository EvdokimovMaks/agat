//------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Галактика 8.10 -
// Табличный объект : "TypePr"
//------------------------------------------------------------------------------
#ifndef _PerTypePr_INCLUDED_
#define _PerTypePr_INCLUDED_

#ifdef ComponentVersion
#component "z_Staff"
#end

#doc
Объектный интерфейс с функциями определения права доступа пользователя к РПД
#end
objinterface IPerTypePr;
deprecated 'Методы IPerTypePr принимают имя пользователя и при включенной NT-авторизации могут быть неработоспособными. Используйте методы, описанные в IPerTypePrByUserId.';

#doc
Функция возвращает права пользователя к РПД относительно точки входа
#end
function GetUserTypePr(User_Name: string; SysCode: word): word;

#doc
функция, ничего толком не делающая
#end
function UsePersType(User_Name: string; SysCode: word): boolean;

end;

#doc
Расширение объектного интерфейса с функциями определения права доступа пользователя к РПД
#end
objinterface IPerTypePr1;
deprecated 'Методы IPerTypePr1 принимают имя пользователя и при включенной NT-авторизации могут быть неработоспособными. Используйте методы, описанные в IPerTypePrByUserId.';

#doc
функция набивки маркеров разрешенных и запрещенных маркеров по рпд
wModule = 0 (кадры)
wModule = 1 (студенты)
#end
Function InitMarkers(User_Name: string; wModule: word): boolean;

#doc
функция получения ссылки на маркер доступных (bAcc = true)
или недоступных (bAcc = false) распорядительных действий
wModule = 0 (кадры)
wModule = 1 (студенты)
#end
Function GetNeedMarker(User_Name: string; bAcc: boolean; wModule: word): TPtr;
end;

#doc
Расширение объектного интерфейса с функциями определения права доступа пользователя к РПД
по идентификатору пользователя
#end
objinterface IPerTypePrByUserId;

#doc
Функция проверки наличия у пользователя прав доступа к распорядительному действию.</ brief>
<p>При наличии прав возвращает <code>true</code>.</p>
<h3>Параметры</h3>
<ul>
  <li><code>_wRpdCode</code> - код распорядительного действия</li>
  <li><code>_cUser</code> - идентификатор пользователя (<code>UserId</code>), необязательный параметр
      (если не передан, проверяются права текущего пользователя).</li>
</ul>
#end
function GetAccesToRPD(_wRpdCode: word; _cUser: comp = 0): boolean;

#doc
функция получения маркера доступных пользователю распорядительных действий.</ brief>
<p>Маркер содержит коды доступных пользователю распорядительных действий - элементы с типом <code>word</code>.</p>
<h3>Параметры</h3>
<ul>
  <li><code>_cUser</code> - идентификатор пользователя (<code>UserId</code>), необязательный параметр
      (если не передан, проверяются права текущего пользователя).</li>
</ul>
#end
function GetAccessMarkerToRPD(_cUser: comp = 0): TPtr;

#doc
функция получения маркера недоступных пользователю распорядительных действий.</ brief>
<p>Маркер содержит коды недоступных пользователю распорядительных действий - элементы с типом <code>word</code>.</p>
<h3>Параметры</h3>
<ul>
  <li><code>_cUser</code> - идентификатор пользователя (<code>UserId</code>), необязательный параметр
      (если не передан, проверяются права текущего пользователя).</li>
</ul>
#end
function GetNotAccessMarkerToRPD(_cUser: comp = 0): TPtr;

end;

vipinterface SetPersonsTypePr implements IPerTypePr, IPerTypePr1, IPerTypePrByUserId
#ifdef ATL51
Licensed (free)
#end
;

//Перечень приказов по работе со студентами
#ifdef ComponentVersion
  #component "u_student"
#end

vipinterface U_SetPersonsTypePr implements IPerTypePr, IPerTypePr1
#ifdef ATL51
Licensed (free)
#end
;
#end