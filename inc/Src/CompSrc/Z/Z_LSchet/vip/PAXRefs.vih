/*
                      (c) 1994,2000 корпорация ГАЛАКТИКА
  Проект        : ГАЛАКТИКА
  Система       : Бухгалтерский контур
  Назначение    : obj-интерфейсы для работы с перекрестными ссылками лицевых счетов
                  (дополнительные лицевые счета)
  Ответственный : Корзюк Виталий Францевич
  Параметры     : нет
*/

#ifndef _PAXREFS_INCLUDED_
#define _PAXREFS_INCLUDED_
#ifdef ComponentVersion
#component "Z_Lschet"
#end

#include XRefs.vih

#doc
  Объектный интерфейс для доступа к функционалу обработки перекрестных ссылок
  лицевых счетов (связей "основной - дополнительный").
#end
objinterface IPersonalAccountXRefs;
  #doc
    Возвращает true, если существует описанная параметрами связь "основной -
    дополнительный".</brief>
  #end
  function Exists(MainPersonalAccount, AdditionalPersonalAccount: comp): boolean;

  #doc
    Возвращает true, если существует хотя бы одна связь с
    AdditionalPersonalAccount в качестве ссылки на дополнительный лицевой
    счет.</brief>
  #end
  function HasMain(AdditionalPersonalAccount: comp): boolean;

  #doc
    Возвращает true, если существует хотя бы одна связь с MainPersonalAccount в
    качестве ссылки на основной лицевой счет.</brief>
  #end
  function HasAdditional(MainPersonalAccount: comp): boolean;

  #doc
    Удаляет все связи с MainPersonalAccount в качестве ссылки на основной
    лицевой счет.</brief>

    <p>Возвращает tsOk в случае успешного завершения или код ошибки в противном
    случае.</p>
  #end
  function DelByMain(MainPersonalAccount: comp): integer;

  #doc
    Удаляет все связи с AdditionalPersonalAccount в качестве ссылки на
    дополнительный лицевой счет.</brief>

    <p>Возвращает tsOk в случае успешного завершения или код ошибки в противном
    случае.</p>
  #end
  function DelByAdditional(AdditionalPersonalAccount: comp): integer;

  #doc
    Удаляет все связи с PersonalAccount в качестве ссылки на основной или
    дополнительный лицевой счет.</brief>

    <p>Возвращает tsOk в случае успешного завершения или код ошибки в противном
    случае.</p>
  #end
  function Del(APersonalAccount: comp): integer;

  #doc
    Удаляет все связи с MainPersonalAccount в качестве ссылки на основной
    лицевой счет и AdditionalPersonalAccount - на дополнительный.</brief>

    <p>Возвращает tsOk в случае успешного завершения или код ошибки в противном
    случае.</p>
  #end
  function DelLink(MainPersonalAccount, AdditionalPersonalAccount: comp): integer;

  #doc
    Вставляет в список связей новую запись с MainPersonalAccount в качестве
    ссылки на основной лицевой счет и AdditionalPersonalAccount - на
    дополнительный.</brief>

    <p>Возвращает tsOk в случае успешного завершения или код ошибки в противном
    случае.</p>
  #end
  function InsLink(MainPersonalAccount, AdditionalPersonalAccount: comp): boolean;

  #doc
    Возвращает true, если в цепочке связей, начинающихся с APersonalAccount в
    качестве ссылки на основной (IsMain = true) или дополнительный (IsMain =
    false) существует цикл.</brief>
  #end
  function HasCircularRef(APersonalAccount: comp; IsMain: boolean): boolean;

  #doc
    Возвращает true, если между MainPersonalAccount и AdditionalPersonalAccount
    существует косвенная (непрямая) связь.</brief>
  #end
  function HaveIndirectRef(MainPersonalAccount, AdditionalPersonalAccount: comp): boolean;

  #doc
    Возникает каждый раз, когда изменяются какие-либо связи с PA в качестве
    ссылки на основной лицевой счет.</brief>
  #end
  event procedure BackupMain(PA: comp);

  #doc
    Возникает каждый раз, когда изменяются какие-либо связи с PA в качестве
    ссылки на дополнительный лицевой счет.</brief>
  #end
  event procedure BackupAdditional(PA: comp);
end;

//******************************************************************************
#doc
  Объектный интерфейс итератора по перекрестным ссылкам лицевых счетов.</brief>

  <p>См. также <link objinterface IPersonalAccountXRefs>IPersonalAccountXRefs</link></p>
#end
objinterface IPersonalAccountXRefsIterator;
  #doc
    Устанавливает указатель на первую перекрестную ссылку и возвращает true в
    случае удачного завершения.
  #end
  function First: boolean;

  #doc
    Сдвигает указатель на следующую перекрестную ссылку и возвращает true в
    случае удачного завершения.
  #end
  function Next: boolean;

  #doc
    Возвращает значение ссылки на основной лицевой счет из текущей связи.
  #end
  function GetMain: comp;

  #doc
    Возвращает значение ссылки на дополнительный лицевой счет из текущей связи.
  #end
  function GetAdditional: comp;
end;

//******************************************************************************
#doc
  Объектный интерфейс итератора по смежным лицевым счетам данного лицевого
  счета (основным или дополнительным).</brief>

  <p>См. также <link objinterface IPersonalAccountXRefs>IPersonalAccountXRefs</link></p>
#end
objinterface IAdjacentPersonalAccountsIterator;

  #doc
    Устанавливает указатель на первую перекрестную ссылку с PersonalAccount в
    качестве ссылки на основной или дополнительный лицевой счет и возвращает
    true в случае удачного завершения.
  #end
  function First(PersonalAccount: comp): boolean;

  #doc
    Сдвигает указатель на следующую перекрестную ссылку из числа описанных
    вызовом метода First и возвращает true в случае удачного завершения.
  #end
  function Next: boolean;

  #doc
    Возвращает значение ссылки на смежный лицевой счет из текущей связи.
  #end
  function GetAdjacent: comp;
end;

#doc
  #doc_internal
#end
objinterface IAdditionalPersonalAccountsInfoBackup;
  #doc
    #doc_internal
  #end
  procedure InsMain(PA: comp);

  #doc
    #doc_internal
  #end
  procedure InsAdditional(PA: comp);

  #doc
    #doc_internal
  #end
  procedure Clear;

  #doc
    #doc_internal
  #end
  procedure Perform;

  #doc
    #doc_internal
  #end
  procedure Bind(PAXR: IPersonalAccountXRefs);

  #doc
    #doc_internal
  #end
  procedure UnBind(PAXR: IPersonalAccountXRefs);
end;

#doc
  Интерфейс датировки связи лицевых счетов
#end
objinterface IDatingPersonalAccountXRefs
#ifdef ATL51
(IPersonalAccountXRefs)
#end
;
  #doc
    Вставить датированную связь с MainPersonalAccount в качестве
    ссылки на основной лицевой счет и AdditionalPersonalAccount - на
    дополнительный.
  #end
  function InsDatedLink(MainPersonalAccount, AdditionalPersonalAccount: comp; XDateTime: _DateTime): boolean;

  #doc
    Изменить датировку связи с MainPersonalAccount в качестве
    ссылки на основной лицевой счет и AdditionalPersonalAccount - на
    дополнительный.
  #end
  function SetDateLink(MainPersonalAccount, AdditionalPersonalAccount: comp; XDateTime: _DateTime): boolean;

end;

//******************************************************************************
#doc
  Cтандартная реализация интерфейса доступа к функционалу обработки перекрестных
  ссылок лицевых счетов.
#end
vipinterface PersonalAccountXRefs implements IPersonalAccountXRefs, IDatingPersonalAccountXRefs
#ifdef ATL51
  licensed(Free)
#end
;

#doc
  Стандартная реализация итератора по перекрестным ссылкам лицевых
  счетов.
#end
vipinterface PersonalAccountXRefsIterator implements IPersonalAccountXRefsIterator, IDated
#ifdef ATL51
  licensed(Free)
#end
;

#doc
  Стандартная реализация итератора по дополнительным лицевым счетам.
#end
vipinterface AdditionalPersonalAccountsIterator implements IAdjacentPersonalAccountsIterator, IDated
#ifdef ATL51
  licensed(Free)
#end
;

#doc
  Стандартная реализация итератора по основным лицевым счетам.
#end
vipinterface MainPersonalAccountsIterator implements IAdjacentPersonalAccountsIterator, IDated
#ifdef ATL51
  licensed(Free)
#end
;

#doc
  Экзотическая стандартная реализация итератора по данному лицевому счету.
#end
vipinterface CurrentPersonalAccountsIterator implements IAdjacentPersonalAccountsIterator
#ifdef ATL51
  licensed(Free)
#end
;


#doc
  Стандартная реализация итератора по смежным лицевым счетам (основным и
  дополнительным).
#end
vipinterface AdjacentPersonalAccountsIterator implements IAdjacentPersonalAccountsIterator
#ifdef ATL51
  licensed(Free)
#end
;
#doc
  #doc_internal
#end
vipinterface AdditionalPersonalAccountsInfoBackup implements IAdditionalPersonalAccountsInfoBackup
#ifdef ATL51
  licensed(Free)
#end
;

#end
