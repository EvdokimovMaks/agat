//------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Галактика 5.80 - Заработная плата
// Обработка лицевых счетов
//------------------------------------------------------------------------------

#ifndef _LSFUNCS_INCLUDED_
#define _LSFUNCS_INCLUDED_

#component "Z_Lschet"

#doc
Обработка лицевых счетов
#end
ObjInterface TLschetFuncsObjInterface;

  #doc
  Удаление заданного лицевого счета
  #end
  function DelPersonalAccount(RecNum: comp // #docl NRec лицевого счета
                             ): boolean;   // #docl true в случае удачного завершения

  #doc
  Удаление всех лицевых счетов заданного физического лица
  #end
  function DelPersonalAccounts(APerson: comp // #docl NRec физического лица
                              ): boolean;    // #docl true в случае удачного завершения

  #doc
  Удаление набора лицевых счетов
  #end
  function DelPersonalAccountList(List: longint // #docl идентификатор маркера со списком NRec'ов лицевых счетов
                                 ): boolean;    // #docl true в случае удачного завершения

end;


#doc
  Расширение объектного интерфейса для обработки лицевых счетов.
#end
objinterface TLschetFuncsObjInterface2(TLschetFuncsObjInterface);
  #doc
  Обработка изменения даты увольнения в лицевом счете</brief>
  <h3>Параметры</h3>
  <ul>
    <li><code>LSNRec</code> - ссылка на лицевой счет, в котором дата увольнения
    к моменту вызова данного метода уже изменена</li>
    <li><code>OldDismissDate</code> - предыдущее значение даты увольнения</li>
  </ul>
  <h3>Возвращаемое значение</h3>
  <p>
    Найден ли заданный лицевой счет.
  </p>
  #end
  function OnPersonalAccountFireDateChanged(LSNRec: comp; OldDismissDate: date): boolean;
end;

#doc
  Расширение объектного интерфейса для обработки лицевых счетов.
#end
objinterface LSFuncs1;
#doc
Получить количество ставок из ЛС
#end
function GetRateLS(LSNRec : comp) : double;

#doc
Установить количество ставок в ЛС
#end
function SetRateLS(LSNRec : comp; countRate : double) : boolean;

end;

#doc
  Расширение объектного интерфейса для обработки лицевых счетов.
#end
objinterface LSFuncs2;

#doc
Установить плановую дату выплаты заработной платы уволенному
#end
procedure SetPlanPayDate(LSNRec: comp; dPlanPay: date);

end;

#doc
  Расширение объектного интерфейса для обработки лицевых счетов.
#end
objinterface LSFuncs3;

#doc
Установить банковскую карту по умолчанию
Параметры:
cLSNRec   - LSCHET.nRec
cRecCard_ - ZBANKCARD.nRec
Функция возвращает true, если установлена БК "по умолчанию" в ЛС
#end
public function boSetCardDefault(cLSNRec: comp; cRecCard_: comp): boolean;

#doc
Очистить информацию о банковских реквизитах по умолчанию в лицевом счете
Параметры:
cLSNRec   - LSCHET.nRec
Функция возвращает true, если очистка информации о банковских реквизитах
по умолчанию в лицевом счете прошла успешно
#end
public function boDelBankCardDefault(cLSNRec: comp): boolean;

end;

objinterface LSFuncs4;
#doc
Изменение банковских реквизитов в ЛС при изменении данных в банковской карте сотрудника,
которая используется по умолчанию в ЛС
Параметры:
cRecCard_ - ZBANKCARD.nRec
Функция возвращает true, если изменения прошли успешно
#end
public function boUpdateCardLS(cRecCard_: comp): boolean;
end;

// Канонiчная реализация
vipinterface LschetFuncs
  implements TLschetFuncsObjInterface, TLschetFuncsObjInterface2, LSFuncs1, LSFuncs2, LSFuncs3, LSFuncs4
  licensed(free);

#end
