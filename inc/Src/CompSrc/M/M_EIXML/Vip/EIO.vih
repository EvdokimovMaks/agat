// =============================================================================
//                                                     (c)  корпорация Галактика
// Галактика 7.11 - Производственный контур
// Описание интерфейса-объекта "Тип данных для экспорта-импорта (XML)"
// =============================================================================

#include EIExpImp_CF.vih     //
#include EIExpEngine_CF.vih  //
#include EIImpEngine_CF.vih  //
#include EIExpSetDTE_EF.vih  //
#include EIExpSetDTR_EF.vih  //
#include EIImpSetDTE_EF.vih  //
#include EIImpSetDTI_EF.vih  //
#include File_CF.vih         //
#include PrmTree_CF.vih      // Описание интерфейса-объекта "Дерево параметров"
#include PrmTreeOwner_CF.vih // Описание интерфейса-владельца дерева параметров

#component "M_EIXML"

//******************************************************************************
// Предварительное описание ObjInterface oEIOClt_CF (для обхода рекурсивной вложенности
// файлов EIO.vih, EIOClt_CF.vih; описание вставлено ниже)
#ifndef __Def_EIOClt_CF__
ObjInterface oEIOClt_CF; Forward;
#endif

//******************************************************************************
// ObjInterface oEIO
#doc
 Описание интерфейса-объекта "Тип данных для экспорта-импорта (XML)"</brief>
#end
#ifndef __Def_EIO__
#define __Def_EIO__

ObjInterface oEIO;

//------------------------------------------------------------------------------
#doc
 Получение имени типа данных</brief><br>
 Результат:<br>
   Имя типа данных<br>
#end
Function GetDT: string;

//------------------------------------------------------------------------------
#doc
 Определяет порядок импорта данных по типам данных</brief><br>
 Чем ниже число, тем выше приоритет (0 - обычный приоритет)<br>
 Результат:<br>
   Номер приоритета<br>
#end
Function GetImpPriority: integer;

//------------------------------------------------------------------------------
#doc
 Определение, является ли тип данных составным</brief><br>
 Результат:<br>
   True, если тип данных является составным, иначе - False<br>
#end
Function IsCompoundDT: boolean;

//------------------------------------------------------------------------------
#doc
 Инициализация типа данных для экспорта-импорта</brief><br>
 Результат:<br>
   tsOk, если успешно, иначе - код ошибки<br>
#end
Function InitDT: longint;

//------------------------------------------------------------------------------
#doc
 Установка дополнительных параметров</brief><br>
 Параметры:<br>
   ardAdvParams - Cтруктура с дополнительными параметрами<br>
#end
Procedure SetAdvParams(var ardAdvParams: TEIAdvParams);

//------------------------------------------------------------------------------
#doc
 Предподготовка</brief><br>
 Параметры:<br>
   awMode - Режим предподготовки данных (см. EIExpImp_CN.vpp)<br>
#end
Procedure Prepare(awMode: word);

//------------------------------------------------------------------------------
#doc
 Предподготовка перед выгрузкой интерфейса</brief><br>
#end
Procedure PrepareForUnload;

//------------------------------------------------------------------------------
#doc
 Определение, есть ли дополнительные локальные параметры
 для текущего режима работы интерфейса</brief><br>
 Результат:<br>
   True, если есть дополнительные локальные параметры, иначе - False<br>
#end
Function IsExistsLocalParams: boolean;

//------------------------------------------------------------------------------
#doc
 Установка текущей настройки экспорта</brief><br>
 Параметры:<br>
   acEIExpSet - Ссылка на настройку экспорта<br>
 Результат:<br>
   tsOk, если успешно, иначе - код ошибки<br>
#end
Function SetEIExpSet(acEIExpSet: comp): longint;

//------------------------------------------------------------------------------
#doc
 Чтение текущей настройки экспорта</brief><br>
 Результат:<br>
   Ссылка на настройку экспорта<br>
#end
Function GetEIExpSet: comp;

//------------------------------------------------------------------------------
#doc
 Установка текущей настройки импорта</brief><br>
 Параметры:<br>
   acEIImpSet - Ссылка на настройку импорта<br>
 Результат:<br>
   tsOk, если успешно, иначе - код ошибки<br>
#end
Function SetEIImpSet(acEIImpSet: comp): longint;

//------------------------------------------------------------------------------
#doc
 Чтение текущей настройки импорта</brief><br>
 Результат:<br>
   Ссылка на настройку импорта<br>
#end
Function GetEIImpSet: comp;

//------------------------------------------------------------------------------
#doc
 Передача структуры с дополнительными параметрами для текущей настройки экспорта</brief><br>
 Параметры:<br>
   ardEIExpSetParams - Структура с дополнительными параметрами для настройки экспорта<br>
#end
Procedure SetEIExpSetParams(var ardEIExpSetParams: TEIExpSetParams);

//------------------------------------------------------------------------------
#doc
 Передача структуры с дополнительными параметрами для текущей настройки импорта</brief><br>
 Параметры:<br>
   ardEIImpSetParams - Структура с дополнительными параметрами для настройки импорта<br>
#end
Procedure SetEIImpSetParams(var ardEIImpSetParams: TEIImpSetParams);

//------------------------------------------------------------------------------
#doc
 Установка объекта "Коллекция типов данных для экспорта-импорта (XML)"</brief><br>
 (для поиска объектов других ТД в БД)<br>
 Параметры:<br>
   aoEIOClt_CF - Объект "Коллекция типов данных для экспорта-импорта (XML)"<br>
 Результат:<br>
   True, если успешно, иначе - False<br>
#end
Function SetEIOClt_CF(var aoEIOClt_CF: oEIOClt_CF): boolean;

//------------------------------------------------------------------------------
#doc
 Установка объекта "Движок на экспорт (XML)"</brief><br>
 Параметры:<br>
   aoEIExpEngine_CF - Объект "Движок на экспорт (XML)"<br>
 Результат:<br>
   True, если успешно, иначе - False<br>
#end
Function SetEIExpEngine_CF(var aoEIExpEngine_CF: oEIExpEngine_CF): boolean;

//------------------------------------------------------------------------------
#doc
 Проверка, установлен ли объект "Движок на экспорт (XML)"</brief><br>
 Результат:<br>
   True, если установлен, иначе - False<br>
#end
Function IsSetEIExpEngine_CF: boolean;

//------------------------------------------------------------------------------
#doc
 Установка объекта "Движок на импорт (XML)"</brief><br>
 Параметры:<br>
   aoEIImpEngine_CF - Объект "Движок на импорт (XML)"<br>
 Результат:<br>
   True, если успешно, иначе - False<br>
#end
Function SetEIImpEngine_CF(var aoEIImpEngine_CF: oEIImpEngine_CF): boolean;

//------------------------------------------------------------------------------
#doc
 Проверка, установлен ли объект "Движок на импорт (XML)"</brief><br>
 Результат:<br>
   True, если установлен, иначе - False<br>
#end
Function IsSetEIImpEngine_CF: boolean;

//------------------------------------------------------------------------------
#doc
 Чтение объекта "Элементы типа данных для экспорта"</brief><br>
 Параметры:<br>
   aoEIExpSetDTE_EF - Объект "Элементы типа данных для экспорта" (возвращается)<br>
 Результат:<br>
   True, если успешно, иначе - False<br>
#end
Function GetEIExpSetDTE_EF(var aoEIExpSetDTE_EF: oEIExpSetDTE_EF): boolean;

//------------------------------------------------------------------------------
#doc
 Чтение объекта "Связанные типы данных для экспорта"</brief><br>
 Параметры:<br>
   aoEIExpSetDTR_EF - Объект "Связанные типы данных для экспорта" (возвращается)<br>
 Результат:<br>
   True, если успешно, иначе - False<br>
#end
Function GetEIExpSetDTR_EF(var aoEIExpSetDTR_EF: oEIExpSetDTR_EF): boolean;

//------------------------------------------------------------------------------
#doc
 Чтение объекта "Элементы типа данных для импорта"</brief><br>
 Параметры:<br>
   aoEIImpSetDTE_EF - Объект "Элементы типа данных для импорта" (возвращается)<br>
 Результат:<br>
   True, если успешно, иначе - False<br>
#end
Function GetEIImpSetDTE_EF(var aoEIImpSetDTE_EF: oEIImpSetDTE_EF): boolean;

//------------------------------------------------------------------------------
#doc
 Чтение объекта "Идентификаторы типа данных для импорта"</brief><br>
 Параметры:<br>
   aoEIImpSetDTI_EF - Объект "Идентификаторы типа данных для импорта" (возвращается)<br>
 Результат:<br>
   True, если успешно, иначе - False<br>
#end
Function GetEIImpSetDTI_EF(var aoEIImpSetDTI_EF: oEIImpSetDTI_EF): boolean;

//------------------------------------------------------------------------------
#doc
 Чтение объекта "Дерево параметров"</brief><br>
 Параметры:<br>
   aoPrmTree_CF - Объект "Дерево параметров" (возвращается)<br>
 Результат:<br>
   True, если успешно, иначе - False<br>
#end
Function GetPrmTree_CF(var aoPrmTree_CF: oPrmTree_CF): boolean;

//------------------------------------------------------------------------------
#doc
 Чтение количества свойств-идентификаторов, используемых для функции FindClone</brief><br>
 Результат:<br>
   Количество свойств-идентификаторов<br>
#end
Function GetPropIDCount: word;

//------------------------------------------------------------------------------
#doc
 Получение наименования объекта по ID</brief><br>
 Параметры:<br>
   asID - Cтрока-идентификатор объекта<br>
 Результат:<br>
   Наименование объекта<br>
#end
Function GetObjName(asID: string): string;

//------------------------------------------------------------------------------
#doc
 Вызов интерфейса выбора объектов</brief><br>
 Параметры:<br>
   awFlPick   - Группа флагов способа выбора объекта<br>
     1 - множественный выбор, если не задан - одиночный выбор<br>
     2 - через Marker, если не задан - через Pick<br>
     4 - для множественного выбора очищать помеченные записи перед вызовом<br>
   asID       - Строка-идентификатор объекта<br>
   asPickList - Номер листа для Pick'a либо имя маркера (в зависимости от awFlPick)<br>
 Результат:<br>
   True, если был выбор<br>
#end
Function PickObj(var awFlPick: word; var asID: string; var asPickList: string): boolean;

//------------------------------------------------------------------------------
#doc
 Возврат количества объектов при экспорте всех объектов</brief><br>
 Результат:<br>
   Количество всех объектов для экспорта<br>
#end
Function GetAllObj_Count: longint;

//------------------------------------------------------------------------------
#doc
 Получение идентификатора первого объекта при экспорте всех объектов</brief><br>
 Результат:<br>
   Строка-идентификатор объекта или пустая строка, если объект не найден<br>
#end
Function GetAllObj_FirstID: string;

//------------------------------------------------------------------------------
#doc
 Получение идентификатора следующего объекта при экспорте всех объектов</brief><br>
 Результат:<br>
   Строка-идентификатор объекта или пустая строка, если объект не найден<br>
#end
Function GetAllObj_NextID: string;

//------------------------------------------------------------------------------
#doc
 Удаление объекта из БД</brief><br>
 Параметры:<br>
   asID - Строка-идентификатор объекта<br>
 Результат:<br>
   tsOk, если успешно, иначе - False<br>
#end
Function DelObj(asID: string): longint;

//------------------------------------------------------------------------------
#doc
 Экспорт метаописания класса</brief><br>
 Параметры:<br>
   aliNode - Указатель на узел "MetaData" в XML-документе<br>
 Результат:<br>
   tsOk, если успешно, иначе - код ошибки<br>
#end
Function ExpClass(aliNodeMD: TPtr): longint;

//------------------------------------------------------------------------------
#doc
 Экспорт объекта</brief><br>
 Параметры:<br>
   aliNode - Указатель на узел-коллекцию в XML-документе<br>
   asID    - Строка-идентификатор объекта (если awFlExp=1)<br>
 Результат:<br>
   tsOk, если успешно, иначе - код ошибки<br>
#end
Function ExpObj(aliNodeCltObj: TPtr; asID: string): longint;

//------------------------------------------------------------------------------
#doc
 Поиск объекта-клона в БД</brief><br>
 Параметры:<br>
   aliNodeObj - Указатель на узел-объект в XML-документе<br>
   asObjID    - Идентификатор объекта в XML-файле<br>
   asObjName  - Наименование объекта в XML-файле<br>
   asDBObjID  - Идентификатор соответствующего объекта в БД (возвращается; '', если объект не существует)<br>
 Результат:<br>
   tsOk, если успешно, иначе - False<br>
#end
Function FindClone(aliNodeObj: TPtr; asObjID: string; asObjName: string; var asDBObjID: string): longint;

//------------------------------------------------------------------------------
#doc
 Импорт объекта в БД</brief><br>
 Параметры:<br>
   aliNodeObj     - Указатель на узел-объект в XML-документе<br>
   asObjID        - Идентификатор объекта в XML-файле<br>
   asObjName      - Наименование объекта в XML-файле<br>
   awModifyModeEx - Дополнительный флаг для модификации существующего объекта (передается/возвращается),
     учитывается, если gwFlModifyImpObj = 2:<br>
     0 - Выдавать запрос на модификацию существующего объекта<br>
     1 - "Да для всех": не выдавая запроса, модифицировать существующий объект,<br>
     2 - "Нет для всех": не выдавая запроса, оставлять без изменений существующий объект<br>
     3 - "Отмена": отмена импорта данных<br>
   asDBObjID      - Идентификатор соответствующего объекта в БД (возвращается)<br>
 Результат:<br>
   tsOk, если успешно, иначе - False<br>
#end
Function ImpObj(aliNodeObj: TPtr; asObjID: string; asObjName: string; var awModifyModeEx: word;
  var asDBObjID: string): longint;

//------------------------------------------------------------------------------
#doc
 Импорт значений свойств объекта в БД</brief><br>
 Параметры:<br>
   aliNodeObj - Указатель на узел-объект в XML-документе<br>
   asDBObjID  - Идентификатор объекта в БД<br>
 Результат:<br>
   tsOk, если успешно, иначе - False<br>
#end
Function ImpObjProp(aliNodeObj: TPtr; asDBObjID: string): longint;

//------------------------------------------------------------------------------
#doc
 Признак выполнения для текущего типа данных дополнительной обработки
 импортированных объектов в БД после выполнения импорта всех объектов</brief><br>
 Результат:<br>
   True, если требуется дополнительная обработка, иначе - False<br>
#end
Function CheckImpObjAfter: boolean;

//------------------------------------------------------------------------------
#doc
 Дополнительная обработка импортированного объекта в БД после выполнения
 импорта всех объектов</brief><br>
                          Внимание!!!<br>
 Эта функция будет вызываться, если функция CheckImpObjAfter возвращает True<br>
 Параметры:<br>
   aliNodeObj - Указатель на узел-объект в XML-документе<br>
   asDBObjID  - Идентификатор объекта в БД<br>
   awFlUpd    - Флаг модификации объекта при импорте (см. EIExpImp_CN.vpp)<br>
 Результат:<br>
   tsOk, если успешно, иначе - False<br>
#end
Function ImpObjAfter(aliNodeObj: TPtr; asDBObjID: string; awFlUpd: word): longint;

//------------------------------------------------------------------------------
#doc
 Очистка значений параметров в дереве</brief><br>
 Параметры:<br>
   asPrmName - Имя параметра, если пустая строка, то для всех параметров<br>
#end
Procedure ClearPrmValues(asPrmName: string);

//------------------------------------------------------------------------------
#doc
 Признак модификации параметров в дереве</brief><br>
 Результат:<br>
   True - если данные были модифицированы<br>
#end
Function IsModifiedParams: boolean;

//------------------------------------------------------------------------------
#doc
 Установка/сброс признака модификации параметров в дереве</brief><br>
 Параметры:<br>
   abModified - Признак модификации<br>
#end
Procedure SetModifiedParams(abModified: boolean);

//------------------------------------------------------------------------------
#doc
 Поиск параметра в дереве по имени</brief><br>
 Параметры:<br>
   asPrmName - Имя параметра<br>
 Результат:<br>
   tsOk - если все нормально, иначе - False<br>
#end
Function FindPrm(asPrmName: string): longint;

//------------------------------------------------------------------------------
#doc
 Получение значения параметра текущего алгоритма</brief><br>
 Параметры:<br>
   asPrmName - Имя параметра<br>
 Результат:<br>
   Значение параметра<br>
#end
Function GetPrmVal(asPrmName: string): string;

//------------------------------------------------------------------------------
#doc
 Установка значения параметра</brief><br>
 Параметры:<br>
   asPrmName - Имя параметра<br>
   asValue   - Значение<br>
   asDT_Rlt  - Обозначение класса объекта (для параметра-ссылки)<br>
 Результат:<br>
   tsOk - если все нормально, иначе - код ишибки<br>
#end
Function SetPrmVal(asPrmName: string; asValue: string; asDT_Rlt: string): longint;

//------------------------------------------------------------------------------
#doc
 Добавление помеченного знач-я для списка знач-й пар-ра при редактировании</brief><br>
 Параметры:<br>
   asPrmName - Имя параметра<br>
   asValue   - Значение<br>
   asDT_Rlt  - Обозначение класса объекта (для параметра-ссылки)<br>
   asList    - Код группы (аналог Marker, Pick.wList)<br>
 Результат:<br>
   tsOk - если все нормально, иначе - код ишибки<br>
#end
Function AddPrmVLR(asPrmName: string; asValue: string; asDT_Rlt: string; asList: string): longint;

//------------------------------------------------------------------------------
#doc
 Текущая запись Prm</brief><br>
 Результат:<br>
   Запись Prm<br>
#end
Function RecPrm: TRecPrm;

//------------------------------------------------------------------------------
#doc
 Текущая запись PrmLV</brief><br>
 Результат:<br>
   Запись PrmLV<br>
#end
Function RecPrmLV: TRecPrmLV;

//------------------------------------------------------------------------------
#doc
 Текущая запись PrmV</brief><br>
 Результат:<br>
   Запись PrmV<br>
#end
Function RecPrmV: TRecPrmV;

//------------------------------------------------------------------------------
#doc
 Текущая запись PrmVLR</brief><br>
 Результат:<br>
   Запись PrmVLR<br>
#end
Function RecPrmVLR: TRecPrmVLR;

//------------------------------------------------------------------------------
#doc
 Получение первой записи для Prm</brief><br>
 Результат:<br>
   tsOk, если успешно, иначе - код ошибки<br>
#end
Function Prm_GetFirst: longint;

//------------------------------------------------------------------------------
#doc
 Получение последней записи для Prm</brief><br>
 Результат:<br>
   tsOk, если успешно, иначе - код ошибки<br>
#end
Function Prm_GetLast: longint;

//------------------------------------------------------------------------------
#doc
 Получение следующей записи относительно текущей позиции для Prm</brief><br>
 Результат:<br>
   tsOk, если успешно, иначе - код ошибки<br>
#end
Function Prm_GetNext: longint;

//------------------------------------------------------------------------------
#doc
 Получение предыдующей записи относительно текущей позиции для Prm</brief><br>
 Результат:<br>
   tsOk, если успешно, иначе - код ошибки<br>
#end
Function Prm_GetPrev: longint;

//------------------------------------------------------------------------------
#doc
 Получение первой записи для PrmLV</brief><br>
 Результат:<br>
   tsOk, если успешно, иначе - код ошибки<br>
#end
Function PrmLV_GetFirst: longint;

//------------------------------------------------------------------------------
#doc
 Получение последней записи для PrmLV</brief><br>
 Результат:<br>
   tsOk, если успешно, иначе - код ошибки<br>
#end
Function PrmLV_GetLast: longint;

//------------------------------------------------------------------------------
#doc
 Получение следующей записи относительно текущей позиции для PrmLV</brief><br>
 Результат:<br>
   tsOk, если успешно, иначе - код ошибки<br>
#end
Function PrmLV_GetNext: longint;

//------------------------------------------------------------------------------
#doc
 Получение предыдующей записи относительно текущей позиции для PrmLV</brief><br>
 Результат:<br>
   tsOk, если успешно, иначе - код ошибки<br>
#end
Function PrmLV_GetPrev: longint;

//------------------------------------------------------------------------------
#doc
 Получение первой записи для PrmV</brief><br>
 Результат:<br>
   tsOk, если успешно, иначе - код ошибки<br>
#end
Function PrmV_GetFirst: longint;

//------------------------------------------------------------------------------
#doc
 Получение последней записи для PrmV</brief><br>
 Результат:<br>
   tsOk, если успешно, иначе - код ошибки<br>
#end
Function PrmV_GetLast: longint;

//------------------------------------------------------------------------------
#doc
 Получение следующей записи относительно текущей позиции для PrmV</brief><br>
 Результат:<br>
   tsOk, если успешно, иначе - код ошибки<br>
#end
Function PrmV_GetNext: longint;

//------------------------------------------------------------------------------
#doc
 Получение предыдующей записи относительно текущей позиции для PrmV</brief><br>
 Результат:<br>
   tsOk, если успешно, иначе - код ошибки<br>
#end
Function PrmV_GetPrev: longint;

//------------------------------------------------------------------------------
#doc
 Получение первой записи для PrmVLR</brief><br>
 Результат:<br>
   tsOk, если успешно, иначе - код ошибки<br>
#end
Function PrmVLR_GetFirst: longint;

//------------------------------------------------------------------------------
#doc
 Получение последней записи для PrmVLR</brief><br>
 Результат:<br>
   tsOk, если успешно, иначе - код ошибки<br>
#end
Function PrmVLR_GetLast: longint;

//------------------------------------------------------------------------------
#doc
 Получение следующей записи относительно текущей позиции для PrmVLR</brief><br>
 Результат:<br>
   tsOk, если успешно, иначе - код ошибки<br>
#end
Function PrmVLR_GetNext: longint;

//------------------------------------------------------------------------------
#doc
 Получение предыдующей записи относительно текущей позиции для PrmVLR</brief><br>
 Результат:<br>
   tsOk, если успешно, иначе - код ошибки<br>
#end
Function PrmVLR_GetPrev: longint;

End; // ObjInterface oEIO

//******************************************************************************
// Реализации oEIO
VipInterface iEIO_Account_Certificate      implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_Account_Certificate_Summ implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_AdviceOfChange           implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_AlgCalc                  implements oEIO, oPrmTreeOwner_CF Licensed(Free);
//VipInterface iEIO_AlgCalc_1                implements oEIO, oPrmTreeOwner_CF Licensed(Free);
//VipInterface iEIO_AlgCalc_10               implements oEIO, oPrmTreeOwner_CF Licensed(Free);
//VipInterface iEIO_AlgCalc_11               implements oEIO, oPrmTreeOwner_CF Licensed(Free);
//VipInterface iEIO_AlgCalc_12               implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_AlgCalc_13               implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_AlgCalc_14               implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_AlgCalc_15               implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_AlgCalc_16               implements oEIO, oPrmTreeOwner_CF Licensed(Free);
//VipInterface iEIO_AlgCalc_17               implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_AlgCalc_18               implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_AlgCalc_19               implements oEIO, oPrmTreeOwner_CF Licensed(Free);
//VipInterface iEIO_AlgCalc_2                implements oEIO, oPrmTreeOwner_CF Licensed(Free);
//VipInterface iEIO_AlgCalc_20               implements oEIO, oPrmTreeOwner_CF Licensed(Free);
//VipInterface iEIO_AlgCalc_200              implements oEIO, oPrmTreeOwner_CF Licensed(Free);
//VipInterface iEIO_AlgCalc_201              implements oEIO, oPrmTreeOwner_CF Licensed(Free);
//VipInterface iEIO_AlgCalc_202              implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_AlgCalc_203              implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_AlgCalc_204              implements oEIO, oPrmTreeOwner_CF Licensed(Free);
//VipInterface iEIO_AlgCalc_205              implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_AlgCalc_21               implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_AlgCalc_22               implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_AlgCalc_220              implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_AlgCalc_24               implements oEIO, oPrmTreeOwner_CF Licensed(Free);
//VipInterface iEIO_AlgCalc_25               implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_AlgCalc_255              implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_AlgCalc_26               implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_AlgCalc_27               implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_AlgCalc_28               implements oEIO, oPrmTreeOwner_CF Licensed(Free);
//VipInterface iEIO_AlgCalc_29               implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_AlgCalc_3                implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_AlgCalc_303              implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_AlgCalc_309              implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_AlgCalc_31               implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_AlgCalc_32               implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_AlgCalc_33               implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_AlgCalc_36               implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_AlgCalc_37               implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_AlgCalc_38               implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_AlgCalc_39               implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_AlgCalc_4                implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_AlgCalc_40               implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_AlgCalc_41               implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_AlgCalc_42               implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_AlgCalc_44               implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_AlgCalc_48               implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_AlgCalc_5                implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_AlgCalc_50               implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_AlgCalc_52               implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_AlgCalc_56               implements oEIO, oPrmTreeOwner_CF Licensed(Free);
//VipInterface iEIO_AlgCalc_6                implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_AlgCalc_63               implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_AlgCalc_67               implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_AlgCalc_7                implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_AlgCalc_70               implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_AlgCalc_71               implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_AlgCalc_8                implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_AlgCalc_83               implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_AlgCalc_84               implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_AlgCalc_9                implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_AlgCalc_95               implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_AlgCalc_96               implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_AlgCalc_99               implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_AlgCalcUserFunc          implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_AlgFld_7001              implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_AlgFld_7002              implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_AlgFld_7003              implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_AlgFld_7004              implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_AlgFld_7008              implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_AlgFld_7009              implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_AlgFld_7010              implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_AlgFld_7015              implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_AlgFld_7018              implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_AlgFld_7019              implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_AlgFld_7029              implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_AlgFld_7031              implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_AlgFld_7034              implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_AlgGroup                 implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_AlgJS                    implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_AlgView                  implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_An                       implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_Appointment              implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_AttrNam                  implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_BalansM                  implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_Bank                     implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_BaseDoc                  implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_BaseUnitSHR              implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_BazRas                   implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_BillObor_PB              implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_BillObor_Smet            implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_Box                      implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_Budjet                   implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_BuhSchet                 implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_CAD_ConstrSpecif         implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_CAD_Dept                 implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_CAD_Equip                implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_CAD_GrEq                 implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_CAD_KatMarsh             implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_CAD_MarkEq               implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_CAD_MC                   implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_CAD_MnfOper              implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_CAD_Params               implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_CAD_Person               implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_CAD_Profession           implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_CAD_SpPart               implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_CAD_StZatr               implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_CAD_UnitMsr              implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_CalcObj                  implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_Calendar                 implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_CalPlan                  implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_CauseOut                 implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_CauseOutPension          implements oEIO, oPrmTreeOwner_CF Licensed(Free);
#ifdef __DSD__
VipInterface iEIO_CESDoc                   implements oEIO, oPrmTreeOwner_CF Licensed(Free);
#endif
VipInterface iEIO_Citizenship              implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_City                     implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_ComplMC                  implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_CorpoBalance             implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_CorpoDelivery            implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_CorpoManuf               implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_CorpoNeed                implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_Country                  implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_Currency                 implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_DiplQual                 implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_DiplSpec                 implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_DocNastrHdrKS            implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_DocNastrHdrPS            implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_DocNastrHdrPS_T          implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_DocNastrMarsh            implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_DocNastrMarsh_T          implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_DocNastrMnfOper          implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_DocNastrMnfOper_T        implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_DocSetCorpoBalance       implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_DocSetCorpoDelivery      implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_DocSetCorpoManuf         implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_DocSetCorpoNeed          implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_DocSetMnfZakaz           implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_DocSetNeedMt             implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_DocSetNeedTr             implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_DocSetNeedEq             implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_DocSetOPZ                implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_DocSetPlan               implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_DocSetPlanOper           implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_DocSetPlanSb             implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_DocSetPlanSnab           implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_DocSetPlanSvod           implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_Dogovor                  implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_DopEd                    implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_Driver                   implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_DSOrLimitCR              implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_ED                       implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_EIExpSet                 implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_EIImpSet                 implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_ElemCTL                  implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_EqGroup                  implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_EventProt                implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_FamilyStatus             implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_FormsDef                 implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_Formula                  implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_FoundationOut            implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_FpAllIndex               implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_FpArea                   implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_FpCmpTune                implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_FpCmpTuneAnBud           implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_FpCO                     implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_FpPeriod                 implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_FpRasp                   implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_FpRelOb                  implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_FpStBud                  implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_FpTForm                  implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_FpVariant                implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_FpTPer                   implements oEIO, oPrmTreeOwner_CF Licensed(Free);
#ifdef __TranspGPS__
VipInterface iEIO_GPSWayBill               implements oEIO, oPrmTreeOwner_CF Licensed(Free);
#end
VipInterface iEIO_Grafik                   implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_Granit                   implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_GrNal                    implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_GrObj                    implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_GroupParty               implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_GrpAn                    implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_GrpDisablement           implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_GrpMC                    implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_GrpMnDoc                 implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_GrPodr                   implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_GrPrice                  implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_GrpUsl                   implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_HashAn                   implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_Hdr_KS                   implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_Hdr_PS                   implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_Hdr_PS_T                 implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_HozOper                  implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_Indent                   implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_InterfSys_10001          implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_InterfSys_10005          implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_InterfSys_10007          implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_InterfSys_10008          implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_InterfSys_10009          implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_InterfSys_10012          implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_InterfSys_10013          implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_KaElem                   implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_KatAbbr                  implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_KatBank                  implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_KatMark                  implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_KatMarsh                 implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_KatMarsh_T               implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_KatNotes                 implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_KatProiz                 implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_KatSopr                  implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_KatStroy                 implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_KatTexn                  implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_KatZakT                  implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_KatVidD                  implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_KAU                      implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_KaWork                   implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_KindWork                 implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_KLPrice                  implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_KLSkidka                 implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_KoefChange               implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_KTObjRem                 implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_LFilters                 implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_LZK                      implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_LotStat                  implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_MarAvt                   implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_MarPunkt                 implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_MaskMC                   implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_MaskUsl                  implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_MC                       implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_MDADoc                   implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_MDADocType               implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_MDAOptProp               implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_MDATmplDoc               implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_MikLst                   implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_MinRazr                  implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_MnAnal                   implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_MnfBalance               implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_MnfGroup                 implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_MnfOper                  implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_MnfOper_T                implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_MnfOrderIn               implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_MnfOrderOut              implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_MnfReport                implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_MnfStrc                  implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_MnfZakaz                 implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_MOL                      implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_Morale                   implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_MoveCell                 implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_NaborSC                  implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_Nalog                    implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_Nationality              implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_Nazna                    implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_NeedEq                   implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_NeedMt                   implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_NeedTr                   implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_ObjAcct                  implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_ObjAcctInPos             implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_ObjAcctOutPos            implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_ObjRem                   implements oEIO, oPrmTreeOwner_CF Licensed(Free);
#ifdef __DSD__
VipInterface iEIO_OCSDoc                   implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_OCSPos                   implements oEIO, oPrmTreeOwner_CF Licensed(Free);
#endif
VipInterface iEIO_OKVED                    implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_Org                      implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_OS                       implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_OsAlg_15                 implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_OsAlg_16                 implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_OsAlg_1015               implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_OsAlg_1016               implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_OsAlg_17                 implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_OsAlg_18                 implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_OsAlg_200                implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_OsAlg_1515               implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_OtpEd                    implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_Params                   implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_Party                    implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_PayerCategory            implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_Payment                  implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_PaymentOrder             implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_PerOS_ShKoef             implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_Person                   implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_Plan                     implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_PlanOper                 implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_PlanSb                   implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_PlanSnab                 implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_PlansSch                 implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_PlanSvod                 implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_Podr                     implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_Prazd                    implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_Prior                    implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_PriorLnk                 implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_Profession               implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_PrStage                  implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_PutLst                   implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_RailWay                  implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_Rank                     implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_RateList                 implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_ReglamentDocState        implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_ReglamentDocTemplate     implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_ReglamentPosState        implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_ReglamentPosTemplate     implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_ReglamentRsvOperState    implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_ReglamentRsvOperTemplate implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_ResHr                    implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_ResOtgr                  implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_ResPrice                 implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_RltTemplate              implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_RoleAn                   implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_RoleRARS                 implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_RTmpl                    implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_Sertific                 implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_SFilters                 implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_ShabSmet                 implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_ShbUsl                   implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_Shipment                 implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_SisOpl                   implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_SklOrderIn               implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_SklOrderOut              implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_Smet                     implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_SpBalans                 implements oEIO, oPrmTreeOwner_CF Licensed(Free);
#ifdef __DSD__
VipInterface iEIO_SpCES                    implements oEIO, oPrmTreeOwner_CF Licensed(Free);
#endif
VipInterface iEIO_SpPart                   implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_SrcComplete              implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_StatCalc                 implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_Strax                    implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_StraxSumm                implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_StBudjet                 implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_StdEducation             implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_StShab                   implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_StZatr                   implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_SxemaRas                 implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_TarStav                  implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_TipObj                   implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_TipOtg                   implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_TipPut                   implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_TipStop                  implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_Toplivo                  implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_Trailer                  implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_Transp                   implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_TypeMC                   implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_TypeZatr                 implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_TypPrice                 implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_UDeskRep                 implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_UDeskRep_G               implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_UDeskRep_Pers            implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_UDeskRep_Pers_G          implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_UDeskRep_Pers_S          implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_UDeskRep_Plan_1002       implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_UDeskRep_Plan_1003       implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_UDeskRep_Plan_1011       implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_UDeskRep_Qr              implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_UDeskRep_RepGroup        implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_UDeskRep_RepGrSrt        implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_UDeskRep_S               implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_UDeskRep_StS             implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_UDeskRep_StS_G           implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_UDeskRep_StS_S           implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_UGrRepPl                 implements oEIO, oPrmTreeOwner_CF Licensed(Free);
#ifdef __DSD__
VipInterface iEIO_UKSConsignee             implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_UKSSSOAlbumPart          implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_UKSSupplyMode            implements oEIO, oPrmTreeOwner_CF Licensed(Free);
#endif
VipInterface iEIO_University               implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_User                     implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_Usl                      implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_UserAn                   implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_UserGal                  implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_UserRARS                 implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_VarAnKol                 implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_VarCalc                  implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_VidMove                  implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_VidObj                   implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_VidRem                   implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_ViewCalc                 implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_vPlan                    implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_WayMove                  implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_WorkPattern              implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_WorkPlaceRARS            implements oEIO, oPrmTreeOwner_CF Licensed(Free);
VipInterface iEIO_WorkType                 implements oEIO, oPrmTreeOwner_CF Licensed(Free);

#endif

//******************************************************************************
// Описание ObjInterface oEIOClt_CF
#ifndef __Def_EIOClt_CF__ // \
#include EIOClt_CF.vih    //  нужно обязательно для обхода рекурсивной вложенности файлов EIO.vih, EIOClt_CF.vih
#endif                    // /
