//******************************************************************************
//                                                      (c) корпорация ГАЛАКТИКА
// ГАЛАКТИКА 7.1 Производственный контур/Спецификации продуктов
//               объектный интерфейс редактирования параметров объектов модуля
//******************************************************************************


#ifndef __OIPARED_VIH
#define __OIPARED_VIH

#ifdef ComponentVersion
#component "M_TPP"
#end

ObjInterface oiParEd; forward;

#include oiParSrv.vih
#include GetKAU.vih
#ifndef __OINORMED_VIH
#include oiNormEd.vih
#endif

type
// данные о параметре:
  rParData = record
               wResult: word;
               cParRec: comp;
               sValue : string;
               sDefVal: string;
               sName  : string;
               wPoint : word;
             end;

// Параметры операции, ресурсов
#doc
объектный интерфейс редактирования параметров(операций, ресурсов) объектов
модуля</brief>
#end
ObjInterface oiParEd;

#doc
установка владельца параметра</brief>
#end
  function SetNormObj(wObject: word; cObject: comp): integer;

#doc
установка ед. нормирования такой как у владельца</brief>
#end
  function SetNormEd(dNormEd: double; cNormEd: comp): integer;

#doc
установка ед. нормирования по умолчанию</brief>
#end
  function SetDefNormEd(dNormEd: double; cNormEd: comp): integer;

#doc
установка мастер-записи и владельца значений параметров</brief>:<br>
<I>cOwner</I> - группа параметров
<I>wMaster, cMaster</I> - тип и ключ мастер-записи
<I>wObject, cObject</I> - тип и ключ владельца
#end
   function SetObjectEx(cOwner: comp; wMaster: word; cMaster: comp; wObject: word; cObject: comp): integer;

#doc
установка владельца значений параметров</brief>:<br>
<I>cOwner</I> - группа параметров
<I>wObject, cObject</I> - тип и ключ владельца
#end
   function SetObject(cOwner: comp; wObject: word; cObject: comp): integer;

#doc
получение владельца значений параметров</brief>:<br>
<I>cOwner</I> - группа параметров
<I>wObject, cObject</I> - тип и ключ владельца
#end
  function GetObject(var cOwner: comp; var wObject: word; var cObject: comp): integer;

#doc
копирование значений параметров владельца</brief>:<br>
<I>wObject, cObject</I> - тип и ключ нового владельца
<I>UpdateOn</I> - не используется
#end
   function xCopyToObj(wObject: word; cObject: comp; UpdateOn: boolean): integer;

#doc
удаление значений параметров владельца</brief>:<br>
<I>wObject, cObject</I> - тип и ключ владельца
#end
   function xDelObj(wObject: word; cObject: comp): integer;

#doc
установка мастер-записи значений параметров</brief>:<br>
<I>wMaster, cMaster</I> - тип и ключ мастер-записи
#end
   function SetMaster(wMaster: word; cMaster: comp): integer;

#doc
получение мастер-записи значений параметров</brief>:<br>
<I>wMaster, cMaster</I> - тип и ключ мастер-записи
#end
  function GetMaster(var wMaster: word; var cMaster: comp): integer;

#doc
привязка значений параметров текущего владельца к мастер-записи</brief>:<br>
<I>wMaster, cMaster</I> - тип и ключ мастер-записи
<I>UpdateOn</I> - не используется
#end
   function xObjToMaster(wMaster: word; cMaster: comp; FromMaster: boolean): integer;

#doc
освобождение значений параметров текущего владельца от мастер-записи</brief>:<br>
<I>wMaster, cMaster</I> - тип и ключ мастер-записи
#end
   function xDelMaster(wMaster: word; cMaster: comp): integer;

#doc
получение nRec текущей записи Params</brief>
#end
  function GetCurRecord: comp;

#doc
выполнить формулу</brief>
#end
  procedure Recalc;

#doc
вычислить значения формул</brief>
#end
  procedure RecalcAll;

#doc
передача события что надо вычислить значения формул</brief>
#end
  event procedure xRecalc;

#doc
очистить ссылки на объекты</brief>
#end
  procedure FreeLinks;

#doc
отображение требуемых норм в заисимости от вида норм <I>wViewMode</I></brief>
#end
  procedure SetViewMode(wViewMode: word);

#doc
обновить рабочую расценку</brief>
#end
  function UpdateJobTarif: boolean;

#doc
установка значения параметра по коду назначения</brief>:<br>
<I>wAbbrCode</I> - код назначения параметра
<I>sValue</I>    - новое значение
#end
   function SetxParams(wAbbrCode: word; sValue: string): integer;

#doc
получение значения параметра по коду назначения</brief>:<br>
<I>wAbbrCode</I> - код назначения параметра
<I>sValue</I>    - значение параметра
<I>cParam</I>    - ключ параметра
#end
  function GetxParams(wAbbrCode: word; var sValue: string; var sDefValue: string; var cParam: comp): integer;

#doc
получение значения параметра по коду назначения</brief>:<br>
<I>wAbbrCode</I> - код назначения параметра
<I>sValue</I>    - значение параметра
#end
  function GetxParamsName(wAbbrCode: word; var sValue: string): integer;

#doc
получение значения параметра через структуру по коду назначения</brief>:<br>
<I>wAbbrCode</I> - код назначения параметра
#end
  function GetxParamsEx(wAbbrCode: word): rParData;

#doc
установка режима доступа к параметрам</brief>
#end
  procedure SetMode(wMode: word; wValue: word);

//  property State: integer;
#doc
получить состояние</brief>
#end
  function GetState: integer;

//  property KAUObj: ObjGetKAU;
#doc
получить ссылку на объект КАУ</brief>
#end
  function GetKAUObj: ObjGetKAU;

//  property ParSrv: oiParSrv;
#doc
получить ссылку на объект работы с таблицей значений параметров</brief>
#end
  function GetParSrv: oiParSrv;
//  property OwnerNorm: oiNormEd;

#doc
установка нового владельца объекта норм</brief>
#end
  procedure SetOwnerNorm(Value: oiNormEd);

#doc
получить ссылку на владельца объекта норм</brief>
#end
  function GetOwnerNorm: oiNormEd;

//  property xParEd: oiParEd;
#doc
установка нового объекта редактирования параметров</brief>
#end
  procedure SetxParEd(NewValue: oiParEd);
//  procedure FreexParEd;
//  function GetxParEd: oiParEd;
end; // oiParEd

#endif  // __OIPARED_VIH