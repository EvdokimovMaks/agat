//******************************************************************************
//                                                      (c) корпорация ГАЛАКТИКА
// ГАЛАКТИКА 7.1 Производственный контур/Спецификации продуктов
//               объект - сервис работы с таблицей значений параметров
//******************************************************************************


#ifndef __OIPARSRV_VIH
#define __OIPARSRV_VIH

#ifdef ComponentVersion
#component "M_TPP"
#end

ObjInterface oiParSrv; forward;
#ifndef __TYPETBL_VPP
#include typetbl.inc
#endif //__TYPETBL_VPP
#ifndef __STECK_VIN
#include Steck.vin
#endif //STECK_VIN

#doc
объект - сервис работы с таблицей значений параметров</brief>
#end
ObjInterface oiParSrv; // объект для работы со значениями параметров

#doc
установка мастер-записи и владельца значений параметров</brief>:<br>
<I>wMaster, cMaster</I> - тип и ключ мастер-записи
<I>wObject, cObject</I> - тип и ключ владельца
#end
  function SetObjectEx(wMaster: word; cMaster: comp; wObject: word; cObject: comp): integer;

#doc
установка владельца значений параметров</brief>:<br>
<I>wObject, cObject</I> - тип и ключ владельца
#end
  function SetObject(wObject: word; cObject: comp): integer;

#doc
получение владельца значений параметров</brief>:<br>
<I>wObject, cObject</I> - тип и ключ владельца
#end
  function GetObject(var wObject: word; var cObject: comp): integer;

#doc
копирование значений параметров владельца</brief>:<br>
<I>wObject, cObject</I> - тип и ключ нового владельца
<I>UpdateOn</I> - не используется
#end
  function xCopyToObj(wObject: word; cObject: comp; UpdateOn: boolean): integer;

#doc
удаление значений параметров владельца</brief>:<br>
<I>wObject, cObject</I> - тип и ключ владельца
#end
  function xDelObj(wObject: word; cObject: comp): integer;

#doc
установка мастер-записи значений параметров</brief>:<br>
<I>wMaster, cMaster</I> - тип и ключ мастер-записи
#end
  function SetMaster(wMaster: word; cMaster: comp): integer;

#doc
получение мастер-записи значений параметров</brief>:<br>
<I>wMaster, cMaster</I> - тип и ключ мастер-записи
#end
  function GetMaster(var wMaster: word; var cMaster: comp): integer;

#doc
привязка значений параметров текущего владельца к мастер-записи</brief>:<br>
<I>wMaster, cMaster</I> - тип и ключ мастер-записи
<I>UpdateOn</I>        - не используется
#end
  function xObjToMaster(wMaster: word; cMaster: comp; FromMaster: boolean): integer;

#doc
освобождение значений параметров текущего владельца от мастер-записи</brief>:<br>
<I>wMaster, cMaster</I> - тип и ключ мастер-записи
#end
  function xDelMaster(wMaster: word; cMaster: comp): integer;

#doc
установка значения параметра</brief>:<br>
<I>wBlock</I> - номер блока параметров в группе
<I>wIndx</I>  - индекс параметра в блоке
<I>wField</I> - значение/формула параметра
<I>wType</I>  - тип значения параметра
<I>sValue</I> - новое значение параметра
#end
  function SetValue(wBlock: word; wIndx: word; wField: word; wType: word; sValue: string): integer;

#doc
получение значения параметра</brief>:<br>
<I>wBlock</I> - номер блока параметров в группе
<I>wIndx</I>  - индекс параметра в блоке
<I>wField</I> - значение/формула параметра
<I>wType</>   - тип значения параметра
#end
  function GetValue(wBlock: word; wIndx: word; wField: word; wType: word; wPointQnt: word): string;

#doc
вставка значений и формул блока параметров</brief>:<br>
<I>wBlock</I> - номер блока параметров в группе
#end
  function xInsert(wBlock: word): integer;

#doc
удаление значений и формул блока параметров</brief>:<br>
<I>wBlock</I> - номер блока параметров в группе
#end
  function xDelete(wBlock: word): integer;
//  procedure FreeLinks;
//  property State: integer;
//  function GetState: integer;
end; // oiParSrv

#endif  // __OIPARSRV_VIH
