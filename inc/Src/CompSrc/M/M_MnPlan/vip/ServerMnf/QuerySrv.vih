#ifndef __QuerySrv__
#define __QuerySrv__

#include Query.vih
#include IMnfLog.vih

/*Type
  recAvtMetod = record
    NameMetod : string;
    parName:  array[1..10] of string;
    parType:  array[1..10] of string;
    parValue: array[1..10] of string;
    countPar: integer ;
  end;
*/

Type
  Param = record
    parName  : string;
    parType  : string;
    parValue : array [1..1] of string;
  end;

Type
  InfoMetod = record
    Name : string;
    ReturnType : string;
    p: array [1..1] of Param;
  end;


ObjInterface oQuerySrv;

  property  LogMnf : IMnfLog;

  Function  GetPar(key : string ) : string;
  Function  PutPar(key : string ; value : string ) : Boolean;
  Procedure AddRezultStr ( svalue : string ; blast : boolean );
  Procedure AddRezultStrNumRow ( svalue : string ; blast : boolean ; num : LongInt);
  Procedure AddLogStr ( svalue : string ; blast : boolean );
  Procedure AddErrorStr ( svalue : string ; blast : boolean );
  Function  GetOleInterface ( sinter : string): TPtr;
  Function  init( pliOleSrv : TPtr): longint;
  Procedure SetState( pstate : string;  flag:integer );
  Function  GetState: string;
  procedure ReturnBoolean ( rez : Boolean; recMetod : InfoMetod );
  procedure ReturnInteger ( rez : Integer; recMetod : InfoMetod );
  procedure ReturnComp ( rez : comp; recMetod : InfoMetod );
  procedure ReturnWord ( rez : word; recMetod : InfoMetod );
  procedure ReturnString ( rez : String; recMetod : InfoMetod );
  procedure ReturnDouble ( rez : Double; recMetod : InfoMetod );
  procedure ReturnJArrayIQ ( rez : IQuery ; recMetod : InfoMetod );
  procedure ReturnIQuery ( rez : IQuery ; recMetod : InfoMetod );
  procedure ReturnIResultSet ( rez : IResultSet ; recMetod : InfoMetod );
  procedure ReturnIQueryType( rez : IQuery ; recMetod : InfoMetod );
  procedure ReturnError( recMetod : InfoMetod );
End;

ObjInterface IAvtInter;
  function  RunAvtMetod (recMetod : InfoMetod  ) : Boolean;
  function  InfoAvtMetod(curName: string ): InfoMetod;
  procedure SetQuerySrv(pQuerySrv : oQuerySrv);
  function  NameInter(): string;
  //function GetAvtMetod(evn:string; st :string):string;
End;

VipInterface QuerySrv Implements oQuerySrv,IAvtInter #Licensed_Free;

#endIf
