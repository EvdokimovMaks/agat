/*
 ╔═══════════════════════════════════════════════════════════════════════════╗
 ║                     (c) 2004 корпорация ГАЛАКТИКА                         ║
 ║ Проект        : ГАЛАКТИКА                                                 ║
 ║ Система       : Производственное планирование                             ║
 ║ Версия        : 7.1                                                       ║
 ║ Назначение    : Общие функции для работы со связями между объектами       ║
 ║ Ответственный : Гиль Кирилл Евгеньевич <Kirill>                           ║
 ╚═══════════════════════════════════════════════════════════════════════════╝
*/

#component "M_MnPlan"

//******************************************************************************
// Типы данных

//------------------------------------------------------------------------------
// Структура для описания шаблона связи между объектами
#ifndef __Def_TObjRltTmpl__
#define __Def_TObjRltTmpl__
Type TObjRltTmpl = record
  TypeRlt      : word;    // Тип связи между объектами
  Code         : Integer; // Код шаблона связи
  Name         : string;  // Наименование шаблона связи
  cRltGrp      : comp;    // ссылка на группу связей между объектами
  TypeSrcDoc   : word;    // Тип документов-источников
  TypeSrcDO    : word;    // Тип ДО-источника
  TypeSrcNakl  : word;    // Тип накладной-источника
  cSrcDocTmpl  : comp;    // ссылка на шаблон документа-источника
  cSrcDoc      : comp;    // ссылка на документ-источник
  TypeDstDoc   : word;    // Тип документов-приемников
  TypeDstDO    : word;    // Тип ДО-приемника
  TypeDstNakl  : word;    // Тип накладной-приемника
  cDstDocTmpl  : comp;    // ссылка на шаблон документа-приемников
  cDstDoc      : comp;    // ссылка на документ-приемника
  FindMode     : word;    // Режим поиска связанных документов-приемников
  Anal         : word;    // вкл. связанные аналитики
  nRec         : tNRec;   // ссылка на запись в БД
  NastrForNakl : word;    // настройка для накладной (в режиме предопрел. связи)
  NastrForDO   : word;    // настройка для ДО (в режиме предопрел. связи)
  NastrDatePlan: word;    // настройка даты для плана (в режиме предопрел. связи)
  NastrNumPlan : string;  // настройка номера для плана (в режиме предопрел. связи)
  PosFilt      : word;    // использовать фильтр по связанным позициям
  cPosSrcDoc   : comp;    // ссылка на позицию документа-источника
  cPosDstDoc   : comp;    // ссылка на позицию документа-приемника
End; // Type TObjRltTmpl
#end

//------------------------------------------------------------------------------
// Структура для описания связанного документа для заданного документа
#ifndef __Def_TRltDoc__
#define __Def_TRltDoc__
Type TRltDoc = record
  wLevel     : word; // Уровень узла
  TypeOwn    : word; // Тип владельца
  cOwner     : comp; // ссылка на владельца
  TypeObj    : word; // Тип связанного объекта
  cObject    : comp; // ссылка на связанный объект
  cObjRltTmpl: comp; // ссылка на шаблон связей между объектами
end; // type TRltDoc
#end

//------------------------------------------------------------------------------
// Структура для описания связанной позиции для заданной позиции для заданного документа
#ifndef __Def_TRltPosDoc__
#define __Def_TRltPosDoc__
Type TRltPosDoc = record
  cvtFindDoc: comp; // ссылка на связанный документ
  wLevel    : word; // Уровень узла
  cSpObjAcc : comp; // ссылка на SpObjAcc
  TypeOwn   : word; // Тип владельца
  cOwner    : comp; // ссылка на владельца
  TypeObj   : word; // Тип связанного объекта
  cObject   : comp; // ссылка на связанный объект
end; // type TRltPosDoc
#end

//******************************************************************************
// ObjInterface oiCmnObjRlt
#ifndef __Def_OI_CmnObjRlt__
#define __Def_OI_CmnObjRlt__
ObjInterface oiCmnObjRlt;

//------------------------------------------------------------------------------
// Контроль данных перед созданием шаблона связи между объектами.
Function ObjRltTmpl__ChkBIns(
  ardObjRltTmpl: TObjRltTmpl              // структура для шаблона сзязи между объектами.
): longint; // tsOk - если все нормально, иначе код ошибки

//------------------------------------------------------------------------------
// Создание нового шаблона связи между объектами.
Function ObjRltTmpl__Ins(
  var ardObjRltTmpl: TObjRltTmpl          // структура для шаблона связи между объектами
): longint;                               // tsOk, если все нормально, иначе - код ошибки.
                                          // Если tsOk то в поле NRec стк-ры ardObjRltTmpl записывается индентификатор созд. в БД записи

//------------------------------------------------------------------------------
// Контроль данных перед модификацией шаблона связи
Function ObjRltTmpl__ChkBUpd(
  ardObjRltTmpl: TObjRltTmpl              // структура для шаблона связи между объектами
): longint;                               // tsOk, если все нормально, иначе - код ошибки

//------------------------------------------------------------------------------
// модификация существующего шаблона связи
Function ObjRltTmpl__Upd(
  ardObjRltTmpl: TObjRltTmpl              // структура для шаблона связи между объектами
): longint;                               // tsOk, если все нормально, иначе - код ошибки

//------------------------------------------------------------------------------
// Контроль данных перед удалением шаблона связи
Function ObjRltTmpl__ChkBDel(
  acRec: comp                             // ссылка на запись шаблона связи между объектами
): longint;                               // tsOk, если успешно, иначе - код ошибки

//------------------------------------------------------------------------------
// удаление шаблона связи между объектами
Function ObjRltTmpl__Del(
  acRec: comp                             // ссылка на запись шаблона связи между объектами
): longint;                               // tsOk, если успешно, иначе - код ошибки

//------------------------------------------------------------------------------
// поиск шаблона связи между сбъктами по маске
Function FindTmpl(
  ardObjRltTmpl: TObjRltTmpl               // структура-маска для шаблона связи, для кот. в БД будет производится поиск только тех связей
                                           // между объктами, для кот. совпадают значения ненулевых(или непустых) полей стр-ры ardObjRltTmpl
                                           // Все найденные шаблоны связи между объектами, удовл. маске ardObjRltTmpl, сохр. в буфере поиска
                                           // (временной таблице), принадл. объекту класса oiCmnObjRlt, в виде ссылок на шаблоны связи
                                           // между объектами, Если ни одной подход. записи не будет найдено, то буфер поиска будет пустым.
                                           // Для обработки найден. записей должны использ. функции навигации по буферу поиска:
                                           // BufTmpl_GetFirst, BufTmpl_GetLast, BufTmpl_GetNext, BufTmpl_GetPrev.
): boolean;                                // True, если найдена хотя бы 1 запись, иначе - False

//------------------------------------------------------------------------------
// получение первой записи шаблона связи между объектами в буфере, заполненном после выполнения функции FindTmpl
Function BufTmpl_GetFirst(
  var ardObjRltTmpl: TObjRltTmpl          // структура для шаблона связи между объектами
): longint;                               // tsOk, если успешно, иначе - код ошибки

//------------------------------------------------------------------------------
// получение последней записи шаблона связи между объектами в буфере, заполненном после выполнения функции FindTmpl
Function BufTmpl_GetLast(
  var ardObjRltTmpl: TObjRltTmpl          // структура для шаблона связи между объектами
): longint;                               // tsOk, если успешно, иначе - код ошибки

//------------------------------------------------------------------------------
// получение следующей записи шаблона связи между объектами в буфере, заполненном после выполнения функции FindTmpl
Function BufTmpl_GetNext(
  var ardObjRltTmpl: TObjRltTmpl          // структура для шаблона связи между объектами
): longint;                               // tsOk, если успешно, иначе - код ошибки

//------------------------------------------------------------------------------
// получение предыдущей записи шаблона связи между объектами в буфере, заполненном после выполнения функции FindTmpl
Function BufTmpl_GetPrev(
  var ardObjRltTmpl: TObjRltTmpl          // структура для шаблона связи между объектами
): longint;                               // tsOk, если успешно, иначе - код ошибки

//------------------------------------------------------------------------------
// получ. кол-ва записей в буфере, заполненном после выполнения функции FindTmpl
Function BufTmpl_RecCount: longint;       // кол-ко записей в буфере

//------------------------------------------------------------------------------
// Создание связи между объектами
Function CreateObjRlt(
  awKAUSrcObj: word;                      // КАУ объекта-источника
  acSrcObj: comp;                         // ссылка на объект-источ.
  awKAUDstObj: word;                      // КАУ объекта-приемн.
  acDstObj: comp;                         // ссылка на объект-приемн.
  ardObjRltTmpl: TObjRltTmpl              // структура для шаблона связи между объектами
): longint;                               // tsOk, если успешно, иначе - код ошибки

//------------------------------------------------------------------------------
// поиск связанных документов для заданного документа согласно заданному истоцнику определения связей межд. объектами
// (шаблону связей или группе связей между объектами)
Function FindRltDocs(
  awMode: word;                           // режим поиска связанных документов (0-по исх., 1-по вх.) для док. awTypeDoc, acDoc.
  awTypeDoc: word;                        // тип заданного документа
  acDoc: comp;                            // ссылка на заданный документ
  awTypeRDS: word;                        // вид источника определения связей между объектами(0-шаблон связей, 1-группа связей)
  acRltDS: comp;                          // ссылка на источник определения связи между объектами
                                          // согласно кот. будет производится поиск связанных док-ов для док. awTypeDoc, acDoc.
  aiUpLevel: integer;                     // верхний уровень (если -1, то верхний уровень не ограничен)
                                          // Все найденные документы, заданным условиям, сохр. в буфере поиска
                                          // (временной таблице), принадл. объекту класса oiCmnObjRlt, в виде ссылок на записи док-ов.
                                          // Если ни одной подход. записи не будет найдено, то буфер поиска будет пустым.
                                          // Для обработки найден. записей должны использ. функции навигации по буферу поиска:
                                          // BufRD_GetFirst, BufRD_GetLast, BufRD_GetNext, BufRD_GetPrev.
  awVisualMsg: word                       // выдавать сообщения об ошибках (0 - нет, 1 - да)
): boolean;                               // True, если найдена хотя бы 1 запись, иначе - False

//------------------------------------------------------------------------------
// функция для "выделения" пути позиции(первого уровня)
Function FindPathOfPosition(
  awTypeOwn: word;                        // тип позиции
  acOwner: comp                           // ссылка на позицию
): longint;                               // уровень до которого позиция отслежена, если успешно; иначе - 0

//------------------------------------------------------------------------------
// получение первой позиции в буфере "помеченной" после выполнения FindPathOfPosition на текущем уровне
Function BufPosSpecial_GetFirst(
  var ardRltPosDoc: TRltPosDoc            // структура для связанной позиции
): longint;                               // tsOk, если успешно, иначе - код ошибки

//------------------------------------------------------------------------------
// получение следующей позиции в буфере "помеченной" после выполнения FindPathOfPosition на текущем уровне
Function BufPosSpecial_GetNext(
  var ardRltPosDoc: TRltPosDoc            // структура для связанной позиции
): longint;                               // tsOk, если успешно, иначе - код ошибки

//------------------------------------------------------------------------------
// получение первого связанного документа в буфере, заполненном после выполнения функции FindRltDocs
Function BufRD_GetFirst(
  awTypeOwn: word;                        // тип владельца
  acOwner: comp;                          // ссылка на владельца
  var ardRltDoc: TRltDoc                  // структура для связанного документа
): longint;                               // tsOk, если успешно, иначе - код ошибки

//------------------------------------------------------------------------------
// получение последнего связанного документа в буфере, заполненном после выполнения функции FindRltDocs
Function BufRD_GetLast(
  awTypeOwn: word;                        // тип владельца
  acOwner: comp;                          // ссылка на владельца
  var ardRltDoc: TRltDoc                  // структура для связанного документа
): longint;                               // tsOk, если успешно, иначе - код ошибки

//------------------------------------------------------------------------------
// получение следующего связанного документа в буфере, заполненном после выполнения функции FindRltDocs
Function BufRD_GetNext(
  awTypeOwn: word;                        // тип владельца
  acOwner: comp;                          // ссылка на владельца
  var ardRltDoc: TRltDoc                  // структура для связанного документа
): longint;                               // tsOk, если успешно, иначе - код ошибки

//------------------------------------------------------------------------------
// получение предыдущего связанного документа в буфере, заполненном после выполнения функции FindRltDocs
Function BufRD_GetPrev(
  awTypeOwn: word;                        // тип владельца
  acOwner: comp;                          // ссылка на владельца
  var ardRltDoc: TRltDoc                  // структура для связанного документа
): longint;                               // tsOk, если успешно, иначе - код ошибки

//------------------------------------------------------------------------------
// получение кол-ва документов в буфере, заполненном после выполнения функции FindRltDocs
Function BufRD_RecCount(
  awTypeOwn: word;                        // тип владельца
  acOwner: comp;                          // ссылка на владельца
  aiLevel: integer                        // уровень (если -1, то для всех уровней)
) : longint;       // кол-ко записей в буфере

//------------------------------------------------------------------------------
// получение первой связанной позиции без привязки к текущему связ. документу
Function BufPos_GetFirst(
  awTypeOwn: word;                        // тип владельца
  acOwner: comp;                          // ссылка на владельца
  var ardRltPosDoc: TRltPosDoc            // структура для связанного позиции
): longint;                               // tsOk, если успешно, иначе - код ошибки

//------------------------------------------------------------------------------
// получение следующей связанной позиции без привязки к текущему связ. документу
Function BufPos_GetNext(
  awTypeOwn: word;                        // тип владельца
  acOwner: comp;                          // ссылка на владельца
  var ardRltPosDoc: TRltPosDoc            // структура для связанного позиции
): longint;                               // tsOk, если успешно, иначе - код ошибки

//------------------------------------------------------------------------------
// получение первой связанной позиции для текущего связанного документа в буфере, заполненном после выполнения функции FindRltDocs
Function BufPosOfRD_GetFirst(
  awTypeOwn: word;                        // тип владельца
  acOwner: comp;                          // ссылка на владельца
  var ardRltPosDoc: TRltPosDoc            // структура для связанного позиции
): longint;                               // tsOk, если успешно, иначе - код ошибки

//------------------------------------------------------------------------------
// получение последней связанной позиции для текущего связанного документа в буфере, заполненном после выполнения функции FindRltDocs
Function BufPosOfRD_GetLast(
  awTypeOwn: word;                        // тип владельца
  acOwner: comp;                          // ссылка на владельца
  var ardRltPosDoc: TRltPosDoc            // структура для связанного позиции
): longint;                               // tsOk, если успешно, иначе - код ошибки

//------------------------------------------------------------------------------
// получение следующей связанной позиции для текущего связанного документа в буфере, заполненном после выполнения функции FindRltDocs
Function BufPosOfRD_GetNext(
  awTypeOwn: word;                        // тип владельца
  acOwner: comp;                          // ссылка на владельца
  var ardRltPosDoc: TRltPosDoc            // структура для связанного позиции
): longint;                               // tsOk, если успешно, иначе - код ошибки

//------------------------------------------------------------------------------
// получение предыдущей связанной позиции для текущего связанного документа в буфере, заполненном после выполнения функции FindRltDocs
Function BufPosOfRD_GetPrev(
  awTypeOwn: word;                        // тип владельца
  acOwner: comp;                          // ссылка на владельца
  var ardRltPosDoc: TRltPosDoc            // структура для связанного позиции
): longint;                               // tsOk, если успешно, иначе - код ошибки

//------------------------------------------------------------------------------
// получение кол-ва позиций для текущего связанного документа в буфере, заполненном после выполнения функции FindRltDocs
Function BufPosOfRD_RecCount(
  awTypeOwn: word;                        // тип владельца
  acOwner: comp                           // ссылка на владельца
) : longint;                              // кол-ко записей в буфере

//------------------------------------------------------------------------------
// получение кол-ва шаблонов в группе
Function CountTemplatesInGroup(
  acGroup: comp                           // ссылка на группу
) : longint;                              // кол-ко шаблонов

//------------------------------------------------------------------------------
// получение максимального уровня для найденных связанных документов
Function GetMaxDocLevel: longint;        // кол-ко шаблонов

//------------------------------------------------------------------------------
// установить текущий уровень (навигация без указания владельца будет вестись только по этому уровню)
Procedure SetCurrentLevel(awLevel: word);  // уровень

//------------------------------------------------------------------------------
// снять ограничение на уровень (навигация без указания владельца будет вестись по всем уровням)
Procedure ClearCurrentLevel;

End; // ObjInterface oiCmnObjRlt

VipInterface iCmnObjRlt implements oiCmnObjRlt Licensed(Free);

#endif
