// =============================================================================
//                                                     (c)  корпорация Галактика
// Галактика 7.11
// Описание интерфейса-объекта "Общие функции для MRP-расчетов"
// =============================================================================

#include ListOutP.vih
#include ListNormDoc.vih
#include ListAn.vih

#component "M_MnPlan"

#ifndef __Def_oiCmnMRP__
#define __Def_oiCmnMRP__

//==============================================================================
// Таблицы в памяти

//------------------------------------------------------------------------------
// MRP-группа расчета
Table STRUCT MRPGrp
(
  Nrec     : comp,      // Идентификатор строки (код MRP-группы)
  cMainGrp : comp,      // Ссылка на верхнюю MRP-группу
  cParent  : comp,      // Ссылка на родительскую MRP-группу
  PlanLevel: word,      // Уровень планирования
  dtQuery  : date,      // Дата запроса/наличия
  dttQuery : _DateTime, // Дата-время запроса/наличия
  wPriority: word,      // Приоритет
  wState   : word,      // Состояние группы:
                        //   0     - не рассчитывалась
                        //   1     - рассчитана
                        //   65535 - на удаление
  wSign    : word       // Признак группы (0-общая, 1-индивидуальная)
)
With Index
(
  MRPGrp01 = Nrec(Unique, Surrogate, Journal),
  MRPGrp02 = dttQuery + wSign,
  MRPGrp03 = cParent + dttQuery + wSign,
  MRPGrp04 = cMainGrp + cParent + dttQuery + wSign,
  MRPGrp05 = dtQuery + wSign,
  MRPGrp06 = cParent + dtQuery + wSign,
  MRPGrp07 = cMainGrp + cParent + dtQuery + wSign,
  MRPGrp08 = PlanLevel + dttQuery + wSign
);

//------------------------------------------------------------------------------
// Ссылка на документ-норму для MRP-группы
Table STRUCT MRPNormDoc
(
  Nrec      : comp, // Идентификатор строки
  cMainGrp  : comp, // Ссылка на верхнюю MRP-группу
  cMRPGrp   : comp, // Ссылка на MRP-группу
  KAUDoc    : word, // КАУ документа
  cDoc      : comp, // Ссылка на документ
  dCountNorm: double// Количество норм (коэффициент пересчета)
)
With Index
(
  MRPNormDoc01 = Nrec(Unique, Surrogate, Journal),
  MRPNormDoc02 = cMRPGrp + KAUDoc + cDoc,
  MRPNormDoc03 = cMainGrp + cMRPGrp + KAUDoc + cDoc
);

/*
//------------------------------------------------------------------------------
// MRP-ресурс
Table STRUCT MRPRes
(
  Nrec        : comp,   // Идентификатор строки
  cMainGrp    : comp,   // Ссылка на верхнюю MRP-группу
  cMRPGrp     : comp,   // Ссылка на MRP-группу
  wPriority   : word,   // Приоритет ресурса
  //dtQuery     : date,   // Дата запроса/расчета
  KAURes      : word,   // КАУ ресурса
  cRes        : comp,   // Ссылка на ресурс
  wTypeUM     : word,   // Тип единицы измерения (0 - KatOtpEd, 1 - временная)
  cUnitMsr    : comp,   // Ссылка на единицу измерения (либо код временной ЕИ)
  dPlanCnt    : double, // Плановое количество запрашиваемого/имеющегося ресурса
  dCost       : double, // Цена единицы запрашиваемого/имеющегося ресурса
  dSum        : double, // Сумма (плановая) для запрашиваемого/имеющегося ресурса
  dTtlNeed    : double, // Общая потребность/наличие запрашиваемого/имеющегося ресурса
  dPlanCmn    : double, // Плановые поступления/расход запрашиваемого/имеющегося ресурса
  dPlanAvl    : double, // Плановое наличие запрашиваемого/имеющегося ресурса
  dNetNeed    : double, // Чистая потребность/наличие запрашиваемого/имеющегося ресурса
  dOrdCount   : double, // Количество заказа запрашиваемого/имеющегося ресурса
  wRangeFindND: word    // Диапазон поиска документов-норм для ресурса:
                        //   0 - Объект планирования в заголовке
                        //   1 - Объект планирования в спецификации
                        //   2 - Объект планирования в заголовке, при отсутствии в спецификации
                        //   3 - Объект планирования в спецификации, при отсутствии в заголовке
  //KAU_ND      : word,   // КАУ предпочтительного документа-нормы
  //cNormDoc    : comp,   // Ссылка на предпочтительный документ-норму
  //wTypeNR     : word,   // Тип нормы для ресурса (0 - норма (Н), 1 -выход (В))
  //wTypeOutP   : word,   // Тип продукта выхода (0 - готовая продукция, 1 - полуфабрикаты, 2 - отходы)
  //wPosNR      : word,   // Признак местоположения ресурса в документе-норме (0-заголовок, 1-спецификация)
  //wTypeUM_NR  : word,   // Тип единицы измерения нормируемого ресурса (0 - KatOtpEd, 1 - временная)
  //cUnitMsr_NR : comp,   // Ссылка на единицу измерения нормируемого ресурса (либо код временной ЕИ)
  //dCount_NR   : double  // Количество нормируемого ресурса
)
With Index
(
  MRPRes01 = Nrec(Unique, Surrogate, Journal),
  MRPRes02 = cMRPGrp + wPriority + KAURes + cRes,
  MRPRes03 = cMRPGrp + KAURes + cRes,
  MRPRes04 = KAURes + cRes,
  MRPRes05 = cMainGrp + wPriority + KAURes + cRes,
  MRPRes06 = cMainGrp + KAURes + cRes
);

//------------------------------------------------------------------------------
// Аналитика для MRP-ресурса
Table STRUCT MRPResAn
(
  Nrec   : comp, // Идентификатор строки
  cMRPRes: comp, // Ссылка на MRP-ресурс
  cRole  : comp, // Ссылка на роль
  KAU    : word, // КАУ
  cAn    : comp  // Ссылка на аналитику
)
With Index
(
  MRPResAn01 = Nrec(Unique, Surrogate, Journal),
  MRPResAn02 = cMRPRes + cRole + KAU + cAn
);

//------------------------------------------------------------------------------
// Ссылка на заданный тип документов-норм для MRP-ресурса
Table STRUCT MRPResTND
(
  Nrec     : comp, // Идентификатор строки
  cMRPRes  : comp, // Ссылка на ресурс
  KAUDoc   : word, // КАУ документа
  wPriority: word  // Приоритет
)
With Index
(
  MRPResTND01 = Nrec(Unique, Surrogate, Journal),
  MRPResTND02 = cMRPRes + wPriority + KAUDoc
);

//------------------------------------------------------------------------------
// Ссылка на заданный документ-норму для MRP-ресурса
Table STRUCT MRPResND
(
  Nrec     : comp, // Идентификатор строки
  cMRPRes  : comp, // Ссылка на ресурс
  KAUDoc   : word, // КАУ документа
  cDoc     : comp, // Ссылка на документ
  wPriority: word  // Приоритет
)
With Index
(
  MRPResND01 = Nrec(Unique, Surrogate, Journal),
  MRPResND02 = cMRPRes + wPriority + KAUDoc
);
*/

//------------------------------------------------------------------------------
// Дата (для сохранения дат при MRP-расчете)
Table STRUCT MRPDate
(
  Dat: date // Дата
)
With Index
(
  MRPDate01 = Dat(Unique)
);

//------------------------------------------------------------------------------
// Уровень-Дата-Изделие
Table STRUCT MRPIzd
(
  Nrec      : comp, // Идентификатор строки
  wPlanLevel: word, // Уровень планирования
  wLevel    : word, // Уровень
  cTmOutIzd : comp, // Ссылка на изделие
  Dat       : date, // Дата
  DataZ     : date  // Дата запуска
)
With Index
(
  MRPIzd01 = Nrec(Unique, Surrogate, Journal),
  MRPIzd02 = wLevel + Dat + cTmOutIzd + DataZ,
  MRPIzd03 = wLevel + cTmOutIzd,
  MRPIzd04 = cTmOutIzd + Dat + DataZ,
  MRPIzd05 = Dat + DataZ,
  MRPIzd06 = wLevel + Dat + DataZ + cTmOutIzd,
  MRPIzd07 = wPlanLevel + cTmOutIzd + Dat + DataZ
);

//******************************************************************************
// ObjInterface oiCmnMRP
#doc
 Описание интерфейса-объекта "Общие функции для MRP-расчетов"</brief>
#end
ObjInterface oiCmnMRP;

//------------------------------------------------------------------------------
#doc
 Просмотр буфера MRP-расчета</brief> <br>
 Параметры: <br>
   asWindowTitle - Заголовок окна <br>
#end
Procedure ViewData(asWindowTitle: string);

//------------------------------------------------------------------------------
#doc
 Инициализация данных</brief> <br>
 Параметры: <br>
  asModule - Наименование инициализируемого модуля: <br>
    ''      : все модули <br>
    'Groups': группы и связанные документы-нормы <br>
    'Dates' : даты <br>
    'Izd'   : изделия (Уровень-Дата-Изделие) <br>
#end
Procedure InitData(asModule: string);

//------------------------------------------------------------------------------
#doc
 Переход на запись MRPGrp по Nrec'у</brief> <br>
 Параметры: <br>
   acRec - Nrec записи <br>
 Результат: <br>
   True, если успешно <br>
#end
Function GoToGrp(acRec: comp): boolean;

//------------------------------------------------------------------------------
#doc
 Чтение текущей записи MRPGrp</brief> <br>
 Параметры: <br>
   ar_MRPGrp - Запись таблицы MRPGrp <br>
 Результат: <br>
   True, если успешно <br>
#end
Function GetCurGrp(var ar_MRPGrp: type$MRPGrp): boolean;

//------------------------------------------------------------------------------
#doc
 Поиск записи MRPGrp</brief> <br>
 Параметры: <br>
   ar_MRPGrp - Запись таблицы MRPGrp <br>
 Результат: <br>
   True, если запись найдена <br>
#end
Function FindGrp(ar_MRPGrp: type$MRPGrp): boolean;

//------------------------------------------------------------------------------
#doc
 Получение первой записи MRPGrp</brief> <br>
 Параметры: <br>
   acMainGrp - Ссылка на верхнюю MRP-группу <br>
   acParent  - Ссылка на родительскую MRP-группу (учитывается, если acMainGrp = 0) <br>
   ar_MRPGrp - Запись таблицы MRPGrp <br>
 Результат: <br>
   True, если запись найдена <br>
#end
Function GetFirstGrp(acMainGrp: comp; acParent: comp; var ar_MRPGrp: type$MRPGrp): boolean;

//------------------------------------------------------------------------------
#doc
 Получение последней записи MRPGrp</brief> <br>
 Параметры: <br>
   acMainGrp - Ссылка на верхнюю MRP-группу <br>
   acParent  - Ссылка на родительскую MRP-группу (учитывается, если acMainGrp = 0) <br>
   ar_MRPGrp - Запись таблицы MRPGrp <br>
 Результат: <br>
   True, если запись найдена <br>
#end
Function GetLastGrp(acMainGrp: comp; acParent: comp; var ar_MRPGrp: type$MRPGrp): boolean;

//------------------------------------------------------------------------------
#doc
 Получение следующей записи MRPGrp относительно текущей позиции</brief> <br>
 Параметры: <br>
   acMainGrp - Ссылка на верхнюю MRP-группу <br>
   acParent  - Ссылка на родительскую MRP-группу (учитывается, если acMainGrp = 0) <br>
   ar_MRPGrp - Запись таблицы MRPGrp <br>
 Результат: <br>
   True, если запись найдена <br>
#end
Function GetNextGrp(acMainGrp: comp; acParent: comp; var ar_MRPGrp: type$MRPGrp): boolean;

//------------------------------------------------------------------------------
#doc
 Получение предыдующей записи vtGrp относительно текущей позиции</brief> <br>
 Параметры: <br>
   acMainGrp - Ссылка на верхнюю MRP-группу <br>
   acParent  - Ссылка на родительскую MRP-группу (учитывается, если acMainGrp = 0) <br>
   ar_MRPGrp - Запись таблицы MRPGrp <br>
 Результат: <br>
 True, если запись найдена <br>
#end
Function GetPrevGrp(acMainGrp: comp; acParent: comp; var ar_MRPGrp: type$MRPGrp): boolean;

//------------------------------------------------------------------------------
#doc
 Вставка записи MRPGrp</brief> <br>
 Параметры: <br>
   ar_MRPGrp - Запись MRPGrp <br>
 Результат: <br>
   tsOk, если успешно, иначе - код ошибки <br>
#end
Function MRPGrp__Ins(var ar_MRPGrp: type$MRPGrp): longint;

//------------------------------------------------------------------------------
#doc
 Обновление записи MRPGrp</brief> <br>
 Параметры: <br>
   ar_MRPGrp - Запись MRPGrp <br>
 Результат: <br>
   tsOk, если успешно, иначе - код ошибки <br>
#end
Function MRPGrp__Upd(ar_MRPGrp: type$MRPGrp): longint;

//------------------------------------------------------------------------------
#doc
 Удаление записи MRPGrp</brief> <br>
 Параметры: <br>
   acMRPGrp - Ссылка на запись MRPGrp <br>
 Результат: <br>
   tsOk, если успешно, иначе - код ошибки <br>
#end
Function MRPGrp__Del(acMRPGrp: comp): longint;

//------------------------------------------------------------------------------
#doc
 Переход на запись MRPNormDoc по Nrec'у</brief> <br>
 Параметры: <br>
   acRec - Nrec записи <br>
 Результат: <br>
   True, если успешно <br>
#end
Function GoToNormDoc(acRec: comp): boolean;

//------------------------------------------------------------------------------
#doc
 Чтение текущей записи MRPNormDoc</brief> <br>
 Параметры: <br>
   ar_MRPNormDoc - Запись таблицы MRPNormDoc <br>
 Результат: <br>
   True, если успешно <br>
#end
Function GetCurNormDoc(var ar_MRPNormDoc: type$MRPNormDoc): boolean;

//------------------------------------------------------------------------------
#doc
 Поиск записи MRPNormDoc</brief> <br>
 Параметры: <br>
   ar_MRPNormDoc - Запись таблицы MRPNormDoc <br>
 Результат: <br>
   True, если запись найдена <br>
#end
Function FindNormDoc(ar_MRPNormDoc: type$MRPNormDoc): boolean;

//------------------------------------------------------------------------------
#doc
 Получение первой записи MRPNormDoc</brief> <br>
 Параметры: <br>
   acMainGrp     - Ссылка на верхнюю MRP-группу <br>
   acMRPGrp      - Ссылка на MRP-группу (учитывается, если acMainGrp = 0) <br>
   ar_MRPNormDoc - Запись таблицы MRPNormDoc <br>
 Результат: <br>
   True, если запись найдена <br>
#end
Function GetFirstNormDoc(acMainGrp: comp; acMRPGrp: comp; var ar_MRPNormDoc: type$MRPNormDoc): boolean;

//------------------------------------------------------------------------------
#doc
 Получение последней записи MRPNormDoc</brief> <br>
 Параметры: <br>
   acMainGrp     - Ссылка на верхнюю MRP-группу <br>
   acMRPGrp      - Ссылка на MRP-группу (учитывается, если acMainGrp = 0) <br>
   ar_MRPNormDoc - Запись таблицы MRPNormDoc <br>
 Результат: <br>
   True, если запись найдена <br>
#end
Function GetLastNormDoc(acMainGrp: comp; acMRPGrp: comp; var ar_MRPNormDoc: type$MRPNormDoc): boolean;

//------------------------------------------------------------------------------
#doc
 Получение следующей записи MRPNormDoc относительно текущей позиции</brief> <br>
 Параметры: <br>
   acMainGrp     - Ссылка на верхнюю MRP-группу <br>
   acMRPGrp      - Ссылка на MRP-группу (учитывается, если acMainGrp = 0) <br>
   ar_MRPNormDoc - Запись таблицы MRPNormDoc <br>
 Результат: <br>
   True, если запись найдена <br>
#end
Function GetNextNormDoc(acMainGrp: comp; acMRPGrp: comp; var ar_MRPNormDoc: type$MRPNormDoc): boolean;

//------------------------------------------------------------------------------
#doc
 Получение предыдующей записи MRPNormDoc относительно текущей позиции</brief> <br>
 Параметры: <br>
   acMainGrp     - Ссылка на верхнюю MRP-группу <br>
   acMRPGrp      - Ссылка на MRP-группу (учитывается, если acMainGrp = 0) <br>
   ar_MRPNormDoc - Запись таблицы MRPNormDoc <br>
 Результат: <br>
   True, если запись найдена <br>
#end
Function GetPrevNormDoc(acMainGrp: comp; acMRPGrp: comp; var ar_MRPNormDoc: type$MRPNormDoc): boolean;

//------------------------------------------------------------------------------
#doc
 Вставка записи MRPNormDoc</brief> <br>
 Параметры: <br>
   ar_MRPNormDoc - Запись MRPNormDoc <br>
 Результат: <br>
   tsOk, если успешно, иначе - код ошибки <br>
#end
Function MRPNormDoc__Ins(var ar_MRPNormDoc: type$MRPNormDoc): longint;

//------------------------------------------------------------------------------
#doc
 Обновление записи MRPNormDoc</brief> <br>
 Параметры: <br>
   ar_MRPNormDoc - Запись MRPNormDoc <br>
 Результат: <br>
   tsOk, если успешно, иначе - код ошибки <br>
#end
Function MRPNormDoc__Upd(ar_MRPNormDoc: type$MRPNormDoc): longint;

//------------------------------------------------------------------------------
#doc
 Удаление записи MRPNormDoc</brief> <br>
 Параметры: <br>
   acMRPNormDoc - Ссылка на запись MRPNormDoc <br>
 Результат: <br>
   tsOk, если успешно, иначе - код ошибки <br>
#end
Function MRPNormDoc__Del(acMRPNormDoc: comp): longint;

/*
//------------------------------------------------------------------------------
#doc
 Переход на запись MRPRes по Nrec'у</brief> <br>
 Параметры: <br>
   acRec - Nrec записи <br>
 Результат: <br>
   True, если успешно <br>
#end
Function GoToRes(acRec: comp): boolean;

//------------------------------------------------------------------------------
#doc
 Чтение текущей записи MRPRes</brief> <br>
 Параметры: <br>
   ar_MRPRes - Запись таблицы MRPRes <br>
 Результат: <br>
   True, если успешно <br>
#end
Function GetCurRes(var ar_MRPRes: type$MRPRes): boolean;

//------------------------------------------------------------------------------
#doc
 Поиск записи MRPRes</brief> <br>
 Параметры: <br>
   ar_MRPRes - Запись таблицы MRPRes <br>
 Результат: <br>
   True, если запись найдена <br>
#end
Function FindRes(ar_MRPRes: type$MRPRes): boolean;

//------------------------------------------------------------------------------
#doc
 Получение первой записи MRPRes</brief> <br>
 Параметры: <br>
   acMainGrp - Ссылка на верхнюю MRP-группу <br>
   acMRPGrp  - Ссылка на MRP-группу (учитывается, если acMainGrp = 0) <br>
   ar_MRPRes - Запись таблицы MRPRes <br>
 Результат: <br>
   True, если запись найдена <br>
#end
Function GetFirstRes(acMainGrp: comp; acMRPGrp: comp; var ar_MRPRes: type$MRPRes): boolean;

//------------------------------------------------------------------------------
#doc
 Получение последней записи MRPRes</brief> <br>
 Параметры: <br>
   acMainGrp - Ссылка на верхнюю MRP-группу <br>
   acMRPGrp  - Ссылка на MRP-группу (учитывается, если acMainGrp = 0) <br>
   ar_MRPRes - Запись таблицы MRPRes <br>
 Результат: <br>
   True, если запись найдена <br>
#end
Function GetLastRes(acMainGrp: comp; acMRPGrp: comp; var ar_MRPRes: type$MRPRes): boolean;

//------------------------------------------------------------------------------
#doc
 Получение следующей записи MRPRes относительно текущей позиции</brief> <br>
 Параметры: <br>
   acMainGrp - Ссылка на верхнюю MRP-группу <br>
   acMRPGrp  - Ссылка на MRP-группу (учитывается, если acMainGrp = 0) <br>
   ar_MRPRes - Запись таблицы MRPRes <br>
 Результат: <br>
   True, если запись найдена <br>
#end
Function GetNextRes(acMainGrp: comp; acMRPGrp: comp; var ar_MRPRes: type$MRPRes): boolean;

//------------------------------------------------------------------------------
#doc
 Получение предыдующей записи MRPRes относительно текущей позиции</brief> <br>
 Параметры: <br>
   acMainGrp - Ссылка на верхнюю MRP-группу <br>
   acMRPGrp  - Ссылка на MRP-группу (учитывается, если acMainGrp = 0) <br>
   ar_MRPRes - Запись таблицы MRPRes <br>
 Результат: <br>
   True, если запись найдена <br>
#end
Function GetPrevRes(acMainGrp: comp; acMRPGrp: comp; var ar_MRPRes: type$MRPRes): boolean;

//------------------------------------------------------------------------------
#doc
 Вставка записи MRPRes</brief> <br>
 Параметры: <br>
   ar_MRPRes - Запись MRPRes <br>
 Результат: <br>
   tsOk, если успешно, иначе - код ошибки <br>
#end
Function MRPRes__Ins(var ar_MRPRes: type$MRPRes): longint;

//------------------------------------------------------------------------------
#doc
 Обновление записи MRPRes</brief> <br>
 Параметры: <br>
   ar_MRPRes - Запись MRPRes <br>
 Результат: <br>
   tsOk, если успешно, иначе - код ошибки <br>
#end
Function MRPRes__Upd(ar_MRPRes: type$MRPRes): longint;

//------------------------------------------------------------------------------
#doc
 Удаление записи MRPRes</brief> <br>
 Параметры: <br>
   acMRPRes - Ссылка на запись MRPRes <br>
 Результат: <br>
   tsOk, если успешно, иначе - код ошибки <br>
#end
Function MRPRes__Del(acMRPRes: comp): longint;

//------------------------------------------------------------------------------
#doc
 Переход на запись MRPResAn по Nrec'у</brief> <br>
 Параметры: <br>
   acRec - Nrec записи <br>
 Результат: <br>
   True, если успешно <br>
#end
Function GoToResAn(acRec: comp): boolean;

//------------------------------------------------------------------------------
#doc
 Чтение текущей записи MRPResAn</brief> <br>
 Параметры: <br>
   ar_MRPResAn - Запись таблицы MRPResAn <br>
 Результат: <br>
   True, если успешно <br>
#end
Function GetCurResAn(var ar_MRPResAn: type$MRPResAn): boolean;

//------------------------------------------------------------------------------
#doc
 Поиск записи MRPResAn</brief> <br>
 Параметры: <br>
   ar_MRPResAn - Запись таблицы MRPResAn <br>
 Результат: <br>
   True, если запись найдена <br>
#end
Function FindResAn(ar_MRPResAn: type$MRPResAn): boolean;

//------------------------------------------------------------------------------
#doc
 Получение первой записи MRPResAn</brief> <br>
 Параметры: <br>
   acMRPRes    - Ссылка на MRP-ресурс <br>
   ar_MRPResAn - Запись таблицы MRPResAn <br>
 Результат: <br>
   True, если запись найдена <br>
#end
Function GetFirstResAn(acMRPRes: comp; var ar_MRPResAn: type$MRPResAn): boolean;

//------------------------------------------------------------------------------
#doc
 Получение последней записи MRPResAn</brief> <br>
 Параметры: <br>
   acMRPRes    - Ссылка на MRP-ресурс <br>
   ar_MRPResAn - Запись таблицы MRPResAn <br>
 Результат: <br>
   True, если запись найдена <br>
#end
Function GetLastResAn(acMRPRes: comp; var ar_MRPResAn: type$MRPResAn): boolean;

//------------------------------------------------------------------------------
#doc
 Получение следующей записи MRPResAn относительно текущей позиции</brief> <br>
 Параметры: <br>
   acMRPRes    - Ссылка на MRP-ресурс <br>
   ar_MRPResAn - Запись таблицы MRPResAn <br>
 Результат: <br>
   True, если запись найдена <br>
#end
Function GetNextResAn(acMRPRes: comp; var ar_MRPResAn: type$MRPResAn): boolean;

//------------------------------------------------------------------------------
#doc
 Получение предыдующей записи MRPResAn относительно текущей позиции</brief> <br>
 Параметры: <br>
   acMRPRes    - Ссылка на MRP-ресурс <br>
   ar_MRPResAn - Запись таблицы MRPResAn <br>
 Результат: <br>
   True, если запись найдена <br>
#end
Function GetPrevResAn(acMRPRes: comp; var ar_MRPResAn: type$MRPResAn): boolean;

//------------------------------------------------------------------------------
#doc
 Вставка записи MRPResAn</brief> <br>
 Параметры: <br>
   ar_MRPResAn - Запись MRPResAn <br>
 Результат: <br>
   tsOk, если успешно, иначе - код ошибки <br>
#end
Function MRPResAn__Ins(var ar_MRPResAn: type$MRPResAn): longint;

//------------------------------------------------------------------------------
#doc
 Обновление записи MRPResAn</brief> <br>
 Параметры: <br>
   ar_MRPResAn - Запись MRPResAn <br>
 Результат: <br>
   tsOk, если успешно, иначе - код ошибки <br>
#end
Function MRPResAn__Upd(ar_MRPResAn: type$MRPResAn): longint;

//------------------------------------------------------------------------------
#doc
 Удаление записи MRPResAn</brief> <br>
 Параметры: <br>
   acMRPResAn - Ссылка на запись MRPResAn <br>
 Результат: <br>
   tsOk, если успешно, иначе - код ошибки <br>
#end
Function MRPResAn__Del(acMRPResAn: comp): longint;

//------------------------------------------------------------------------------
#doc
 Переход на запись MRPResTND по Nrec'у</brief> <br>
 Параметры: <br>
   acRec - Nrec записи <br>
 Результат: <br>
   True, если успешно <br>
#end
Function GoToResTND(acRec: comp): boolean;

//------------------------------------------------------------------------------
#doc
 Чтение текущей записи MRPResTND</brief> <br>
 Параметры: <br>
   ar_MRPResTND - Запись таблицы MRPResTND <br>
 Результат: <br>
   True, если успешно <br>
#end
Function GetCurResTND(var ar_MRPResTND: type$MRPResTND): boolean;

//------------------------------------------------------------------------------
#doc
 Поиск записи MRPResTND</brief> <br>
 Параметры: <br>
   ar_MRPResTND - Запись таблицы MRPResTND <br>
 Результат: <br>
   True, если запись найдена <br>
#end
Function FindResTND(ar_MRPResTND: type$MRPResTND): boolean;

//------------------------------------------------------------------------------
#doc
 Получение первой записи MRPResTND</brief> <br>
 Параметры: <br>
   acMRPRes     - Ссылка на MRP-ресурс <br>
   ar_MRPResTND - Запись таблицы MRPResTND <br>
 Результат: <br>
   True, если запись найдена <br>
#end
Function GetFirstResTND(acMRPRes: comp; var ar_MRPResTND: type$MRPResTND): boolean;

//------------------------------------------------------------------------------
#doc
 Получение последней записи MRPResTND</brief> <br>
 Параметры: <br>
   acMRPRes     - Ссылка на MRP-ресурс <br>
   ar_MRPResTND - Запись таблицы MRPResTND <br>
 Результат: <br>
   True, если запись найдена <br>
#end
Function GetLastResTND(acMRPRes: comp; var ar_MRPResTND: type$MRPResTND): boolean;

//------------------------------------------------------------------------------
#doc
 Получение следующей записи MRPResTND относительно текущей позиции</brief> <br>
 Параметры: <br>
   acMRPRes     - Ссылка на MRP-ресурс <br>
   ar_MRPResTND - Запись таблицы MRPResTND <br>
 Результат: <br>
   True, если запись найдена <br>
#end
Function GetNextResTND(acMRPRes: comp; var ar_MRPResTND: type$MRPResTND): boolean;

//------------------------------------------------------------------------------
#doc
 Получение предыдующей записи MRPResTND относительно текущей позиции</brief> <br>
 Параметры: <br>
   acMRPRes     - Ссылка на MRP-ресурс <br>
   ar_MRPResTND - Запись таблицы MRPResTND <br>
 Результат: <br>
   True, если запись найдена <br>
#end
Function GetPrevResTND(acMRPRes: comp; var ar_MRPResTND: type$MRPResTND): boolean;

//------------------------------------------------------------------------------
#doc
 Вставка записи MRPResTND</brief> <br>
 Параметры: <br>
   ar_MRPResTND - Запись MRPResTND <br>
 Результат: <br>
   tsOk, если успешно, иначе - код ошибки <br>
#end
Function MRPResTND__Ins(var ar_MRPResTND: type$MRPResTND): longint;

//------------------------------------------------------------------------------
#doc
 Обновление записи MRPResTND</brief> <br>
 Параметры: <br>
   ar_MRPResTND - Запись MRPResTND <br>
 Результат: <br>
   tsOk, если успешно, иначе - код ошибки <br>
#end
Function MRPResTND__Upd(ar_MRPResTND: type$MRPResTND): longint;

//------------------------------------------------------------------------------
#doc
 Удаление записи MRPResTND</brief> <br>
 Параметры: <br>
   acMRPResTND - Ссылка на запись MRPResTND <br>
 Результат: <br>
   tsOk, если успешно, иначе - код ошибки <br>
#end
Function MRPResTND__Del(acMRPResTND: comp): longint;

//------------------------------------------------------------------------------
#doc
 Переход на запись MRPResND по Nrec'у</brief> <br>
 Параметры: <br>
   acRec - Nrec записи <br>
 Результат: <br>
   True, если успешно <br>
#end
Function GoToResND(acRec: comp): boolean;

//------------------------------------------------------------------------------
#doc
 Чтение текущей записи MRPResND</brief> <br>
 Параметры: <br>
   ar_MRPResND - Запись таблицы MRPResND <br>
 Результат: <br>
   True, если успешно <br>
#end
Function GetCurResND(var ar_MRPResND: type$MRPResND): boolean;

//------------------------------------------------------------------------------
#doc
 Поиск записи MRPResND</brief> <br>
 Параметры: <br>
   ar_MRPResND - Запись таблицы MRPResND <br>
 Результат: <br>
   True, если запись найдена <br>
#end
Function FindResND(ar_MRPResND: type$MRPResND): boolean;

//------------------------------------------------------------------------------
#doc
 Получение первой записи MRPResND</brief> <br>
 Параметры: <br>
   acMRPRes    - Ссылка на MRP-ресурс <br>
   ar_MRPResND - Запись таблицы MRPResND <br>
 Результат: <br>
   True, если запись найдена <br>
#end
Function GetFirstResND(acMRPRes: comp; var ar_MRPResND: type$MRPResND): boolean;

//------------------------------------------------------------------------------
#doc
 Получение последней записи MRPResND</brief> <br>
 Параметры: <br>
   acMRPRes    - Ссылка на MRP-ресурс <br>
   ar_MRPResND - Запись таблицы MRPResND <br>
 Результат: <br>
   True, если запись найдена <br>
#end
Function GetLastResND(acMRPRes: comp; var ar_MRPResND: type$MRPResND): boolean;

//------------------------------------------------------------------------------
#doc
 Получение следующей записи MRPResND относительно текущей позиции</brief> <br>
 Параметры: <br>
   acMRPRes    - Ссылка на MRP-ресурс <br>
   ar_MRPResND - Запись таблицы MRPResND <br>
 Результат: <br>
   True, если запись найдена <br>
#end
Function GetNextResND(acMRPRes: comp; var ar_MRPResND: type$MRPResND): boolean;

//------------------------------------------------------------------------------
#doc
 Получение предыдующей записи MRPResND относительно текущей позиции</brief> <br>
 Параметры: <br>
   acMRPRes    - Ссылка на MRP-ресурс <br>
   ar_MRPResND - Запись таблицы MRPResND <br>
 Результат: <br>
   True, если запись найдена <br>
#end
Function GetPrevResND(acMRPRes: comp; var ar_MRPResND: type$MRPResND): boolean;

//------------------------------------------------------------------------------
#doc
 Вставка записи MRPResND</brief> <br>
 Параметры: <br>
   ar_MRPResND - Запись MRPResND <br>
 Результат: <br>
   tsOk, если успешно, иначе - код ошибки <br>
#end
Function MRPResND__Ins(var ar_MRPResND: type$MRPResND): longint;

//------------------------------------------------------------------------------
#doc
 Обновление записи MRPResND</brief> <br>
 Параметры: <br>
   ar_MRPResND - Запись MRPResND <br>
 Результат: <br>
   tsOk, если успешно, иначе - код ошибки <br>
#end
Function MRPResND__Upd(ar_MRPResND: type$MRPResND): longint;

//------------------------------------------------------------------------------
#doc
 Удаление записи MRPResND</brief> <br>
 Параметры: <br>
   acMRPResND - Ссылка на запись MRPResND <br>
 Результат: <br>
   tsOk, если успешно, иначе - код ошибки <br>
#end
Function MRPResND__Del(acMRPResND: comp): longint;
*/

//------------------------------------------------------------------------------
#doc
 Переход на запись MRPDate по значению</brief> <br>
 Параметры: <br>
   adtDat - Значение <br>
 Результат: <br>
   True, если успешно <br>
#end
Function GoToDate(adtDat: date): boolean;

//------------------------------------------------------------------------------
#doc
 Чтение текущей записи MRPDate</brief> <br>
 Параметры: <br>
   adtDat - Переменная для сохранения значения <br>
 Результат: <br>
   True, если успешно <br>
#end
Function GetCurDate(var adtDat: date): boolean;

//------------------------------------------------------------------------------
#doc
 Поиск записи MRPDate</brief> <br>
 Параметры: <br>
   adtDat - Значение <br>
 Результат: <br>
   True, если запись найдена <br>
#end
Function FindDate(adtDat: date): boolean;

//------------------------------------------------------------------------------
#doc
 Получение первой записи MRPDate</brief> <br>
 Параметры: <br>
   adtDat - Переменная для сохранения значения <br>
 Результат: <br>
   True, если запись найдена <br>
#end
Function GetFirstDate(var adtDat: date): boolean;

//------------------------------------------------------------------------------
#doc
 Получение последней записи MRPDate</brief> <br>
 Параметры: <br>
   adtDat - Переменная для сохранения значения <br>
 Результат: <br>
   True, если запись найдена <br>
#end
Function GetLastDate(var adtDat: date): boolean;

//------------------------------------------------------------------------------
#doc
 Получение следующей записи MRPDate относительно текущей позиции</brief> <br>
 Параметры: <br>
   adtDat - Переменная для сохранения значения <br>
 Результат: <br>
   True, если запись найдена <br>
#end
Function GetNextDate(var adtDat: date): boolean;

//------------------------------------------------------------------------------
#doc
 Получение предыдующей записи vtDate относительно текущей позиции</brief> <br>
 Параметры: <br>
   adtDat - Переменная для сохранения значения <br>
 Результат: <br>
   True, если запись найдена <br>
#end
Function GetPrevDate(var adtDat: date): boolean;

//------------------------------------------------------------------------------
#doc
 Вставка записи MRPDate</brief> <br>
 Параметры: <br>
   adtDat - Значение <br>
 Результат: <br>
   tsOk, если успешно, иначе - код ошибки <br>
#end
Function MRPDate__Ins(adtDat: date): longint;

//------------------------------------------------------------------------------
#doc
 Обновление записи MRPDate</brief> <br>
 Параметры: <br>
   adtDat - Значение <br>
 Результат: <br>
   tsOk, если успешно, иначе - код ошибки <br>
#end
Function MRPDate__Upd(adtDat: date): longint;

//------------------------------------------------------------------------------
#doc
 Удаление записи MRPDate</brief> <br>
 Параметры: <br>
   adtDat - Значение <br>
 Результат: <br>
   tsOk, если успешно, иначе - код ошибки <br>
#end
Function MRPDate__Del(adtDat: date): longint;

//------------------------------------------------------------------------------
#doc
 Переход на запись MRPIzd по Nrec'у</brief> <br>
 Параметры: <br>
   acRec - Nrec записи <br>
 Результат: <br>
   True, если успешно <br>
#end
Function GoToIzd(acRec: comp): boolean;

//------------------------------------------------------------------------------
#doc
 Чтение текущей записи MRPIzd</brief> <br>
 Параметры: <br>
   ar_MRPIzd - Запись таблицы MRPIzd <br>
 Результат: <br>
   True, если успешно <br>
#end
Function GetCurIzd(var ar_MRPIzd: type$MRPIzd): boolean;

//------------------------------------------------------------------------------
#doc
 Поиск записи MRPIzd</brief> <br>
 Параметры: <br>
   ar_MRPIzd - Запись таблицы MRPIzd <br>
 Результат: <br>
   True, если запись найдена <br>
#end
Function FindIzd(ar_MRPIzd: type$MRPIzd): boolean;

//------------------------------------------------------------------------------
#doc
 Получение первой записи MRPIzd</brief> <br>
 Параметры: <br>
   awLevel   - Уровень <br>
   adtDat    - Дата <br>
   ar_MRPIzd - Запись таблицы MRPIzd <br>
 Результат: <br>
   True, если запись найдена <br>
#end
Function GetFirstIzd(awLevel: word; adtDat: date; var ar_MRPIzd: type$MRPIzd): boolean;

//------------------------------------------------------------------------------
#doc
 Получение последней записи MRPIzd</brief> <br>
 Параметры: <br>
   awLevel   - Уровень <br>
   adtDat    - Дата <br>
   ar_MRPIzd - Запись таблицы MRPIzd <br>
 Результат: <br>
   True, если запись найдена <br>
#end
Function GetLastIzd(awLevel: word; adtDat: date; var ar_MRPIzd: type$MRPIzd): boolean;

//------------------------------------------------------------------------------
#doc
 Получение следующей записи MRPIzd относительно текущей позиции</brief> <br>
 Параметры: <br>
   awLevel   - Уровень <br>
   adtDat    - Дата <br>
   ar_MRPIzd - Запись таблицы MRPIzd <br>
 Результат: <br>
   True, если запись найдена <br>
#end
Function GetNextIzd(awLevel: word; adtDat: date; var ar_MRPIzd: type$MRPIzd): boolean;

//------------------------------------------------------------------------------
#doc
 Получение предыдующей записи vtIzd относительно текущей позиции</brief> <br>
 Параметры: <br>
   awLevel   - Уровень <br>
   adtDat    - Дата <br>
   ar_MRPIzd - Запись таблицы MRPIzd <br>
 Результат: <br>
   True, если запись найдена <br>
#end
Function GetPrevIzd(awLevel: word; adtDat: date; var ar_MRPIzd: type$MRPIzd): boolean;

//------------------------------------------------------------------------------
#doc
 Вставка записи MRPIzd</brief> <br>
 Параметры: <br>
   ar_MRPIzd - Запись MRPIzd <br>
 Результат: <br>
   tsOk, если успешно, иначе - код ошибки <br>
#end
Function MRPIzd__Ins(var ar_MRPIzd: type$MRPIzd): longint;

//------------------------------------------------------------------------------
#doc
 Обновление записи MRPIzd</brief> <br>
 Параметры: <br>
   ar_MRPIzd - Запись MRPIzd <br>
 Результат: <br>
   tsOk, если успешно, иначе - код ошибки <br>
#end
Function MRPIzd__Upd(ar_MRPIzd: type$MRPIzd): longint;

//------------------------------------------------------------------------------
#doc
 Удаление записи MRPIzd</brief> <br>
 Параметры: <br>
   acMRPIzd - Ссылка на запись MRPIzd <br>
 Результат: <br>
   tsOk, если успешно, иначе - код ошибки <br>
#end
Function MRPIzd__Del(acMRPIzd: comp): longint;

End; // ObjInterface oiCmnMRP

VipInterface iCmnMRP implements oiCmnMRP Licensed(Free);

#endif
