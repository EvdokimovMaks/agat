#ifdef ComponentVersion
#component "M_MnPlan"
#end

#ifndef __OCOMMONFUNALG_VIH
#define __OCOMMONFUNALG_VIH

#include oCommonVisAlg.vih
#include ListAn.vih

type TParCommFA = record
     MnAnalNRec : comp;
     ConstRole1 : Word;
     ConstRole2 : Word;
     ConstRole3 : Word;
     ConstRole4 : Word;
     nRecAnal1  : comp;
     nRecAnal2  : comp;
     nRecAnal3  : comp;
     nRecAnal4  : comp;
     KodGrKau1  : word;
     KodGrKau2  : word;
     KodGrKau3  : word;
     KodGrKau4  : word;
     NppAnal1   : word;
     NppAnal2   : word;
     NppAnal3   : word;
     NppAnal4   : word;
     KatRole1   : comp;
     KatRole2   : comp;
     KatRole3   : comp;
     KatRole4   : comp;
end;

objinterface oCommonFunAlg; forward;
 // Общие функции для алгоритмов расчета
objinterface oCommonFunAlg;
   //.. возвращает коды аналитик по типам документов.
   Function GetTypeDoc_KodGrKau ( objtype:word ):word;
   Function GetTypeDoc_SpecDoc  ( objtype:word ):word;
   Function GetKodGrKau_TypeDoc ( objtype:word ):word;
   Function Pump_VTHOR( upers : Util_Person ; cpMnPlan:comp) : Boolean;
   Function Pump_VTHOR_BySysNumAlgVid(ptRA: TRecAcc; pwSysNumAlgVid: word; pcMnPlan: comp; var poU_P: Util_Person): boolean;
   // Заполнение таблицы vtHor с передачей флагов
   Function Pump_VTHOR_BySysNumAlgVidExt(ptRA: TRecAcc; pwSysNumAlgVid: word; pcMnPlan: comp; var poU_P: Util_Person; Flags : LongInt ): boolean;

   Function SetVidInfo( pt:TRecAcc; wSysNumVid : word;
                                 cWorkSloj:comp ) : Boolean;
   Function GetVidInfo:VidInfo;
   Function GetSegInfoOne(ind:longint):SegInfoOne;

   //...поиск шаблона
   Function FindSpMnPlan( var stTbl: TSpMnPLAN; var _sp:Type$p_SpMnPlan ):Boolean;
   //...поиск шаблона с аналитиками
   Function FindSpMnPlan_Anal( var  stTbl   : TSpMnPLAN;
                               var _sp:Type$p_SpMnPlan;
                               flag : word   // 0 - без аналитик
                                             // 1-  с первой  2- две  3 - три
                                  ): Boolean;


   //... загрузка алгоритма представления по наименованию
   Function Load_UtilPerson ( var pt:TRecAcc;name:string; var upers : Util_person  ) : Boolean ;
   //... загрузка алгоритма представления по системному номеру
   Function Load_UtilPersonNum ( var pt:TRecAcc; wSysNum : word; var upers : Util_person  ) : Boolean ;

  // .. Проверка есть ли в плане представления
   Function AlgCanExecute( var pt:TRecAcc;
                              bm :Type$Mnplan; // проверать в каком плане
                              cpAlgVid:comp ) : Boolean;

   Function CreateMnPlan( var pt:TRecAcc;
                          cpWayAccou:comp;
                          sbMnplS:type$p_MnPlan // не обязательный параметр
                                      // план на для которого создается этот план.
                          ):type$p_MnPlan;

   //.. Возвращает системный номер алгоритма представления
   Function GetNumAlgVid(ccFormPl:comp):word;
   //.. Сохранение и востановление таблицы VtHor
   Function SaveVtHor :Boolean;
   Function RestoreVtHor :Boolean;

  //****************************************************************************
  // Функции и процедуры работы с периодами (интервалами)
  //****************************************************************************
  //============================================================================
  // Возвращает плавающую дату привязки с учетом смещения
  Function GetDateFixFloat(
    awDateFixVal      : word; // значение плавающей даты привязки
                              //     1  - начало текущей недели
                              //     2  - начало текущего месяца
                              //     3  - начало текущего квартала
                              //     4  - начало текущего полугодия
                              //     5  - начало текущего года
                              //     6  - начало следующей недели
                              //     7  - начало следующего месяца
                              //     8  - начало следующего квартала
                              //     9  - начало следующего полугодия
                              //     10 - начало следующего года
    awDateFixSmeschEd : word; // единица смещения
                              //     0  - дней
                              //     1  - месяцев
    awDateFixSmesch   : word  // значение смещения
  ): date;

  //============================================================================
  // Возвращает единицу измерения типа периода
  Function GetFpTPerEdIzm(
    acFpTPer: comp  // ссылка FpTPer.nRec
  ): word;

  //============================================================================
  // Преобразование единицы измерения интервала в константу x... (xDay, xWeek, ... -> см. TppConst.inc)
  Function ConvEdIzmTo_xConst(
    awEdIzm: word     // единица измерения интервала
  ): word;

  //============================================================================
  // Преобразование константы x... (xDay, xWeek, ... -> см. TppConst.inc) в единицу измерения интервала
  Function ConvxConstTo_EdIzm(
    awxConst: word     // константа единицы измерения времени
  ): word;

  //============================================================================
  // Возвращает тип периода для периода
  Function GetTypeFpPeriod(
    acFpPeriod: comp  // ссылка FpPeriod.nRec
  ): comp;

  //============================================================================
  // Возвращает единицу измерения периода
  Function GetFpPeriodEdIzm(
    acFpPeriod: comp  // ссылка FpPeriod.nRec
  ): word;

  //============================================================================
  // Возвращает nRec первого периода с типом acFpTPer, в который попадает adtDate
  // результат = 0, если не найдена ни одна запись
  Function GetFpPeriodByDate(
    adtDate: date; // дата
    acFpTPer: comp  // ссылка FpTPer.nRec
  ): comp;

  //============================================================================
  // Начальная дата периода (интервала)
  Function GetPeriodBeginDate(
    adtDateFixVal: date; // дата привязки
    awEdIzm: word;       // единица измерения интервала
                         //     0  - день
                         //     1  - неделя
                         //     2  - месяц
                         //     3  - квартал
                         //     4  - полугодие
                         //     5  - год
    awPeriodNum: word    // порядковый номер интервала относительно даты привязки
  ): date;

  //============================================================================
  // Конечная дата периода (интервала)
  Function GetPeriodEndDate(
    adtPeriodBegin: date; // дата начала периода (интервала)
    awEdIzm: word         // единица измерения интервала
                          //     0  - день
                          //     1  - неделя
                          //     2  - месяц
                          //     3  - квартал
                          //     4  - полугодие
                          //     5  - год
  ): date;

  //============================================================================
  // Устанавливает начальнаю и конечную даты периода (интервала)
  Procedure SetPeriodDates(
    adtDateFixVal: date;      // дата привязки
    awEdIzm: word;            // единица измерения интервала
                              //     0  - день
                              //     1  - неделя
                              //     2  - месяц
                              //     3  - квартал
                              //     4  - полугодие
                              //     5  - год
    awPeriodNum: word;        // порядковый номер интервала относительно даты привязки
    var adtPeriodBegin: date; // переменная, куда записывается дата начала периода
    var adtPeriodEnd: date    // переменная, куда записывается дата конца периода
  );

  //============================================================================
  // Определение вхождения диапазона в период
  Function JoinInPeriod(
    acFpPeriod: comp;   // ссылка FpPeriod.nRec
    adtDateBegin: date; // начальная дата диапазона
    adtDateEnd: date    // конечная дата диапазона
  ): boolean;

  //============================================================================
  // Определение вхождения диапазона в периоды
  Function JoinInPeriods(
    acFpPeriod: comp;         // ссылка FpPeriod.nRec
    adtDateFixVal: date;      // дата привязки
    awEdIzm: word;            // единица измерения интервала
                              //     0  - день
                              //     1  - неделя
                              //     2  - месяц
                              //     3  - квартал
                              //     4  - полугодие
                              //     5  - год
    awPeriodCount: word       // количество интервалов (периодов)
  ): boolean;


  //============================================================================
  // Возвращает длительность производственного цикла для изделия
  Function GetDlitProizvCycle(
    adtDate: date; // актуальная дата
    awTypeObj: word; // тип объекта-изделия
    acObject: comp; // ссылка на объект-изделие
    acKatMarsh: comp; // ссылка на техмаршрут
    awEdTime: word // единица времени (из файла tppconst.inc), в которой выдавать результат
  ): double;

  //============================================================================
  // Возвращает коэффициент выполнения норм
  Function GetKoefExecNorm(
    adtDate: date;        // актуальная дата
    acProfes: comp;       // ссылка на профессию (KatProfes.nRec)
    awRazr: word;         // разряд
    awCodTar: word;       // код тарифа
    awSisOpl: word;       // система оплаты
    aoListAn: oiListAn    // объект-список аналитик
  ): double;

  //============================================================================
  // Возвращает значение параметра из календарно-плановых нормативов
  Function GetKPN_ParRec(
    awCodePar: word; // код параметра
    adtDate: date; // актуальная дата
    awTypeObj: word; // тип объекта-изделия
    acObject: comp; // ссылка на объект-изделие
    acPodr: comp; // ссылка на подразделение
    acMarsh: comp // ссылка на техмаршрут
  ): type$KPN_Sp;


Function SetDefFieldSpMnPlan( var pt:TRecAcc;
                              cpWayAccou:comp;
                              var bp:type$p_SpMnPlan
                              ):Boolean;
Function FindInTemplate( p_wTypeIzd:Word; p_cIzd:Comp ) : Boolean;
Function MC_Decomposition(
                           p_cMC    : Comp;
                           p_fFind  : Boolean;
                           p_wLevel : Word
                         ) : Boolean;
Function PrMC_To_TypeIzd( wPrMC:Word ) : Word;
Function TypeIzd_To_PrMC( wTypeIzd:Word ) : Word;
  //============================================================================
  // Возвращает  наименование поля для VtHor
  // Flag     - типы полей (смотри CONSTPL.VPP)
  // cpFormPl - ссылка на FormPl.NRec пользовательского алгоритма представления
Function GetNameKolVtHor ( Flag : LongInt; cpFormPl : comp ) : string;

//============================================================================
// Возвращает  True если в настройке пользовательского алгоритма представления
// включено поле по Flag - (смотри CONSTPL.VPP))
Function GetFieldVidOn ( Flag : LongInt; cpFormPl : comp ) : boolean;

// .. формирование исходящих документов
//    возвращает Nrec - ObjAccT  созданного или модифицированого
Function CreateIsxObjAcct( var pt     : TRecAcc;
                           sbM        : type$p_MnPlan; // - структура документа который привязывается
                           toTypeDoc  : word;  // - тип документа к которому идет привязка
                           cpNrec     : comp;  // - ссылка на документ к которому идет привязка
                           wFlag      : word   // 0 - если документ существует
                                               //     удаление и создание нового
                                               // 1 - если существует добавляет количесто
                       ):comp;


//.. Привязка позиций плана к списку исходящих документов.
//  typeHier = 0
//    возвращает Nrec - SpObjAcc  созданного или модифицированого
Function BindingIsxSpMnPl( var pt     : TRecAcc;
                           cpObjAcc   : comp; // возвращает Nrec - ObjAccT
                            _sp       : type$p_SpMnPl; // структура позиции плана
                                                       //   которую привязываем
                           NumKol     : word;          // номер поля
                           TypeMnPlan : word;          // тип текущего плана
                           kol        : double;        // количество по позиции
                           wFlag      : word   // 0 - если запись существует
                                               //     удаление и создание новой
                                               // 1 - если существует добавляет количесто
                              ):Comp;


//.. Привязка позиций заявки к списку исходящих документов.
Function BindingIsxClaim( var pt      : TRecAcc;
                           cpObjAcc    : comp;
                           _sp        : type$Claim;
                           kol         : double;
                           wFlag : word ):Comp;

//.. Привязка позиций плана к к позициям (SpObjAcc) входящих документов.
//  typeHier = 1
//    возвращает True - если запись была созданна или модифицированого
Function BindingVxSpMnPl( var pt:TRecAcc;
                          ccSpObjAccOwn : comp;  // ссылка SpObjAcc в которой
                                // хранится ссылка по позиции вх. документа(typeHier = 1)
                         _sp: type$p_SpMnPl; // позиция которую привязываем
                          NumKol     : word;          // номер поля
                          TypeMnPlan : word;          // тип текущего плана
                          kol        : double;        // количество по позиции
                          wFlag      : word   // 0 - если запись существует
                                               //     удаление и создание новой
                                               // 1 - если существует добавляет количесто
                           ):Boolean;

// коректировка планов по связанной позиции с позицией входящего документа
// ...можно использовать перед удалением например
Function DelRelMyPos(  st:type$SpObjAcc;
                       var iuts:oUtil_Service;
                       var insTbl  : InsertTblMnpl;
                       wFlag : word  // 1 - пересчитывать
                                     // 2 - обнулять
                                     // 4 - удалять
                     ):Boolean;

// коректировка планов по позиции входящего документа
//....можно использовать перед удалением например
Function DelRelBxPos(  ccNrec      : comp;
                       var iuts    : oUtil_Service;
                       var insTbl  : InsertTblMnpl;
                       wFlag       : word  // 1 - пересчитывать
                                           // 2 - обнулять

                     ):Boolean;

//--------------------------------------------------------------
// Возвращает True если для заданного MnAnal и констант ролей
// найдено соответствие между группой аналитик и MnAnal
// Константы ролей должны задаваться последовательно,
// а неиспользуемые д.б. последними и равны = 0
// Пример: ControlRecMnAnal ( MnAnalNRec,
//                            RolePeriod,
//                            RoleSource,
//                            Word(0)   ,
//                            Word(0)   );
Function ControlRecMnAnal ( MnAnalNRec : comp;
                            ConstRole1 : Word;
                            ConstRole2 : Word;
                            ConstRole3 : Word;
                            ConstRole4 : Word ) : boolean ;

Function ControlRecMnAnalSt ( Var st : TParCommFA ) : boolean ;
Function GetwSysNumForCnstRole ( Var St : TParCommFA ) : word ;

Function y_x ( x : word ) : word;

//============================================================================
// Возвращает  тип поля для VtHor
//  ppTypeQuant          = 1;         // тип поля количество
//  ppTypeCost           = 2;         // тип поля цена в НДЕ
//  ppTypeSumma          = 4;         // тип поля сумма в НДЕ
//  ppTypeCostVal        = 8;         // тип поля цена в валюте
//  ppTypeSummaVal       = 16;        // тип поля сумма в валюте
// Flag     - типы полей (смотри CONSTPL.VPP)
// cpFormPl - ссылка на FormPl.NRec пользовательского алгоритма представления
Function GetTypeKolVtHor ( Flag : LongInt; cpFormPl : comp ) : word;

 Function GetKoefPassToEdTime(
    awEd: word; // новая ед.изм. времени (из файла tppconst.inc)
    awEdBase: word // базовая ед.изм. времени (из файла tppconst.inc)
  ): double;

//ПОЛУЧИТЬ КОНСТАНТУ ПОЛЯ ИЗ ПРЕДСТАВЛЕНИЯ
Function GetVidFieldConst( wNum:Word ) : LongInt;

//============================================================================
// Внешние функции для Агрегирования
//*********************************************************************************************
// ВНИМАНИЕ !!!! Предварительно обязательно удалить tmpAgregir, tmpAgrRez
// Заполняет временную таблицу tmpAgregir для расчетов
// Параметры :
//    KatMCNRec    - KatMc.NRec    - конкретная МЦ
//    SpMnPlanNRec - SpMnPlan.NRec - позиция документа
//    KolPlan      - расчетное количество из документа (ValSpMnP)
Function Pump_tmpAgregir (KatMCNRec : comp; SpMnPlanNRec : comp; KolPlan : Double ) : Boolean;

// Внешняя функции для Агрегирования
// Расчет и формирования результирующей таблицы tmpAgrRez по набору обобщенных МЦ
// и остатков от расчета
// Параметры :
// SpSetAnKodGrKau - SpSetAn.KodGrKau - набор обощ. МЦ для агрегирования
// FlagRun := True при первом запуске для данного набора позиций документа
// FlagRun := False для следующих запусков но с другими количествами по аналитикам
Procedure Decode_tmpAgregir ( SpSetAnKodGrKau: comp; FlagRun : boolean );

// Внешняя функции для Агрегирования
// Обнуление всех количеств в tmpAgregir c сохранением связей внутри дерева
// и удаление tmpAgrRez
Procedure Reset_Agregir_All_Value;

//-------------------------------------------------------
// Получить KatRole.NRec по константе роли
Function GiveKatRoleNrec ( ConstRole : Word ) : Comp;

//'Общие визуальные компоненты для алгоритмов расчета
Function GetoCommonVisAlg : oCommonVisAlg;
Function GetNameMnPlanForTypePlan ( TypePlan : LongInt ) : string;
Function GetDateFixFloatForGraph(
                                  awDateFixVal      : Word;
                                  awDateFixSmeschEd : Word;
                                  awDateFixSmesch   : Word;
                                  awDateBegPeriod   : Date
                                ) : Date;

//Получить по MnAnal.NRec структуру с NRec, Npp и KodGrKau аналитик
Function GiveKodGrKauforMnAnalNRecSt ( Var St : TParCommFA ) : boolean ;
// Получить  по KatRole.NRec костанту роли из CnstRole.vpp
Function GiveCnstRoleforKatRoleNRec( KatRoleNRec : Comp; Num : word ): word;
Function ConvConstToFpTPer( p_xConst:Word ) : Comp;
end; // oCommonFunAlg

VipInterface CommonFunAlg implements oCommonFunAlg
#ifdef ATL51
  Licensed (FREE)
#endif
;
#endif  // __OCOMMONFUNALG_VIH
