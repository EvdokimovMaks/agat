// =============================================================================
//                                                     (c)  корпорация Галактика
// Галактика 7.11
// Описание интерфейса-объекта "Список наборов аналитик"
// =============================================================================

#include ListAn.vih

#component "M_MnPlan"

//******************************************************************************
// Таблицы в памяти

//------------------------------------------------------------------------------
// Набор аналитик
#ifndef __Def_pvtSetAn__
#define __Def_pvtSetAn__
Table STRUCT pvtSetAn
(
  Nrec    : comp,  // Идентификатор строки
  Code    : s20,   // Код группы
  Name    : tName, // Наименование группы
  cAnLayer: comp   // Ссылка на слой аналитик
)
With Index
(
  pvtSetAn01 = Nrec(Unique, Surrogate, Journal),
  pvtSetAn02 = Code + Name,
  pvtSetAn03 = Name,
  pvtSetAn04 = cAnLayer + Code + Name,
  pvtSetAn05 = cAnLayer + Name
);
#endif

//------------------------------------------------------------------------------
// Аналитика для набора аналитик
#ifndef __Def_pvtSetAnAn__
#define __Def_pvtSetAnAn__
Table STRUCT pvtSetAnAn
(
  Nrec  : comp, // Идентификатор строки
  cSetAn: comp, // Ссылка на запись pvtSetAn
  cRole : comp, // Ссылка на роль
  KAU   : word, // КАУ
  cAn   : comp  // Ссылка на аналитику
)
With Index
(
  pvtSetAnAn01 = Nrec(Unique, Surrogate, Journal),
  pvtSetAnAn02 = cSetAn + cRole + KAU + cAn,
  pvtSetAnAn03 = cSetAn + cRole + cAn + KAU,
  pvtSetAnAn04 = cSetAn + KAU + cRole + cAn,
  pvtSetAnAn05 = cSetAn + KAU + cAn + cRole,
  pvtSetAnAn06 = cSetAn + cAn + cRole + KAU,
  pvtSetAnAn07 = cSetAn + cAn + KAU + cRole
);
#endif

//******************************************************************************
// Типы данных

//------------------------------------------------------------------------------
#doc
 Структура для хранения аналитики</brief>
#end
#ifndef __Def_TRecSetAn__
#define __Def_TRecSetAn__
Type TRecSetAn = record as  table pvtSetAn;
#endif

//******************************************************************************
// ObjInterface oiListSetAn
#ifndef __Def_OI_ListSetAn__
#define __Def_OI_ListSetAn__
#doc
 Описание интерфейса-объекта "Список наборов аналитик"</brief>
#end
ObjInterface oiListSetAn;

//------------------------------------------------------------------------------
#doc
 Очистка списка</brief> <br>
 Результат: <br>
   tsOk, если успешно, иначе - код ошибки <br>
#end
Function Clear: longint;

//------------------------------------------------------------------------------
#doc
 Поиск в списке с позиционированием на существующую запись</brief> <br>
 Параметры: <br>
   ardSetAn - Запись списка <br>
 Результат: <br>
   tsOk, если успешно, иначе - код ошибки <br>
#end
Function Find(ardSetAn: TRecSetAn): longint;

//------------------------------------------------------------------------------
#doc
 Получение текущей записи</brief> <br>
 Параметры: <br>
   ardSetAn - Запись списка <br>
 Результат: <br>
   tsOk, если успешно, иначе - код ошибки <br>
#end
Function GetCurRec(var ardSetAn: TRecSetAn): longint;

//------------------------------------------------------------------------------
#doc
 Переход на запись</brief> <br>
 Параметры: <br>
   acRec - Nrec записи pvtSetAn <br>
 Результат: <br>
   tsOk, если успешно, иначе - код ошибки <br>
#end
Function GoToRec(acRec: comp): longint;

//------------------------------------------------------------------------------
#doc
 Добавление в список</brief> <br>
 Параметры: <br>
   ardSetAn - Запись списка <br>
 Результат: <br>
   tsOk, если успешно, иначе - код ошибки <br>
#end
Function Add(var ardSetAn: TRecSetAn): longint;

//------------------------------------------------------------------------------
#doc
 Удаление из списка</brief> <br>
 Параметры: <br>
   acRec - Nrec записи pvtSetAn <br>
 Результат: <br>
   tsOk, если успешно, иначе - код ошибки <br>
#end
Function Del(acRec: comp): longint;

//------------------------------------------------------------------------------
#doc
 Получение количества записей в списке</brief> <br>
 Результат: <br>
   Кол-во записей в списке <br>
#end
Function Get_Count: longint;

//------------------------------------------------------------------------------
#doc
 Получение первой записи</brief> <br>
 Параметры: <br>
   ardSetAn - Запись списка <br>
 Результат: <br>
   tsOk, если успешно, иначе - код ошибки <br>
#end
Function Get_First(var ardSetAn: TRecSetAn): longint;

//------------------------------------------------------------------------------
#doc
 Получение последней записи</brief> <br>
 Параметры: <br>
   ardSetAn - Запись списка <br>
 Результат: <br>
   tsOk, если успешно, иначе - код ошибки <br>
#end
Function Get_Last(var ardSetAn: TRecSetAn): longint;

//------------------------------------------------------------------------------
#doc
 Получение следующей записи относительно текущей позиции</brief> <br>
 Параметры: <br>
   ardSetAn - Запись списка <br>
 Результат: <br>
   tsOk, если успешно, иначе - код ошибки <br>
#end
Function Get_Next(var ardSetAn: TRecSetAn): longint;

//------------------------------------------------------------------------------
#doc
 Получение предыдующей записи относительно текущей позиции</brief> <br>
 Параметры: <br>
   ardSetAn - Запись списка <br>
 Результат: <br>
   tsOk, если успешно, иначе - код ошибки <br>
#end
Function Get_Prev(var ardSetAn: TRecSetAn): longint;

//------------------------------------------------------------------------------
#doc
 Расширенный поиск в списке с позиционированием на существующую запись</brief> <br>
 Параметры: <br>
   ardSetAn - Запись списка <br>
   aoListAn - Объект-список аналитик <br>
 Результат: <br>
   tsOk, если успешно, иначе - код ошибки <br>
#end
Function FindEx(ardSetAn: TRecSetAn; aoListAn: oiListAn): longint;

//------------------------------------------------------------------------------
#doc
 Расширенное добавление в список</brief> <br>
 Параметры: <br>
   ardSetAn - Запись списка <br>
   aoListAn - Объект-список аналитик <br>
 Результат: <br>
   tsOk, если успешно, иначе - код ошибки <br>
#end
Function AddEx(var ardSetAn: TRecSetAn; aoListAn: oiListAn): longint;

//------------------------------------------------------------------------------
#doc
 Поиск аналитики для текущего набора аналитик</brief> <br>
 Параметры: <br>
   ardAn - Запись аналитики <br>
 Результат: <br>
   tsOk, если успешно, иначе - код ошибки <br>
#end
Function FindAn(ardAn: TRecAn): longint;

//------------------------------------------------------------------------------
#doc
 Получение текущей аналитики для текущего набора аналитик</brief> <br>
 Параметры: <br>
   ardAn - Запись аналитики <br>
 Результат: <br>
   tsOk, если успешно, иначе - код ошибки <br>
#end
Function GetCurAn(var ardAn: TRecAn): longint;

//------------------------------------------------------------------------------
#doc
 Добавление аналитики для текущего набора аналитик</brief> <br>
 Параметры: <br>
   ardAn - Запись аналитики <br>
 Результат: <br>
   tsOk, если успешно, иначе - код ошибки <br>
#end
Function AddAn(ardAn: TRecAn): longint;

//------------------------------------------------------------------------------
#doc
 Удаление аналитики для текущего набора аналитик</brief> <br>
 Параметры: <br>
   ardAn - Запись аналитики <br>
 Результат: <br>
   tsOk, если успешно, иначе - код ошибки <br>
#end
Function DelAn(ardAn: TRecAn): longint;

//------------------------------------------------------------------------------
#doc
 Получение количества аналитик для текущего набора аналитик</brief> <br>
 Результат: <br>
   Кол-во аналитик для текущего набора аналитик <br>
#end
Function Get_CountAn: longint;

//------------------------------------------------------------------------------
#doc
 Получение первой аналитики для текущего набора аналитик</brief> <br>
 Параметры: <br>
   ardAn - Запись аналитики <br>
 Результат: <br>
   tsOk, если успешно, иначе - код ошибки <br>
#end
Function Get_FirstAn(var ardAn: TRecAn): longint;

//------------------------------------------------------------------------------
#doc
 Получение последней аналитики для текущего набора аналитик</brief> <br>
 Параметры: <br>
   ardAn - Запись аналитики <br>
 Результат: <br>
   tsOk, если успешно, иначе - код ошибки <br>
#end
Function Get_LastAn(var ardAn: TRecAn): longint;

//------------------------------------------------------------------------------
#doc
 Получение следующей аналитики для текущего набора</brief> <br>
 Параметры: <br>
   ardAn - Запись аналитики <br>
 Результат: <br>
   tsOk, если успешно, иначе - код ошибки <br>
#end
Function Get_NextAn(var ardAn: TRecAn): longint;

//------------------------------------------------------------------------------
#doc
 Получение предыдующей аналитики для текущего набора аналитик</brief> <br>
 Параметры: <br>
   ardAn - Запись аналитики <br>
 Результат: <br>
   tsOk, если успешно, иначе - код ошибки <br>
#end
Function Get_PrevAn(var ardAn: TRecAn): longint;

End; // ObjInterface oiListAn

VipInterface iListSetAn implements oiListSetAn Licensed(Free);

#endif
