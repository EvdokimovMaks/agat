/*
 ╔═══════════════════════════════════════════════════════════════════════════╗
 ║                     (c) 1994,98 корпорация ГАЛАКТИКА                      ║
 ║ Проект        : ГАЛАКТИКА                                                 ║
 ║ Система       : Оперативный контур                                        ║
 ║ Версия        : 5.70                                                      ║
 ║ Назначение    : Интерфейс уточнения замен на материальные ценности        ║
 ║ Ответственный : Левченко Андрей Александрович(Andrew)                     ║
 ║ Параметры     : есть                                                      ║
 ╚═══════════════════════════════════════════════════════════════════════════╝
*/


#ifndef _SpZamResPlanObj_VIH_
#define _SpZamResPlanObj_VIH_

#ifdef ComponentVersion
#component "M_MnPlan"
#endif

!#include DebugObj.vih
#Include AktZamOperType.inc

#include GetSvOst_SpDocObj.vih

#doc
Объект для проведения замен по актам замен вида "Комплексные замены"<br>
и "Одиночные замены" в формате "Комплексные замены"<br>
#end

ObjInterface oSpZamResPlan;
  //------------------------------------------------------------------------------------------------------------------------------
  Function ResetFlagNZeroKol_TTVarZam_Wrk_All : boolean;
  Function ResetFlagNZeroKol_TTDocZam_Wrk_All : boolean;

#doc
Вставка новой записи таблицы TTNeedZamP.<br>
Параметры :<br>
-"prFlagWrk" - здесь заданы настройки в соответствии с которыми будет формироваться<br>
 перечень ресурсов подлежащих замене(таблица TTNeedZamP)<br>
-prRefDoc - ссылка на документ в котором проводятся замены<br>
-prDate_Start, prDate_End - период действия позиции спецификации документа<br>
-prDate - дата рассчета остатков по разрезу<br>
-prcPodrCeh - подразделение-изготовитель<br>
-prcPodrSklad, prcMOLSklad - разрез хранения партии<br>
-prRefMC, prRefParty, prKolSpecif, prDiskret_ED - информация по заданной позиции спецификации документа<br>
Возвращает ссылку на "TTNeedZamP"<br>
#end
Function AnalizNeedZam_One(prFlagWrk : longint; prRefValDoc : comp; prData_SvOst : date; prcPodrCeh : comp; prDate_Start : date; prDate_End : date;
                prListSklad : word; prcPodrSklad : comp; prcMolSklad : comp; prPriznakMCUsl : word; prRefMC : comp; prRefParty : comp; prIndexFnc_for_LoadNal : word;
                prRefTopTab : comp; prRefNoteBene : comp; prRefFilter : comp; prTypeOper : word; prPriznakMCUsl_Oper : word; prRefMCUsl_Oper : comp;
                prKol_Agr : double; prKol : double; prKol_Norm : double; prKolNorma : double; prDiskret_ED : word) : comp;

#doc
Возвращает ссылку на "корень" иерархии TTNeedZamP.<br>
#end
  Function GetTop_TTNeedZam(prTTNeedZamP : type$TTNeedZamP) : type$TTNeedZamP;

#doc
Возвращает ссылку на "TTNeedZamP"(ресурс из списка "К замене") для заданной<br>
таблицы TTNaZamenuP(ресурс из списка "На замену").<br>
#end
  Function GetTTNeedZamP_from_TTNaZamenuP(prTTNaZamenuP : type$TTNaZamenuP) : type$TTNeedZamP;
  //------------------------------------------------------------------------------------------------------------------------------
#doc
Удаление временной таблицы "TTPossibleZamP"<br>
#end
  Procedure KillAll_TTPossibleZam;
#doc
Вставка новой позиции "TTPossibleZamP"<br>
Возвращает ссылку на "TTPossibleZamP"<br>
#end
  Function SetTTPossibleZam(prRefSpecifDoc : comp; prRefOwnSpecifTab : comp;
                            prPriznakMCUsl_NeedZam : word; prRefMCNeedZam : comp; prRefPartyNeedZam : comp; prPriznakMCUsl_Oper : word; prRefMCUsl_Oper : comp;
                            prTypeOper : word; prRefListZam : comp; prRefNBSZam : comp; prRefNBSIzm : comp; prKoefZam : double; prKol_Add : double; prRzltNBSZam : word) : comp;
  //------------------------------------------------------------------------------------------------------------------------------
#doc
Вставка новой позиции "TTDocZam_Wrk"<br>
Возвращает ссылку на "TTDocZam_Wrk"<br>
#end
Function SetTTDocZam_Wrk(prTypeDocZam : word; prcPodrNeedZam : comp; prDate_Start : date; prDate_End : date;
                         prPriznakMCNeedZam : word; prRefMCNeedZam : comp; prRefPartyNeedZam : comp; prRefNoteBene : comp) : comp;
#doc
Вставка новой позиции "TTVarZam_Wrk"<br>
Возвращает ссылку на "TTVarZam_Wrk"<br>
#end
Function SetTTVarZam_Wrk(prcPodrNeedZam : comp; prDate_Start : date; prDate_End : date; prPriznakMCNeedZam : word; prRefMCNeedZam : comp; prRefPartyNeedZam : comp;
                                                                                                          prRefNoteBene : comp; prRefFilter : comp; prNumber : word) : comp;
  //------------------------------------------------------------------------------------------------------------------------------
#doc
Формрует иерархию таблиц "TTNeedZamP".<br>
корень данной иерархии - ресурсы из списка "К замене",<br>
подчиненные позиции - перечень операций который необходимо провести<br>
в соотвествии с заданным актом для корректной замены ресурса вышестоящей<br>
позиции<br>
#end
  Function SetTTNeedZam_by_TTPossibleZam_AllSklad(prFlagWrk : longint; prRefValDoc : comp; prData_Zam : date; prListSklad : word; prIndexFnc_for_LoadNal : word;
                                                  var prFlagBreak : boolean) : boolean;
#doc
Формрует иерархию таблиц "TTNeedZamP".<br>
корень данной иерархии - ресурсы из списка "К замене",<br>
подчиненные позиции - перечень операций который необходимо провести<br>
в соотвествии с заданным актом для корректной замены ресурса вышестоящей<br>
позиции<br>
#end
  Function SetTTNeedZam_by_TTPossibleZam_AllCeh(prFlagWrk : longint; prRefValDoc : comp; prData_Zam : date; prIndexFnc_for_LoadNal : word;
                                                var prFlagBreak : boolean) : boolean;

#doc
//???????????????? zzzzzzzzzzzzzzzzz
#end
Procedure KillAll_TTNaZamenu;

#doc
Для каждой позиции "TTNeedZamP" по заданному перечню  <br>
возможных замен(TTPossibleZamP) определяет перечень планируемых замен - "TTNaZamenu"<br>
Возвращает "true" если данная операция прошла успешно<br>
#end
  Function SetTTNaZamenu_by_TTPossibleZam_AllSklad(prFlagWrk : longint; prKlPrice : type$KlPrice; prRefValDoc : comp;
                                                   prFlagSort_SG0_F1_L2_P3_GP4 : word; prcKatPokaz_GP : comp;
                                                   prData_Zam : date; prListSklad : word; prIndexFnc_for_LoadNal : word; var prFlagBreak : boolean) : boolean;
#doc
Для каждой позиции "TTNeedZamP" по заданному перечню  <br>
возможных замен(TTPossibleZamP) определяет перечень планируемых замен - "TTNaZamenu"<br>
Возвращает "true" если данная операция прошла успешно<br>
#end
  Function SetTTNaZamenu_by_TTPossibleZam_AllCeh(prFlagWrk : longint; prKlPrice : type$KlPrice; prRefValDoc : comp;
                                                 prFlagSort_SG0_F1_L2_P3_GP4 : word; prcKatPokaz_GP : comp;
                                                 prData_Zam : date; prIndexFnc_for_LoadNal : word; var prFlagBreak : boolean) : boolean;

#doc
Для таблиц "TTNeedZamP", "TTDocZam_Wrk" устанавливает флажки "есть\нет свободные остатки по разрезу"<br>
Возвращает "true" если данная операция прошла успешно<br>
#end
  Function SetFlagValidZam_for_TTTabAll(prFlag_NotUsed_Party1_MC2 : word) : boolean;
//------------------------------------------------------------------------------------------------------------------------------
#doc
Автоподбор замен по партиям для заданной МЦ из списка "К замене"<br>
#end
Function FillMCZamDown_IR_TopDown_Party(prFlagWrk : longint; prTypeDoc_to : word; prcPodrNeedZam : comp; prDate_Start : date; prDate_End : date;
                                        prPriznakMCNeedZam : word; prRefMCNeedZam : comp; prRefPartyNeedZam : comp;
                                        prNewVal : double; prFlag_WR_RD : word; var prKol_Zam_Party : double) : boolean;
#doc
Автоподбор замен по актам замен\листу замен для заданной МЦ из списка "К замене"<br>
#end
  Function FillMCZamDown_IR_TopDown_MC(prFlagWrk : longint; prTypeDoc_to : word; prTopTTNeedZamP : type$TTNeedZamP; prRefNoteBene : comp; prRefVariantZamen : comp;
                                                           prNewVal : double; prFlag_ZamS_ZamM : word; prFlag_WR_RD : word; var prKol_Zam_MC : double; var prFlag_CorrectBalance : boolean) : boolean;
//------------------------------------------------------------------------------------------------------------------------------
#doc
Преобразует значение тип данных "comp" в "longint" без потери точности<br>
#end
  Function GetTTCnv_Comp_Longint(prTypeTab : word; prRefTab : comp) : LongInt;
#doc
Ставит в соответсвие значению типа "comp" значение "longint".
#end
  Function SetTTCnv_Comp_Longint(prTypeTab : word; prRefTab : comp) : LongInt;
//------------------------------------------------------------------------------------------------------------------------------
#doc
Автоподбор замен по партиям<br>
Возвращает "true" если данная операция прошла успешно<br>
Возвращаемые параметры :<br>
-флаг ошибки - prFlagErr = 0 если ошибок не обнаружено, prFlagErr = 1 если ошибки обнаружены<br>
-набор флагов сотояния - CodExecute;<br>
#end
  Function AvtoFillTreeZam_All_Party(prFlagWrk : longint; prTypeDoc_to : word; var prCountZam : word) : boolean;
#doc
Автоподбор замен по актам замен<br>
Возвращает "true" если данная операция прошла успешно<br>
Возвращаемые параметры :<br>
-флаг ошибки - prFlagErr = 0 если ошибок не обнаружено, prFlagErr = 1 если ошибки обнаружены<br>
-набор флагов сотояния - CodExecute;<br>
#end
  Function AvtoFillTreeZam_All_MC(prFlagWrk : longint; prTypeDoc_to : word; prFlag_ZamS_ZamM : word; prRefNoteBene : comp; prRefVariantZamen : comp; var prCountZam : word) : boolean;
#doc
Автоподбор замен по заданному акту замен вида "Комплексные замены"<br>
Возвращает "true" если данная операция прошла успешно<br>
Возвращаемые параметры :<br>
-флаг ошибки - prFlagErr = 0 если ошибок не обнаружено, prFlagErr = 1 если ошибки обнаружены<br>
-набор флагов сотояния - CodExecute;<br>
#end
  Function AvtoFillTreeZam_All_MC_OneNoteBene_Wrk(prFlagWrk : longint; prTypeDoc_to : word;
            prRefNoteBene : comp; prListPick_VarZam : word; prMethodOfPIO : word; var prCountZam : word; var prStrErr : string) : boolean;

#doc
Отмена всех пообранных замен<br>
Возвращает "true" если данная операция прошла успешно<br>
Возвращаемые параметры :<br>
-флаг ошибки - prFlagErr = 0 если ошибок не обнаружено, prFlagErr = 1 если ошибки обнаружены<br>
-набор флагов сотояния - CodExecute;<br>
#end
  Function AvtoFillTreeZam_Zero_All(prFlagWrk : longint; prTypeDoc_to : word) : boolean;
//------------------------------------------------------------------------------------------------------------------------------
#doc
Устанавливает флажки состояния для всех таблиц "TTNeedZamP"<br>
Возвращает "true" если данная операция прошла успешно<br>
Возвращаемые параметры :<br>
-флаг ошибки - prFlagErr = 0 если ошибок не обнаружено, prFlagErr = 1 если ошибки обнаружены<br>
-набор флагов сотояния - CodExecute;<br>
#end
  Function SetCodExecute_TTNeedZam_All(prFlagWrk : longint; prTypeDoc_to : word; prFlag_NotUsed_Party1_MC2 : word; var prFlagErr : Byte; var prCodExecute : longInt) : boolean;
//------------------------------------------------------------------------------------------------------------------------------
#doc
Возвращает "true" если для планируемые операций по актам замен определены<br>
#end
  Function FindNotZeroKol_from_TTNaZamenu : boolean;

#doc
Запускает окно с сообщениями об ошибках и предупреждающими сообщениями<br>
Тексты сообщений генерятся функцией по набору флагов состояния (prCodExecute)<br>
Возвращает :<br>
"cmDefault" - пользователем нажата кнопка "Провести замены"<br>
"0" - пользователем нажата кнопка "Отменить планируемые замены"<br>
"cmCancel" пользователем нажата кнопка "Вернуться в окно подбора замен"<br>
#end
  Function Run_Wnd_MessageMemo3B(prTitle_Wnd : string; prTitle_Message : string; prFlagWrk : longint; prCodExecute : longInt; prFlagButtons_Disable : word) : longInt;
//------------------------------------------------------------------------------------------------------------------------------
#doc
Позиционирование, установка флажков видимости полей, установка <br>
наименования полей в окне "WndMainPan"<br>
Возвращает "true" если данная операция прошла успешно<br>
#end
  Function ReReadRecord_WndMainPan(var prRefV_TTNeedZam : comp) : boolean;
//------------------------------------------------------------------------------------------------------------------------------
#doc
Удаляет все времменые таблицы<br>
#end
  Procedure KillAllTmpTab;
#doc
Удаляет все экземпляры таблицы Tobot<br>
#end
  Procedure KillAll_Tobot;
#doc
Инициализация объекта<br>
#end
  Function InitInter : boolean;

#doc
Возвращает значения глобальных переменных объекта<br>
#end
  Function GetPar_Gen(var prNameDoc : string; var prFlagUsed_AktZam0_ListZam1 : word; var prMethodOfPIO : word; var prGetSvOst_SpDocObj : oGetSvOst_SpDoc20) : boolean;
#doc
Устанавливает значения глобальных переменных объекта<br>
#end
  Function SetPar_Gen(prTypeDoc_to : word; prRefDoc : comp; prNameDoc : string; prFlagUsed_AktZam0_ListZam1 : word; prMethodOfPIO : word; var prGetSvOst_SpDocObj : oGetSvOst_SpDoc20) : boolean;
#doc
Возвращает значения глобальных переменных объекта<br>
#end
  Function GetPar_Wrk(var prFlagWrk : longint; var prData_Zam : date; var prIndexFnc_for_LoadNal : word; var prFlag_NotUsed_Party1_MC2 : word;
                      var prFlagSort_SG0_F1_L2_P3_GP4 : word; var prcKatPokaz_GP : comp;
                      var prRefValDoc : comp; var prKolZnak_Kol : word; var prKolZnak_Price : word) : boolean;
#doc
Устанавливает значения глобальных переменных объекта<br>
#end
  Function SetPar_Wrk(prFlagWrk : longint; prData_Zam : date; prIndexFnc_for_LoadNal : word; prFlag_NotUsed_Party1_MC2 : word;
                      prFlagSort_SG0_F1_L2_P3_GP4 : word; prcKatPokaz_GP : comp;
                      prRefValDoc : comp; prKolZnak_Kol : word; prKolZnak_Price : word) : boolean;

#doc
Возвращает значения глобальных переменных объекта<br>
#end
  Function GetPar_KlPrice_Wrk(var prRefKlPrice : comp) : boolean;
#doc
Устанавливает значения глобальных переменных объекта<br>
#end
  Function SetPar_KlPrice_Wrk(prRefKlPrice : comp) : boolean;

#Doc
Возвращает флаг закрытия окна WndMainPan<br>
#end
 Event Procedure GetFlagRzlt_WndMainPan(prRzlt_WndMainPan : longint);

!#Doc
!???????????????? zzzzzzzzzz
!#end
 Event Function GetFlagUseNoteBene_S_Wrk(prRefNoteBene : comp; prMethodOfPIO : word) : boolean;

!#Doc
!???????????????? zzzzzzzzzz
!#end
 Event Function GetFlagUseVariant_M_Wrk(prRefObjParam : comp; prMethodOfPIO : word) : boolean;

#doc
Функция деинициализации объекта<br>
#end
  Function DoneInter : boolean;
//-----------------------  Отладка  ---------------------------------
  Function GetStrDsk_Deb : string;
  Procedure SetStrDsk_Deb(prStrDSK_Deb : string);
  Function GetNameObj : string;
  Procedure SetNameObj(prNameObj : string);
  Function LoadDebugObj(prDebugObj : oDebug) : boolean;
  Function GetModeDebug : boolean;
  Function SetModeDebug(prFlagDebug : boolean) : Boolean;
  Procedure SetStartVarDebug(prStrDSK_Deb : string; prNameObj : string);
  Function SetExtInfoDebug(prDebugObj : oDebug) : Boolean;
  Function RunWindow_Debug(prTypeWnd : word; prNameWnd : string; prDebStr : string) : Boolean;
end;
#endif
