//------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Галактика 8.1 - Производственный контур
// Объект для расчета остатков в разрезе объектов целевого учета
//------------------------------------------------------------------------------

#ifdef ComponentVersion
#component "M_MnPlan"
#end

#ifndef __Def_oCalcOst4CU__
#define __Def_oCalcOst4CU__

Type TRecCalcPar = record
  dDate        : date;    //дата на которую считаем остатки
  cSaldTune    : comp;    //объект целевого учета
  wNumAn       : word;    //для функции RunCalcOstBy - номер аналитики целевого учета от которой будут рассчитываться остатки
                          //для функции RunCalcOst   - номер аналитики целевого учета по занчению которой будет производится фильтрация, 0 - фильтрация не производится
  wNumAnPos    : word;    //номер аналитики позиции плана
  strSub       : string;  //подстрока для фильтрации
  wType        : word;    //тип остатков(0-склад, 1 - производство)
End; // Type TRecInpPar = record

//входные МЦ по которым будет проивзодится расчет остатков
//накачивать необходимо при использовании функции RunCalcOst
Table Struct InputMc
(
  cMc      : comp
)
With Index
(
  InputMc01 = cMc
);

//входные значения аналитик по которым будет проивзодится расчет остатков
//накачивать необходимо при использовании функции RunCalcOstByAn
Table Struct InputAn
(
  cAnVal     : comp
)
With Index
(
  InputAn01 = cAnVal
);

Table Struct InputPodr
(
  cPodr      : comp
)
With Index
(
  InputPodr01 = cPodr
);

Table Struct InputMOL
(
  cMol      : comp
)
With Index
(
  InputMOL01 = cMol
);

Table Struct InputParty
(
  cParty      : comp
)
With Index
(
  InputParty01 = cParty
);

Table Struct Ost4CU
(
  NRec     : Comp,
  wType    : word, //тип записи
  cOwner   : comp, //владелец записи. Поле предназначчено для связки записей в интерфейсах
  cMc      : comp,
  cGrMc    : comp,
  cPodr    : comp,
  cMOL     : comp,
  cParty   : comp,
  cOtpEd   : comp,
  Kol      : double, // остаток по разрезу. Заполняется фукциями RunCalcOst и RunCalcOstByAn
  Price    : double,
  PriceV    : double,
  AddKol1  : double, // резерное поле. Можно использовать по своему усмотрению
  AddKol2  : double, // резерное поле. Можно использовать по своему усмотрению
  AddKol3  : double, // резерное поле. Можно использовать по своему усмотрению
  AddKol4  : double, // резерное поле. Можно использовать по своему усмотрению
  cSaldTune: comp,
  cAnVal1  : comp,
  cAnVal2  : comp,
  cAnVal3  : comp,
  cAnVal4  : comp,
  cAnVal5  : comp,
  cAnVal6  : comp,
  cAnVal7  : comp,
  cAnVal8  : comp,
  cAnVal9  : comp,
  cAnVal10  : comp
)
With Index
(
  Ost4CU01 = NRec(Unique, Surrogate),
  Ost4CU02 = wType + cOwner,
  Ost4CU03 = cMc,
  Ost4CU04 = cPodr,
  Ost4CU05 = cMOL,
  Ost4CU06 = cParty,
  Ost4CU07 = cAnVal1,
  Ost4CU08 = cAnVal2,
  Ost4CU09 = cAnVal3,
  Ost4CU10 = cAnVal4,
  Ost4CU11 = cAnVal5,
  Ost4CU12 = cAnVal6,
  Ost4CU13 = cAnVal7,
  Ost4CU14 = cAnVal8,
  Ost4CU15 = cAnVal9,
  Ost4CU16 = cAnVal10,
  Ost4CU17 = cGrMc,
  Ost4CU18 = wType + cMc
);

#doc
 Объект для расчета остатков в разрезе объектов целевого учета
#end
ObjInterface oCalcOst4CU;

//процедура удаляет содержимое таблиц для расчета остатков
Procedure InitCalcOst;

//функция расчитывающая остатки по МЦ
Function RunCalcOst(rCalcPar : TRecCalcPar): word;

//функция расчитывающая остатки по аналитикам
Function RunCalcOstByAn(rCalcPar : TRecCalcPar): word;

//выводит отладочную информацию
Procedure RunDebugWindow;

//функция для получения количества записей в таблице Ost4Cu
//после использования функций RunCalcOst и RunCalcOstByAn
Function GetCountOstRec : longint;

end;

VipInterface CalcOst4CU implements oCalcOst4CU #Licensed_Free;
#endif
