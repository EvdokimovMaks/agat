// =============================================================================
//                                                     (c)  корпорация Галактика
// Галактика 7.11
// Описание интерфейса-объекта "Функции работы с файлами, обработка исключений"
// =============================================================================
// Объект предназначен для унификации обработки исключений при работе с файлами
// Для исключений при работе с файлами используются следующие имена:
//   onExPathNotFound          - Не найден путь для создания файла
//   onExTooManyHandlers       - Слишком много открытых файлов
//   onExFileAccessDenied      - Доступ запрещен
//   onExBadFileHandler        - Некорректный код файла
//   onExDriveNotFound         - Указан несуществующий диск
//   onExCannotDeleteCurDir    - Невозможно удалить текущую директорию
//   onExDiskIsWriteProtected  - Попытка записи на защищенный от записи диск
//   onExDriveNotReady         - Диск не готов
//   onExFileWriteError        - Ошибка записи
//   onExFileReadError         - Ошибка чтения
//   onExFileSharingViolation  - Нарушение разделения файла
//   onExFileIsLocked          - Нарушение блокировки файла
//   onExFileAlreadyExist      - Уже существует файл с указанным именем
//   onExCannotCreateDirectory - Ошибка создания директории
//   onExNetworkError          - Ошибка при работе с сетью
//   onExNullFileName          - Пустое имя файла при открытии файла
//   onExFileNotOpened         - Файл не открыт
//   onExFileUniversalErrors   - Ошибка работы с файлом
//   onExFileNotFound          - Не найден файл
//   onExFile                  - Ошибка работы с файлом

#component "M_MnPlan"

//******************************************************************************
// ObjInterface oFile_CF
#ifndef __Def_oFile_CF__
#define __Def_oFile_CF__
#doc
 Описание интерфейса-объекта "Функции работы с файлами, обработка исключений"</brief> <br>
 Объект предназначен для унификации обработки исключений при работе с файлами <br>
 Для исключений при работе с файлами используются следующие имена: <br>
   onExPathNotFound          - Не найден путь для создания файла <br>
   onExTooManyHandlers       - Слишком много открытых файлов <br>
   onExFileAccessDenied      - Доступ запрещен <br>
   onExBadFileHandler        - Некорректный код файла <br>
   onExDriveNotFound         - Указан несуществующий диск <br>
   onExCannotDeleteCurDir    - Невозможно удалить текущую директорию <br>
   onExDiskIsWriteProtected  - Попытка записи на защищенный от записи диск <br>
   onExDriveNotReady         - Диск не готов <br>
   onExFileWriteError        - Ошибка записи <br>
   onExFileReadError         - Ошибка чтения <br>
   onExFileSharingViolation  - Нарушение разделения файла <br>
   onExFileIsLocked          - Нарушение блокировки файла <br>
   onExFileAlreadyExist      - Уже существует файл с указанным именем <br>
   onExCannotCreateDirectory - Ошибка создания директории <br>
   onExNetworkError          - Ошибка при работе с сетью <br>
   onExNullFileName          - Пустое имя файла при открытии файла <br>
   onExFileNotOpened         - Файл не открыт <br>
   onExFileUniversalErrors   - Ошибка работы с файлом <br>
   onExFileNotFound          - Не найден файл <br>
   onExFile                  - Ошибка работы с файлом <br>
#end
ObjInterface oFile_CF;

//------------------------------------------------------------------------------
#doc
 Включение/выключение встроенных обработчиков исключений при работе с файлами</brief> <br>
 Параметры: <br>
   asExceptions - Имена исключений через запятую, если пустая строка - то все исключения <br>
   abEnable     - Флаг использования внутренней обработки указанных исключений <br>
#end
Procedure SetIntProcessingExceptions(asExceptions: string; abEnable: boolean);

//------------------------------------------------------------------------------
#doc
 Получение имени последнего исключения при работе с файлами</brief> <br>
 Результат: <br>
   Имя последнего исключения при работе с файлами, если исключений не было - пустая строка <br>
#end
Function GetLastExceptName: string;

//------------------------------------------------------------------------------
#doc
 Определение, открыт ли файл</brief> <br>
 Результат: <br>
   True, если открыт ли файл, иначе - False <br>
#end
Function IsFileOpen: boolean;

//------------------------------------------------------------------------------
#doc
 Закрытие файла, открытого OpenFile или OpenMemo</brief> <br>
#end
Procedure Close;

//------------------------------------------------------------------------------
#doc
 Определение, достигнут лт конец файла</brief> <br>
 Результат: <br>
   True, если достигнут конец файла, иначе - False <br>
#end
Function EOF: boolean;

//------------------------------------------------------------------------------
#doc
 Проверка, были ли ошибки при работе с файлом</brief> <br>
 Результат: <br>
   True, если были ошибки, иначе - False <br>
#end
Function GetError: boolean;

//------------------------------------------------------------------------------
#doc
 Получение имени текущего открытого файла</brief> <br>
 Результат: <br>
   Строка с именем текущего открытого файла или пустая строка <br>
#end
Function FileName: string;

//------------------------------------------------------------------------------
#doc
 Получение текущей позиции в файле</brief> <br>
 Результат: <br>
   Текущая позиция в файле <br>
#end
Function GetPos: longint;

//------------------------------------------------------------------------------
#doc
 Получение размера файла</brief> <br>
 Результат: <br>
   Размер файла <br>
#end
Function GetSize: longint;

//------------------------------------------------------------------------------
#doc
 Получение ссылки на объект File</brief> <br>
 Результат: <br>
   Ссылка на объект File или 0 в случае ошибки <br>
#end
Function Handle: TPtr;

//------------------------------------------------------------------------------
#doc
 Открытие файла</brief> <br>
 Параметры: <br>
   asName    - Имя открываемого файла <br>
   awMode    - Режим открытия файла <br>
 Результат: <br>
   True, если успешно, иначе - False <br>
#end
Function OpenFile(asName: string; awMode: word): boolean;

//------------------------------------------------------------------------------
#doc
 Чтение символа в achVar из файла с текущей позиции</brief> <br>
 Параметры: <br>
   achVar - Ссылка на переменную типа "символ" <br>
#end
Procedure ReadCh(var achVar: char);

//------------------------------------------------------------------------------
#doc
 Чтение строки в asVar из файла с текущей позиции</brief> <br>
 Параметры: <br>
   asVar - Ссылка на переменную типа "строка" <br>
#end
Procedure ReadLn(var asVar: string);

//------------------------------------------------------------------------------
#doc
 Установка позиции от начала файла, равную aliPos</brief> <br>
 Параметры: <br>
   aliPos - Позиция от начала файла, положительное число <br>
#end
Procedure Seek(aliPos: longint);

//------------------------------------------------------------------------------
#doc
 Усечение файла до текущей позиции</brief> <br>
#end
Procedure Truncate;

//------------------------------------------------------------------------------
#doc
 Запись символа achVar в файл с текущей позиции без символа перевода каретки</brief> <br>
 Параметры: <br>
   achVar - Символ <br>
#end
Procedure WriteCh(achVar: char);

//------------------------------------------------------------------------------
#doc
 Запись содержимого asVar в файл с текущей позиции без символа перевода каретки
 в конце строки</brief> <br>
 Параметры: <br>
   asVar - Строка <br>
#end
Procedure WriteLine(asVar: string);

//------------------------------------------------------------------------------
#doc
 Запись содержимого asVar в файл с текущей позиции с символом перевода каретки
 в конце строки</brief> <br>
 Параметры: <br>
   asVar - Строка <br>
#end
Procedure WriteLn(asVar: string);

End; // ObjInterface oFile_CF

VipInterface iFile_CF implements oFile_CF Licensed(Free);

#endif
