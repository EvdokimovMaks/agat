// =============================================================================
//                                                     (c)  корпорация Галактика
// Галактика 8.1 - Производственный контур
// Описание интерфейса "Просмотр и редактирование маршрутного листа"
// =============================================================================
#ifndef __VEDITMLFORKVZ_VIH
#define __VEDITMLFORKVZ_VIH

#ifdef ComponentVersion
#component "M_MnPlan"
#end

#ifndef OBJINT_ALGORITM
#define OBJINT_ALGORITM
#include ObjIntPl.vin
#endif

#ifndef __OIEVNLOG__
#include oiEvnLog.vih
#endif // __OIEVNLOG__

Table Struct SpecMSKKVZ       //Спецификация маршрутно-сопроводительной карты
(
  cNRec       : comp,         //Номер записи
  wNumOper    : word,         //Номер операции МК
  cNameOper   : comp,         //Полное наименование операции
  sFactPred   : string,       //Предыдущая операция  - ФАКТИЧЕСКАЯ
  sSokrName   : string,       //Сокращённое наименование операции
  cGORK       : comp,         //Ссылка на соответствующую запись synGetOper_Razrez_Kol
  cPodr       : comp,         //KatPodr.Nrec
  cRPod       : comp,         //RsvOper.cPodr
  sPodr       : string,       //Цех
  sRPod       : string,       //Участок
  cPart       : comp,         //Партия
  sNextPodr   : string,       //Цех-получатель
  dZap        : _DateTime,    //Дата запуска
  dZav        : _DateTime,    //Дата завершения
  sIzd        : string,       //Изделие
  bIsMark     : boolean,      //Для пометки записей...
  cState      : comp,         //Ссылка на системное сотояние
  cRsv        : comp,         //Ссылка на RsvOper (RsvOper.nrec)
  wKind       : word,         // 0 - неисправимый брак ; 1 - исправимый брак
  dValue      : double,       //Введённое значение, для которого нужно запустить расчёт 5 алгоритма
  cKatMarsh   : comp,         //Ссылка на маршрутную карту
  cMarsh_Sp   : comp,         //RsvOperN.cWhy
  bIsControl  : boolean,      //Контрольная или неконтрольная операция...
  wLastOper   : word,         //Признак. 1 - последняя операция, 0 - непоследняя операция
  dPlan       : double,       //План (расчитываемое поле) = планир + завершение + брак
  dFact       : double,       //Завершение
  dOstatok    : double,       //Остаток (расчитываемое поле) = план - факт + брак
  dBrak       : double,       //Брак
  dPodgotovka : double        //Подготовка
)
With Index
(
  SpecMSKKVZ01 = cNRec(Unique, Surrogate),
  SpecMSKKVZ02 = cGORK,
  SpecMSKKVZ03 = cPodr + wLastOper,
  SpecMSKKVZ04 = bIsMark,
  SpecMSKKVZ05 = wNumOper,
  SpecMSKKVZ06 = wLastOper,
  SpecMSKKVZ07 = cNameOper,
  SpecMSKKVZ08 = cPart,
  SpecMSKKVZ09 = cPodr + cPart,
  SpecMSKKVZ10 = cRsv
)
;

Table Struct DetailInfoKVZ      //Детальная информация в разрезе операций
(
  cNRec      : comp,            //Номер записи
  sName      : string,          //Наименование операции
  dDateBeg   : _DateTime,       //Дата и время начала
  dDateEnd   : _DateTime,       //Дата и время окончания
  sPrCentre  : string,          //Производственный центр
  dKol       : double,          //Количество
  cGRK       : comp,            //Ссылка  GetOper_Razrez_Kol
  sTrState   : string,          //Состояние
  sStatus    : string,          //Статус
  wType      : word,            //Тип записи 1 - обычная, 0 - псевдозапись
  wParent    : word,            //Определяет, к какой псевдозаписи привязана запись таблицы
  cParent    : comp,            //Nrec псевдозаписи
  cRsvOper   : comp             //RsvOper.Nrec
)
With Index
(
  DetailInfoKVZ01 = cNRec(Unique, Surrogate),
  DetailInfoKVZ02 = cGRK,
  DetailInfoKVZ03 = wParent + wType + cGRK,
  DetailInfoKVZ04 = cGRK + cParent,
  DetailInfoKVZ05 = cGRK + wParent + wType + dKol,
  DetailInfoKVZ06 = cRsvOper + wParent + wType
)
;

table struct TblPrCentreKVZ
(
  Nrec          : comp,   //Нрек
  cSpecMSK      : comp,   //К какой агрегированной записи ЖР привязан сотрудник/бригада
  cRsvOper      : comp,   //SpecMSK.cRsv
  cPrCentr      : comp,   //Нрек производственного центра
  sPrCentr      : string, //Наименование производственного центра
  sCont         : string, //Табельный номер для сотрудника, номер бридаы для бриды
  sProf         : string, //Наименование профессии
  wType         : word,   //Тип - 0 - сотрудник, 1 - бригада
  cRsvPodch     : comp,
  dKol          : double, //Значится, тут у нас количество, которое будем закреплять
  wTemp         : word    //Обозначение, к чему привязываем сотрудника - факт (15) или брак (7)
)
with index
(
  TblPrCentreKVZ01 = Nrec(Unique, Surrogate),
  TblPrCentreKVZ02 = cPrCentr + cSpecMSK,
  TblPrCentreKVZ03 = cSpecMSK,
  TblPrCentreKVZ04 = cSpecMSK + cRsvOper + cPrCentr,
  TblPrCentreKVZ05 = cRsvPodch,
  TblPrCentreKVZ06 = cSpecMSK + wTemp
);

Type TRecVEMLKVZ = record
  cIzd         : comp;     //Изделие
  cParty       : comp;     //Партия
  cCeh         : comp;     //Цех
  cPodr        : comp;     //Участок
  cOper        : comp;     //Операция
  wTypeOper    : word;     //Тип операции 1 - все, 2 - контрольные
  cVarPlan     : comp;     //Вариант планирования
  wUseWorkLog  : word;     //0 - не использовать протокол расчета, 1 - использовать протокол расчета
  WorkLog      : oiEvnLog; //Объект для протокола расчета
  WorkLogConst : word;     //Константа из EvnLog.inc
  cAlg1        : comp;     //Алгоритм 1
  cAlg2        : comp;     //Алгоритм 2
  cAlg3        : comp;     //Алгоритм 3
  wMode        : word;     //Режим работы ( 1 - редактирование, 0 - просмотр)
  wEdit        : word;     //Битовая маска для редактируемых полей
                           // 1     - Факт
                           // 2     - Брак
                           // 4     - Вводим ФАКТ без привязки сотрудника
                           // 8     - Вводим БРАК без привязки сотрудника
                           // 64    - использовать объект oSetMatOperRsvOper
  wEdIzm       : word;     // 0 - учётные, 1 - активная отпускная, 2 - производственная отпускная
  TypeLink     : word;     // Тип связи с документом
  PosDoc       : word;
  wKau         : word;    //cgKau_KatMc  - изделие, cgKau_KatUsl - услуга
End; // Type TRecVEML = record

ObjInterface oViewEditMLSokr;
#doc
#end

Function RunInter ( trVEML: TRecVEMLKVZ; var stRecAcc: TRecAcc): boolean;
end;
VipInterface iViewEditMLSokr implements oViewEditMLSokr #Licensed_Free;
#endIf

