// =============================================================================
//                                                     (c)  корпорация Галактика
// Галактика 7.11
// Описание интерфейсов-объектов "Очередь для передачи параметров"
// =============================================================================

#component "M_MnPlan"

#ifndef __QUEUE_VIN
#define __QUEUE_VIN

//******************************************************************************
#doc
 Описание интерфейса-объекта "Очередь для передачи параметров типа LongInt"</brief>
#end
ObjInterface oQueueCommonLongInt;

//------------------------------------------------------------------------------
#doc
 Инициализация очереди</brief> <br>
#end
Procedure Init;

//------------------------------------------------------------------------------
#doc
 Запись значения в очередь</brief> <br>
 Параметры: <br>
   st - Значение <br>
 Результат: <br>
   True, если успешно, иначе - False <br>
#end
Function Push(st: longint): boolean;

//------------------------------------------------------------------------------
#doc
 Извлечение значения из очереди</brief> <br>
 Результат: <br>
   Значение <br>
#end
Function Pop: longint;

//------------------------------------------------------------------------------
#doc
 Определение, является ли очередь непустой</brief> <br>
 Результат: <br>
   True, если очередь непустая, иначе - False <br>
#end
Function GetFull: boolean;

//------------------------------------------------------------------------------
#doc
 Получение количества значений в очереди</brief> <br>
 Результат: <br>
   Количество значений в очереди <br>
#end
Function GetKolPos: word;

//------------------------------------------------------------------------------
#doc
 Установка заданного количества значений в очереди</brief> <br>
 Параметры: <br>
   pwMyQueue - Новое количество значений в очереди <br>
#end
Procedure Restore(pwMyQueue: word);

//------------------------------------------------------------------------------
#doc
 Установка сортировки значений в очереди</brief> <br>
 Параметры: <br>
   awOrd - Флаг сортировки: <br>
     0: по возрастанию <br>
     1: по убыванию <br>
#end
Procedure SetOrd(awOrd: word);

End; // ObjInterface oQueueCommonLongInt

VipInterface QueueLongInt implements oQueueCommonLongInt Licensed(Free);

//******************************************************************************
#doc
 Описание интерфейса-объекта "Очередь для передачи параметров типа Comp"</brief>
#end
ObjInterface oQueueCommonComp;

//------------------------------------------------------------------------------
#doc
 Инициализация очереди</brief> <br>
#end
Procedure Init;

//------------------------------------------------------------------------------
#doc
 Запись значения в очередь</brief> <br>
 Параметры: <br>
   st - Значение <br>
 Результат: <br>
   True, если успешно, иначе - False <br>
#end
Function Push(st: comp): boolean;

//------------------------------------------------------------------------------
#doc
 Извлечение значения из очереди</brief> <br>
 Результат: <br>
   Значение <br>
#end
Function Pop: comp;

//------------------------------------------------------------------------------
#doc
 Определение, является ли очередь непустой</brief> <br>
 Результат: <br>
   True, если очередь непустая, иначе - False <br>
#end
Function GetFull: boolean;

//------------------------------------------------------------------------------
#doc
 Получение количества значений в очереди</brief> <br>
 Результат: <br>
   Количество значений в очереди <br>
#end
Function GetKolPos: longint;

//------------------------------------------------------------------------------
#doc
 Установка заданного количества значений в очереди</brief> <br>
 Параметры: <br>
   pwMyQueue - Новое количество значений в очереди <br>
#end
Procedure Restore(pwMyQueue: longint);

//------------------------------------------------------------------------------
#doc
 Установка сортировки значений в очереди</brief> <br>
 Параметры: <br>
   awOrd - Флаг сортировки: <br>
     0: по возрастанию <br>
     1: по убыванию <br>
#end
Procedure SetOrd(awOrd: word);

//------------------------------------------------------------------------------
#doc
 Установка/сброс признака проверки значений в очереди на уникальность перед добавлением</brief> <br>
 Параметры: <br>
   fl - Признак проверки значений в очереди на уникальность перед добавлением: <br>
     0: проверять на уникальность при добавлении <br>
     1: не проверять на уникальность при добавлении <br>
#end
Procedure SetFlag(fl: word);

//------------------------------------------------------------------------------
#doc
 Чтение признака проверки значений в очереди на уникальность перед добавлением</brief> <br>
 Результат: <br>
   Признак проверки значений в очереди на уникальность перед добавлением: <br>
     0: проверять на уникальность при добавлении <br>
     1: не проверять на уникальность при добавлении <br>
#end
Function GetFlag: word;

End; // ObjInterface oQueueCommonComp

VipInterface QueueComp1 implements oQueueCommonComp Licensed(Free);
VipInterface QueueComp implements oQueueCommonComp Licensed(Free);

//******************************************************************************
#doc
 Описание интерфейса-объекта "Очередь для передачи параметров типа Word"</brief>
#end
ObjInterface oQueueCommonWord;

//------------------------------------------------------------------------------
#doc
 Инициализация очереди</brief> <br>
#end
Procedure Init;

//------------------------------------------------------------------------------
#doc
 Запись значения в очередь</brief> <br>
 Параметры: <br>
   st - Значение <br>
 Результат: <br>
   True, если успешно, иначе - False <br>
#end
Function Push(st: word): boolean;

//------------------------------------------------------------------------------
#doc
 Извлечение значения из очереди</brief> <br>
 Результат: <br>
   Значение <br>
#end
Function Pop: word;

//------------------------------------------------------------------------------
#doc
 Определение, является ли очередь непустой</brief> <br>
 Результат: <br>
   True, если очередь непустая, иначе - False <br>
#end
Function GetFull: boolean;

//------------------------------------------------------------------------------
#doc
 Получение количества значений в очереди</brief> <br>
 Результат: <br>
   Количество значений в очереди <br>
#end
Function GetKolPos: word;

//------------------------------------------------------------------------------
#doc
 Установка заданного количества значений в очереди</brief> <br>
 Параметры: <br>
   pwMyQueue - Новое количество значений в очереди <br>
#end
Procedure Restore(pwMyQueue: word);

//------------------------------------------------------------------------------
#doc
 Установка сортировки значений в очереди</brief> <br>
 Параметры: <br>
   awOrd - Флаг сортировки: <br>
     0: по возрастанию <br>
     1: по убыванию <br>
#end
Procedure SetOrd(awOrd: word);

End; // ObjInterface oQueueCommonWord

VipInterface QueueWord implements oQueueCommonWord Licensed(Free);

//******************************************************************************
#doc
 Описание интерфейса-объекта "Очередь для передачи параметров типа String"</brief>
#end
ObjInterface oQueueCommonString;

//------------------------------------------------------------------------------
#doc
 Инициализация очереди</brief> <br>
#end
Procedure Init;

//------------------------------------------------------------------------------
#doc
 Изменение напрвления очереди значений</brief> <br>
#end
Procedure InvertQueue;

//------------------------------------------------------------------------------
#doc
 Запись значения в очередь</brief> <br>
 Параметры: <br>
   st - Значение <br>
 Результат: <br>
   True, если успешно, иначе - False <br>
#end
Function Push(st: string): boolean;

//------------------------------------------------------------------------------
#doc
 Извлечение значения из очереди</brief> <br>
 Результат: <br>
   Значение <br>
#end
Function Pop: string;

//------------------------------------------------------------------------------
#doc
 Определение, является ли очередь непустой</brief> <br>
 Результат: <br>
   True, если очередь непустая, иначе - False <br>
#end
Function GetFull: boolean;

//------------------------------------------------------------------------------
#doc
 Получение количества значений в очереди</brief> <br>
 Результат: <br>
   Количество значений в очереди <br>
#end
Function GetKolPos: word;

//------------------------------------------------------------------------------
#doc
 Установка заданного количества значений в очереди</brief> <br>
 Параметры: <br>
   pwMyQueue - Новое количество значений в очереди <br>
#end
Procedure Restore(pwMyQueue: word);

//------------------------------------------------------------------------------
#doc
 Установка сортировки значений в очереди</brief> <br>
 Параметры: <br>
   awOrd - Флаг сортировки: <br>
     0: по возрастанию <br>
     1: по убыванию <br>
#end
Procedure SetOrd(awOrd: word);

End; // ObjInterface oQueueCommonString

VipInterface QueueString implements oQueueCommonString Licensed(Free);

#endif //__QUEUE_VIN
