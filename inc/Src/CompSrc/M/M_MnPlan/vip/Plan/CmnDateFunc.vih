// =============================================================================
//                                                     (c)  корпорация Галактика
// Галактика 7.11 - Производственный контур
// Описание интерфейса-объекта "Общие функции для работы с датами"
// =============================================================================

#component "M_MnPlan"

//******************************************************************************
// Типы данных

//------------------------------------------------------------------------------
// Структура для задания фильтра по датам (диапазона дат)
#ifndef __Def_TDateFilter__
#define __Def_TDateFilter__
#doc
 Структура для задания фильтра по датам (диапазона дат)</brief><br>
 Поля:<br>
   wFlDateBeg        - Флаг для начальной даты:<br>
     0: плавающая<br>
     1: фиксированная<br>
     3: плавающая относительно dtDateBegFix<br>
   dtDateBegFix      - Фиксированная начальная дата<br>
   wDateBegFloat     - Плавающая начальная дата:<br>
     0 : текущая                   / dtDateBegFix<br>
     1 : начало текущей недели     / начало недели<br>
     2 : начало текущей декады     / начало декады<br>
     3 : начало текущего месяца    / начало месяца<br>
     4 : начало текущего квартала  / начало квартала<br>
     5 : начало текущего полугодия / начало полугодия<br>
     6 : начало текущего года      / начало года<br>
     7 : конец текущей недели      / конец недели<br>
     8 : конец текущей декады      / конец декады<br>
     9 : конец текущего месяца     / конец месяца<br>
     10: конец текущего квартала   / конец квартала<br>
     11: конец текущего полугодия  / конец полугодия<br>
     12: конец текущего года       / конец года<br>
   iShiftDateBeg     - Смещение начальной даты (количество)<br>
   wShiftDateBegUnit - Единица смещения начальной даты: (из TppConst.inc)<br>
     xDay     : день<br>
     xWeek    : неделя<br>
     xTenDay  : декада<br>
     xMonth   : месяц<br>
     xQuarter : квартал<br>
     xHalfYear: полугодие<br>
     xYear    : год<br>
   wTypePeriod       - Тип периодов:<br>
     xDay     : день<br>
     xWeek    : неделя<br>
     xTenDay  : декада<br>
     xMonth   : месяц<br>
     xQuarter : квартал<br>
     xHalfYear: полугодие<br>
     xYear    : год<br>
   wPeriodCount      - Количество периодов<br>
   bIncChildPeriods  - Признак включения дочерних периодов<br>
   wFlDateEnd        - Флаг для конечной даты:<br>
     0: плавающая<br>
     1: фиксированная<br>
     2: не ограничена<br>
   dtDateEndFix      - Фиксированная конечная дата<br>
   wDateEndFloat     - Плавающая конечная дата:<br>
     0 : текущая<br>
     1 : начало текущей недели<br>
     2 : начало текущей декады<br>
     3 : начало текущего месяца<br>
     4 : начало текущего квартала<br>
     5 : начало текущего полугодия<br>
     6 : начало текущего года<br>
     7 : конец текущей недели<br>
     8 : конец текущей декады<br>
     9 : конец текущего месяца<br>
     10: конец текущего квартала<br>
     11: конец текущего полугодия<br>
     12: конец текущего года<br>
   iShiftDateEnd     - Смещение конечной даты (количество)<br>
   wShiftDateEndUnit - Единица смещения конечной даты:<br>
     xDay     : день<br>
     xWeek    : неделя<br>
     xTenDay  : декада<br>
     xMonth   : месяц <br>
     xQuarter : квартал <br>
     xHalfYear: полугодие <br>
     xYear    : год <br>
#end
Type TDateFilter = record
  wFlDateBeg: word;          // Флаг для начальной даты:
                             //   0 - плавающая
                             //   1 - фиксированная
                             //   3 - плавающая относительно dtDateBegFix
  dtDateBegFix: date;        // Фиксированная начальная дата
  wDateBegFloat: word;       // Плавающая начальная дата:
                             //    0 - текущая                   / dtDateBegFix
                             //    1 - начало текущей недели     / начало недели
                             //    2 - начало текущей декады     / начало декады
                             //    3 - начало текущего месяца    / начало месяца
                             //    4 - начало текущего квартала  / начало квартала
                             //    5 - начало текущего полугодия / начало полугодия
                             //    6 - начало текущего года      / начало года
                             //    7 - конец текущей недели      / конец недели
                             //    8 - конец текущей декады      / конец декады
                             //    9 - конец текущего месяца     / конец месяца
                             //   10 - конец текущего квартала   / конец квартала
                             //   11 - конец текущего полугодия  / конец полугодия
                             //   12 - конец текущего года       / конец года
  iShiftDateBeg: integer;    // Смещение начальной даты (количество)
  wShiftDateBegUnit: word;   // Единица смещения начальной даты: (из TppConst.inc)
                             //   xDay      - день
                             //   xWeek     - неделя
                             //   xTenDay   - декада
                             //   xMonth    - месяц
                             //   xQuarter  - квартал
                             //   xHalfYear - полугодие
                             //   xYear     - год
  wTypePeriod: word;         // Тип периодов:
                             //   xDay      - день
                             //   xWeek     - неделя
                             //   xTenDay   - декада
                             //   xMonth    - месяц
                             //   xQuarter  - квартал
                             //   xHalfYear - полугодие
                             //   xYear     - год
  wPeriodCount: word;        // Количество периодов
  bIncChildPeriods: boolean; // Признак включения дочерних периодов
  wFlDateEnd: word;          // Флаг для конечной даты:
                             //   0 - плавающая
                             //   1 - фиксированная
                             //   2 - не ограничена
  dtDateEndFix: date;        // Фиксированная конечная дата
  wDateEndFloat: word;       // Плавающая конечная дата:
                             //    0 - текущая
                             //    1 - начало текущей недели
                             //    2 - начало текущей декады
                             //    3 - начало текущего месяца
                             //    4 - начало текущего квартала
                             //    5 - начало текущего полугодия
                             //    6 - начало текущего года
                             //    7 - конец текущей недели
                             //    8 - конец текущей декады
                             //    9 - конец текущего месяца
                             //   10 - конец текущего квартала
                             //   11 - конец текущего полугодия
                             //   12 - конец текущего года
  iShiftDateEnd: integer;    // Смещение конечной даты (количество)
  wShiftDateEndUnit: word;   // Единица смещения конечной даты:
                             //   xDay      - день
                             //   xWeek     - неделя
                             //   xTenDay   - декада
                             //   xMonth    - месяц
                             //   xQuarter  - квартал
                             //   xHalfYear - полугодие
                             //   xYear     - год
End; // Type TDateFilter
#endif

//******************************************************************************
// ObjInterface oiCmnDateFunc
#ifndef __Def_OI_CmnDateFunc__
#define __Def_OI_CmnDateFunc__
#doc
 Описание интерфейса-объекта "Общие функции для работы с датами"</brief>
#end
ObjInterface oiCmnDateFunc;

//------------------------------------------------------------------------------
#doc
 Уточнение даты</brief> <br>
 Параметры: <br>
   awFlDate        - Флаг для даты: <br>
     0:- плавающая <br>
     1: фиксированная <br>
     3: плавающая относительно adtDateBegFix <br>
   adtDateFix      - Значение фиксированной даты <br>
   awDateFloat     - Значение плавающей даты: <br>
     0 : текущая                   / adtDateBegFix <br>
     1 : начало текущей недели     / начало недели <br>
     2 : начало текущей декады     / начало декады <br>
     3 : начало текущего месяца    / начало месяца <br>
     4 : начало текущего квартала  / начало квартала <br>
     5 : начало текущего полугодия / начало полугодия <br>
     6 : начало текущего года      / начало года <br>
     7 : конец текущей недели      / конец недели <br>
     8 : конец текущей декады      / конец декады <br>
     9 : конец текущего месяца     / конец месяца <br>
     10: конец текущего квартала   / конец квартала <br>
     11: конец текущего полугодия  / конец полугодия <br>
     12: конец текущего года       / конец года <br>
   aiShiftDate     - Смещение даты (количество) <br>
   awShiftDateUnit - Единица смещения даты: <br>
     xDay     : день <br>
     xWeek    : неделя <br>
     xTenDay  : декада <br>
     xMonth   : месяц <br>
     xQuarter : квартал <br>
     xHalfYear: полугодие <br>
     xYear    : год <br>
 Результат: <br>
   Уточненная дата <br>
#end
Function AdjustDate(awFlDate: word; adtDateFix: date; awDateFloat: word;
  aiShiftDate: integer; awShiftDateUnit: word): date;

//------------------------------------------------------------------------------
#doc
 Получение начальной даты для типа периода</brief> <br>
 Параметры: <br>
   adtDat - Дата <br>
   awTPer - Тип периода: <br>
     xDay     : день <br>
     xWeek    : неделя <br>
     xTenDay  : декада <br>
     xMonth   : месяц <br>
     xQuarter : квартал <br>
     xHalfYear: полугодие <br>
     xYear    : год <br>
 Результат: <br>
   Начальная дата для типа периода <br>
#end
Function GetStartDateByTPer(adtDat: date; awTPer: word): date;

//------------------------------------------------------------------------------
#doc
 Получение конечной даты для типа периода</brief> <br>
 Параметры: <br>
   adtDat - Дата <br>
   awTPer - Тип периода: <br>
     xDay     : день <br>
     xWeek    : неделя <br>
     xTenDay  : декада <br>
     xMonth   : месяц <br>
     xQuarter : квартал <br>
     xHalfYear: полугодие <br>
     xYear    : год <br>
 Результат: <br>
   Конечная дата для типа периода <br>
#end
Function GetEndDateByTPer(adtDat: date; awTPer: word): date;

//------------------------------------------------------------------------------
#doc
 Анализ на входимость в интервал</brief> <br>
 Параметры: <br>
   adtBeg        - Начальная дата <br>
   adtEnd        - Конечная дата <br>
   awTypePeriod  - Тип периода: <br>
     xDay     : день <br>
     xWeek    : неделя <br>
     xTenDay  : декада <br>
     xMonth   : месяц <br>
     xQuarter : квартал <br>
     xHalfYear: полугодие <br>
     xYear    : год <br>
     999      : не определен <br>
   ardDateFilter - Фильтр по датам (для задания диапазона дат) <br>
   awCmpFlag     - Флаг сравнения: <br>
     0: По конечной дате интервала <br>
     1: По начальной дате интервала <br>
     2: По начальной и конечной дате интервала <br>
     3: По конечной дате интервала с учетом типа периода <br>
     4: По начальной дате интервала с учетом типа периода <br>
     5: По начальной и конечной датам интервала с учетом типа периода <br>
 Результат: <br>
   True - если интервал [adtBeg; adtEnd] входит в интервал, определяемый ardDateFilter <br>
#end
Function BelongToPeriod(adtBeg: date; adtEnd: date; awTypePeriod: word;
  ardDateFilter: TDateFilter; awCmpFlag: word): boolean;

//------------------------------------------------------------------------------
#doc
 Определяет, пересекаются ли периоды {adtBegin1, adtEnd1} и {adtBegin2, adtEnd2}</brief> <br>
 Параметры: <br>
   adtBeg1 - Начальная дата периода 1 <br>
   adtEnd1 - Конечная дата периода 1 <br>
   adtBeg2 - Начальная дата периода 2 <br>
   adtEnd2 - Конечная дата периода 2 <br>
 Результат:
   True, если пересекаются
#end
Function IsIntersectPeriods(adtBeg1: date; adtEnd1: date; adtBeg2: date; adtEnd2: date): boolean;

//------------------------------------------------------------------------------
#doc
 Проверка, является ли тип периода acFpTPer1 дочерним для типа периода aFpTPer2</brief> <br>
 Параметры: <br>
   acFpTPer1 - Ссылка на тип периода планирования 1 <br>
   acFpTPer2 - Ссылка на тип периода планирования 2 <br>
 Результат: <br>
   True - если acFpTPer1 явл. дочерним для acFpTPer2, иначе - False <br>
#end
Function FpTPerIsChild(acFpTPer1: comp; acFpTPer2: comp): boolean;

//------------------------------------------------------------------------------
#doc
 Проверка, является ли период acFpPeriod1 дочерним для периода aFpPeriod2</brief> <br>
 Параметры: <br>
   acFpPeriod1 - Ссылка на период планирования 1 <br>
   acFpPeriod2 - Ссылка на период планирования 2 <br>
 Результат: <br>
   True - если acFpPeriod1 явл. дочерним для acFpPeriod2, иначе - False <br>
#end
Function FpPeriodIsChild(acFpPeriod1: comp; acFpPeriod2: comp): boolean;

//------------------------------------------------------------------------------
#doc
 Получение FpTPer.Nrec для константы типа периода (с учетом настройки
 "Настройка\Планирование -> Тип периода производственного планирования")</brief> <br>
 Параметры: <br>
   awTPer   - Тип периода планирования: <br>
     xDay     : день <br>
     xWeek    : неделя <br>
     xTenDay  : декада <br>
     xMonth   : месяц <br>
     xQuarter : квартал <br>
     xHalfYear: полугодие <br>
     xYear    : год <br>
   acFpTPer - Ссылка на тип период планирования (возвращается) <br>
 Результат: <br>
   tsOk - если все нормально, иначе - код ошибки <br>
#end
Function GetFpTPerByXTPer(awTPer: word; var acFpTPer: comp): longint;

//------------------------------------------------------------------------------
#doc
 Получение FpPeriod.Nrec для даты и типа периода (с учетом настройки <br>
 "Настройка\Планирование -> Текущий период производственного планирования")</brief> <br>
 Параметры: <br>
   adtDat     - Дата <br>
   awTPer     - Тип периода планирования: <br>
     xDay     : день <br>
     xWeek    : неделя <br>
     xTenDay  : декада <br>
     xMonth   : месяц <br>
     xQuarter : квартал <br>
     xHalfYear: полугодие <br>
     xYear    : год <br>
   acFpPeriod - Ссылка на период планирования (возвращается) <br>
 Результат: <br>
   tsOk - если все нормально, иначе - код ошибки <br>
#end
Function GetFpPeriodByDate(adtDat: date; awTPer: word; var acFpPeriod: comp): longint;

//------------------------------------------------------------------------------
#doc
 Получение начальной и конечной дат для FpPeriod.Nrec</brief> <br>
 Параметры: <br>
   acFpPeriod - Ссылка на период планирования <br>
   adtBeg     - Начальная дата периода (возвращается) <br>
   adtEnd     - Конечная дата периода (возвращается) <br>
 Результат: <br>
   tsOk - если все нормально, иначе - код ошибки <br>
#end
Function GetFpPeriodDates(acFpPeriod: comp; var adtBeg: date; var adtEnd: date): longint;

//------------------------------------------------------------------------------
#doc
 Получение SpGraf.Nrec для даты и графика</brief> <br>
 Параметры: <br>
   adtDat       - Дата <br>
   acGrafik     - Ссылка на график <br>
   awSearchMode - Режим поиска ближайшей позиции графика: <br>
     0: ближайшая большая <br>
     1: ближайшая меньшая <br>
   acSpGraf     - Ссылка на спецификацию графика (возвращается) <br>
 Результат: <br>
   tsOk - если все нормально, иначе - код ошибки <br>
#end
Function GetSpGrafByDate(adtDat: date; acGrafik: comp; awSearchMode: word; var acSpGraf: comp): longint;

End; // ObjInterface oiCmnDateFunc

ObjInterface oiCmnDateFunc1(oiCmnDateFunc);

 Function GetLast_Number_for_SpWayAc_nfAvtForm(p_cWayAccou : comp) : word;

end;

VipInterface iCmnDateFunc implements oiCmnDateFunc1 Licensed(Free);

#endif
