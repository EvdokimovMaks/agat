// =============================================================================
//                                                     (c)  корпорация Галактика
// Галактика 7.11 - Производственный контур
// Описание интерфейса-объекта "Буфер значений типа WORD"
// =============================================================================

#component "M_MnPlan"

//******************************************************************************
// ObjInterface oValuesWord_BF
#ifndef __Def_oValuesWord_BF__
#define __Def_oValuesWord_BF__
#doc
 Описание интерфейса-объекта "Буфер значений типа WORD"</brief>
#end
ObjInterface oValuesWord_BF;

//------------------------------------------------------------------------------
#doc
 Очистка буфера значений</brief><br>
#end
Procedure Clear;

//------------------------------------------------------------------------------
#doc
 Чтение количества значений в буфере</brief><br>
 Результат:<br>
   Количество значений в буфере<br>
#end
Function _Count: longint;

//------------------------------------------------------------------------------
#doc
 Добавление значения в буфер</brief><br>
 Параметры:<br>
   awValue - Значение<br>
 Результат:<br>
   True, если успешно, иначе - False<br>
#end
Function Add(awValue: word): boolean;

//------------------------------------------------------------------------------
#doc
 Удаление значения из буфера</brief><br>
 Параметры:<br>
   awValue - Значение<br>
 Результат:<br>
   True, если успешно, иначе - False<br>
#end
Function Del(awValue: word): boolean;

//------------------------------------------------------------------------------
#doc
 Поиск значения в буфере</brief><br>
 Параметры:<br>
   awValue - Значение<br>
 Результат:<br>
   True, если успешно, иначе - False<br>
#end
Function Find(awValue: word): boolean;

//------------------------------------------------------------------------------
#doc
 Поиск значения в буфере и переход на запись, соответствующую этому значению</brief><br>
 Параметры:<br>
   awValue - Значение<br>
 Результат:<br>
   True, если успешно, иначе - False<br>
#end
Function GoToValue(awValue: word): boolean;

//------------------------------------------------------------------------------
#doc
 Установка сортировки значений в буфере (для функций GetFirstValue,...)</brief><br>
 Параметры:<br>
   awOrder - Флаг сортировки (0 - без сортировки, 1 - по возрастанию, 2 - по убыванию)<br>
 Результат:<br>
   True, если успешно, иначе - False<br>
#end
Procedure _SetOrder(awOrder: word);

//------------------------------------------------------------------------------
#doc
 Чтение текущего значения в буфере</brief><br>
 Параметры:<br>
   awValue - Значение (возвращается)<br>
 Результат:<br>
   True, если успешно, иначе - False<br>
#end
Function GetCurrentValue(var awValue: word): boolean;

//------------------------------------------------------------------------------
#doc
 Чтение первого значения в буфере</brief><br>
 Параметры:<br>
   awValue - Значение (возвращается)<br>
 Результат:<br>
   True, если успешно, иначе - False<br>
#end
Function GetFirstValue(var awValue: word): boolean;

//------------------------------------------------------------------------------
#doc
 Чтение последнего значения в буфере</brief><br>
 Параметры:<br>
   awValue - Значение (возвращается)<br>
 Результат:<br>
   True, если успешно, иначе - False<br>
#end
Function GetLastValue(var awValue: word): boolean;

//------------------------------------------------------------------------------
#doc
 Чтение следующего значения в буфере относительно текущей позиции</brief><br>
 Параметры:<br>
   awValue - Значение (возвращается)<br>
 Результат:<br>
   True, если успешно, иначе - False<br>
#end
Function GetNextValue(var awValue: word): boolean;

//------------------------------------------------------------------------------
#doc
 Чтение предыдущего значения в буфере относительно текущей позиции</brief><br>
 Параметры:<br>
   awValue - Значение (возвращается)<br>
 Результат:<br>
   True, если успешно, иначе - False<br>
#end
Function GetPrevValue(var awValue: word): boolean;

End; // ObjInterface oValuesWord_BF

VipInterface iValuesWord_BF implements oValuesWord_BF Licensed(Free);

#endif
