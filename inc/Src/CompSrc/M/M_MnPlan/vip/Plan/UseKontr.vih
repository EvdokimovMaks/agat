//------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Галактика 8.1 - Производственный контур
// Объект для контрактации заявок
//------------------------------------------------------------------------------

#ifdef ComponentVersion
#component "M_MnPlan"
#end

Type TRecParInt = record
  cNrecDoc   : comp; //Нрек либо ДО на закупку, либо Договора
  wType      : word; //1 - Договор, 0 - ДО на закупку
  wTypeVid   : word; //SpMnPl.wKolAn - чтобы было плоское представление
  cMnPlan    : comp; //Нрек сводной заявки
  wNum       : word; //Номер поля ПОЗИЦИИ
  wNumSv     : word; //Номер поля сводной заявки
  wUseAvto   : word; //автоматическое распределение 0 - Да, 1 - Нет

  strAnName1 : string; //наименование аналитики плана
  strAnName2 : string; //наименование аналитики плана
  strAnName3 : string; //наименование аналитики плана
  strAnName4 : string; //наименование аналитики плана
  strAnName5 : string; //наименование аналитики плана

  strAnName6 : string;  //наименование аналитики позиции плана
  strAnName7 : string;  //наименование аналитики позиции плана
  strAnName8 : string;  //наименование аналитики позиции плана
  strAnName9 : string;  //наименование аналитики позиции плана
  strAnName10: string; //наименование аналитики позиции плана

  wAn1       : string;
  wAn2       : string;
  wAn3       : string;
  wAn4       : string;
  wAn5       : string;
  wAn6       : string;
  wAn7       : string;
  wAn8       : string;
  wAn9       : string;
  wAn10      : string;

  cValAn1    : comp;    //Значение аналитики 1 для страхового запаса
  cValAn2    : comp;    //Значение аналитики 2 для страхового запаса
  cValAn3    : comp;    //Значение аналитики 3 для страхового запаса
  cValAn4    : comp;    //Значение аналитики 4 для страхового запаса
  cValAn5    : comp;    //Значение аналитики 5 для страхового запаса

  cRoleAn1    : comp;   //Роль аналитики 1 для страхового запаса
  cRoleAn2    : comp;   //Роль аналитики 2 для страхового запаса
  cRoleAn3    : comp;   //Роль аналитики 3 для страхового запаса
  cRoleAn4    : comp;   //Роль аналитики 4 для страхового запаса
  cRoleAn5    : comp;   //Роль аналитики 5 для страхового запаса

  wFieldSZ    : word;   //Номер поля для привязки актов
  wStZap      : word;   //Пополнение страхового запаса 0 - Да, 1 - Нет, 2 - по запросу
  wInputDocs  : word;   //обработка входящих позиций свождной заявки
  wNastr      : word;   //давать закрывать окошко, если не всё заполнено 0 - да, 1 - нет
  wClient     : word;   // 0 - mtg, 1 - vsmn

  cDopValue1  : comp;     //Роль аналитики 1
  cDopValue2  : comp;     //Роль аналитики 2
  cDopValue3  : comp;     //Роль аналитики 3
End; // Type TRecParInt = record

//таблица с позициямия сводной заявки
Table Struct MainValue
(
  Nrec    : comp,
  cOperDocsTbl : comp, //cOst4CU
  cDocSvod : comp, //cDocSvod
  cDocMTR : comp, //cDocMTR
  Kol     : double,//Количество аналога
  KolBasic: double, //Количество базовой МЦ
  isRaspr : boolean//Сформировали связи или нет
)
With Index
(
  MainValue01 = NRec(Unique, Surrogate),
  MainValue02 = cDocSvod + cDocMTR + cOperDocsTbl,
  MainValue03 = cDocMTR,
  MainValue04 = cOperDocsTbl + isRaspr,
  MainValue05 = cOperDocsTbl + Nrec
);

//таблица связи позиций договора/ДО с позициями заявки МТР
Table Struct VSMNValue
(
  Nrec    : comp,
  cOperDocsTbl : comp, //cOperDocsTbl
  cDocMTR : comp,      //cDocMTR
  Kol     : double,    //Количество аналога
  KolBasic: double,    //Количество базовой МЦ
  isRaspr : boolean    //Сформировали связи или нет
)
With Index
(
  VSMNValue01 = NRec(Unique, Surrogate),
  VSMNValue02 = cDocMTR + cOperDocsTbl,
  VSMNValue03 = cDocMTR,
  VSMNValue04 = cOperDocsTbl + isRaspr
);

Table Struct MPCalcFields
(
  cMnPlan     : comp,
  cSpMnPl     : comp,
  dKol        : double
)
With Index
(
  MPCalcFields01 = cMnPlan,
  MPCalcFields02 = cSpMnPl
);

Table Struct SvClaim
(
  Nrec     : comp,
  cMnPlan  : comp
)
With Index
(
  SvClaim01 = Nrec
);

Table Struct ClaimVSMN
(
  Nrec     : comp,
  cMnPlan  : comp
)
With Index
(
  ClaimVSMN01 = Nrec
);

//позиции документов контура логистики (Договора, соглашения, ДО)
table struct OperDocsTbl
(
  Nrec     : comp,
  cName    : comp,
  cPos     : comp,  //Позиция договора или ДО
  dKol     : double,
  dRaspr   : double,
  dConstKol: double,
  isStZap  : boolean, // false - не пошла на страховой запас, true - пошла на страховой запас
  isFormRel: boolean, // false - не сформированы по ней связи..., true - связи сформированы...
  cEd      : comp,    //Единица измерения для договора/ДО/соглашения
  cRA1     : comp,
  cRA2     : comp,
  cRA3     : comp,
  wA1      : word,
  wA2      : word,
  wA3      : word
)
with index
(
  OperDocsTbl101 = Nrec(Unique, Surrogate),
  OperDocsTbl102 = cName,
  OperDocsTbl103 = isStZap,
  OperDocsTbl104 = isFormrel,
  OperDocsTbl105 = dKol,
  OperDocsTbl106 = cRA1 + cRA2 + cRA3
);

//позиции сводной заявки
table struct DocSvod
(
  Nrec      : comp,
  cName     : comp,
  dKolZay   : double,
  dBeNeeded : double,
  dSupply   : double,
  cSpMnpl   : comp,
  cGroup    : comp,
  sName     : string,
  sKod      : string,
  cEd       : comp
)
with index
(
  DocSvod01 = Nrec(Unique, Surrogate),
  DocSvod02 = cName,
  DocSvod03 = cSpMnPl,
  DocSvod04 = cGroup,
  DocSvod05 = cSpMnPl + dSupply,
  DocSvod06 = dBeNeeded
);

table struct DocMTR
(
  Nrec      : comp,
  cUpper    : comp,  //DocSvod.cSpMnpl
  cName     : comp,
  cGroup    : comp,
  Date_     : Date,
  cStatus   : comp,
  cAV1      : comp,
  cAV2      : comp,
  cAV3      : comp,
  cAV4      : comp,
  cAV5      : comp,
  cAV6      : comp,
  cAV7      : comp,
  cAV8      : comp,
  cAV9      : comp,
  cAV10     : comp,
  wKG1      : word,
  wKG2      : word,
  wKG3      : word,
  wKG4      : word,
  wKG5      : word,
  wKG6      : word,
  wKG7      : word,
  wKG8      : word,
  wKG9      : word,
  wKG10     : word,
  dKolZay   : double,
  dBeNeeded : double,
  dSupply   : double,
  dSupTemp3 : double,
  bSigns    : boolean ,
  cPosCl    : comp,
  cMnPlan   : comp,
  sName     : string,
  sKod      : string,
  cEd       : comp,
  cRA1      : comp,
  cRA2      : comp,
  cRA3      : comp,
  wA1       : word,
  wA2       : word,
  wA3       : word,
  sFilial   : string,
  sF1       : string,
  sF2       : string,
  sF3       : string,
  sF4       : string,
  sF5       : string,
  sF6       : string,
  sF7       : string,
  sF8       : string,
  sF9       : string,
  sF10      : string
)
with index
(
  DocMTR01 = Nrec(Unique, Surrogate),
  DocMTR02 = cUpper + Date_ ,
  DocMTR03 = cName,
  DocMTR04 = cName + dSupply,
  DocMTR05 = cStatus,
  DocMTR06 = bSigns,
  DocMTR07 = cAV1,
  DocMTR08 = cAV2,
  DocMTR09 = cAV3,
  DocMTR10 = cAV4,
  DocMTR11 = cAV5,
  DocMTR12 = cAV6,
  DocMTR13 = cAV7,
  DocMTR14 = cAV8,
  DocMTR15 = cAV9,
  DocMTR16 = cAV10,
  DocMTR17 = cPosCl,
  DocMTR18 = dBeNeeded,
  DocMTR19 = cRA1 + cRA2 + cRA3,
  DocMTR20 = cUpper + sF1,
  DocMTR21 = cUpper + sF2,
  DocMTR22 = cUpper + sF3,
  DocMTR23 = cUpper + sF4,
  DocMTR24 = cUpper + sF5,
  DocMTR25 = cUpper + sF6,
  DocMTR26 = cUpper + sF7,
  DocMTR27 = cUpper + sF8,
  DocMTR28 = cUpper + sF9,
  DocMTR29 = cUpper + sF10

);

#doc
 Объект для расчета остатков в разрезе объектов целевого учета
#end
ObjInterface oKontr;


Function RunInter(trRecParInt : TRecParInt) : boolean;
end;

VipInterface Kontr implements oKontr #Licensed_Free;


