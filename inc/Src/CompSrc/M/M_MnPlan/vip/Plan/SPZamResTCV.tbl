
#ifndef __SpZamResTCV_TBL__
#define __SpZamResTCV_TBL__

Table struct TTNeedZamT
(
 nRec              : comp,

 cPodrNeedZam      : comp,
 prMC              : word,
 cMC               : comp,
 cParty            : comp,
 RefTopTab         : comp,
 cNoteBene         : comp,
 cFilter           : comp,
 TypeOper          : word,
 prMCUsl_Oper      : word,
 cMCUsl_Oper       : comp,

 Number            : LongInt,
 FlagErr           : Byte,
 CodExecute        : longInt,

 Diskret_ED        : word,
 Nal               : double,
 Kol               : double,
 Kol_Specif        : double,
 Kol_Norm          : double,
 KolNorma          : double
)
with index
(
  TTNeedZamT001 = nRec (Unique, Autoinc),
  TTNeedZamT003 = cPodrNeedZam + prMC + cMC + cParty + cNoteBene + cFilter + TypeOper + prMCUsl_Oper + cMCUsl_Oper + RefTopTab,
  TTNeedZamT004 = RefTopTab + cNoteBene + cFilter + TypeOper + prMC + cMC + cParty,
  TTNeedZamT005 = RefTopTab + prMC + cMC + cParty + cNoteBene + TypeOper,
  TTNeedZamT006 = FlagErr + RefTopTab + cNoteBene + cFilter,     //  ????????????????????  потом сделаю !!!!!!!!!!!!!!!!
  TTNeedZamT007 = RefTopTab + TypeOper,
  TTNeedZamT008 = prMC + cMC + cNoteBene + cFilter + TypeOper + prMCUsl_Oper + cMCUsl_Oper + RefTopTab,
  TTNeedZamT009 = cNoteBene + cFilter + TypeOper + RefTopTab
);

Table struct TTNaZamenuT
(
 nRec              : comp,
 RefTopTab         : comp,

 cPodrNeedZam      : comp,
 prMCNeedZam       : word,
 RefMCNeedZam      : comp,
 RefPartyNeedZam   : comp,
 RefNBSZam         : comp,
 Diskret_NeedZam   : word,

 TypeOper          : word,
 prMCNaZamenu      : word,
 RefMCNaZamenu     : comp,
 RefPartyNaZamenu  : comp,
 RefNBSIzm         : comp,
 Diskret_NZam      : word,

 RefNoteBene       : comp,
 RefFilter         : comp,

 RefPodr           : comp,
 RefMol            : comp,

 RefSpOrder        : comp,

 NumSort1          : comp,
 NumSort2          : comp,
 cMC_KatPokazGP    : comp,
 Number            : LongInt,
 SrokGodn          : Date,

 TreeNodeType      : word,
 Flags             : longInt,
 FlagErr           : Byte,
 CodExecute        : longInt,
 Kol_NeedZam       : double,
 Kol               : double,
 Price             : double,

 SvOst_Start       : double
)
with index
(
  TTNaZamenuT001 = nRec (Unique, Autoinc),
  TTNaZamenuT002 = RefTopTab + cPodrNeedZam + prMCNeedZam + RefMCNeedZam + RefPartyNeedZam + RefNoteBene + RefFilter + TypeOper + prMCNaZamenu + RefMCNaZamenu + RefPartyNaZamenu + RefPodr + RefMOL + RefSpOrder,
  TTNaZamenuT003 = RefTopTab + cPodrNeedZam + prMCNeedZam + RefMCNeedZam + RefPartyNeedZam + Flags,
//  TTNaZamenuT004 = RefTopTab + cPodrNeedZam + prMCNeedZam + RefMCNeedZam + RefPartyNeedZam + RefNoteBene + RefFilter + TypeOper + prMCNaZamenu + RefMCNaZamenu + RefPartyNaZamenu + NumSort,   // в этот индес ничего не добавлять, иначе NumSort собьется !!!!!!!!!!!!!!!!!! iiiiiiiiiiii
  TTNaZamenuT004 = RefTopTab + cPodrNeedZam + prMCNeedZam + RefMCNeedZam + RefPartyNeedZam + RefNoteBene + RefFilter + TypeOper + prMCNaZamenu + RefMCNaZamenu + NumSort1 + NumSort2,   // в этот индес ничего не добавлять, иначе NumSort собьется !!!!!!!!!!!!!!!!!! iiiiiiiiiiii
  TTNaZamenuT006 = cPodrNeedZam + prMCNeedZam + RefMCNeedZam + RefPartyNeedZam + RefSpOrder + RefNoteBene + RefFilter,
  TTNaZamenuT007 = prMCNaZamenu + RefMCNaZamenu + RefPartyNaZamenu + RefNoteBene + RefFilter + cPodrNeedZam,
  TTNaZamenuT008 = prMCNaZamenu + RefMCNaZamenu + RefNoteBene + RefFilter + cPodrNeedZam,
  TTNaZamenuT009 = prMCNaZamenu + RefMCNaZamenu + RefPartyNaZamenu + RefPodr + RefMol + RefSpOrder + RefNoteBene + RefFilter + cPodrNeedZam,
  TTNaZamenuT010 = prMCNaZamenu + RefMCNaZamenu + cPodrNeedZam + RefPartyNaZamenu,
//  TTNaZamenuT010 = Number,   //  ????????????????????  потом сделаю !!!!!!!!!!!!!!!!
  TTNaZamenuT011 = RefTopTab + cPodrNeedZam + prMCNeedZam + RefMCNeedZam + prMCNaZamenu + RefMCNaZamenu,
  TTNaZamenuT012 = cPodrNeedZam + prMCNeedZam + RefMCNeedZam + RefPartyNeedZam + RefNoteBene + RefFilter + TypeOper + prMCNaZamenu + RefMCNaZamenu + RefPartyNaZamenu,
  TTNaZamenuT013 = FlagErr + RefTopTab + cPodrNeedZam + prMCNeedZam + RefMCNeedZam + RefPartyNeedZam + RefNoteBene + RefFilter + TypeOper + prMCNaZamenu + RefMCNaZamenu,
  TTNaZamenuT014 = RefTopTab + cPodrNeedZam + prMCNeedZam + RefMCNeedZam + RefPartyNeedZam + TypeOper + RefNoteBene + RefFilter,
  TTNaZamenuT015 = RefNoteBene + RefFilter + RefTopTab,
  TTNaZamenuT016 = prMCNaZamenu + RefMCNaZamenu + RefPodr + RefMol + RefSpOrder + RefNoteBene + RefFilter

);


Table struct TTPossibleZamT
(
 nRec              : comp,

 RefSpecifDoc      : comp,
 RefOwnSpecifTab   : comp,
 RefNoteBene       : comp,
 RefFilter         : comp,
 TypeOper          : word,
 prMCUsl_Oper      : word,
 RefMCUsl_Oper     : comp,

 prMCNeedZam       : word,
 RefMCNeedZam      : comp,
 RefPartyNeedZam   : comp,
 RefListZam        : comp,
 RefNBSZam         : comp,
 RefNBSIzm         : comp,
 RzltNBSZam        : word,

 KoefZam           : double,
 Kol_Add           : double
)
with index
(
  TTPossibleZamT001 = nRec (Unique, Autoinc),
  TTPossibleZamT002 = RefSpecifDoc + RefOwnSpecifTab + RefNoteBene + RefFilter + TypeOper + prMCUsl_Oper + RefMCUsl_Oper,
  TTPossibleZamT003 = RefNoteBene + RefFilter + TypeOper + prMCNeedZam + RefMCNeedZam + RefPartyNeedZam + prMCUsl_Oper + RefMCUsl_Oper,
  TTPossibleZamT004 = RefNBSIzm,
  TTPossibleZamT005 = prMCNeedZam + RefMCNeedZam + RefPartyNeedZam + TypeOper + RefNoteBene + RefFilter
);




#endif
