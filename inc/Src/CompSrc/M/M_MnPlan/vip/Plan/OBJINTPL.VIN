/*
 ╔═══════════════════════════════════════════════════════════════════════════╗
 ║                     (c) 1994,2001 корпорация ГАЛАКТИКА                    ║
 ║ Проект        : ГАЛАКТИКА                                                 ║
 ║ Система       : Планирование                                              ║
 ║ Версия        : 7.1                                                       ║
 ║ Назначение    : Описание объектных интерфейсов                            ║
 ║ Ответственный : Сенькевич Игорь Казимирович (IGORS)                       ║
 ║ Параметры     : есть                                                      ║
 ╚═══════════════════════════════════════════════════════════════════════════╝
*/

#ifdef ComponentVersion
#component "M_MnPlan"
#end

#include typetbl.vpp
#include steck.vin
#include InsTblPl.vin
#include InsTblWay.vin
#include tabmem.vpp
#include oiwwKAU.vih

//******************************************************************************
// ObjInterface TypeObjMnf

#ifndef __Def_TypeObjMnf__
#define __Def_TypeObjMnf__
#doc
 Описание интерфейса "Списки типов объектов"</brief>
#end
ObjInterface TypeObjMnf;

#doc
 Инициализация списка типов объектов </brief><br>
 Результат:<br>
   True - инициализация прошла успешно<br>
#end
function InitTypeObj: boolean;

#doc
 Перекодировка типа документа</brief><br>
 Параметры:<br>
   wrkType - тип документа<br>
   forWhat - тип списка<br>
 Результат:<br>
   тип документа - False<br>
#end
function  ConvertTypePlan  (wrkType: word; forWhat: word): word;

#doc
 Получить количество типов в списке </brief><br>
 Параметры:<br>
   wrkType - тип документа<br>
   forWhat - тип списка<br>
   wrkObj  - подтип списка<br>
 Результат:<br>
   количество типов в списке - False<br>
#end
function  GetObjQnt        (wrkType: word; forWhat: word; wrkObj: word): word;

#doc
 Получить тип объекта из списка </brief><br>
 Параметры:<br>
   wrkType  - тип документа<br>
   forWhat  - тип списка<br>
   wrkObj   - подтип списка<br>
   wrkIndex - индекс в списке<br>
 Результат:<br>
   тип объекта - False<br>
#end
function  GetObjCodeByIndex(wrkType: word; forWhat: word; wrkObj: word; wrkIndex: word): word;

#doc
 Получить полное наименование типа объекта из списка </brief><br>
 Параметры:<br>
   wrkType  - тип документа<br>
   forWhat  - тип списка<br>
   wrkObj   - подтип списка<br>
   wrkCode  - код в списке<br>
 Результат:<br>
   полное наименование типа объекта из списка <br>
#end
function  GetObjNameByCode (wrkType: word; forWhat: word; wrkObj: word; wrkCode: word): string[35];

#doc
 Получить полное наименование типа объекта из списка </brief><br>
 Параметры:<br>
   wrkType  - тип документа<br>
   forWhat  - тип списка<br>
   wrkObj   - подтип списка<br>
   wrkIndex - индекс в списке<br>
 Результат:<br>
   полное наименование типа объекта из списка <br>
#end
function  GetObjNameByIndex(wrkType: word; forWhat: word; wrkObj: word; wrkIndex: word): string[35];

#doc
 Получить аббревиатуру типа объекта из списка </brief><br>
 Параметры:<br>
   wrkType  - тип документа<br>
   forWhat  - тип списка<br>
   wrkObj   - подтип списка<br>
   wrkCode  - код в списке<br>
 Результат:<br>
   аббревиатура типа объекта из списка<br>
#end
function  GetObjAbbrByCode (wrkType: word; forWhat: word; wrkObj: word; wrkCode: word): string[5];

#doc
 Получить аббревиатуру типа объекта из списка </brief><br>
 Параметры:<br>
   wrkType  - тип документа<br>
   forWhat  - тип списка<br>
   wrkObj   - подтип списка<br>
   wrkIndex - индекс в списке<br>
 Результат:<br>
   аббревиатура типа объекта из списка<br>
#end
function  GetObjAbbrByIndex(wrkType: word; forWhat: word; wrkObj: word; wrkIndex: word): string[5];

#doc
 Получить аббревиатуру типа объекта из списка </brief><br>
 Параметры:<br>
   tpPl     - тип документа<br>
   flag     - 0-выбор из шапки, 1-выбор из спецификации<br>
   ccStatus - возвращаемый статус<br>
 Результат:<br>
   True-выбор статуса прошел успешно<br>
#end
function SelectStatus ( tpPl: word;
  flag:word;  // 0 - шапка
              // 1 - спецификация
  var ccStatus:comp ): boolean;

#doc
 Получить наименование для заголовка документа</brief><br>
 Параметры:<br>
   tpPl     - тип документа<br>
   flag     - 0 - интерфейс просмотра<br>
              1 - интерфейс редактирования<br>
              2 - интерфейс редактирования  спецификации<br>
              3 - закладка интерфейса редактирования  спецификации<br>
 Результат:<br>
   наименование для заголовка документа<br>
#end
function GetNameTityl (
  tpPl: word;
  flag:word   // 0 - интерфейс просмотра
              // 1 - интерфейс редактирования
              // 2 - интерфейс редактирования  спецификации
              // 3 - закладка интерфейса редактирования  спецификации
  ): string;

end;

VipInterface iTypeObj implements TypeObjMnf Licensed(Free);
#endif

//******************************************************************************
//

#include SetupMnf.vin

//******************************************************************************
// ObjInterface Util_Common

#ifndef __Def_Util_Common__
#define __Def_Util_Common__

ObjInterface Util_Common;

// #FUN_MAIN
function GetKolCol: word;
function SetKolCol (skol:string): Boolean;
function GetKolFix : word;
function SetKolFix (skol:word): Boolean;
function SetCollumFix (nCol:word): Boolean;
function GetIsBelowlevel ( wNum : LongInt ): Boolean;
function GetIsYesOpen ( wNum : LongInt ): Boolean;
function SetOpenlevel ( wNum : LongInt ): Boolean;
function SetCloselevel ( wNum : LongInt ): Boolean;
function GetNameCol ( wNum : LongInt ; var wTree : word ): string;
function GetStVtHor( wFld: word ; var wRes : word ) : TVtHor;
function InitInter : Boolean;
function DoneInter : Boolean;

//#FUN_SCROLL
function LeftCol  ( wKol: comp ): comp;
function RightCol ( wKol: comp): comp;
function FirstCol : comp;
function LastCol  : comp;
function SetNewNumCol ( NewNumCol : comp ): comp;

//#FUN_UTIL
Procedure InitSteck;
Procedure PushSteck(ccNrec : comp );
Function  PopSteck(var ccNrec : comp ) : Boolean;
Function  GetFullSteck : Boolean;
Function  GetTopSteck  : comp;
Function  GetNumCol(wFld: LongInt ) : longint; //!!! не вызывать в подцепке с таблицей VTHOR
Function  SetTopSteck ( ccNode : comp ):Boolean;
Function  InsertVtHorTree(var num    : LongInt;
                        Flag    : LongInt;
                        thier   : word;
                        wKodKau : word;
                        wNppKau : word;
                        cpSloj  : comp;
                        sName   : string;
                        ccNrec  : comp;
                        ccNode  : comp):Boolean;

// Установить string для шапки в VtHor
Function SetNameKol ( Flag : LongInt; cpFormPl : comp ) : boolean;

//... Cтек для передачи аналитик
Function GetSteckMnAnal: SteckPar;
function GetRole(numVid: Word; pTHier: Longint): Comp; //
function GetRoleConst(numVid: Word; pTHier: Longint): Word; //

end;

VipInterface Util_PerSource      implements Util_Common Licensed(Free);
#endif

//******************************************************************************
// ObjInterface GLOBDATA

#ifndef __Def_GLOBDATA__
#define __Def_GLOBDATA__

ObjInterface SetGetVid; Forward;
ObjInterface oMainVid;Forward;
ObjInterface oVidBrows;Forward;
ObjInterface  MainScrPl;Forward;
ObjInterface  Util_ScrSp;Forward;
ObjInterface  Util_PgSp;Forward;
ObjInterface  oUtil_Service;Forward;
ObjInterface  oUtil_InsertVtHor; Forward;

ObjInterface GLOBDATA;

Function GetEnablePickNastrFromTune ( pWorkType : word ):boolean;
Procedure SetVrComp1 ( wKogrKau:word ;ccNrec : comp );
Function GetVrComp1 ( wKogrKau:word ) : comp;
Procedure SetVrComp2 ( wKogrKau:word ;ccNrec : comp );
Function GetVrComp2 ( wKogrKau:word ) : comp;
Procedure SetVrComp3 ( wKogrKau:word ;ccNrec : comp );
Function GetVrComp3 ( wKogrKau:word ) : comp;

Function GetSetObjPl ( MnPlancWayAccou : comp; TypeIzd : word ): comp ;
Function GetInsertVtHor : oUtil_InsertVtHor;
//Function FreeInsertVtHor ( InsVtHor : oUtil_InsertVtHor ): boolean;

Function GetCurNRec ( n:word ) : comp;
Function SetCurNRec ( n:word; cRec:comp ) : Boolean;

Function SetCurNRecTab ( RoleInd      : Word;   // Роль
                         KodGrKauElem : Word;   // Элементарная аналитика cgKau_XXX
                         MnPlanNRec   : comp;   // MnPlan.nRec
                         cRec         : comp;   // nRec объекта
                         Flag         : LongInt // Флаг источника
                     // 0                  -  экранные фильтры представлений
                     // ppNRecSpFormPlPick -  интерфейс выбора планов
                     // ppNRecAlgSpFormPl  -  фильтры для расчетных алгоритмов
                                    ) : boolean;

Function GetCurNRecTab ( RoleInd      : Word;   // Роль
                     var KodGrKauElem : Word;   // Элементарная аналитика cgKau_XXX
                         MnPlanNRec   : comp;   // MnPlan.nRec
                         Flag         : LongInt // Флаг источника
                     // 0                  -  экранные фильтры представлений
                     // ppNRecSpFormPlPick -  интерфейс выбора планов
                     // ppNRecAlgSpFormPl  -  фильтры для расчетных алгоритмов
                                    ) : comp;

// - Устанавливает диапазон дат для Графиков
Function SetCurBegEndGraf ( RoleInd      : Word;   // Роль
                            KodGrKauElem : Word;   // Элементарная аналитика cgKau_XXX
                            MnPlanNRec   : comp;   // MnPlan.nRec
                            dDate        : date;   // Дата для графиков
                            SourceFlag   : LongInt;// 0 - дата начала
                                                   // 1 - дата окончания
                            Flag         : LongInt // Флаг источника
                        // 0                  -  экранные фильтры представлений
                        // ppNRecSpFormPlPick -  интерфейс выбора планов
                        // ppNRecAlgSpFormPl  -  фильтры для расчетных алгоритмов
                                    ) : boolean;

// - возвращает диапазон дат для Графиков
Procedure GetCurBegEndGraf ( RoleInd      : Word;   // Роль
                        var KodGrKauElem  : Word;   // Элементарная аналитика cgKau_XXX
                            MnPlanNRec    : comp;   // MnPlan.nRec
                        var BegDate       : Date;   // дата начала
                        var EndDate       : Date;   // дата окончания
                            Flag          : LongInt // Флаг источника
                           // 0                  -  экранные фильтры представлений
                           // ppNRecSpFormPlPick -  интерфейс выбора планов
                           // ppNRecAlgSpFormPl  -  фильтры для расчетных алгоритмов
                                       );

// - Устанавливает параметры для периода
Function SetSetupFiltrPeriod ( MnPlanNRec   : comp;   // MnPlan.nRec
                               Hierarchy    : word;   // Вкл/Откл иерархию
                               fpTPerNRec   : Comp;   // Тип периода
                               KolInterval  : word;   // Количество интервалов
                               DateFix      : Date;   // Дата привязки
                               AllInterval  : word    // Вкл/Откл 'Показать все интервалы'
                              ) : boolean;

// - Получает параметры для периода
Procedure GetSetupFiltrPeriod ( MnPlanNRec   : comp;   // MnPlan.nRec
                          var   Hierarchy    : word;   // Вкл/Откл иерархию
                          var   fpTPerNRec   : Comp;   // Тип периода
                          var   KolInterval  : word;   // Количество интервалов
                          var   DateFix      : Date;   // Дата привязки
                          var   AllInterval  : word    // Вкл/Откл 'Показать все интервалы'
                              );

// .. этими 2 функциями не пользоваться они со временем будут удалены
Function SetCurVid  ( n:word ) : Boolean;
Function GetCurVid : word;
//....

Function SetMainInter   ( pium : Util_Common): Boolean;
Function GetMainInter : Util_Common;

function SetSetupMnf ( pii  : SetupMnf ): Boolean; // передача указателя на Шаблон
function GetSetupMnf : SetupMnf;

function SetInsertTblMnpl ( pii  : InsertTblMnpl ): Boolean; // передача указателя
function GetInsertTblMnpl : InsertTblMnpl;

Function GetTypeObjMnf : TypeObjMnf;
Function SetTypeObjMnf (it:TypeObjMnf) : Boolean ;

Function uGetName : UTIL_GETNAME;

function GetOiWorkWithKAU : OiWorkWithKAU;
function GetoUtil_Service : oUtil_Service;

//.. функции для предварительной загрузки интерфейсов
function GetMainScrPl ( num : word ) : MainScrPl;
function GetoMainVid  ( num : word ) : oMainVid;
function GetSetGetVid ( num : word ) : SetGetVid;
function GetUtil_ScrSp( num : word ) : Util_ScrSp;
function GetUtil_PgSp ( num : word ) : Util_PgSp;
Function GetoVidBrows ( num : word ) : oVidBrows;

// функции состаяний системы и семофоров
function  SetState(flag : integer; OnOff : Boolean ): Boolean ;
function  GetState(flag : integer): Boolean;

//... вспомогательные функции
function  NewSteckLongInt ( ss :string ) : oSteckCommonLongInt;
procedure FreeSteckLongInt ( oi :oSteckCommonLongInt );
function  NewSteckComp ( ss :string ) : oSteckCommonComp;
procedure FreeSteckComp ( oi :oSteckCommonComp );
function  NewSteckWord ( ss :string ) : oSteckCommonWord;
procedure FreeSteckWord ( oi :oSteckCommonWord );

//.. возвращает коды аналитик по типам документов.
// .. этими 2 функциями возможно со временем будут перенесены
Function GetTypeDoc_KodGrKau ( objtype:word ):word;
Function GetTypeDoc_SpecDoc  ( objtype:word ):word;
Function TOwn_to_TDoc ( objtype:word ):word;
Function TDoc_to_TOwn ( objtype:word ):word;
//....

//'Функции для записи/чтения маркера доступа системы RARS
Function RARS_SetRights( p_cRoleRights:Comp; wNum:Word ) : Boolean;
Function RARS_GetRights( wNum:Word ) : Comp;

Function DoneInter : Boolean;

// коректировка планов по связанной позиции с позицией входящего документа
// ...можно использовать перед удалением например
Function DelRelMyPos(  st:#TSpObjAcc;
                         var iuts:oUtil_Service;
                         var insTbl  : InsertTblMnpl;
                         wFlag : word  // 1 - пересчитывать
                                       // 2 - обнулять
                                       // 4 - удалять
                       ):Boolean;

// коректировка планов по позиции входящего документа
//....можно использовать перед удалением например
Function DelRelBxPos(  ccNrec      : comp;
                         var iuts    : oUtil_Service;
                         var insTbl  : InsertTblMnpl;
                         wFlag       : word  // 1 - пересчитывать
                                             // 2 - обнулять

                       ):Boolean;

end;

VipInterface GlobDataSource implements GLOBDATA Licensed(Free);
#endif

//******************************************************************************
// ObjInterface oUtil_Service

#ifndef __Def_oUtil_Service__
#define __Def_oUtil_Service__

ObjInterface oUtil_Service;

function InitInter(pGlDt: GlobData): boolean;
function DoneInter: boolean;
 // Возвращает True если ValSpMnP с нулевыми количествами, либо вообще отсутствует
function CheckNullValSpMnP( var stSpMnPl :TSpMnPl ): Boolean;

// .. функции чтения корые можно вызывать из интерфейсов
// либо по номеру из VtHor
function ReadValSpMnP(wrkSpMnPlan: comp; wFld: LongInt): double;
function WriteValSpMnP(wrkSpMnPlan: comp; wFld: LongInt; Value: string): boolean;
function FindSpMnPl(wrkSpMnPlan: comp; vtNum:longint; NewIfNotFound: boolean; var ccSpMnPl: comp): boolean;

// .. функции чтения корые можно вызывать из любых интерфейсов
function RValSpMnP(ccSpMnPl: comp; Flag: longint): double;
function wValSpMnP(ccSpMnPl: comp; Flag: longint; dValue: double): Boolean;
function GetSpMnPlNew( cpSpMnPlan : comp ;  pSteck : SteckPar; bNew: Boolean ) : comp;
function GetSpMnPl( cpSpMnPlan : comp ;  pSteck : SteckPar ) : comp;
function GetValSpMnP( cpSpMnPlan : comp ; // Ссылка на шаблон
                    pSteck  : SteckPar;
                    Flag: longint; //  константа вида значения см. ConstPl.Vpp
                    var dRes: Double ):Boolean;
function SetValSpMnP( cpSpMnPlan : comp ;
                    pSteck  : SteckPar;
                    bNew    : Boolean;  // True - создавать новую запись
                    Flag: longint; //  константа вида значения см. ConstPl.Vpp
                    dVal : Double ) : Boolean;
//.. рекомендуется пользоваться вот этими
function doWValSpMnP(spl: #TSpMnPl_P; Flag: longint; dValue: double): Boolean;
// Аналог doWValSpMnP
// параметром передается структура с заполненными количествами по всем полям
function doWstValSpMnP( var stValSpMnP :TValSpMnP ): Boolean;
function doRValSpMnP(spl: #TSpMnPl_P; Flag: longint): double;
Function doWValSpMnPBuf(spl: #TSpMnPl_P; stValSpMnPBuf :TValSpMnP ): Boolean;
Function doRValSpMnPBuf (spl: #TSpMnPl_P ) : TValSpMnP;
// если создала новую bNew true
function doGetSpMnPlNew( cpSpMnPlan : comp ;
               pSteck : SteckPar; var bNew: Boolean ) : #TSpMnPl_P;

function GetSteckPar: SteckPar;
//'две симметричные функции для преобразования номера поля в
//'константу и наоборот
Function GetVidFieldConst( p_wNum:Word ) : LongInt;
Function GetVidFieldNumber( p_cntFld:LongInt ) : Word;
Function GetTypeFieldFact( p_cSpMnPl:Comp; p_cntFld:LongInt ) : Word;
Function CreatePropSpMn( p_cSpMnPl:Comp; p_cntFld:LongInt ) : Boolean;
Function ExistPropSpMn( p_cSpMnPl:Comp; p_cntFld:LongInt ) : Boolean;
Function GetPropSpMn( p_cSpMnPl:Comp; p_cntFld:LongInt ) : #TPropSpMn_P;

end;
#endif

//******************************************************************************
// ObjInterface Util_Person

#ifndef __Def_Util_Person__
#define __Def_Util_Person__

ObjInterface Util_Person;

//#FUN_MAIN_OF_TABLE
function GetFMain(ccNrec:comp; wFld: LongInt ) : double;
function SetFHor (wFlag : LongInt; cMnPlan : comp ) : Boolean;
function SetFMain(ccNrec:comp; wFld: LongInt; Value : string) : Boolean;
function GetNrecSp (ccNrec:comp; wFld: word ) : comp;
//function GetStVtHor(ccNrec:comp; wFld: word ) : TVtHor;
function GetNameVid : string;
function GetNameInterVid : string;
function GetNumVid : word;
Procedure SetcFormPl ( Nrec:comp );  // Установить FormPl.NRec
Function GetcFormPl : comp;          // Получить установленный FormPl.NRec


Function SetGlobaInter ( pium : GlobData): Boolean;
Function GetVidAbbr     ( st:oSteckCommon ): Boolean;
Function GetVidMemo     ( st:oSteckCommonString ): Boolean;
//Function GetRole     ( Num: word ) : word;
//.. Проверает используется ли такая аналикика в данном интерфейсе
//.. а если  ccNrec <> 0 то и значение + вернет номер поля.
// !!! предварительно должна быть вызвана ф-я  SetFHor
// Function isOrSetKauNrec ( wKodGrKau:word; ccNrec : comp; var wFld : longint ): Boolean;

end;

#endif

//******************************************************************************
// ObjInterface oUtil_InsertVtHor

#ifndef __Def_oUtil_InsertVtHor__
#define __Def_oUtil_InsertVtHor__

ObjInterface oUtil_InsertVtHor;

Function GetNastrVidFlag ( var wFlag      : LongInt;    // флаг из SetFHor();
                               Role       : comp;       // последняя роль
                               gldt       : GlobData;   // ссылка на GlobData
                           var cpFormPl   : comp        // ссылка на FormPl
                          ) : boolean;

Function ControlAnalitik (
              var wKodKauElement : word; // Элементарная аналитика cgKau_XXX
              var wKodKauCurrent : word; // Текущая аналитика ViewSloj.KodGrKau
              var wNppKau        : word; // Номер по порядку в группе
              var FlagAn         : word; // Флаг аналитики
              // 1 - используем каталог один (пример. KatPodr Системная аналитика)
              // 2 - используем каталог два  (пример. KatOrg  Системная аналитика)
              // 3 - используем набор из каталога один (пример. KatPodr Системная аналитика)
              // 4 - используем набор из каталога два  (пример. KatOrg  Системная аналитика)
              // 10 - используем пользовательскую аналитику
              // 20 - используем набор из пользовательской аналитики
              // 30 - используем обобщенную аналитики
              // 1000 - другие варианты не обрабатываемые на данный момент
              //                   алгоритмами представлений

              ConstRole          : word; // Константа роли CnstRole.vpp
              cSloj              : comp; // Ссылка на слой ViewSloj.cMain and SpSloj.cMain
              Role               : comp  // Пользовательская роль из настроек <Tune>
                          ) : boolean;
Function InsertVtHor_FpPeriod (   var num      : LongInt;
                           wFlag        : LongInt;
                           wFlag2       : word;
                              // 0 - показывать иерархичность
                              // 1 - показывать только текущий NRec
                              // 2 - показывать весь каталог без иерархии
                           FlagAn       : word;
                           gTypeHier    : comp;
                           wKodKau      : word;
                           wNppKau      : word;
                           ViewSlojKodGrKau : word;
                           cMnPlan      : comp;
                           ium          : Util_Common;
                           gldt         : GlobData;
                           cSloj        : comp;
                           Role         : word
                            ) : boolean;

Function InsertVtHor_KatPodrOrg_Enum (   var num      : LongInt;
                           wFlag        : LongInt;
                           wFlag2       : word;
                              // 1 - показывать только текущий NRec
                              // 2 - показывать весь каталог без иерархии
                           FlagAn       : word;
                           gTypeHier    : comp;
                           wKodKau      : word;
                           wNppKau      : word;
                           ViewSlojKodGrKau : word;
                           cMnPlan      : comp;
                           ium          : Util_Common;
                           gldt         : GlobData;
                           cSloj        : comp;
                           Role         : word
                            ) : boolean;

Function InsertVtHor_KatMCUsl_Enum (   var num      : LongInt;
                           wFlag        : LongInt;
                           wFlag2       : word;
                              // 1 - показывать только текущий NRec
                              // 2 - показывать весь каталог без иерархии
                           FlagAn       : word;
                           gTypeHier    : comp;
                           wKodKau      : word;
                           wNppKau      : word;
                           ViewSlojKodGrKau : word;
                           cMnPlan      : comp;
                           ium          : Util_Common;
                           gldt         : GlobData;
                           cSloj        : comp;
                           Role         : word
                            ) : boolean;

Function InsertVtHor_Indent_Enum (   var num      : LongInt;
                           wFlag        : LongInt;
                           wFlag2       : word;
                              // 1 - показывать только текущий NRec
                              // 2 - показывать весь каталог без иерархии
                           FlagAn       : word;
                           gTypeHier    : comp;
                           wKodKau      : word;
                           wNppKau      : word;
                           ViewSlojKodGrKau : word;
                           cMnPlan      : comp;
                           ium          : Util_Common;
                           gldt         : GlobData;
                           cSloj        : comp;
                           Role         : word
                            ) : boolean;

Function InsertVtHor_MnPlan_Enum (   var num      : LongInt;
                           wFlag        : LongInt;
                           wFlag2       : word;
                              // 1 - показывать только текущий NRec
                              // 2 - показывать весь каталог без иерархии
                           FlagAn       : word;
                           gTypeHier    : comp;
                           wKodKau      : word;
                           wNppKau      : word;
                           ViewSlojKodGrKau : word;
                           cMnPlan      : comp;
                           ium          : Util_Common;
                           gldt         : GlobData;
                           cSloj        : comp;
                           Role         : word;
                           pType        : word;
                           Kau_MnPlan   : word
                            ) : boolean;

Function InsertVtHor_KatPodr (   var num      : LongInt;
                           wFlag        : LongInt;
                           wFlag2       : word;
                              // 0 - показывать иерархичность
                              // 1 - показывать только текущий NRec
                              // 2 - показывать весь каталог без иерархии
                           FlagAn       : word;
                           gTypeHier    : comp;
                           wKodKau      : word;
                           wNppKau      : word;
                           ViewSlojKodGrKau : word;
                           cMnPlan      : comp;
                           ium          : Util_Common;
                           gldt         : GlobData;
                           cSloj        : comp;
                           Role         : word
                            ) : boolean;

Function InsertVtHor_KatOrg (   var num      : LongInt;
                           wFlag        : LongInt;
                           wFlag2       : word;
                              // 0 - показывать иерархичность
                              // 1 - показывать только текущий NRec
                              // 2 - показывать весь каталог без иерархии
                           FlagAn       : word;
                           gTypeHier    : comp;
                           wKodKau      : word;
                           wNppKau      : word;
                           ViewSlojKodGrKau : word;
                           cMnPlan      : comp;
                           ium          : Util_Common;
                           gldt         : GlobData;
                           cSloj        : comp;
                           Role         : word
                            ) : boolean;

Function InsertVtHor_KatMC (   var num      : LongInt;
                           wFlag        : LongInt;
                           wFlag2       : word;
                              // 0 - показывать иерархичность
                              // 1 - показывать только текущий NRec
                              // 2 - показывать весь каталог без иерархии
                           FlagAn       : word;
                           gTypeHier    : comp;
                           wKodKau      : word;
                           wNppKau      : word;
                           ViewSlojKodGrKau : word;
                           cMnPlan      : comp;
                           ium          : Util_Common;
                           gldt         : GlobData;
                           cSloj        : comp;
                           Role         : word
                            ) : boolean;

Function InsertVtHor_KatUsl (   var num      : LongInt;
                           wFlag        : LongInt;
                           wFlag2       : word;
                              // 0 - показывать иерархичность
                              // 1 - показывать только текущий NRec
                              // 2 - показывать весь каталог без иерархии
                           FlagAn       : word;
                           gTypeHier    : comp;
                           wKodKau      : word;
                           wNppKau      : word;
                           ViewSlojKodGrKau : word;
                           cMnPlan      : comp;
                           ium          : Util_Common;
                           gldt         : GlobData;
                           cSloj        : comp;
                           Role         : word
                            ) : boolean;

Function InsertVtHor_Indent (   var num      : LongInt;
                           wFlag        : LongInt;
                           wFlag2       : word;
                              // 1 - показывать только текущий NRec
                              // 2 - показывать весь каталог без иерархии
                           FlagAn       : word;
                           gTypeHier    : comp;
                           wKodKau      : word;
                           wNppKau      : word;
                           ViewSlojKodGrKau : word;
                           cMnPlan      : comp;
                           ium          : Util_Common;
                           gldt         : GlobData;
                           cSloj        : comp;
                           Role         : word;
                           pType        : word;
                           pKind        : word;
                           pTypeObj     : word
                            ) : boolean;

Function InsertVtHor_MnPlan (   var num      : LongInt;
                           wFlag        : LongInt;
                           wFlag2       : word;
                              // 1 - показывать только текущий NRec
                              // 2 - показывать весь каталог без иерархии
                           FlagAn       : word;
                           gTypeHier    : comp;
                           wKodKau      : word;
                           wNppKau      : word;
                           ViewSlojKodGrKau : word;
                           cMnPlan      : comp;
                           ium          : Util_Common;
                           gldt         : GlobData;
                           cSloj        : comp;
                           Role         : word;
                           pType        : word;
                           pKind        : word;
                           pTypeObj     : word
                            ) : boolean;

Function InsertVtHor_Zatr (   var num      : LongInt;
                           wFlag        : LongInt;
                           wFlag2       : word;
                              // 0 - показывать иерархичность
                              // 1 - показывать только текущий NRec
                              // 2 - показывать весь каталог без иерархии
                           FlagAn       : word;
                           gTypeHier    : comp;
                           wKodKau      : word;
                           wNppKau      : word;
                           ViewSlojKodGrKau : word;
                           cMnPlan      : comp;
                           ium          : Util_Common;
                           gldt         : GlobData;
                           cSloj        : comp;
                           Role         : word
                            ) : boolean;

Function InsertVtHor_SpGraf (   var num      : LongInt;
                           wFlag        : LongInt;
                           wFlag2       : word;
                              // 0  - показывать иерархичность
                              // 1  - показывать только текущий NRec
                              // 2  - показывать весь каталог без иерархии
                              // 16 - читать SpGraf.cGrafik из KatOrg.cGrafik или KatPodr.cGrafik
                              // and 16 = 0 - читать SpGraf.cGrafik из настроек <Tune>
                           FlagAn       : word;
                           gTypeHier    : comp;
                           wKodKau      : word;
                           wNppKau      : word;
                           ViewSlojKodGrKau : word;
                           cMnPlan      : comp;
                           ium          : Util_Common;
                           gldt         : GlobData;
                           cSloj        : comp;
                           Role         : word
                            ) : boolean;

Function InsertVtHor_Persons (   var num      : LongInt;
                           wFlag        : LongInt;
                           wFlag2       : word;
                              // 0 - показывать иерархичность
                              // 1 - показывать только текущий NRec
                              // 2 - показывать весь каталог без иерархии
                           FlagAn       : word;
                           gTypeHier    : comp;
                           wKodKau      : word;
                           wNppKau      : word;
                           ViewSlojKodGrKau : word;
                           cMnPlan      : comp;
                           ium          : Util_Common;
                           gldt         : GlobData;
                           cSloj        : comp;
                           Role         : word
                            ) : boolean;

Function InsertVtHor_KatMOL (   var num      : LongInt;
                           wFlag        : LongInt;
                           wFlag2       : word;
                              // 0 - показывать иерархичность
                              // 1 - показывать только текущий NRec
                              // 2 - показывать весь каталог без иерархии
                           FlagAn       : word;
                           gTypeHier    : comp;
                           wKodKau      : word;
                           wNppKau      : word;
                           ViewSlojKodGrKau : word;
                           cMnPlan      : comp;
                           ium          : Util_Common;
                           gldt         : GlobData;
                           cSloj        : comp;
                           Role         : word
                            ) : boolean;


Function InsertVtHor_DateTime (   var num      : LongInt;
                           wFlag        : LongInt;
                           wFlag2       : word;
                              // 0  - показывать иерархичность
                              // 1  - показывать только текущий NRec
                              // 2  - показывать весь каталог без иерархии
                              // 16 - читать SpGraf.cGrafik из KatOrg.cGrafik или KatPodr.cGrafik
                              // and 16 = 0 - читать SpGraf.cGrafik из настроек <Tune>
                           FlagAn       : word;
                           gTypeHier    : comp;
                           wKodKau      : word;
                           wNppKau      : word;
                           ViewSlojKodGrKau : word;
                           cMnPlan      : comp;
                           ium          : Util_Common;
                           gldt         : GlobData;
                           cSloj        : comp;
                           Role         : word
                            ) : boolean;

Function InsertVtHor_CardSn (   var num      : LongInt;
                           wFlag        : LongInt;
                           wFlag2       : word;
                              // 0 - показывать иерархичность
                              // 1 - показывать только текущий NRec
                              // 2 - показывать весь каталог без иерархии
                           FlagAn       : word;
                           gTypeHier    : comp;
                           wKodKau      : word;
                           wNppKau      : word;
                           ViewSlojKodGrKau : word;
                           cMnPlan      : comp;
                           ium          : Util_Common;
                           gldt         : GlobData;
                           cSloj        : comp;
                           Role         : word
                            ) : boolean;

Function InsertVtHor_KatParty (   var num      : LongInt;
                           wFlag        : LongInt;
                           wFlag2       : word;
                              // 0 - показывать иерархичность
                              // 1 - показывать только текущий NRec
                              // 2 - показывать весь каталог без иерархии
                           FlagAn       : word;
                           gTypeHier    : comp;
                           wKodKau      : word;
                           wNppKau      : word;
                           ViewSlojKodGrKau : word;
                           cMnPlan      : comp;
                           ium          : Util_Common;
                           gldt         : GlobData;
                           cSloj        : comp;
                           Role         : word
                            ) : boolean;

Function InsertVtHor_Brigade (   var num      : LongInt;
                           wFlag        : LongInt;
                           wFlag2       : word;
                              // 0 - показывать иерархичность
                              // 1 - показывать только текущий NRec
                              // 2 - показывать весь каталог без иерархии
                           FlagAn       : word;
                           gTypeHier    : comp;
                           wKodKau      : word;
                           wNppKau      : word;
                           ViewSlojKodGrKau : word;
                           cMnPlan      : comp;
                           ium          : Util_Common;
                           gldt         : GlobData;
                           cSloj        : comp;
                           Role         : word
                            ) : boolean;


end;

#endif

//******************************************************************************
//

#include ScrVid.vin

//******************************************************************************
// ObjInterface oInitVidInter

#ifndef __Def_oInitVidInter__
#define __Def_oInitVidInter__

ObjInterface oInitVidInter;

 //function InitInter ( pGldt : GlobData; FlagReread : boolean ) : Boolean;
 function InitInter ( FlagReread : boolean ) : Boolean;
 function PumpTabVidNum : boolean;
 //function InitInter (pGldt : GlobData  ) : Boolean;
 //71function GetNameVip(cSloj:comp) : string;

end;
#endif

//******************************************************************************
// ObjInterface SetGetVid

#ifndef __Def_SetGetVid__
#define __Def_SetGetVid__

 ObjInterface SetGetVid;

//#FUN_MAIN
function GetKolCol: word;
function SetKolCol (skol:string): Boolean;
function GetKolFix : word;
function SetKolFix (skol:word): Boolean;
function SetCollumFix (nCol:word): Boolean;
function GetIsBelowlevel ( wNum : LongInt ): Boolean;
function GetIsYesOpen ( wNum : LongInt ): Boolean;
function SetOpenlevel ( wNum : LongInt ): Boolean;
function SetCloselevel ( wNum : LongInt ): Boolean;
function GetNameCol ( wNum : LongInt ; var wTree : word ): string;
function GetStVtHor( wFld: LongInt ; var wRes : word ) : TVtHor;
function InitInter : Boolean;
function DoneInter : Boolean;

//#FUN_MAIN_OF_TABLE
function GetFMain(ccNrec:comp; wFld: LongInt ) : double;
function SetFHor (wFlag : LongInt; cMnPlan : comp ) : Boolean;
function SetFMain(ccNrec:comp; wFld: LongInt; Value : string) : Boolean;
function GetNrecSp (ccNrec:comp; wFld: word ) : comp;
//function GetStVtHor(ccNrec:comp; wFld: word ) : TVtHor;
function GetNameVid : string;
function GetNameInterVid : string;
function GetNumVid : word; // возвращает системный номер текущего представления

//#FUN_SCROLL
function LeftCol  ( wKol: comp ): comp;
function RightCol ( wKol: comp): comp;
function FirstCol : comp;
function LastCol  : comp;
function SetNewNumCol ( NewNumCol : comp ): comp;

// функции состаяний интерфейса и семофоров
function SetState(flag : integer; OnOff : Boolean ): Boolean ;
function GetState(flag : integer): Boolean;
// .. Семофоры для чтения
function LockScr: integer;
function UnLockScr: integer;
function isLockScr: Boolean;


function SetGlobDataInt     ( pii : GLOBDATA  ) : Boolean;  // установка представления
function SetCurRes          ( wNum : word )     : Boolean;  // установка представления
function GetCurVid : word; // возвращает текущий номер пердставления в списке
                           // представлений плана

//function GetCurInterScrVid : Util_ScrVid;  // возвращает ссылку
//                                           // на экранный интерфейс представления

function isSelectPl (pcNrec : comp; pWlist : word): Boolean;
Function GetCurUtil_Person  : Util_Person;
Procedure DeleteCache;
// Получить установить/параметр
Function SetGetParam ( Var  FlagParam : LongInt;
                       Var  Direction : word;
                       Var  cValue    : Comp  ;
                       Var  dValue    : Double;
                       Var  lValue    : LongInt;
                       Var  wValue    : Word  ;
                       Var  dtValue   : Date  ;
                       Var  dttValue  : _DateTime;
                       Var  sValue    : s250  ) : Boolean;

end;

VipInterface SetGetVidSource implements SetGetVid Licensed(Free);
#endif

//******************************************************************************
//

#include ScrVidCm.vin
#include oAlgInDocList.vih
#include algor.vih

//******************************************************************************
// ObjInterface Account

#ifndef __Def_Account__
#define __Def_Account__

ObjInterface Account;

Function InitInter( pium : GlobData; iomv : oMainVid ) : Boolean;
// ... стандартный запуск алгоритма
Function RunInter (  cAlg   : comp; // ссылка на FormPl
                     wflag  : word; // не обязательный параметр
                                    // можно использовать для каждого конкретного алгоритма
                                    // по собственному усмотрению
                     var pt : TRecAcc  ) : Boolean;


Function GetoAlgorInit_Sys : oAlgorInit_Sys;
event procedure Changes  (  wFlag: word );


// .. Функциями которые находятся ниже лучше не пользоваться
//  постепенно они будут удалятся из данного объекта и не будут поддерживаться

Procedure SetDefStSpMnPlan(var stSPMNPLAN:TSPMNPLAN);
procedure DeleteSpMnPlanAll ( cpMnPlan : comp );
//.. Проверка входит ли данная аналитика в слой
Function isKodGr_Sloj ( wKodGr:word ; cpSloj : comp ) : Boolean;
 //..ф-и сумирования в интерфейсе
Function Sum_Pos  ( wflag: word;   // 1 - сумирование по подчиненным
                                   // 2 - распределение по подчиненным
                    var pt : TRecAcc   ) : Boolean;
Function InsertPoly   ( wflag  : word;   // 1 - вставка входящих полуфабрикатов
                        NumAlg : word;   // номер алг. внутри настройки представления
                        var pt : TRecAcc  ) : Boolean;

Function RasPotr      ( var pt : TRecAcc ): Boolean;
Function GetKind( cotbl : word;ccNrec : comp ) : integer;
Function Plan_to_Doc   ( var pt : TRecAcc ): Boolean;
Function Doc_to_Plan   ( var pt : TRecAcc ): Boolean;
Function isOrSetKauNrec ( wKodGrKau:word; ccNrec : comp; var wFld : longint ): Boolean;
Function FindNrecSp(ccNrec : comp; var ccMnAnal : comp ) : Boolean;
Function insertField(au_p : Util_Person;
                    var stTbl: TSpMnPLAN;
                    vrNum : longint;
                    Value : double ): Boolean;
Function coTable_to_TypeIzd ( cotbl : word ) : word;
// Получить установить/параметр
Function SetGetParam ( Var  FlagParam : LongInt;
                       Var  Direction : word;
                       Var  cValue    : Comp  ;
                       Var  dValue    : Double;
                       Var  lValue    : LongInt;
                       Var  wValue    : Word  ;
                       Var  dtValue   : Date  ;
                       Var  dttValue  : _DateTime;
                       Var  sValue    : s250  ) : Boolean;

end;

VipInterface Account_PL implements Account
  Licensed (FREE)
  Parameters( pWorkPlan: comp; pWorkObj : word );

VipInterface Account_UMP implements Account
  Licensed (FREE)
  Parameters( pWorkPlan: comp; pWorkObj : word );
#endif

//******************************************************************************
// ObjInterface DocConformity

#ifndef __Def_DocConformity__
#define __Def_DocConformity__

ObjInterface DocConformity;

Function RunOperation (p_wDiapason  : Word;
                       p_wOperation : Word;
                       p_cSpObjAcc  : Comp;
                       p_cObjAcct   : Comp;
                       p_pWorkType  : Word;
                       p_pWorkOwner : Comp;
                       p_pWorkKind  : Word;
                       p_wRepFilter : Word;
                       p_wRepGroup  : Word;
                       p_wRepEd     : Word;
                       p_fBatch     : Boolean) : Boolean;
Function DocConfotmityGetFlag(stSpObjAcc:TSpObjAcc; bFlag:Byte) : Boolean;

End;
#endif

//#include dictypes.def
