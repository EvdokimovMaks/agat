// =============================================================================
//                                                     (c)  корпорация Галактика
// Галактика 7.11 - Производственный контур
// Описание интерфейса-алгоритма "Модель производства"
// =============================================================================

#include MESAlgOwner_CF.vih
#include PrmTreeOwner_CF.vih

#component "M_MnPlan"

//******************************************************************************
// Таблицы в памяти

//------------------------------------------------------------------------------
// Тип производственного события
#ifndef __Def_pvtMESEType__
#define __Def_pvtMESEType__
Table STRUCT pvtMESEType
(
  Nrec: comp,    // Идентификатор строки
  Code: longint, // Код
  Abbr: s30,     // Аббревиатура
  Name: tName    // Наименование
)
With Index
(
  pvtMESEType01 = Nrec,
  pvtMESEType02 = Code
);
#endif

//------------------------------------------------------------------------------
// Группа производственных событий
#ifndef __Def_pvtMESGrp__
#define __Def_pvtMESGrp__
Table STRUCT pvtMESGrp
(
  Nrec     : comp,      // Идентификатор строки
  dttTime  : _DateTime, // Дата-время
  InLevel  : word       // Уровень входимости
)
With Index
(
  pvtMESGrp01 = Nrec
);
#endif

//------------------------------------------------------------------------------
// Документ-норма
#ifndef __Def_pvtMESNDoc__
#define __Def_pvtMESNDoc__
Table STRUCT pvtMESNDoc
(
  Nrec      : comp,  // Идентификатор строки
  cMESGrp   : comp,  // Ссылка на группу производственных событий
  KAUDoc    : word,  // КАУ документа-нормы
  cDoc      : comp,  // Ссылка на документ
  dCountNorm: double // Количество единиц нормирования
)
With Index
(
  pvtMESNDoc01 = Nrec,
  pvtMESNDoc02 = cMESGrp + KAUDoc + cDoc,
  pvtMESNDoc03 = cMESGrp + Nrec
);
#endif

//------------------------------------------------------------------------------
// Производственное событие
#ifndef __Def_pvtMESEvent__
#define __Def_pvtMESEvent__
Table STRUCT pvtMESEvent
(
  Nrec        : comp,      // Идентификатор строки
  dttTime     : _DateTime, // Дата-время
  EventType   : longint,   // Тип производственного события
  cSrcRec     : comp,      // Ссылка на запись "источник"
  cOwnRec     : comp,      // Ссылка на запись "владелец"
  InLevel     : word,      // Уровень входимости
  cParentGrp  : comp,      // Ссылка на родительскую группу производственных событий
  cMESGrp     : comp,      // Ссылка на группу производственных событий
  cParentND   : comp,      // Ссылка на родительский документ-норму
  cMESNDoc    : comp,      // Ссылка на документ-норму
  KAUDoc      : word,      // КАУ документа-нормы
  cDoc        : comp,      // Ссылка на документ-норму
  KAURes      : word,      // КАУ ресурса
  cRes        : comp,      // Ссылка на ресурс
  HashAn      : s240,      // Аналитики ресурса
  HashAn2     : s240,      // Дополнительные аналитики ресурса
  SisOpl      : word,      // Код системы оплаты (для трудовых ресурсов)
  Razr        : word,      // Разряд (для трудовых ресурсов)
  CodTar      : word,      // Код тарифа (для трудовых ресурсов)
  wTypeMsrUnit: word,      // Тип единицы измерения
  cMsrUnit    : comp,      // Ссылка/значение единицы измерения
  OrderAn     : s240,      // Аналитики ресурса для сортировки
  dCount      : double,    // Количество
  dCountUse   : double,    // Количество использованное
  dCountRest  : double,    // Количество-остаток
  dCost       : double,    // Цена
  State       : word,      // Состояние записи
  dShareFactor: double,    // Долевой коээфициент при распределении ресурсов
  Kind        : word,      // Категория ресурса (из KatMC/KatUsl)
  PrMat       : word,      // Характеристика ресурса (из KatMC/KatUsl)
  PrOut       : word,      // Тип продукта выхода (см. INC\TPPConst.inc)
  PolZak      : word,      // Расчет потребности (из KatMC/KatUsl)
  wDTblCode   : word,      // Код таблицы для записи-родителя внешней записи-источника
  wDType      : word,      // Тип документа (см. MnPlan.inc)
  cDTblRec    : comp,      // Ссылка на запись-родитель внешней записи-источника
  wSTblCode   : word,      // Код таблицы внешней записи-источника
  wSType      : word,      // Тип позиции документа (см. MnPlan.inc)
  cSTblRec    : comp,      // Ссылка на внешнюю запись-источник
  wSFldNmb    : word       // Номер поля внешней записи-источника
)
With Index
(
  pvtMESEvent01 = Nrec,
  pvtMESEvent02 = EventType + cMESGrp + InLevel + dttTime,
  pvtMESEvent03 = EventType + cMESGrp + InLevel(Desc) + dttTime,
  pvtMESEvent04 = EventType + cMESGrp + dttTime,
  pvtMESEvent05 = cMESGrp + EventType + dttTime,
  pvtMESEvent06 = cMESNDoc + EventType + dttTime,
  pvtMESEvent07 = dttTime + cSrcRec + EventType,
  pvtMESEvent08 = dttTime + cMESGrp + cSrcRec + EventType,
  pvtMESEvent09 = cSrcRec + dttTime + EventType,
  pvtMESEvent10 = cOwnRec + dttTime + EventType,
  pvtMESEvent11 = State + EventType + cMESGrp + KAURes + cRes + dttTime,
  pvtMESEvent12 = KAURes + cRes + OrderAn + dttTime + EventType,
  pvtMESEvent13 = cMESGrp + Nrec,
  pvtMESEvent14 = cParentGrp + Nrec,
  pvtMESEvent15 = cSrcRec + Nrec,
  pvtMESEvent16 = cOwnRec + Nrec
);
#endif

//******************************************************************************
// Типы данных

//------------------------------------------------------------------------------
// Структура для хранения записи таблицы MESEType
#ifndef __Def_TRecMESEType__
#define __Def_TRecMESEType__
#doc
 Структура для хранения записи таблицы MESEType</brief>
#end
Type TRecMESEType = record as  table pvtMESEType;
#endif

//------------------------------------------------------------------------------
// Структура для хранения записи таблицы MESGrp
#ifndef __Def_TRecMESGrp__
#define __Def_TRecMESGrp__
#doc
 Структура для хранения записи таблицы MESGrp</brief>
#end
Type TRecMESGrp = record as  table pvtMESGrp;
#endif

//------------------------------------------------------------------------------
// Структура для хранения записи таблицы MESNDoc
#ifndef __Def_TRecMESNDoc__
#define __Def_TRecMESNDoc__
#doc
 Структура для хранения записи таблицы MESNDoc</brief>
#end
Type TRecMESNDoc = record as  table pvtMESNDoc;
#endif

//------------------------------------------------------------------------------
// Структура для хранения записи таблицы MESEvent
#ifndef __Def_TRecMESEvent__
#define __Def_TRecMESEvent__
#doc
 Структура для хранения записи таблицы MESEvent</brief>
#end
Type TRecMESEvent = record as  table pvtMESEvent;
#endif

//------------------------------------------------------------------------------
// Параметры для расчета
#doc
 Параметры для расчета</brief><br>
 Поля:<br>
   bVisualizationEnable - Признак визуализации процесса расчета<br>
   sVisualizationTitle  - Заголовок визуализации  процесса расчета<br>
#end
Type TMESRunCalcParams = record
  bVisualizationEnable: boolean;         // Признак визуализации процесса расчета
  sVisualizationTitle: string;           // Заголовок визуализации  процесса расчета
End; // Type TMESRunCalcParams

//------------------------------------------------------------------------------
// Параметры установки сортировки для таблицы MESEvent
#doc
 Параметры установки сортировки для таблицы MESEvent</brief><br>
 Поля:<br>
   bVisualizationEnable            - Признак визуализации процесса установки сортировки<br>
   sVisualizationTitle             - Заголовок визуализации  процесса установки сортировки<br>
   wTPer_ByRoleFpPeriod            - Тип периода (xDay, ...) -> "Период планирования"<br>
   cFpTPer_ByRoleFpPeriod          - Ссылка на тип периода планирования -> "Период планирования"<br>
   wFlMaxHLevelPodr_ByRoleProducer - Флаг максимального уровня иерархии для подразделений -> "Изготовитель"<br>
   wMaxHLevelPodr_ByRoleProducer   - Максимальный уровень иерархии для подразделений -> "Изготовитель"<br>
   wFlMaxHLevelPodr_ByRoleConsumer - Флаг максимального уровня иерархии для подразделений -> "Потребитель"<br>
   wMaxHLevelPodr_ByRoleConsumer   - Максимальный уровень иерархии для подразделений -> "Потребитель"<br>
#end
Type TMESSetOrderAnParamsForEvent = record
  bVisualizationEnable: boolean;         // Признак визуализации процесса установки сортировки
  sVisualizationTitle: string;           // Заголовок визуализации  процесса установки сортировки
  wTPer_ByRoleFpPeriod: word;            // Тип периода (xDay, ...) -> "Период планирования"
  cFpTPer_ByRoleFpPeriod: comp;          // Ссылка на тип периода планирования -> "Период планирования"
  wFlMaxHLevelPodr_ByRoleProducer: word; // Флаг максимального уровня иерархии для подразделений -> "Изготовитель"
  wMaxHLevelPodr_ByRoleProducer: word;   // Максимальный уровень иерархии для подразделений -> "Изготовитель"
  wFlMaxHLevelPodr_ByRoleConsumer: word; // Флаг максимального уровня иерархии для подразделений -> "Потребитель"
  wMaxHLevelPodr_ByRoleConsumer: word;   // Максимальный уровень иерархии для подразделений -> "Потребитель"
End; // Type TMESSetOrderAnParamsForEvent

//******************************************************************************
// ObjInterface oMESAlg_CF
#ifndef __Def_oMESAlg_CF__
#define __Def_oMESAlg_CF__
#doc
 Описание интерфейса-алгоритма "Модель производства"</brief>
#end
ObjInterface oMESAlg_CF;

//------------------------------------------------------------------------------
#doc
 Просмотр буфера</brief><br>
 Параметры:
   asWindowTitle - Заголовок окна
#end
Procedure ViewData(asWindowTitle: string);

//------------------------------------------------------------------------------
#doc
 Очистка таблиц MES-модели</brief><br>
 Параметры:<br>
   asTblNames - Имена таблиц через запятую<br>
 Результат:<br>
   tsOk, если успешно, иначе - код ошибки<br>
#end
Function ClearTables(asTblNames: string): longint;

//------------------------------------------------------------------------------
#doc
 Очистка MES-модели</brief><br>
 Результат:<br>
   tsOk, если успешно, иначе - код ошибки<br>
#end
Function Clear: longint;

//------------------------------------------------------------------------------
#doc
 Получение значения параметра расчета</brief><br>
 Параметры:<br>
   asPrmName - Имя параметра<br>
 Результат:<br>
   Значение параметра, если не найден - пустая строка<br>
#end
Function GetPrmVal(asPrmName: string): string;

//------------------------------------------------------------------------------
#doc
 Установка значения параметра расчета</brief><br>
 Параметры:<br>
   asPrmName - Имя параметра<br>
   asValue   - Значение<br>
   asDT_Rlt  - Обозначение класса объекта (для параметра-ссылки)<br>
 Результат:<br>
   tsOk - если все нормально, иначе - код ишибки<br>
#end
Function SetPrmVal(asPrmName: string; asValue: string; asDT_Rlt: string): longint;

//------------------------------------------------------------------------------
#doc
 Текущая запись MESEType</brief><br>
 Результат:<br>
   Запись MESEType<br>
#end
Function RecMESEType: TRecMESEType;

//------------------------------------------------------------------------------
#doc
 Текущая запись MESGrp</brief><br>
 Результат:<br>
   Запись MESGrp<br>
#end
Function RecMESGrp: TRecMESGrp;

//------------------------------------------------------------------------------
#doc
 Текущая запись MESNDoc</brief><br>
 Результат:<br>
   Запись MESNDoc<br>
#end
Function RecMESNDoc: TRecMESNDoc;

//------------------------------------------------------------------------------
#doc
 Текущая запись MESEvent</brief><br>
 Результат:<br>
   Запись MESEvent<br>
#end
Function RecMESEvent: TRecMESEvent;

//------------------------------------------------------------------------------
#doc
 Контроль данных перед созданием новой записи MESEType</brief><br>
 Параметры:<br>
   ar_MESEType - Запись MESEType<br>
 Результат:<br>
   tsOk - если все нормально, иначе код ошибки<br>
#end
Function MESEType_ChkBIns(ar_MESEType: TRecMESEType): longint;

//------------------------------------------------------------------------------
#doc
 Создание новой записи MESEType</brief><br>
 Параметры:<br>
   ar_MESEType - Запись MESEType<br>
 Результат:<br>
   tsOk, если все нормально, иначе - код ошибки<br>
#end
Function MESEType_Ins(var ar_MESEType: TRecMESEType): longint;

//------------------------------------------------------------------------------
#doc
 Контроль данных перед модификацией записи MESEType</brief><br>
 Параметры:<br>
   ar_MESEType - Запись MESEType<br>
 Результат:<br>
   tsOk, если все нормально, иначе - код ошибки<br>
#end
Function MESEType_ChkBUpd(ar_MESEType: TRecMESEType): longint;

//------------------------------------------------------------------------------
#doc
 Модификация существующей записи MESEType</brief><br>
 Параметры:<br>
   ar_MESEType - Запись MESEType<br>
 Результат:<br>
   tsOk, если все нормально, иначе - код ошибки<br>
#end
Function MESEType_Upd(ar_MESEType: TRecMESEType): longint;

//------------------------------------------------------------------------------
#doc
 Контроль данных перед удалением записи MESEType</brief><br>
 Параметры:<br>
   acRec - Ссылка на запись MESEType<br>
 Результат:<br>
   tsOk, если успешно, иначе - код ошибки<br>
#end
Function MESEType_ChkBDel(acRec: comp): longint;

//------------------------------------------------------------------------------
#doc
 Удаление записи MESEType</brief><br>
 Параметры:<br>
   acRec - Ссылка на запись MESEType<br>
 Результат:<br>
   tsOk, если успешно, иначе - код ошибки<br>
#end
Function MESEType_Del(acRec: comp): longint;

//------------------------------------------------------------------------------
#doc
 Получение количества записей для MESEType</brief><br>
 Результат:<br>
   Кол-во записей в списке<br>
#end
Function MESEType_Count: longint;

//------------------------------------------------------------------------------
#doc
 Получение первой записи для MESEType</brief><br>
 Результат:<br>
   tsOk, если успешно, иначе - код ошибки<br>
#end
Function MESEType_GetFirst: longint;

//------------------------------------------------------------------------------
#doc
 Получение последней записи для MESEType</brief><br>
 Результат:<br>
   tsOk, если успешно, иначе - код ошибки<br>
#end
Function MESEType_GetLast: longint;

//------------------------------------------------------------------------------
#doc
 Получение следующей записи относительно текущей позиции для MESEType</brief><br>
 Результат:<br>
   tsOk, если успешно, иначе - код ошибки<br>
#end
Function MESEType_GetNext: longint;

//------------------------------------------------------------------------------
#doc
 Получение предыдующей записи относительно текущей позиции для MESEType</brief><br>
 Результат:<br>
   tsOk, если успешно, иначе - код ошибки<br>
#end
Function MESEType_GetPrev: longint;

//------------------------------------------------------------------------------
#doc
 Контроль данных перед созданием новой записи MESGrp</brief><br>
 Параметры:<br>
   ar_MESGrp - Запись MESGrp<br>
 Результат:<br>
   tsOk - если все нормально, иначе код ошибки<br>
#end
Function MESGrp_ChkBIns(ar_MESGrp: TRecMESGrp): longint;

//------------------------------------------------------------------------------
#doc
 Создание новой записи MESGrp</brief><br>
 Параметры:<br>
   ar_MESGrp - Запись MESGrp<br>
 Результат:<br>
   tsOk, если все нормально, иначе - код ошибки<br>
#end
Function MESGrp_Ins(var ar_MESGrp: TRecMESGrp): longint;

//------------------------------------------------------------------------------
#doc
 Контроль данных перед модификацией записи MESGrp</brief><br>
 Параметры:<br>
   ar_MESGrp - Запись MESGrp<br>
 Результат:<br>
   tsOk, если все нормально, иначе - код ошибки<br>
#end
Function MESGrp_ChkBUpd(ar_MESGrp: TRecMESGrp): longint;

//------------------------------------------------------------------------------
#doc
 Модификация существующей записи MESGrp</brief><br>
 Параметры:<br>
   ar_MESGrp - Запись MESGrp<br>
 Результат:<br>
   tsOk, если все нормально, иначе - код ошибки<br>
#end
Function MESGrp_Upd(ar_MESGrp: TRecMESGrp): longint;

//------------------------------------------------------------------------------
#doc
 Контроль данных перед удалением записи MESGrp</brief><br>
 Параметры:<br>
   acRec - Ссылка на запись MESGrp<br>
 Результат:<br>
   tsOk, если успешно, иначе - код ошибки<br>
#end
Function MESGrp_ChkBDel(acRec: comp): longint;

//------------------------------------------------------------------------------
#doc
 Удаление записи MESGrp</brief><br>
 Параметры:<br>
   acRec - Ссылка на запись MESGrp<br>
 Результат:<br>
   tsOk, если успешно, иначе - код ошибки<br>
#end
Function MESGrp_Del(acRec: comp): longint;

//------------------------------------------------------------------------------
#doc
 Получение количества записей для MESGrp</brief><br>
 Результат:<br>
   Кол-во записей в списке<br>
#end
Function MESGrp_Count: longint;

//------------------------------------------------------------------------------
#doc
 Получение первой записи для MESGrp</brief><br>
 Результат:<br>
   tsOk, если успешно, иначе - код ошибки<br>
#end
Function MESGrp_GetFirst: longint;

//------------------------------------------------------------------------------
#doc
 Получение последней записи для MESGrp</brief><br>
 Результат:<br>
   tsOk, если успешно, иначе - код ошибки<br>
#end
Function MESGrp_GetLast: longint;

//------------------------------------------------------------------------------
#doc
 Получение следующей записи относительно текущей позиции для MESGrp</brief><br>
 Результат:<br>
   tsOk, если успешно, иначе - код ошибки<br>
#end
Function MESGrp_GetNext: longint;

//------------------------------------------------------------------------------
#doc
 Получение предыдующей записи относительно текущей позиции для MESGrp</brief><br>
 Результат:<br>
   tsOk, если успешно, иначе - код ошибки<br>
#end
Function MESGrp_GetPrev: longint;

//------------------------------------------------------------------------------
#doc
 Контроль данных перед созданием новой записи MESNDoc</brief><br>
 Параметры:<br>
   ar_MESNDoc - Запись MESNDoc<br>
 Результат:<br>
   tsOk - если все нормально, иначе код ошибки<br>
#end
Function MESNDoc_ChkBIns(ar_MESNDoc: TRecMESNDoc): longint;

//------------------------------------------------------------------------------
#doc
 Создание новой записи MESNDoc</brief><br>
 Параметры:<br>
   ar_MESNDoc - Запись MESNDoc<br>
 Результат:<br>
   tsOk, если все нормально, иначе - код ошибки<br>
#end
Function MESNDoc_Ins(var ar_MESNDoc: TRecMESNDoc): longint;

//------------------------------------------------------------------------------
#doc
 Контроль данных перед модификацией записи MESNDoc</brief><br>
 Параметры:<br>
   ar_MESNDoc - Запись MESNDoc<br>
 Результат:<br>
   tsOk, если все нормально, иначе - код ошибки<br>
#end
Function MESNDoc_ChkBUpd(ar_MESNDoc: TRecMESNDoc): longint;

//------------------------------------------------------------------------------
#doc
 Модификация существующей записи MESNDoc</brief><br>
 Параметры:<br>
   ar_MESNDoc - Запись MESNDoc<br>
 Результат:<br>
   tsOk, если все нормально, иначе - код ошибки<br>
#end
Function MESNDoc_Upd(ar_MESNDoc: TRecMESNDoc): longint;

//------------------------------------------------------------------------------
#doc
 Контроль данных перед удалением записи MESNDoc</brief><br>
 Параметры:<br>
   acRec - Ссылка на запись MESNDoc<br>
 Результат:<br>
   tsOk, если успешно, иначе - код ошибки<br>
#end
Function MESNDoc_ChkBDel(acRec: comp): longint;

//------------------------------------------------------------------------------
#doc
 Удаление записи MESNDoc</brief><br>
 Параметры:<br>
   acRec - Ссылка на запись MESNDoc<br>
 Результат:<br>
   tsOk, если успешно, иначе - код ошибки<br>
#end
Function MESNDoc_Del(acRec: comp): longint;

//------------------------------------------------------------------------------
#doc
 Получение количества записей для MESNDoc</brief><br>
 Результат:<br>
   Кол-во записей в списке<br>
#end
Function MESNDoc_Count: longint;

//------------------------------------------------------------------------------
#doc
 Получение первой записи для MESNDoc</brief><br>
 Результат:<br>
   tsOk, если успешно, иначе - код ошибки<br>
#end
Function MESNDoc_GetFirst: longint;

//------------------------------------------------------------------------------
#doc
 Получение последней записи для MESNDoc</brief><br>
 Результат:<br>
   tsOk, если успешно, иначе - код ошибки<br>
#end
Function MESNDoc_GetLast: longint;

//------------------------------------------------------------------------------
#doc
 Получение следующей записи относительно текущей позиции для MESNDoc</brief><br>
 Результат:<br>
   tsOk, если успешно, иначе - код ошибки<br>
#end
Function MESNDoc_GetNext: longint;

//------------------------------------------------------------------------------
#doc
 Получение предыдующей записи относительно текущей позиции для MESNDoc</brief><br>
 Результат:<br>
   tsOk, если успешно, иначе - код ошибки<br>
#end
Function MESNDoc_GetPrev: longint;

//------------------------------------------------------------------------------
#doc
 Контроль данных перед созданием новой записи MESEvent</brief><br>
 Параметры:<br>
   ar_MESEvent - Запись MESEvent<br>
 Результат:<br>
   tsOk - если все нормально, иначе код ошибки<br>
#end
Function MESEvent_ChkBIns(ar_MESEvent: TRecMESEvent): longint;

//------------------------------------------------------------------------------
#doc
 Создание новой записи MESEvent</brief><br>
 Параметры:<br>
   ar_MESEvent - Запись MESEvent<br>
 Результат:<br>
   tsOk, если все нормально, иначе - код ошибки<br>
#end
Function MESEvent_Ins(var ar_MESEvent: TRecMESEvent): longint;

//------------------------------------------------------------------------------
#doc
 Контроль данных перед модификацией записи MESEvent</brief><br>
 Параметры:<br>
   ar_MESEvent - Запись MESEvent<br>
 Результат:<br>
   tsOk, если все нормально, иначе - код ошибки<br>
#end
Function MESEvent_ChkBUpd(ar_MESEvent: TRecMESEvent): longint;

//------------------------------------------------------------------------------
#doc
 Модификация существующей записи MESEvent</brief><br>
 Параметры:<br>
   ar_MESEvent - Запись MESEvent<br>
 Результат:<br>
   tsOk, если все нормально, иначе - код ошибки<br>
#end
Function MESEvent_Upd(ar_MESEvent: TRecMESEvent): longint;

//------------------------------------------------------------------------------
#doc
 Контроль данных перед удалением записи MESEvent</brief><br>
 Параметры:<br>
   acRec - Ссылка на запись MESEvent<br>
 Результат:<br>
   tsOk, если успешно, иначе - код ошибки<br>
#end
Function MESEvent_ChkBDel(acRec: comp): longint;

//------------------------------------------------------------------------------
#doc
 Удаление записи MESEvent</brief><br>
 Параметры:<br>
   acRec - Ссылка на запись MESEvent<br>
 Результат:<br>
   tsOk, если успешно, иначе - код ошибки<br>
#end
Function MESEvent_Del(acRec: comp): longint;

//------------------------------------------------------------------------------
#doc
 Получение количества записей для MESEvent</brief><br>
 Результат:<br>
   Кол-во записей в списке<br>
#end
Function MESEvent_Count: longint;

//------------------------------------------------------------------------------
#doc
 Получение первой записи для MESEvent</brief><br>
 Результат:<br>
   tsOk, если успешно, иначе - код ошибки<br>
#end
Function MESEvent_GetFirst: longint;

//------------------------------------------------------------------------------
#doc
 Получение последней записи для MESEvent</brief><br>
 Результат:<br>
   tsOk, если успешно, иначе - код ошибки<br>
#end
Function MESEvent_GetLast: longint;

//------------------------------------------------------------------------------
#doc
 Получение следующей записи относительно текущей позиции для MESEvent</brief><br>
 Результат:<br>
   tsOk, если успешно, иначе - код ошибки<br>
#end
Function MESEvent_GetNext: longint;

//------------------------------------------------------------------------------
#doc
 Получение предыдующей записи относительно текущей позиции для MESEvent</brief><br>
 Результат:<br>
   tsOk, если успешно, иначе - код ошибки<br>
#end
Function MESEvent_GetPrev: longint;

//------------------------------------------------------------------------------
#doc
 Текущая запись-источник вида "Резервирование поступлений по плановым заказам"
 для MESEvent</brief><br>
 Результат:<br>
   Запись MESEvent<br>
#end
Function RecMESEvent_SrcRPORcp: TRecMESEvent;

//------------------------------------------------------------------------------
#doc
 Установка фильтра на записи-источники вида "Резервирование поступлений по плановым заказам"
 для MESEvent</brief><br>
 Параметры:<br>
   asFldName  - Имя поля, по которому устанавливается фильтр<br>
   asValuesIN - Список допустимых значений<br>
 Результат:<br>
   tsOk, если успешно, иначе - код ошибки<br>
#end
Function MESEvent_SrcRPORcp_SetFilter(asFldName: string; asValuesIN: string): longint;

//------------------------------------------------------------------------------
#doc
 Сброс фильтра на записи-источники вида "Резервирование поступлений по плановым заказам"
 для MESEvent</brief><br>
 Результат:<br>
   tsOk, если успешно, иначе - код ошибки<br>
#end
Function MESEvent_SrcRPORcp_ClearFilter: longint;

//------------------------------------------------------------------------------
#doc
 Получение первой записи-источника вида "Резервирование поступлений по плановым заказам"
 для MESEvent</brief><br>
 Результат:<br>
   tsOk, если успешно, иначе - код ошибки<br>
#end
Function MESEvent_SrcRPORcp_GetFirst: longint;

//------------------------------------------------------------------------------
#doc
 Получение последней записи-источника вида "Резервирование поступлений по плановым заказам"
 для MESEvent</brief><br>
 Результат:<br>
   tsOk, если успешно, иначе - код ошибки<br>
#end
Function MESEvent_SrcRPORcp_GetLast: longint;

//------------------------------------------------------------------------------
#doc
 Получение следующей записи-источника вида "Резервирование поступлений по плановым заказам"
 относительно текущей позиции для MESEvent</brief><br>
 Результат:<br>
   tsOk, если успешно, иначе - код ошибки<br>
#end
Function MESEvent_SrcRPORcp_GetNext: longint;

//------------------------------------------------------------------------------
#doc
 Получение предыдующей записи-источника вида "Резервирование поступлений по плановым заказам"
 относительно текущей позиции для MESEvent</brief><br>
 Результат:<br>
   tsOk, если успешно, иначе - код ошибки<br>
#end
Function MESEvent_SrcRPORcp_GetPrev: longint;

//------------------------------------------------------------------------------
#doc
 Установка дополнительных параметров для расчета</brief><br>
 Параметры:<br>
   ardRunCalcParams - Структура параметров для расчета<br>
#end
Procedure SetRunCalcParams(ardRunCalcParams: TMESRunCalcParams);

//------------------------------------------------------------------------------
#doc
 Загрузка аналитики в хэш аналитик</brief><br>
 Параметры:<br>
   acRoleAn  - Ссылка на роль аналитик<br>
   awKAU     - КАУ<br>
   acAn      - Ссылка на ОАУ<br>
   asHashAn  - Строка-хэш аналитик<br>
   asHashAn2 - Строка-хэш дополнительных аналитик<br>
 Результат:<br>
   True, если успешно, иначе - False<br>
#end
Function SetAnToHash(acRoleAn: comp; awKAU: word; acAn: comp;
  var asHashAn: string; var asHashAn2: string): boolean;

//------------------------------------------------------------------------------
#doc
 Получение аналитики из хэша аналитик по роли аналитик</brief><br>
 Параметры:<br>
   asHashAn  - Строка-хэш аналитик<br>
   asHashAn2 - Строка-хэш дополнительных аналитик<br>
   acRoleAn  - Ссылка на роль аналитик<br>
   awKAU     - КАУ<br>
   acAn      - Ссылка на ОАУ<br>
 Результат:<br>
   True, если успешно, иначе - False<br>
#end
Function GetAnFromHash(asHashAn: string; asHashAn2: string; acRoleAn: comp;
  var awKAU: word; var acAn: comp): boolean;

//------------------------------------------------------------------------------
#doc
 Получение наименования аналитики из хэша аналитик по роли аналитик</brief><br>
 Параметры:<br>
   asHashAn  - Строка-хэш аналитик<br>
   asHashAn2 - Строка-хэш дополнительных аналитик<br>
   acRoleAn  - Ссылка на роль аналитик<br>
 Результат:<br>
   Наименование аналитики либо пустая строка, если в хэше нет аналитики, соответствующей заданной роли<br>
#end
Function GetAnNameFromHash(asHashAn: string; asHashAn2: string; acRoleAn: comp): string;

//------------------------------------------------------------------------------
#doc
 Предподготовка данных перед выполнением расчета</brief><br>
#end
Procedure Prepare;

//------------------------------------------------------------------------------
#doc
 Запуск расчета</brief><br>
 Результат:<br>
   tsOk, если успешно, иначе - код ошибки<br>
#end
Function RunCalc: longint;

//------------------------------------------------------------------------------
#doc
 Установка поля OrderAn в записях таблицы MESEvent</brief><br>
 Параметры:<br>
   asOrderRoleAn               - Строка, содержащая роли аналитик в необходимом порядке следования ч/з запятую<br>
   ardSetOrderAnParamsForEvent - Дополнительные параметры установки сортировки<br>
 Результат:<br>
   True, если успешно, иначе - False<br>
#end
Function SetOrderAnForEvent(asOrderRoleAn: string;
  ardSetOrderAnParamsForEvent: TMESSetOrderAnParamsForEvent): boolean;

//------------------------------------------------------------------------------
#doc
 Установка интерфейса-владельца</brief><br>
 Параметры:<br>
   aoMESAlgOwner_CF - Объект типа oMESAlgOwner_CF<br>
 Результат:<br>
   True - если успешно, иначе - False<br>
#end
Function SetOwner(var aoMESAlgOwner_CF: oMESAlgOwner_CF): boolean;

End; // ObjInterface oMESAlg_CF

VipInterface iMESAlg_CF implements oMESAlg_CF, oPrmTreeOwner_CF Licensed(Free);

#endif


//******************************************************************************
// ObjInterface oMESAlg_DG_ViewData
#ifndef __Def_oMESAlg_DG_ViewData__
#define __Def_oMESAlg_DG_ViewData__
#doc
 Описание интерфейса-алгоритма "Просмотр данных модели производства"</brief><br>
#end
ObjInterface oMESAlg_DG_ViewData;

//------------------------------------------------------------------------------
#doc
 Установка интерфейса-владельца</brief><br>
 Параметры:<br>
   aoMESAlg_CF - Объект типа oMESAlg_CF<br>
 Результат:<br>
   True - если успешно, иначе - False<br>
#end
Function SetOwner(var aoMESAlg_CF: oMESAlg_CF): boolean;

//------------------------------------------------------------------------------
#doc
 Просмотр буфера</brief><br>
 Параметры:<br>
   asWindowTitle - Заголовок окна<br>
#end
Procedure ViewData(asWindowTitle: string);

End; // ObjInterface oMESAlg_DG_ViewData

VipInterface iMESAlg_DG_ViewData implements oMESAlg_DG_ViewData Licensed(Free);

#endif
