// =============================================================================
//                                                     (c)  корпорация Галактика
// Галактика 7.11 - Производственный контур
// Описание интерфейса "Системный алгоритм № 5 "Расчет потребностей в ресурсах""
// =============================================================================

#include oiEvnLog.vih

//#include trecacc.rec
#ifndef __oAlg_05
#define __oAlg_05

#component "M_MnPlan"

//#ifdef __Proizv_AltayVagon__
type TDSQLParams = record
  cRoleAnModif : comp;
  wFlagModif   : word;
  wFlagSearch  : word;
  wOgrOpAnSrc  : word;
  wFlagAgr     : word;
  wMode        : word;
  FlBy         : word;
  wNodeLevel   : word;
end;
//#endIf

Table Struct DocList5
(
 Nrec        : comp,
 TypeDoc     : Word,     // Тип документа из MnPlan.inc
 cDoc        : Comp,     // Ссылка на документ таблица MnPlan
 cObjAcct    : comp,     // ссылка на objacct - входящий для документа
 NumalgT     : comp,     // номер представления если тип документа план
 NumField1   : longint,  // номер поля если тип документа план
 cNrec1      : comp,
 cNrec2      : comp,
 cNrec3      : comp,
 flag        : word      // 1 - новый документ т.е создан алгоритмом
)

With Index
(
 DocList501  =  Nrec(Unique, Surrogate),
 DocList502  =  cDoc +cNrec1 + cNrec2 +cNrec3
);


Const
  sfSaveLinkLim    = 1;   // Объект иницилизирован
  sfUseCondStatus  = 2;   // Учитывать статусы позиций при огр.
  sfGetInfo        = 4;   // Идет чтение информации по запросу
  sfGenParty       = 8;   // Партии уже сгенерированы
  sfSetDiagram     = 16;  // Диаграмма уже сформирована
End;


ObjInterface oAlg_05;
 Procedure SetNumAlg(nAlg : word);
 Procedure SetFlagDelP(pFlagDelP : word);
 Procedure SetFlagPriv(pFlagPriv : word);

 Function AddFilter(
     Direct       : word;   // направление действия фильтра
                            // 1 - для входных данных (tmInp)
                            // 2 - для выходных(tmOut)
                            // 3 - агрегированных выходных (tmOutKol)
     ftype        : word;   // тип фильтра
                            // 1 - по роли аналитик на совпадение
     typeDoc      : word;   // тип документа
     cDoc         : comp;   // ссылка на документ
                            // 1 - для всех документов
     wcRole       : Word;   // константа роли
     wKodGr       : word;   // код группы КАУ
     cNrec        : comp    // ссылка на значение
                            ) : Boolean;
 Function DeleteFilter : Boolean;
 Function isFilter_tmOut( var st : type$tmOutm;
                             ptypeDoc      : word;  // тип документа
                             pcDoc         : comp   // ссылка на документ
                                                    // 1 - для всех документов
                            ) : Boolean;

 Procedure CreateDocOutPl(bDocm : Boolean);
 Function  SetAnPos ( num:word; constRole:word; wKodGr:word): Boolean;
 Function  SetNumAlgVidT ( num:word): Boolean;
 Function SetNumAlgVidS ( num:word): Boolean;

 Procedure CreateProt(bProt : Boolean);

 Function isKind  ( _tResource: word;
                   _cResource: comp;
                   _Product  : comp;
                   _Kind     : word;   //  "Категория ресурса",
                   _PrMat    : Word;   //  "Характеристика ресурса",
                   _PrOut    : Word    //  "Признак отхода",
                     ): Boolean;

Procedure SetOnOffSetVtHor(bDocm : Boolean);

Procedure SetFlag(pFlag : word);
Procedure ClearFlag(pFlag : word);
Function  ReadFlag(pFlag : word) : Word;

function GetAnValMnPlan(stTmp:Type$MnPlan; wAnField : word; var wKAUCode: word; var cKAUVal: comp): integer;
function GetAnValcRoleMnPlan(stTmp:Type$MnPlan; cKAURole: comp; var wKAUCode: word; var cKAUVal: comp): integer;
// .. чтение аналитики позиции спецификации по номеру
function GetAnValSpMnPl(stTmp:Type$SpMnPl;
                           wAnField  : word;
                        var wKAUCode : word;
                        var cKAUVal  : comp): integer;
function GetAnValcRoleSpMnPl(stTmp:Type$SpMnPl; cKAURole: comp; var wKAUCode: word; var cKAUVal: comp): integer;

// .. чтение аналитики позиции спецификации заявки по номеру
function GetAnValClaim(stTmp:Type$Claim;
                           wAnField  : word;
                        var wKAUCode : word;
                        var cKAUVal  : comp): integer;

function GetAnValcRoleClaim(stTmp:Type$Claim; cKAURole: comp; var wKAUCode: word; var cKAUVal: comp): integer;
// .. чтение аналитики позиции спецификации по номеру
function GetAnValSpMnPlan(stTmp      : Type$SpMnPlan;
                           wAnField  : word;
                        var wKAUCode : word;
                        var cKAUVal  : comp): integer;

function GetAnValcRoleSpMnPlan(stTmp:Type$SpMnPlan; cKAURole: comp; var wKAUCode: word; var cKAUVal: comp): integer;

Function getAntmInpcRoleSp( stmInp       : type$tmInpm;
                            cRole        : comp;
                            var wKAUCode : word;
                            var cKAUVal  : comp ):integer;

function GetAnValcRoleDocSp(stTmp:Type$SpMnPl; cKAURole: comp;
      var wKAUCode: word; var cKAUVal: comp): integer;




Function isFilter_SpmnPl( var st : type$SpmnPl;
                             VidFieldConst : LongInt;
                             ptypeDoc      : word;  // тип документа
                             pcDoc         : comp   // ссылка на документ
                                                    // 1 - для всех документов
                            ) : Boolean;

 Function isFilter_tmOutKol( var st : type$tmOutKLm;
                             ptypeDoc      : word;  // тип документа
                             pcDoc         : comp   // ссылка на документ
                                                    // 1 - для всех документов
                            ) : Boolean;


 Function isFilter_PlanPlan( cNrecS : comp ;
                             cNrecT : comp
                           ) : Boolean;

Function isFilter_SpObjAcc( var st : type$SpObjAcc;
                             ptypeDoc      : word;  // тип документа
                             pcDoc         : comp   // ссылка на документ
                            ) : Boolean;


Function isFilter_6(   ptypeDoc      : word;  // тип документа
                       pcDoc         : comp;   // ссылка на документ
                       pftype        : word;
                       pwKodGr       : word;
                       pcNrec        : comp
                            ) : Boolean;


//... проверка есть ли роль по плану
Function CheckMnPlanRole ( wRole : word; var  iSetPl : SetupMnf ) : word;
//... проверка есть ли роль по спецификации плана
Function CheckSpMnPlRole ( wRole : word; var  iSetPl : SetupMnf ) : word;

// Получить KatRole.NRec по константе роли
Function GetKatRoleNrec ( ConstRole : Word ) : Comp;

 // Function InitInter ( var pt :TRecAcc): Boolean;
 // Function RunInter (  wflag: word; var pt : TRecAcc  ) : Boolean;

// Установить ссылку на объект регистрации ситуаций
Function SetEvnLog(var aoEvnLog: oiEvnLog): longint;

// Получить ссылку на объект регистрации ситуаций
Function GetEvnLog: oiEvnLog;

Function SetState(flag : longint; OnOff : Boolean ): Boolean ;
Function GetState(flag : longint): Boolean;

end;

//#ifdef __Proizv_AltayVagon__

ObjInterface oAlg_05_v01(oAlg_05);
  Procedure InitDefaultDSQLParams(pr_stFormPl : TFormPl);
  Procedure SetDSQLParams(pr_stDSQLPar : TDSQLParams);
end;

//#endif

VipInterface Algoritm_5 implements oAlgoritm_Sys

//#ifdef __Proizv_AltayVagon__
  , oAlg_05_v01
//#else
//  , oAlg_05
//#endif


Licensed(Free);

#endif
