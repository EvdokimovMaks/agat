

#ifndef _DEBUG_OBJ_VIH_
#define _DEBUG_OBJ_VIH_

#ifdef ComponentVersion
#component "M_Dvs"
#end

#doc
Назначение : отладка VIP - функционала<br>
#end

ObjInterface oDebug;
#doc
Инициализация объекта<br>
#end
  Function InitShortStatusVar : boolean;

#doc
Удаление все временных таблиц с которыми работает объект<br>
#end
  Procedure KillAllTab;

#doc
Деинициализация объекта<br>
#end
  Function DoneInter : Boolean;

#doc
Возвращает наименование МЦ\Услуги
#end
  Function GetNameMCUsl(ParprMC : word; RefMCUsl : comp) : string;

#doc
Возвращает идентификатор файла в который грузится протокол отладки<br>
#end
  Function GetHandleFileDebug : TPtr;

#doc
Возвращает флаг отладки :<br>
  0 - отладочные сообщения не выводить<br>
  1 - отладочные выводить на экран<br>
  2 - отладочные выводить в файл<br>
  3 - отладочные выводить на экран и в файл<br>
#end
  Function GetFlagRunDebug : word;

#doc
Устанавливает флаг отладки :<br>
prRunDebug :
  0 - отладочные сообщения не выводить<br>
  1 - отладочные выводить на экран<br>
  2 - отладочные выводить в файл<br>
  3 - отладочные выводить на экран и в файл<br>
#end
  Procedure SetFlagRunDebug(prRunDebug : word);

#doc
Возвращает полное наименование файла с протоколом отладки<br>
#end
  Function GetNameFileDebug : string;

#doc
Устанавливает полное наименование файла с протоколом отладки<br>
#end
  Procedure SetNameFileDebug(prNameFileDebug : string);

#doc
Возвращает флаг вывода на экран отладочных сообщений<>
 true - сообщения на экран выводятся <br>
 false - сообщения на экран не выводятся <br>
#end
  Function GetFlagWrScreen : Boolean;

#doc
Возвращает флаг вывода в файл отладочных сообщений<>
 true - сообщения в файл пишутся<br>
 false - сообщения в файл не пишутся <br>
#end
  Function GetFlagWrFile : Boolean;

#doc
Возвращает флаг вывода отладочных сообщений для заданной<br>
функции (параметры - prTypeFunc, prNameFunc, prNameObj)<br>
 true - сообщения выводятся<br>
 false - сообщения не выводятся <br>
#end
  Function GetFlagPick_Func(prTypeFunc : word; prNameFunc : string; prNameObj : string) : Boolean;

#doc
Возвращает флаг входа из текущей процедуры(функции)<br>
 true - прервать выполнение текущей функции<br>
 false - продолжить выполненеие текущей функции<br>
#end
  Function GetFlagExitProc : Boolean;

#doc
Установить флаг входа из текущей процедуры(функции)<br>
 true - прервать выполнение текущей функции<br>
 false - продолжить выполненеие текущей функции<br>
#end
  Procedure SetFlagExitProc(prFlagExitProc : Boolean);


#doc
Установка глобальных переменных для oDebug<br>
prStrDSK - идентификатор по которым будут сгруппированы таблицы отладки<br>
prRunDebug - флаг отладки<br>
  0 - отладочные сообщения не выводить<br>
  1 - отладочные выводить на экран<br>
  2 - отладочные выводить в файл<br>
  3 - отладочные выводить на экран и в файл<br>
prNameFileDebug - полное наименование файла в который будут сохраняться <br>
  отладочные сообщения<br>
#end
  Function SetStartData(prStrDSK : string; prRunDebug : word; prNameFileDebug : string) : Boolean;

#doc
Сохранить значения глобальных переменных oDebug в буффер<br>
#end
  Function SaveDataToDSk : Boolean;

#doc
Возвращает "true" ecли в объект oDebug загружена информация по <br>
настройкам для отладки функционала с наименванием "prNameObj"<br>
#end
  Function ObjLoadIn_DebugObj(prNameObj : string) : Boolean;

#doc
Вставка новой записи таблицы TabObj_Debug<br>
#end
  Function Insert_TabObj(prTypeObj : word; prNameObj : string; prPick : word) : comp;

#doc
Возвращает флаг вывода отладочных сообщений для заданного<br>
функционала (параметр - prNameObj)<br>
 true - сообщения выводятся<br>
 false - сообщения не выводятся <br>
#end
  Function GetFlagPick_Obj(prTypeObj : word; prNameObj : string) : word;


#doc
Возвращает информацию об отладочном окне которое пользователь пометил как <br>
окно которое требуется вывести на экран:<br>
 prTypeWnd - тип,
 prNameWnd - наименование
 prIndexWnd_Out - индекс который поставил для данного окна Атлантис
 prNameObj  - наименование функционала в котором данное окно определено<br>
#end
  Function GetFlagPick_AllWnd(var prTypeWnd : word; var prNameWnd : string; var prIndexWnd_Out : Integer; var prNameObj : string) : Boolean;

#doc
Вставка новой записи таблицы "TabWnd_Debug" (здесь хранится информация<br>
по отладочным окнам)<br>
#end
  Function Insert_TabWnd_ifNew(prTypeWnd : word; prNameWnd : string; prIndexWnd_Out : Integer; prNameObj : string; prPick : word) : comp;

#doc
Возвращает информацию (параметры - prPick, prIndexWnd, prIndexWnd_Out) <br>
по заданному отладочному окну (параметры - prNameObj, prTypeWnd, prNameWnd)<br>
#end
  Function GetInfo_from_NameTabWnd(prNameObj : string; prTypeWnd : word; prNameWnd : string; var prPick : word; var prIndexWnd : word; var prIndexWnd_Out : integer) : boolean;

#doc
Возвращает true если информация по настройкам для отладки заданной функции
(параметры prTypeFunc, prNameFunc, prNameObj) уже определена в объекте<br>
#end
  Function FuncLoadIn_DebugObj(prTypeFunc : word; prNameFunc : string; prNameObj : string) : Boolean;

#doc
Вставка новой записи таблицы "TabFunc_Debug" (здесь хранится информация по
настройкам отладки определенной функции)
#end
  Function Insert_TabFunc(prTypeFunc : word; prNameFunc : string; prNameObj : string; prPick : word) : comp;


#doc
Вывод окна с настройками отладки заданного функционала<br>
здесь prStr - текущее отладочное сообщение<br>
#end
  Function RunWndNstDebug(prStr : string) : word;

#doc
Вывод отладочного сообщения на экран и(или) в файл<br>
#end
  Function OutputMess_Debug(prTypeFunc : word; prNameFunc : string; prNameObj : string; prStr : string) : Boolean;

!#doc
!Вывод окна с информацией по заданной таблице<br>
!#end
!  Function RunWindow_Debug(prTypeWnd : word; prNameWnd : string; prDebStr : string) : Boolean;

end;

ObjInterface oDebug1(oDebug);

 Function Run_Wnd_Put_Debug_Str(p_sWindowTitle : String; var p_sTitle_1 : String; var p_sTitle_2 : String; var p_sTitle_3 : String; var p_sStr : String; var p_sComment : String) : Longint;
 Function Get_Str_Swift(p_lCount_Cikl_All : Longint; p_tTime_Calc : Time; p_lCount_Cikl_Calc : Longint) : Time;

end;

VipInterface DebugObject implements oDebug1
#ifdef ATL51
 Licensed (FREE)
#endif
;

#endif
