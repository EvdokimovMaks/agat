//********************************************************************************
//                                                        (c) корпорация Галактика
// Галактика 7.12 - Управление производственной логистикой
// Объектный интерфейс для работы с ObjAcct
//********************************************************************************

#ifndef _OBJACCT_OBJ_DVS_VIH_
#define _OBJACCT_OBJ_DVS_VIH_

#ifdef ComponentVersion
#component "M_DVS"
#end

#include DefTypeObjAcc.inc
#include DebugObj.vih
!#include IRTabSystObj.vih                                                         //A49
#doc
 Работа с ObjAcct</brief>
#end


ObjInterface oObjAcct_DVS;
!  Function LoadIRTabSyst(prIRTabSystObj : oIRTabSyst) : Boolean;                                           //A49

!  Procedure DebWrOneObjAcct(DebStr : String; v_ObjAcct : varObjAcct);
!  Function ConvertWordToVarTab(prNumFlag : LongInt; S_WordForTabFields : StructWordForTab) : varObjAcct;   //A49
!  Function ConvertVarTabToWord_NZero(v_ObjAcct : varObjAcct) : StructWordForTab;                           //A49

  Function GetNamePos(v_ObjAcct : varObjAcct) : string;
  Function GetStandartInfo(RefTab : comp) : StructStandartObjAcc;
  Function GetStrInfoFromPos(v_ObjAcct : varObjAcct; prFlagMode : word) : StructObjAcctStr;

!  Function SetUniHierFromOnePos(v_ObjAcct : varObjAcct; RefUniHier : comp; wListSrc : word; FlagWork : word) : comp;              //A49
!  Function GetVarRecFromUniHier(var v_ObjAcct : varObjAcct; UniHiernRec : comp) : Boolean;                                        //A49
!  Function GetUniHierFromSect(wListSrc : word; FlagWork : word) : boolean;                                                        //A49
!  Function GetUniHierFromFullSect_1(wListSrc : word; FlagWork : word; v_BndMain : varObjAcct; v_BndUsl : varObjAcct) : boolean;   //A49
!  Function GetUniHierFromFullSect_2(wListSrc : word; FlagWork : word; RefMainUniHier : comp; RefUslUniHier : comp) : boolean;     //A49

!  Function GetStrInfoFromTmpGrN(wListSrc : LongInt; prTypeTab : word; prRefTab : comp) : StructObjAcctStr;     //A49
!  Function SetTmpGrNFromOneStruct(wListSrc : LongInt; v_ObjAcct : varObjAcct; prFlagMode : word) : Boolean;    //A49
!  Function SetTmpGrNFromOnePos(wListSrc : LongInt; ObjAcctnRec : comp; prFlagMode : word) : Boolean;           //A49
/*                             //A49
  Procedure ResAllSect;
  Function SetSection(SectionVar : SectionVarDvDS) : boolean;
//  Function GetWorkSection : word;    ???????????????
!  Function SetDefaultUsl(v_BndMain : varObjAcct; v_BndUsl : varObjAcct) : varObjAcct;
!  Function SetDefaultUniHierUsl(v_BndMain : varObjAcct; v_BndUsl : varObjAcct; RefUniHier : comp; wListSrc : word) : comp;
  Function DefCorrectUsl(v_BndUsl : varObjAcct; v_BndMain : varObjAcct) : varObjAcct;
  Function DefCorrectMain(v_BndUsl : varObjAcct; v_BndMain : varObjAcct) : varObjAcct;
  Function SetBoundsForTab(v_BndMainObjAcct : varObjAcct; v_BndUslObjAcct : varObjAcct) : Boolean;

// ???????? займусь позже !!!!!!!!!  Function SetVarWndMark(prListGen : word; prwListIR : comp; prListRez : word; prLabLewel : word; prFlagWork : word) : comp;

  Procedure GetUslMaskaIRFromUpLewel(S_LP_Top : StructLabelPanel; S_LP_Scan : StructLabelPanel; var v_ObjAcct : varObjAcct);
  Procedure GetMainMaskaIRFromUPLewel(S_LP_Top : StructLabelPanel; S_LP_Scan : StructLabelPanel; RefTopTab : comp; var v_ObjAcct : varObjAcct);

  Function GetUPLabelPanel(S_LP_Scan : StructLabelPanel; S_LP_End : StructLabelPanel) : StructLabelPanel;
  Function GetDownLabelPanel(S_LP_Scan : StructLabelPanel; S_LP_End : StructLabelPanel) : StructLabelPanel;
  Function GetNextLabelPanel_Far(S_LP_Scan : StructLabelPanel; S_LP_End : StructLabelPanel) : StructLabelPanel;
  Function GetTopRefTab(prRefTab : comp; S_LP_Scan : StructLabelPanel; S_LP_TopEnd : StructLabelPanel) : comp;

  Function GetVarSectFromPluralSect(prUslListTab : word; prMainListTab : comp; var RefUslUniHier : comp; var RefMainUniHier : comp) : boolean;

   Procedure CopyGlbVarToBuff;
   Procedure CopyBuffToGlbVar;

  Function GetNextLewelsListFromOnePos(v_ObjAcct : varObjAcct; prListIR : comp; S_LP_Scan : StructLabelPanel; LL_End : word; NewTopTab : comp) : comp;
  Function GetNextLewelsListFromObjAcct(prListIR : comp; S_LP_Scan : StructLabelPanel; LL_End : word; NewTopTab : comp;
                                                                              v_BndMain : varObjAcct; v_BndUsl : varObjAcct) : Boolean;
  Function GetNextLewelsListFromSpisok(prListSrc : word; prListIR : comp; S_LP_Scan : StructLabelPanel; LL_End : word; NewTopTab : comp) : Boolean;
  Function GetNextLewelsListFromIR(prListIR : comp; LL_Scan : word; LL_End : word) : Boolean;
*/
!  Function GetcntSortFromVar(prcntSort : word) : varObjAcct;
!  Function SetcntSortFromVar(v_MaskaObjAcct : varObjAcct) : word;
!  Function SetSortForTab(v_MaskaObjAcct : varObjAcct) : boolean;

  Function InitShortStatusVar(FlagLoadObj : longInt) : Boolean;
!  Function InitFullStatusVar(S_Var : SectionVarDvDS; FlagLoadObj : longInt) : boolean;           //ddddddddddddddd
  Function DoneInter : boolean;

  //****************************************************************************
  //  Отладка
   Function GetStrDsk_Deb : string;
   Procedure SetStrDsk_Deb(prStrDSK_Deb : string);
   Function GetNameObj : string;
   Procedure SetNameObj(prNameObj : string);
   Function LoadDebugObj(prDebugObj : oDebug) : boolean;
   Function GetModeDebug : boolean;
   Function SetModeDebug(prFlagDebug : boolean) : Boolean;
   Procedure SetStartVarDebug(prStrDSK_Deb : string; prNameObj : string);
   Function RunWindow_Debug(prTypeWnd : word; prNameWnd : string; prDebStr : string) : Boolean;
end;


ObjInterface oObjAcct_DVS14(oObjAcct_DVS);
  Function SetDefTab_for_Nkl(prName : string; prTypeObj : word; prcObject : comp; prTypeOwn : word; prcOwner : comp;
                             prState : word; prVidSopr : word; prNumSort : comp; var prObjAcct : type$ObjAcct) : boolean;
  Function InsDefTab_for_Nkl(prName : string; prTypeObj : word; prcObject : comp; prTypeOwn : word; prcOwner : comp;
                             prState : word; prVidSopr : word; prNumSort : comp; var prObjAcct : type$ObjAcct) : boolean;

  //****************************************************************************
  //  Отладка
   Function SetExtInfoDebug(prDebugObj : oDebug) : Boolean;
end;

#endif
