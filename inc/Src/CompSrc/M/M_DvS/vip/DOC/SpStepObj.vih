

#ifndef __SpStep_VIH__
#define __SpStep_VIH__

#ifdef ComponentVersion
#component "M_DVS"
#endif

#include DebugObj.vih
!#Include SpSoprObj.vih

ObjInterface oSpSopr; forward;
ObjInterface oKatDSNor; forward;

ObjInterface oSpStep;
#doc
Инициализация объекта<br>
#end
  Function InitInter : boolean;

#doc
Деинициализация объекта<br>
#end
  Procedure DoneInter;

#doc
Заполнение полей "по умолчанию"<br>
#end
  Function SetFieldSpStep_for_BaseDoc(prBaseDoc : type$BaseDoc; var prSpStep : type$SpStep) : boolean;

  Function SetFieldSpStep_Def(prBaseDoc : type$BaseDoc; prFlag_ST_GPF : Boolean; prTypeRes_SpStep : word; prNPP : word; var prSpStep : type$SpStep) : boolean;

  Function Del_SpStep(prcSpStep : comp; var prKatDSNorObj : oKatDSNor) : boolean;

  Function SetFld_Kol_Price_Summa_for_SpStep_SoprUsl_All(prcBaseDoc : comp) : boolean;

  Function SetFld_Kol_Price_Summa_for_SpStep_SoprUsl_One(prcSpStep : comp) : boolean;

  Function SetFieldSpStep_Ext_Kol(prcOtpED_Kol : comp; prKol : double; prPrice : double; prcOtpED_New : comp;
                                  var prSpStep : type$SpStep) : boolean;

#doc
  Пересчет налогов
#end
  Procedure CalcTax (var prSpStep : type$SpStep);

#doc
Формирование SpStep по SpDocs<br>
#end
  Function SetSpStep_from_SpDocs_Mess(prSpDocs : type$SpDocs;
                                      prBaseDoc : type$BaseDoc; prTek_cSpStep : comp; prNPP : word;
                                      prcOtpED_Kol : comp; prKol : double; prPrice : double; prcOtpED_New : comp;
                                      var prSpStepKolSkl_Uch : double) : boolean;
#doc
Формирование SpStep по SpSopr<br>
#end
  Function SetSpStep_from_SpSopr(prSpSopr : type$SpSopr;
                                 prBaseDoc : type$BaseDoc; prTek_cSpStep : comp; prNPP : word;
                                 prcOtpED_Kol : comp; prKol : double; prPrice : double; prcOtpED_New : comp;
                                 var prSpSoprObj : oSpSopr;
                                 var prSpStep : type$SpStep) : comp;

  Procedure SetSpStep_from_DSGOtpr(prBaseDoc : type$BaseDoc; prDsgOtpr : type$DsgOtpr; prKolNorm : Double;
                                   var prKatDSNorObj : oKatDSNor;
                                   var prSpStep : type$SpStep);

#doc
Запонить спецификацию ДО по сырью по заданной норме<br>
#end
  Function SetSpStep_from_KatDSNorOne_Syr(prcBaseDoc : comp; prcKatDSNor : comp; prKolNorm : Double; pc_KitKau_nRec : comp) : boolean;

#doc
Запонить спецификацию ДО по готовой продукции по заданной норме<br>
#end
   Function SetSpStep_from_KatDSNor_GP(prcBaseDoc : comp; prcKatDSNor : comp; prKolNorm : Double;
                                       var prKatDSNorObj : oKatDSNor) : boolean;

   Function SetSpStep_from_KatalogRes_Wrk(prBaseDoc : type$BaseDoc; prFlag_ST_GPF : boolean; prTypeRes_SpStep : word; prcMCUsl : comp; prTek_cSpStep : comp; prNPP : word) : boolean;

   Function SetSpStep_from_KlPrice_Mess(prBaseDoc : type$BaseDoc; prFlag_ST_GPF : boolean; prTypeRes_SpStep : word; prTek_cSpStep : comp; prNPP : word) : boolean;

   Function UpdSpStep_from_TopMC_SpStep(prTopMC_cSpStep : comp; prTek_cSpStep : comp) : boolean;

end;


#endif
