/*
 ╔═══════════════════════════════════════════════════════════════════════════╗
 ║                     (c) 1994,98 корпорация ГАЛАКТИКА                      ║
 ║ Проект        : ГАЛАКТИКА                                                 ║
 ║ Система       : Оперативный контур                                        ║
 ║ Версия        : 5.70                                                      ║
 ║ Назначение    : Интерфейс уточнения замен на материальные ценности        ║
 ║ Ответственный : Левченко Андрей Александрович(Andrew)                     ║
 ║ Параметры     : есть                                                      ║
 ╚═══════════════════════════════════════════════════════════════════════════╝
*/


#ifndef _GETSVOST_SPDOCOBJ_VIH_
#define _GETSVOST_SPDOCOBJ_VIH_

#ifdef ComponentVersion
#component "M_DVS"
#endif

#include DebugObj.vih

#doc
Объект с вспомогательными функциями для проведения операций по актам замен<br>
#end

ObjInterface oGetSvOst_SpDoc;
#doc
Удаление временной таблицы "TmpTabNalMC"<br>
#end
  Procedure KillAll_TmpTabNalMC;
#doc
Удаление временной таблицы "TmpMov_Plan_NSkl"<br>
#end
  Procedure KillAll_TmpMov_Plan_NSkl;

  Function GetFlag_Use_CU(prFlag_Use_CU : Boolean) : Boolean;

  Procedure SetFlag_Use_CU(prFlag_Use_CU : Boolean);

#doc
Резервирует необходимое количество по разрезу <Подразделение, МОЛ, МЦ, Партия> <br>
для проведения операций по документу на время выполнения замен<br>
Например: при отпуске в производство часть ресурсов должна быть зарезервирована<br>
для обеспечения отпуска уже заданного в спецификации накладной перечня ресурсов<br>
Возвращает количество резерва по разрезу<br>
#end
  Procedure SetNeedRes_for_Reserv_Init(prData_Zam : date; prRefPodr : comp; prRefMOL : comp; prRefMC : comp; prRefParty : comp; prcSaldTune : comp; prcKitKau : comp);
  //------------------------------------------------------------------------------------------------------------------------------
  Function Get_AgrInfo_FromSpecif(prcPodrNeedZam : comp; prDate_Start : date; prDate_End : date; prPiznakMC : word; prRefMC : comp; prRefParty : comp;
                                  prcSaldTune : comp; prcKitKau : comp;
                                  var prDiskret_ED : word; var prKol : double; var prKolNorma : double; var prReserv : double; var prAveragePrice : double) : boolean;
#doc
Опеределяет перечень ресурсов спецификации накладной<br>
Вставка новой записи таблицы "TTSpDoc_AgrKol"<br>
Возвращает ссылку на "TTSpDoc_AgrKol"<br>
#end
  Procedure SetTTSpDoc_AgrKol_Init(prcPodrNeedZam : comp; prDate_Start : date; prDate_End : date;
                                   prPriznakMC : word; prRefMC : comp; prRefParty : comp; prcSaldTune : comp; prcKitKau : comp;
                                   prRefOtpED : comp; prKol : double; prKolNorma : double; prReserv : double; prPrice : double);
  //------------------------------------------------------------------------------------------------------------------------------
  Function Get_AgrInfoRsp_FromSpecif(prcPodrNeedZam : comp; prDate_Start : date; prDate_End : date; pr_prTypeRes_GP : word; prcRes_GP : comp;
                         prPiznakMC : word; prRefMC : comp; prRefParty : comp; prcSaldTune : comp; prcKitKau : comp;
                         var prDiskret_ED : word; var prKol : double; var prKolNorma : double; var prReserv : double; var prAveragePrice : double) : boolean;

#doc
Опеределяет перечень ресурсов спецификации накладной<br>
Вставка новой записи таблицы "TTSpDoc_AgrKol"<br>
Возвращает ссылку на "TTSpDoc_AgrKol"<br>
#end
  Procedure SetTTSpDoc_AgrKol_Rsp_Init(prcPodrNeedZam : comp; prDate_Start : date; prDate_End : date; pr_prTypeRes_GP : word; prcRes_GP : comp;
                                       prPriznakMC : word; prRefMC : comp; prRefParty : comp; prcSaldTune : comp; prcKitKau : comp;
                                       prRefOtpED : comp; prKol : double; prKolNorma : double; prReserv : double; prPrice : double);
  //------------------------------------------------------------------------------------------------------------------------------
!#doc
! ?????????????? tttttttttttttttt
!#end
Function GetTmpResForSpDoc(prRefMC : comp; prRefParty : comp; prcSaldTune : comp; prcKitKau : comp; prRefPodr : comp; prRefMOL : comp) : double;
  //------------------------------------------------------------------------------------------------------------------------------
!#doc
! ?????????????? tttttttttttttttt
!#end
  Function GetKol_from_TmpResForSpDoc(prRefMC : comp; prRefParty : comp; prcSaldTune : comp; prcKitKau : comp; prRefPodr : comp; prRefMOL : comp) : double;
  //------------------------------------------------------------------------------------------------------------------------------
!#doc
! ?????????????? tttttttttttttttt
!#end
  Function SetTmpResForSpDoc_for_MCOne(prData_Zam : date; prRefPodr : comp; prRefMOL : comp; prRefMC : comp; prRefParty : comp; prcSaldTune : comp; prcKitKau : comp; prIndexFnc_for_LoadNal : word) : double;

  Procedure SetTmpResForSpDoc_for_MCOne_Init(prData_Zam : date; prRefPodr : comp; prRefMOL : comp; prRefMC : comp; prRefParty : comp; prcSaldTune : comp; prcKitKau : comp; prIndexFnc_for_LoadNal : word);
  //------------------------------------------------------------------------------------------------------------------------------
#doc
Возвращает величину плановых свободных остатков по разрезу <br>
без учета фактического наличия<br>
#end
  Function GetPlanMov(prDate : date; prRefPodr : comp; prRefMOL : comp; prRefMC : comp; prRefParty : comp) : double;

#doc
Возвращает величину свободных остатков по разрезу<br>
#end
  Function GetValue_SvOstSect_Wrk(prDate : date; prRefPodr : comp; prRefMOL : comp; prRefMC : comp; prRefParty : comp; prcSaldTune : comp; prcKitKau : comp; prIndexFnc_for_LoadNal : word) : double;
  //------------------------------------------------------------------------------------------------------------------------------
#doc
Удаляет все времменые таблицы<br>
#end
  Procedure KillAllTmpTab;
#doc
Инициализация объекта<br>
#end
  Function InitInter : boolean;

#doc
Функция деинициализации объекта<br>
#end
  Function DoneInter : boolean;

//-----------------------  Отладка  ---------------------------------
  Function GetStrDsk_Deb : string;
  Procedure SetStrDsk_Deb(prStrDSK_Deb : string);
  Function GetNameObj : string;
  Procedure SetNameObj(prNameObj : string);
  Function LoadDebugObj(prDebugObj : oDebug) : boolean;
  Function GetModeDebug : boolean;
  Function SetModeDebug(prFlagDebug : boolean) : Boolean;
  Procedure SetStartVarDebug(prStrDSK_Deb : string; prNameObj : string);
  Function SetExtInfoDebug(prDebugObj : oDebug) : Boolean;
  Function RunWindow_Debug(prTypeWnd : word; prNameWnd : string; prDebStr : string) : Boolean;
end;


ObjInterface oGetSvOst_SpDoc20(oGetSvOst_SpDoc);
  Function Get_NeedReserv_Tek(prRefPodr : comp; prRefMOL : comp; prRefMC : comp; prRefParty : comp) : double;

  Function GetInfo_AgrRes_FromSpecif(prPiznakMC : word; prRefMC : comp; prRefParty : comp; prcSaldTune : comp; prcKitKau : comp;
                                     var prDiskret_ED : word; var prKol : double; var prKolNorma : double; var prReserv : double; var prAveragePrice : double) : boolean;
end;



ObjInterface oGetSvOst_SpDoc21(oGetSvOst_SpDoc20);

Function GetPar_For_SkladProizv_OutSide(prcKatPodr : comp) : word;

Procedure GetValue_SvOstSect_Full(prDate : date; prRefPodr : comp; prRefMOL : comp; prRefMC : comp; prRefParty : comp; prcSaldTune : comp; prcKitKau : comp; prIndexFnc_for_LoadNal : word;
                                  var prNal_Fact : double; var prKol_Res : double; var prMov_Plan : double);

end;


ObjInterface oGetSvOst_SpDoc22(oGetSvOst_SpDoc21);

 Function GetFlagUse_TekSaldo : Boolean;
 Procedure SetFlagUse_TekSaldo(prFlagUse_TekSaldo : Boolean);

 Function GetValue_SvOstSect_Wrk_AllRzlt(prDate : date; prcPodr : comp; prcMOL : comp; prcMC : comp; prcParty : comp; prcSaldTune : comp; prcKitKau : comp; prIndexFnc_for_LoadNal : word) : double;

end;


ObjInterface oGetSvOst_SpDoc23(oGetSvOst_SpDoc22);

 Procedure Delete_TmpTabNalMC(prRefMC : comp; prRefParty : comp; prcSaldTune : comp; prcKitKau : comp; prRefPodr : comp; prRefMOL : comp);

end;

ObjInterface oGetSvOst_SpDoc24(oGetSvOst_SpDoc23);

 Procedure SetList_Pick_KitKau_for_Maska(pw_List_wList : word;
                                         p_cSaldTune : comp;
                                         p_cObj    : comp; p_cKau_01 : comp; p_cKau_02 : comp; p_cKau_03 : comp; p_cKau_04 : comp;
                                         p_cKau_05 : comp; p_cKau_06 : comp; p_cKau_07 : comp; p_cKau_08 : comp; p_cKau_09 : comp);
 Procedure KillAll_TmpTab_for_Maska_KitKau;

end;

ObjInterface oGetSvOst_SpDoc25(oGetSvOst_SpDoc24);

 Function Find_SaldoFnd(pw_SP : word; pc_KatPodr : comp; pc_KatMol : comp; p_cKatMC : comp; pc_KatParty : comp) : Boolean;
 Function Find_SaldoRaz(pw_SP : word; pc_KatPodr : comp; pc_KatMol : comp; p_cKatMC : comp; pc_KatParty : comp; pc_SaldTune : comp; pc_KitKau : comp) : Boolean;

 Function GetTSvOst_was_Use(prDate_SvOst : date; prRefMC : comp; prRefParty : comp; p_wSP : word; prRefPodr : comp; prRefMOL : comp; prcSaldTune : comp; prcKitKau : comp) : Double;
 Function SetTSvOst_was_Use(prDate_SvOst : date; prRefMC : comp; prRefParty : comp; p_wSP : word; prRefPodr : comp; prRefMOL : comp; prcSaldTune : comp; prcKitKau : comp; p_dKol : double) : comp;

end;


ObjInterface oGetSvOst_SpDoc26(oGetSvOst_SpDoc25);

 Procedure GetValue_SvOstSect_SP_Full(prDate : date; p_wSP : word; prRefPodr : comp; prRefMOL : comp; prRefMC : comp; prRefParty : comp; prcSaldTune : comp; prcKitKau : comp; prIndexFnc_for_LoadNal : word;
                                      var prNal_Fact : double; var prKol_Res : double; var prMov_Plan : double);

 Function GetValue_SvOstSect_SP_Wrk_AllRzlt(prDate : date; p_wSP : word; prcPodr : comp; prcMOL : comp; prcMC : comp; prcParty : comp; prcSaldTune : comp; prcKitKau : comp; prIndexFnc_for_LoadNal : word) : double;

#doc
Возвращает величину свободных остатков по разрезу<br>
#end
  Function GetValue_SvOstSect_SP_Wrk(prDate : date; p_wSP : word; prRefPodr : comp; prRefMOL : comp; prRefMC : comp; prRefParty : comp; prcSaldTune : comp; prcKitKau : comp; prIndexFnc_for_LoadNal : word) : double;
end;


ObjInterface oGetSvOst_SpDoc27(oGetSvOst_SpDoc26);

#doc
Возвращает наличие по разрезу на дату<br>
#end
 Procedure GetNalT(prDate : date; p_wSP : word; prcPodr : comp; prcMOL : comp; prcMC : comp; prcParty : comp; prcSaldTune : comp; prcKitKau : comp; prIndexFnc_for_LoadNal : word;
                   var prNal_Fact : double; var prMov_Plan : double);


#doc
Возвращает минимальную величину SaldoMC.Kol за период по разрезу<br>
#end
 Function Get_Min_SaldoMC_for_PeriodDate(p_dtOpr_Start : date; p_dtOpr_End : date; p_cKatMC : comp; p_cKatParty : comp; p_wSP : word; p_cKatPodr : comp; p_cKatMOL : comp; p_cKitKau : comp;
                                     var p_dtNalT_Date : date; var p_dNalT_Kol : Double) : Boolean;
end;



ObjInterface oGetSvOst_SpDoc28(oGetSvOst_SpDoc27);

 Procedure LogStrToFile_RecordsInTable(p_sFile_Name : String; p_sPrefix : String);

end;


VipInterface GetSvOst_SpDocObject implements oGetSvOst_SpDoc28 #Licensed_Free;

#endif
