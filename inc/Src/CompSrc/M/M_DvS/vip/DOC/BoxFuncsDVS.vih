

#ifndef __BoxFuncsDVS_VIH__
#define __BoxFuncsDVS_VIH__

#ifdef ComponentVersion
#component "M_DVS"
#endif

#include PickWnd.inc
#include DefTypeDS.inc

ObjInterface oBoxFuncsDVS;
#doc
Инициализация объекта<br>
#end
  Function InitInter : boolean;
#doc
Деинициализация объекта<br>
#end
  Procedure DoneInter;
//--------------------------------------------------------------------------------------------------------
/*
#doc
 Возвращает :
  "0"-если записей таблицы "Pick" с ограничением <br>
      ((prListPick == Pick.wList)) не обнаружено, <br>
  "1"-если обнаружена одна запись<br>
  "2"-если обнаружено больше одной записи<br>
#end
  Function GetFlagRefTab_MltSel(prListPick : word) : word;
*/
//--------------------------------------------------------------------------------------------------------
#Doc
Данные по догвору prDogovor необходимые для формирование сопроводительных<br>
документов ДВС<br>
#end
  Procedure GetInfo_from_Dogovor(prDogovor : type$Dogovor;
                                 var prcOrg : comp; var prcGrPol : comp; var prcGrOtp : comp; var prcOtvPodr : comp;
                                 var prTipMoney : word; var prDopProc : double; var prVhodNal : word; var prisSum : word; var prSkidka : double; var prdValCurse : date;
                                 var prcVal : comp; var prcKontragent_Bank : comp; var prcMyBank : comp;
                                 var prcShtrafP : comp; var prcShtrafG : comp;
                                 var prcNazna : comp;
                                 var prcShipment : comp; var prcTipOtg : comp; var prcWayMove : comp;
                                 var prdInput : date);

#Doc
Данные по Кал.Плану prCalPlan необходимые для формирование сопроводительных<br>
документов ДВС<br>
#end
  Procedure GetInfo_from_CalPlan(prCalPlan : type$CalPlan;
                                 var prcOrg : comp; var prcGrPol : comp; var prcGrOtp : comp; var prcOtvPodr : comp;
                                 var prTipMoney : word; var prDopProc : double; var prVhodNal : word; var prisSum : word; var prSkidka : double; var prdValCurse : date;
                                 var prcVal : comp; var prcKontragent_Bank : comp; var prcMyBank : comp;
                                 var prcShtrafP : comp; var prcShtrafG : comp;
                                 var prcNazna : comp;
                                 var prcShipment : comp; var prcTipOtg : comp; var prcPunktP : comp; var prcPunktR : comp; var prcWayMove : comp; var prcMarAvt : comp;
                                 var prdInput : date);

  Procedure Set_GlbFlagErr_ConvTypeRes_SpDocs_TypeRes_to_Mess_Full_1(prFlag : Boolean);
  Function ConvTypeRes_SpDocs_TypeRes_to_Mess_Full(prSpDocs : type$SpDocs) : word;

#Doc
Данные по спецификации договоров, кал.Планов необходимые для формирование<br>
сопроводительных документов ДВС<br>
#end
  Procedure GetInfo_from_SpDocs(prSpDocs : type$SpDocs;
                                var prTypeRes_SpDocs : word; var prcMCUsl : comp;
                                var prcUKS : comp;
                                var prcSpDocs : comp;
                                var prcVal : comp; var prcPriceList : comp; var prcGrNal : comp;
                                var prcOtpED_Kol : comp; var prKol : double; var prOstatok : double; var prPrice : double;
                                var prcCellVal : comp);
//--------------------------------------------------------------------------------------------------------
!#Doc
!Загрузить данные ТТН данные из для таблицы prcTable, <br>
!код таблицы определяется константой - coBaseDoc, coKatSopr<br>
!#End
!  Function GetInfoTTNDoc_from_Tab(prCnt_coTable : word; prcTable : comp;
!                                  var prcShipment : comp; var prcTipOtg : comp; var prcPunktP : comp; var prcPunktR : comp; var prcMarAvt : comp) : comp;

#Doc
Установить данные ТТН данные для таблицы prcTable, <br>
код таблицы определяется константой - coBaseDoc, coKatSopr<br>
#End
  Function InsertTTNDoc(prCnt_coTable : word; prcTable : comp; prcShipment : comp; prcTipOtg : comp; prcPunktP : comp; prcPunktR : comp; prcWayMove : comp; prcMarAvt : comp) : comp;
//--------------------------------------------------------------------------------------------------------
  Function Find_SpecZatr(prc_coTbl : word; prcTab : comp) : boolean;

  Function Copy_SpecZatr(prc_coTbl_Src : word; prcTab_Src : comp; prc_coTbl_Dst : word; prcTab_Dst : comp; prcUKS_Dst : comp) : comp;

  Function Del_SpecZatr(prc_coTbl : word; prcTab : comp) : boolean;
//--------------------------------------------------------------------------------------------------------

  Function GetNameTypeDoc_Src(prTypeDoc_to : word) : string;

#Doc
Запрашивает интервал дат<br>
#end
  Function GetDateInterval(Date1Str : string; Date2Str : string) : Boolean;
  function ReadDateDSK(name:string; b : boolean): date;
#Doc
Проверка корректности заданного разреза для документов модуля ДВС<br>
с проверкой валидности заданных ссылок<br>
#end
  Procedure DefCorrect_SectionVarDvDS(SectionVar : SectionVarDvDS; var prStrWar : string; var prStrErr : string);

 Function DefCorrect_SectionVarDvDS_Mess(SectionVar : SectionVarDvDS) : boolean;

#Doc
Функция сравнивает две структры (S_var1 и S_var2) в которых должна быть<br>
задана информация по разрезам. Возвращает индекс таблицы из струтуры<br>
которая соответсвует разрезу более общего плана.<br>
#end
  Function CompareSection(S_var1 : SectionVarDvDS; S_var2 : SectionVarDvDS) : word;

#doc
Формирование структуры SectionVarDvDS по типу и ссылке на таблицу<br>
#end
  Function GetS_VarDvDS_from_RefTab(prTypeTab_to : word; prcTab : comp) : SectionVarDvDS;

#doc
Если (SectionVar.wFlag and 1) <> 0 то возвращает<br>
индекс для "Pick.wList" (в "Pick" должен быть определены фильтр с множественным<br>
выбором для документов модуля)<br>
Если (SectionVar.wFlag and 1) = 0 то <br>
возвращает "0"<br>
#end
  Function GetwList_from_S_VarDvDS(SectionVar : SectionVarDvDS) : word;

#doc
Формирует структуру SectionVar : SectionVarDvDS - <br>
 1)SectionVar.wFlag := SectionVar.wFlag or 1;<br>
 2)в одно из полей структуры (TabnRec, TabnRec1, TabnRec2 - в какое именно поле<br>
   определяется параметром "prTypeTab_to") пишет prList<br>
#end
  Function SetS_VarDvDS_from_wList(prList : word; prTypeTab_to : word; var prSectionVar : SectionVarDvDS) : boolean;

#doc
Возвращает ссылку на таблицу которая была "зашита" в структуру <br>
"SectionVar : SectionVarDvDS" для работы с фильтрами в модуле ДВС. <br>
Используется только для работы с фильтрами с одиночным<br>
выбором(если (SectionVar.wFlag and 1) = 0).<br>
#end
  Function GetRefTab_from_S_VarDvDS_OneSel(SectionVar : SectionVarDvDS) : comp;

#doc
Возвращает количество записей которые задействованы в фильтре ("BaseDoc", "KatOrg"...<br>
- параметр "prCountPick") и ссылку на одну из этих записей (параметр "prRefTab")<br>
#end
  Function GetInfo_from_SectionVarDvDS(SectionVar : SectionVarDvDS; var prCountPick : longint; var prRefTab : comp) : boolean;

#doc
Грузит из DSK поля структуры prS_VarDvDS : SectionVarDvDS<br>
возвпащает true если загрузка прошла успешно<br>
#end
Function GetS_VarDvDS_from_DSK(prStrDSK : string; var prS_VarDvDS : SectionVarDvDS) : boolean;

#doc
Сохраняет в DSK поля структуры prS_VarDvDS : SectionVarDvDS<br>
#end
Procedure SetS_VarDvDS_to_DSK(prStrDSK : string; prS_VarDvDS : SectionVarDvDS);

#Doc
Возвращает типовые наименование полей для фильтра<br>
#end
Procedure GetTitleField_WndFilter(var prTitleStartDate : string; var prTitleEndDate : string; var prTitleNameMC : string; var prTitleNameParty : string;
                                  var prTitleKatPodr : string; var prTitleNameMOL_Flt : string; var prTitleIndexSect : string);
#Doc
Вывод окна с типовым набором фильтров для документов модуля ДВС<br>
#end
Function Run_WndFilterForDS_OneSel(prTitle : string;
                                   prTitleStartDate      : string; var prStartDate      : date;
                                   prTitleEndDate        : string; var prEndDate        : date;
                                   prTitleNameMC         : string; var prRefMC          : comp;
                                   prTitleNameParty      : string; var prRefParty       : comp;
                                   prTitleKatPodr        : string; var prRefKatPodr     : comp;
                                   prTitleNameMOL_Flt    : string; var prRefMOL         : comp;

                                   prTitleIndexSect      : string; var prS_VarDvDS  : SectionVarDvDS;

                                   prTitleAvtoRunFilter_for_Interface : String; var prAvtoRunFilter  : word
                                  ) : longint;

#Doc
Вывод окна с типовым набором фильтров для документов модуля ДВС<br>
#end
Function Run_WndFilterForDS_MltSel(prTitle : string;
                                   prTitleStartDate   : string; var prStartDate    : date;
                                   prTitleEndDate     : string; var prEndDate      : date;
                                   prTitleNameMC      : string; var prList_MC      : word;
                                   prTitleNameParty   : string; var prList_Party   : word;
                                   prTitleKatPodr     : string; var prList_KatPodr : word;
                                   prTitleNameMOL_Flt : string; var prList_MOL     : word;
                                   prTitleIndexSect   : string; var prS_VarDvDS    : SectionVarDvDS) : longint;

#Doc
Вывод наименования разреза для документов модуля ДВС<br>
#end
  Function GetStrSect(SectionVar : SectionVarDvDS) : string;

!#Doc
!Поиск свобоного индекса для поля UniHier.wList <br>
!#end
!  Function FindFree_UniHier_wList : word;

#Doc
Удаление таблиц UniHier по условию ParwList  == UniHier.wTemp1<br>
#end
  Function DeleteUniHier(ParwList : word) : Boolean;

#Doc
Вставка таблиц UniHier в которые закачана информация по заданной накладной<br>
#end
  Function GetUniHierHeadNaklFromKatSopr(wList : word; KatSoprNrec: comp) : comp;


  Function SetSort_TmpGrN_All(prListTmpGrN : word; prFlagSort : word) : boolean;

  Procedure KillAll_TSpDocDVS;

#Doc
Вставка одной записи временной таблицы TSpDocDVS <br>
#end
  Function SetTSpDocDVS(prTSpDocDVS_wList : word; prTypeTab_co : word; prcTab : comp;
                        prNPP : word;
                        prTypeRes : word; prcRes : comp; prcParty : comp; pc_KitKau_nRec : comp;
                        prcKatPodr : comp; prcKatMOL : comp;
                        prcOtpED : comp; prKol_or_Procent : double; prPrice_or_Summa : double; prReserv : double) : comp;

#Doc
Вставка одной записи временной таблицы TSpDocDVS <br>
#end
  Function SetTSpDocDVS_Full(prTSpDocDVS_wList : word; prTypeTab_co : word; prcTab : comp;
                             prNPP : word;
                             prTypeRes : word; prcRes : comp; prcParty : comp; pc_KitKau_nRec : comp;
                             prcKatPodr : comp; prcKatMOL : comp;
                             prcOtpED : comp; prKol_or_Procent : double; prPrice_or_Summa : double; prReserv : double;
                             prcKatDSNor : comp) : comp;
#Doc
Конвертация таблиц TSpDocDVS -> TmpGrN <br>
#end
  Function SetTmpGrN_from_TSpDocDVS(prTSpDocDVS_wList : word;
                                    prListTmpGrN : word; prNumPage_TmpGrN : word; prFlagSort : word; prFlagVisible_TmpGrN : word) : boolean;

#Doc
Обновления таблиц TmpGrN -> TSpDocDVS <br>
#end
  Function SetTSpDocDVS_from_TmpGrN(prListTmpGrN : word; prNumPage_TmpGrN : word; prFlagVisible_TmpGrN : word) : boolean;

  Function Upd_Pick_For_TSpDocDVS_One(prPick : word; prcTSpDocDVS : comp) : boolean;
  Function Set_Pick_For_TSpDocDVS_All(prTSpDocDVS_wList : word; prPick : word) : boolean;
  Function Set_Pick_For_TSpDocDVS_Flt_MC(prTSpDocDVS_wList : word; prPick : word;
                                           prFlag_Reserv_Flt : word; prcMC_Flt : comp; prcParty_Flt : comp; pc_KitKau_Flt : comp; prcKatPodr_Flt : comp; prcKatMOL_Flt : comp) : boolean;
  Function GetFlag_OtpuskNotReservPickMC_from_TuneFormReserv_Mess(prTSpDocDVS_wList : word) : Boolean;
  Procedure SetTSpDocDVS_Kol_from_Reserv_PickAll(prTSpDocDVS_wList : word);

end;

ObjInterface oBoxFuncsDVS1(oBoxFuncsDVS);

#Doc
 Выбор объекта ЦУ для позиции спецификации документа<br>
#end
  Function Pick_CU_for_SpDoc(pw_NumAnl_CU_MCUsl : word; pw_CodTab_co : word; pc_SpDoc_nRec : comp; pw_Flag_Edit_or_View : word) : Boolean;

#Doc
 Привязка объекта ЦУ к таблицам<br>
#end
  Procedure InsSpecMTR_for_KitKau(pw_SpDoc_Type_co : word; pc_SpDoc_nRec : comp; pc_KitKau_nRec : comp);

#Doc
 Привязка объекта ЦУ к таблицам по выбранным в интерфейсе GTekOst свободным остаткам<br>
#end
 Procedure SetSpecMTR_for_SelectSvOst_GTekOst(pw_SpDoc_Type_co : word; pc_SpDoc_nRec : comp);

end;

VipInterface BoxFuncsDVS implements oBoxFuncsDVS1
#ifdef ATL51
  Licensed (FREE)
#endif
;

#endif
