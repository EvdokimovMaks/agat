/*
 ╔═══════════════════════════════════════════════════════════════════════════╗
 ║                     (c) 1994,98 корпорация ГАЛАКТИКА                      ║
 ║ Проект        : ГАЛАКТИКА                                                 ║
 ║ Система       : Оперативный контур                                        ║
 ║ Версия        : 5.70                                                      ║
 ║ Назначение    : Интерфейс уточнения замен на материальные ценности        ║
 ║ Ответственный : Левченко Андрей Александрович(Andrew)                     ║
 ║ Параметры     : есть                                                      ║
 ╚═══════════════════════════════════════════════════════════════════════════╝
*/

#ifdef ComponentVersion
#component "M_UP"
#end


#ifndef _SPZAMMC_OBJ_VIH_
#define _SPZAMMC_OBJ_VIH_

#Include AktZamOperType.inc

#include GetSvOst_SpDocObj.vih
#Include MessMemoObj.vih
#include ChckLim.vih

#doc
Назначение : Проведения замен по актам замен вида "Одиночные замены"<br>
  в формате "Одиночные замены".<br>
  Проведения замен по листу замен.<br>
#end

ObjInterface oSpZamMC;
  //------------------------------------------------------------------------------------------------------------------------------
  Function Get_varTTInfoResS_Mess(prcTTInfoResS : comp) : type$TTInfoResS;

  Function SetTTInfoResS(pr_prMC : word; prcMC : comp; prcParty : comp; prcSaldTune : comp; prcKitKau : comp) : type$TTInfoResS;

  Function SetTTInfoResS_for_TTNaZamenuS(prFlag_Use_CU : word; prTTNaZamenuS : type$TTNaZamenuS) : type$TTInfoResS;

  Function Set_TTList_Err_Zam_UP_GPAll(pl_CodErr_use_VarZam : Longint; pw_TypeDocZam : word; pc_Doc_nRec : comp; pc_NoteBene_nRec : comp; pc_VarZam_nRec : comp; p_TTInfoResS_Err : type$TTInfoResS) : Boolean;

#doc
Вставка новой записи таблицы TTNeedZamS.<br>
Параметры :<br>
-"prFlagWrk" - здесь заданы настройки в соответствии с которыми будет формироваться<br>
 перечень ресурсов подлежащих замене(таблица TTNeedZamS)<br>
-prRefDoc - ссылка на документ в котором проводятся замены<br>
-prDate - дата рассчета остатков по разрезу<br>
-prRefPodr, prRefMOL - разрез<br>
-prRefMC, prRefParty, prKolSpecif, prDiskret_ED - информация по заданной позиции спецификации документа<br>
Возвращает ссылку на "TTNeedZamS"<br>
#end
  Function AnalizNeedZam_One(prFlagWrk : longint; prFlag_KolNeedZam : word; prDate : date; prRefPodr : comp; prRefMOL : comp; prTTInfoResS : type$TTInfoResS;
                             prKolSpecif : double; prKolNorma : double; prDiskret_ED : word) : comp;

#doc
Возвращает ссылку на "TTNeedZamS"(ресурс из списка "К замене") для заданной<br>
таблицы TTNaZamenuS(ресурс из списка "На замену").<br>
#end
  Function GetTTNeedZamS_from_TTNaZamenuS(prTTNaZamenuS : type$TTNaZamenuS) : type$TTNeedZamS;
  //------------------------------------------------------------------------------------------------------------------------------
#doc
Удаление временной таблицы "TTPossibleZamS"<br>
#end
  Procedure KillAll_TTPossibleZam;
#doc
Вставка новой позиции "TTPossibleZamS"<br>
Возвращает ссылку на "TTPossibleZamS"<br>
#end
  Function SetTTPossibleZam(prFlagWrk : Longint; prRefSpecifDoc : comp; prRefOwnSpecifTab : comp; prNeedZam_cTTInfoResS : comp; prRefMCNZam : comp;
                            prRefListZam : comp; prRefNBSZam : comp; prRefNBSIzm : comp; prKoefZam : double; prRzltNBSZam : word) : comp;
  //------------------------------------------------------------------------------------------------------------------------------
#doc
Вставка новой позиции "TTDocZam_Wrk"<br>
Возвращает ссылку на "TTDocZam_Wrk"<br>
#end
  Function SetTTDocZam_Wrk(prNeedZam_cTTInfoResS : comp; prRefNoteBene : comp) : comp;
  //------------------------------------------------------------------------------------------------------------------------------
#doc
Для каждой позиции из списка "К замене"(TTNeedZamS) по заданному перечню <br>
возможных замен(TTPossibleZamS) определяет перечень планируемых замен - "TTNaZamenuS"<br>
Возвращает "true" если данная операция прошла успешно<br>
#end
  Function SetTTNaZamenu_by_TTPossibleZam(prFlagWrk : longint; prKlPrice : type$KlPrice; prTypeDoc_tp : word; prRefValDoc : comp;
                                          prFlagSort_SG0_F1_L2_P3 : word; prFlag_Use_CU : word;
                                          prData_Zam : date; prRefPodr : comp; prRefMol : comp; var prFlagBreak : boolean) : boolean;
#doc
Для таблиц "TTNeedZamS", "TTDocZam_Wrk" устанавливает флажки "есть\нет свободные остатки по разрезу"<br>
Возвращает "true" если данная операция прошла успешно<br>
#end
  Function SetFlagValidZam_for_TTTabAll : boolean;
//------------------------------------------------------------------------------------------------------------------------------
#doc
Автоподбор замен по партиям и по актам\листу замен для заданной МЦ<br>
из списка "К замене"<br>
#end
Function FillMCZamDown_IR_TopDown(prFlagWrk : longint; prFlag_Use_CU : word; prTypeDoc_tp : word; prRefBaseDoc : comp; prNeedZam_cTTInfoResS : comp; prRefNoteBene : comp; prRefVarZam : comp;
                                  prNewVal : double; prFlag_WR_RD : word; var prKol_NeedZam : double; var pl_CodErr_use_VarZam : longint; var p_TTInfoResS_Err : type$TTInfoResS) : boolean;

#doc
Автоподбор замен<br>
Возвращает "true" если данная операция прошла успешно<br>
Возвращаемые параметры :<br>
-флаг ошибки - prFlagErr = 0 если ошибок не обнаружено, prFlagErr = 1 если ошибки обнаружены<br>
-набор флагов сотояния - CodExecute;<br>
#end
  Function AvtoFillTreeZam(prFlagWrk : longint; prFlag_Use_CU : word; prTypeDoc_tp : word; prRefBaseDoc : comp; prRefNoteBene : comp; prRefVarZam : comp; prTypeED : word;
                           var prFlagErr : byte; var prCodExecute : longInt; var pl_CodErr_use_VarZam : Longint; var p_TTInfoResS_Err : type$TTInfoResS) : boolean;


#doc
Отмена всех пообранных замен<br>
Возвращает "true" если данная операция прошла успешно<br>
Возвращаемые параметры :<br>
-флаг ошибки - prFlagErr = 0 если ошибок не обнаружено, prFlagErr = 1 если ошибки обнаружены<br>
-набор флагов сотояния - CodExecute;<br>
#end
  Function AvtoFillTreeZam_Zero(prFlagWrk : longint; prFlag_Use_CU : word; prTypeDoc_tp : word; prRefBaseDoc : comp; prTypeED : word; var prFlagErr : byte; var prCodExecute : longInt) : boolean;
//------------------------------------------------------------------------------------------------------------------------------
#doc
Устанавливает флажки состояния для всех таблиц "TTNeedZamS"<br>
Возвращает "true" если данная операция прошла успешно<br>
Возвращаемые параметры :<br>
-флаг ошибки - prFlagErr = 0 если ошибок не обнаружено, prFlagErr = 1 если ошибки обнаружены<br>
-набор флагов сотояния - CodExecute;<br>
#end
  Function SetCodExecute_TTNeedZam_All(prFlagWrk : longint; prFlag_Use_CU : word; prTypeDoc_tp : word; prRefBaseDoc : comp; prTypeED : word;
                                       var prFlagErr : Byte; var prCodExecute : longInt) : boolean;
//------------------------------------------------------------------------------------------------------------------------------
#doc
Возвращает "true" если для планируемые операций по актам замен определены<br>
#end
  Function FindNotZeroKol_from_TTNaZamenu : boolean;

#doc
Проверяет на наличие ошибок данных по планируемым заменам. В случае обнаружения<br>
ошибок запускает окно с сообщениями об ошибках<br>
Тексты сообщений генерятся функцией по набору флагов состояния (prCodExecute)<br>
Возвращает :<br>
 cntMode_FuncErr_Zam_RetZam       - вернуться к подбору замен,
 cntMode_FuncErr_Zam_NeedCorrect  - обнаружены ошибки в данных по подбору замен,
 cntMode_FuncErr_Zam_RunZam       - провести подобранные замены,
 cntMode_FuncErr_Zam_OtmenaZam    - отменить подобранные замены.
#end
  Function GetFlagCorrectZam_User(prFlagWrk : longint; prFlag_Use_CU : word; prTypeDoc_tp : word; prRefBaseDoc : comp; prTypeED : word;
                                  prMode_FuncErr_Zam_Maska : word; prMode_FuncErr_Zam : word;
                                  prTek_TTNeedZamS : type$TTNeedZamS;
                                  var prFlagErr : byte; var prCodExecute : longint; var prMessMemoObj : oMessMemo18) : word;
//------------------------------------------------------------------------------------------------------------------------------
#doc
Позиционирование, установка флажков видимости полей, установка <br>
наименования полей в окне "WndMainPan"<br>
Возвращает "true" если данная операция прошла успешно<br>
#end
  Function ReReadRecord_WndMainPan(var prRefV_TTNeedZam : comp) : boolean;

#doc
Выбор акта замен и варианта замен для проведения замен<br>
#end
 Function Select_VarZam_S_Full(prFlagWrk : Longint; prUchet_OgrGP : word; prModeUse_RspGP : word;
                                     p_lFlag_Flt_NoteBene : LongInt; pc_AttrNam_for_NoteBene : comp; ps_Attribute_Value : String; p_sNameMarker_KaReason : String;
                                     var prRefNoteBene : comp; var prRefVarZam : comp;
                                     var pl_CodErr_use_VarZam : longint; var p_TTInfoResS_Err : type$TTInfoResS; var pw_TypeRes_GP_to : word; var pc_Res_GP : comp) : longint;
//------------------------------------------------------------------------------------------------------------------------------
#doc
Удаляет все времменые таблицы<br>
#end
  Procedure KillAllTmpTab;
#doc
Инициализация объекта<br>
#end
  Function InitInter : boolean;
#doc
Возвращает значения глобальных переменных объекта<br>
#end
  Function GetPar_Gen(var prNameDoc : string; var prRefPodr : comp; var prRefMOL : comp; var prFlagUsed_AktZam0_ListZam1 : word; var prGetSvOst_SpDocObj : oGetSvOst_SpDoc) : boolean;
#doc
Устанавливает значения глобальных переменных объекта<br>
#end
  Function SetPar_Gen(prTypeDoc_tp : word; prRefDoc : comp; prNameDoc : string; prRefPodr : comp; prRefMOL : comp; prFlagUsed_AktZam0_ListZam1 : word;
                      var prCheckLimObj : oCheckLimit; var prGetSvOst_SpDocObj : oGetSvOst_SpDoc) : boolean;
#doc
Возвращает значения глобальных переменных объекта<br>
#end
  Function GetPar_Wrk(var prFlagWrk : longint; var prData_Zam : date; var prUchet_OgrGP : word; var prModeUse_RspGP : word; var p_lFlag_Flt_NoteBene : Longint; var pc_AttrNam_for_NoteBene : comp; var ps_Attribute_Value : String; var p_sNameMarker_KaReason : String;
                      var prFlag_NotUsed_Party1_MC2 : word; var prFlagSort_SG0_F1_L2_P3 : word; var prFlag_Use_CU : word;
                      var prRefValDoc : comp; var prKolZnak_Kol : word; var prKolZnak_Price : word; var prKolZnakKol_Doc : word; var prKolZnakPrice_Doc : word; var prTypeEd : word; var prFlagDel_HistZam : word) : boolean;
#doc
Устанавливает значения глобальных переменных объекта<br>
#end
  Function SetPar_Wrk(prFlagWrk : longint; prData_Zam : date; prUchet_OgrGP : word; prModeUse_RspGP : word; p_lFlag_Flt_NoteBene : Longint; pc_AttrNam_for_NoteBene : comp; ps_Attribute_Value : String; p_sNameMarker_KaReason : String;
                      prFlag_NotUsed_Party1_MC2 : word; prFlagSort_SG0_F1_L2_P3 : word; prFlag_Use_CU : word;
                      prRefValDoc : comp; prKolZnak_Kol : word; prKolZnak_Price : word; prKolZnakKol_Doc : word; prKolZnakPrice_Doc : word; prTypeEd : word; prFlagDel_HistZam : word) : boolean;

#doc
Возвращает значения глобальных переменных объекта<br>
#end
  Function GetPar_KlPrice_Wrk(var prRefKlPrice : comp) : boolean;

#doc
Устанавливает значения глобальных переменных объекта<br>
#end
  Function SetPar_KlPrice_Wrk(prRefKlPrice : comp) : boolean;

#Doc
Возвращает флаг закрфтия окна WndMainPan<br>
#end
 Event Procedure GetFlagRzlt_WndMainPan(prRzlt_WndMainPan : longint);

#doc
Функция деинициализации объекта<br>
#end

!#Doc
!???????????????? zzzzzzzzzz
!#end
 Event Function GetFlagUseVariant_S_Wrk(prData_Zam : date; prUchet_OgrGP : word; prModeUse_RspGP : word; p_lFlag_Flt_NoteBene : Longint; pc_AttrNam_for_NoteBene : comp; ps_Attribute_Value : String; p_sNameMarker_KaReason : String; pc_NBSZam_nRec : comp;
                                        var pl_CodErr_use_VarZam : Longint; var p_TTInfoResS_Err : type$TTInfoResS; var pw_TypeRes_GP_to : word; var pc_Res_GP : comp) : boolean;


  Function DoneInter : boolean;
end;
#endif
