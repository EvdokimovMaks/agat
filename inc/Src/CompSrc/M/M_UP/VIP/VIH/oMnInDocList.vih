/*
 ╔═══════════════════════════════════════════════════════════════════════════╗
 ║                     (c) 1994,2002 корпорация ГАЛАКТИКА                    ║
 ║ Проект        : ГАЛАКТИКА                                                 ║
 ║ Система       : Учет материалов в производстве                            ║
 ║ Версия        : 7.1                                                       ║
 ║ Назначение    : Сигнатуры функций работы с таблицей DocList для MnCenaXYZ ║
 ║ Ответственный : Жилко Дмитрий Витальевич (HATTER)                         ║
 ║ Параметры     : есть                                                      ║
 ╚═══════════════════════════════════════════════════════════════════════════╝
*/

#ifdef ComponentVersion
#component "M_UP"
#endif

#ifndef __MNINDOCLIST_REC
#define __MNINDOCLIST_REC

type
  tParMnInDocList = record
    TypeDoc     : word;     // Тип документа из MnPlan.inc
    cDoc        : comp;     // Ссылка на документ таблица MnPlan
    Number      : longint;  // Уникальный номер документа в списке
    cOtpEd      : comp;     //
    dKol        : double;   //
    dataP       : date;     //
    TypeNorm    : word;     // Тип аналитики 1
    cNorm       : comp;     // Ссылка на аналитику 1
    cPodr       : tnRec;
    cMol        : tnRec;
    cNazna      : comp;
    cPartyOv    : comp;
    flag        : word;     // Флаг (пока не используется)
    wTypeInp    : word;     // toSpObjAcc
    cInp        : comp;     //
    TypeIzd     : word;
    cIzd        : comp;
    cBaseDoc    : comp;
    cKatSopr    : comp;
    cSpObjAcc   : comp;
    NumberUn    : longint;  // для связи с 5-ым алгоритмом
    wKodGr2     : word;
    cAnVal2     : comp;
    TypeSpNorm  : word;
    cSpNorm     : comp;
    wKodGr4     : word;
    cAnVal4     : comp;
  end;

#doc
Работа с таблицей документов и фильтров<br>
<b>Внимание!</b> Интерфейс предназначен только для внутреннего использования<br>
#end

ObjInterface oMnInDocList;

#doc
Очистить список документов<br>
#end
Function ClearList : Boolean;

#doc
Добавить документ из буфера<br>
#end
Function InsertDocumentRecord ( pMnInDocList : tParMnInDocList ) : LongInt;

#doc
Добавить документ<br>
#end
Function InsertDocument ( pTypeDoc : Word; cDoc : Comp; pwKodGr1 : Word; pcAnVal1 : Comp ) : LongInt;

#doc
Найти документ<br>
#end
Function FindDocument ( pTypeDoc : Word; cDoc : Comp; pwKodGr1 : Word; pcAnVal1 : Comp ) : LongInt;

#doc
Удалить документ<br>
#end
Function DeleteDocument ( pTypeDoc : Word; cDoc : Comp; pwKodGr1 : Word; pcAnVal1 : Comp ) : LongInt;

#doc
Удалитиь документ по уникальному номеру<br>
#end
Function DeleteDocumentByNumber ( pNumber : LongInt ) : Boolean;

#doc
Вернуть количество документов<br>
#end
Function GetListSize : LongInt;

#doc
Вернуть документ по уникальному ключу<br>
#end
Function GetDocumentByNumber (  pNumber  : LongInt;
                            Var pTypeDoc : Word;
                            Var cDoc     : Comp;
                            Var pwKodGr1 : Word;
                            Var pcAnVal1 : Comp
                             ) : Boolean;

#doc
Прочитать первый документ из списка в буфер<br>
#end
Function GetFirstDocumentRecord( var pMnInDocList : tParMnInDocList ) : Boolean;

#doc
Прочитать первый документ из списка<br>
#end
Function GetFirstDocument(
                           Var pTypeDoc : Word;
                           Var cDoc     : Comp;
                           Var pwKodGr1 : Word;
                           Var pcAnVal1 : Comp
                         ) : Boolean;

#doc
Прочитать следующий документ из списка в буфер<br>
#end
Function GetNextDocumentRecord( var pMnInDocList : tParMnInDocList ) : Boolean;

#doc
Прочитать следующий документ<br>
#end
Function GetNextDocument(
                          Var pTypeDoc : Word;
                          Var cDoc     : Comp;
                          Var pwKodGr1 : Word;
                          Var pcAnVal1 : Comp
                        ) : Boolean;
#doc
Найти документ по номеру<br>
#end
Function FindDocumentbyNum(
                            liNumberUn : LongInt;
                            var wTypeInp : word;
                            var cInp : comp
                          ) : LongInt;

#doc
Модифицировать номер документа<br>
#end
Function UpdateNumCurDocument ( liNumberUn : LongInt ) : LongInt;

#doc
Вернуть поля текущего документа<br>
#end
Function GetKolCurDocument(
                          var cOtpEd    : comp;
                          var Kol       : double;
                          var dataP     : date;
                          Var pwKodGr1  : Word;
                          Var pcAnVal1  : Comp;
                          var wTypeInp  : word;
                          var cInp      : comp;
                          var cPodr     : comp;
                          var cMol      : comp;
                          var cNazna    : comp;
                          var cPartyOv  : comp
                          ) : LongInt;

#doc
Добавить документ<br>
#end
Function InsertDocumentKol ( pTypeDoc  : Word;
                             cDoc      : Comp;
                             cOtpEd    : comp;
                             Kol       : double;
                             dataP     : date;
                             wTypeNorm : Word;     // Тип нормы
                             cNorm     : Comp;    // Ссылка на нормы
                             wTypeInp  : word;
                             cInp      : comp;
                             cPodr     : comp;
                             cMol      : comp;
                             cNazna    : comp;
                             cPartyOv  : comp
                           ) : LongInt;

#doc
Инициализировать интерфейс<br>
#end
Function InitInter : Boolean;

#doc
Закрыть интерфейс с освобождением ссылок<br>
#end
Function DoneInter : Boolean;

end;

VipInterface iMnInDocList implements oMnInDocList Licensed(Free);

#endif //__MNINDOCLIST_REC
