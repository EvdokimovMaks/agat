//------------------------------------------------------------------------------
//                                                      (c) корпорация ГАЛАКТИКА
// ГАЛАКТИКА 7.11 - Производственное планирование
// объектный интерфейс работы с JavaScript
//------------------------------------------------------------------------------


#ifndef __OIJSWORK__
#define __OIJSWORK__

#ifdef ComponentVersion
#component "M_Scripts"
#endif

ObjInterface oiJSWork; forward;

#define OBJINT_ALGORITM
#include objintpl.vin

#ifndef __oGalScriptStdF__
#include GalScriptStdF.obj
#end // __oGalScriptStdF__

//******************************************************************************

#doc
объектный интерфейс работы с JavaScript</brief>
#end

ObjInterface oiJSWork;
//******************************************************************************
#doc
загрузить реализацию стандартной функции по имени <I>StdFuncName</I></brief>:<br>
<I>CheckExist = true</I> - проверять наличие в массиве
возвращает: индекс в массиве
            <I>0</I> - если не смог загрузить
#end
function StdFuncAddName(StdFuncName: string; CheckExist: boolean): longint;
//******************************************************************************
#doc
поместить ссылку <I>StdFuncRef</I> на реализацию стандартной функции</brief>:<br>
<I>CheckExist = true</I> - проверять наличие в массиве
возвращает: индекс в массиве
            <I>0</I> - если передали пустую ссылку
#end
function StdFuncAddRef(StdFuncRef: oGalScriptStdF; CheckExist: boolean): longint;

//******************************************************************************
#doc
освободить все ссылки на реализации стандартных функций</brief><br>
обязательно вызвать перед выгрузкой
#end
procedure StdFuncFree;

//******************************************************************************
#doc
добавить код всех стандартных функций к исходному тексту скрипта</brief>
#end
procedure AddStdFuncText;

#doc
очистить код всех стандартных функций в исходном тексте скрипта</brief>
#end
procedure ClearStdFuncText;

//******************************************************************************
#doc
загрузить из файла исходный текст скрипта</brief>:<br>
возвращает <I>0</I> в случае успешного завершения
#end
function AddFromFile(sFileName: string): longint;

#doc
 добавить строку <I>SrcLine</I> к исходному тексту скрипта</brief>
#end
procedure AddSrcLine(SrcLine: string);

#doc
очистить все строки, добавленные через <I>AddSrcLine</I>, в исходном тексте скрипта</brief>
#end
procedure ClearSrcLine;
//******************************************************************************
#doc
установить контекст выполнения</brief><br>
 см. <I>JSGal.inc</I>: коды контекста выполения
#end
procedure SetMode(iMode: longint);

#doc
выполнить исходный текст скрипта</brief><br>
при возникновении ошибки выполнения JScript возвращает -2147352319
#end
function RunScript(ShowDebugWindow: boolean): longint;

//******************************************************************************
#doc
получить количество параметров в списке объекта VIP</brief>
#end
function GetVIPArgCount: longint;

#doc
получить значение параметра из списка объекта VIP</brief>:<br>
<I>ArgIndex</I> - индекс параметра в списке
           по индексу <I>0</I> должно быть имя реализации,
           по индексу <I>1</I> должно быть имя вызываемой функции
<I>CorrectPoint = true</I> - заменить в полученном значении запятые на точки
#end
function GetVIPArg(ArgIndex: longint; CorrectPoint: boolean): string;

#doc
уcтановить значение параметра в списке объекта VIP</brief>:<br>
<I>ArgIndex<I> - индекс параметра в списке
           индексы <I>0</I> и <I>1</I> лучше не использовать
<I>CorrectPoint = true</I> - заменить в передаваемом значении точки на запятые
#end
procedure SetVIPArg(ArgIndex: longint; ArgValue: string; CorrectPoint: boolean);

//******************************************************************************
#doc
получить значение переменной из JavaEngine</brief>:<br>
<I>VarName</I> - имя переменной
<I>CorrectPoint = true</I> - заменить в полученном значении запятые на точки
#end
function GetJSVar(VarName: string; CorrectPoint: boolean): string;

#doc
установить значение переменной из JavaEngine</brief>:<br>
<I>VarName</I> - имя переменной
<I>CorrectPoint = true</I> - заменить в передаваемом значении точки на запятые
#end
procedure SetJSVar(VarName: string; VarValue: string; CorrectPoint: boolean);

//******************************************************************************
#doc
показать исходный текст скрипта</brief>
#end
procedure ShowDebugWindow;

//******************************************************************************
#doc
добавить строку <I>DbgLine</I> в окно отладки</brief>
#end
procedure AddDbgLine(DbgLine: string);

#doc
очистить окно отладки</brief>
#end
procedure ClearDbgLine;
//******************************************************************************
//
//
function StdFuncAddFromList(ListnRec: comp; CheckExist: boolean): longint;

end; // oiJSWork

ObjInterface oiJSWork2(oiJSWork);
//******************************************************************************
#doc
  Получить ссылку на объект
#end

Function GetJSObject : tPtr;
//public function StdFuncAddName(StdFuncName: string; CheckExist: boolean): longint;

end;
ObjInterface oiJSWork3(oiJSWork2);
//******************************************************************************
#doc
  Получить ссылку на объект
#end

procedure RunVIPMethod;
Procedure AddSTDFunctionsFrom52(cREc : string);
Procedure ClearStdFunction;
//public function StdFuncAddName(StdFuncName: string; CheckExist: boolean): longint;

end;

#endif  // __OIJSWORK__
