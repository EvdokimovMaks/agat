//------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
//Галактика 7.12 - Контроллинг
//Методы ПО и ПБ
//------------------------------------------------------------------------------

#ifndef __RepHead_VIH
#define __RepHead_VIH

#component "M_Control"

ObjInterface oRHLinkEd;
 event Procedure pEditLink;
 event procedure pRescanMove;

 procedure SetParamTuneRep(wUser      : word;
                           Is_DopEdi  : boolean;
                           w_ForKol   : word;
                           w_ForPrice : word
                          );
 Function SetTable: boolean;
 Function SetRec(cRecHead: comp; cRecMove: comp; VidOp: word): boolean;
 Procedure pSetPosTable;
end;
VipInterface iRhLinkEd implements oRhLinkEd #Licensed_Free;

ObjInterface oRHCost;
function GetMove: comp;
procedure SetParamTuneRep(wUser      : word;
                          Is_Nzp     : boolean;
                          Is_DopEdi  : boolean;
                          Is_OperPO  : boolean;
                          w_ForKol   : word;
                          w_ForPrice : word;
                          Is_PlanBal : boolean);
Procedure SetOwner(cRecHead: comp; RecMove: comp);
Procedure SetRec(cRecHead: comp; RecMove: comp);
Procedure freeLinks;
end;
VipInterface iRHCost implements oRHCost #Licensed_Free;

ObjInterface oRHCostOU;
function GetMove: comp;
Procedure SetOwner(cRecHead: comp);
Procedure SetRec(cRecHead: comp; RecMove: comp);
!Procedure SetRec(RecMove: comp);
procedure SetParamTuneRep(wUser      : word;
                          Is_Nzp     : boolean;
                          Is_DopEdi  : boolean;
                          Is_OperPO  : boolean;
                          w_ForKol   : word;
                          w_ForPrice : word;
                          Is_PlanBal : boolean);
procedure Init_Move(RecM: comp);
!Function Get_nRecMove: comp;
Procedure pSetPosRepCost(cRH, cRM, cRObj: comp);
Procedure pSetPosRepCostProd(cRH, cRObj, cRProd: comp);
Procedure pReDrawCost;
procedure freeLinks;
end;
VipInterface iRHCostOU implements oRHCostOU #Licensed_Free;

ObjInterface oRepHMove;
//event Procedure pEventSetPos(cRecMove: comp);
Procedure pSetIntCost(oix: oRHCost);
Procedure pSetIntCostOu(oix: oRHCostOu);
procedure SetParamTuneRep(wUser      : word;
                          Is_Nzp     : boolean;
                          Is_DopEdi  : boolean;
                          w_ForKol   : word;
                          w_ForPrice : word;
                          Is_PlanBal : boolean
                          );
Procedure SetRec(RecH: comp);
Procedure Init_Move(RecM: comp);
Procedure pRescanMove;
Function Get_nRecMove: comp;
Procedure SetRec_forProd(TypeRes_Prod: word; RecH, cRes_Prod, cRes_Move: comp);
Function fcRepMove_cRec: comp;

procedure freeLinks;
Procedure pSetFormatLink; //установка формата по перемещению ресурсов
procedure pSetTitleColumnRes;
end;
VipInterface iRepHMove implements oRepHMove #Licensed_Free;

ObjInterface oRepHWork;
procedure SetParamTuneRep(wUser      : word;
                          Is_OperPO  : boolean;
                          w_ForKol   : word;
                          w_ForPrice : word;
                          Is_PlanBal : boolean);
Procedure SetRec(RecH: comp);
Function Get_nRecMove: comp;
Procedure Init_Move(RecM: comp);
end;
VipInterface iRepHWork implements oRepHWork #Licensed_Free;

ObjInterface oRepHWrk2;
procedure SetParamTuneRep(wUser      : word;
                          Is_OperPO  : boolean;
                          w_ForKol   : word;
                          w_ForPrice : word;
                          Is_PlanBal : boolean);
Procedure SetRec(RecH: comp);
Function Get_nRecMove: comp;
Procedure Init_Move(RecM: comp);
end;
VipInterface iRepHWrk2 implements oRepHWrk2 #Licensed_Free;

ObjInterface oRepHCst;
event procedure pRecCost(cRecCost_: comp);
event procedure pEdit;
event procedure pRescanRes;
Procedure SetRec(RecH_: comp; RecMove_: comp; RecObj_: comp);
procedure SetParamTuneRep(wUser      : word;
                          Is_Nzp     : boolean;
                          Is_DopEdi  : boolean;
                          Is_OperPO  : boolean;
                          w_ForKol   : word;
                          w_ForPrice : word;
                          Is_PlanBal : boolean);
Procedure PSetStatusLine(IsEditLine: boolean);
Function SetTable: boolean;
Procedure pSetPosTable;
end;
VipInterface iRepHCst implements oRepHCst #Licensed_Free;

ObjInterface oRepHProd;
event Procedure pRecProd(cRecProd: comp);
Procedure pSetIntCostOu(oix: oRHCostOu);
procedure SetParamTuneRep(wUser      : word;
                          Is_Nzp     : boolean;
                          Is_DopEdi  : boolean;
                          w_ForKol   : word;
                          w_ForPrice : word);

Procedure SetRec(RecH, cObj: comp);

//Procedure SetRepObj(cCurRepHead, cCurRepObj: comp);

Procedure SetRecforRes(RecH: comp; RecM: comp);

Procedure pUpdate_InRepMove(cRec_Move : comp;
                                   wVidPr    : word;   //вид продукта
                                   tmp_Ed1   : comp;
                                   tmp_Ed2   : comp;
                                   tmp_Fact1 : double;
                                   tmp_Fact2 : double;
                                   tmp_Norma1: double;
                                   tmp_Norma2: double;
                                   tmp_Price : double
                                  );
procedure DeleteProd( aID: comp);

function fSentProdInMove( cProd: comp ): comp;
end;
VipInterface iRepHProd implements oRepHProd #Licensed_Free;

ObjInterface oRHObjEd;
event Procedure pRecObj(cRecObj: comp);
event Procedure pFormRashod;
event Procedure pCalcSpisRes;
Function SetOwner(RecH:Comp): Boolean;
Function GetnRecRepObj: comp;
Procedure pSetStatusLineAndSetHelpConst(IsEditLine: boolean);
Procedure PSetStatusLine(IsEditLine: boolean);
procedure SetParamTuneRep(wUser      : word;
                          Is_Nzp     : boolean;
                          Is_DopEdi  : boolean;
                          w_ForKol   : word;
                          w_ForPrice : word);
end;
VipInterface iRHObjEd implements oRHObjEd #Licensed_Free;

ObjInterface oRepHSale;
procedure SetParamTuneRep(wUser      : word;
                          Is_DopEdi  : boolean;
                          w_ForKol   : word;
                          w_ForPrice : word);
Procedure SetOwner(RecH: comp);
Procedure Init_Sale(RecS: comp) ;
Function Get_NRecSale: comp;
end;
VipInterface iRepHSale implements oRepHSale #Licensed_Free;

#endif  // __RepHead_VIH
