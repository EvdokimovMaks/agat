#ifndef __TuneFuncs_vih__
#define __TuneFuncs_vih__

#component "C_TUNE"

ObjInterface iTuneFuncs;
  public:
// GalTunes.pas
#doc
  </brief>

  <p>
    Возвращает полный путь до указанной настройки.
  </p>

  <h3>Параметры</h3>
  <ul>
    <li><code>sKey</code> - ключ настройки.</li>
  </ul>
#end
function tf_GetTuneName(sKey: string): string;
#doc
  </brief>

  <p>
    Возвращает имя настройки по параметру.
  </p>

  <h3>Параметры</h3>
  <ul>
    <li><code>sKey</code> - ключ настройки.</li>
    <li><code>lObj</code> - тип возвращаемого имени.<br>
      Может принимать следующие значения:
      <ul>
        <li><code>0</code> - Полный путь настройки;</li>
        <li><code>1</code> - только имя;</li>
        <li><code>2</code> - только путь.</li>
      </ul>
    </li>
  </ul>
#end
function tf_GetTuneNameEx(sKey: string; lObj: word): string;
#doc
  </brief>

  <p>
    Выдает пользователю комбинированное сообщение из пользовательского и описания настройки.
  </p>

  <h3>Параметры</h3>
  <ul>
    <li><code>sMsg</code> - пользовательское сообщение;</li>
    <li><code>sKey</code> - ключ настройки.</li>
  </ul>
#end
function tf_ShowTune(sMsg: string; sKey: string): word;
#doc
  </brief>

  <p>
    Проверяет существует ли настройка по указанному ключу.
  </p>

  <h3>Параметры</h3>
  <ul>
    <li><code>sKey</code> - ключ искомой настройки.</li>
  </ul>
#end
function tf_ExistTune(sKey: string): boolean;
#doc
  </brief>

  <p>
    Возвращает тип настройки по ключу.
  </p>

  <h3>Параметры</h3>
  <ul>
    <li><code>sKey</code> - ключ искомой настройки.</li>
  </ul>
#end
function tf_GetTuneType(sKey: string): word;

#doc
  </brief>

  <p>
    Возвращает значение настройки с типом string; по ключу, для текущего пользователя и филиала.
  </p>

  <h3>Параметры</h3>
  <ul>
    <li><code>sKey</code> - ключ искомой настройки.</li>
  </ul>
#end
function tf_sGetTune(sKey: string): string;
#doc
  </brief>

  <p>
    Возвращает значение настройки с типом boolean, по ключу, для текущего пользователя и филиала.
  </p>

  <h3>Параметры</h3>
  <ul>
    <li><code>sKey</code> - ключ искомой настройки.</li>
  </ul>
#end
function tf_boGetTune(sKey: string): boolean;
#doc
  </brief>
  <p>
    Возвращает значение настройки с типом char, по ключу, для текущего пользователя и филиала.
  </p>

  <h3>Параметры</h3>
  <ul>
    <li><code>sKey</code> - ключ искомой настройки.</li>
  </ul>
#end
function tf_cGetTune(sKey: string): char;
#doc
  </brief>

  <p>
    Возвращает значение настройки с типом word, по ключу, для текущего пользователя и филиала.
  </p>

  <h3>Параметры</h3>
  <ul>
    <li><code>sKey</code> - ключ искомой настройки.</li>
  </ul>
#end
function tf_wGetTune(sKey: string): word;
#doc
  </brief>

  <p>
    Возвращает значение настройки с типом byte, по ключу, для текущего пользователя и филиала.
  </p>

  <h3>Параметры</h3>
  <ul>
    <li><code>sKey</code> - ключ искомой настройки.</li>
  </ul>
#end
function tf_bGetTune(sKey: string): byte;
#doc
  </brief>

  <p>
    Возвращает значение настройки с типом LongInt, по ключу, для текущего пользователя и филиала.
  </p>

  <h3>Параметры</h3>
  <ul>
    <li><code>sKey</code> - ключ искомой настройки.</li>
  </ul>
#end
function tf_lGetTune(sKey: string): LongInt;
#doc
  </brief>

  <p>
    Возвращает значение настройки с типом date, по ключу, для текущего пользователя и филиала.
  </p>

  <h3>Параметры</h3>
  <ul>
    <li><code>sKey</code> - ключ искомой настройки.</li>
  </ul>
#end
function tf_dGetTune(sKey: string): date;
#doc
  </brief>

  <p>
    Возвращает значение настройки с типом time, по ключу, для текущего пользователя и филиала.
  </p>

  <h3>Параметры</h3>
  <ul>
    <li><code>sKey</code> - ключ искомой настройки.</li>
  </ul>
#end
function tf_tGetTune(sKey: string): time;
#doc
  </brief>

  <p>
    Возвращает значение настройки с типом double, по ключу, для текущего пользователя и филиала.
  </p>

  <h3>Параметры</h3>
  <ul>
    <li><code>sKey</code> - ключ искомой настройки.</li>
  </ul>
#end
function tf_doGetTune(sKey: string): double;
#doc
  </brief>

  <p>
    Возвращает значение настройки с типом comp, по ключу, для текущего пользователя и филиала.
  </p>

  <h3>Параметры</h3>
  <ul>
    <li><code>sKey</code> - ключ искомой настройки.</li>
  </ul>
#end
function tf_coGetTune(sKey: string): comp;

#doc
  </brief>

  <p>
    Возвращает значение настройки с типом string; с указанием ключа, филиала и пользователя.
  </p>

  <h3>Параметры</h3>
  <ul>
    <li><code>sKey</code> - ключ искомой настройки;</li>
    <li><code>lObj</code> - филиал пользователя;</li>
    <li><code>cUser</code> - пользователь.</li>
  </ul>
#end
function tf_sGetTuneEx(sKey: string; lObj: LongInt; cUser: comp): string;
#doc
  </brief>

  <p>
    Возвращает значение настройки с типом boolean, с указанием ключа, филиала и пользователя.
  </p>

  <h3>Параметры</h3>
  <ul>
    <li><code>sKey</code> - ключ искомой настройки;</li>
    <li><code>lObj</code> - филиал пользователя;</li>
    <li><code>cUser</code> - пользователь.</li>
  </ul>
#end
function tf_boGetTuneEx(sKey: string; lObj: LongInt; cUser: comp): boolean;
#doc
  </brief>

  <p>
    Возвращает значение настройки с типом char, с указанием ключа, филиала и пользователя.
  </p>

  <h3>Параметры</h3>
  <ul>
    <li><code>sKey</code> - ключ искомой настройки;</li>
    <li><code>lObj</code> - филиал пользователя;</li>
    <li><code>cUser</code> - пользователь.</li>
  </ul>
#end
function tf_cGetTuneEx(sKey: string; lObj: LongInt; cUser: comp): char;
#doc
  </brief>

  <p>
    Возвращает значение настройки с типом word, с указанием ключа, филиала и пользователя.
  </p>

  <h3>Параметры</h3>
  <ul>
    <li><code>sKey</code> - ключ искомой настройки;</li>
    <li><code>lObj</code> - филиал пользователя;</li>
    <li><code>cUser</code> - пользователь.</li>
  </ul>
#end
function tf_wGetTuneEx(sKey: string; lObj: LongInt; cUser: comp): word;
#doc
  </brief>

  <p>
    Возвращает значение настройки с типом byte, с указанием ключа, филиала и пользователя.
  </p>

  <h3>Параметры</h3>
  <ul>
    <li><code>sKey</code> - ключ искомой настройки;</li>
    <li><code>lObj</code> - филиал пользователя;</li>
    <li><code>cUser</code> - пользователь.</li>
  </ul>
#end
function tf_bGetTuneEx(sKey: string; lObj: LongInt; cUser: comp): byte;
#doc
  </brief>

  <p>
    Возвращает значение настройки с типом LongInt; с указанием ключа, филиала и пользователя.
  </p>

  <h3>Параметры</h3>
  <ul>
    <li><code>sKey</code> - ключ искомой настройки;</li>
    <li><code>lObj</code> - филиал пользователя;</li>
    <li><code>cUser</code> - пользователь.</li>
  </ul>
#end
function tf_lGetTuneEx(sKey: string; lObj: LongInt; cUser: comp): LongInt;
#doc
  </brief>

  <p>
    Возвращает значение настройки с типом date, с указанием ключа, филиала и пользователя.
  </p>

  <h3>Параметры</h3>
  <ul>
    <li><code>sKey</code> - ключ искомой настройки;</li>
    <li><code>lObj</code> - филиал пользователя;</li>
    <li><code>cUser</code> - пользователь.</li>
  </ul>
#end
function tf_dGetTuneEx(sKey: string; lObj: LongInt; cUser: comp): date;
#doc
  </brief>

  <p>
    Возвращает значение настройки с типом time, с указанием ключа, филиала и пользователя.
  </p>

  <h3>Параметры</h3>
  <ul>
    <li><code>sKey</code> - ключ искомой настройки;</li>
    <li><code>lObj</code> - филиал пользователя;</li>
    <li><code>cUser</code> - пользователь.</li>
  </ul>
#end
function tf_tGetTuneEx(sKey: string; lObj: LongInt; cUser: comp): time;
#doc
  </brief>

  <p>
    Возвращает значение настройки с типом double, с указанием ключа, филиала и пользователя.
  </p>

  <h3>Параметры</h3>
  <ul>
    <li><code>sKey</code> - ключ искомой настройки;</li>
    <li><code>lObj</code> - филиал пользователя;</li>
    <li><code>cUser</code> - пользователь.</li>
  </ul>
#end
function tf_doGetTuneEx(sKey: string; lObj: LongInt; cUser: comp): double;
#doc
  </brief>

  <p>
    Возвращает значение настройки с типом comp, с указанием ключа, филиала и пользователя.
  </p>

  <h3>Параметры</h3>
  <ul>
    <li><code>sKey</code> - ключ искомой настройки;</li>
    <li><code>lObj</code> - филиал пользователя;</li>
    <li><code>cUser</code> - пользователь.</li>
  </ul>
#end
function tf_coGetTuneEx(sKey: string; lObj: LongInt; cUser: comp): comp;

#doc
  </brief>

  <p>
    Установка значения с типом string; в настройку по ключу, для текущего пользователя и филиала.
  </p>

  <h3>Параметры</h3>
  <ul>
    <li><code>sKey</code> - ключ искомой настройки;</li>
    <li><code>sValue</code> - записываемое значение.</li>
  </ul>

  <h3>Возвращаемое значение</h3>
  <p>
    Код ошибки.
  </p>
#end
function tf_sSetTune(sKey: string; sValue: string): word;
#doc
  </brief>

  <p>
    Установка значения с типом boolean, в настройку по ключу, для текущего пользователя и филиала.
  </p>

  <h3>Параметры</h3>
  <ul>
    <li><code>sKey</code> - ключ искомой настройки;</li>
    <li><code>boValue</code> - записываемое значение.</li>
  </ul>

  <h3>Возвращаемое значение</h3>
  <p>
    Код ошибки.
  </p>
#end
function tf_boSetTune(sKey: string; boValue: boolean): word;
#doc
  </brief>

  <p>
    Установка значения с типом char, в настройку по ключу, для текущего пользователя и филиала.
  </p>

  <h3>Параметры</h3>
  <ul>
    <li><code>sKey</code> - ключ искомой настройки;</li>
    <li><code>cValue</code> - записываемое значение.</li>
  </ul>

  <h3>Возвращаемое значение</h3>
  <p>
    Код ошибки.
  </p>
#end
function tf_cSetTune(sKey: string; cValue: char): word;
#doc
  </brief>

  <p>
    Установка значения с типом word, в настройку по ключу, для текущего пользователя и филиала.
  </p>

  <h3>Параметры</h3>
  <ul>
    <li><code>sKey</code> - ключ искомой настройки;</li>
    <li><code>wValue</code> - записываемое значение.</li>
  </ul>

  <h3>Возвращаемое значение</h3>
  <p>
    Код ошибки.
  </p>
#end
function tf_wSetTune(sKey: string; wValue: word): word;
#doc
  </brief>

  <p>
    Установка значения с типом word, а так же string; в настройку по ключу, для текущего пользователя и филиала.
  </p>

  <h3>Параметры</h3>
  <ul>
    <li><code>sKey</code> - ключ искомой настройки;</li>
    <li><code>wValue</code> - записываемое значение;</li>
    <li><code>sValue</code> - описание значения.</li>
  </ul>

  <h3>Возвращаемое значение</h3>
  <p>
    Код ошибки.
  </p>
#end
function tf_wSetTune2(sKey: string; wValue: word; sValue: string): word;
#doc
  </brief>

  <p>
    Установка значения с типом LongInt; в настройку по ключу, для текущего пользователя и филиала.
  </p>

  <h3>Параметры</h3>
  <ul>
    <li><code>sKey</code> - ключ искомой настройки;</li>
    <li><code>lValue</code> - записываемое значение.</li>
  </ul>

  <h3>Возвращаемое значение</h3>
  <p>
    Код ошибки.
  </p>
#end
function tf_lSetTune(sKey: string; lValue: LongInt): word;
#doc
  </brief>

  <p>
    Установка значения с типом LongInt; а так же string; в настройку по ключу, для текущего пользователя и филиала.
  </p>

  <h3>Параметры</h3>
  <ul>
    <li><code>sKey</code> - ключ искомой настройки;</li>
    <li><code>lValue</code> - записываемое значение;</li>
    <li><code>sValue</code> - описание значения.</li>
  </ul>

  <h3>Возвращаемое значение</h3>
  <p>
    Код ошибки.
  </p>
#end
function tf_lSetTune2(sKey: string; lValue: LongInt; sValue: string): word;
#doc
  </brief>

  <p>
    Установка значения с типом date, в настройку по ключу, для текущего пользователя и филиала.
  </p>

  <h3>Параметры</h3>
  <ul>
    <li><code>sKey</code> - ключ искомой настройки;</li>
    <li><code>dValue</code> - записываемое значение.</li>
  </ul>

  <h3>Возвращаемое значение</h3>
  <p>
    Код ошибки.
  </p>
#end
function tf_dSetTune(sKey: string; dValue: date): word;
#doc
  </brief>

  <p>
    Установка значения с типом time, в настройку по ключу, для текущего пользователя и филиала.
  </p>

  <h3>Параметры</h3>
  <ul>
    <li><code>sKey</code> - ключ искомой настройки;</li>
    <li><code>tValue</code> - записываемое значение.</li>
  </ul>

  <h3>Возвращаемое значение</h3>
  <p>
    Код ошибки.
  </p>
#end
function tf_tSetTune(sKey: string; tValue: time): word;
#doc
  </brief>

  <p>
    Установка значения с типом double, в настройку по ключу, для текущего пользователя и филиала.
  </p>

  <h3>Параметры</h3>
  <ul>
    <li><code>sKey</code> - ключ искомой настройки;</li>
    <li><code>doValue</code> - записываемое значение.</li>
  </ul>

  <h3>Возвращаемое значение</h3>
  <p>
    Код ошибки.
  </p>
#end
function tf_doSetTune(sKey: string; doValue: double): word;
#doc
  </brief>

  <p>
    Установка значения с типом comp, в настройку по ключу, для текущего пользователя и филиала.
  </p>

  <h3>Параметры</h3>
  <ul>
    <li><code>sKey</code> - ключ искомой настройки;</li>
    <li><code>coValue</code> - записываемое значение;</li>
    <li><code>sValue</code> - описание значения.</li>
  </ul>

  <h3>Возвращаемое значение</h3>
  <p>
    Код ошибки.
  </p>
#end
function tf_coSetTune(sKey: string; coValue: comp; sValue: string): word;

#doc
  </brief>

  <p>
    Установка значения с типом string; в настройку по ключу, c указанием пользователя и филиала.
  </p>

  <h3>Параметры</h3>
  <ul>
    <li><code>sKey</code> - ключ искомой настройки;</li>
    <li><code>lObj</code> - филиал;</li>
    <li><code>cUser</code> - пользователь;</li>
    <li><code>sValue</code> - записываемое значение.</li>
  </ul>

  <h3>Возвращаемое значение</h3>
  <p>
    Код ошибки.
  </p>
#end
function tf_sSetTuneEx(sKey: string; lObj: LongInt; cUser: comp; sValue: string): word;
#doc
  </brief>

  <p>
    Установка значения с типом boolean, в настройку по ключу, c указанием пользователя и филиала.
  </p>

  <h3>Параметры</h3>
  <ul>
    <li><code>sKey</code> - ключ искомой настройки;</li>
    <li><code>lObj</code> - филиал;</li>
    <li><code>cUser</code> - пользователь;</li>
    <li><code>boValue</code> - записываемое значение.</li>
  </ul>

  <h3>Возвращаемое значение</h3>
  <p>
    Код ошибки.
  </p>
#end
function tf_boSetTuneEx(sKey: string; lObj: LongInt; cUser: comp; boValue: boolean): word;
#doc
  </brief>

  <p>
    Установка значения с типом char, в настройку по ключу, c указанием пользователя и филиала.
  </p>

  <h3>Параметры</h3>
  <ul>
    <li><code>sKey</code> - ключ искомой настройки;</li>
    <li><code>lObj</code> - филиал;</li>
    <li><code>cUser</code> - пользователь;</li>
    <li><code>cValue</code> - записываемое значение.</li>
  </ul>

  <h3>Возвращаемое значение</h3>
  <p>
    Код ошибки.
  </p>
#end
function tf_cSetTuneEx(sKey: string; lObj: LongInt; cUser: comp; cValue: char): word;
#doc
  </brief>

  <p>
    Установка значения с типом word, в настройку по ключу, c указанием пользователя и филиала.
  </p>

  <h3>Параметры</h3>
  <ul>
    <li><code>sKey</code> - ключ искомой настройки;</li>
    <li><code>lObj</code> - филиал;</li>
    <li><code>cUser</code> - пользователь;</li>
    <li><code>wValue</code> - записываемое значение.</li>
  </ul>

  <h3>Возвращаемое значение</h3>
  <p>
    Код ошибки.
  </p>
#end
function tf_wSetTuneEx(sKey: string; lObj: LongInt; cUser: comp; wValue: word): word;
#doc
  </brief>

  <p>
    Установка значения с типом word и string; в настройку по ключу, c указанием пользователя и филиала.
  </p>

  <h3>Параметры</h3>
  <ul>
    <li><code>sKey</code> - ключ искомой настройки;</li>
    <li><code>lObj</code> - филиал;</li>
    <li><code>cUser</code> - пользователь;</li>
    <li><code>wValue</code> - записываемое значение;</li>
    <li><code>sValue</code> - описание значения.</li>
  </ul>

  <h3>Возвращаемое значение</h3>
  <p>
    Код ошибки.
  </p>
#end
function tf_wSetTuneEx2(sKey: string; lObj: LongInt; cUser: comp; wValue: word; sValue: string): word;
#doc
  </brief>

  <p>
    Установка значения с типом LongInt; в настройку по ключу, c указанием пользователя и филиала.
  </p>

  <h3>Параметры</h3>
  <ul>
    <li><code>sKey</code> - ключ искомой настройки;</li>
    <li><code>lObj</code> - филиал;</li>
    <li><code>cUser</code> - пользователь;</li>
    <li><code>lValue</code> - записываемое значение.</li>
  </ul>

  <h3>Возвращаемое значение</h3>
  <p>
    Код ошибки.
  </p>
#end
function tf_lSetTuneEx(sKey: string; lObj: LongInt; cUser: comp; lValue: LongInt): word;
#doc
  </brief>

  <p>
    Установка значения с типом Longint и string; в настройку по ключу, c указанием пользователя и филиала.
  </p>

  <h3>Параметры</h3>
  <ul>
    <li><code>sKey</code> - ключ искомой настройки;</li>
    <li><code>lObj</code> - филиал;</li>
    <li><code>cUser</code> - пользователь;</li>
    <li><code>lValue</code> - записываемое значение;</li>
    <li><code>sValue</code> - описание значения.</li>
  </ul>

  <h3>Возвращаемое значение</h3>
  <p>
    Код ошибки.
  </p>
#end
function tf_lSetTuneEx2(sKey: string; lObj: LongInt; cUser: comp; lValue: LongInt; sValue: string) : word;
#doc
  </brief>

  <p>
    Установка значения с типом date, в настройку по ключу, c указанием пользователя и филиала.
  </p>

  <h3>Параметры</h3>
  <ul>
    <li><code>sKey</code> - ключ искомой настройки;</li>
    <li><code>lObj</code> - филиал;</li>
    <li><code>cUser</code> - пользователь;</li>
    <li><code>dValue</code> - записываемое значение.</li>
  </ul>

  <h3>Возвращаемое значение</h3>
  <p>
    Код ошибки.
  </p>
#end
function tf_dSetTuneEx(sKey: string; lObj: LongInt; cUser: comp; dValue: date): word;
#doc
  </brief>

  <p>
    Установка значения с типом time, в настройку по ключу, c указанием пользователя и филиала.
  </p>

  <h3>Параметры</h3>
  <ul>
    <li><code>sKey</code> - ключ искомой настройки;</li>
    <li><code>lObj</code> - филиал;</li>
    <li><code>cUser</code> - пользователь;</li>
    <li><code>tValue</code> - записываемое значение.</li>
  </ul>

  <h3>Возвращаемое значение</h3>
  <p>
    Код ошибки.
  </p>
#end
function tf_tSetTuneEx(sKey: string; lObj: LongInt; cUser: comp; tValue: time): word;
#doc
  </brief>

  <p>
    Установка значения с типом double, в настройку по ключу, c указанием пользователя и филиала.
  </p>

  <h3>Параметры</h3>
  <ul>
    <li><code>sKey</code> - ключ искомой настройки;</li>
    <li><code>lObj</code> - филиал;</li>
    <li><code>cUser</code> - пользователь;</li>
    <li><code>doValue</code> - записываемое значение.</li>
  </ul>

  <h3>Возвращаемое значение</h3>
  <p>
    Код ошибки.
  </p>
#end
function tf_doSetTuneEx(sKey: string; lObj: LongInt; cUser: comp; doValue: double): word;
#doc
  </brief>

  <p>
    Установка значения с типом comp, в настройку по ключу, c указанием пользователя и филиала.
  </p>

  <h3>Параметры</h3>
  <ul>
    <li><code>sKey</code> - ключ искомой настройки;</li>
    <li><code>lObj</code> - филиал;</li>
    <li><code>cUser</code> - пользователь;</li>
    <li><code>coValue</code> - записываемое значение;</li>
    <li><code>sValue</code> - описание значения.</li>
  </ul>

  <h3>Возвращаемое значение</h3>
  <p>
    Код ошибки.
  </p>
#end
function tf_coSetTuneEx(sKey: string; lObj: LongInt; cUser: comp; coValue: comp; sValue: string): word;

#doc
  </brief>

  <p>
    Установка значения в настройку по ключу, для текущего пользователя и филиала.
  </p>

  <h3>Параметры</h3>
  <ul>
    <li><code>sKey</code> - ключ искомой настройки;</li>
    <li><code>Value</code> - записываемое значение.</li>
  </ul>

  <h3>Возвращаемое значение</h3>
  <p>
    Код ошибки.
  </p>
#end
function tf_SetTune(sKey: string; var Value: variant): word;
#doc
  </brief>

  <p>
    Установка значения в настройку по ключу, с указанием пользователя и филиала.
  </p>

  <h3>Параметры</h3>
  <ul>
    <li><code>sKey</code> - ключ искомой настройки;</li>
    <li><code>lObj</code> - филиал;</li>
    <li><code>cUser</code> - пользователь;</li>
    <li><code>Value</code> - записываемое значение.</li>
  </ul>

  <h3>Возвращаемое значение</h3>
  <p>
    Код ошибки.
  </p>
#end
function tf_SetTuneEx(sKey: string; lObj: LongInt; cUser: comp; var Value: variant): word;

#doc
  </brief>

  <p>
    Возвращает полную маску прав настройки для указанного пользователя и филиала.
  </p>

  <h3>Параметры</h3>
  <ul>
    <li><code>sKey</code> - ключ искомой настройки;</li>
    <li><code>lObj</code> - филиал;</li>
    <li><code>cUser</code> - пользователь.</li>
  </ul>
#end
function tf_GetTuneFullRgh(sKey: string; lObj: LongInt; cUser: comp): word;
#doc
  </brief>

  <p>
    Возвращает временные права. Не рекомендуется к использованию.
  </p>
#end
function tf_GetTuneTmpRgh(cNRec: comp; lObj: LongInt; cUser: comp): word;
#doc
  </brief>

  <p>
    Не рекомендуется к использованию. Системная функция по работе с настройками
  </p>

  <h3>Параметры</h3>
  <ul>
    <li><code>sKey</code> - ключ искомой настройки;</li>
    <li><code>lObj</code> - филиал;</li>
    <li><code>cUser</code> - пользователь.</li>
  </ul>
#end
function tf_PostTuneEx(sKey: string; lObj: LongInt; cUser: comp): word;
#doc
  </brief>

  <p>
    Возвращает статус последней операции над настройками.
  </p>
#end
function tf_LastTuneStatus: word;
function tf_StartProtokol(sIntrName: string; sIntrComment: string): boolean;
function tf_StopProtokol: boolean;

#doc
  </brief>

  <p>
    Включает сбор статистики по настройкам.
  </p>
#end
Procedure tf_StartLogTunes;
#doc
  </brief>

  <p>
    Выключает сбор статистики по настройкам.
  </p>
#end
Procedure tf_StopLogTunes;

#doc
  </brief>

  <p>
    Возвращает офис определенного пользователя.
  </p>

  <h3>Параметры</h3>
  <ul>
    <li><code>cUser</code> - пользователь.</li>
  </ul>
#end
function tf_GetUserOffice(cUser: comp): word;    // оффис пользователя
#doc
  </brief>

  <p>
    Возвращает номер текущего офиса.
  </p>
#end
function tf_GetCurrOffice: word; // текущий офис
#doc
  </brief>

  <p>
    Возвращает номер текущего филиала.
  </p>
#end
function tf_GetCurrFilial: word; // текущий филиал
#doc
  </brief>

  <p>
    Установить филиал для настроек.
  </p>

  <h3>Параметры</h3>
  <ul>
    <li><code>wFilial</code> - номер филиала.</li>
  </ul>
#end
function tf_SetTuneFilial(wFilial: word): word; // установить филиал для настроек
#doc
  </brief>

  <p>
    Возвращает номер текущего офиса и филиала.
  </p>
#end
function tf_GetOfficeFilial: longInt; // текущий офис + филиал
#doc
  </brief>

  <p>
    Возвращает офис и филиал определенного пользователя.
  </p>

  <h3>Параметры</h3>
  <ul>
    <li><code>cUser</code> - пользователь.</li>
  </ul>
#end
function tf_UserOfficeFilial(cUser: comp): longInt; // офис + текущий филиал пользователя
#doc
  </brief>

  <p>
    Возвращает офис и филиал определенного пользователя.
  </p>

  <h3>Параметры</h3>
  <ul>
    <li><code>lUserOffice</code> - значение поля x$Users.xu$UserOffice.</li>
  </ul>
#end
function tf_UserOfficeFilialEx(lUserOffice : longInt): longInt; // офис + текущий филиал пользователя
#doc
  </brief>

  <p>
    Возвращает номер филиала по его ID.
  </p>

  <h3>Параметры</h3>
  <ul>
    <li><code>cFilial</code> - ID филиала.</li>
  </ul>
#end
function tf_FilialNo(cFilial: comp): word; // Получить номер филиала по его ID
#doc
  </brief>

  <p>
    Сворачивает указанный офис и филиал в одно поле.
  </p>

  <h3>Параметры</h3>
  <ul>
    <li><code>wOffice</code> - офис;</li>
    <li><code>wFilial</code> - филиал.</li>
  </ul>
#end
function tf_OfficeFilialTune(wOffice: word; wFilial: word): longInt;    // офис и филиал сворачиваются в одно поле

#doc
  </brief>

  <p>
    Определяет установлен ли текущий филиал в многофилиальной БД.
  </p>
#end
function tf_isModifyDataFilial: boolean; // в многофилиальной БД установлен ли текущий филиал
#doc
  </brief>

  <p>
    Определяет включена ли филиальность.
  </p>
#end
function tf_ExistFilial: boolean; // Включена ли филиальность
#doc
  </brief>

  <p>
    Определяет включен ли Protect.
  </p>
#end
function tf_isProtection: boolean; // Включен ли протект

procedure tf_TuneDefCacheTurnOn;
procedure tf_TuneDefCacheTurnOff;
function tf_GetPostUpdateTuneEnabled(sKey: string): boolean;
procedure tf_SetPostUpdateTuneEnabled(sKey: string; Flag : boolean);
end;

VipInterface TuneFuncsMain implements iTuneFuncs licensed (Free);
public:
  constructor Init;
end;
/*
VipInterface TuneFuncs licensed (Free);
  Static:
    function tf_coGetTune(sKey: string): comp;
    function tf_coGetTuneEx(sKey: string; lObj: LongInt; cUser: comp): comp;

    function tf_UserOfficeFilial(cUser : comp) : longInt;
    function tf_GetCurrOffice : word;
end;
*/
#end
