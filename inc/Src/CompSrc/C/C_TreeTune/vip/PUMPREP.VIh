#ifndef __PUMPREP_VIH__
#define __PUMPREP_VIH__

#component "C_TreeTune"

#doc
предоставляет доступ к функциям накачки сорт-к и групп-к
#end
ObjInterface objPumpRep;
  #doc
  добавляет одну строку в RepGroup
  #end
  function PumpGroup ( RepCode:Word; GroupName:String; TableCode:Word;
                       GroupCode:Word; TableHierar:Word ) : Boolean;
  #doc
  добавляет одну строку в RepGroup
  #end
  function PumpGroupEx ( RepCode:Word; GroupName:String; TableCode:Word;
                         GroupCode:Word; TableHierar:Word;
                         RepeatedShowing:Word; TypeOfExAnalytics:Word;
                         UserInterface:String ) : Boolean;
  #doc
  добавляет одну строку в RepGrSrt
  #end
  function PumpGroupSort ( SortNomer:Word; SortName:String ) : Boolean;
  #doc
  добавляет одну строку в RepGrSrt
  #end
  function PumpLoneSort ( s:Word; s2:Word; SortNomer:Word; SortName:String ) : Boolean;
  #doc
  удаляет неактуальные записи из RepGroup, RepGrSrt и RepGrOne
  #end
  function RemoveTrash : Boolean;
end;

#doc
objPumpRepPlugin - вызвается интерфейсом PumpRepKat при обновлении накачки
группировок и сортировок.<br>
Сторонние разработчики могут написать свои реализации этого объектного
интерфейса, чтобы обновить группировки и сортировки в некоторых отчетах.<br>
Также можно использовать в патчах.<br>
Все реализации должны начинатся с префикса "PumpRepPatch_"<br>
#end
ObjInterface objPumpRepPlugin;
  #doc
  обновляет группировки и сортировки для данного отчета
  #end
  Procedure UpdateGroupSort(piPumpRep: objPumpRep; NReport: word);

end;

VipInterface PumpRepKatalogs
  implements objPumpRep
  #ifdef ATL51
  Licensed (FREE)
  Parameters (pCode : word)
  #end
;

#end //__PUMPREP_VIH__


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!Пример реализации objPumpRepPlugin!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
/*   Интерфейс PumpRepPatch_(5значный номер отчета).vip
     предназначен: замена pump.vpp для патчей и фиксов
     подключается: в vipuser.prj нужного фикса (или патча)
     (реализует  : objPumpRepPlugin
      запускается: из PumpRepKat (PumpRep.vip))"

  Для обновления накачек сорт-к или групп-к для конкретного отчета необходимо:
  В процедуре UpdateGroupSort описать соответствующую накачку, поставив перед
  вызовом каждой функции piPumpRep.
  Файл должен содержать ВСЕ настройки для данного отчета (а не только
  измененные или добавленные).
  Для каждого отчета создается свой PumpRepPatch_

  Интерфейс ОБЯЗАТЕЛЬНО должен называться PumpRepPatch_(5значный номер отчета)

  Здесь приведен пример для накачки сортировок и группировок
  для авансовых реестров

!------------------------------------------------------------------------------
!-----------------Содержимое файла PumpRepPatch_08100.vip----------------------
!------------------------------------------------------------------------------

#include  PumpRep.vih
VipInterface PumpRepPatch_08100 implements objPumpRepPlugin;

Interface PumpRepPatch_08100;
Create view;

Public Procedure UpdateGroupSort(piPumpRep: objPumpRep; NReport: word);
{
  piPumpRep.PumpGroup( NReport, 'Группа ДО/договоров', coGroupSch, 1, 0 );
   piPumpRep.PumpGroupSort( 0, 'Наименование' );
  piPumpRep.PumpGroup( NReport, 'Назначение', coKatNazna, 2, 1 );
   piPumpRep.PumpGroupSort( 0, 'Наименование' );
   piPumpRep.PumpGroupSort( 1, 'Код' );
  piPumpRep.PumpGroup( NReport, 'МЦ/Услуги', coKatMC, 3, 0 );
   piPumpRep.PumpGroupSort( 0, 'Наименование' );
  piPumpRep.PumpGroup( NReport, 'Группа МЦ/услуг', coGroupMC, 4, 0 );
   piPumpRep.PumpGroupSort( 0, 'Наименование' );
}
end. // интерфейс
!---------------------конец файла PumpRepPatch_08100.vip-----------------------
*/
