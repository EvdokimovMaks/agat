
#ifndef _Mail_Funcs_VIH_INCLUDED_
#define _Mail_Funcs_VIH_INCLUDED_

#include IModify.vih

#component "C_Common"

#include Mail_Const.inc
#include Mail_Template.vih

#ifndef __Mail_Funcs_P__
#define __Mail_Funcs_P__
type
  myArrayValues = array [0..0] of string;

  myRecValues = array [0..0] of myArrayValues;

  TSendEmailRec = record
    m_sCodeMail : string;
    m_cTemplate : comp;
    m_sConditionValue : string;
    m_sEmail    : string;
    m_sCoEmail  : string;
    m_arrEmails : array [0..0] of string;
    m_sSubject  : string;
    m_sBody     : string;
    m_arrAttachsFileName : array [0..0] of string;// имена файлов
    m_arrAttachsHandle : array [0..0] of longint; // handle файлов
    m_arrParams : array [0..0] of string; // параметры для замены
    m_arrValues : array [0..0] of string; // значения для замены
    m_lBody     : TPtr;
    m_sFileBody : string;
  end;
#end //__Mail_Funcs_P__

const
  lBodyFormat0 = 0;
  lBodyFormat1 = 1;
  lBodyFormat2 = 2;
  lBodyFormat3 = 3;
end;

#doc
  Функции для работы с рассылками
#end
ObjInterface iMail_Funcs;
    #doc
      Отправка почты - по рассылке
    #end
    function SendEmailOnlyTemplate(cTemplate : comp; bShowMessage : boolean = true) : boolean;
    function SendEmailOnlyTemplateEx(sCodeMail : string; sCodeTemplate : string; bSetDefault : boolean = true; bShowMessage : boolean = true) : boolean;
    #doc
      Отправка почты - по коду рассылки
    #end
    function SendEmailOnlyCode(CodeMail : string; bShowMessage : boolean = true) : boolean;
    #doc
      Отправка почты - по record: поддержка кода рассылки, параметров и др.
    #end
    function SendEmail(oRec : TSendEmailRec; bShowMessage : boolean = true) : boolean;
    #doc
      Отправка почты - простая
    #end
    function SendEmailSimply(sEmailTo : string; sSubject : string; sBody : string; sFileAttach : string; bShowMessage : boolean = true) : boolean;
    #doc
      Отправка почты - по очереди
    #end
    function SendEmailByQUEUE(cRecQUEUE : comp) : boolean;
    #doc
      Выбор шаблона
    #end
    function ChoiceTemplate(sCode : string; cTemplate : comp) : comp;
    #doc
      Выбор рассылки
    #end
    function ChoiceEmail(var sCode : string; var cEmail : comp) : boolean;
end;

#doc
Функции создания рассылок.
#end
ObjInterface ObjCreateMail;
//------------------------------------------------------------------------------
  #doc
   Функция создания рассылок. <br>
  #end
  Function AddEmail (sCode : String; sName : string; iCOUNTREPEAT: integer; sCurrentComponent : string): boolean;
  #doc
    Функция добавления возможных параметров для рассылки
  #end
  Function AddParam(sCode : String; sNameParam : string) : boolean;
  #doc
    Установка условия динамическая (используется внутри epShowInterForComditionMail)
  #end
  function SetConditon(sName : string; sValueCodition : string) : boolean;

  #doc
     Создание тело письма
  #end

  // Параметр
  property AvailCode : string read write;
  // Параметр
  property AvailParameter   : string read;
  property AvailParameterValue : string read write;

  property TekNameCondition : string read;
  property TekValueCondition : string read;
  // режим работы добавления рассылок
  property ModeAddNastrEmail : boolean read write;
  // объектный индекс
  index AvailMailParams01 = AvailCode;

  property BodyFormat : byte read write;
end;

#doc
Функции создания рассылок.
#end
ObjInterface ObjCreateMailEx;
  #doc
    Установка условия динамическая (используется внутри epShowInterForComditionMailStatic)
  #end
  function SetConditonStatic(sNameCodition : string; sValueCodition : string; sCodeMail : string; sCodeTemplate : string) : boolean;
  #doc
    Отправка почты - по records: поддержка кода рассылки, параметров и др.
    в oRec игнорируются m_cTemplate, m_sConditionValue, m_sBody, m_arrValues, m_lBody, m_sFileBody
  #end
  function SendEmailMultiTemplate(oRec : TSendEmailRec;
                                  objMailTemplate : iMail_Template;
                                  bShowMessage : boolean = true) : boolean;
end;

vipInterface Mail_Funcs implements iMail_Funcs, ObjCreateMail, ObjCreateMailEx, IModify licensed(free);
public:
  constructor Init;
  destructor Done;
end;

#doc
Точка расширения для создания рассылок в компонентах.
</brief>

 <p> Точка вызывается из интерфейса CreateMail.
 C помощь вызова методов ObjCreateMail (вызовы TR.xxx) необходимо создать
 настройки компоненты. <br>

 <p> Обработчик точки расширения всегда должен возвращать True.
 Порядок выделения приоритета для точки расширения:
  <ul>
  <li> Компоненты C_ - от  11 до  40
  <li> Компоненты L_ - от  41 до  80
  <li> Компоненты F_ - от  81 до 120
  <li> Компоненты M_ - от 121 до 160
  <li> Компоненты Z_ - от 161 до 200
  <li> Для прочих разработок (в том числе для партнеров - разработчиков)  - от 201 до 240
  </ul>
  Диапазоны зарезервированы для системы, не использовать !!!<br>
                - от   0 до  10 <br>
                - от 241 до 255 <br>
#end
ExtensionPoint epCreateMailComponent (CM : ObjCreateMail);

#doc
  Для задания динамический условий
#end
ExtensionPoint epShowInterForComditionMail (Code : string; CM : ObjCreateMail);
#doc
  Для задания статистических условий
#end
ExtensionPoint epShowInterForComditionMailStatic(Code : string; CM : ObjCreateMailEx);
#doc
Функции создания рассылок.
#end
ObjInterface ObjCreateMailSetCondition;
  function ChoiceParam(var sNameCondition : string; var sValueCondition : string) : boolean;
end;

vipInterface SetConditionSENDTEST implements ObjCreateMailSetCondition licensed(free);

#endif
