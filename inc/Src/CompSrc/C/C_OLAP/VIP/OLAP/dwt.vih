//------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Галактика 7.12 - Экспорт в хранилище данных
// Объектные интерфейсы
//------------------------------------------------------------------------------


#ifndef __DWT_VIH__
#define __DWT_VIH__

#doc
  Объектный интерфейс передачи данных во внешнее хранилище.<br>
#end
ObjInterface  IDWExporter;
#doc
  Событие-процедура делает следующий шаг визуализации.<br>
#end
  event procedure StepProcess;

#doc
  Событие-процедура записывает строку в журнал выгрузки.<br>
  <i>Вызвать нельзя</i><br>
#end
  event procedure WriteLogRecord (msg: string);

#doc
  Процедура записывает строку в журнал выгрузки.<br>
#end
  procedure _WriteLogRecord (msg: string);// Потому как Event WriteLogRecord нельзя вызвать

#doc
  Возвращает имя последнего поля.<br>
#end
  function GetLastFieldName: String; // для локализации ExFieldNotValid

#doc
  Запуск выгрузки.<br>
#end
  procedure StartExport (JobID: Comp);

#doc
  Регистрация параметра выгрузки.<br>
  Name - название параметра.<br>
  Value - значение пораметра.<br>
#end
  procedure RegisterParameter (Name, Value: String);

#doc
  Регистрация параметра типа Date.<br>
  DateName - название параметра.<br>
  DateVal - значение параметра.<br>
#end
  procedure RegisterDateParameter (DateName: Word; DateVal: Date);

#doc
  Регистрация поля выгрузки.<br>
  Name - название поля.<br>
  VisibleLength - длина видимой части.<br>
#end
  procedure RegisterField (Name: String; Type, VisibleLength: Word);

#doc
  Установка значения в поле.<br>
  Name - название поля.<br>
  Value - значение поля.<br>
#end
  procedure SetField (Name, Value: String);

#doc
  Запись строки во внешнее хранилище данных. <br>
#end
  procedure WriteRecord;

#doc
  Завершение выгрузки.<br>
  _WasError - true если были ошибки, false если ошибок не было.<br>
#end
  procedure FinishExport (_WasError: Boolean);
End;

#doc
  Объектный интерфейс, описыющий набор процедур и функция реализуемых интерфейсом выгрузки.<br>
#end
ObjInterface  IDWTask;
#doc
  Функция возвращает объект типа IDWExporter.<br>
#end
  event function  GetDEObject (var aDE: IDWExporter): Boolean;

#doc
  Процедура устанавливает текст окна визуализации процесса выгрузки.<br>
#end
  event procedure SetProcessText(ProcessStr: String);

#doc
  Процедура делает следующий шаг визуализации.<br>
#end
  event procedure StepProcess;

#doc
  Процедура запускает визуализацию процесса выгрузки.<br>
#end
  event procedure StartProcessIndicator (ProcessStr: String; RecCount: Longint);

#doc
  Процедура делает следующий шаг визуализации с обновлением данных для мониторинга выгрузки.<br>
#end
  event function NextProcessIndicator(_Count:LongInt): boolean;

#doc
  Процедура останавливает визуализацию процесса выгрузки.<br>
#end
  event procedure StopProcessIndicator;

#doc
  Функция возвращает число задач.<br>
#end
  function GetTaskCount: Integer;

#doc
  Функция возвращает название задачи по номеру.<br>
  TaskNo - номер задачи.<br>
#end
  function GetTaskName (TaskNo: Integer): String;

#doc
  Функция возвращает версию интерфейса выгрузки.<br>
#end
  function GetUnitVersion: String;

#doc
  Функция запускает задачу на выполнение.<br>
  TaskNo - номер задачи.<br>
  TaskMode - режим выгрузки.<br>
  JobID - NRec задания.<br>
#end
  function Run (TaskNo: Integer; JobID: Comp): Boolean;

#doc
  Процедура заполнения настроек выгрузки по умолчанию.<br>
  TaskMode - режим выгрузки.<br>
  JobID - NRec задания.<br>
#end
  procedure DefaultSetup (TaskNo: Integer; JobID: Comp);

#doc
  Функция настройки выгрузки.<br>
  TaskMode - режим выгрузки.<br>
  JobID - NRec задания.<br>
  Результат - true если настройки надо сохранить после редактирования, false если сохранять не надо.<br>
#end
  function Setup (TaskNo: Integer; JobID: Comp): Boolean;
End;

#doc
  Объектный интерфейс запуска задачи.<br>
#end
ObjInterface  IDWTaskRunner;
#doc
  Функция запуска задачи.<br>
#end
  function Run (RunVisual: Boolean): Boolean;
End;

ObjInterface  IDWDataExport;
  //event procedure WriteLogRecord (msg: string);
  procedure CommitJob (JournalID: Comp);
End;

#endif