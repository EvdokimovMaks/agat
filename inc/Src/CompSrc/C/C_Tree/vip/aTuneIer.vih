/*
 ╔═══════════════════════════════════════════════════════════════════════════╗
 ║                     (c) 1994,2002 корпорация ГАЛАКТИКА                    ║
 ║ Проект        : ГАЛАКТИКА                                                 ║
 ║ Система       : Общая функциональность                                    ║
 ║ Версия        : 5.80                                                      ║
 ║ Назначение    : Функции для работы с UserDeskRep                          ║
 ║ Ответственный : Володько Анатолий Геннадьевич                             ║
 ╚═══════════════════════════════════════════════════════════════════════════╝
*/

#ifndef __ATUNEIER_VIH__
#define __ATUNEIER_VIH__

#Component "C_Tree"

//**************************************************************
#doc
Функции для работы с UserDeskRep. <br>
Работа с настройками для построения дерева.
#end
ObjInterface objTuneIer;

#doc
вызывается перед использованием остальных функций
#end
public procedure InitLevels;

public function GetLevel(nLevel: word): word;
public function GetSort(nLevel: word): word;

#doc
добавляет уровень (увел.счетчик), если максимум - заменяет последний
#end

public function AddLevel(
                   NomerGrp: word;
                   wTable  : word;
                   ResName1: string;
                   ResWord1: word;
                   ResWord2: word;
                   NomerSrt: word;
                   ResWord3: word
                 ): word;

#doc
заполняет массив всеми введенными уровнями
#end
public function FillAllLevels(recGroup: comp; _NeedPrefix: boolean): word;

#doc
заполняет массив сортировкой листьев
#end
public function FillSort(recGroup: comp): word;

#doc
заполняет массив (когда есть уровни периода), пропуская numMissLevel...
#end
public function FillMinMaxLevels(recGroup: comp;
                                 numMissLevels: word; nDateLevel: word): word;
#doc
есть ли группа с таким номером
#end
public function GetGroupLevel(recGroup: comp; nGroup: word): word;
public function isGroupInTree(recGroup: comp; nGroup: word): boolean;

#doc
уровень является последним в настройке
#end
public function RepGrOne_isLastLevel(recGroup: comp; nGroup: word): boolean;

#doc
удаляет старый отчет
#end
public function DeleteOldReport(_nrep: word): boolean;

#doc
настраивает все уровни
#end
public function TuneAllLevels(cTree: longint;
                              kod: word; toOneLevel: boolean): boolean;

#doc
настраивает NumSums сумм до уровня ToLevel
#end
public procedure TuneAllSums(cTree: longint; NumSums: word; ToLevel: word);

#doc
возвращает номер уровня по значению из pump.vpp
#end
public function FindLevel(N: word): word;

#doc
формирует название группировки
#end
public function GetGroupLstName(recGroup: comp): string;

#doc
формирует название сортировки
#end
public function GetSortLstName(recGroup: comp): string;

#doc
копирует текущую настройку в буфер (якобы)
#end
public function SaveUserDeskRep(rec: comp): comp;

#doc
восстанавливает текущую настройку
#end
public function RestoreUserDeskRep(rec: comp): comp;

#doc
удаляет текущую настройку
#end
public function DeleteUserDeskRep(rec: comp): boolean;

#doc
флажок последнего сформированного отчета
#end
public function SetLastFlagok(rec: comp): boolean;

#doc
поиск настройки с этим флажком
#end
public function GetLastFlagok(nReport: word): comp;

#doc
поиск настройки с этим флажком то же - с сообщением
#end
public function CheckLastFlagok(nReport: word): comp;

#doc
проверка, чтобы был заполнен тип периода
#end
public function CheckResComp14(_UserName: string; _nReport: word; _def: comp): boolean;

#doc
валюта отчетов или НДЕ
#end
public function GetTreeVal(isValTar: word; ValTar: comp): comp;

#doc
борьба со строковым табельным номером
#end
public function GetGroupSort( nLevel : Word) : Word;
public procedure SetGroupSort( nLevel : Word; newVal : Word);
End;

ObjInterface objTuneIerAdd;
#doc
  добавляет уровень (увел.счетчик), если максимум - заменяет последний
  с учетом внешних КАУ, настраиваемого наименования уровня
#end  
  Function AddLevelEx( NomerGrp
                     , wTable  : word;
                       ResName1: string;
                       ResWord1
                     , ResWord2
                     , NomerSrt
                     , ResWord3
                     , ResWord4
                     , ResWord5: word
                     ): word;
End;

VipInterface iTuneIer implements objTuneIer, objTuneIerAdd
  #ifdef ATL51
  Licensed (Free)
  #end
;
//**************************************************************
#end //__ATUNEIER_VIH__
