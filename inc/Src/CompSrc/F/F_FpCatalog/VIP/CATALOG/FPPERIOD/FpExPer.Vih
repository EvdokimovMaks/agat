//------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Галактика 8.10 - модуль "Управление бюджетом"
// Интерфейс взаимодействия : "Периоды планирования"
//------------------------------------------------------------------------------

#ifndef __FpExPer_Vih__
#define __FpExPer_Vih__

#ifdef  ComponentVersion
#component "F_FpCatalog"
#endif//ComponentVersion

//------------------------------------------------------------------------------
#include FpPeriod.Inc  // все типы "Периоды планирования"
//------------------------------------------------------------------------------

//==============================================================================
#doc
Интерфейс взаимодействия : "Периоды планирования"<br>
<b>Внимание!</b> Интерфейс предназначен только для использования внутри контура "Финансы"<br>
#end
ObjInterface iExtFpPeriod;  //#region ObjInterface

  //============================================================================
  //#region ERROR
  //----------------------------------------------------------------------------
  #doc
     Функция возвращает описание последней ошибки
  #end
  Function GetStLastError : string;
  //----------------------------------------------------------------------------
  #doc
     Вывод сообщения последней ошибки
  #end
  Function RunShowError : boolean;
  //#endregion ERROR
  //****************************************************************************


  //============================================================================
  //#region INIT
  //----------------------------------------------------------------------------
  #doc
     Обновить таблицы в памяти
  #end
  Function RetrieveTbl : boolean;
  //#endregion INIT
  //****************************************************************************


  //============================================================================
  //#region FIELDS
  //----------------------------------------------------------------------------
  #doc
     Получить код сортировки периода планирования во всей иерархии
  #end
  Function GetCode(
      _cRec     : comp        // ссылка на период
  ) : string;
  //----------------------------------------------------------------------------
  #doc
     Получить наименование периода планирования
  #end
  Function GetName(
      _cRec     : comp        // ссылка на период
  ) : string;
  //----------------------------------------------------------------------------
  #doc
     Получить ссылку на вышестоящий период планирования
  #end
  Function GetNode(
      _cRec     : comp        // ссылка на период
  ) : comp;
  //----------------------------------------------------------------------------
  #doc
     Получить признак "листовой период"
  #end
  Function GetIsLeaf(
      _cRec     : comp        // ссылка на период
  ) : boolean;
  //----------------------------------------------------------------------------
  #doc
     Получить главный тип периода
  #end
  Function GetMainTPer(
      _cRec     : comp        // ссылка на период
  ) : comp;
  //----------------------------------------------------------------------------
  #doc
     Получить спецификацию типа периода
  #end
  Function GetSpTPer(
      _cRec     : comp        // ссылка на период
  ) : comp;
  //----------------------------------------------------------------------------
  #doc
    Получить дату начала периода планирования
  #end
  Function GetDBeg(
      _cRec     : comp        // ссылка на период
  ) : date;
  //----------------------------------------------------------------------------
  #doc
    Получить дату конца периода планирования
  #end
  Function GetDEnd(
      _cRec     : comp        // ссылка на период
  ) : date;
  //----------------------------------------------------------------------------
  #doc
     Получить ссылку на вышестоящий период планирования (на агрегат)
  #end
  Function GetAgr(
      _cRec     : comp        // ссылка на период
  ) : comp;
  //----------------------------------------------------------------------------
  #doc
     Есть ли у данного периода планирования подчинённые периоды (является ли он агрегатом)
  #end
  Function GetIsAgr(
      _cRec     : comp        // ссылка на период
  ) : boolean;
  //----------------------------------------------------------------------------
  #doc
     Относится ли период планирования к текущему типу периода планирования
  #end
  Function IsCurTPer(
      _cRec     : comp        // ссылка на период
  ) : boolean;
  //#endregion FIELDS
  //****************************************************************************


  //============================================================================
  //#region COMMON
  //----------------------------------------------------------------------------
  #doc
     Является ли заданный период, подчиненным указанному
  #end
  Function isSubPeriod(
      _cUpp     : comp;       // вышестоящий период
      _cRec     : comp        // ссылка на период
  ) : boolean;
  //----------------------------------------------------------------------------
  #doc
     Получить листовой период планирования по дате
  #end
  Function GetLeafFpPeriodByDate(
      _dtDate   : date        // дата
  ) : comp;
  //----------------------------------------------------------------------------
  #doc
     Получить период планирования по дате и спецификации периода планирования
  #end
  Function GetPeriodBySpTPerDate(
      _cSpTPer  : comp;       // спецификация типа периода
      _dtDate   : date        // дата
  ) : comp;
  //----------------------------------------------------------------------------
  #doc
     Получить листовой период планирования по типу периода и дате
  #end
  Function GetLeafPeriodByMainTPerDate(
      _cMainTPer: comp;       // главный тип периода
      _dtDate   : date        // дата
  ) : comp;
  //----------------------------------------------------------------------------
  #doc
     Получить наименование листового периода по дате
  #end
  Function GetLeafFpPeriodNameByDate(
      _dtDate   : date        // дата
  ) : string;
  //----------------------------------------------------------------------------
  #doc
     Получить количество рабочих дней по календарю и интервалу дат
  #end
  Function GetWorkDays(
      _cCalend  : comp;       // ссылка на календарь
      _dBeg     : date;       // дата начала
      _dEnd     : date        // дата окончания
  ) : integer;
  //#endregion COMMON
  //****************************************************************************


  //============================================================================
  //#region MAKEMARKER
  //----------------------------------------------------------------------------
  #doc
     Построить список всех подчиненных периодов
  #end
  Function MakeMarkerPeriod(
      _MID      : TPtr; // ID маркера
      _cRec     : comp        // ссылка на период
  ) : boolean;
  //----------------------------------------------------------------------------
  #doc
     Построить список листовых подчиненных периодов
  #end
  Function MakeMarkerLeafPeriod(
      _MID      : TPtr; // ID маркера
      _cRec     : comp        // ссылка на период
  ) : boolean;
  //----------------------------------------------------------------------------
  #doc
     Построить список листовых подчиненных периодов для "входящих" остатков
  #end
  Function MakeMarkerLeafInpSaldPeriod(
      _MID      : TPtr; // ID маркера
      _cRec     : comp        // ссылка на период
  ) : boolean;
  //----------------------------------------------------------------------------
  #doc
     Построить список листовых подчиненных периодов для "исходящих" остатков
  #end
  Function MakeMarkerLeafOutSaldPeriod(
      _MID      : TPtr; // ID маркера
      _cRec     : comp        // ссылка на период
  ) : boolean;
  //----------------------------------------------------------------------------
  #doc
     Построить список листовых подчиненных периодов, согласно типу статьи
  #end
  Function MakeMarkerLeafStBudPeriod(
      _MID      : TPtr; // ID маркера
      _cStBud   : comp;       // ссылка на статью бюджета
      _cRec     : comp        // ссылка на период
  ) : boolean;

  //----------------------------------------------------------------------------
  #doc
     Построить список вышестоящих периодов
  #end
  Function MakeMarkerUpperPeriod(_MID : TPtr; _cRec : comp) : boolean;
  //#endregion MAKEMARKER
  //****************************************************************************


  //============================================================================
  //#region SYNCHPERIOD
  //----------------------------------------------------------------------------
  #doc
     Синхронизация периода планирования одного типа в другом типе периода планирования
  #end
  Function GetSynchSpTPerAndDate(
      _cSPeriod   : comp;     // период-источник
      _cDMainTPer : comp;     // типология перида-приемника
  var _cDSpTPer   : comp;     // спецификация типа периода-приемника
  var _dtDate     : date      // дата
  ) : boolean;
  //#endregion SYNCHPERIOD
  //****************************************************************************


  //============================================================================
  //#region DIALOG
  //----------------------------------------------------------------------------
  #doc
     Получить имя маркера для каталога периодов планирования
  #end
  Function GetMarkerName : string;
  //----------------------------------------------------------------------------
  #doc
     Запуск окна выбора/редактирования каталога периодов планирования
  #end
  Function RunViewFpPeriod(
      _wIntMode : word;       // режим запуска (cgiNo, cgiPick, ...) см.GLOCONST.INC
      _cTopRec  : comp;       // тип периода
      _cNodeTop : comp;       // вывод только ветки с вершиной cNodeTop, чтобы все дерево cNodeTop=comp(0)
  var _cGetRec  : comp        // выбранный период
  ) : LongInt;

  //----------------------------------------------------------------------------
  #doc
     Запуск окна выбора каталога периодов планирования по спецификации типа периода
  #end
  Function RunViewFpSpPeriod(
      _wIntMode : word;       // режим запуска (cgiNo, cgiPick, ...) см.GLOCONST.INC
      _cTopRec  : comp;       // тип периода
      _cNodeTop : comp;       // спецификация типа периода
  var _cGetRec  : comp        // выбранный период
  ) : LongInt;
  //#endregion DIALOG
  //****************************************************************************

End; //#endregion ObjInterface
//******************************************************************************


//==============================================================================
VipInterface vExtFpPeriod implements iExtFpPeriod
#Licensed_Free;
Public:
  Constructor Init;
  Destructor  Done;
End;
//******************************************************************************


#endif//__FpExPer_Vih__
