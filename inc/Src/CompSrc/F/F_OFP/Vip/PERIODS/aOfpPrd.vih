//------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Галактика 8.10 - модуль "Платежный календарь"
// Функции для работы с датами Периодов ПК
//------------------------------------------------------------------------------

#ifndef __AOFPPRD_VIH__
#define __AOFPPRD_VIH__
//******************************************************************************

#ifdef ComponentVersion
#component "F_OFP"
#end
//******************************************************************************

// даты всех сальдо
type TSaldoDates = record
  ArcBeg: date;
  ArcEnd: date;
  ClsBeg: date;
  ClsEnd: date;
  PlnBeg: date;
  PlnEnd: date;
end;

// построение ПК
#doc
Функции для работы с датами Периодов ПК.<br>
#end
Private ObjInterface objOfpPrd;

  #doc
  Освобождение ссылок на объекты, провоцирующие циклические зависимости объектов.<br>
  #end
  Function FreeCrossVipRef : boolean;

  /////////////////////// РАЗЛИЧНЫЕ ПРОВЕРКИ ///////////////////////////////////
  #doc
  Тип Начало периода <-> тип Конец периода.<br>
  #end
  Function TunePeriod_GetPair(_RecType: word): word;
  #doc
  Сальдо на начало периода.<br>
  #end
  Function TunePeriod_isBegin(_RecType: word): boolean;
  #doc
  Сальдо на начало периода.<br>
  #end
  Function TunePeriod_GetType(_RecType: word): word;

  /////////////////////// РАЗЛИЧНЫЕ НАЗВАНИЯ ///////////////////////////////////
  #doc
  Название периода для Сальдо.<br>
  #end
  Function TunePeriod_GetBigPeriodName(_RecType: word): string;
  #doc
  Название сальдо для ук.типа.<br>
  #end
  Function TunePeriod_GetName(_RecType: word): string;

  ////////////////////// ВОЗВРАТ И УСТАНОВКА ДАТ ///////////////////////////////
  #doc
  Возвращает дату сальдо любого типа.<br>
  #end
  Function TunePeriod_GetDate(_wPeriod: word): date;
  #doc
  Даты начала/окончания периода.<br>
  #end
  Procedure TunePeriod_GetDates(_wPeriod: word; var _retBegDate: date; var _retEndDate: date);
  #doc
  По дате - начало/окончание периода, в кот.она попадает.<br>
  #end
  Procedure TunePeriod_GetDatesByDate(_date: date; var _retBegDate: date; var _retEndDate: date);
  #doc
  Период, к которому принадлежит дата.<br>
  #end
  Function TunePeriod_GetByDate(_date: date): word;
  #doc
  Получить последнюю архивную дату.<br>
  #end
  Function TunePeriod_GetArchivedDay: date;
  #doc
  Установить последнюю архивную дату.<br>
  #end
  Function TunePeriod_SetArchivedDay(_date: date): boolean;
  #doc
  Последний закрытый день.<br>
  #end
  Function TunePeriod_GetClosedDay: date;
  #doc
  Установить закрытый день.<br>
  #end
  Function TunePeriod_SetClosedDay(_date: date): boolean;

  /////////////////////// РАЗЛИЧНЫЕ ПРОВЕРКИ ///////////////////////////////////
  #doc
  Существует ли период (без обращения к настройкам).<br>
  #end
  Function TunePeriod_ExistsByDate(_wPeriod: word; _date: date): boolean;
  #doc
  Существует ли период.<br>
  #end
  Function TunePeriod_Exists(_wPeriod: word): boolean;
  #doc
  В архиве ли день.<br>
  #end
  Function TunePeriod_isDayArchived(_date: date): boolean;
  #doc
  Закрыт ли день.<br>
  #end
  Function TunePeriod_isDayClosed(_date: date): boolean;
  #doc
  День до указанного дня (до предварительно рассчитанного закрытого дня)
  для ускорения TunePeriod_isDayClosed - чтобы каждый раз к настройке не идти.<br>
  #end
  Function TunePeriod_isDayClosedByDate(_date: date; _datecl: date): boolean;
  #doc
  Входит ли дата в указанный период ПК.<br>
  #end
  Function TunePeriod_isDateInPeriod(_date: date; _Period: word): boolean;
  #doc
  Проверка дня на нахождение в периоде, нач. с _BegType.<br>
  #end
  Function TunePeriod_CheckDay(_date: date; _BegType: word; _NeedMessage: boolean): boolean;
  #doc
  Можно ли закрывать день.<br>
  #end
  Function TunePeriod_CheckDayForClose(_date: date): boolean;
  #doc
  Можно ли открывать день.<br>
  #end
  Function TunePeriod_CheckDayForOpen(_date: date): boolean;
  #doc
  Можно ли переносить день в архив.<br>
  #end
  Function TunePeriod_CheckDayForArchive(_date: date): boolean;
  #doc
  Можно ли переносить день из архива.<br>
  #end
  Function TunePeriod_CheckDayForUnArchive(_date: date): boolean;
  #doc
  Проверка новой даты.<br>
  #end
  Function TunePeriod_CheckNewDay(_date: date; _isMessage: word): boolean;
  #doc
  Запрос даты в планируемом периоде (теперь можно и в закрытом).<br>
  #end
  Function TunePeriod_GetDateInPlan(var _date: date): boolean;

  //////////////////////// ДАТЫ ВСЕХ САЛЬДО ////////////////////////////////////
  #doc
  Даты всех сальдо.<br>
  #end
  Function TunePeriod_FillRecAndProtect(var rSaldoDates: TSaldoDates): boolean;
  #doc
  Снять защиту периода по настройке.<br>
  #end
  Function TunePeriod_DisProtect: boolean;
  #doc
  Дата указанного типа.<br>
  #end
  Function TunePeriod_GetDateByRec(var rSaldoDates: TSaldoDates; _wPeriod: word): date;

End;

VipInterface iOfpPrd implements objOfpPrd
  Licensed(Free);
//******************************************************************************
#end //__AOFPPRD_VIH__
