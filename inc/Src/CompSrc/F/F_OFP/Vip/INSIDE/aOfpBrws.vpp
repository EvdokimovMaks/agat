
#ifdef __SECTION_VIH__
  #include aOfpBrws.vih
#end

#ifdef __SECTION_DEF__
  piOfpBrws: objOfpBrws;
  piInsided: objInsided;
#end

#ifdef __SECTION_FUN__ // не общая секция для всех интерфейсов
procedure piInsided_OnRescan;
{
  RescanTopPanel;
}
procedure piInsided_OnPositionChanged(_cRec: TNRec);
{
!  piInsided := objInsided(piInsidedBook);
  piInsided.OnContEvent(cmIdle, _cRec);
}
procedure piInsided_Init(_piInsided: objInsided/*; _ExWinEdit: boolean*/);
{
  piInsided := _piInsided;
  BindEvent (piInsided_OnRescan, piInsided.Event_Rescan);
  // есть окно редактирования - встраиваем разные окна
/*
  if _ExWinEdit
   {
     BindEmbeddedInterface(scrInsidedBr, piInsided, 'winInsidedBr');
     BindEmbeddedInterface(scrInsidedSc, piInsided, 'winInsidedSc');
   }
  else
*/
     BindEmbeddedInterface(scrInsidedSc, piInsided);
}
procedure piInsided_Done/*(_ExWinEdit: boolean)*/;
{
  // есть окно редактирования - встраиваем разные окна
/*
  if _ExWinEdit
    UnBindEmbeddedInterface(scrInsidedBr);
*/
  UnBindEmbeddedInterface(scrInsidedSc);

  UnBindEvent (piInsided_OnRescan, piInsided.Event_Rescan);
  #mFreeVipInterface(piInsided);
}
#end

#ifdef __SECTION_INIT__
  #mLoadVipRef(piOfpBrws,'iOfpBrws'); 
  piOfpBrws.SetRegim(cgOfp_InsPK, cgOfpBM_FOBrws+cgOfpBM_FopBrws+cgOfpBM_PrfBrws);
  piInsided_Init(objInsided(piOfpBrws));
#end

#ifdef __SECTION_DONE__
   if (not NullVipRef(piOfpBrws))
    {
      piInsided_Done;
      #mFreeVipInterface(piOfpBrws);
    }
#end

#ifdef __SECTION_WIN__
Embedded  
  #ifdef _TABCA1_
  scrInsidedBr
  #else
  scrInsidedSc
  #end
  'Закладки' // в интерфейсе не видно
  interface;
end; // Embedded
#end //__SECTION_WIN__

