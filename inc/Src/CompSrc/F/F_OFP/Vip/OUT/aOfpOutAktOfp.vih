//------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Галактика 8.10 - модуль "Платежный календарь"
// Объект для работы с Финобязательствами
//------------------------------------------------------------------------------

#ifndef __AOFPOUTAKTOFP_VIH__
#define __AOFPOUTAKTOFP_VIH__

//------------------------------------------------------------------------------
#component "F_OFP"

//------------------------------------------------------------------------------
#include ofptypes.vpp
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
#doc
Интерфейс взаимодействия: "Финансовые обязательства модуля Платежный календарь"
#end
ObjInterface objOfpOutAktOfp;

  ///////////////////////////////// ERROR //////////////////////////////////////
  #doc
  Описание последней ошибки выполнения
  #end
  Function GetLastError(var _LastError: TLastError): boolean;

  /////////////////////// РАЗЛИЧНЫЕ НАЗВАНИЯ ///////////////////////////////////
  #doc
  Наименование ФОБ.<br>
  #end
  Function AktOfp_GetName(_NoDoc: string; _dDoc: date): string;
  #doc
  Наименование ФОБ по буферу.<br>
  #end
  Function AktOfp_GetNameByBuf(bufAktOfp: TAktOfp): string;
  #doc
  Наименование ФОБ по ссылке.<br>
  #end
  Function AktOfp_GetNameRec(_cAktOFP: comp): string;
  #doc
  Наименование ФОБ ("по Финобязательству").<br>
  #end
  Function AktOfp_GetNameInDativeRec(_cAktOFP: comp): string;
  #doc
  Название ФОБ взаимозачета.<br>
  #end
  Function AktOfp_GetVzaimName(_cAktOFP: comp): string;
  #doc
  Название типа основания ФОБ (для вывода в Browser).<br>
  #end
  Function AktOfp_GetReasonTypeName(_Type: word): string;
  #doc
  Название основания.<br>
  #end
  Function AktOfp_GetReasonName(_Type: word; _NRec: comp): string;
  #doc
  Организация по умолчанию.<br>
  #end
  Function AktOfp_GetZeroOrgName: string;
  #doc
  Название периода погашения ФОп.<br>
  #end
  Function AktOfp_GetPeriodFopName(bufAktOfp: TAktOfp): string;
  #doc
  Вид платежа по ФОБ.<br>
  #end
  Function AktOfp_GetTypePlatName(_TypePlat: word): string;
  #doc
  Тип ФОБ по валюте.<br>
  #end
  Function AktOfp_GetTipMoneyName(_TipMoney: word): string;
  #doc
  Название статуса.<br>
  #end
  Function AktOfp_GetStatusName(_Status: word): string;

  /////////////////////// РАЗЛИЧНЫЕ ПРОВЕРКИ ///////////////////////////////////
  #doc
  Соответствие валюты ФОП типу по валюте ФОБ.<br>
  #end
  Function AktOfp_ValAccording(_TipMoney: word; _cValAkt, _cValDoc: TnRec): boolean;
  #doc
  Проверяет соответствие валюты SoprHoz полю TipMoney ФОБ и контрагентов.<br>
  #end
  Function AktOfp_CheckSoprHoz(_cAktOFP: comp; _cSoprHoz: comp): boolean;
  #doc
  Проверяет валюту документа на соответствие его типу по валюте - общая функция.<br>
  #end
  Function AktOfp_CheckValByTipMoney(_cVal: comp; _tipMoney: word): boolean;
  #doc
  При выборе валюты.<br>
  #end
  Function AktOfp_CheckValForTipMoney(_tipMoney: word; _direct: word): boolean;
  #doc
  Исполнено ли ФОБ.<br>
  #end
  Function AktOfp_IsRealized(bufAktOfp: TAktOfp): boolean;
  #doc
  Исполнено ли ФОБ и все его Фоп - то же, но по SumFact.<br>
  #end
  Function AktOfp_RealizedFoAndFop(_cAktOFP: comp): boolean;
  #doc
  ФОБ и все его Фоп на закрытые дни.<br>
  #end
  Function AktOfp_IsInCldPeriod(_cAktOFP: comp): boolean;
  #doc
  Проверка флага автоматического создания Фоп для ФОБ.<br>
  #end
  Function AktOfp_NeedClearing(_HandMade: boolean): boolean;
  #doc
  При расоглассовании сумм ФОБ и связанных ФОп.<br>
  #end
  Function AktOfp_OnDisBalansFob(_BufAktOfp: TAktOfp; _SumMode: word): boolean;

  /////////////////////// РАЗЛИЧНЫЕ АТРИБУТЫ ///////////////////////////////////
  #doc
  Определяет включенность настройки для типа док-та ОФП, Descr.<br>
  #end
  Function User_Nastr(_OfpDocType: word; _Descr: tDescr): boolean;
  #doc
  Доступ к документу в статусе для Descr.<br>
  #end
  Function User_D(_OfpDocType: word; _Descr: tDescr; _cNote: comp): boolean;
  #doc
  Возвращает ФОБ по основанию (ДО, заявке).<br>
  #end
  Function AktOfp_FindByReason(_vidDO: word; _cDO: comp): comp;
  #doc
  Тип основания: ДО, заявки или ГВПК.<br>
  #end
  Function AktOfp_GetTypeOfReason(_ReasonType: word): word;
  #doc
  Его название.<br>
  #end
  Function AktOfp_GetTypeOfReasonName(_ReasonType: word): string;
  #doc
  Направление по типу ДО.<br>
  #end
  Function AktOfp_GetDirectByReasonType(_ReasonType: word): word;
  #doc
  Маска, куда статус ФОБ не может быть переведен.<br>
  #end
  Function AktOfp_StatusMaska(bufAktOfp: TAktOfp): word;
  #doc
  Первоначальная дата ФОБ по полям ДО.<br>
  #end
  Function AktOfp_GetDFirstByDO(bufBaseDoc: TBaseDoc; _direct: word): date;
  #doc
  Направление - по направлению основания.<br>
  #end
  Function AktOfp_DocType(_direct: word): word;
  #doc
  Ссылка на BaseDoc.<br>
  #end
  Function AktOfp_GetBaseDocRec(bufAktOfp: TAktOfp): comp;
  #doc
  Ссылка на Доп.соглашение, если нет - на договор.<br>
  #end
  Function AktOfp_GetDogovorOrAppRec(bufAktOfp: TAktOfp): comp;
  #doc
  Есть ли у ФОБ Фоп.<br>
  #end
  Function AktOfp_HasClearing(_cAktOFP: comp): boolean;

  ///////////////////// СВЯЗЬ С ФИНПЛАНИРОВАНИЕМ ///////////////////////////////
  #doc
  Заполнить разноску по статьям из ФинПроводок.<br>
  #end
  Function AggrFpOb(_cSoprHoz: TnRec; var _pAktOfp: #TAktOfpX): boolean;
  #doc
  Заполнить разноску по статьям ФинПроводок из ХозОперации.<br>
  #end
  Function AggrFpOb_Eval_01(   _cSoprHoz: TnRec;
                            var _pAktOfp: #TAktOfpX;
                                  _wMode: word;
                              _isMessage: word
                                       ): boolean;
  #doc
  Заполнить разноску по статьям ФинПроводок из Документа.<br>
  #end
  Function AggrFpObByDocSource(_cDocSource: TnRec; var _pAktOfp: #TAktOfpX): boolean;
  #doc
  Привязка статьи к ФОБ на все 100 процентов, появились документы несущие ContAn.<br>
  #end
  Function AktOfp_StBudAttach_Eval_01(bufAktOfp: TAktOfp; _cStBud: comp; _ContAn: TPtr ): boolean;
  #doc
  Привязка статьи к ФОБ на все 100 процентов.<br>
  #end
  Function AktOfp_StBudAttach(bufAktOfp: TAktOfp; _cStBud: comp): boolean;
  #doc
  Просмотр бюджета по ФОБ.<br>
  #end
  Function AktOfp_SeeBudget(bufAktOfp: TAktOfp): boolean;
  #doc
  Просмотр/редактирование привязки к статьям.<br>
  #end
  Procedure AktOfp_EditStBud(_regim: word; bufAktOfp: TAktOfp);
  #doc
  Заполнение по аналитике соответствующего поля в буфере ФОБ с IsNeedUpDate & IsNeedPosit.<br>
  #end
  Function AktOfp_SetAnalitikToBuf_Eval_01(var _bufAktOfp: TAktOfp;
                                                    _wKau: word;
                                                    _cKau: comp;
                                                   _wMode: word   // режимы обработки Бит_1 - IsNeedUpDate
                                                                  //                  Бит_2 - IsNeedPosit
                                                                  //                  Бит_3 - только если не заполнено
                                                        ): boolean;
  #doc
  Заполнение по аналитике соответствующего поля в буфере ФОБ.<br>
  #end
  Function AktOfp_SetAnalitikToBuf(var bufAktOfp: TAktOfp;
                                           _wKau: word;
                                           _cKau: comp
                                               ): boolean;
  #doc
  Установить значение поля.<br>
  #end
  Function AktOfp_SetDefValueToBuf(var bufAktOfp: TAktOfp;
                                           _wFld: word;
                                      _wFldValue: word;
                                      _dFldValue: date
                                               ): boolean;
  #doc
  Аналитика только данного документа из буфера ФОБ.<br>
  #end
  Function AktOFP_ExtractKAU(bufAktOfp: TAktOfp; _wKau: word): TnRec;
  #doc
  Аналитика только данного документа.<br>
  #end
  Function AktOfp_GetDocAnaliticByBuf(bufAktOfp: TAktOfp; var _contId: TPtr): boolean;
  #doc
  Заполнение контейнера аналитик по буферу ФОБ (связана с предыдущей).<br>
  #end
  Function AktOfp_GetAnaliticByBuf(bufAktOfp: TAktOfp; var _contId: TPtr): boolean;

  //////////////////// ПРОВЕРКА ДОСТУПНОСТИ ФОБ /////////////////////////////////
  #doc
  можно ли создавать ФОБ (с сообщением или без).<br>
  #end
  Function AktOfp_CanSetDefault(_OfpDocType: word; _NeedMessage: boolean): boolean;
  #doc
  можно ли редактировать ФОБ (с сообщением или без).<br>
  #end
  Function AktOfp_CanEdit(bufAktOfp: TAktOfp; _CheckStatus, _NeedMessage: boolean): boolean;
  #doc
  можно ли удалять ФОБ (с сообщением или без).<br>
  #end
  Function AktOfp_CanDelete(bufAktOfp: TAktOfp; _NeedMessage: boolean): boolean;
  #doc
  Проверка на возможность удаления перед формированием.<br>
  #end
  Function AktOfp_CheckDeleteBeforeCreate(bufAktOfp: TAktOfp): boolean;
  #doc
  Можно ли удалить все ФОБ по указанному ДО.<br>
  #end
  Function AktOfp_CanDeleteAllByDo(_cOfpModel: comp; _DocReasonType: word; _cDocReason: comp): boolean;

  ///////////////////////// У Д А Л Е Н И Е ////////////////////////////////////
  #doc
  Удаляет все Фоп у ФОБ.<br>
  #end
  Function AktOfp_DeleteClearings(_cAktOFP: comp; _NeedUpdateAkt: boolean): boolean;
  #doc
  Удаляет ФОБ и все его ФОП.<br>
  #end
  Function AktOfp_DeleteP(_cAktOfp: comp; _pAktOfp: #TAktOFPX): boolean;
  #doc
  Удаляет ФОБ и все соответствующие ему ФОБ в моделях.<br>
  #end
  Function AktOfp_Delete(_cAktOFP: comp): boolean;
  #doc
  Удаление всех ФОБ у ДО.<br>
  #end
  Function AktOfp_DeleteInModelByDO(    _cOfpModel: comp;
                                    _DocReasonType: word;
                                       _cDocReason: comp;
                                         _byReason: boolean
                                                 ): boolean;

  ///////////////////// ДОБАВЛЕНИЕ/ОБНОВЛЕНИЕ //////////////////////////////////
  #doc
  Обновление SoprHoz по ФОБ (для ТФО - разноски по статьям бюджета).<br>
  #end
  Function AktOfp_MakeSoprHoz(bufAktOFP: TAktOFP): boolean;
  #doc
  Сразу после добавления любой записи.<br>
  #end
  Function AktOfp_AfterInsert(bufAktOfp: TAktOfp): boolean;
  #doc
  Вставить.<br>
  #end
  Function AktOfp_Insert(var _pAktOFP: #TAktOFPX): comp;
  #doc
  Вставить AktOfp по буферу.<br>
  #end
  Function AktOfp_InsertBuff(_BuffAktOFP: TAktOFP): comp;
  #doc
  Модифицировать буфер в позиции в таблице.<br>
  #end
  Function AktOfp_Update(var _pAktOFP: #TAktOFPX): comp;
  #doc
  заполнение ЦО в ФОБ (по настройке)  Вставить.<br>
  #end
  Function AktOfp_GetDefCO(_cCoInDo: comp; _cCoInDog: comp): comp;

  ////////////////////// ЗАПОЛНЕНИЕ БУФЕРА ФОБ //////////////////////////////////
  #doc
  По основанию заполняет буфер ФОБ (_HandMade - вручную создается).<br>
  #end
  Function AktOfp_Fill( var bufAktOFP: TAktOFP;
                       _DocReasonType: word;
                          _cDocReason: comp;
                            _cSoprHoz: comp;
                          _datePeriod: date;
                              _direct: word; // для rsFIN_OBLIGATION
                            _HandMade: boolean
                                    ): boolean;
  #doc
  Заполнение буфера ФОБ по ХО и ФОп.<br>
  #end
  Function FillFOBySH(_cSoprHoz: TnRec; var  _pAktOfp: #TAktOfpX): boolean;
  #doc
  По основанию создает AktOFP (вручную или автоматически) _datePeriod - для период-ких.<br>
  #end
  Function AktOfp_CreateByBase(_DocReasonType: word;
                                  _cDocReason: comp;
                                    _cSoprHoz: comp;
                                  _datePeriod: date;
                                    _FOCourse: word; // для вал-руб ФОБ
                                _NeedClearing: boolean;
                                    _HandMade: boolean
                                            ): comp;
  #doc
  По основанию обновляет AktOFP (вручную или автоматически).<br>
  #end
  Function AktOfp_UpdateByBase(_pAktOfp: #TAktOFPX; _datePeriod: date; _HandMade: boolean): comp;

  //////////////////////// РАЗЛИЧНЫЕ РАСЧЕТЫ ///////////////////////////////////
  #doc
  Сумма Фоп по вал-руб ФОБ (с запросом или без).<br>
  #end
  Function AktOfp_GetSummaForFop(  bufAktOFP: TAktOFP;
                                 bufClearing: TClearing;
                                        _Ask: boolean;
                                  var _Summa: TSumma
                                           ): boolean;
  #doc
  Нужно ли пересчитывать сумму Фоп.<br>
  #end
  Function AktOfp_SetSummaFopNeed(_TipMoney: word): boolean;

  #doc
  То же, но по ссылке и без запроса курса (дольше).<br>
  #end
  Function AktOfp_SetSummaFop(  _cAktOfp: comp;
                              _cClearing: comp;
                                    _Ask: boolean
                                       ): boolean;

  #doc
  Возвращает сумму ФОБ и валюту в соответствии с TipMoney (для Фоп).<br>
  #end
  Function AktOfp_GetSummaForFopByCourse(   _cAktOFP: comp;
                                           _FOCourse: word;
                                           var _cVal: comp;
                                          var _Summa: TSumma;
                                         var _SumVal: TSumma
                                                   ): boolean;
  #doc
  Пересчитывает указанную в НДЕ сумму в валюту ФОБ.<br>
  #end
  Function AktOfp_SummaToFromValFO(    bufAktOfp: TAktOfp;
                                           _cVal: comp;
                                          _Summa: double;
                                      _isToValFO: boolean;
                                   var _wasError: boolean
                                               ): double;
  #doc
  Пересчет сумм Фоп ук-го ФОБ по курсу (последнему известному).<br>
  #end
  Function AktOfp_RecountFopByCourse(_cAktOFP: comp): boolean;
  #doc
  Сумма Фоп по ФОБ в валюте ФОБ (валюта - на дату ФОБ), сумма Фоп конвертации уч-тся только для ФОБ конвертации.<br>
  #end
  Function AktOfp_GetSummaFopOther(bufAktOFP: TAktOfp; _cClearing: comp): double;
  #doc
  Сумма Фоп по ФОБ в валюте ФОБ (валюта - на дату ФОБ), с КАУ ( сумма Фоп конвертации уч-тся только для ФОБ конвертации).<br>
  #end
  Function AktOfp_GetSummaFop_by_Kau(bufAktOFP: TAktOfp; _wKau: word): double;
  #doc
  Сумма ФОБ, которую можно включить во взаимозачет.<br>
  #end
  Function AktOfp_RestSummaToVzaim(bufAktOfp: TAktOfp): double;
  #doc
  Факт по ФОБ - оплаченные хоз.документы.<br>
  #end
  Function AktOfp_GetFact(     _cAktOFP: comp;
                                _Period: word;
                                  _cVal: comp;
                           var _sumFact: double;
                          var _hozSumma: double
                                      ): boolean;
  #doc
  Часть факта ФОБ, которая оплачена в закрытом периоде (в регистре "факт").<br>
  #end
  Function AktOfp_GetClosedFact(_cAktOfp: comp; _cVal: comp): double;

  ///////////////////// ИЗМЕНЕНИЕ АТРИБУТОВ ////////////////////////////////////
  #doc
  Спрашивает новую дату.<br>
  #end
  Function AktOfp_DateGet(_cAktOFP: comp; var NewDate: date): boolean;
  #doc
  Изменим если надо дату Фоп у ФОБ.<br>
  #end
  Procedure AktOfp_DateSetAfter( _cAktOFP: comp;
                                 _OldDate: date;
                                 _NewDate: date;
                                _CheckFop: boolean);
  #doc
  Изменение даты ФОБ.<br>
  #end
  Function AktOfp_DateSet( _cAktOFP: comp;
                           _NewDate: date;
                          _CheckFop: boolean
                                  ): boolean;
  #doc
  Изменение статуса привязанных финопераций.<br>
  #end
  Function AktOfp_SetStatusAfter(bufAktOfp: TAktOfp; _OldStatus: word): boolean;
  #doc
  Изменение статуса у ФОБ (без подтверждения).<br>
  #end
  Function AktOfp_SetStatusP(var _pAktOFP: #TAktOFPX; _NewStatus: word): boolean;
  #doc
  То же, но по ссылке [расширение функционала].<br>
  #end
  Function AktOfp_SetStatus_Eval_01(_cAktOFP: comp; _NewStatus: word; _NewcNote: TnRec): boolean;
  #doc
  То же, но по ссылке.<br>
  #end
  Function AktOfp_SetStatus(_cAktOFP: comp; _NewStatus: word): boolean;
  #doc
  Изменение приоритета ФОБ.<br>
  #end
  Function AktOfp_SetPrior(var _bufAktOFP: TAktOfp; _prior: word; _wMode: word): word;

  /////////////////// ПЕРЕНОС В АРХИВ/ИЗ АРХИВА ////////////////////////////////
  #doc
  Перенос ФОБ и его Фоп в архив.<br>
  #end
  Function AktOfp_ToArchive(_cAktOFP: comp): boolean;
  #doc
  Перенос ФОБ и его Фоп из архива на указанную дату.<br>
  #end
  Function AktOfp_FromArchive(_cAktOFP: comp; _NewDate: date): boolean;

End;

//------------------------------------------------------------------------------
VipInterface iOfpOutAktOfp implements objOfpOutAktOfp
  Licensed(Free);
Public:
  Constructor Init;
  Destructor  Done;
End;
//------------------------------------------------------------------------------
#end //__AOFPOUTAKTOFP_VIH__
