//------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Галактика 5.80 - модуль "Платежный календарь"
// Функции для таблицы sStBud с разноской по статьям бюджета
//------------------------------------------------------------------------------

#ifndef __AOFPBUDMEM_VIH__
#define __AOFPBUDMEM_VIH__
//**************************************************************
#ifdef ComponentVersion
#component "F_OFP"
#end
//**************************************************************

// все документы для привязки
Table struct sStBudDoc
(
    nRec   : comp
  , cgKat0 : word
  , cRec0  : comp
  , cgKat1 : word
  , cRec1  : comp
  , cVal   : comp
  , Attr   : word
)
with index
(
    byNRec = NRec (unique, surrogate)
  , byKat0 = cgKat0 + cRec0
  , byKat1 = cgKat1 + cRec1
  , byKat2 = Attr + cgKat1 + cRec1
)
;

// временная привязка к статьям
Table struct sStBud
(
    nRec         : comp
  , cNode        : comp   // sStBud for cgKat0, cRec0
  , isDel        : word   // удаленная запись

  , cgKat1       : word
  , cRec1        : comp
  , cSpAttr1     : comp   // текущий документ (который редактируем)
  , cSpAttr0     : comp   // базовый документ (если есть) - SpAttr.nRec

  , cStBud       : comp   // статья
  , cHashAn      : comp   // аналитика по статье
  , cFpCO        : comp   // ЦО
  , cVal         : comp   // валюта из документа
  , Sum1         : tSumma
  , Proc1        : tSumma
  , Sum_Date     : date
  , Sum_FPPlan   : double
  , Sum_FPFact   : double
  , Sum_FPRezerv : double
  , Sum_FPPlanByAn   : double
  , Sum_FPFactByAn   : double
  , Sum_FPRezervByAn : double
  , Attr    : word
)
with index
(
    byNRec    = NRec (unique, surrogate)
  , byDel1    = isDel + cgKat1 + cRec1 + cSpAttr1
  , byRec0    = isDel + cgKat1 + cRec1 + cSpAttr0
  , byStBud   = isDel + cgKat1 + cRec1 + cStBud
  , byNode    = isDel + cNode
  , bySpAttr0 = isDel + cSpAttr0
  , byKat2    = isDel +  Attr + cgKat1 + cRec1 + cStBud
  , ByStBud0  = cStBud + cHashAn + cFpCO
)
;

type TsStBud = record as Table sStBud;

#include aBudByDoc.vih // TDocForBudget
// Бюджет по документу
#doc
Функции для таблицы sStBud с разноской по статьям бюджета.<br>
#end
Private ObjInterface objOfpBudMem;

  #doc
  Запомнить валюту документа.<br>
  #end
  Function sStBudDoc_SetVal(_cgKat1: word; _cRec1: comp; _cVal: comp): boolean;
  #doc
  Валюта документа.<br>
  #end
  Function sStBudDoc_GetVal(_cgKat1: word; _cRec1: comp): comp;
  #doc
  Очистка данных.<br>
  #end
  Function sStBud_ClearAllData: boolean;
  #doc
  Начало загрузки.<br>
  #end
  Function sStBud_BeforeLoad: boolean;
  #doc
  Загружаем разноску по статьям - в таблицу в памяти.<br>
  #end
  Function sStBud_Load(rDoc: TDocForBudget): boolean;
  #doc
  Выгружаем разноску по статьям - из таблицы в памяти.<br>
  #end
  Function sStBud_UnLoad(_ClearOldData: boolean): boolean;
  /////////////////// ВЫБОР И ОБНОВЛЕНИЕ ЗАПИСЕЙ ///////////////////////////////
  #doc
  Пересчет суммы и процента документа по всем статьям
  с учетом входимости и приоритета.<br>
  #end
  public Function sStBud_CalcSumAndProc_Eval_01(     _cgKat     : word;
                                                     _cRec      : comp;
                                                 var _BegPos    : byte;
                                                 var _byProc    : byte;
                                                 var _restSumma : tSumma;
                                                 var _restProc  : tSumma
                                                               ): boolean;
  #doc
  Пересчет суммы и процента документа по всем статьям.<br>
  #end
  Procedure sStBud_CalcSumAndProc(_cgKat: word; _cRec: comp; var _restSumma: tSumma; var _restProc: tSumma);
  #doc
  Чтобы процент не был меньше 0 или больше 100.<br>
  #end
  Function GetRestProc(_proc: tSumma): tSumma;
  #doc
  Пересчитаем остаток к распрeделению.<br>
  #end
  Procedure RecalcRest(rDoc: TDocForBudget; var _BegPos: byte; var _byProc: byte; var _restSumma: tSumma; var _restProc: tSumma);

  #doc
  Сумма по статьям подчиненных документов.<br>
  #end
  Procedure sStBud_GetAllSums(_cStBudNode: comp; _cVal: comp; _dDoc: date; var _sumSub: tSumma; var _sumBase: tSumma);
  #doc
  Добавление разноски к подчиненным документам.<br>
  #end
  Function sStBud_SubAddStBud( _cgKat0  : word;
                               _cRec0   : comp;
                               _cNode   : comp;
                               _cHashAn : comp;
                               _cStBud  : comp;
                               _attr    : word;
                               _sum1    : tSumma;
                               _proc1   : tSumma;
                               _dDoc    : date;
                               _cVal    : comp
                                       ): boolean;
  #doc
  Обновление полей у подчиненных документов.<br>
  #end
  Function sStBud_SubUpdateByBase(recsStBud: TsStBud): boolean;
  #doc
  Есть подчиненная привязка.<br>
  #end
  Function sStBud_ExistsSub(_csStBud: comp): boolean;
  #doc
  Обновление хэша аналитик в привязке.<br>
  #end
  Function sStBud_UpdateHashAn(_csStBud: comp; _cGrAn: comp; _CAnBud: longint): boolean;
  #doc
  Обновление статьи бюджета в привязке
  #end
  Function sStBud_UpdateStBud(_csStBud: comp; _cStBud: comp; rDoc: TDocForBudget): boolean;
  #doc
  Выбор ЦО.<br>
  #end
  Function PickCO(_csStBud: comp; var rDoc: TDocForBudget): boolean;
  #doc
  Выбор статей с добавлением записей в таблицу в памяти.<br>
  #end
  Function PickStBud(_csStBud: comp; _cStBud: comp; rDoc: TDocForBudget; _restSumma, _restProc: tSumma): longint;
  #doc
  Изменение ЦО статей бюджета.<br>
  #end
  Function ChangeCO(_csStBud: comp; NewCO: comp; var rDoc: TDocForBudget): boolean;

  Procedure SeeTestWindow(_sTitle: string);

End;

VipInterface viOfpBudMem implements objOfpBudMem
#Licensed_PK // На случай если будем возвращаться к прежней концепции лицензирования
;
//**************************************************************
#end //__AOFPBUDMEM_VIH__
