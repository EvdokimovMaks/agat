//------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Галактика 5.80 - модуль "Платежный календарь"
// Атрибуты
//------------------------------------------------------------------------------

#include aSpAttrM.vpp // sProcBudget - таблица в памяти
type TSpAttr   = record as Table fpSpAttr;

#ifndef  __ASPATTR_VIH__
#define  __ASPATTR_VIH__

//******************************************************************************
#ifdef ComponentVersion
#component "F_OFP"
#end
//******************************************************************************

#doc
Атрибуты (можно цеплять к записям любой таблицы).<br>
#end
ObjInterface objSpAttr;

  /////////////////// СОЗДАНИЕ/ОБНОВЛЕНИЕ/УДАЛЕНИЕ /////////////////////////////
  #doc
  Изменение атрибута (типа ссылка).<br>
  #end
  Function SpAttr_Update(_wCode: word; _cRec: comp; _cgGrKau: word; _cMean: comp): boolean;
  #doc
  Удаление атрибутов (при удалении осн.документа).<br>
  #end
  Function SpAttr_Delete(_wCode: word; _cRec: comp): boolean;

  ////////////////// ПРОВЕРКА/ПЕРЕМЕЩЕНИЕ/КОПИРОВАНИЕ //////////////////////////
  #doc
  Существует ли атрибут с указанным nRec.<br>
  #end
  Function SpAttr_ExistsRec(_wCode: word; _cRec: comp; _wKau: word; _cKau: comp): boolean;
  #doc
  Существует ли атрибут вообще.<br>
  #end
  Function SpAttr_Exists(_wCode: word; _cRec: comp; _cgGrKau: word): boolean;
  #doc
  Заполняет маркер процентами (по статьям бюджета).<br>
  #end
  Function SpAttr_GetToMarker(_wCode: word; _cRec: comp; _wKau: word; var _marker: TPtr): boolean;
  #doc
  Для сумм, заданных явно (ведущая сумма), пересчитать при разделении.<br>
  #end
  Function ReSetSumKoef(_cgKat: word; _cRec: comp; _Sum, _OldSum: double): boolean;
  #doc
  Пропорциональный пересчет всех сумм.<br>
  #end
  Function ReCalcByKoef(_cgKat: word; _cRec: comp; _Sum, _OldSum: double; _cFpCO: comp = 0): boolean;
  #doc
  Обновляет ЦО в разноске.<br>
  #end
  Function SpAttr_SetFpCO(_cgKat: word; _cRec: comp; _cFpCO: comp): boolean;
  #doc
  Переподвязка всех атрибутов к новой записи того же каталога.<br>
  #end
  Function SpAttr_MoveAll(_CgKat: word; _OldcRec: comp; _NewcRec: comp): boolean;
  #doc
  Копирование всех атрибутов и привязка к новой записи.<br>
  #end
  Function SpAttr_CopyAll(_OldCgKat: word; _OldcRec: comp; _NewCgKat: word; _NewcRec: comp): boolean;
  #doc
  Синхронизация всех атрибутов по сумме, проценту, приоритету.<br>
  #end
  Function SpAttr_SinchAll(_OldCgKat: word; _OldcRec: comp; _NewCgKat: word; _NewcRec: comp): boolean;

  /////////////////// ПРИВЯЗКА К СТАТЬЯМ БЮДЖЕТА ///////////////////////////////
  #doc
  Заполнение SpAttr суммой разноски по статье.<br>
  #end
  Procedure SpAttr_ProcSet(var bufSumma: TSpAttr;
                                 _cNode: comp;
                                 _cFpCO: comp;
                                _cStBud: comp;
                                 _wCode: word;
                                  _cRec: comp;
                                  _Attr: word;
                                 _Summa: double;
                                  _Proc: double);
  #doc
  Обновление процентов и сумм, распределенных по статьям.<br>
  #end
  Function SpAttr_ProcRecalc(_cDoc: comp; _cgKat: word; _FullSum: double): boolean;
  #doc
  Получить сумму родительского документа.<br>
  #end
  Function GetParentSumma(_cgKat: word; _cRec: TnRec): double;
  #doc
  Пересчет суммы и процента по всем статьям.<br>
  #end
  Function SpAttr_CalcSumAndProc(_cgKat: word; _cRec: comp; var _BegPos: byte; var _restSumma: double; var _restProc: double): boolean;
  #doc
  Сложный процент привести к простому.<br>
  #end
  Function MultiPrc2Prc(_cfpSpAttr: comp): double;
  #doc
  Хэш аналитик по статье.<br>
  #end
  Function SpAttr_GetHashAn(_cSpAttr: comp): comp;
  #doc
  Заполняет маркер процентами (по статьям бюджета).<br>
  #end
  Function SpAttr_ProcGet(_wCode: word; _cRec: comp): boolean;
  #doc
  Привязка статьи к документу на ук.проценты с учтеом входимости, приоритета
  после вызова надо делать SpAttr_AttachAnalitic.<br>
  #end
  Function SpAttr_ProcIns_Eval_01( _cNode: comp;
                                   _cFpCO: comp;
                                  _cStBud: comp;
                                    _wKat: word;
                                    _cRec: comp;
                                    _Attr: word;
                                   _Summa: double;
                                    _Proc: double
                                        ): comp;
  #doc
  Привязка статьи к документу на ук.проценты <br>
  после вызова надо делать SpAttr_AttachAnalitic.<br>
  #end
  Function SpAttr_ProcIns( _cNode: comp;
                           _cFpCO: comp;
                          _cStBud: comp;
                            _wKat: word;
                            _cRec: comp;
                           _Summa: double;
                            _Proc: double
                                ): comp;
  #doc
  При изменении статьи - привязка статьи к Хэшу аналитик.<br>
  #end
  Function SpAttr_AttachAnalitic(_cSpAttr : comp; _cHash: comp): boolean;
  #doc
  Корректируем аналитику по статье.<br>
  #end
  Function SpAttr_CorrectAnalit(_cSpAttr: comp; var _cAnForCheck: TPtr): boolean;
  #doc
  Устанавливает значение аналитики бюджетирования.<br>
  #end
  Function SpAttr_SetAn(_wCode: word; _cRec: comp; _wKau: word; _cKau: comp): boolean;
  #doc
  Устанавливает значение аналитики бюджетирования спецификации.<br>
  #end
  Function SpAttr_SetAnSp(_cSpAttr: comp; _wKau: word; _cKau: comp): boolean;
  #doc
  Устанавливает значение основных аналитик бюджетирования
  #end
  Function SpAttr_SetAnBase(_wCode: word; _cRec: comp; _cKau1, _cKau2, _cKau3, _cKau4, _cKau5, _cKau6, _cKau7, _cKau8: comp): boolean;
  #doc
  Объединение двух разносок.<br>
  #end
  Function SpAttr_ProcConcat(_cgKat: word; _cRec1: comp; _cRec2: comp): boolean;
  #doc
  Доступны ли все статьи бюджета по данному документу.<br>
  #end
  Function SpAttr_AreAvailable(_cgKat: word; _cRec: comp; _NeedMessage: word): boolean;

End;

VipInterface iSpAttr implements objSpAttr
  Licensed(Free);
//******************************************************************************
#end // __ASPATTR_VIH__
