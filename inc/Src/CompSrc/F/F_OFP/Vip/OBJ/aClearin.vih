//------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Галактика 5.80 - модуль "Платежный календарь"
// Финансовые операции
//------------------------------------------------------------------------------

#ifndef __ACLEARING_VIH__
#define __ACLEARING_VIH__
//******************************************************************************
#ifdef ComponentVersion
#component "F_OFP"
#end

#include aErrorMng.obj

#doc
Финансовые операции.<br>
#end
Private ObjInterface objClearing;

  #doc
  Освобождение ссылок на объекты, провоцирующие циклические зависимости объектов.<br>
  #end
  Function FreeCrossVipRef : boolean;

  ///////////////////// СВЯЗЬ С ФИНПЛАНИРОВАНИЕМ ///////////////////////////////
  #doc
  Обновление SoprHoz (для ТФО - разноски по статьям бюджета).<br>
  #end
  Function Clearing_MakeSoprHoz( bufClearing: TClearing): boolean;
  #doc
  Просмотр бюджета по Фоп.<br>
  #end
  Function Clearing_SeeBudget(bufClearing: TClearing; bufAktOfp: TAktOfp): boolean;
  #doc
  Аналитика только данного документа.<br>
  #end
  Function Clearing_GetDocAnaliticByBuf(bufClearing: TClearing; bufAktOfp: TAktOfp; var _contId: TPtr): boolean;
  #doc
  Заполнение контейнера аналитик по буферу ФО (связана с предыдущей).<br>
  #end
  Function Clearing_GetAnaliticByBuf(bufClearing: TClearing; bufAktOfp: TAktOfp; var _contId: TPtr): boolean;

  /////////////////////// РАЗЛИЧНЫЕ ПРОВЕРКИ ///////////////////////////////////
  #doc
  Оплачена ли Фоп.<br>
  #end
  Function Clearing_isRealized(bufClearing: TClearing): boolean;
  #doc
  Влияет ли Фоп на остатки ПС  - важная ф-ция.<br>
  #end
  Function Clearing_HasAffectOnSaldR(bufClearing: TClearing): boolean;
  #doc
  Влияет ли Фоп на факт ФО - важная ф-ция.<br>
  #end
  Function Clearing_HasAffectOnFactFO(bufClearing: TClearing): boolean;
  #doc
  Есть ли у Фоп AktPerf (привязан плат док).<br>
  #end
  Function Clearing_HasAktPerf(bufClearing: TClearing): boolean;
  #doc
  Есть ли у Фоп AktPerf с датой, отличной от указанной.<br>
  #end
  Function Clearing_HasAktPerfWithOtherDate(bufClearing: TClearing; _date: date): boolean;
  #doc
  Есть ли у Фоп AktPerf.<br>
  #end
  Function Clearing_CheckHasAktPerf(bufClearing: TClearing): boolean;
  #doc
  Исп.Фоп нельзя удалять.<br>
  #end
  Function Clearing_CheckDelete(bufClearing: TClearing): boolean;
  #doc
  Конвертация и не связанная Фоп.<br>
  #end
  Function Clearing_IsConv1(_ClearType: word; _Direct: word): boolean;
  #doc
  Конвертация и связанная Фоп.<br>
  #end
  Function Clearing_IsConv2(_ClearType: word; _Direct: word): boolean;
  #doc
  Делается кассовый документ по Фоп2 конвертации.<br>
  #end
  Function Clearing_isKassaBySecondFop(_ClearType: word; _TiDkGal: word): boolean;
  #doc
  Конвертация из валюты в валюту.<br>
  #end
  Function Clearing_IsConvValToVal(_MeanType1: word; _MeanType2: word): boolean;
  #doc
  Взаимозачет (основная или привязанная).<br>
  #end
  Function Clearing_IsVzaim(_ClearType: word): boolean;
  #doc
  Фоп взаимозачета (мастера) и есть неактивная привязанная Фоп.<br>
  #end
  Function Clearing_CheckVzaimAndHasInactiveFop(bufClearing: TClearing; _NeedMessage: boolean): boolean;
  #doc
  Нераспределенная сумма.<br>
  #end
  Function Clearing_GetFreeHozSumma(bufClearing: TClearing): double;
  #doc
  Есть ли у Фоп нераспределенная сумма.<br>
  #end
  Function Clearing_HasFreeHozSumma(bufClearing: TClearing): boolean;
  #doc
  Есть ли еще сумма к распределению.<br>
  #end
  Function Clearing_CheckFreeHozSumma(bufClearing: TClearing): boolean;
  #doc
  Сумма аванса.<br>
  #end
  Function Clearing_GetAvans(bufClearing: TClearing): double;
  #doc
  Статус ФО 'исполняемый' и по Фоп нет исполнения - можно менять статус Фоп.<br>
  #end
  Function Clearing_CanSetStatus(_cClearing: comp; _AktStatus: word): boolean;
  #doc
  То же, но с сообщениями.<br>
  #end
  Function Clearing_CheckCanSetStatus(bufClearing: TClearing; _AktStatus: word): boolean;
  #doc
  Выбор ПС (с сообщением или нет).<br>
  #end
  Function Clearing_PickPlatMean(_MeanType: word; var _cPlatMean: comp; _wMessage: word): boolean;
  #doc
  Выбор ПС, типа документа (с сообщением или нет).<br>
  #end
  Function Clearing_PickPlatMeanCheckDocType(_ClearType, _MeanType, _Direct, _TiDkGal: word; var _cPlatMean: comp; _wMessage: word): boolean;
  #doc
  Проверка соответствия валюты ФОП и ПС.<br>
  #end
  Function Clearing_CheckValPlatMean(_cVal: comp; _ClearType: word; _MeanType: word; _cPlatMean: comp; _NeedMess: boolean = false): boolean;
  #doc
  Удаляет из маркера ссылки на Фоп с ук.моделью.<br>
  #end
  Function Clearing_MarkerWithoutModel(_markFop: TPtr; _cModel: comp): boolean;
  #doc
  Можно ли переносить Фоп на ук.дату.<br>
  #end
  Function Clearing_CanMoveToDay(_cClearing: comp; _OldDate: date; _NewDate: date; _isMessage: word): boolean;
  #doc
  Корректно ли поле "ПС".<br>
  #end
  Function Clearing_PsNeedChange(_MeanType: word; _cPlatMean: comp): boolean;

  /////////////////////// РАЗЛИЧНЫЕ АТРИБУТЫ ///////////////////////////////////
  #doc
  Распаковка ПС.<br>
  #end
  Function Clearing_UnpackMeanType(_packed: word): word;
  #doc
  Распаковка направления.<br>
  #end
  Function Clearing_UnpackDirect(_Packed: word): word;
  #doc
  Модель для Фоп.<br>
  #end
  Function Clearing_GetModelByFO(bufClearing: TClearing; var _retModel: comp): boolean;
  #doc
  Соответствие платежного средства типу платежного документа.<br>
  #end
  Function PlatMean_isInMeanType(_cPlatMean: comp; _MeanType: word): boolean;
  #doc
  Соответствие типа документа типу платежного средства.<br>
  #end
  Function TidkGal_isInMeanType(_TiDkGal: word; _MeanType: word): boolean;
  #doc
  TidkGal входит в один из типов ПС, используемых в ПК.<br>
  #end
  Function TidkGal_isInAnyMeanType(_TiDkGal: word): boolean;
  #doc
  Можно ли к Фоп привязать ук.тип документа.<br>
  #end
  Function Clearing_CanTiDkGal(_TiDkGal: word; _Direct: word; _ClearType: word; _MeanType: word): boolean;
  #doc
  Тип ПС по Валюте (для Фоп конвертации).<br>
  #end
  Function Clearing_MeanTypeByVal(_cVal: comp): word;
  #doc
  Тип ПС по Типу по валюте (для Фоп по ФО).<br>
  #end
  Function Clearing_MeanTypeByReason(_cDocReq: comp; _defTipMoney: word; _ClearingType: word): word;
  #doc
  Есть ли запись с таким ФО в качестве задолженности (т.е.ФО уже привязано).<br>
  #end
  Function Clearing_FindVzaimFO(_Model: comp; _Clearing: comp; _Org: comp; _AktOFP: comp): boolean;
  #doc
  Коэффициент Фоп для преобр. в валюту ФО.<br>
  #end
  Function Clearing_GetValKoef(_Summa, _SumVal: double): double;
  #doc
  Возвращает Summa при изменении SumVal.<br>
  #end
  Function Clearing_SummaBySumVal(_SumVal, _DopProc: double; _cAktVal, _cClearVal: comp; _Curse: tSumma; _dCurse: date): double;
  #doc
  Возвращает SummaVal при изменении Summa.<br>
  #end
  Function Clearing_SumValBySumma(_Summa, _DopProc: double; _cAktVal, _cClearVal: comp; _Curse: tSumma; _dCurse: date): double;
  #doc
  Коэффициент Фоп для преобр. в валюту ФО.<br>
  #end
  Function Clearing_GetFactOneInValFO(_SumPerf: double; _KoefVal: double): double;
  #doc
  Тип ПС.<br>
  #end
  Function Clearing_GetMeanType(bufSoprHoz: TSoprHoz): word;
  #doc
  Платежное средство Фоп.<br>
  #end
  Function Clearing_GetPlatMean(bufSoprHoz: TSoprHoz): comp;
  #doc
  Тип операции для Фоп конвертации.<br>
  #end
  Function Clearing_GetConvertType(_mt1: word; _mt2: word): word;
  #doc
  Возвращает тип документа по типу Фоп, типу ПС, направлению и валюте.<br>
  #end
  Function Clearing_GetDocType(_CleaType: word; _MeanType: word; _MeanType2: word; _Direct: word; _cVal: comp; _cPlatMean: comp): word;
  #doc
  Тип документа - по старой схеме (исп.при формировании документов по Фоп конвертации).<br>
  #end
  public Function Clearing_GetDocTypeByBufOld(bufClearing: TClearing): word;
  #doc
  Тип документа - по новой схеме.<br>
  #end
  Function Clearing_GetDocTypeByBuf(bufClearing: TClearing): word;
  #doc
  Возвращает тип документа пользователя.<br>
  #end
  Function Clearing_GetTiDkUser(bufClearing: TClearing; _TiDkGal: word): word;
  #doc
  Возвращает направление для BaseFin.<br>
  #end
  Function Clearing_GetDirBaseFin(bufClearing: TClearing; _TiDkGal: word): word;

  ///////////////////// ПОЛЕ ТИП - НАСТРОЙКА //////////////////////////
  #doc
  Настройка "Тип документа по умолчанию" - очистка.<br>
  #end
  Function Clearing_DocTuneClear: boolean;
  #doc
  Настройка "Тип документа по умолчанию" - проверка заполненности.<br>
  #end
  Function Clearing_DocTuneCheckFill: boolean;
  #doc
  Тип документа по умолчанию по финоперации.<br>
  #end
  Function Clearing_DocTuneGet(_Direct, _ClearType, _MeanType, _MeanType2: word; var _retTiDkGal: word; var _retPlatMean: comp): boolean;
  #doc
  Тип документа по буферу Фоп, типу связанной Фоп.<br>
  #end
  Function Clearing_DocTuneGetByBuf(bufClearing: TClearing; _MeanType2: word; var cPlatMean: comp): word;
  #doc
  Тип документа - с учетом исполнения.<br>
  #end
  Function Clearing_DocTuneGetByPerf(bufClearing: TClearing): word;
  #doc
  Валюта платежного средства.<br>
  #end
  Function Clearing_GetValByPlatMean(_MeanType: word; _cPlatMean: comp; _DefVal: comp): comp;

  /////////////////////// ПОЛЕ ТИП - РАБОТА ///////////////////////////
  #doc
  Тип документа формируется из ПК (попадает в настройку "формируемые только из ПК").<br>
  #end
  Function PlatDoc_FormInOfp(_TiDkGal: word): boolean;
  #doc
  Типы документов, формируемые из ПК (попадают в настройку "формируемые только из ПК").<br>
  #end
  Function Clearing_DocGetTiDkGalsFormInOfp(_marker: TPtr): boolean;
  #doc
  Типы документов, доступные в настройке "формируемые только из ПК".<br>
  #end
  Function Clearing_DocGetOnlyFromPK(_marker: TPtr): boolean;
  #doc
  Типы документов, доступные для привязки к ФО/Фоп.<br>
  #end
  Function Clearing_DocGetTiDkGals(_marker: TPtr; _MakeByClearing: boolean; _Direct: word; _ClearType: word; _MeanType: word): boolean;
  #doc
  Соответствие типа документа валюте.<br>
  #end
  Function Clearing_DocCheckVal(_cVal: comp; _TiDkGal: word): word;
  #doc
  Выбор типа документа из тех, которые доступны для ук.ПС.<br>
  #end
  Function Clearing_DocPickByPs(_ClearType, _MeanType, _Direct: word; var _retTiDkGal: word; var _retPlatMean: comp): boolean;

  /////////////////////// РАЗЛИЧНЫЕ НАЗВАНИЯ ///////////////////////////////////
  #doc
  Ошибки - по типу документа.<br>
  #end
  Function Clearing_GetDocTypeMessage(_DocType: word): string;

  #doc
  Название типа операции для Фоп конвертации.<br>
  #end
  Function Clearing_GetConvertName(_mt1: word; _mt2: word): string;
  #doc
  Название сортировки.<br>
  #end
  Function Clearing_GetSortName(bufClearing: TClearing): string;
  #doc
  Название финоперации.<br>
  #end
  Function Clearing_GetName(_ClearType: word): string;
  #doc
  Название финоперации из буфера.<br>
  #end
  Function Clearing_GetNameByBuf(bufClearing: TClearing): string;
  Function Clearing_GetNameByCT(_ClearType: word; _dDoc: date): string;
  Function Clearing_GetNameRec(_cClearing: comp): string;
  Function Clearing_GetNameWhithFO(_cClearing: comp): string;

  #doc
  Тип ПС (короткое или полное имя).<br>
  #end
  Function Clearing_GetMeanTypeName(_MeanType: word; _isShort: boolean): string;
  #doc
  Название статуса.<br>
  #end
  Function Clearing_GetStatusName(_Status: word): string;

  //////////////////// РАССЧИТЫВАЕМЫЕ АТРИБУТЫ /////////////////////////////////
  #doc
  Факт по ФОп - сумма по хоз.документам (в валюте Фоп).<br>
  #end
  Function Clearing_GetFact(_Clearing: comp; var _sumFact: double; var _hozSumma: double): word;
  #doc
  Тип оплаченности ФОп.<br>
  #end
  Function Clearing_GetSummaOplSH(_cClearing: TnRec ): word;
  #doc
  Факт в валюте ФО (по курсу ФОБ).<br>
  #end
  Function Clearing_GetFactByCurse(bufClearing: TClearing; bufAktOfp: TAktOfp; _Period: word; var _sumFact: double; var _hozSumma: double): boolean;
  #doc
  Факт в валюте ФО (по курсу ФОП).<br>
  #end
  Function Clearing_GetFactByClearing(bufClearing: TClearing; bufAktOfp: TAktOfp; _Period: word; var _sumFact: double; var _hozSumma: double): boolean;
  #doc
  Часть факта ФО, которая оплачена в закрытом периоде (в регистре "факт").<br>
  #end
  Function Clearing_GetClosedFact(bufClearing: TClearing): double;

  /////////////////////// ЗАПОЛНЕНИЕ БУФЕРА ////////////////////////////////////
  #doc
  Сумма Фоп по буферу ФО, Фоп.<br>
  #end
  Procedure Clearing_SetSummaToBuf(_Summa: double; bufAktOfp: type$AktOfp; var bufClearing: type$Clearing);
  #doc
  ФОП (_HandMade - вручную создается).<br>
  #end
  Function Clearing_Fill(var bufClearing: TClearing; _nRecClearing: comp; bufAktOfp: TAktOfp; _HandMade: boolean): boolean;
  #doc
  ФОП на основании ФОБ и ХО (автоматически на суммы ФОБ).<br>
  #end
  Function Clearing_FillByFOandSH(var bufClearing: TClearing; _nRecClearing: comp; bufAktOfp: TAktOfp; bufSoprHoz: TSoprHoz): boolean;
  #doc
  Заполнение буфера ФОп по ХО.<br>
  #end
  Function FillFOpBySH(_cSoprHoz: comp; var _pClearing: #TClearingX): boolean;
  #doc
  ФОп конвертации.<br>
  #end
  Procedure Clearing_FillConvert(var bufClearing2: TClearing; bufClearing: TClearing);
  #doc
  ФОп взаимозачета.<br>
  #end
  Procedure Clearing_FillVzaim(var bufClearing: TClearing; bufAktOFP2: TAktOfp; bufAktOFP: TAktOfp; var Summ, SumVal: double);

  //////////////////////// СОЗДАНИЕ ЗАПИСИ /////////////////////////////////////
  #doc
  Сразу после добавления любой записи.<br>
  #end
  Function Clearing_AfterInsert(bufClearing : TClearing): boolean;
  #doc
  Добавляет Фоп и обновляет период активных Фоп у ФО.<br>
  #end
  Function Clearing_Insert(var _pClearing : #TClearingX ): comp;
  #doc
  Создает Фоп.<br>
  #end
  Function Clearing_Create(bufAktOfp: TAktOfp): comp;

  /////////////////////// ОБНОВЛЕНИЕ ЗАПИСИ ////////////////////////////////////
  #doc
  Обновление Фоп.<br>
  #end
  Function Clearing_UpdateR(var _pClearing: #TClearingX; bufOld: TClearing): comp;
  #doc
  То же, но предварительно узнаем старый буфер.<br>
  #end
  Function Clearing_UpdateP(_pClearing: type$p_Clearing; _cClearing: comp): comp;
  #doc
  Обновление Фоп при обновлении ФО по ДО.<br>
  #end
  Function Clearing_UpdateByBase(bufAktOfp: TAktOfp): boolean;
  #doc
  обновление Фоп при обновлении ФОБ по реестру
  #end
  Function Clearing_UpdateByReestr(bufAktOfp: TAktOfp): boolean;
  #doc
  Обновление Фоп при обновлении ФО по ДО.<br>
  #end
  Function Clearing_UpdateByFO(bufAktOfp: TAktOfp): boolean;
  #doc
  Установить взаимосвязь между ФОП конвертации.<br>
  #end
  Function Clearing_SetConv(_cClearing, _cClearingConv: comp): boolean;
  #doc
  Разделение Фоп.<br>
  #end
  Function Clearing_OpDivision(_cClearing: comp; var _NewSum: TSumma; _NeedSum: boolean; _isMessage: word): comp;
  #doc
  Пересчет факта ук-ой Фоп.<br>
  #end
  Function Clearing_RecountFact(_cClearing: comp): boolean;
  #doc
  Привязать авансовую ФОП.<br>
  #end
  Function Clearing_LinkAvans(_cClearingAvans, _cClearingFact: comp; var _NeedChangeFact: boolean; _NeedMessage: boolean): boolean;
  #doc
  Привязать авансовую ФОП (про привязке ДО).<br>
  #end
  Function Clearing_LinkAvansOut(_cClearingAvans, _cClearingFact: comp): boolean;
  #doc
  Привязать авансовую ФОП (маркер).<br>
  #end
  Function Clearing_LinkMarkAvans(_markAvans: TPtr; _cClearingFact: comp; _NeedMessage: boolean): boolean;
  #doc
  Отвязать авансовую ФОП.<br>
  #end
  Function Clearing_UnlinkAvans(_cClearingAvans: comp; _NeedMessage: boolean): boolean;
  #doc
  Отвязать авансовую ФОП(при отвязке ДО).<br>
  #end
  Function Clearing_UnlinkAvansOut(_cClearingAvans: comp; _NeedChangeSummFact: boolean): boolean;

  //////////////////////// УДАЛЕНИЕ ЗАПИСИ /////////////////////////////////////
  #doc
  Удаляет подвязанные к Фоп Фоп (взаимозачет, конвертация).<br>
  #end
  Function Clearing_DeleteClearings(_cClearing: comp; _NeedUpdate : boolean): boolean;
  #doc
  Удаление Фоп и подвязанных к ней.<br>
  #end
  Function Clearing_DeleteP(_pClearing: TPClearing; _NeedUpdate : boolean): boolean;
  #doc
  Удаление Фоп по ссылке, пересчитывая Остатки и Факт.<br>
  #end
  Function Clearing_Delete(_cClearing: comp): boolean;

  ///////////////////// ОБНОВЛЕНИЕ ПО SOPRHOZ //////////////////////////////////
  #doc
  Инфо для Фоп из SoprHoz (_NeedCheck - с проверкой).<br>
  #end
  Function Clearing_GetInfoBySoprHozBuffer(bufSoprHoz: TSoprHoz; var rClearInfo: TClearInfo; _NeedCheck: boolean): boolean;
  #doc
  По обязательству и SoprHoz создает финоперацию (_NeedCheck - с проверкой).<br>
  #end
  Function Clearing_BySoprHoz(_cAktOFP: comp; _cSoprHoz: comp; _NeedCheck: boolean): comp;
  #doc
  Поиск Фоп по ФО и буферу SoprHoz.<br>
  #end
  Function Clearing_FindByFOandSHBuf(_cAktOfp: comp; bufSoprHoz: TSoprHoz; var _Summ: double): comp;
  #doc
  Поиск Фоп по ФО и SoprHoz.<br>
  #end
  Function Clearing_FindByFOandSH(_cAktOfp: comp; _cSoprHoz: comp; var _cClearing: comp; var _Summ: double): boolean;
  #doc
  После изменения даты Фоп на _NewDate (выдавать запросы или нет).<br>
  #end
  Function Clearing_DateSetAfter(_cAktOFP: comp; _cClearing: comp; _OldDate: date; _NewDate: date; _CheckFO: boolean): boolean;
  #doc
  Спрашивает новую дату.<br>
  #end
  Function Clearing_DateGet(_cClearing: comp; var NewDate: date): boolean;
  #doc
  Изменение даты финоперации с проверкой сумм в бюджете.<br>
  #end
  Function Clearing_SetDateWithBudgetCheck(_cClearing: comp; _NewDate: date): boolean;
  #doc
  Изменение даты финоперации.<br>
  #end
  Function Clearing_DateSet(_cClearing: comp; _NewDate: date; _CheckFO: boolean; _isMessage: word; _AnyWhere: boolean): boolean;
  #doc
  Спрашивает новое платежное средство.<br>
  #end
  Function Clearing_PsGet(_cClearing: comp; _Direct: word; var _NewMeanType: word; var _NewPlatMean: comp; var _NewTiDkGal: word): boolean;
  #doc
  Изменяет платежное средство у финоперации.<br>
  #end
  Function Clearing_PsSet(_cClearing: comp; _MeanType: word; _cPlatMean: comp; _TiDkGal: word): boolean;
  #doc
  Установка статуса ФОП (м б активной только для исполняемых ФО и закрытых).<br>
  #end
  Function Clearing_SetStatus(_cClearing: comp; _NewStatus: word; _CheckOldStatus: boolean = false): boolean;
  #doc
  Установка направления ФОП.<br>
  #end
  Function Clearing_SetDirect(rec: comp; NewDirect: word): boolean;
  #doc
  После изменения суммы Фоп изменим сумму Фоп2.<br>
  #end
  Function Clearing_OnChangeSumma(bufAktOfp: TAktOfp; bufClearing: TClearing; _wasChangeVal: boolean): boolean;
  #doc
  Изменение суммы Фоп.<br>
  #end
  Function Clearing_SetSumma(_cClearing: comp; _Summa: double): boolean;
  //////////////////////// РАЗЛИЧНЫЕ РАСЧЕТЫ ///////////////////////////////////
  #doc
  Изменение (увеличение или уменьшение) исполнения и факта Фоп.<br>
  #end
  Function Clearing_ChangeFact_Eval_01(     _cClearing    : comp;
                                            _SumPerf      : double;
                                            _dSoprHoz     : date;
                                            _direct       : word;
                                            _wMode        : word; // cgBit00 - _NeedUpdate cgBit01 - _Split
                                        var _cNewClearing : comp  // ссылка на новую ФОП
                                                         ): boolean;
  #doc
  Изменение (увеличение или уменьшение) исполнения и факта Фоп.<br>
  #end
  Function Clearing_ChangeFact( _cClearing : comp;
                                _SumPerf   : double;
                                _dSoprHoz  : date;
                                _direct    : word;
                                _wMode     : word  //cgBit00 - _NeedUpdate cgBit01 - _Split
                                          ): boolean;
  #doc
  Корректируется дата и сумма ФОП по исполнению
  #end
  Function Clearing_CorrectByAktPerf( _pClearing    : TPClearing; // Ссылка на ФОП
                                      _summa        : double;     // Сумма исполнения
                                      _dNewDate     : date;       // Новая дата
                                      _direct       : word;       // Направление
                                      _changeHozSum : boolean     // Изменять ли сумму по исполнению
                                                   ): boolean;

  #doc
  Проверка лимитов при оплате на сумму _SumFact (в момент закрытия или открытия Фоп).<br>
  #end
  Procedure Budget_DocLimitOnPaid(_cAktOfp: comp; _cClearing: comp; bufClearing: TClearing; _direct: word);
  #doc
  Проверка соответствия полей ХО и Фоп с изменением Фоп.<br>
  #end
  Function Clearing_CheckToSHChange(_cClearing: comp; bufSoprHoz: TSoprHoz; _cgMessage: word): boolean;
  #doc
  Проверка соответствия ПС SoprHoz'а и Фоп.<br>
  #end
  Function Clearing_CheckToSH(_pClearing: TPClearing; bufSoprHoz: TSoprHoz): boolean;

  ///////////////// ЗАКРЫТИЕ/ОТКРЫТИЕ/ПЕРЕМЕЩЕНИЕ В АРХИВ /////////////
  #doc
  Закрытие Фоп (когда закрыт день)<br>
  1) Фоп переносит на дату их оплаты (если она была позже?),<br>
  2) делит Фоп на две - ФАКТ и ПЛАН. (по какую дату закрываем)<br>
  .<br>
  #end
  Function Clearing_Close(_cClearing: comp; _EndDate: date): boolean;
  #doc
  Можно ли закрывать Фоп.<br>
  #end
  Function Clearing_CanBeClosed(bufClearing: TClearing): boolean;
  #doc
  Можно ли закрывать Фоп в указанном периоде.<br>
  #end
  Function Clearing_CanCloseInPeriod(_dBeg: date; _dEnd: date): boolean;
  #doc
  Перенос дат ФОП при закрытии периода.<br>
  #end
  Function Clearing_DateMoveOnCloseInPeriod(_dBeg: date; _dEnd: date; _dNew: date): boolean;
  #doc
  Дата первой Фоп, которую нельзя закрыть (для информации).<br>
  #end
  Function Clearing_LastCanClose(_dBeg: date): date;
  #doc
  Открытие Фоп за ук.период (включительно) - то же, что и Close.<br>
  #end
  Function Clearing_OpenAllInPeriod(_BegDate: date; _EndDate: date): date;
  #doc
  Закрытие ФОП за указанный период, включая дату _EndDate  .<br>
  #end
  Function Clearing_CloseAllTillDate(_BegDate: date; _EndDate: date): date;
  #doc
  Перенос Фоп в архив или из архива (работает вместе с AktOfp_ToArchive)
  Переносим на указанный день, переустанавливаем остатки.<br>
  #end
  Function Clearing_AllToFromArchive(_cAktOFP: comp; _toArchive: boolean; _NewDate: date): boolean;
  #doc
  То же - в таб.в памяти (sClearAkt).<br>
  #end
  Function Clearing_GetAllInPeriodToMem(_BegDate: date; _EndDate: date): boolean;
  #doc
  Проверка всех Фоп за архив-мый период (с заполнением sClearAkt).<br>
  #end
  Function CanArchiveDay(_date: date): boolean;
  #doc
  Проверка существования ФО или Фоп в разархивируемом периоде.<br>
  #end
  Function CanUnArchiveDay(_date: date): boolean;
  #doc
  Перенос Фоп и ФО в архив за ук.период включительно (анализируя sClearAkt).<br>
  #end
  Function Clearing_ArchiveAllTillDate(_BegDate: date; _EndDate: date): date;
  #doc
  связанная ФОп взаимозачета по основной и bufAktOFP - к которому цепляем
  #end
  Procedure Clearing_CreateVzaim(cClearing: comp; Summ, SumVal: double; bufAktOfp: TAktOfp);
End;

VipInterface iClearing implements objClearing, objErrorMng
  Licensed(Free);
//******************************************************************************
#end //__ACLEARING_VIH__
