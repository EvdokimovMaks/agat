//------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Галактика 5.80 - модуль "Платежный календарь"
// Объект для работы с Финобязательствами
//------------------------------------------------------------------------------


#ifndef __AAKTOFP_VIH__
#define __AAKTOFP_VIH__
// *****************************************************************************
#ifdef ComponentVersion
#component "F_OFP"
#end
// *****************************************************************************
#include ofptypes.vpp // TAktOfp

#include aErrorMng.obj // менеджер работы с ошибками
#include aBudByDoc.vih // TDocForBudget

#doc
Объект для работы с Финобязательствами.<br>
#end
Private ObjInterface objAktOfp;

  #doc
  Освобождение ссылок на объекты, провоцирующие циклические зависимости объектов.<br>
  #end
  Function FreeCrossVipRef : boolean;

  /////////////////////// РАЗЛИЧНЫЕ НАЗВАНИЯ ///////////////////////////////////
  #doc
  Наименование ФО.<br>
  #end
  Function AktOfp_GetName(_NoDoc: string; _dDoc: date): string;
  Function AktOfp_GetNameByBuf(bufAktOfp: TAktOfp): string;
  Function AktOfp_GetNameRec(_cAktOFP: comp): string; // см.FO_GetFullName
  Function AktOfp_GetNameInDativeRec(_cAktOFP: comp): string;
  #doc
  Название ФО взаимозачета.<br>
  #end
  Function AktOfp_GetVzaimName(_cAktOFP: comp): string;
  #doc
  Основание.<br>
  #end
  Function AktOfp_GetReason(bufAktOfp: TAktOfp; var _ReasonType: word; var _cReason: comp): boolean;
  #doc
  Название основания.<br>
  #end
  Function AktOfp_GetReasonName(bufAktOfp: TAktOfp): string;
  #doc
  Организация по умолчанию.<br>
  #end
  Function AktOfp_GetZeroOrgName: string;
  #doc
  Название периода погашения Фоп.<br>
  #end
  Function AktOfp_GetPeriodFopName(bufAktOfp: TAktOfp): string;
  #doc
  Вид платежа по ФО.<br>
  #end
  Function AktOfp_GetTypePlatName(_TypePlat: word): string;
  #doc
  Тип ФО по валюте.<br>
  #end
  Function AktOfp_GetTipMoneyName(_TipMoney: word): string;
  #doc
  Название статуса.<br>
  #end
  Function AktOfp_GetStatusName(_Status: word): string;
  #doc
  дата курса ФОБ
  #end
  Function AktOfp_dValCurse(_wAlg: word; _dCurse, _dDoc: date; _cBaseDoc: comp; _cClearing: comp = 0): date;
  #doc
  курс ФОБ
  #end
  Function AktOfp_GetCurse(var _RetCurse: tSumma; var _dRetCurse: date; _cVal: comp; _wAlg: word; _Curse: tSumma; _dCurse, _dDoc: date; _cBaseDoc: comp; _cClearing: comp = 0): boolean;

  /////////////////////// РАЗЛИЧНЫЕ ПРОВЕРКИ ///////////////////////////////////
  #doc
  Соответствие валюты Фоп типу по валюте ФО.<br>
  #end
  Function AktOfp_ValAccording(_TipMoney: word; _cValAkt, _cValDoc: comp): boolean;

  #doc
  проверяет участвует ли ФОБ в зачете авансов.<br>
  #end
  Function AktOfp_CheckAvans(_cAktOfp: comp; _wTypePlat: word): boolean;

  #doc
  Проверяет соответствие валюты SoprHoz полю TipMoney ФО и контрагентов.<br>
  #end
  Function AktOfp_CheckSoprHoz(_cAktOFP: comp; _cSoprHoz: comp): boolean;

  #doc
  Проверяет валюту документа на соответствие его типу по валюте - общая функция.<br>
  #end
  Function AktOfp_CheckValByTipMoney(_cVal: comp; _tipMoney: word): boolean;

  #doc
  При выборе валюты.<br>
  #end
  Function AktOfp_CheckValForTipMoney(_tipMoney: word; _direct: word): boolean;

  #doc
  Исполнено ли ФО.<br>
  #end
  Function AktOfp_IsRealized(bufAktOfp: TAktOfp): boolean;

  #doc
  Исполнено ли ФО и все его Фоп - то же, но по SumFact.<br>
  #end

  Function AktOfp_RealizedFoAndFop(_cAktOFP: comp): boolean;

  #doc
  ФО и все его Фоп на закрытые дни.<br>
  #end
  Function AktOfp_IsInCldPeriod(_cAktOFP: comp): boolean;

  #doc
  Есть ли у ФОБ ФОП с заданным типом ПС.<br>
  #end
  Function AktOfp_CheckClearingMeanType(_cAktOfp: comp; _MeanType: word): boolean;

  #doc
  Есть ли у ФОБ ФОП с заданным ПС.<br>
  #end
  Function AktOfp_CheckClearingPlatMean(_cAktOfp: comp; _MeanType: word; _PlatMean: comp): boolean;

  #doc
  Есть ли у ФОБ ФОП с заданной валютой.<br>
  #end
  Function AktOfp_CheckClearingVal(_cAktOfp: comp; _cVal: comp): boolean;

  #doc
  Есть ли у ФОБ ФОП с заданным ДО.<br>
  #end
  Function AktOfp_CheckBaseDoc(_cAktOfp, _cBaseDoc: comp): boolean;

  #doc
  Распределено ли ФОБ по заданной статье.<br>
  #end
  Function AktOfp_CheckStBud(_cAktOfp, _cStBud: comp): boolean;

  #doc
  Если это "простой случай" скорректиреум сумму финоперации.<br>
  #end
  Function AktOfp_CorrectOneFop(_BufAktOfp: TAktOfp): boolean;

  #doc
  При рассогласовании сумм ФОБ и связанных ФОП.<br>
  #end
  Function AktOfp_OnDisBalansFob(_BufAktOfp: TAktOfp; _SumMode: word): boolean;

  #doc
  При рассогласовании сумм ФОБ и связанных ФОП (по ссылке).<br>
  #end
  Function AktOfp_OnDisBalansFobRec(_cAktOfp: comp; _SumMode: word): boolean;

  /////////////////////// РАЗЛИЧНЫЕ АТРИБУТЫ ///////////////////////////////////
  #doc
  Определяет включена ли настройка для типа документа, Descr.<br>
  #end
  Function User_Nastr(_OfpDocType: word; _Descr: tDescr): boolean;

  #doc
  Доступ к документу в статусе для Descr.<br>
  #end
  Function User_D(_OfpDocType: word; _Descr: tDescr; _cNote: comp): boolean;

  #doc
  Возвращает ФО по основанию (ДО, заявке).<br>
  #end
  Function AktOfp_FindByReason(_vidDO: word; _cDO: comp): comp;

  #doc
  Тип основания: ДО, заявки или ГВПК.<br>
  #end
  Function AktOfp_GetTypeOfReason(_ReasonType: word): word;

  #doc
  Направление по типу ДО.<br>
  #end
  Function AktOfp_GetDirectByReasonType(_ReasonType: word): word;

  #doc
  Маска, куда статус ФО не может быть переведен.<br>
  #end
  Function AktOfp_StatusMaska(bufAktOfp: TAktOfp): word;

  #doc
  Направление - по направлению основания.<br>
  #end
  Function AktOfp_DocType(_direct: word): word;

  #doc
  Есть ли у ФО Фоп.<br>
  #end
  Function AktOfp_HasClearing(_cAktOFP: comp): boolean;

  ///////////////////// СВЯЗЬ С ФИНПЛАНИРОВАНИЕМ ///////////////////////////////
  #doc
  Заполнить разноску по статьям из ФинПроводок.<br>
  #end
  Function AggrFpOb(_cSoprHoz: comp; var _pAktOfp: #TAktOfpX): boolean;

  #doc
  Заполнить разноску по статьям ФинПроводок из ХозОперации.<br>
  #end
  Function AggrFpOb_Eval_01(_cSoprHoz: comp; var _pAktOfp: #TAktOfpX; _wMode: word; _isMessage: word): boolean;

  #doc
  Заполнить разноску по статьям ФинПроводок из ХозОперации договора.<br>
  #end
  Function AggrFpObByDocSource(_cDocSource: comp; var _pAktOfp: #TAktOfpX): boolean;

  #doc
  Привязка статьи к ФО на все 100 процентов, появились документы несущие ContAn.<br>
  #end
  Function AktOfp_StBudAttach_Eval_01(bufAktOfp: TAktOfp; _cStBud: comp; _ContAn: TPtr ): boolean;

  #doc
  Привязка статьи к ФО на все 100 процентов.<br>
  #end
  Function AktOfp_StBudAttach(bufAktOfp: TAktOfp; _cStBud: comp): boolean;

  #doc
  Просмотр бюджета по ФО.<br>
  #end
  Function AktOfp_SeeBudget(bufAktOfp: TAktOfp): boolean;

  #doc
  Заполнение по аналитике соответствующего поля в буфере ФОб с IsNeedUpDate & IsNeedPosit.<br>
  #end
  Function AktOfp_SetAnalitikToBuf(var _bufAktOfp: TAktOfp; _wKau: word; _cKau: comp; _wMode: word = cgBitNo): boolean;

  #doc
  Аналитика только данного документа.<br>
  #end
  Function AktOfp_GetDocAnaliticByBuf(bufAktOfp: TAktOfp; var _contId: TPtr): boolean;

  #doc
  Заполнение контейнера аналитик по буферу ФО (связана с предыдущей).<br>
  #end
  Function AktOfp_GetAnaliticByBuf(bufAktOfp: TAktOfp; var _contId: TPtr): boolean;

  //////////////////// ПРОВЕРКА ДОСТУПНОСТИ ФО /////////////////////////////////
  #doc
  Макс дата, не доступная для редактирования.<br>
  #end
  Function AktOfp_GetMaxNotADate: date;

  #doc
  Поиск среди запрещенных к редактированию доков ПК у тек.группы на ук.дату.<br>
  #end
  Function AktOfp_CheckADate(_dDoc: date; _isMessage: word): boolean;

  #doc
  Первая дата ФО, на кот.его можно редактировать.<br>
  #end
  Function AktOfp_GetFirstADateForEdit: date;

  #doc
  Первая дата ФО, доступная для редактирования, не меньше _dDoc.<br>
  #end
  Function AktOfp_GetFirstOpenADateNotLess(_dDoc: date): date;

  #doc
  Можно ли переносить ФО на ук.дату.<br>
  #end
  Function AktOfp_CanMoveToDay(_cAktOfp: comp; _date: date; _isMessage: word): boolean;

  #doc
  можно ли создавать ФОБ (с сообщением или без).<br>
  #end
  Function AktOfp_CanSetDefault(_OfpDocType: word; _NeedMessage: boolean): boolean;

  #doc
  можно ли редактировать ФОБ (с сообщением или без).<br>
  #end
  Function AktOfp_CanEdit(bufAktOfp: TAktOfp; _CheckStatus, _NeedMessage: boolean): boolean;

  #doc
  можно ли удалять ФОБ (с сообщением или без).<br>
  #end
  Function AktOfp_CanDelete(bufAktOfp: TAktOfp; _NeedMessage: boolean): boolean;

  #doc
  Проверка на возможность удаления перед формированием.<br>
  #end
  Function AktOfp_CheckDeleteBeforeCreate(bufAktOfp: TAktOfp): boolean;

  ///////////////////////// У Д А Л Е Н И Е ////////////////////////////////////

  #doc
  Удаляет все Фоп у ФО (с проверкой удалять ли исполняемые ФОП).<br>
  #end
  Function AktOfp_DeleteClearingsWithAktPerfCheck( _cAktOFP               : comp;
                                                   _needUpdateAkt         : boolean;
                                                   _needDeleteWithAktPerf : boolean;
                                                   _isMessage             : word
                                                                         ): boolean;
  #doc
  Удаляет все Фоп у ФО.<br>
  #end
  Function AktOfp_DeleteClearings(_cAktOFP: comp; _NeedUpdateAkt: boolean): boolean;
  #doc
  Удаляет ФОБ и все его ФОП.<br>
  #end
  Function AktOfp_DeleteP(_cAktOfp: comp; _pAktOfp: #TAktOFPX): boolean;
  #doc
  Удаляет ФОБ и все соответствующие ему ФОБ в моделях.<br>
  #end
  Function AktOfp_Delete(_cAktOFP: comp): boolean;
  #doc
  Удаление всех ФОБ по Договору.<br>
  #end
  Function AktOfp_DeleteInModelByDog(_cOfpModel: comp; _cDogovor: comp; _rMaket: TMaketAktOfp): boolean;
  #doc
  Удаление всех ФОБ по Соглашению.<br>
  #end
  Function AktOfp_DeleteInModelByApp(_cOfpModel: comp; _cDogovor, _cAppDogovor: comp; _rMaket: TMaketAktOfp): boolean;
  #doc
  Удаление всех ФОБ по ПКП.<br>
  #end
  Function AktOfp_DeleteInModelByPlan(_cOfpModel: comp; _cDogovor, _cCalPlan: comp; _rMaket: TMaketAktOfp): boolean;
  #doc
  Удаление всех ФОБ по ДО.<br>
  #end
  Function AktOfp_DeleteInModelByDO(_cOfpModel: comp; _DocReasonType: word; _cDocReason: comp; _byReason: boolean; _VidPlat : word = 0): boolean;
  #doc
  Удаление всех ФОБ по реестру.<br>
  #end
  Function AktOfp_DeleteInModelByReestr(_cOfpModel: comp; _DocReasonType: word; _cDocReason: comp): boolean;
  #doc
  Удаление всех ФОБ по заявке.<br>
  #end
  Function AktOfp_DeleteInModelByReq(_cOfpModel: comp; _DocReasonType: word; _cDocReason: comp; _byReason: boolean): boolean;
  #doc
  Удаление всех ФОБ по основанию.<br>
  #end
  Function AktOfp_DeleteInModelByDocReason(_cOfpModel: comp; _DocReasonType: word; _cDocReason: comp; _rMaket: TMaketAktOfp): boolean;
  ///////////////////// ДОБАВЛЕНИЕ/ОБНОВЛЕНИЕ //////////////////////////////////
  #doc
  Обновление SoprHoz по ФО (для ТФО - разноски по статьям бюджета).<br>
  #end
  Function AktOfp_MakeSoprHoz(bufAktOFP: TAktOFP): boolean;
  #doc
  Сразу после добавления любой записи.<br>
  #end
  Function AktOfp_AfterInsert(bufAktOfp: TAktOfp): boolean;
  #doc
  Вставить
  #end
  Function AktOfp_Insert(var _pAktOFP: #TAktOFPX): comp;
  #doc
  Вставить AktOfp по буферу
  #end
  Function AktOfp_InsertBuff(_BuffAktOFP: TAktOFP): comp;
  #doc
  Модифицировать буфер в позиции в таблице
  #end
  Function AktOfp_Update(var _pAktOFP: #TAktOFPX): comp;
  ////////////////////// ЗАПОЛНЕНИЕ БУФЕРА ФО //////////////////////////////////
  #doc
  По основанию заполняет буфер ФО.<br>
  #end
  Function AktOfp_Fill(var bufAktOFP: TAktOFP; _DocReasonType: word; _cDocReason: comp; _datePeriod: date; _direct: word): boolean;
  #doc
  Заполнение буфера ФО по ХО и ФОп.<br>
  #end
  Function FillFOBySH(_cSoprHoz: comp; _wOnlyBySH: word; var _pAktOfp: #TAktOfpX): boolean;

  #doc
  По основанию создает AktOFP (автоматически) _datePeriod - для период-ких.<br>
  #end
  Function AktOfp_CreateByBase( _DocReasonType : word;
                                _cDocReason    : comp;
                                _datePeriod    : date;
                                _NeedClearing  : boolean;
                                _HandMade      : boolean
                                               ): comp;

  #doc
  По основанию создает AktOFP (вручную) _datePeriod - для период-ких
  #end
  Function AktOfp_CreateByBase_AltF( _DocReasonType : word;
                                     _cDocReason    : comp;
                                     _datePeriod    : date;
                                     _rMaket        : TMaketAktOfp;
                                     _cAktOfp       : comp = 0
                                                   ): comp;

  #doc
  По основанию обновляет AktOFP (вручную или автоматически).<br>
  #end
  Function AktOfp_UpdateByBase(_pAktOfp: #TAktOFPX; _datePeriod: date): comp;

  #doc
  Синхронизация налоговых реквизитов.<br>
  #end
  Function AktOfp_SynchTax(wVidDoc: word; cBaseDoc: comp): boolean;

  #doc
  Проверка ФОБ после изменения ссылки на ДО по ФОП.<br>
  #end
  Function AktOfp_CheckByBase(cAktOFP: comp): boolean;

  #doc
  Проверка ФОБ после изменения ссылки на реестр по ФОП.<br>
  #end
  Function AktOfp_CheckByReestr(cAktOFP: comp): boolean;

  //////////////////////// РАЗЛИЧНЫЕ РАСЧЕТЫ ///////////////////////////////////
  #doc
  Сумма Фоп по вал-руб ФО (с запросом или без).<br>
  #end
  Function AktOfp_GetSummaForFop(bufAktOFP: TAktOFP; bufClearing: TClearing; var _Summa: TSumma): boolean;

  #doc
  То же, но по ссылке и без запроса курса (дольше).<br>
  #end
  Function AktOfp_SetSummaFop(_cAktOfp: comp; _cClearing: comp): boolean;

  #doc
  Возвращает сумму ФО и валюту в соответствии с TipMoney (для Фоп).<br>
  #end
  Function AktOfp_GetSummaForFopByCourse(_cAktOFP: comp; var _cVal: comp; var _Summa: TSumma; var _SumVal: TSumma): boolean;

  #doc
  Пересчитывает указанную в НДЕ сумму в валюту ФО.<br>
  #end
  Function AktOfp_SummaToValFO(bufAktOfp: TAktOfp; _Summa: double): double;

  #doc
  Пересчет сумм Фоп ук-го ФО по курсу (последнему известному).<br>
  #end
  Function AktOfp_RecountFopByCourse(_cAktOFP: comp): boolean;

  #doc
  Сумма Фоп по ФО в валюте ФО (валюта - на дату ФО), сумма Фоп конвертации уч-тся только для ФО конвертации.<br>
  #end
  Function AktOfp_GetSummaFopOther(_cAktOFP: comp; _Direct: word; _cClearing: comp = 0): double;

  #doc
  Сумма Фоп по ФО в валюте ФО (валюта - на дату ФО), с КАУ ( сумма Фоп конвертации уч-тся только для ФО конвертации).<br>
  #end
  Function AktOfp_GetSummaFopByBaseDoc(bufAktOFP: TAktOfp; _wKau: word): double;

  #doc
  Суммы ФОБ по заявке в указанной валюте.<br>
  #end
  Function AktOfp_GetSumByReq(_cDocReq: comp; _cVal: comp; var _Summa, _HozSumma, _SumFact: double): boolean;

  #doc
  Сумма ФОБ по заявке (все либо по основанию) в указанной валюте.<br>
  #end
  Function AktOfp_GetAktSumByReq(_cDocReq: comp; _Ispoln: boolean; _cVal: comp): double;

  #doc
  Сумма ФО, которую можно включить во взаимозачет.<br>
  #end
  Function AktOfp_RestSummaToVzaim(bufAktOfp: TAktOfp): double;

  #doc
  Сумма аванса.<br>
  #end
  Function AktOfp_GetAvans(_bufAktOFP: TAktOfp): double;

  #doc
  Факт по ФО - оплаченные хоз.документы (долго - переделать потом).<br>
  #end
  Function AktOfp_GetFact(_bufAktOFP: TAktOfp; _Period: word; var _sumFact: double; var _hozSumma: double): boolean;

  #doc
  Часть факта ФО, которая оплачена в закрытом периоде (в регистре "факт").<br>
  #end
  Function AktOfp_GetClosedFact(_bufAktOFP: TAktOfp): double;

  #doc
  Контроль сумм.<br>
  #end
  Function AktOfp_SummControl(_bufAktOFP: TAktOfp; _cClearing: comp; _isValSumm: boolean; var _Summa: TSumma; _cVal : comp = 0): boolean;

  ///////////////////// ИЗМЕНЕНИЕ АТРИБУТОВ ////////////////////////////////////
  #doc
  Спрашивает новую дату.<br>
  #end
  Function AktOfp_DateGet(_cAktOFP: comp; var NewDate: date): boolean;

  #doc
  Изменим если надо дату Фоп у ФО.<br>
  #end
  Procedure AktOfp_DateSetAfter(_cAktOFP: comp; _OldDate: date; _NewDate: date; _CheckFop: boolean);

  #doc
  Изменение даты финобязательства с проверкой бюджетов.<br>
  #end
  Function AktOfp_SetDateWithBudgetCheck(_cAktOFP: comp): boolean;

  #doc
  изменение даты финобязательства.<br>
  #end
  Function AktOfp_DateSet_Eval_02(var _pAktOFP: #TAktOfpX; _NewDate: date; _wMode: word): boolean;

  #doc
  Изменение даты финобязательства.<br>
  #end
  Function AktOfp_DateSet(_cAktOFP: comp; _NewDate: date; _CheckFop: boolean): boolean;

  #doc
  Автокореектировка даты финобязательства.<br>
  #end
  Function AktOfp_DateReSet(_cAktOFP: comp): boolean;

  #doc
  Обновление суммы, пересчет исполнения, факта.<br>
  #end
  Function AktOfp_SummReSet(_cAktOFP: comp; _AddSumm: double): boolean;

  #doc
  Изменение статуса привязанных ФОП.<br>
  #end
  Function AktOfp_SetStatusAfter(bufAktOfp: TAktOfp; _OldStatus: word): boolean;

  #doc
  изменение статуса у ФО (без подтверждения).<br>
  #end
  Function AktOfp_SetStatusP(var _pAktOFP: #TAktOFPX; _NewStatus: word; _NewcNote: comp; _comment: string[80] = ''): boolean;

  #doc
  То же, но по ссылке.<br>
  #end
  Function AktOfp_SetStatus(_cAktOFP: comp; _NewStatus: word; _NewcNote: comp; _comment: string[80] = ''): boolean;

  #doc
  Изменение (увеличение или уменьшение) исполнения и факта ФО ( выз. только из Clearing_ChangeFact).<br>
  #end
  Function AktOfp_ChangeFact(bufClearing: TClearing; _SumPerf: double; _dSoprHoz : date; _direct: word): boolean;

  #doc
  Увеличение или изменение фактической суммы (при изм.даты ХозОп), (то же, но только факт) выз.только из Clearing_HozToFact.<br>
  #end
  Function AktOfp_HozToFact(bufClearing: TClearing; _summa: double; _direct: word): boolean;

  #doc
  Изменение периодического прихода.<br>
  #end
  Function ChangeStatSumma(_pSoprHoz: TPSoprHoz): boolean;

  #doc
  Обновляет распределение по ДО, ПКП, Договорам на основании авансового и фактического обязательства
  #end
  Function AktOfp_UpdateBaseFinByAvans(_cBaseFin, _cBaseDocAvans, _cBaseDocFact, _cAktOfpAvans, _cAktOfpFact: comp; _UpdPlPor: boolean = true): boolean;

  #doc
  Распределение финансового обязательства по ДО
  #end
  Function AktOfp_DistrBaseDoc(_cAktOfp: comp): boolean;

  #doc
  Перенос ФО и его Фоп в архив.<br>
  #end
  Function AktOfp_ToArchive(_cAktOFP: comp): boolean;

  #doc
  Перенос ФО и его Фоп из архива на указанную дату.<br>
  #end
  Function AktOfp_FromArchive(_cAktOFP: comp; _NewDate: date): boolean;

  #doc
  Очередь из статьи бюджета финобязательства.<br>
  #end
  Function AktOfp_GetStBudQueue(_cAktOFP: comp; var _wQueue: word): boolean;

End;

VipInterface iAktOfp implements objAktOfp, objErrorMng
  Licensed(Free);
//******************************************************************************
#end //__AAKTOFP_VIH__
