//------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Галактика 8.10 - модуль "Платежный календарь"
// Основания ФО
//------------------------------------------------------------------------------


#ifndef __AOFPBASE_VIH__
#define __AOFPBASE_VIH__
//------------------------------------------------------------------------------
#ifdef ComponentVersion
#component "F_OFP"
#end
//------------------------------------------------------------------------------
// Финобязательства
#doc
Основания финобязательств.<br>
#end
Private ObjInterface objOfpBase;

  #doc
  Освобождение ссылок на объекты, провоцирующие циклические зависимости объектов.<br>
  #end
  Function FreeCrossVipRef : boolean;

  /////////////////////////// Д О Г О В О Р ///////////////////////////
  #doc
  Авансовый финансовый ПКП.<br>
  #end
  Function isAvansFinPKP(_cCalPlan: comp): boolean;
  #doc
  Финансовый ПКП по факту.<br>
  #end
  Function isFactFinPKP(_cCalPlan: comp): boolean;
  #doc
  товарный ПКП.<br>
  #end
  Function isTovPKP(_cCalPlan: comp): boolean;
  #doc
  Название договора.<br>
  #end
  Function Dogovor_GetName(_rec: comp): string;
  #doc
  Договор по ссылке на соглашение.<br>
  #end
  Function Dogovor_GetDogovorByApp(_cAppDogovor: comp): comp;
  #doc
  ЦО из Договора (Ответственный за договор центр ответственности).<br>
  #end
  Function Dogovor_GetCo(_cDogovor: comp): comp;
  #doc
  Контрагент из договора.<br>
  #end
  Function Dogovor_GetKontr(cDogovor, cOrgDef: comp): comp;
  #doc
  Дает банк для контрагента.<br>
  #end
  Function Fill_bank(_cOrg: TnRec; var _cBank: TnRec): boolean;
  #doc
  Берет контрагента из договора или из кредита.<br>
  #end
  Function Dogovor_TakeKontragent(_DocType: word; _cDogKontr: comp; _cDocKontr: comp; var retKontr: comp): boolean;
  #doc
  Вызов Dogovor_Pick.<br>
  #end
  Function Dogovor_Pick(_cgOfpDog: word; var rOfpDog: TOfpDog): boolean;
  #doc
  Вызов Dogovor_Pick с заполнением полей документов ПК.<br>
  #end
  Function OfpDogovor_Pick(_cgOfpDog: word; var rOfpDog: TOfpDog): boolean;
  #doc
  Формирование ФОБ по ПКП.<br>
  #end
  Function CalPlan_MakeFO(_cCalPlan: comp; var _rMaketTR: TMaketAktOfp; var _rMaketTP: TMaketAktOfp; var _rMaketFR: TMaketAktOfp; var _rMaketFP: TMaketAktOfp): boolean;
  #doc
  Формирование ФОБ по соглашению.<br>
  #end
  Function AppDog_MakeFO(_cAppDogovor: comp; var _rMaketR: TMaketAktOfp; var _rMaketP: TMaketAktOfp): boolean;
  #doc
  Формирование ФОБ по договору.<br>
  #end
  Function Dogovor_MakeFO(_cDogovor: comp; var _rMaketR: TMaketAktOfp; var _rMaketP: TMaketAktOfp): boolean;

  /////////////// О Б Ъ Е К Т  С Т Р О И Т Е Л Ь С Т В А ///////////////////////
  #doc
  Наименование Объеккта строительства с учетом иерархии.<br>
  #end
  Function KatStroy_GetName(_cKatStroy: comp; _isIer: boolean): string;

  //////////////////////////// О С Н О В А Н И Е ///////////////////////////////
  #doc
  ДО на предоплату.<br>
  #end
  Function isPreBaseDoc(_cBaseDoc: comp): boolean;
  #doc
  Дата ДО.<br>
  #end
  Function BaseDoc_GetDate(_cDO: comp; var _wasFound: boolean): date;
  #doc
  Поле "Оплатить до".<br>
  #end
  Function BaseDoc_GetPayTill(_cDO: comp; var _wasFound: boolean): date;
  #doc
  Тип ДО по умолчанию.<br>
  #end
  Function BaseDoc_GetDefVidDoc(_TypePlat, _Direct: word): word;
  #doc
  Тип Заявки по умолчанию.<br>
  #end
  Function BaseDoc_GetDefVidDocReq(_Direct: word): word;
  #doc
  Направление ДО.<br>
  #end
  Function BaseDoc_GetDirect(_VidDoc: word; _direct: word; _isDolgBye2: boolean): word;
  #doc
  Сумма по ДО по умолчанию (без учета настройки) (2-ое ДО на закупку) .<br>
  #end
  Function BaseDoc_GetSumma(bufBaseDoc: TBaseDoc; _isDolgBye2: boolean): double;
  #doc
  Группировка ДО для последующего формирования ФОБ.<br>
  #end
  Function MakeGroupBase(var _wAlg: word; _marker: TPtr): boolean;
  #doc
  Очистка таблицы группировок ДО.<br>
  #end
  Function ClearGroupBase(_rMaket: TMaketAktOfp): boolean;
  #doc
  проверка настройки "Форм ФОБ по полностью оплаченным ДО"
  #end
  Function Operation_CheckOplDo(_cBaseDoc: comp; _isMessage: boolean): boolean;
  #doc
  Формирование ФОБ по ДО.<br>
  #end
  Function BaseDoc_MakeFO(_cBaseDoc: comp; var _rMaket: TMaketAktOfp): boolean;
  #doc
  Сумма по курсу - в валюту ФОБ или из нее.<br>
  #end
  Function BaseDoc_ConvertByCourse(     _cDO      : comp;
                                        _dDoc     : date;
                                        _Summa    : double;
                                        _cVal     : comp;
                                        _toValFO  : boolean;
                                    var _NewSumma : double
                                                 ): boolean;


  //////////////////////////////////// К Р Е Д И Т /////////////////////////////
  #doc
  Формирование ФО по план-графику.<br>
  #end
  Function GrafKred_MakeFO(_cGrafKred: comp; var _rMaket: TMaketAktOfp): boolean;
  #doc
  Являемся ли мы плательщиком.<br>
  #end
  Function Credit_GetDirect(_VekslTip: word; _GrafTip: word): word;
  #doc
  Контрагент по кредиту.<br>
  #end
  Function GetCreditKontr(_TiDk: word; _cPl: comp; _cPlat: comp): comp;
  #doc
  Определяет, какой документ является основанием для заявки на оплату.<br>
  #end
  Function GetReasonPlat(_cDogovor, _cAppDogovor, _cCalPlan, _cBaseDoc: comp; _TypePlat: word): word;
  #doc
  Определяет тип по валюте и валюту основания для заявки на оплату.<br>
  #end
  Function GetReasonTipMoney(_cDogovor, _cAppDogovor, _cBaseDoc: comp; var _TipMoney: word; var _cVal: comp): boolean;
  //////////////////////////////////// Р Е Е С Т Р /////////////////////////////
  #doc
  Формирование ФО по реестры.<br>
  #end
  Function Reestr_MakeFO(_cSbBan: comp; var _rMaket: TMaketAktOfp): boolean;
  #doc
  Группировка реестров для последующего формирования ФОБ.<br>
  #end
  Function MakeGroupReestr(var _wAlg: word; _marker: TPtr): boolean;
  #doc
  Очистка таблицы группировок реестров.<br>
  #end
  Function ClearGroupReestr(_rMaket: TMaketAktOfp): boolean;

  /////////////////////// Р А С Ч Е Т  С У М М   (ДСД) /////////////////////////
  #doc
  Расчет cумм по ДО.<br>
  #end
  Function GetSumPlatbyDO(_cBaseDoc: comp; var _ReqSumma, _ReqSummaNalog, _ReqAvans: double;
                          var _TipMoney: word; var _cVal: comp; _cDocReq : comp;_cObjStroy : comp; _isMessage: boolean): boolean;
  #doc
  Расчет сумм по Договору.<br>
  #end
  Function GetSumPlatbyDogovor(_cDogovor: comp; _TypeReasonPlat: word; var _ReqSumma, _ReqSummaNalog, _ReqAvans: double;
                               var _TipMoney: word; var _cVal: comp; _isMessage : boolean): boolean;
  #doc
  Расчет сумм по ПКП.<br>
  #end
  Function GetSumPlatbyPKP(_cCalPlan: comp; _TypeReasonPlat: word; var _ReqSumma, _ReqSummaNalog, _ReqAvans: double;
                           var _TipMoney: word; var _cVal: comp; _cDocReq : comp; _cObjStroy : comp; _isMessage: boolean): boolean;
  #doc
  Расчет суммы удержания аванса по ДО.<br>
  #end
  Function GetSumAvansbyDO(_cBaseDoc: comp; var _ReqAvans: double): boolean;
  #doc
  Расчет суммы удержания аванса по Договору.<br>
  #end
  Function GetSumAvansbyDogovor(_cDogovor: comp; _TypeReasonPlat: word; var _ReqAvans: double): boolean;
  #doc
  Расчет суммы удержания аванса по ПКП.<br>
  #end
  Function GetSumAvansbyPKP(_cCalPlan: comp; _TypeReasonPlat: word; var _ReqAvans: double): boolean;
  #doc
  % от общей суммы договор/соглашения.<br>
  #end
  Function GetProcDocReq(_cCalPlan: comp; _Summa: double): string;
  #doc
  Остаток платежа по договору.<br>
  #end
  Function GetSummHozByDogovor(bufAktOfp: type$p_AktOfp; var _SummDoc, _SummPlat, _SummFob: double): boolean;
  #doc
  Остаток платежа по ДО.<br>
  #end
  Function GetSummHozByBaseDoc(bufAktOfp: type$p_AktOfp; var _SummDoc, _SummPlat, _SummFob: double; _bNoStatus: boolean = false): boolean;
  #doc
  Остаток платежа по заявке.<br>
  #end
  Function GetSummHozByDocReq(bufAktOfp: type$p_AktOfp; var _SummDoc, _SummPlat, _SummFob: double): boolean;
End;

VipInterface viOfpBase implements objOfpBase
  Licensed(Free);
//------------------------------------------------------------------------------
#end //__AOFPBASE_VIH__
