//------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Галактика 9.10 - модуль "Управление бюджетом"
// Базовый объект : "Построитель иерархических отчетов"
//------------------------------------------------------------------------------

#ifndef __aMakeFp_Vih__
#define __aMakeFp_Vih__

#ifdef  ComponentVersion
#component "F_FpBudget"
#endif//ComponentVersion

//------------------------------------------------------------------------------
#include FpTypes.Inc   // Все типы данных FP
//------------------------------------------------------------------------------
#include aTreeOut.Vpp  // много всего, нужен только TStructOut
#include aTreeNam.Vih  // ObjTreeNames
#include aTreeNew.Vih  // ObjTreeNew
//------------------------------------------------------------------------------

//==============================================================================
#doc
Базовый объект : "Построитель иерархических отчетов"<br>
<b>Внимание!</b> Интерфейс предназначен только для внутреннего использования<br>
#end
Private ObjInterface IObjFpHierRepBuilder;  //#region ObjInterface

  //============================================================================
  //#region ERROR
  //----------------------------------------------------------------------------
  #doc
     Функция возвращает описание последней ошибки
  #end
  function GetStLastError : string;
  //----------------------------------------------------------------------------
  #doc
     Вывод сообщения последней ошибки
  #end
  function RunShowError : boolean;
  //#endregion ERROR
  //****************************************************************************


  //============================================================================
  //#region FIELDS
  //----------------------------------------------------------------------------
  #doc
     Узнать используется ли аналитика операции
  #end
  function IsUseGalAn : boolean;
  //----------------------------------------------------------------------------
  #doc
     Узнать используется ли аналитика статьи
  #end
  function IsUseBudAn : boolean;

  //----------------------------------------------------------------------------
  #doc
     Установить тип отчета
  #end
  function SetReportType(_wReportType : word) : boolean;

  //----------------------------------------------------------------------------
  #doc
     Преобразовать регистр из настройки в настоящий регистр
  #end
  function TuneRegToReg(_KodReg: word): word;
  //#endregion FIELDS
  //****************************************************************************


  //============================================================================
  //#region ПАРАМЕТРЫ
  //----------------------------------------------------------------------------
  #doc
     Получить регистр учета
  #end
  function  Params_GetKodReg : word;
  //----------------------------------------------------------------------------
  #doc
     Задать регистр учета
  #end
  procedure Params_SetKodReg(_Value : word);

  //----------------------------------------------------------------------------
  #doc
     Получить вариант бюджета
  #end
  function  Params_GetVariant : comp;
  //----------------------------------------------------------------------------
  #doc
     Задать вариант бюджета
  #end
  procedure Params_SetVariant(_Value : comp);

  //----------------------------------------------------------------------------
  #doc
     Получить основной фильтр
  #end
  function  Params_GetFilter : comp;
  //----------------------------------------------------------------------------
  #doc
     Задать основной фильтр
  #end
  procedure Params_SetFilter(_Value : comp);

  //----------------------------------------------------------------------------
  #doc
     Получить основной фильтр
  #end
  function  Params_GetAddFlt : comp;
  //----------------------------------------------------------------------------
  #doc
     Задать дополнительный фильтр
  #end
  procedure Params_SetAddFlt(_Value : comp);

  //----------------------------------------------------------------------------
  #doc
     Получить дополнительные параметры
  #end
  function  Params_GetDopParam : word;
  //----------------------------------------------------------------------------
  #doc
     Задать дополнительные параметры
  #end
  procedure Params_SetDopParam(_Value : word);

  //----------------------------------------------------------------------------
  #doc
     Получить таблицу данных
  #end
  function  Params_GetTable : word;
  //----------------------------------------------------------------------------
  #doc
     Задать таблицу данных
  #end
  procedure Params_SetTable(_Value : word);

  //----------------------------------------------------------------------------
  #doc
     Получить ЦО бюджета
  #end
  function  Params_GetBudCO : comp;
  //----------------------------------------------------------------------------
  #doc
     Задать ЦО бюджета
  #end
  procedure Params_SetBudCO(_Value : comp);

  //----------------------------------------------------------------------------
  #doc
     Получить копию бюджета
  #end
  function Params_GetBudVar : comp;
  //----------------------------------------------------------------------------
  #doc
     Задать копию бюджета
  #end
  procedure Params_SetBudVar(_Value : comp);

  //----------------------------------------------------------------------------
  #doc
     Получить статью бюджета
  #end
  function Params_GetStBud : comp;
  //----------------------------------------------------------------------------
  #doc
     Задать статью бюджета
  #end
  procedure Params_SetStBud(_Value : comp);

  //----------------------------------------------------------------------------
  #doc
     Получить период бюджета
  #end
  function Params_GetPeriod : comp;
  //----------------------------------------------------------------------------
  #doc
     Задать период бюджета
  #end
  procedure Params_SetPeriod(_Value : comp);

  //----------------------------------------------------------------------------
  #doc
     Получить валюту дерева
  #end
  function Params_GetTreeVal : TFpValPrm;
  //----------------------------------------------------------------------------
  #doc
     Задать валюту дерева
  #end
  procedure Params_SetTreeVal(_Value : TFpValPrm);

  //----------------------------------------------------------------------------
  #doc
     Задать параметры
  #end
  procedure Params_Set(
    _KodReg     : word;
    _cVariant   : comp;
    _cFilter    : comp;
    _DopParam   : word;
    _wTable     : word;
    _cBudVar    : comp;
    _fpVal      : tFpValPrm
  );

  //----------------------------------------------------------------------------
  #doc
     Очистить параметры
  #end
  procedure Params_ReSet;
  //#endregion ПАРАМЕТРЫ
  //****************************************************************************

  //============================================================================
  //#region ПОСТРОЕНИЕ
  //----------------------------------------------------------------------------
  #doc
     Получить ссылку на объект ObjTreeNew
  #end
  function GetObjTreeNew  : ObjTreeNew;

  //----------------------------------------------------------------------------
  #doc
     Освободить ссылки на объект ObjTreeNew
  #end
  function FreeObjTreeNew : boolean;

  //----------------------------------------------------------------------------
  #doc
     Заполнить rStructOut (cgFpTable_Oborot or cgFpTable_Values)
  #end
  function StructOut_Fill(
      _Table : word;
      _cTable: comp;
  var rStructOut: TStructOut
  ): boolean;

  //----------------------------------------------------------------------------
  #doc
     Добавить суммы бюджета к листу и пересчет ветки
  #end
  function SumsValues_AddToNodeAndRecount(
    _cRec    : comp;
    _VlSum   : double;
    _VlSumTr : double;
    _VlSumKol: double
  ): boolean;

  //----------------------------------------------------------------------------
  #doc
     Добавить суммы к ветке
  #end
  function Sums_AddOneToBranch(
    _cNode  : comp; _SumsNpp: word;
    _nSum   : word; _Sum    : double;
    _nSumTr : word; _SumTr  : double;
    _nSumKol: word; _SumKol : double
  ): boolean;

  //----------------------------------------------------------------------------
  #doc
     Добавить одну запись в дерево
  #end
  function Build_One(_Table: word; _ContAn: TPtr): comp;

  //----------------------------------------------------------------------------
  #doc
     Получить ссылку на лист иерархии
  #end
  function Find_ValuesLeaf(_ContAn : TPtr) : comp;

  //----------------------------------------------------------------------------
  #doc
     Удалить все уровни
  #end
  function SpSetting_Clear(_cRepTune: comp): boolean;

  //----------------------------------------------------------------------------
  #doc
     Добавить уровень в настройку группировки
  #end
  function SpSetting_Add(
    _cRepTune: comp; _wType  : word; _wKodGrKau: word;
    _wMode   : word; _cTopRec: comp
  ): boolean;

  //----------------------------------------------------------------------------
  #doc
     Установить ограничение на верхнюю запись иерархии
  #end
  function SpSetting_SetTop(
    _cRepTune : comp; _wType : word;
    _wKodGrKau : word; _cTopRec : comp
  ): boolean;

  //----------------------------------------------------------------------------
  #doc
     Поместить таблицу с настройками
  #end
  function TuneToMem(_cTune: comp): boolean;

  //----------------------------------------------------------------------------
  #doc
     Запустить построение дерева
  #end
  function BuildNewTree(_wReportType : word; _cTune: comp): boolean;
  //#endregion ПОСТРОЕНИЕ
  //****************************************************************************

  //============================================================================
  //#region ЭКСПОРТ
  //----------------------------------------------------------------------------
  #doc
     Запустить экспорт в Excel
  #end
  function ExportToExcel(
    _cTune   : comp;
    _cFilter : comp
  ): boolean;
  //#endregion ЭКСПОРТ
  //****************************************************************************
End; //#endregion ObjInterface
//******************************************************************************


//==============================================================================
VipInterface ObjFpHierRepBuilder implements IObjFpHierRepBuilder, objTreeNames
#Licensed_Free;
//******************************************************************************

#end //__aMakeFp_Vih__
