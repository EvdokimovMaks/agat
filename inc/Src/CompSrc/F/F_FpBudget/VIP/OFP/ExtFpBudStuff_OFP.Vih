//------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Галактика 9.10 - модуль "Управление бюджетом"
// Интерфейс взаимодействия: "Базовый функционал модуля УБ для модуля ПК"
//------------------------------------------------------------------------------

#ifndef __ExtFpBudStuff_OFP_Vih__
#define __ExtFpBudStuff_OFP_Vih__

#ifdef  ComponentVersion
#component "F_FpBudget"
#endif//ComponentVersion

//==============================================================================
#doc
Интерфейс взаимодействия: "Базовый функционал модуля УБ для модуля ПК"<br>
<b>Внимание!</b> Интерфейс предназначен только для использования из модуля ПК<br>
#end
ObjInterface IExtFpBudStuff_OFP;  //#region ObjInterface

  //============================================================================
  //#region ERROR
  //----------------------------------------------------------------------------
  #doc
     Получить описание последней ошибки выполнения
  #end
  function GetStLastError : string;
  //----------------------------------------------------------------------------
  #doc
     Вывести сообщения о последней ошибке выполнения
  #end
  function RunShowError : boolean;
  //#endregion ERROR
  //****************************************************************************


  //============================================================================
  //#region FPTPER
  //----------------------------------------------------------------------------
  #doc
     Получить наименование заданного типа периода планирования
  #end
  function GetTPerName(_cTPer : comp) : string;

  //----------------------------------------------------------------------------
  #doc
     Получить имя маркера интерфейса типов периода
  #end
  function GetTPerMarkerName : string;

  //----------------------------------------------------------------------------
  #doc
     Запустить интерфейс выбора всех типов периода
  #end
  function RunViewTPer(
      _wIntMode : word;  // режим запуска (cgiNo, cgiPick, ...) см.GLOCONST.INC
  var _cGetRec  : comp   // выбранный тип периода
  ) : integer;           // количество выбранных записей

  #doc
     Запустить интерфейс выбора "главных" типов периода
  #end
  function RunViewMainTPer(
      _wIntMode : word;  // режим запуска (cgiNo, cgiPick, ...) см.GLOCONST.INC
  var _cGetRec  : comp   // выбранный тип периода
  ) : integer;           // количество выбранных записей

  //----------------------------------------------------------------------------
  #doc
     Запустить интерфейс выбора спецификаций типов периода
  #end
  function RunViewSpTPer(
      _wIntMode : word;  // режим запуска (cgiNo, cgiPick, ...) см.GLOCONST.INC
      _cTopRec  : comp;  // тип периода, если 0, то берется тип периода бюджетирования
  var _cGetRec  : comp   // выбранная спецификация типа периода
  ) : integer;           // количество выбранных записей
  //#endregion FPTPER
  //****************************************************************************


  //============================================================================
  //#region FPPERIOD
  //----------------------------------------------------------------------------
  #doc
     Получить наименование заданного периода планирования
  #end
  function GetPeriodName(_cPeriod : comp) : string;
  //----------------------------------------------------------------------------
  #doc
    Получить дату начала периода планирования
  #end
  function GetPeriodDBeg(_cPeriod : comp) : date;
  //----------------------------------------------------------------------------
  #doc
    Получить дату конца периода планирования
  #end
  function GetPeriodDEnd(_cPeriod : comp) : date;

  //----------------------------------------------------------------------------
  #doc
     Получить период по спецификации типа периода и дате
  #end
  function FindPeriodBySpTPerDate(
      _cSpTPer  : comp;   // спецификация типа периода
      _dtDate   : date;   // дата
      _wMessage : word    // режим вывода сообщений (cgiNoMessage...) см.GLOCONST.INC
  ) : comp;

  //----------------------------------------------------------------------------
  #doc
     Получить листовой период по главному типу периода и дате
  #end
  function FindLeafPeriodByMainTPerDate(
      _cMainTPer : comp;  // типология периода
      _dtDate    : date;  // дата
      _wMessage  : word   // режим вывода сообщений (cgiNoMessage...) см.GLOCONST.INC
  ) : comp;

  //----------------------------------------------------------------------------
  #doc
     Получить листовой период бюджетирования по дате
  #end
  function FindLeafFpPeriodByDate(
      _dtDate    : date;  // дата
      _wMessage  : word   // режим вывода сообщений (cgiNoMessage...) см.GLOCONST.INC
  ) : comp;

  //----------------------------------------------------------------------------
  #doc
     Получить наименование листового периода бюджетирования по дате
  #end
  function FindLeafFpPeriodNameByDate(
      _dtDate    : date;  // дата
      _wMessage  : word   // режим вывода сообщений (cgiNoMessage...) см.GLOCONST.INC
  ) : string;

  //----------------------------------------------------------------------------
  #doc
     Построить список подчиненных листовых периодов для заданного периода планирования
  #end
  function MakeMarkerLeafPeriod (_MID : TPtr; _cPeriod : comp) : boolean;
  //----------------------------------------------------------------------------
  #doc
     Построить список вышестоящих периодов к данному периоду планирования
  #end
  function MakeMarkerUpperPeriod(_MID : TPtr; _cPeriod : comp) : boolean;

  //----------------------------------------------------------------------------
  #doc
     Запустить интерфейс выбора каталога периодов планирования
  #end
  function RunViewFpPeriod(
      _wIntMode : word;  // режим запуска (cgiNo, cgiPick, ...) см.GLOCONST.INC
      _cTopRec  : comp;  // тип периода
      _cNodeTop : comp;  // вывод только ветки с вершиной cNodeTop, чтобы все дерево cNodeTop=comp(0)
  var _cPeriod  : comp   // выбранный период
  ) : integer;           // количество выбранных записей
  //#endregion FPPERIOD
  //****************************************************************************


  //============================================================================
  //#region FPCO
  //----------------------------------------------------------------------------
  #doc
     Получить наименование заданного центра ответственности
  #end
  function GetCOName(_cCO : comp) : string;

  //----------------------------------------------------------------------------
  #doc
     Получить имя маркера для каталога ЦО
  #end
  function GetCOMarkerName : string;
  //----------------------------------------------------------------------------
  #doc
     Запустить интерфейс выбора доступных ЦО
  #end
  function RunAvCO(
      _wIntMode : word;  // режим запуска (cgiNo, cgiPick, ...) см.GLOCONST.INC
  var _cCO      : comp   // выбранный ЦО
  ) : integer;           // количество выбранных записей
  //----------------------------------------------------------------------------
  #doc
     Запустить интерфейс выбора каталога ЦО
  #end
  function RunViewCO(
      _wIntMode : word;  // режим запуска (cgiNo, cgiPick, ...) см.GLOCONST.INC
      _cNodeTop : comp;  // вывод только ветки с вершиной cNodeTop, чтобы все дерево cNodeTop=comp(0)
  var _cCO      : comp   // выбранный ЦО
  ) : integer;           // количество выбранных записей
  //#endregion FPCO
  //****************************************************************************


  //============================================================================
  //#region FPVARIANT
  //----------------------------------------------------------------------------
  #doc
     Получить наименование заданного варианта планирования
  #end
  function GetVariantName(_cVariant : comp) : string;

  //----------------------------------------------------------------------------
  #doc
     Запустить интерфейс выбора доступных вариантов бюджета
  #end
  function RunAvVariant(
      _wIntMode : word;  // режим запуска (cgiNo, cgiPick, ...) см.GLOCONST.INC
      _cArea    : comp;  // область видимости
  var _cVariant : comp   // вариант бюджета
  ) : integer;           // количество выбранных записей
  //----------------------------------------------------------------------------
  #doc
     Запустить интерфейс выбора всех вариантов бюджетов
  #end
  function RunAllVariant(
      _wIntMode : word;  // режим запуска (cgiNo, cgiPick, ...) см.GLOCONST.INC
      _cNodeTop : comp;  // вершина
  var _cVariant : comp   // вариант бюджета
  ) : integer;           // количество выбранных записей
  //#endregion FPVARIANT
  //****************************************************************************


  //============================================================================
  //#region FPSTBUD
  //----------------------------------------------------------------------------
  #doc
     Получить наименование заданной статьи бюджета
  #end
  function GetStBudName(_cStBud : comp) : string;

  //----------------------------------------------------------------------------
  #doc
     Получить группу аналитики у заданной статьи
  #end
  function GetStBudGrAn(_cStBud : comp) : comp;

  //----------------------------------------------------------------------------
  #doc
     Получить валюту заданной статьи
  #end
  function GetStBudVal(_cStBud : comp) : comp;

  //----------------------------------------------------------------------------
  #doc
     Получить единицу измерения заданной статьи
  #end
  function GetStBudEd(_cStBud : comp) : comp;

  //----------------------------------------------------------------------------
  #doc
     Определить является ли данная статья "в т.ч."
  #end
  function GetStBudIsVTCh(_cStBud : comp) : boolean;

  //----------------------------------------------------------------------------
  #doc
     Сформировать HashAn для заданной статьи по переданному контейнеру аналитик
  #end
  function GetHashByStBud(_cStBud : comp; _CAn : TPtr) : comp;

  //----------------------------------------------------------------------------
  #doc
     Сформировать маркер доступных статей пользователя
  #end
  function GetAvailableStBudMarker(_sMarker: string) : boolean;

  //----------------------------------------------------------------------------
  #doc
     Запустить интерфейс выбора доступных статей
  #end
  function RunAvStBud(
  _wIntMode : word; var _cStBud : comp) : integer;           // количество выбранных записей

  //----------------------------------------------------------------------------
  #doc
     Запустить интерфейс выбора доступных статей, отфильтрованные по маркеру
  #end
  function RunAvFltStBud(
      _wIntMode : word;  // режим запуска (cgiNo, cgiPick, ...) см.GLOCONST.INC
      _FltMID   : TPtr;  // маркер фильтр
      _PickMID  : TPtr;  // маркер выбранных статей
  var _cStBud   : comp   // статья бюджета
  ) : integer;           // количество выбранных записей

  //----------------------------------------------------------------------------
  #doc
     Запустить интерфейс выбора всех статей бюджетов
  #end
  function RunAllStBud(
      _wIntMode : word;  // режим запуска (cgiNo, cgiPick, ...) см.GLOCONST.INC
  var _cStBud   : comp   // статья бюджета
  ) : integer;           // количество выбранных записей

  //----------------------------------------------------------------------------
  #doc
     Получить наименование маркера статей бюджетов
  #end
  function GetStBudMarkerName: string;
  //#endregion FPSTBUD
  //****************************************************************************


  //============================================================================
  //#region FPTFORM
  //----------------------------------------------------------------------------
  #doc
     Получить наименование заданной типовой формы
  #end
  function GetTFormName(_cTForm : comp) : string;

  //----------------------------------------------------------------------------
  #doc
     Получить аналитику типовой формы
  #end
  function GetAnTForm(_cTForm : comp; _CAn : TPtr) : boolean;

  //----------------------------------------------------------------------------
  #doc
     Запустить интерфейс выбора доступных типовых форм
  #end
  function RunAvTForm(
      _wIntMode : word;  // режим запуска (cgiNo, cgiPick, ...) см.GLOCONST.INC
      _cCO      : comp;  // ЦО
  var _cTForm   : comp   // типовая форма
  ) : integer;           // количество выбранных записей
  //#endregion FPTFORM
  //****************************************************************************


  //============================================================================
  //#region FPBUDANMEAN
  //----------------------------------------------------------------------------
  #doc
     Получить наименование аналитика
  #end
  function GetAnName     (_wAn : word) : string;

  //----------------------------------------------------------------------------
  #doc
     Получить наименование значения аналитики бюджетирования
  #end
  function GetMeanName   (_wAn: word; _cAn: comp) : string;
  //----------------------------------------------------------------------------
  #doc
     Получить вышестоящее значения аналитики бюджетирования
  #end
  function GetMeanNode   (_wAn: word; _cAn: comp) : comp;
  //----------------------------------------------------------------------------
  #doc
     Получить код значения аналитики бюджетирования
  #end
  function GetMeanCode   (_wAn: word; _cAn: comp) : string;

  //----------------------------------------------------------------------------
  #doc
     Получить код значения аналитики Галактики
  #end
  function GetGalMeanCode(_wAn: word; _cAn: comp) : string;

  //----------------------------------------------------------------------------
  #doc
  <brief>Проверить заданный контейнер аналитик</brief>
     Функция проверяет заданный контейнер на наличие в нем только значений
     учитываемых в бюджетировании, и при необходимости корректирует его.<br>
     True - если теперь в контейнере все значения учитываются в бюджетировании<br>
  #end
  function CheckAnBudCAn (_CAn : TPtr) : boolean;
  //#endregion FPBUDANMEAN
  //****************************************************************************


  //============================================================================
  //#region FPBUDGET
  //----------------------------------------------------------------------------
  #doc
     Получить наименование заданного бюджета
  #end
  function GetBudgetName(
      _wMode    : word;       // режим идентификации бюджета (cgiBudget_GetSingle, ...) см.FpConst.Inc
      _cBudget  : comp        // ссылка на бюджет
  ) : string;

  //----------------------------------------------------------------------------
  #doc
     Получить наименование бюджета по заданным реквизитам
  #end
  function GetBudgetNameEx(
      _wMode    : word;       // режим идентификации бюджета (cgiBudget_GetSingle, ...) см.FpConst.Inc
      _cCO      : comp;       // ЦО бюджета
      _cPeriod  : comp        // период бюджета
  ) : string;

  //----------------------------------------------------------------------------
  #doc
     Получить наименование бюджета по заданным реквизитам
  #end
  function GetBudgetNameUniversal(
      _wMode    : word;       // режим идентификации бюджета (cgiBudget_GetSingle, ...) см.FpConst.Inc
      _cBudget  : comp;       // ссылка на бюджет
      _cCO      : comp;       // ЦО бюджета
      _cPeriod  : comp        // период бюджета
  ) : string;

  //----------------------------------------------------------------------------
  #doc
     Добавить строку "примечания" к заданному бюджету
  #end
  function SetBudgetInfo(_cBudget : comp; sPrim : string) : boolean;

  //----------------------------------------------------------------------------
  #doc
     Получить ссылку на бюджет, найденный по заданным реквизитам
  #end
  function FindBudget(
      _cCO       : comp;      // ЦО бюджета
      _cPeriod   : comp;      // Период бюджета
      _wMessage  : word       // режим вывода сообщений (cgiNoMessage...) см.GLOCONST.INC
  ) : comp;

  //----------------------------------------------------------------------------
  #doc
     Создать, если надо, бюджет с заданными реквизитами
  #end
  function InsBudget(
      _cCO       : comp;      // ЦО бюджета
      _cPeriod   : comp;      // Период бюджета
      _wMessage  : word       // режим вывода сообщений (cgiNoMessage...) см.GLOCONST.INC
  ) : comp;

  //----------------------------------------------------------------------------
  #doc
     Создать, если надо, бюджет и копию бюджета с заданными реквизитами
  #end
  function InsBudgetAndBudVar(
      _cCO       : comp;      // ЦО бюджета
      _cPeriod   : comp;      // Период бюджета
  var _cBudVar   : comp;      // копия бюджета
  var _cVariant  : comp;      // Вариант бюджета
  var _sStage    : string;    // Стадия бюджетного процесса
      _wMessage  : word       // режим вывода сообщений (cgiNoMessage...) см.GLOCONST.INC
  ) : comp;

  //----------------------------------------------------------------------------
  #doc
     Удалить бюджет с заданными реквизитами
  #end
  function DelBudget(
      _cBudget   : comp;      // ссылка на бюджет
      _wMessage  : word       // режим вывода сообщений (cgiNoMessage...) см.GLOCONST.INC
  ) : boolean;

  //----------------------------------------------------------------------------
  #doc
     Получить имя маркера интерфейса каталога бюджетов
  #end
  function GetKatBudMarkerName : string;

  //----------------------------------------------------------------------------
  #doc
     Запустить интерфейс выбора бюджетов
  #end
  function RunViewBudget(
  var _wIntMode : word;       // Режим запуска (выбор/просмотр: cgiNo, cgiPick,...)
  var _wBudMode : word;       // режим идентификации бюджета (cgiBudget_GetSingle, ...) см.FpConst.Inc
  var _cBudget  : comp;       // Бюджет
  var _cBudVar  : comp        // Копия бюджета
  ) : integer;                // количество выбранных записей

  //----------------------------------------------------------------------------
  #doc
     Запустить интерфейс выбора редактирования бюджетов
  #end
  function RunBudEdit(
  var _wBudMode : word;       // режим идентификации бюджета (cgiBudget_GetSingle, ...) см.FpConst.Inc
  var _cBudget  : comp;       // Бюджет
  var _cCO      : comp;       // ЦО
  var _cPeriod  : comp;       // Период
  var _cBudVar  : comp;       // Копия бюджета
  var _wKodReg  : word;       // Регистр учета
  var _cTForm   : comp        // Типовая форма бюджета
  ) : boolean;

  //----------------------------------------------------------------------------
  #doc
     Запустить интерфейс просмотра лимитов бюджета
  #end
  function RunViewLimit(
      _cBudVar : comp;        // копия бюджета
      _cStBud  : comp;        // статья бюджета
      _dDate   : date;        // дата совершения операции
      _CAn     : TPtr         // контейнер аналитик
  ) : boolean;

  //----------------------------------------------------------------------------
  #doc
     Запустить интерфейс анализа лимитов бюджета по документу
  #end
  function RunFullDocLimitAnaliz(
      _cAnalizTune : comp;    // настройка "Анализ лимитов"
      _wTipDoc     : word;    // тип документа
      _cDocRec     : comp     // NRec документа
  ) : boolean;
  //----------------------------------------------------------------------------
  #doc
     Запустить интерфейс анализа лимитов бюджета по спецификации документа
  #end
  function RunSpecDocLimitAnaliz(
      _cAnalizTune : comp;    // настройка "Анализ лимитов"
      _cOFPBudCO   : comp;    // ЦО бюджета
      _cOFPStBud   : comp;    // статья бюджета
      _dOFPDoc     : date     // дата документа
  ) : boolean;
  //#endregion FPBUDGET
  //****************************************************************************


  //============================================================================
  //#region FPBUDVAR
  //----------------------------------------------------------------------------
  #doc
     Получить наименование копии бюджета
  #end
  function GetBudVarName(_cBudVar : comp) : string;

  //----------------------------------------------------------------------------
  #doc
     Добавить строку "примечания" к копии бюджету
  #end
  function SetBudVarInfo(_cBudget : comp; sPrim : string) : boolean;

  //----------------------------------------------------------------------------
  #doc
     Найти "любую" доступную копию заданного бюджета
  #end
  function FindAnyAvBudVar(
      _cBudget   : comp;    // бюджет
      _wMessage  : word     // режим вывода сообщений (cgiNoMessage...) см.GLOCONST.INC
  ) : comp;

  //----------------------------------------------------------------------------
  #doc
     Найти копию бюджета по заданным реквизитам
  #end
  function FindBudVar(
      _cBudget   : comp;    // бюджет
      _cVariant  : comp;    // вариант бюджета
      _sStage    : string;  // стадия бюджетного процесса
      _wMessage  : word     // режим вывода сообщений (cgiNoMessage...) см.GLOCONST.INC
  ) : comp;

  //----------------------------------------------------------------------------
  #doc
     Найти "последнюю" копию бюджета по заданным реквизитам
  #end
  function FindLastBudVar(
      _cBudget   : comp;    // бюджет
      _cVariant  : comp;    // вариант бюджета
      _wMessage  : word     // режим вывода сообщений (cgiNoMessage...) см.GLOCONST.INC
  ) : comp;

  //----------------------------------------------------------------------------
  #doc
     Определить возможности редактирования копии бюджета
  #end
  function CanEditValues(
      _cBudVar  : comp;     // копия бюджета
      _wKodReg  : word;     // регистры бюджета
      _wMessage : word      // показывать сообщения
  ) : boolean;

  //----------------------------------------------------------------------------
  #doc
     Запустить интерфейс выбора выбора доступных копий бюджета
  #end
  function RunViewBudVar(
      _wIntMode : word;     // режим (выбор/просмотр: cgiNo, cgiPick,...)
      _cBudget  : comp;     // бюджет
  var _cBudVar  : comp      // копия бюджета
  ) : integer;              // количество выбранных записей

  //----------------------------------------------------------------------------
  #doc
     Запустить интерфейс выбора редактирования копии бюджета
  #end
  function RunEditBudVar(
      _wIntMode : word;     // режим (выбор/просмотр: cgiNo, cgiPick,...)
      _cBudget  : comp;     // бюджет
  var _cBudVar  : comp      // копия бюджета
  ) : boolean;
  //#endregion FPBUDVAR
  //****************************************************************************


  //============================================================================
  //#region HASHAN/CONTAN
  //----------------------------------------------------------------------------
  #doc
     Преобразовать контейнер аналитик по заданному слою
  #end
  function OrderContAn(
      _CAnID   : TPtr;     // ID контейнера аналитик
      _cSloj   : comp;     // слой аналитик
      _cDefAn  : comp      // значение аналитики по умолчанию (для новых аналитик)
  )  : boolean;

  //----------------------------------------------------------------------------
  #doc
     Преобразовать HashAn по заданному слою
  #end
  function OrderHashAn(
  var _cHashAn : comp;     // старый -> новый cHashAn
      _cSloj   : comp;     // слой аналитик
      _cDefAn  : comp      // значение аналитики по умолчанию (для новых аналитик)
  )  : boolean;

  //----------------------------------------------------------------------------
  #doc
     Получить ссылку на HasAn по заданному слою и контейнеру аналитик
  #end
  function GetHash(
      _cSloj   : comp;     // слой аналитик
      _CAnID   : TPtr;     // ID контейнера аналитик
      _IsIns   : boolean   // требуется ли создавать новый HashAn
  ) : comp;

  //----------------------------------------------------------------------------
  #doc
     Получить слой по контейнеру аналитик
  #end
  function GetSlojByContAn(
      _cGrAn   : comp;     // группа аналитик
      _CAnID   : TPtr;     // ID контейнера аналитик
      _IsIns   : boolean;  // требуется ли создавать новый слой
  var _wError  : word      // код ошибки
                           // 1 - Не найдена группа аналитик
                           // 2 - Количество переданных аналитик больше чем в группе аналитик
                           // 3 - В группе аналитик не найдена аналитика, аналитики из
                           //     контейнера не совместимы с заданной группой аналитик
                           // 4 - Слой не найден, но построен
  ) : comp;
  //#endregion HASHAN/CONTAN
  //****************************************************************************


  //============================================================================
  //#region FPVALUES
  //----------------------------------------------------------------------------
  #doc
     Разрешено ли редактирование данных в заданном периоде
  #end
  function CanEditValuesInPeriod(
    _cPeriod  : comp;      // период бюджета
    _wKodReg  : word;      // регистр бюджета
    _wMessage : word       // режим выдачи сообщений
  ) : boolean;
  //----------------------------------------------------------------------------
  #doc
     Разрешено ли редактирование данных в заданной дате
  #end
  function CanEditValuesInDate(
    _dtDate   : date;      // дата
    _wKodReg  : word;      // регистр бюджета
    _wMessage : word       // режим выдачи сообщений
  ) : boolean;

  //----------------------------------------------------------------------------
  #doc
     Добавить сумму в бюджет по заданным реквизитам
  #end
  function AddSumToBudget(
      _cBudVar : comp;     // копия бюджета
      _wKodReg : word;     // код регистра учета
      _cStBud  : comp;     // статья бюджета
      _dDate   : date;     // дата совершения операции
      _CAn     : TPtr;     // контейнер аналитик
      _cVal    : comp;     // валюта операции
      _Summa   : double    // сумма
  ) : boolean;

  //----------------------------------------------------------------------------
  #doc
     Получить сумму из бюджета по заданным реквизитам
  #end
  function GetSumFromBudget(
      _cBudVar : comp;     // копия бюджета
      _wKodReg : word;     // код регистра учета
      _cStBud  : comp;     // статья бюджета
      _dDate   : date;     // дата совершения операции
      _CAn     : TPtr;     // контейнер аналитик
  var _cVal    : comp;     // валюта, в которой получена сумма из бюджета
  var _Summa   : double    // сумма
  ) : boolean;

  //----------------------------------------------------------------------------
  #doc
     Удалить сумму из бюджета по заданным реквизитам
  #end
  function DelSumFromBudget(
      _cBudVar : comp;     // копия бюджета
      _wKodReg : word;     // код регистра учета
      _cStBud  : comp;     // статья бюджета
      _dDate   : date      // дата
  ) : boolean;

  //----------------------------------------------------------------------------
  #doc
     Удалить сумму из бюджета по заданным реквизитам
  #end
  function DelSumFromBudget_SpecPK(
      _cBudCO    : comp;   // ЦО бюджета
      _cBudTPer  : comp;   // тип периода бюджета
      _dDate     : date;   // дата
      _wKodReg   : word;   // код регистра учета
      _cVariant  : comp;   // вариант бюджета
      _sStage    : string; // стадия бюджетного процесса
      _MarkerID  : TPtr;   // список статей бюджета
      _wMessage  : word    // режим вывода сообщений (cgiNoMessage...) см.GLOCONST.INC
  ) : boolean;
  //#endregion FPVALUES
  //****************************************************************************


  //============================================================================
  //#region FPOBOROT
  //----------------------------------------------------------------------------
  #doc
     Создать фин. операцию по заданным реквизитам и с указанной суммой
  #end
  function AddSumToFpOborot(
      _cSoprHoz : comp;    // cSoprHoz
      _wKodReg  : word;    // код регистра учета
      _cCO      : comp;    // ЦО
      _cStBud   : comp;    // статья бюджета
      _dDate    : date;    // дата совершения операции
      _CAnDoc   : TPtr;    // контейнер аналитик документа
      _CAnBud   : TPtr;    // контейнер аналитик бюджета
      _cVal     : comp;    // валюта операции
      _Summa    : double;  // сумма
      _wMessage : word     // режим вывода сообщений (cgiNoMessage...) см.GLOCONST.INC
  ) : boolean;
  //----------------------------------------------------------------------------
  #doc
     Удалить фин. операции по заданным реквизитам
  #end
  function DelSumFromFpOborot(
      _cSoprHoz : comp;    // cSoprHoz
      _wKodReg  : word;    // код регистра учета
      _wMessage : word     // режим вывода сообщений (cgiNoMessage...) см.GLOCONST.INC
  ) : boolean;
  //#endregion FPOBOROT
  //****************************************************************************

End; //#endregion ObjInterface
//******************************************************************************


//==============================================================================
VipInterface ExtFpBudStuff_OFP implements IExtFpBudStuff_OFP
#Licensed_Free;
Public:
  constructor Init;
  destructor  Done;
End;
//******************************************************************************

#endif//__ExtFpBudStuff_OFP_Vih__
