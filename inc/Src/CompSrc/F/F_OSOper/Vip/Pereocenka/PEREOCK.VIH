//------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Галактика 8.1 - Операции по ОС и НМА
// Интерфейс для работы со стандартными коэффициентами при переоценке ОС
//------------------------------------------------------------------------------

#ifndef __PEREOCK_VIH__
#define __PEREOCK_VIH__

#ifdef ComponentVersion
#Component "F_OSOPER"
#end

#doc
Объектный интерфейс для работы со стандартными коэффициентами при переоценке ОС
#end

ObjInterface ObjPereocK;

#doc
Инициализация параметров
#end
// Инициализация параметров
Procedure SetPereocKParams(In_cNrecPer    : comp;   // ссылка на переоценку
                           In_wFlagRed    : word;   // признак : <> 0 - переоценка была проведена
                           In_wPereocType : word    // тип переоценки: 0 - согласно норм аморт
                                                    //                 1 - согласно ОКОФ
                          );

#doc
Нахождение минимальной даты для данной переоценки и метода учета по всем диапазонам
#end
// Нахождение минимальной даты для данной переоценки и метода учета по всем диапазонам
Function GetMinDate(cInPerOsF : comp; cInNastrOsF : comp) : date;

#doc
Нахождение стандартного коэффициента
#end
// Нахождение стандартного коэффициента
Function ShKoefNR(pcKatOsNRec : comp; pdKoefPer : date; pcNastrOsNRec : comp;
                  pcPerOsNRec : comp; wPerOsFlag : word; var OutKoefDef : tSumma) : comp;

#doc
Вычисление значения алгоритма
#end
// Вычисление значения алгоритма
Function GetAlgoritmValues(pcShKoefNRec : comp; pcKatOsNRec : comp; pcNastrOsNRec : comp;
                           pdDate : Date; pwMetodType : word;
                           var wAlgType : word; var OutValue : tSumma) : boolean;

  Function CheckExtAttr(AttrName : string) : boolean;
  Function GetKoefNRecByDatOk : double;
end;

//------------------------------------------------------------------------------
VipInterface PereocK implements ObjPereocK
  Parameters (pTiDk: word; cNrecPer : comp; wFlagRed : word; wPereocType : word)
  Licensed (
    #include PereocK.lih
           );
public:
  Constructor Init;

  static function myCheckPereocenkaPath : boolean;
end;

#end // __PEREOCK_VIH__


