/*
 ╔═══════════════════════════════════════════════════════════════════════════╗
 ║                     (c) 1999-2004 корпорация ГАЛАКТИКА                    ║
 ║ Проект        : ГАЛАКТИКА                                                 ║
 ║ Система       : Основные средства                                         ║
 ║ Версия        : 5.8                                                       ║
 ║ Назначение    : Проверка проведенности операций                           ║
 ║ Ответственный : Какареко Сергей Александрович                             ║
 ╚═══════════════════════════════════════════════════════════════════════════╝
*/
#ifndef __CHECKOPE_VIH__
#define __CHECKOPE_VIH__

#ifdef ComponentVersion
#Component "F_OSOPER"
#end

#doc
Проверка проведенности операций
#end
ObjInterface oCheckOper;
//------------------------------------------------------------------------------
#doc
  можно ли откатить операцию
  // -------------------------------------------------------------------------
  // cMoveOs - NRec MoveOs, который надо проверять
  // cSpMoveOs = 0  - проверять все SpMoveOs
  // cSpMoveOs <> 0 - проверять только SpMoveOs.Nrec = cSpMoveOs
  // cSpMoveOs - возвращает Nrec SpMoveOs, который нельзя откатить
  // True - можно откатить операцию, false - нельзя
  // -------------------------------------------------------------------------
#end
  Function CanDelMoveOs(cMoveOs : comp; var cSpMoveOs : comp) : boolean;
//------------------------------------------------------------------------------
#doc
   Проверка проведенности операции.
  // -------------------------------------------------------------------------
  // Передаваемые параметры:
  //   cMoveOs - ссылка на операцию
  //   cNRec   - 0, если надо проверить проведена ли операция хотя бы по
  //             одному методу учета.
  //             SpMove.NRec если надо проверить проведена ли
  //             операция хотя бы по одному методу учета кроме того, к
  //             которому относится переданный SpMove
  // -------------------------------------------------------------------------
#end
  Function OperProv(cMoveOs : comp; cNRec : comp) : boolean;
//------------------------------------------------------------------------------
#doc
   Проверка проведена ли операция по определенному методу учета
#end
  Function OperProvUcht(cMoveOs : comp; cNastrOs : comp) : boolean;
//------------------------------------------------------------------------------
#doc
  Проверка проведенности расчета амортизации по инвентарной карточке
  // -------------------------------------------------------------------------
  // Передаваемые параметры:
  //   cKatOs  - ссылка на карточку
  //   cNRec   - 0, если надо проверить сделан ли расчет хотя бы по одному
  //             методу учета.
  //             SpKatOs.NRec если надо проверить сделан ли
  //             расчет хотя бы по одному методу учета кроме того, к
  //             которому относится переданный SpKatOs
#end
  Function OperAmort(cKatOs : comp; cNRec : comp) : boolean;
//------------------------------------------------------------------------------
#doc
  Определяет "проведённость" операции в зависимости от настройки OS.UseAnyMethodUch...</brief>
  (учитывать ли операции, проведённые по любому методу учёта или учитывать операции,
   проведённые только по заданному методу учёта).
#end
  function IsOperProved(cMoveOs : comp; cNastrOs : comp) : boolean;
//------------------------------------------------------------------------------
end;

ObjInterface oCheckOper1;
#doc
  Можно ли откатить/провести операцию по определенному методу учета
#end
// -------------------------------------------------------------------------
// cRecNastrOS - NRec метода учета, по которому надо проверять
// cRecMoveOs - NRec MoveOs, который надо проверять
// cRecSpMoveOs = 0  - проверять все SpMoveOs
// cRecSpMoveOs <> 0 - проверять только SpMoveOs.Nrec = cRecSpMoveOs
// cRecSpMoveOs - возвращает Nrec SpMoveOs, который нельзя откатить
// True - можно откатить операцию, false - нельзя
// -------------------------------------------------------------------------
  Function CanDelMoveOs_OneNastrOS(cRecNastrOS : comp;
                                   cRecMoveOs : comp;
                                   var cRecSpMoveOs : comp) : boolean;
end;

ObjInterface oCheckOper2;
#doc
  Поиск произвольной непроведенной операции для инвентарной карточки ОС/НМА
#end
//------------------------------------------------------------------------------
  Function FindNotMovedOper(pcKatOS, pcNastrOS, pcMoveOS : comp; pwTiDk, pwMode: word) : comp;
//------------------------------------------------------------------------------
#doc
  Значение ответа на запрос
#end
//------------------------------------------------------------------------------
  Function GetInquiryAnswerNotMovedOper : word;
//------------------------------------------------------------------------------
end;

//------------------------------------------------------------------------------
ObjInterface oCheckOper3;
#doc
  Количество ИК в "свободном" остатке в текущем отчетном периоде
#end
  Function GetFreeQuantityOS(pcKatOS, pcMoveOS : comp) : double;
end;

//------------------------------------------------------------------------------
ObjInterface oCheckOper4;
  // Проведена ли операция поступления для карточки
  Function isOperPostProv(_cKatOs : comp) : boolean;
  // Есть ли проведенная любая операция для карточки
  Function isOperProv(_cKatOs : comp) : boolean;

end;


VipInterface CheckOper
  Implements oCheckOper, oCheckOper1, oCheckOper2, oCheckOper3, oCheckOper4
  Licensed   (Free);

#end // __CHECKOPE_VIH__
