//                                                      (c) корпорация Галактика
// Галактика 8.1 - Бухгалтерский контур
// Операции по объекту ОС (НМА)
//******************************************************************************

#ifndef __OS_Oper__vih__
#define __OS_Oper__vih__

#ifdef ComponentVersion
#component "F_OSOPER"
#end

#ifdef ComponentVersionInDict
  #include ISpMoveOS.vih
  public type TSpMoveOS  = record as table SpMoveOS;
  public type TSpMoveOSX = record as table SpMoveOS with x$position;
#else
  type TSpMoveOS  = record as table SpMoveOS;
  type TSpMoveOSX = record as table SpMoveOS with x$position;
#end

#doc
Операции по объекту ОС (НМА)
#end
ObjInterface ObjOS_Oper;
//------------------------------------------------------------------------------
#doc
  инициализация
#end
  Procedure InitOS_Oper(wTip, wMode: word);
//------------------------------------------------------------------------------
#doc
  установка метода учета для операций
#end
  Procedure SetNastrOs(pcNastrOsNRec : comp);
//------------------------------------------------------------------------------
#doc
  пересканирование операций по ИК
#end
  Procedure ReScanOS_Oper(cRecOS: comp; wMode: word);
//------------------------------------------------------------------------------
#doc
  параметры расчета амортизации
#end
  Function SetParamFullAmort(wIsMulti: word): boolean;
//------------------------------------------------------------------------------
#doc
  расчет амортизации будущих периодов для объекта ОС
  по заданному методу учета
#end
  Function CalcFullAmortOwn(cRecOS, cRecNastrOS: comp): word;
//------------------------------------------------------------------------------
#doc
  расчет амортизации будущих периодов для выбранных объектов ОС
#end
  Function CalcFullAmort(MrkKatOS: string): boolean;
//------------------------------------------------------------------------------
#doc
  удаление рассчитанной амортизации будущих периодов для выбранных объектов ОС
#end
  Function DelFutureAmort(MrkKatOS: string): boolean;
//------------------------------------------------------------------------------
#doc
  поиск cSpMoveOs и cKatOs, для которого есть операция по драгоценным металлам
#end
  Function GetMovDrag(cSpMoveOsDM: comp): comp;
//------------------------------------------------------------------------------
#doc
  Инициализация таблиц в памяти с перерасчетом амортизации на заданную дату
#end
  // Инициализация таблиц в памяти (mt_SpKatOS, mt_ArcIznos)
  // с перерасчетом амортизации на заданную дату
  Function Init_MTForCalcAmortAbsract(cRecOS, cRecNastrOS: comp; dBaseDate, dDateCalc: Date): word;
//------------------------------------------------------------------------------
#doc
  Рассчитанные суммы амортизации из временных таблиц
#end
  Procedure GetSumsFromMT(boIsArchive: boolean; dt: date; var doStoim, doSumIzn, doSIznM: double);
//------------------------------------------------------------------------------
#doc
  Инициализация таблицы Mt_KatOS на заданную дату без перерасчетов
#end
  Function Init_MTKatOS(cRecOS: comp; dBaseDate: Date): word;
//------------------------------------------------------------------------------
#doc
  Инициализация таблицы Mt_SpKatOS на заданную дату без перерасчетов
#end
  Function Init_MTSpKatOS(cRecOS, cRecNastrOS: comp; dBaseDate: Date): word;
//------------------------------------------------------------------------------
#doc
  Инициализация таблицы в памяти mt_ArcIznos без перерасчета амортизации за период
#end
  Function Init_MTArcIznos(cRecOS, cRecNastrOS: comp; dBegDate, dEndDate: Date): word;
//------------------------------------------------------------------------------
#doc
  Специальный расчет балансовой стоимости ИК по-украински используя Mt_SpKatOS, MT_ArcIznos
#end
  Function GetBalStoimByNalGrFromMTTbl(In_cKatOS, In_cNastrOS : comp; In_dAmPeriodStart: date) : double;
//------------------------------------------------------------------------------
#doc
  Дата начала периода, по состоянию на которую должно происходить начисление.
#end
 // Зависит от периодичности начисления амортизации: месяц, квартал, полугодие,
 // год (без учета настроек алгоритма).
 Function GetAmPeriodStart(_cNastrOS: comp; pdCurrent:date) : date;
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
  event Procedure OnReScanKatOs;

//------------------------------------------------------------------------------
#doc
  Событие по изменению метода учета
#end
  event Procedure OnChangeNastrOs;


end;



VipInterface OS_Operations  implements ObjOS_Oper  licensed (FREE)
  Parameters ( pKatOS: comp; pwTip: word )
;

#end
