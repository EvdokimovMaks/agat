/*
 ╔═══════════════════════════════════════════════════════════════════════════╗
 ║                     (c) 1994,2004 корпорация ГАЛАКТИКА                    ║
 ║ Проект        : ГАЛАКТИКА                                                 ║
 ║ Система       : Основные средства                                         ║
 ║ Версия        : 5.80                                                      ║
 ║ Назначение    : Функции передачи МЦ в ОС по спецификации складского ордера║
 ║ Ответственный : Какареко Сергей Александрович                             ║
 ╚═══════════════════════════════════════════════════════════════════════════╝
*/
#ifndef __MCTOOS_VIH__
#define __MCTOOS_VIH__

#ifdef ComponentVersion
#Component "F_OSOPER"
#end
#doc
Функции передачи МЦ в ОС по спецификации складского ордера
#end
ObjInterface MCToOSObj1;
//------------------------------------------------------------------------------
#doc
  Очистка очереди на формирование ОС
#end
  Function ClearQueue : boolean;
//------------------------------------------------------------------------------
#doc
  Инициализация операции передачи МЦ в ОС(НМА)
#end
  Function InitOperation( _TipDk        : word;
                          _PodrFromNRec : comp;
                          _PodrToNRec   : comp;
                          _MolFromNRec  : comp;
                          _MolToNRec    : comp;
                          _OperDate     : date ) : boolean;
//------------------------------------------------------------------------------
#doc
  Установка подразделения откуда передаются МЦ
#end
  Procedure SetPodrFrom( _PodrNRec : comp );
//------------------------------------------------------------------------------
#doc
  Установка подразделения куда передаются МЦ
#end
  Procedure SetPodrTo  ( _PodrNRec : comp );
//------------------------------------------------------------------------------
#doc
  Установка МОЛ от кого передаются МЦ
#end
  Procedure SetMolFrom ( _MolNRec  : comp );
//------------------------------------------------------------------------------
#doc
  Установка МОЛ кому передаются МЦ
#end
  Procedure SetMolTo   ( _MolNRec  : comp );
//------------------------------------------------------------------------------
#doc
 Установка дата операции передачи
#end
  Procedure SetOperDate( _OperDate : date );
//------------------------------------------------------------------------------
#doc
  Добавление спецификации ордера в очередь на формирование ОС
#end
  Function AddSpOrderToQueue( _SpOrderNRec : comp ) : boolean;
//------------------------------------------------------------------------------
#doc
  Удаление спецификации ордера из очереди на формирование ОС
#end
  Function SubSpOrderFromQueue( _SpOrderNRec : comp ) : boolean;
//------------------------------------------------------------------------------
#doc
  Удаление записей в картотеке и в оперциях по данным в очереди
#end
  Function UndoOperation : boolean;
//------------------------------------------------------------------------------
#doc
  Удаление записей в OsMc и в оперциях
#end
  Function UndoOperationOsMc : boolean;
//------------------------------------------------------------------------------
#doc
  Формирование записей в картотеке и в операциях по данным в очереди
#end
  Function DoOperation : boolean;
//------------------------------------------------------------------------------
#doc
  Функция добавления записи в OsMcMov
#end
  // возвращает nRec на созданную запись
  function Insert_OsMcMov(_DatOb     : Date; // "Дата проведения операции", OperDate
                          _TipDoc    : Word; // "Тип операционного документа",
                          _cOsMc     : comp;
                          _cMoveOs   : comp;
                          _cOldKatOs : comp;
                          _cNewKatOs : comp;
                          _cOldGrup  : comp;
                          _cNewGrup  : comp;
                          _cMovGrup  : comp;
                          _BarKod    : tBarKod) : comp;

//------------------------------------------------------------------------------
#doc
  Функция создания записи в OsMc
#end
  // Возвращает nRec на только что созданную OsMс, для того чтобы эту запись можно было указать как вышестоящую
  function Insert_OsMc (_TiDk       : word;
                        _cKatOs     : comp;
                        _cMc        : comp;
                        _cSpOrder   : comp;
                        _cOsSpOrder : comp;
                        _cGrup      : comp;
                        _Kol        : double;
                        _DateK      : date;
                        _BarKod     : string[30];
                        _ZavNom     : string[15];
                        _DopInNum   : string[15];
                        _isLeaf     : word;
                        _bFillStoim : boolean; //надо ли заполнять стоимость у верхнего комплекта
                        _Stoim      : double;
                        _SumIzn     : double;
                        _SIznM      : double;
                        _cNastrOs   : comp       ) : comp;
//------------------------------------------------------------------------------
#doc
   Позиционирование на NastrOs
#end
  procedure Complekt_InitNastrOS (_TiDk : word);
//------------------------------------------------------------------------------
#doc
   Процедура инициализации для того чтобы Complekt_CreateHierarchy можно было использовать в другом месте
#end
  Procedure Complekt_InitParameters (_ZavNom : string [80]; _DopInNum : string[15]; _OperDate : Date; _cSpOrder: comp; _TiDk : word);
//------------------------------------------------------------------------------
#doc
  Процедура передачи дерева комплекта матценностей из KatMC в OSMC
  начиная со 2-го уровня
#end
  Procedure Complekt_CreateHierarchy( _cMCkompl   : comp;    // - ссылка на комплект т.е. на вышестаящую матценность из KatMC
                                                             //   при первом вызове она равна комплекту
                                      _LevelMax   : word;    // - Максимальный уровень до которого нужно переводить комплект
                                                             //   первый уровень это сам комплект
                                      _Level      : word;    // - Счетчик текущего уровня
                                                             //   при первом вызове значение должно быть равно 1
                                                             //   т.к. первый уровень при переводе находится в KatOS-е
                                      _cGrupOSMC  : comp;    // - Ссылка на вышестоящую запись из OsMc
                                                             //   при первом вызове она = 0
                                      _cKatOs     : comp;    // - Ссылка на KatOS
                                      _InsOsMcMov : boolean; // - Флаг указывающий, что нужно добавлять OsMcMov
                                                             //   при создании OsMc.
                                      _cMovGrup   : comp;    // - Ссылка на вышестоящую запись из OsMcMov
                                                             //
                                                             // Эти два параметра позволяют формировать цену составляющего
                                                             // комплекта пропорционально изменению цены всего комплекта
                                                             // Если стоимость не менялась то внесите две одинаковые цифры
                                      _StoimPrOld : double;  // - Стоимость старая - при поступлении
                                      _StoimPrNew : double   // - Стоимость новая - текущая
                                    );
//------------------------------------------------------------------------------
#doc
  Выгрузка дополнительных данных по составляющим комплектов типа средней
  цены, приходных ордеров и т.п.
#end
  //
  // Параметры:
  // _LevelMax  - Максимальный уровень до которого нужно переводить комплект
  //              первый уровень это сам комплект
  // _cKatMc    - Ссылка на МЦ, являющуюся комплектом (заполняется в случае
  //              необходимости позиционирования из внешнего интерфейса)
  // _cSpOrder  - Ссылка на SpOrder(заполняется в случае необходимости
  //              позиционирования из внешнего интерфейса)
  procedure FillSpMcDop(_LevelMax : word; _cSpOrder : comp);
end;

ObjInterface MCToOSObj2;
//------------------------------------------------------------------------------
#doc
  Числовое значение количества перемещаемых МЦ
#end
  Function GetKol_OsMCMov(_strKol: string; var _Kol: tSumma): boolean;
//------------------------------------------------------------------------------
#doc
  Количество МЦ прибывшее/убывшее в/из соcтав(-а) ОС/НМА за период
#end
  Function GetMoveMCIntoOS(_cMc, _cKatOs : comp; _dBeg, _dEnd : Date) : tSumma;
end;

ObjInterface MCToOSObj3;
//------------------------------------------------------------------------------
#doc
  Функция создания записи в SpOsMc. Возвращает nRec на созданную SpOsMс
#end
  Function InsertSpOsMc (_cOsMc
                       , _cNastrOs    : comp;
                         _Stoim
                       , _SumIzn
                       , _SIznM       : tSumma;
                         _bAddToUpper : boolean //надо ли заполнять стоимость у верхнего комплекта
                        ) : comp;
//------------------------------------------------------------------------------
#doc
  Функция создания записи в OsMc без спецификации. Возвращает nRec на созданную OsMс,
#end
  Function InsertOsMc (_TiDk       : word;
                       _cKatOs     : comp;
                       _cMc        : comp;
                       _cSpOrder   : comp; // Ордер на поступление
                       _cOsSpOrder : comp; // Ордер на выбытие или перемещение
                       _cGrup      : comp;
                       _Kol        : double;
                       _DateK      : date;
                       _BarKod     : tBarKod;
                       _ZavNom     : s80;
                       _DopInNum   : s15;
                       _isLeaf     : word
                      ) : comp;
//------------------------------------------------------------------------------
end;

ObjInterface MCToOSObj4;
#doc
  Сохранение сформированного инв.номера для просмотра/редактирования
#end
  Procedure SaveNewInNum(vbKatOs : type$KatOs);
//------------------------------------------------------------------------------
#doc
  Просмотр/редактирование сформированных инв.номеров по операции
#end
  Procedure ShowNewInNum(pcMoveOS: comp; pwMode: word);
//------------------------------------------------------------------------------
end;

Table Struct MCToOSQ
(
  cSpOrder  : comp,
  cKatMc    : comp,
  Num       : word,
  Level     : word,
  LevelMax  : word
)
with index
(
  Index01 = cSpOrder,
  Index02 = cKatMc
);

Table Struct TSpMcDop
(
  cSpMc        : comp, // = 0 для верхнего комплекта
  cMc          : comp, // ссылка на МЦ для текущей записи состава комплекта
  cPrihSpOrder : comp, // приходный ордер
  Price        : double,
  cOrgBase     : comp, // контрагент из накладной на поступление
  cPodr        : comp,
  cMol         : comp,
  cParty       : comp,
  cHigh        : comp
)
with index
(
  TSpMcDop1 = cSpMc + cMc
);

Table Struct TSpMcDopEx
(
  cSpMc        : comp, // = 0 для верхнего комплекта
  cMc          : comp, // ссылка на МЦ для текущей записи состава комплекта
  cPrihSpOrder : comp, // приходный ордер
  Price        : double,
  PriceN       : double,
  cOrgBase     : comp, // контрагент из накладной на поступление
  cPodr        : comp,
  cMol         : comp,
  cParty       : comp,
  cHigh        : comp
)
with index
(
  TSpMcDopEx1 = cSpMc + cMc
);

VipInterface MCToOS
  Implements MCToOSObj1, MCToOSObj2, MCToOSObj3, MCToOSObj4
#ifdef ATL51
  Licensed   (FREE)
#end
;

#end // __MCTOOS_VIH__
