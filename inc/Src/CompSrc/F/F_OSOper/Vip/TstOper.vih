/*
 ╔═══════════════════════════════════════════════════════════════════════════╗
 ║                     (c) 2003 корпорация ГАЛАКТИКА                         ║
 ║ Проект        : ГАЛАКТИКА                                                 ║
 ║ Система       : Основные средства                                         ║
 ║ Версия        : 5.8                                                       ║
 ║ Назначение    : Функции проверки операций ОС, НМА                         ║
 ╚═══════════════════════════════════════════════════════════════════════════╝
*/
#ifndef __TSTOPER_VIH__
#define __TSTOPER_VIH__
#include NeedRights.vih

#ifdef ComponentVersion
#Component "F_OSOPER"
#end

// * проверка операций;
// * корректировка операций;
// * имитация проведения операций.
#doc
Функции проверки операций ОС, НМА
#end

ObjInterface oTstOper;
// ---------------------------------------------------------------------------
#doc
  Проверка корректности операций от периода карточки до заданной даты.</brief><br>
  ( Набор карточек задается пометкой в таблице Pick. )
#end
  // Результаты сохраняются в таблицах TBadOper, TBadOperInterpret
  // ---------------------------------------------------------------------------
  // Сохраняется список некорректных операций по карточкам. Анализ операции
  // по отдельной карточке заканчивается после обнаружения некорректной
  // операции, которую невозможно корректно перепровести.
  // ---------------------------------------------------------------------------
  // Передаваемые параметры:
  //         pwPickList - код в таблице Pick для поля wList
  //         pdEndDate  - конечная дата обработки
  //         pwMode     - режим работы функции, битовая маска:
  //                      coChkOperUpdate - корректировка операций
  //                      coChkOperInterpret - формировать записи по интерпретации различий в операциях
  procedure CheckIKOperationsOnPick( pwPickList : word; pdEndDate : date; pwMode : word );
// ---------------------------------------------------------------------------
#doc
  Проверка корректности операций от периода карточки до заданной даты.</brief><br>
  ( Набор карточек задается их типом в таблице KatOs: 15 - ОС, 16 - НМА. )
#end
  // Работает аналогично CheckIKOperationsOnPick
  procedure CheckIKOperationsOnTiDk( pwTiDk : word; pdEndDate : date; pwMode : word );
// ---------------------------------------------------------------------------
#doc
  Проверка корректности операций от периода карточки до заданной даты.</brief><br>
  ( Осуществляется по одной заданной карточке.)
#end
  // Работает аналогично CheckIKOperationsOnPick
  procedure CheckIKOperations( pcKatOs : comp; pdEndDate : date; pwMode : word );
// ---------------------------------------------------------------------------

procedure CheckIKOperationsOnSpMoveOs ( _cSpMoveOs : comp; pdEndDate : date; pwMode : word );

end;

VipInterface TstOper   Implements oTstOper, oCheckRights  Licensed   (Free);

// режимы обработки
const
  coChkOper          : word = 0; // выполнение проверки
  coChkOperUpdate    : word = 1; // корректировка операций при проверке
  coChkOperInterpret : word = 2; // формировать записи по интерпретации различий в операциях
end;

// типы расхождений между операциями и инвентарными карточками
const
  coDiffInNum     : longint =      1; // инвентарный номер
  coDiffHigherOs  : longint =      2; // вышестоящая ИК
  coDiffPodr      : longint =      4; // различие в подразделении по операции
  coDiffSpPodr    : longint =      8; // различие в подразделении из спецификации операции
  coDiffMol       : longint =     16; // различие в МОЛ по операции
  coDiffSpMol     : longint =     32; // различие в МОЛ из спецификации операции
  coDiffGrup      : longint =     64; // группа ОС
  coDiffVid       : longint =    128; // Вид
  coDiffSpNorma   : longint =    256; // различие в норме из спецификации операции
  coDiffKol       : longint =    512; // для перемещения и выбытия, если в операции больше чем в карточке
                                      // для остальных, если различаются значения
  coDiffOldStoim  : longint =   1024; // стоимость до операции
  coDiffOldSumIzn : longint =   2048; // сумма износа до операции
  coDiffNewStoim  : longint =   4096; // стоимость после операции
  coDiffNewSumIzn : longint =   8192; // сумма износа после операции
  coDiffSIznM     : longint =  16384; // износ за месяц
  coDiffAmoStoim  : longint =  32768; // различие в стоимости в операции начисления амортизации
  coDiffAmoSumIzn : longint =  65536; // различие в износе в операции начисления амортизации

  coDiffSums      : longint = 130048; // различие в суммах
                                      // coDiffOldStoim + coDiffOldSumIzn + ... + coDiffAmoSumIzn
                                      // !!! ПРИ ДОБАВЛЕНИИ КОНСТАНТ по суммам учесть в этой константе

end;


// список некорректных операций
table struct TBadOper
(
  cSpMoveOs : comp,    // ссылка не некорректную спецификацию операции
  cMoveOs   : comp,    // ссылка на операцию которую корректно провести невозможно
  cNastrOs  : comp,    // ссылка на метод учета
  Proved    : word,    // признак: проведена операция или нет
  CanRepair : word     // признак: можно синхронизировать с картотекой полностью
)
with index
(
  TBadOper1 = cMoveOs + cNastrOs,
  TBadOper2 = Proved + CanRepair
);

// расшифровка некорректностей в операциях
table struct TBOItpt
(
  cSpMoveOs : comp,       // ссылка не некорректную спецификацию операции
  sName     : string[40], // наименование различия
  sValue    : string[40], // значение в карточке
  wCorr     : word        // возможна ли автоматическая корректировка
)
with index
(
  TBadItpt = cSpMoveOs + wCorr
);

#end // __TSTOPER_VIH__
