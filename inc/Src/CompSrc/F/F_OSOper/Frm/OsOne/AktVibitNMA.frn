.linkform 'AktVibitNMA' prototype is 'OSONE'
.NameInList '[ВСМН] Акт о списании нематериальных активов'
.F 'NUL'
.group 'Выбытие НМА <<ВСМН>>'
.var
  KontactLico_Dolg : string;
  iCol, iRow, NPP : word;
  KontactLico_Dov : string;
  Direct_Name : string;
  Direct_Dolg : string;
  Direct_Dov  : string;
  iFeeSigners : FeeSigners;
  Массив_Член_комиссии_ФИО: ARRAY [1..2] of String;
  Массив_Член_комиссии_Должность: ARRAY [1..2] of String;
  Номер_подписанта: Word;
  iFirstRow, iLastRow : integer;
  RegInfo : string;
  iLvar : iLvarToString;
  iLastHeadRow : integer;
.endvar
.procedure PrnComiss(_PosName, _Dolg, _FIO : string);
begin
  if iFirstRow = 0
    iFirstRow := iRow;

  iLastRow := iRow;
  //---------------- позиция -------------------------
  xlSetCellStringValue(_PosName, iRow/*Row*/, 1/*Col*/,iRow ,1);

  //---------------- должность -------------------------
  xlFrameCells(xlBorderB, xlThin, 1, 1, iRow, 3, iRow, 3);
  xlSetCellStringValue(_Dolg, iRow/*Row*/, 3/*Col*/,iRow ,3);
  xlSetCellStringValue('должность' , iRow+1, 3 ,iRow+1 ,3);

   //---------------- подпись ---------------------------
  xlFrameCells(xlBorderB, xlThin, 1, 1, iRow, 5, iRow, 5);
  xlSetCellStringValue('подпись' , iRow+1, 5 ,iRow+1 ,5);

  //---------------- ФИО -------------------------------
  xlFrameCells(xlBorderB, xlThin, 1, 1, iRow, 8, iRow, 8);
  xlSetCellStringValue(_FIO , iRow/*Row*/, 8/*Col*/,iRow ,8);
  xlSetCellStringValue('расшифровка подписи' , iRow+1, 8 ,iRow+1 ,8);

  XlSetFontSize(11, iRow, 1, iRow, 9);
  xlSetFontSize(8, iRow+1, 1 ,iRow+1 ,9);

  xlAlignCellsEx(/*xlCentr*/-4108,-4107, iRow, 3, iRow, 9);
  xlAlignCellsEx(/*xlCentr*/-4108,-4160, iRow+1, 3, iRow+1, 9);
end.
.{
.begin
  xlKillExcel;
  xlDisplayAlerts(false);
  xlCreateExcelWithTemplate(TranslatePath('%ClientStartPath%')+'\XLS\F_OSOper\AktVibitNMA.xlt',true);

if (xlIsExcelValid)
{
  var barcode : string;
  barcode :=  Ean13ToEanGnivcTTF(GenerateBarCodeEx (coMoveOs, MoveOsNRec));
  xlSetCellStringValue(barcode, 2/*Row*/, 2/*Col*/,2 ,2);
  xlSetCellStringValue('АКТ № '+НОМЕР_ДОКУМЕНТА, 5, 3/*Col*/,5 ,3);
  xlSetCellStringValue(Поставщик,9,2,9,2);
  xlSetCellStringValue(Структурное_подразделение_Поставщика,11,3,11,3);
  xlSetCellStringValue(Поставщик_ОКПО,12,6,12,6);
  xlSetCellStringValue(String(ДАТА_ДОКУМЕНТА),12,7,12,7);
  xlSetCellStringValue(НАИМЕНОВАНИЕОС,13,4,13,4);

  var r : word;
  var s : string;   s:='';
  iRow := 13;
  r := 0;

  if iLvar.InitAllMemo(Comp(KatOSNrec), 3000, 0)
    while (iLVar.GetMemoStr(S))
    {
      r++;
      iRow++;

      if (r = 1) or (r = 2)
        xlSetCellStringValue(s,iRow,1,iRow,1);
      else
      {
        xlInsertRange(-4121/*xlShiftDown*/,iRow,1,iRow,9);
        xlMergeCells(iRow, 1,iRow,4);
        xlFrameCells(xlBorderB, xlThin,1,1,iRow,1,iRow,4);
        xlSetCellStringValue(s, iRow,1,iRow,1);
      }
    }

  iRow := if (r <= 2, 18, iRow + 3);

  xlSetCellStringValue('назначенная приказом от '+ if (Day(Дата_приказа)<>0,String(Дата_приказа)+' г. ','')+'№ '+Номер_приказа,iRow,1,iRow,1);
  xlSetCellStringValue(ПРИЧИНА_СПИСАНИЯ,iRow+2,2,iRow+2,2);

  // 2-я страница
  xlSetCellStringValue('АКТ № '+НОМЕР_ДОКУМЕНТА + DateToStr(ДАТА_ДОКУМЕНТА, ' от DD mon YYYY г.'), iRow+11, 3/*Col*/,iRow+11 ,3);
  xlSetCellStringValue(barcode, iRow+12/*Row*/, 6/*Col*/,iRow+12 ,6);
  xlSetCellStringValue(String(ДАТА_ПОСТ),iRow+15, 3/*Col*/,iRow+15 ,3);
  xlSetCellStringValue(''''+ИНВНОМЕР, iRow+16, 3/*Col*/,iRow+16 ,3);

  // Установить ширину заголовка таблицы
  iLastHeadRow := iRow+3;
  xlSetRowHeight(59, iRow+4/*Row*/, 10/*Col*/, iRow+4, 10);

  // спецификация
  iRow:=iRow+6;
  xlSetCellStringValue(''''+ИНВНОМЕР, iRow, 1/*Col*/,iRow ,1);
  xlSetCellStringValue(НАИМЕНОВАНИЕОС, iRow, 2/*Col*/,iRow ,2);
  xlSetCellNumberValue(СРОК_ПОЛЕЗНОГО_ИСПОЛЬЗОВАНИЯ,iRow, 3/*Col*/,iRow ,3);
  xlSetCellNumberValue (Полная_стоимость,iRow, 4/*Col*/,iRow ,4);
  xlSetCellNumberValue (СУММА_НАЧИСЛЕННОЙ_АМОРТИЗАЦИИ,iRow, 5/*Col*/,iRow ,5);
  xlSetCellNumberValue (Полная_стоимость-Новая_сумма_износа,iRow, 6/*Col*/,iRow ,6);

  xlAlignCellsEx(-4108,-4108,iRow,1,iRow,6);
  XlWrapText(iRow, 1,iRow, 6);
  XlSetFontSize(11,iRow, 1,iRow, 6);
  xlFrameCells(63,2,1,1, iRow, 1, iRow,6)
}
end.
.begin
  Номер_подписанта := 0;
end.
.{ CheckEnter FEESIGNERSMEMBER_OSONE
.begin
  Номер_подписанта := Номер_подписанта + 1;
  Массив_Член_комиссии_ФИО            [Номер_подписанта] := Член_комиссии_ФИО;
  Массив_Член_комиссии_Должность      [Номер_подписанта] := Член_комиссии_Должность;
  end.
.}


.{ CheckEnter FeeSignersResponsible_OSONE
.}


.{CheckEnter OS_OBOROT
.}

.{CheckEnter OS_LEAFS
.}


.{CheckEnter OS_SOSTAV
.}


.{CheckEnter OS_NALDRAG
.}


.{CheckEnter OS_AKTUSL
.}
.begin
  // комиссия
  iRow := iRow+2;
  xlInsertRange(-4121/*xlShiftDown*/,iRow,1,iRow+2,9);
  PrnComiss('Председатель комиссии:', Председатель_Должность, Председатель_ФИО);
  Номер_подписанта:=0;
 end.
.{while (Номер_подписанта < Количество_Членов_комиссии) OR (Номер_подписанта < 2)
.begin
  Номер_подписанта:= Номер_подписанта+ 1;
  iRow := iRow + 3;
  xlInsertRange(-4121/*xlShiftDown*/,iRow,1,iRow+2,9);
  PrnComiss(if (Номер_подписанта= word(1), 'Члены комиссии:', ''),
            Массив_Член_комиссии_Должность [Номер_подписанта],
            Массив_Член_комиссии_ФИО   [Номер_подписанта]);
end.
.}
.begin
  iFeeSigners.InitFeeSigners(7306/*cgReport_Os*/);
  iFeeSigners.FindFeeSignersByNRec(Comp(cFeeSignersNRec));

  if (iFeeSigners.FeeSignersIsValid)
  {
    // Утверждающее лицо
    if (iFeeSigners.RestrictFeeByRole(2, 'UtvLico'))
    {
      xlSetCellStringValue(iFeeSigners.GetSignerPosition(1), 4/*Row*/, 6/*Col*/,4 ,6);
      xlSetCellStringValue(iFeeSigners.GetSignerFIO(13), 7/*Row*/, 8/*Col*/,7 ,8);
    }

    // Бухгалтер
    if (iFeeSigners.RestrictFeeByRole(2, 'Bux'))
    {
      iRow:= iRow + 18;
      xlSetCellStringValue(iFeeSigners.GetSignerPosition(1), iRow/*Row*/, 3/*Col*/,iRow ,3);
      xlSetCellStringValue(iFeeSigners.GetSignerFIO(13), iRow/*Row*/, 8/*Col*/,iRow ,8);
    }

    iFeeSigners.ClearRestriction;
  }
end.
.begin
  var fMacros : string;
  fmacros  := GetStringParameter('Files','TmpFilesDirectory',0)+'AktVibitNMA.bas';
  DeleteFile(Fmacros);
  LogStrToFile(Fmacros, 'Sub Sub1()                         ');

  if iFirstRow <> 0
  {
    LogStrToFile(Fmacros, 'Dim Rng As Excel.Range             ');
    LogStrToFile(Fmacros, 'Dim Sh As Excel.Worksheet          ');
    LogStrToFile(Fmacros, 'Set Sh = Application.ActiveSheet   ');
    LogStrToFile(Fmacros, 'Set Rng = Sh.Range("C'+iFirstRow+':C'+iLastRow+'")');
    LogStrToFile(Fmacros, 'RngAutoFit Rng                     ');
  }

  LogStrToFile(Fmacros, 'Rows("1:'+iLastHeadRow+'").EntireRow.AutoFit    ');
  LogStrToFile(Fmacros, 'End Sub                            ');
  if ( xlImportModule(Fmacros) )
    {
      if not xlRunMacro('Sub1') 
        message('Ошибка запуска макроса AktVibitNMA');
    }
  else
    message ('Ошибка загрузки макроса AktVibitNMA.');

  DeleteFile(Fmacros);
  xlKillExcel;
end.

.} // Конец формы
.endform
