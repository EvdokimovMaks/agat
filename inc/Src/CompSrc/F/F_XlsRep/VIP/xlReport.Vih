//------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Галактика 8.10 - компонента "Excel-отчеты"
// Формирование Excel-отчетов
//------------------------------------------------------------------------------

#include xlSetUp.Vih

#ifndef _XLSRepBuilder_Included_
#define _XLSRepBuilder_Included_

#ifdef  ComponentVersion
#component "F_XLSRep"
#endif //ComponentVersion

//------------------------------------------------------------------------------
#doc
Формирование Excel-отчетов<br>
#end
ObjInterface iXLSRepBuilder;

//==============================================================================
//                                RUNERROR
//******************************************************************************
//------------------------------------------------------------------------------
#doc
   Возвращает последнюю ошибку работы с Excel<br>
#end
Function GetLastError : string;

//==============================================================================
//                             INIT_DONE_EXCEL
//******************************************************************************
//------------------------------------------------------------------------------
#doc
<brief>Создание стандартного шаблона отчета</brief>
   Создание стандартного шаблона отчета, т.е. создаются сам XLT-файл,
   и в нем заготовка стандартного макроса, формирования отчета.
   Возвращает имя созданного файла
   При необходимости, автоматически происходит
   инсталляция XLA-библиотеки "Дизайнер отчетов"<br>
   (Constructor)
#end
Function CreateXLT(
  _XLTFileName : string;  // XLT-шаблон
  _Visible     : boolean  // визуализация Excel
) : string;

//------------------------------------------------------------------------------
#doc
<brief>Создание "пустого" отчета по XLT-шаблону</brief>
   Создание "пустого" отчета по XLT-шаблону, т.е. просто создает новый файл.
   Возвращает имя созданного файла<br>
   (Constructor)
#end
Function CreateReport(
  _XLTFileName : string;  // XLT-шаблон
  _Visible     : boolean  // визуализация Excel
) : string;

//------------------------------------------------------------------------------
#doc
   Завершение сессии работы с Excel.
   (Destructor)<br>
#end
Function DisConnectExcel : boolean;

//==============================================================================
//                               LOADREPORT
//******************************************************************************
//------------------------------------------------------------------------------
#doc
<brief>Формирование отчета по БД</brief>
   Формирование отчета по БД, т.е. загрузка данных из Excel-БД _DBFileName
   в файл отчета _RepFileName.
   При необходимости, автоматически происходит
   инсталляция всех необходимых XLA-библиотек
#end
Function LoadRepFromDB(
  _DBFileName  : string;  // XLS-файл с данными отчета (Excel-БД)
  _RepFileName : string   // XLS-файл отчета
) : boolean;

//------------------------------------------------------------------------------
#doc
<brief>Формирование отчета</brief>
   Формирование отчета, т.е. загрузка данных из Excel-БД _RepFileName
   в файл отчета _RepFileName (случай когда данные отчета были выгружены в сам файл отчета)
   При необходимости, автоматически происходит
   инсталляция всех необходимых XLA-библиотек
#end
Function LoadReport(
  _RepFileName : string
) : boolean;

//==============================================================================
//                              REPORT_VARS
//******************************************************************************
//------------------------------------------------------------------------------
#doc
   Создать определения переменных в XLS-БД<br>
   (Vars Constructor)
#end
Function CreateVar(
  _DBFileName : string   // XLS-БД
) : boolean;

//------------------------------------------------------------------------------
#doc
   Все необходимые пост-действия, по опубликованию таблицы для внешних источников<br>
   (Vars Destructor)
#end
Function PublishVar : boolean;

//------------------------------------------------------------------------------
#doc
<brief>Установить значение переменной _VarName в значение _Value</brief>
   Установить значение переменной _VarName в значение _Value.
   Тип переменное в XLS-БД будет String,
   _VarType - является дополнительным описанием типа,
   это описание возможно использовать уже при формировании самого отчета
#end
Function SetVar(_VarName : string; _VarType : string; _Value : string) : boolean;
//------------------------------------------------------------------------------
#doc
   Установить значение переменной _VarName в значение _Value (тип String)
#end
Function SetStringVar(_VarName : string; _Value : string) : boolean;
//------------------------------------------------------------------------------
#doc
   Установить значение переменной _VarName в значение _Value (тип Number)
#end
Function SetNumberVar(_VarName : string; _Value : double) : boolean;
//------------------------------------------------------------------------------
#doc
   Установить значение переменной _VarName в значение _Value (тип Date)
#end
Function SetDateVar(_VarName : string; _Value : date) : boolean;

//------------------------------------------------------------------------------
#doc
   Добавить примечание к заголовку переменной отчета
#end
Function SetVarComment(
  _VarName : string;
  _Comment : string
) : boolean;
//------------------------------------------------------------------------------
#doc
   Добавить примечание к значению переменной отчета
#end
//------------------------------------------------------------------------------
Function SetVarValueComment(
  _VarName : string;
  _Comment : string
) : boolean;

//==============================================================================
//                              REPORT_Table
//******************************************************************************
//------------------------------------------------------------------------------
#doc
   Начать сессию формирования таблиц в XLS-БД<br>
   (Table Constructor)
#end
Function CreateTbls(
  _DBFileName : string   // XLS-БД
) : boolean;
//------------------------------------------------------------------------------
#doc
   Создать таблицу в XLS-БД.
   Наименование таблицы задается без "стандартного префикса"<br>
   (Table Constructor)<br>
#end
Function CreateTbl(
  _TblName    : string   // Наименование таблицы
) : boolean;

//------------------------------------------------------------------------------
#doc
   Все необходимые пост-действия, по опубликованию таблицы для внешних источников<br>
   (Table Destructor)<br>
#end
Function PublishTbl(
  _TblName : string      // Наименование таблицы
) : boolean;

//------------------------------------------------------------------------------
#doc
<brief>Создать поле таблицы, определенной в CreateTable</brief>
   Создать поле таблицы, определенной в CreateTable.
   Наименование поля таблицы задается без "стандартного префикса"
#end
Function CreateTblFld(
  _TblFldName : string   // Наименование поля таблицы
) : boolean;

//------------------------------------------------------------------------------
#doc
   Добавить примечание к заголовку поля таблицы
#end
Function SetTblFldComment(
  _TblFldName : string;
  _Comment    : string
) : boolean;

//------------------------------------------------------------------------------
#doc
   Очистить буфер записи таблицы определенной в CreateTable
#end
Function ClearTblBuffer : boolean;

//------------------------------------------------------------------------------
#doc
   Установить текущее значение поля таблицы _TblFldName в значение _Value (тип String)
#end
Function SetTblStringFldValue(_TblFldName : string; _Value : string) : boolean;
//------------------------------------------------------------------------------
#doc
   Установить текущее значение поля таблицы _TblFldName в значение _Value (тип Number)
#end
Function SetTblNumberFldValue(_TblFldName : string; _Value : double) : boolean;
//------------------------------------------------------------------------------
#doc
   Установить текущее значение поля таблицы _TblFldName в значение _Value (тип Date)
#end
Function SetTblDateFldValue(_TblFldName : string; _Value : date) : boolean;

//------------------------------------------------------------------------------
#doc
   Добавить примечание к текущему значению поля таблицы
#end
//------------------------------------------------------------------------------
Function SetTblFldValueComment(
  _TblFldName : string;
  _Comment    : string
) : boolean;

//------------------------------------------------------------------------------
#doc
   Вставить текущие значения полей в таблицу
#end
//------------------------------------------------------------------------------
Function InsTblRow : boolean;


//==============================================================================
//                                 DIALOG
//******************************************************************************
//------------------------------------------------------------------------------
#doc
<brief>Диалог формирования/отладки XLT-шаблонов</brief>
   Диалог формирования/отладки XLT-шаблонов:
   <ul>
   <li> _wXltMode     - режим запуска
     <ul>
     <li> cgxlRepDlg_CreateRep   - формирование отчета
     <li> cgxlRepDlg_CreateTempl - создание шаблона
     </ul>
   <li> _XLTFileName   - файл шаблона<br>
   </ul>
#end
Function RunMakeXLT(
var _wXltMode    : word;
var _XLTFileName : string
) : boolean;

//------------------------------------------------------------------------------
#doc
<brief>Диалог формирования отчетов</brief>
   Диалог формирования отчетов:
   <ul>
   <li> _wRunMode     - режим запуска
     <ul>
     <li> cgxlRepDlg_MakeXLT       - стандартный диалог формирования/отладки XLT - шаблонов<br>
     <li> cgxlRepDlg_MakeRep       - создание отчета с предварительным сохранением<br>
     <li> cgxlRepDlg_TuneRep       - создание отчета без сохранения<br>
     </ul>
   <li> _wRetMode     - если создается шаблон то возвращается 1
   <li> _XLTFileName  - файл шаблона
   <li> _RepFileName  - файл отчета
   </ul>
#end
Function RunRepDialog(
    _wRunMode    : word;
var _wRetMode    : word;
var _XLTFileName : string;
var _RepFileName : string
) : boolean;

//------------------------------------------------------------------------------
#doc
<brief>Диалог формирования отчетов по ID-отчета</brief>
   Диалог формирования отчетов по ID-отчета:<br>
   <ul>
   <li> _wRunMode     - режим запуска
     <ul>
     <li> cgxlRepDlg_MakeXLT       - стандартный диалог формирования/отладки XLT - шаблонов<br>
     <li> cgxlRepDlg_MakeRep       - создание отчета с предварительным сохранением<br>
     <li> cgxlRepDlg_TuneRep       - создание отчета без сохранения<br>
     </ul>
   <li> _RepID        - идентификатор отчета
   <li> _wRetMode     - если создается шаблон то возвращается 1
   <li> _XLTFileName  - файл шаблона
   <li> _RepFileName  - файл отчета
   </ul>
#end
Function RunRepIDDialog(
    _wRunMode    : word;
var _wRetMode    : word;
var _XLTFileName : string;
var _RepFileName : string;
    _RepID       : string
) : boolean;

//------------------------------------------------------------------------------
#doc
   Запуск VIP-окна, для просмотра отчета
#end
Function ShowReport(
  _RepFileName : string
) : boolean;

//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
End;


//------------------------------------------------------------------------------
#include xlType.Inc // Типы данных используемые при формировании отчета
//------------------------------------------------------------------------------
#doc
Формирование Excel-отчетов (доп. версия 01)<br>
#end
ObjInterface iXLSRepBuilder_V01(iXLSRepBuilder);

//==============================================================================
//                             INIT_DONE_EXCEL
//******************************************************************************
//------------------------------------------------------------------------------
#doc
<brief>Создание "пустого" отчета по XLT-шаблону</brief>
   Создание "пустого" отчета по XLT-шаблону, т.е. просто создает новый файл.
   Возвращает имя созданного файла<br>
   (Constructor)
#end
Function CreateNextReport(
  _XLTFileName : string;  // XLT-шаблон
  _Visible     : boolean  // визуализация Excel
) : string;

//==============================================================================
//                              REPORT_VARS
//******************************************************************************
//------------------------------------------------------------------------------
#doc
   Установить массив строк в переменную _VarName
#end
Function SetArrStrVar(
  _VarName : string;     // имя переменной
  _Value   : TXLS_ArrStr // массив строк (см. xlType.Inc)
) : boolean;
//------------------------------------------------------------------------------
#doc
   Вывести содержимое файла в переменную _VarName.
#end
Function SetFileVar(
  _VarName  : string;    // имя переменной
  _FID      : TPtr;   // ссылка на объект File, полученная методом Handle.
  _sDivider : string     // разделитель строк, например chr(10)
) : boolean;
//------------------------------------------------------------------------------
#doc
   Вывести содержимое AllMemo.Mem в переменную _VarName
#end
Function SetAllMemoVar(
  _VarName  : string;    // имя переменной
  _Value    : comp;      // AllMemo.NRec
  _sDivider : string     // разделитель строк, например chr(10)
) : boolean;

//------------------------------------------------------------------------------
#doc
   Установить массив строк примечания к значению переменной отчета
#end
Function SetArrStrVarValueComment(
  _VarName : string;     // имя переменной
  _Value   : TXLS_ArrStr // массив строк (см. xlType.Inc)
) : boolean;
//------------------------------------------------------------------------------
#doc
   Вывести содержимое файла в примечания к значению переменной отчета
#end
Function SetFileVarValueComment(
  _VarName  : string;    // имя переменной
  _FID      : TPtr;   // ссылка на объект File, полученная методом Handle.
  _sDivider : string     // разделитель строк, например chr(10)
) : boolean;
//------------------------------------------------------------------------------
#doc
   Вывести содержимое AllMemo.Mem в примечания к значению переменной отчета
#end
Function SetAllMemoVarValueComment(
  _VarName  : string;    // имя переменной
  _Value    : comp;      // AllMemo.NRec
  _sDivider : string     // разделитель строк, например chr(10)
) : boolean;

//==============================================================================
//                              REPORT_TABLE
//******************************************************************************
//------------------------------------------------------------------------------
#doc
   Добавить строку к текущему значению поля таблицы _TblFldName
#end
Function AddTblStringFldValue(
  _TblFldName : string;     // имя поля таблицы
  _Value      : string      // добавляемая строка
) : boolean;
//------------------------------------------------------------------------------
#doc
   Установить массив строк в значение поля таблицы _TblFldName
#end
Function SetTblArrStrFldValue(
  _TblFldName : string;     // имя поля таблицы
  _Value      : TXLS_ArrStr // массив строк (см. xlType.Inc)
) : boolean;
//------------------------------------------------------------------------------
#doc
   Вывести содержимое файла в поля таблицы _TblFldName
#end
Function SetTblFileFldValue(
  _TblFldName : string;     // имя поля таблицы
  _FID        : TPtr;    // ссылка на объект File, полученная методом Handle.
  _sDivider   : string      // разделитель строк, например chr(10)
) : boolean;
//------------------------------------------------------------------------------
#doc
   Вывести содержимое AllMemo.Mem в поля таблицы _TblFldName
#end
Function SetTblAllMemoFldValue(
  _TblFldName : string;     // имя поля таблицы
  _Value      : comp;       // AllMemo.NRec
  _sDivider   : string      // разделитель строк, например chr(10)
) : boolean;


//------------------------------------------------------------------------------
#doc
   Добавить строку примечания к текущему значению поля таблицы
#end
Function AddTblFldValueComment(
  _TblFldName : string;     // имя поля таблицы
  _Value      : string      // добавляемая стока
) : boolean;
//------------------------------------------------------------------------------
#doc
   Установить массив строк в примечание к текущему значению поля таблицы
#end
Function SetTblArrStrFldValueComment(
  _TblFldName : string;     // имя поля таблицы
  _Value      : TXLS_ArrStr // массив строк (см. xlType.Inc)
) : boolean;
//------------------------------------------------------------------------------
#doc
   Вывести содержимое файла в примечание к текущему значению поля таблицы
#end
Function SetTblFileFldValueComment(
  _TblFldName : string;     // имя поля таблицы
  _FID        : TPtr;    // ссылка на объект File, полученная методом Handle.
  _sDivider   : string      // разделитель строк, например chr(10)
) : boolean;
//------------------------------------------------------------------------------
#doc
   Вывести содержимое AllMemo.Mem в примечание к текущему значению поля таблицы
#end
Function SetTblAllMemoFldValueComment(
  _TblFldName : string;     // имя поля таблицы
  _Value      : comp;       // AllMemo.NRec
  _sDivider   : string      // разделитель строк, например chr(10)
) : boolean;

//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
End;


#doc
Формирование Excel-отчетов (доп. версия 02)<br>
#end
ObjInterface iXLSRepBuilder_V02(iXLSRepBuilder_V01);

//------------------------------------------------------------------------------
#doc
  Определяет расширение Excel в зависимости от версии
#end
Function ExcelCurVer : string;

//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
End;


VipInterface XLSRepBuilder implements
  iXLSRepBuilder
, iXLSRepBuilder_V01
, iXLSRepBuilder_V02
#ifdef  Atl51
  Licensed (FREE)
#endif//Atl51
;

#endif//_XLSRepBuilder_Included_

