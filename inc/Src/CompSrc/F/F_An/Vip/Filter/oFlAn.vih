
#ifdef ComponentVersion
#component "F_An"
#end

#doc
Функции именованных фильтров по аналитикам.
#end
ObjInterface oFilterAnObjInterface;

#doc
Удовлетворяет ли Объект указанному именованному фильтру. </brief> <br>
Перед циклическим использованием функции необходимо вызвать ее с
нулевыми параметрами (при этом чистятся накаченные таблицы в памяти,
которые необходимы для ускорения циклических проверок).
#end
function isFilterAnCorrect (pcFiltAn_ : comp; //Именованный фильтр
                            pcHashAn_ : comp  //Набор значений аналитик Объекта
                           )          : boolean ; //удовлетворяет или нет

#doc
Удовлетворяет ли объект фильтру (необходимы: роль, аналитика и значение аналитики). </brief> <br>
<H5>Пример использования</H5>
<PRE class=example>
##include oFlAn.vih
##include oFlAn.var

var MyBool        : boolean;
var Marker_KAU    : longint;
var Marker_Role   : longint;
var Marker_cKAU   : longint;
var _MarHead      : string;

_MarHead := 'MyMarker_FindObj';
// Заполняет таблицу в памяти значениями из маркеров
Marker_KAU   := InitMarker (_MarHead + 'KAU', 8,100,10,false);
Marker_Role  := InitMarker (_MarHead + 'Role',8,100,10,false);
Marker_cKAU  := InitMarker (_MarHead + 'cKAU',8,100,10,false);

ClearMarker(Marker_KAU);
ClearMarker(Marker_Role);
ClearMarker(Marker_cKAU);

InsertMarker(Marker_KAU,10004); // 10000-Цвет
InsertMarker(Marker_Role,0);
InsertMarker(Marker_cKAU,18);   // 5-Бирюза

InsertMarker(Marker_KAU,10004); // 10004-Дата
InsertMarker(Marker_Role,2);    // 2-дата изготовления
InsertMarker(Marker_cKAU,longint(date(1,7,2003)));

InsertMarker(Marker_KAU,10005); // 10004-Дата
InsertMarker(Marker_Role,3);    // 3-срок годности
InsertMarker(Marker_cKAU,longint(date(10,7,2003)));

DoneMarker(Marker_KAU, _MarHead + 'KAU');
DoneMarker(Marker_Role,_MarHead + 'Role');
DoneMarker(Marker_cKAU,_MarHead + 'cKAU');

foFilterAn.isSomeFindObj(false, comp(0)); // Обнуляем

if foFilterAn.CreateFiltrTable(_MarHead)    // Начальные имена 3-х маркеров
  MyBool := foFilterAn.isSomeFindObj(True ,HashAn.NRec);

</PRE>
#end
function isSomeFindObj (bFindAll  : boolean; // параметры поиска
                                             //     TRUE  - поиск по всем условиям     (логическое 'И')
                                             //     FALSE - поиск по одному из условий (логическое 'ИЛИ')
                        cHashAn   : comp     // Набор значений аналитик Объекта
                       ) : boolean;

#doc
Создать таблицу фильтрации.
#end
function CreateFiltrTable(sMarker   : string // начало имени маркера
                         ) : boolean;

end;
VipInterface oFilterAn implements oFilterAnObjInterface
#ifdef ATL51
  licensed (FREE)
#end
;
