
#ifdef ComponentVersion
#component "F_An"
#end

#doc
Формирование значений аналитик объекта.
#end
ObjInterface GetHashAn_Obj1;
  #doc
  Вызывается при открытии интерфейса-контейнера.
  #end
  Procedure InitInKonteiner
            ( pRezim_  : word   // режим работы (cgRecordView/cgRecordEdit/cgRecordEditEn)
            );
  #doc
  Устанавливает свойства интерфейса (по умолчанию: AlwaysReturn,EscClose,DoAccept;).<br>
  Пример парамета: opEscClose or opCyanInterface.
  #end
  Procedure My_SetInterfaceOptions
            ( opRezim_  : byte   // свойства
            );
  #doc
  Перерисовать текущую панель с аналитиками и их значениями.
  #end
  Procedure My_ReScanPanel_ReReadRecord;
  #doc
  Вызывается при смене позиции в контейнере,
  когда необходимо перерисовать аналитики и их значения.
  #end
  Procedure PosChangeInKonteiner
            ( pSloj_   : comp;   // .cSloj   - Группа аналитик
              pHashAn_ : comp    // .cHashAn - Кэш значений аналитик
            );
  #doc
  Изменялись ли значения для текущей позиции.
  #end
  Function IsEditRecord : boolean;
  #doc
  Возвращает текущий Кэш значений (создает новый если надо).
  #end
  Function ReturnHashAn : comp;
  #doc
  Необходима для отслеживания события <i>изменение выбранных
  значений аналитик</i> из интерфейса-контейнера
  #end
  Event Procedure UpdateCurAnalit;
  #doc
  Необходима для отслеживания события <b>cmDefault.</b>
  из интерфейса-контейнера
  #end
  Event Procedure cmDeffaultCurAnalit;
//==============================================================================

  #doc
  Наполняем таблицу в памяти (с Кэшем значений для Группы аналитик)
  по переданным трем маркерам:
  <ul>
    <li> <i>_MarHead</i>+'_KAU' - cсылки на Аналитики
    <li> <i>_MarHead</i>+'_Role' - cсылки на Роль
    <li> <i>_MarHead</i>+'_cKAU' - cсылки на Значения аналитик
  </ul>
  #end
  Function HashAn_InsFromMar (_pSloj    : comp;    //.cSloj   - Группа аналитик
                              _MarHead  : string;  //Начальные имена 3-х маркеров
                              _HashAn   : comp;    //Кэш замещаемых значений аналитик (0 - пустые значения)
                              isMessErr : boolean  //Выдавать ли сообщения об ошибках
                             )          : boolean;


  #doc
  Установить принудительно модификацию значения текущей позиции.
  #end
  Function SetEditRecord (_isEdit : boolean) : boolean;
  #doc
  Необходима для отслеживания события <i>входа во встроенный из контейнера</i> (cmSwitchFromContainer).
  #end
  Event Procedure cmFromContainer_;
  #doc
  Необходима для отслеживания события <i>выхода из встроенного в контейнер</i> (cmSwitchToContainer).
  #end
  Event Procedure cmToContainer_;

  #doc
  Dызывается при смене позиции в контейнере без визуализации
  (когда необходимо перерисовать аналитики и их значения).
  #end
  Procedure PosChangeInKonteinerNonVisual
            ( pSloj_   : comp;   // .cSloj   - Группа аналитик
              pHashAn_ : comp    // .cHashAn - Кэш значений аналитик
            );

  //----------------------------------------------------------------------------
  #doc
  Устанавливает константу вызова контекстной справки.
  #end
  Procedure My_SetInterfaceHelp(opHc_: string);

  #doc
  Вернуть строковые аналитические значения текущего Кэша.
  #end
  Function MoveRecHash (_TipMove : string; //'GetFirst'/'GetNext'
                    var _sRole   : string;
                    var _sAn     : string;
                    var _sZn     : string
                       )         : boolean;
#ifndef GAL9_1
end;

ObjInterface GetHashAn_Obj2;
#end
  #doc
  Запускается контроль заполнения значений аналитик
  #end
  Procedure SetFillRequired(bReq : boolean);

  #doc
  Проверка, все ли аналитики заполнены
  #end
  Function CheckRequiredFilling : boolean;

  #doc
  Установить значения новые значения в контейнере
  #end
  Procedure SetContFromHashAn(pHashAn_ : comp);

end;

VipInterface GetHashAn implements GetHashAn_Obj1
#ifndef GAL9_1
, GetHashAn_Obj2
#end
#ifdef ATL51
  licensed (FREE) Parameters (pRezim : word; pSloj : comp; pHashAn : comp)
#end
;
