function IsValidDate(strIn: string; var strGetMes: string) : boolean;
begin
  //Дата в формате ДД.ММ.ГГГГ (01.01.1800 - 31.12.2099)
  //ДатаТип
  strGetMes := 'Формат поля: ДД.ММ.ГГГГ (01.01.1800 - 31.12.2099)';

  result := false;
  result :=
    CheckError.isRegExpr(
      '^(((0[1-9]{1}|[1-2]{1}[0-9]{1})\.(0[1-9]{1}|1[0-2]{1}))|((30)\.(01|0[3-9]{1}|1[0-2]{1}))' +
      '|((31)\.(01|03|05|07|08|10|12)))\.(18[0-9]{2}|19[0-9]{2}|20[0-9]{2})$'
      , strIn);
end;

function IsValidOKV(strIn: string; var strGetMes: string) : boolean;
begin
  //Код из Общероссийского классификатора валют
  //ОКВТип
  strGetMes := 'Формат поля: 3 цифры';

  result := false;
  result :=
    CheckError.isRegExpr(
      '^([0-9]{3})$'
      , strIn);
end;

function IsValidOKVED(strIn: string; var strGetMes: string) : boolean;
begin
  //Код из Общероссийского классификатора видов экономической деятельности
  //ОКВЭДТип
  strGetMes := 'Формат поля: XX.XX.XX (от 2 до 8 символов)';

  result := false;
  result :=
  (
       CheckError.isRegExpr('^[0-9]{2}$'                    , strIn)
    or CheckError.isRegExpr('^[0-9]{2}\.[0-9]{1}$'          , strIn)
    or CheckError.isRegExpr('^[0-9]{2}\.[0-9]{2}$'          , strIn)
    or CheckError.isRegExpr('^[0-9]{2}\.[0-9]{2}\.[0-9]{1}$', strIn)
    or CheckError.isRegExpr('^[0-9]{2}\.[0-9]{2}\.[0-9]{2}$', strIn)
  );
end;

function IsValidIndex(strIn: string; var strGetMes: string) : boolean;
begin
  //Почтовый индекс
  //Индекс
  strGetMes := 'Формат поля: 6 цифр';

  result := false;
  result :=
  (
       CheckError.isRegExpr('^[0-9]{6}$', strIn)
  );
end;

function IsValidOKOPF(strIn: string; var strGetMes: string) : boolean;
begin
  //Код из Общероссийского классификатора организационно-правовых форм хозяйствующих субъектов
  //ОКОПФТип
  strGetMes := 'Формат поля: 2 или 5 цифр';

  result := false;
  result :=
  (
       CheckError.isRegExpr('^[0-9]{2}$', strIn)
    or CheckError.isRegExpr('^[0-9]{5}$', strIn)
  );
end;

function IsValidOKFS(strIn: string; var strGetMes: string) : boolean;
begin
  //Код из Общероссийского классификатора форм собственности
  //ОКФСТип
  strGetMes := 'Формат поля: XX (2 символа)';

  result := false;
  result := (Length(strIn) = 2);
end;

function IsValidOKEI(strIn: string; var strGetMes: string) : boolean;
begin
  //Код из Общероссийского классификатора единиц измерения
  //ОКЕИТип
  strGetMes := 'Формат поля: 3 цифры';

  result := false;
  result := CheckError.isRegExpr('^[0-9]{3}$', strIn);
end;

function IsValidOKATO(strIn: string; var strGetMes: string) : boolean;
begin
  //Коды из Классификатора объектов административно-территориального деления
  //ОКАТОТип
  strGetMes := 'Формат поля: от 1 до 11 цифр';

  result := false;
  result := CheckError.isRegExpr('^[0-9]{1,11}$', strIn);
end;

function IsValidOKPO(strIn: string; var strGetMes: string) : boolean;
begin
  //Код из Общероссийского классификатора предприятий и организаций
  //ОКПОТип
  strGetMes := 'Формат поля: 8 или 10 цифр';

  result := false;
  result :=
  (
       CheckError.isRegExpr('^[0-9]{8}$' , strIn)
    or CheckError.isRegExpr('^[0-9]{10}$', strIn)
  );
end;

function IsValidSONO(strIn: string; var strGetMes: string) : boolean;
begin
  //Коды из Классификатора системы обозначений налоговых органов
  //СОНОТип
  strGetMes := 'Формат поля: 4 цифры';

  result := false;
  result := CheckError.isRegExpr('^[0-9]{4}$', strIn);
end;

function IsValidINNUL(strIn: string; var strGetMes: string) : boolean;
begin
  //Идентификационный номер налогоплательщика - юридического лица
  //ИННЮЛТип
  strGetMes := 'Формат поля: 10 цифр';

  result := false;
  result := CheckError.isRegExpr('^([0-9]{1}[1-9]{1}|[1-9]{1}[0-9]{1})[0-9]{8}$', strIn);
end;

function IsValidINNFL(strIn: string; var strGetMes: string) : boolean;
begin
  //Идентификационный номер налогоплательщика - физического лица
  //ИННФЛТип
  strGetMes := 'Формат поля: 12 цифр';

  result := false;
  result := CheckError.isRegExpr('^([0-9]{1}[1-9]{1}|[1-9]{1}[0-9]{1})[0-9]{10}$', strIn);
end;

function IsValidKPP(strIn: string; var strGetMes: string) : boolean;
begin
  //Код причины постановки на учет (КПП)
  //КППТип
  strGetMes := 'Формат поля: 9 цифр';

  result := false;
  result := CheckError.isRegExpr('^([0-9]{1}[1-9]{1}|[1-9]{1}[0-9]{1})([0-9]{2})((0[0-9]{1})|(1[0-5E]{1})|(2[247-8D-F]{1})|(3[0-9AD-F]{1})|([4-9]{1}[0-9A-F]{1}))([0-9]{3})$', strIn);
end;

function IsValidSSRF(strIn: string; var strGetMes: string) : boolean;
begin
  //Код из Справочника субъекта Российской Федерации
  //CCРФТип
  strGetMes := 'Формат поля: 2 цифры';

  result := false;
  result := CheckError.isRegExpr('^[0-9]{2}$', strIn);
end;

function IsValidKBK(strIn: string; var strGetMes: string) : boolean;
begin
  //Код из Классификатора бюджетной классификации
  //КБКТип
  strGetMes := 'Формат поля: 20 цифр';

  result := false;
  result := CheckError.isRegExpr('^[0-9]{20}$', strIn);
end;

function IsValidKND(strIn, strValue: string; var strGetMes: string) : boolean;
begin
  //Проверка соответствия кода налоговой декларации
  //КНДТип
  strGetMes := 'Значение КНД должно быть равно ' + strValue;

  result := false;
  result := (strIn = strValue);
end;

function IsValidOKUD(strIn, strValue: string; var strGetMes: string) : boolean;
begin
  //Код формы по ОКУД
  //ОКУД
  strGetMes := 'Значение ОКУД должно быть равно ' + strValue;

  result := false;
  result := (strIn = strValue);
end;

function IsValidFormReorg(strIn: string; var strGetMes: string) : boolean;
begin
  //Код формы реорганизации (ликвидация)
  //ФормРеорг
  strGetMes := 'Возможные значения: 0, 1, 2, 3, 5, 6';

  result := false;
  result :=
  (
       (strIn = '0')
    or (strIn = '1')
    or (strIn = '2')
    or (strIn = '3')
    or (strIn = '5')
    or (strIn = '6')
  );
end;

function IsValidNaimOrg(strIn: string; var strGetMes: string) : boolean;
begin
  //Наименование организации
  //НаимОрг
  strGetMes := 'Формат поля: от 1 до 1000 символов';

  result := false;
  result :=
  (
        (Length(strIn) >= 1   )
    and (Length(strIn) <= 1000)
  );
end;

function IsValidTlf(strIn: string; var strGetMes: string) : boolean;
begin
  //Номер контактного телефона
  //Тлф
  strGetMes := 'Формат поля: от 1 до 20 символов';

  result := false;
  result :=
  (
        (Length(strIn) >= 1 )
    and (Length(strIn) <= 20)
  );
end;

function IsValidNaimDok(strIn: string; var strGetMes: string) : boolean;
begin
  //Наименование документа, подтверждающего полномочия представителя
  //НаимДок
  strGetMes := 'Формат поля: от 1 до 20 символов';

  result := false;
  result :=
  (
        (Length(strIn) >= 1  )
    and (Length(strIn) <= 120)
  );
end;

function IsValidFIO(strIn: string; var strGetMes: string) : boolean;
begin
  //Фамилия/Имя/Отчество
  //ФИОТип
  strGetMes := 'Формат поля: от 1 до 60 символов';

  result := false;
  result :=
  (
        (Length(strIn) >= 1 )
    and (Length(strIn) <= 60)
  );
end;

function IsValidMes(strIn: string; var strGetMes: string) : boolean;
begin
  //Проверка номера месяца
  strGetMes := 'Поле может иметь значение только от 1 до 12 включительно';

  result := false;
  result :=     Integer(strIn) >= 1
            and Integer(strIn) <= 12;
end;

function IsValidNomKorr(strIn: string; var strGetMes: string) : boolean;
begin
  //Проверка номера корректировки
  //НомКорр
  strGetMes := 'Возможные значения: от 0 до 999';

  result := false;
  result := CheckError.isRegExpr('^([0-9]{1,3})$', strIn);
end;

function IsValidOtchGod(strIn: string; var strGetMes: string) : boolean;
begin
  //Проверка отчетного года
  //ОтчетГод
  strGetMes := 'Формат поля: 4 цифры.';

  result := false;
  result := CheckError.isRegExpr('^([0-9]{4})$', strIn);
end;

function IsValidNotNull(strIn: string; var strGetMes: string) : boolean;
begin
  //Проверка на равенство нулю

  strGetMes := 'Поле не должно быть равно нулю';

  result := (strIn <> 0);
end;

function IsValidPrPodp(strIn: string; var strGetMes: string) : boolean;
begin
  //Признак подписанта
  //ПрПодп

  strGetMes := 'Возможные значения: 1, 2';

  result := (strIn = '1') or (strIn = '2');
end;

function IsValidOKTMO(strIn: string; var strGetMes: string) : boolean;
begin
  //Код из Общероссийского классификатора территорий муниципальных образований
  //ОКТМОТип

  strGetMes := 'Формат поля: 8 либо 11 цифр';

  result :=    CheckError.isRegExpr('^[0-9]{8}$', strIn)
            or CheckError.isRegExpr('^[0-9]{11}$', strIn);
end;

function IsValidOKSM(strIn: string; var strGetMes: string) : boolean;
begin
  //Код из Общероссийского классификатора стран мира
  //ОКСМТип

  strGetMes := 'Формат поля: 3 цифры';

  result := CheckError.isRegExpr('^[0-9]{3}$', strIn);
end;

function IsValidSPDUL(strIn: string; var strGetMes: string) : boolean;
begin
  //Коды Справочника видов документов, удостоверяющих личность налогоплательщика
  //СПДУЛТип

  strGetMes := 'Формат поля: 2 цифры';

  result := CheckError.isRegExpr('^[0-9]{2}$', strIn);
end;

function IsValidLenStr(strIn: string; min, max: integer; var strGetMes: string) : boolean;
begin
  //Проверка строк
  strGetMes := 'Ошибочные параметры';
  result := false;

  if (min > max) exit;

  if (min = max) strGetMes := 'Формат поля: '+String(max)+' символа(ов).';
  else           strGetMes := 'Формат поля: от '+String(min)+' до '+String(max)+' символов.';

  result := (Length(strIn) >= min) and (Length(strIn) <= max);
end;

function IsValidLenNumber(strIn: string; min, max: integer; var strGetMes: string; flMin: boolean = false) : boolean;
begin
  //Проверка чисел
  strGetMes := 'Ошибочные параметры';
  result := false;

  if (min > max) exit;

  if (min = max) strGetMes := 'Формат поля: '+String(max)+' цифр(ы).'+if(flMin, ' Возможен знак минус', ' Знак минус не возможен')
  else           strGetMes := 'Формат поля: от '+String(min)+' до '+String(max)+' цифр.'+if(flMin, ' Возможен знак минус', ' Знак минус не возможен');

  result := CheckError.isRegExpr('^' + if(flMin,'(-?)','') + '\d{'+String(min)+','+String(max)+'}$', strIn);
end;

function IsValidDecimal(strIn: string; Cel, Drob: integer; var strGetMes: string; flMin: boolean = false) : boolean;
begin
  //Проверка десятичной дроби
  strGetMes := 'Ошибочные параметры';
  result := false;

  if (Cel <= 0 or Drob < 0) exit;

  strGetMes := 'Формат поля: целая часть - до '+String(Cel)+' цифр(ы), дробная часть - до '+String(Drob)+' цифр(ы). '
             + if(flMin, ' Возможен знак минус', ' Знак минус не возможен');

  result :=    CheckError.isRegExpr('^' + if(flMin,'(-?)','') + '([0-9]{1,'+String(Cel)+'})$'                              , strIn)
            or CheckError.isRegExpr('^' + if(flMin,'(-?)','') + '([0-9]{1,'+String(Cel)+'})[.]([0-9]{1,'+String(Drob)+'})$', strIn);
end;
