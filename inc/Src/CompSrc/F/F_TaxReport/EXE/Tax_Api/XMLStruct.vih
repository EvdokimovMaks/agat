//------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Галактика 9.1 - модуль "Электронная отчетность"
// Функциональный интерфейс : "Структура документа"
//------------------------------------------------------------------------------

#ifndef __XmlStruct_Vih__
#define __XmlStruct_Vih__

#component "F_TaxReport"

//------------------------------------------------------------------------------
// Список наименований файлов
Type TListFilePath = array[0..0] of string;
//------------------------------------------------------------------------------

//==============================================================================
#doc
Функциональный интерфейс : "Структура документа"
#end
Private ObjInterface OXmlStruct;  //#region ObjInterface
  //============================================================================
  //#region ERROR
  //----------------------------------------------------------------------------
  #doc
     Получить описание последней ошибки выполнения
  #end
  function GetStLastError : string;
  //----------------------------------------------------------------------------
  #doc
     Вывести сообщения о последней ошибки выполнения
  #end
  function RunShowError : boolean;
  //#endregion ERROR
  //****************************************************************************


  //============================================================================
  //#region FIELDS

  //============================================================================
  //#region ПРИЗНАК МОДИФИКАЦИИ СТРУКТУРЫ ДОКУМЕНТА
  //----------------------------------------------------------------------------
  #doc
     Узнать было ли изменение структуры
  #end
  function GetIsModified : boolean;
  //----------------------------------------------------------------------------
  #doc
     Установить признак: "Требует сохранения"
  #end
  procedure SetNdSave;
  //----------------------------------------------------------------------------
  #doc
     Убрать признак: "Требует сохранения"
  #end
  procedure ReSetNdSave;
  //#endregion ПРИЗНАК МОДИФИКАЦИИ СТРУКТУРЫ ДОКУМЕНТА
  //****************************************************************************


  //============================================================================
  //#region ПОЛУЧЕНИЕ ИНФОРМАЦИИ ПО СТРУКТУРЕ
  //----------------------------------------------------------------------------
  #doc
     Получить количество записей в структуре документа
  #end
  function GetRecordsCount : LongInt;

  //----------------------------------------------------------------------------
  #doc
     Получить количество вершин по имени
  #end
  function GetNodeCountByName(
    _NodeName : string    // имя вершины
  ) : LongInt;
  //----------------------------------------------------------------------------
  #doc
     Получить количество вершин по имени на заданном уровне
  #end
  function GetNodeCountByNameOnLevel(
    _cNode    : comp;     // ссылка на вышестоящий
    _sName    : string    // имя вершины
  ) : LongInt;

  //----------------------------------------------------------------------------
  #doc
     Получить полное наименование вершины
  #end
  function GetFullNodeName(
    _cRec : comp        // ссылка на вершину
  ) : string;

  //----------------------------------------------------------------------------
  #doc
     Получить NRec вершины по имени
  #end
  function GetPositionByName(
    _NodeName : string;          // имя вершины
    _isCreate : boolean = False  // если не найдена создавать новую запись
  ) : comp;
  //----------------------------------------------------------------------------
  #doc
     Получить NRec вершины по пути на заданном уровне
  #end
  function GetPositionByPathOnLevel(
    _cNode    : comp;            // ссылка на вышестоящий
    _sPath    : string;          // путь на запись
    _isCreate : boolean = False  // если не найдена создавать новую запись
  ) : comp;

  //----------------------------------------------------------------------------
  #doc
     Получить MapField
  #end
  function GetMapField(fName : String; MapRec : comp) : Variant;
  //#endregion ПОЛУЧЕНИЕ ИНФОРМАЦИИ ПО СТРУКТУРЕ
  //****************************************************************************


  //============================================================================
  //#region GET/SET ЗНАЧЕНИЙ ПОКАЗАТЕЛЯ
  //----------------------------------------------------------------------------
  #doc
     Получить значение атрибута, найдя его по имени
  #end
  function GetAttrValueByName(
    _NodeName : string    // имя вершины
  ) : Variant;
  //----------------------------------------------------------------------------
  #doc
     Получить значение атрибута по пути на заданном уровне
  #end
  function GetAttrValueByPathOnLevel(
    _cNode    : comp;     // ссылка на вышестоящий
    _sPath    : string    // путь на запись
  ) : Variant;
  //----------------------------------------------------------------------------
  #doc
     Установить значение атрибута, найдя его по имени
  #end
  function SetAttrValueByName(
    _NodeName : string;   // имя вершины
    _Value    : string;   // значение
    _eMode    : word = 0  // способ модификации
  ) : boolean;

  //----------------------------------------------------------------------------
  #doc
     Получить значение атрибута, найдя его по имени (тип Variant)
  #end
  function GetVariantAttrValueByName(
    _NodeName : string    // имя вершины
  ) : Variant;
  //----------------------------------------------------------------------------
  #doc
     Установить значение атрибута, найдя его по имени (тип Variant)
  #end
  function SetVariantAttrValueByName(
    _NodeName : string;   // имя вершины
    _Value    : Variant;  // значение
    _eMode    : word = 0  // способ модификации
  ) : boolean;
  //----------------------------------------------------------------------------
  #doc
     Установить значение атрибута по пути на заданном уровне (тип Variant)
  #end
  function SetVariantAttrValueByPathOnLevel(
    _cNode    : comp;     // ссылка на вышестоящий
    _sPath    : string;   // путь на запись
    _Value    : Variant;  // значение
    _eMode    : word = 0  // способ модификации
  ) : boolean;

  //----------------------------------------------------------------------------
  #doc
     Получить значение атрибута, найдя его по имени (тип comp)
  #end
  function GetCompAttrValueByName(
    _NodeName : string    // имя вершины
  ) : comp;
  //----------------------------------------------------------------------------
  #doc
     Получить значение атрибута по пути на заданном уровне (тип Comp)
  #end
  function GetCompAttrValueByPathOnLevel(
    _cNode    : comp;     // ссылка на вышестоящий
    _sPath    : string    // путь на запись
  ) : comp;
  //----------------------------------------------------------------------------
  #doc
     Установить значение атрибута, найдя его по имени (тип comp)
  #end
  function SetCompAttrValueByName(
    _NodeName : string;   // имя вершины
    _Value    : comp  ;   // значение
    _eMode    : word = 0  // способ модификации
  ) : boolean;
  //----------------------------------------------------------------------------
  #doc
     Установить значение атрибута по пути на заданном уровне (тип Comp)
  #end
  function SetCompAttrValueByPathOnLevel(
    _cNode    : comp;     // ссылка на вышестоящий
    _sPath    : string;   // путь на запись
    _Value    : comp  ;   // значение
    _eMode    : word = 0  // способ модификации
  ) : boolean;

  //----------------------------------------------------------------------------
  #doc
     Получить значение атрибута, найдя его по имени (тип Date)
  #end
  function GetDateAttrValueByName(
    _NodeName : string    // имя вершины
  ) : date;
  //----------------------------------------------------------------------------
  #doc
     Установить значение атрибута, найдя его по имени (тип Date)
  #end
  function SetDateAttrValueByName(
    _NodeName : string;   // имя вершины
    _Value    : date  ;   // значение
    _eMode    : word = 0  // способ модификации
  ) : boolean;

  //----------------------------------------------------------------------------
  #doc
     Получить строковое значение атрибута, найдя его по имени
  #end
  function GetStringAttrValueByName(
    _NodeName : string    // имя вершины
  ) : string;
  //----------------------------------------------------------------------------
  #doc
     Установить строковое значение атрибута, найдя его по имени
  #end
  function SetStringAttrValueByName(
    _NodeName : string;   // имя вершины
    _Value    : string;   // значение
    _eMode    : word = 0  // способ модификации
  ) : boolean;
  //------------------------------------------------------------------------------
  #doc
     Установить строковое значение атрибута, найдя его по имени (+тип узла для новой вершины)
  #end
  function SetStringAttrValueNTypeByName(
    _NodeName : string;   // имя вершины
    _Value    : string;   // значение
    _eMode    : word;     // способ модификации
    _nType    : word      // тип узла
  ) : boolean;
  //------------------------------------------------------------------------------
  #doc
     Установить строковое значение атрибута, найдя его по имени (+потребность сохранения)
  #end
  function SetStringAttrValueByNameAndNeedSave(
    _NodeName : string;   // имя вершины
    _Value    : string;   // значение
    _isNdSave : boolean   // требуется сохранять
  ) : boolean;

  //----------------------------------------------------------------------------
  #doc
     Узнать является ли значение атрибута=Null, найдя его по имени
  #end
  function GetIsNullAttrValueByName(
    _NodeName : string    // имя вершины
  ) : boolean;
  //----------------------------------------------------------------------------
  #doc
     Узнать является ли значение атрибута=Null, найдя его по пути на заданном уровне
  #end
  function GetIsNullAttrValueByPathOnLevel(
    _cNode    : comp;     // ссылка на вышестоящий
    _sPath    : string    // путь на запись
  ) : boolean;
  //----------------------------------------------------------------------------
  #doc
     Установить Null значение атрибута, найдя его по имени
  #end
  function SetIsNullAttrValueByName(
    _NodeName : string;   // имя вершины
    _eMode    : word = 0  // способ модификации
  ) : boolean;
  //----------------------------------------------------------------------------
  #doc
     Установить Null значение атрибута, по пути на заданном уровне
  #end
  function SetIsNullAttrValueByPathOnLevel(
    _cNode    : comp;     // ссылка на вышестоящий
    _sPath    : string;   // путь на запись
    _eMode    : word = 0  // способ модификации
  ) : boolean;

  //============================================================================
  //#region УСТАНОВКА ЗНАЧЕНИЙ В ЗАВИСИМОСТИ ОТ ПАРАМЕТРА "НЕ ИСПОЛЬЗОВАТЬ АЛГОРИТМ"
  //----------------------------------------------------------------------------
  #doc
     Установить значение атрибута, найдя его по имени
  #end
  function SetAttrValueByName_Formula(
    _NodeName : string;   // имя вершины
    _Value    : string;   // значение
    _eMode    : word = 0  // способ модификации
  ) : boolean;

  //----------------------------------------------------------------------------
  #doc
     Установить значение атрибута, найдя его по имени (тип Variant)
  #end
  function SetVariantAttrValueByName_Formula(
    _NodeName : string;   // имя вершины
    _Value    : Variant;  // значение
    _eMode    : word = 0  // способ модификации
  ) : boolean;

  //----------------------------------------------------------------------------
  #doc
     Установить строковое значение атрибута, найдя его по имени
  #end
  function SetStringAttrValueByName_Formula(
    _NodeName : string;   // имя вершины
    _Value    : string;   // значение
    _eMode    : word = 0  // способ модификации
  ) : boolean;

  //----------------------------------------------------------------------------
  #doc
     Установить Null значение атрибута, найдя его по имени
  #end
  function SetIsNullAttrValueByName_Formula(
    _NodeName : string;   // имя вершины
    _eMode    : word = 0  // способ модификации
  ) : boolean;
  //#endregion УСТАНОВКА ЗНАЧЕНИЙ В ЗАВИСИМОСТИ ОТ ПАРАМЕТРА "НЕ ИСПОЛЬЗОВАТЬ АЛГОРИТМ"
  //****************************************************************************
  //#endregion GET/SET ЗНАЧЕНИЙ ПОКАЗАТЕЛЯ
  //****************************************************************************


  //============================================================================
  //#region GET/SET ЗНАЧЕНИЯ НЕ ИСПОЛЬЗОВАТЬ АЛГОРИТМ
  //----------------------------------------------------------------------------
  #doc
     Установить признак атрибута "не использовать алгоритм", найдя его по имени
  #end
  function SetProtValueByName(
    _NodeName : string;   // имя вершины
    _Value    : word      // значение:
                          //   lc_XMapProt_UseAlg - использовать алгоритм для данного поля
                          //   lc_XMapProt_NotUseAlg - не использовать алгоритм для данного поля
  ) : boolean;

  //----------------------------------------------------------------------------
  #doc
     Получить признак атрибута "не использовать алгоритм", найдя его по имени
  #end
  function GetProtValueByName(
    _NodeName : string    // имя вершины
  ) : word;               // значение:
                          //   lc_XMapProt_UseAlg - использовать алгоритм для данного поля
                          //   lc_XMapProt_NotUseAlg - не использовать алгоритм для данного поля
  //#endregion GET/SET ЗНАЧЕНИЯ НЕ ИСПОЛЬЗОВАТЬ АЛГОРИТМ
  //****************************************************************************


  //============================================================================
  //#region GET/SET ЗНАЧЕНИЯ ФОРМУЛА
  //----------------------------------------------------------------------------
  #doc
     Установить признак атрибута "формула", найдя его по имени
  #end
  function SetFormulaValueByName(
    _NodeName : string;   // имя вершины
    _Value    : string    // значение
  ) : boolean;
  //----------------------------------------------------------------------------
  #doc
     Установить значение атрибута "формула" по пути на заданном уровне
  #end
  function SetFormulaValueByPathOnLevel(
    _cNode    : comp;     // ссылка на вышестоящий
    _sPath    : string;   // путь на запись
    _Value    : string    // значение
  ) : boolean;

  //----------------------------------------------------------------------------
  #doc
     Получить признак атрибута "формула", найдя его по имени
  #end
  function GetFormulaValueByName(
    _NodeName : string    // имя вершины
  ) : string;
  //#endregion GET/SET ЗНАЧЕНИЯ ФОРМУЛА
  //****************************************************************************


  //============================================================================
  //#region GET/SET ПРИЗНАКА "ВЫГРУЖАЕМЫЙ"
  //----------------------------------------------------------------------------
  #doc
     Установить признак "выгружаемый", найдя его по NRec
  #end
  function SetAttrVisByNRec(
    _cRec     : comp  ;   // имя вершины
    _Value    : boolean   // значение
  ) : boolean;
  //----------------------------------------------------------------------------
  #doc
     Установить признак "выгружаемый", найдя его по имени
  #end
  function SetAttrVisByName(
    _NodeName : string;   // имя вершины
    _Value    : boolean   // значение
  ) : boolean;
  //----------------------------------------------------------------------------
  #doc
     Установить признак "выгружаемый" по пути на заданном уровне
  #end
  function SetAttrVisByPathOnLevel(
    _cNode    : comp;     // ссылка на вышестоящий
    _sPath    : string;   // путь на запись
    _Value    : boolean   // значение
  ) : boolean;

  //----------------------------------------------------------------------------
  #doc
     Получить признак "выгружаемый в иерархии", найдя его по имени
  #end
  function GetAttrVisByNameInTree(
    _NodeName : string    // имя вершины
  ) : boolean;
  //----------------------------------------------------------------------------
  #doc
     Получить признак "выгружаемый в иерархии" по пути на заданном уровне
  #end
  function GetAttrVisByPathOnLevelInTree(
    _cNode    : comp;     // ссылка на вышестоящий
    _sPath    : string    // путь на запись
  ) : boolean;

  //----------------------------------------------------------------------------
  #doc
     Получить признак "выгружаемый", найдя его по имени
  #end
  function GetAttrVisByName(
    _NodeName : string    // имя вершины
  ) : boolean;
  //----------------------------------------------------------------------------
  #doc
     Получить признак "выгружаемый" по пути на заданном уровне
  #end
  function GetAttrVisByPathOnLevel(
    _cNode    : comp;     // ссылка на вышестоящий
    _sPath    : string    // путь на запись
  ) : boolean;
  //#endregion GET/SET ПРИЗНАКА "ВЫГРУЖАЕМЫЙ"
  //****************************************************************************


  //============================================================================
  //#region GET/SET ПРИЗНАКА "УЧАСТИЕ В РАСЧЕТАХ"
  //----------------------------------------------------------------------------
  #doc
     Установить значение атрибута "участие в расчете" по пути на заданном уровне
  #end
  function SetUchRaschValueByPathOnLevel(
    _cNode    : comp;     // ссылка на вышестоящий
    _sPath    : string;   // путь на запись
    _Value    : word      // значение
  ) : boolean;

  //----------------------------------------------------------------------------
  #doc
     Получить признак "участие в расчете", найдя его по имени
  #end
  function GetAttrUchRaschByName(
    _NodeName : string    // имя вершины
  ) : word;
  //#endregion GET/SET ПРИЗНАКА "УЧАСТИЕ В РАСЧЕТАХ"
  //****************************************************************************


  //============================================================================
  //#region ПОЛУЧЕНИЕ ЗНАЧЕНИЙ ПОКАЗАТЕЛЯ В ЗАВИСИМОСТИ ОТ ВИДИМОСТИ
  //----------------------------------------------------------------------------
  #doc
     Получить значение атрибута, найдя его по имени, с учетом его видимости (тип string)
  #end
  function GetStringAttrValueByNameVis(
    _NodeName : string    // имя вершины
  ) : string;

  //----------------------------------------------------------------------------
  #doc
     Получить значение атрибута, найдя его по имени, с учетом его видимости (тип double)
  #end
  function GetDoubleAttrValueByNameVis(
    _NodeName : string    // имя вершины
  ) : double;
  //#endregion ПОЛУЧЕНИЕ ЗНАЧЕНИЙ ПОКАЗАТЕЛЯ В ЗАВИСИМОСТИ ОТ ВИДИМОСТИ
  //****************************************************************************


  //============================================================================
  //#region ПОЛУЧЕНИЕ ПРОЧИХ ПРИЗНАКОВ
  //----------------------------------------------------------------------------
  #doc
     Получить признак "формула существует", найдя его по имени
  #end
  function GetAttrFormulaByName(
    _NodeName : string    // имя вершины
  ) : boolean;

  //----------------------------------------------------------------------------
  #doc
     Получить признак "способ модификации поля", найдя его по имени
  #end
  function GetAttrEModeByName(
    _NodeName : string    // имя вершины
  ) : word;

  //----------------------------------------------------------------------------
  #doc
     Получить признак "поле обязательно", найдя его по имени
  #end
  function GetAttrNeedByName(
    _NodeName : string    // имя вершины
  ) : word;

  //----------------------------------------------------------------------------
  #doc
     Получить признак "тип значения", найдя его по имени
  #end
  function GetAttrValTypeByName(
    _NodeName : string    // имя вершины
  ) : word;

  //----------------------------------------------------------------------------
  #doc
     Получить признак "количество знаков после запятой", найдя его по имени
  #end
  function GetAttrDecimalByName(
    _NodeName : string    // имя вершины
  ) : word;

  //----------------------------------------------------------------------------
  #doc
     Получить признак "не использовать алгоритм", найдя его по имени
  #end
  function GetAttrProtByName(
    _NodeName : string    // имя вершины
  ) : word;

  //----------------------------------------------------------------------------
  #doc
     Получить признак "формат значения", найдя его по имени
  #end
  function GetAttrVFormatByName(
    _NodeName : string    // имя вершины
  ) : string;

  //----------------------------------------------------------------------------
  #doc
     Получить описание поля, найдя его по имени
  #end
  function GetNoteAttrValueByName(
    _NodeName : string    // имя вершины
  ) : string;
  //#endregion ПОЛУЧЕНИЕ ПРОЧИХ ПРИЗНАКОВ
  //****************************************************************************

  //#endregion FIELDS
  //****************************************************************************


  //============================================================================
  //#region РАСЧЕТ ФОРМУЛ
  //----------------------------------------------------------------------------
  #doc
     Добавить формулу в расчет
  #end
  procedure AddFormulas(_PatServer : longint);

  //----------------------------------------------------------------------------
  #doc
     Получить рассчитанные формулы
  #end
  procedure GetCounted(_PatServer : longint);
  //#endregion РАСЧЕТ ФОРМУЛ
  //****************************************************************************


  //============================================================================
  //#region РАБОТА С ХРАНИЛИЩЕМ
  //----------------------------------------------------------------------------
  #doc
     Загрузить структуру из базы
  #end
  procedure GetTblMap(wEnt:word; cTax : comp);
  //----------------------------------------------------------------------------
  #doc
     Сохранить структуру В базу
  #end
  procedure SetTblMap(wEnt:word; cTax : comp);
  //----------------------------------------------------------------------------
  #doc
     Удалить структуру из базы
  #end
  procedure DelTblMap(wEnt:word; cTax : comp);
  //----------------------------------------------------------------------------
  #doc
     Скопировать структуру в базе
  #end
  procedure CopyTblMAp(wEnt:word; cSource : comp; cDest:comp);
  //#endregion РАБОТА С ХРАНИЛИЩЕМ
  //****************************************************************************


  //============================================================================
  //#region IMPORT/EXPORT
  //----------------------------------------------------------------------------
  #doc
     Импорт структуры из XML
  #end
  procedure ImpXml(filename:string);
  //----------------------------------------------------------------------------
  #doc
    Импорт структуры из XSD
  #end
  procedure ImpXSD(filename:string);

  //----------------------------------------------------------------------------
  #doc
     Экспорт структуры в ФНС XML
  #end
  function ExpToXml(
    _sFilePath : string;          // путь на XML файл
    _isTo3XSrv : boolean = False  // сохранять на 3Х сервере
  ) : boolean;
  //----------------------------------------------------------------------------
  #doc
     Экспорт структуры в ФНС XML по имени вершина
  #end
  function ExpToXmlByName(
    _NodeName  : string;          // наименование вершина
    _sFilePath : string;          // путь на XML файл
    _isTo3XSrv : boolean = False  // сохранять на 3Х сервере
  ) : boolean;

  //----------------------------------------------------------------------------
  #doc
     Импорт структуры из GAL XML
  #end
  procedure ImpStructXml(filename:string);
  //----------------------------------------------------------------------------
  #doc
     Экспорт структуры в GAL XML
  #end
  procedure ExpStructXml(filename:string);

  //----------------------------------------------------------------------------
  #doc
     Импорт данных из Format01
  #end
  function ImpDataF01(
      _arrFilePath : TListFilePath  // список наименований файлов
  ) : boolean;
  //----------------------------------------------------------------------------
  #doc
     Экспорт данных в Format01
  #end
  function ExpDataF01(
  var _arrFilePath : TListFilePath  // список наименований файлов
  ) : boolean;

  #doc
     Экспорт структуры в TXT формат для FR3
  #end
  procedure ExpToTxtFR3;

  #doc
     Экспорт структуры в TXT
  #end
  procedure ExpToTxt(filename:string);
  //#endregion IMPORT/EXPORT
  //****************************************************************************


  //============================================================================
  //#region МОДИФИКАЦИЯ ДАННЫХ
  //----------------------------------------------------------------------------
  #doc
     Скопировать узел и все дочерние
  #end
  function CopyNode(NodeNRec : Comp; NoData : boolean = False):comp;

  //----------------------------------------------------------------------------
  #doc
     Удалить заданную вершину
  #end
  procedure DeleteNode(NodeNRec : comp);

  //----------------------------------------------------------------------------
  #doc
     Клонировать заданную вершину по существующему Share эталону
  #end
  function CloneNodeByExistingShare(
    _cEtalon : comp;            // эталонная вершина
    _cParent : comp;            // ссылка на вышестоящий новой записи
    _IsClear : boolean = False  // очищать ли данные
  ) : comp;
  //----------------------------------------------------------------------------
  #doc
     Клонировать заданную вершину
  #end
  function CloneNode(
    _ObjEtal : ObjRef;          // эталонный объект
    _cEtalon : comp;            // эталонная вершина
    _cParent : comp;            // ссылка на вышестоящий новой записи
    _IsClear : boolean = False  // очищать ли данные
  ) : comp;
  //#endregion МОДИФИКАЦИЯ ДАННЫХ
  //****************************************************************************


  //============================================================================
  //#region ПОДГОТОВКА ДАННЫХ
  //----------------------------------------------------------------------------
  procedure ClearShare;

  //----------------------------------------------------------------------------
  procedure CreateShare;

  //----------------------------------------------------------------------------
  procedure LoadShare;

  //----------------------------------------------------------------------------
  #doc
     Очистить карту структуры документа
  #end
  procedure ClearMap;

  //----------------------------------------------------------------------------
  #doc
     Очистить КЭШ для поиска записи по буферу
  #end
  procedure ClealAllCashForGetBuff;
  //----------------------------------------------------------------------------
  #doc
     Очистить все
  #end
  procedure ClearAll;
  //#endregion ПОДГОТОВКА ДАННЫХ
  //****************************************************************************


  //============================================================================
  //#region ПОЛЬЗОВАТЕЛЬСКИЙ ИНТЕРФЕЙС
  //----------------------------------------------------------------------------
  #doc
     Запустить окно редактирования
  #end
  procedure RunEditWindow(
    _cRec : comp;  // ссылка на запись структуры
    _dBeg : date;  // дата начала    периода отчета
    _dEnd : date   // дата окончания периода отчета
  );

  procedure SetCheckRW(Chk : word);

  procedure SetCheckRW_NotDef;

  procedure InitSetFocus(_pSrvFocus : ObjRef);
  //#endregion ПОЛЬЗОВАТЕЛЬСКИЙ ИНТЕРФЕЙС
  //****************************************************************************

End; //#endregion ObjInterface
//******************************************************************************


//------------------------------------------------------------------------------
//!!!нельзя, т.к. XMLStruct.Vih подключается в скриптах, и их он не находит!!!
//#include IModify.Vih             // Абстрактный табличный интерфейс
//#include IManualIndex.Vih        // Абстрактный интерфейс для индексов типа Manual
//------------------------------------------------------------------------------

//==============================================================================
#doc
Объектная таблица : "Структура документа"
#end
Private ObjInterface OTbXmlStruct;  //#region ObjInterface
   property NRec       : comp         read write;  // 01 номер записи
   property cNode      : comp         read write;  // 02 ссылка на вышестоящий
   property Npp        : TSumma       read write;  // 03 порядковый номер на уровне
   property NeedUse    : word         read write;  // 04 обязательность узла/атрибута
   property ManyOccurs : word         read write;  // 05 множественный
   property Key        : string[40]   read write;  // 06 ключ формулы
   property Name       : string[40]   read write;  // 07 наименование показателя
   property Formula    : string       read write;  // 08 формула расчета
   property Value      : string       read write;  // 09 значение показателя
   property Comment    : string[100]  read write;  // 10 описание показателя
   property cXSD       : comp         read write;  // 11 cXSD
   property wExp       : word         read write;  // 12 признак выгрузки
   property nType      : word         read write;  // 13 тип узла (обычный|текст)
   property eMode      : word         read write;  // 14 кем изменено значение
   property Prot       : word         read write;  // 15 не использовать алгоритм для данного поля
   property Need       : word         read write;  // 16 обязательность заполнения поля (визуализация)
   property UchRasch   : word         read write;  // 17 участие в расчетах (визуализация)
   property wValType   : word         read write;  // 18 тип значения
   property wDecimal   : word         read write;  // 19 количество знаков после запятой
   property sVFormat   : string[20]   read write;  // 20 формат значения

   index Struct01 = NRec (Unique);
   index Struct02 = cNode, Npp;
   index Struct03 = cNode, Name;
   index Struct04 = cNode, Name, Npp;
End; //#endregion ObjInterface
//******************************************************************************


//==============================================================================
VipInterface XmlStruct implements OXmlStruct, OTbXmlStruct, IModify//, IManualIndex
Licensed(Free);
Public:
  Constructor Init;
  Destructor  Done;
End;
//******************************************************************************

#endif//__XmlStruct_Vih__
