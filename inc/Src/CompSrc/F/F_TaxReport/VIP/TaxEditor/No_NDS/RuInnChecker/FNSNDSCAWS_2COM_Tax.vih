//-------------------------------------------------------------------
//--- Copyright(c) 2001 by Galaktika Corporation                  ---
//--- Этот файл автоматически генерируется для использования      ---
//--- COM интерфейсов из Атлантиса. Править этот файл запрещается ---
//--- так как это может привести к неработоспособности системы    ---
//-------------------------------------------------------------------

#ifndef __FNSNDSCAWS_2COM__
#define __FNSNDSCAWS_2COM__
#include atlcom.vih

//--- Forwards declarations --------------

ObjInterface comIXMLNode; forward;
ObjInterface comIDataSet; forward;
ObjInterface comIFNSNDSCAWS_2; forward;
ObjInterface com_NdsRequest2NP; forward;
ObjInterface com_NdsResponse2; forward;
ObjInterface com_NdsResponse2NP; forward;
ObjInterface com_NdsRequest2CompletedEventHandler; forward;
ObjInterface com_NdsRequest2CompletedEventArgs; forward;
ObjInterface com_CXMLNode; forward;
ObjInterface com_CDataSet; forward;
ObjInterface com_CFNSNDSCAWS_2; forward;


//--- Types definition  ------------------

type NdsResponse2NPState // #docl  Комментарии отсутствуют. </brief>
                         = longint;
const
  NdsResponse2NPState_Item0 = 0;
  NdsResponse2NPState_Item1 = 1;
  NdsResponse2NPState_Item2 = 2;
  NdsResponse2NPState_Item3 = 3;
  NdsResponse2NPState_Item4 = 4;
  NdsResponse2NPState_Item5 = 5;
  NdsResponse2NPState_Item6 = 6;
  NdsResponse2NPState_Item7 = 7;
  NdsResponse2NPState_Item8 = 8;
  NdsResponse2NPState_Item9 = 9;
  NdsResponse2NPState_Item10 = 10;
  NdsResponse2NPState_Item11 = 11;
  NdsResponse2NPState_Item12 = 12;
end;


//--- arrays



//--- Object Interfaces ------------------

ObjInterface comIXMLNode( comIDispatch );
// #docl Объектный интерфейс comIXMLNode </brief>
  procedure XmlNode2File  // #docl  Комментарии отсутствуют. </brief>
                           ( fileName // #docl Тип параметра: входной.
                           : string );
  procedure File2XmlNode  // #docl  Комментарии отсутствуют. </brief>
                           ( fileName // #docl Тип параметра: входной.
                           : string );
end;

VipInterface vcomIXMLNode( vcomIDispatch ) Implements comIXMLNode (virtual);
// #docl Служебный объект, создавать запрещается !!! </brief>
public:
  constructor CreateQI// #docl Создает экземпляр интерфейса. </brief>
                      ( iComHandle       // #docl Код экземпляра.
                      : TPtr; flags   // #docl Свойства экземпляра.
                      : word );
end;

ObjInterface comIDataSet( comIDispatch );
// #docl Объектный интерфейс comIDataSet </brief>
  procedure DataSet2File  // #docl  Комментарии отсутствуют. </brief>
                           ( fileName // #docl Тип параметра: входной.
                           : string );
end;

VipInterface vcomIDataSet( vcomIDispatch ) Implements comIDataSet (virtual);
// #docl Служебный объект, создавать запрещается !!! </brief>
public:
  constructor CreateQI// #docl Создает экземпляр интерфейса. </brief>
                      ( iComHandle       // #docl Код экземпляра.
                      : TPtr; flags   // #docl Свойства экземпляра.
                      : word );
end;

ObjInterface comIFNSNDSCAWS_2( comIDispatch );
// #docl Объектный интерфейс comIFNSNDSCAWS_2 </brief>
  property  service_Url// #docl Дополнительная документация отсутствует. </brief>
                        : string Read Write;
  function  service_createXmlNode  // #docl  Комментарии отсутствуют. </brief>
                                    ( fileName // #docl Тип параметра: входной.
                                    : string ) : comIXMLNode; // #docl Результат типа comIXMLNode
  function  NdsRequest2  // #docl  Комментарии отсутствуют. </brief>
                          ( NP // #docl Тип параметра: входной.
                          : comIXMLNode ) : comIXMLNode; // #docl Результат типа comIXMLNode
end;

VipInterface vcomIFNSNDSCAWS_2( vcomIDispatch ) Implements comIFNSNDSCAWS_2 (virtual);
// #docl Служебный объект, создавать запрещается !!! </brief>
public:
  constructor CreateQI// #docl Создает экземпляр интерфейса. </brief>
                      ( iComHandle       // #docl Код экземпляра.
                      : TPtr; flags   // #docl Свойства экземпляра.
                      : word );
end;

ObjInterface com_NdsRequest2NP( comIDispatch );
// #docl Объектный интерфейс com_NdsRequest2NP </brief>
end;

VipInterface vcom_NdsRequest2NP( vcomIDispatch ) Implements com_NdsRequest2NP (virtual);
// #docl Служебный объект, создавать запрещается !!! </brief>
public:
  constructor CreateQI// #docl Создает экземпляр интерфейса. </brief>
                      ( iComHandle       // #docl Код экземпляра.
                      : TPtr; flags   // #docl Свойства экземпляра.
                      : word );
end;

ObjInterface com_NdsResponse2( comIDispatch );
// #docl Объектный интерфейс com_NdsResponse2 </brief>
end;

VipInterface vcom_NdsResponse2( vcomIDispatch ) Implements com_NdsResponse2 (virtual);
// #docl Служебный объект, создавать запрещается !!! </brief>
public:
  constructor CreateQI// #docl Создает экземпляр интерфейса. </brief>
                      ( iComHandle       // #docl Код экземпляра.
                      : TPtr; flags   // #docl Свойства экземпляра.
                      : word );
end;

ObjInterface com_NdsResponse2NP( comIDispatch );
// #docl Объектный интерфейс com_NdsResponse2NP </brief>
end;

VipInterface vcom_NdsResponse2NP( vcomIDispatch ) Implements com_NdsResponse2NP (virtual);
// #docl Служебный объект, создавать запрещается !!! </brief>
public:
  constructor CreateQI// #docl Создает экземпляр интерфейса. </brief>
                      ( iComHandle       // #docl Код экземпляра.
                      : TPtr; flags   // #docl Свойства экземпляра.
                      : word );
end;

ObjInterface com_NdsRequest2CompletedEventHandler( comIDispatch );
// #docl Объектный интерфейс com_NdsRequest2CompletedEventHandler </brief>
end;

VipInterface vcom_NdsRequest2CompletedEventHandler( vcomIDispatch ) Implements com_NdsRequest2CompletedEventHandler (virtual);
// #docl Служебный объект, создавать запрещается !!! </brief>
public:
  constructor CreateQI// #docl Создает экземпляр интерфейса. </brief>
                      ( iComHandle       // #docl Код экземпляра.
                      : TPtr; flags   // #docl Свойства экземпляра.
                      : word );
end;

ObjInterface com_NdsRequest2CompletedEventArgs( comIDispatch );
// #docl Объектный интерфейс com_NdsRequest2CompletedEventArgs </brief>
end;

VipInterface vcom_NdsRequest2CompletedEventArgs( vcomIDispatch ) Implements com_NdsRequest2CompletedEventArgs (virtual);
// #docl Служебный объект, создавать запрещается !!! </brief>
public:
  constructor CreateQI// #docl Создает экземпляр интерфейса. </brief>
                      ( iComHandle       // #docl Код экземпляра.
                      : TPtr; flags   // #docl Свойства экземпляра.
                      : word );
end;

ObjInterface com_CXMLNode( comIDispatch );
// #docl Объектный интерфейс com_CXMLNode </brief>
end;

VipInterface vcom_CXMLNode( vcomIDispatch ) Implements com_CXMLNode (virtual);
// #docl Служебный объект, создавать запрещается !!! </brief>
public:
  constructor CreateQI// #docl Создает экземпляр интерфейса. </brief>
                      ( iComHandle       // #docl Код экземпляра.
                      : TPtr; flags   // #docl Свойства экземпляра.
                      : word );
end;

ObjInterface com_CDataSet( comIDispatch );
// #docl Объектный интерфейс com_CDataSet </brief>
end;

VipInterface vcom_CDataSet( vcomIDispatch ) Implements com_CDataSet (virtual);
// #docl Служебный объект, создавать запрещается !!! </brief>
public:
  constructor CreateQI// #docl Создает экземпляр интерфейса. </brief>
                      ( iComHandle       // #docl Код экземпляра.
                      : TPtr; flags   // #docl Свойства экземпляра.
                      : word );
end;

ObjInterface com_CFNSNDSCAWS_2( comIDispatch );
// #docl Объектный интерфейс com_CFNSNDSCAWS_2 </brief>
end;

VipInterface vcom_CFNSNDSCAWS_2( vcomIDispatch ) Implements com_CFNSNDSCAWS_2 (virtual);
// #docl Служебный объект, создавать запрещается !!! </brief>
public:
  constructor CreateQI// #docl Создает экземпляр интерфейса. </brief>
                      ( iComHandle       // #docl Код экземпляра.
                      : TPtr; flags   // #docl Свойства экземпляра.
                      : word );
end;


//--- coClasses---------------------------

VipInterface coNdsRequest2NP // #docl  Комментарии отсутствуют. </brief>
                             ( vcom_NdsRequest2NP );
public:
  constructor Init // #docl Инициализация экземпляра интерфейса. </brief>
                   ;
  constructor Create // #docl Инициализация экземпляра интерфейса с флагами. </brief>
                     ( atlFlags // #docl Флаги интерфейса. </brief>
                               : word );
end;

VipInterface coNdsResponse2 // #docl  Комментарии отсутствуют. </brief>
                            ( vcom_NdsResponse2 );
public:
  constructor Init // #docl Инициализация экземпляра интерфейса. </brief>
                   ;
  constructor Create // #docl Инициализация экземпляра интерфейса с флагами. </brief>
                     ( atlFlags // #docl Флаги интерфейса. </brief>
                               : word );
end;

VipInterface coNdsResponse2NP // #docl  Комментарии отсутствуют. </brief>
                              ( vcom_NdsResponse2NP );
public:
  constructor Init // #docl Инициализация экземпляра интерфейса. </brief>
                   ;
  constructor Create // #docl Инициализация экземпляра интерфейса с флагами. </brief>
                     ( atlFlags // #docl Флаги интерфейса. </brief>
                               : word );
end;

VipInterface coNdsRequest2CompletedEventHandler // #docl  Комментарии отсутствуют. </brief>
                                                ( vcom_NdsRequest2CompletedEventHandler );
public:
  constructor Init // #docl Инициализация экземпляра интерфейса. </brief>
                   ;
  constructor Create // #docl Инициализация экземпляра интерфейса с флагами. </brief>
                     ( atlFlags // #docl Флаги интерфейса. </brief>
                               : word );
end;

VipInterface coNdsRequest2CompletedEventArgs // #docl  Комментарии отсутствуют. </brief>
                                             ( vcom_NdsRequest2CompletedEventArgs );
public:
  constructor Init // #docl Инициализация экземпляра интерфейса. </brief>
                   ;
  constructor Create // #docl Инициализация экземпляра интерфейса с флагами. </brief>
                     ( atlFlags // #docl Флаги интерфейса. </brief>
                               : word );
end;

VipInterface coCXMLNode // #docl  Комментарии отсутствуют. </brief>
                        ( vcom_CXMLNode );
public:
  constructor Init // #docl Инициализация экземпляра интерфейса. </brief>
                   ;
  constructor Create // #docl Инициализация экземпляра интерфейса с флагами. </brief>
                     ( atlFlags // #docl Флаги интерфейса. </brief>
                               : word );
end;

VipInterface coCDataSet // #docl  Комментарии отсутствуют. </brief>
                        ( vcom_CDataSet );
public:
  constructor Init // #docl Инициализация экземпляра интерфейса. </brief>
                   ;
  constructor Create // #docl Инициализация экземпляра интерфейса с флагами. </brief>
                     ( atlFlags // #docl Флаги интерфейса. </brief>
                               : word );
end;

VipInterface coCFNSNDSCAWS_2 // #docl  Комментарии отсутствуют. </brief>
                             ( vcom_CFNSNDSCAWS_2 );
public:
  constructor Init // #docl Инициализация экземпляра интерфейса. </brief>
                   ;
  constructor Create // #docl Инициализация экземпляра интерфейса с флагами. </brief>
                     ( atlFlags // #docl Флаги интерфейса. </brief>
                               : word );
end;


#endif