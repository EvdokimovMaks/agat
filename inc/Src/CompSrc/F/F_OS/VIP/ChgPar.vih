/*
 ╔═══════════════════════════════════════════════════════════════════════════╗
 ║ Система       : Основные средства                                         ║
 ║ Назначение    : Работа с дополнительными изменяемыми параметрами ИК       ║
 ║                 по операциям ОС, НМА                                      ║
 ╚═══════════════════════════════════════════════════════════════════════════╝
*/
#ifdef __OsChgPar__
#ifndef __CHGPAR_VIH__
#define __CHGPAR_VIH__

#ifdef __OsChgParConverter__
// Функция загрузки данных из хранилища в таблицу доступна если в словаре нет
// такой таблицы, а есть только таблица в памяти, либо если используем ее для
// конвертера базы данных.
  #define __NeedLoadOsChgPar__
#end

#include RecTypes.vpp

#Component "F_OS"

const
  // варианты значения поля OsChgPar.wType
  cgOsChg_OldVal   : word = 1;  // значение до проведения операции
  cgOsChg_NewVal   : word = 2;  // значение после проведения операции
  // варианты значения поля OsChgPar.ParCode
  cgOSChg_None     : word = 0;  // Тип не задан
  cgOsChg_Podr     : word = 1;  // Подразделение
  cgOsChg_Mol      : word = 2;  // МОЛ
  cgOsChg_Isp      : word = 3;  // Признак использования
  cgOsChg_HozOper  : word = 4;  // Операция начисления амортизации
  cgOsChg_Metod    : word = 5;  // Алгоритм начисления амортизации
  cgOsChg_SrokIsp  : word = 6;  // Срок полезного использования
  cgOsChg_PoprKoef : word = 7;  // Поправочный коэффициент
  cgOsChg_GrAm     : word = 8;  // Амортизационная группа
  cgOsChg_OKOF     : word = 9;  // Группировка ОКОФ
  cgOsChg_PrSb     : word = 10; // Признак собственности
  cgOsChg_CO       : word = 11; // Центр ответственности
  cgOsChg_Sposob   : word = 12; // Тип объекта
  cgOsChg_Grup     : word = 13; // Группа ОС
  cgOsChg_StoimPs  : word = 14; // Стоимость при поступлении
  cgOsChg_IznosPs  : word = 15; // Износ при поступлении
  cgOsChg_KauReff  : word = 16; // Внешние КАУ
  cgOsChg_DateK    : word = 17; // Дата ввода в эксплуатацию
  cgOsChg_Norma    : word = 18; // Норма амортизации
  cgOsChg_Stoim    : word = 19; // Стоимость объекта ОС/НМА
  cgOsChg_BaseStoim: word = 20; // Стоимость базовая/остаточная на 31.12.2001
  cgOsChg_StoimL   : word = 21; // Ликвидационная стоимость
  cgOsChg_NalogGR  : word = 22; // Налоговая группа
  cgOsChg_Kol      : word = 23; // Количество
  cgOsChg_PerStoim   : word = 24; // Накопленная переоценка стоимости
  cgOsChg_PerSumIzn  : word = 25; // Накопленная переоценка суммы износа

  cgOsChg_TipRsrv    : word = 26; // Тип резерва
  cgOsChg_dLikvRsrv  : word = 27; // Дата ликвидации плановая

  cgOsChg_COFilial   : word = 28; // Центр ответственности - Филиал

  cgOsChg_DateGar    : word = 29; // Дата гарантии

  cgOsChg_dLikvFact  : word = 30; // Дата ликвидации фактическая

  cgOsChg_SrokIspPost  : word = 31;  // Срок полезного использования при поступлении
  cgOsChg_NameOs       : word = 32;  // Наименование ОС
  cgOsChg_ExtAttr      : word = 33;  // Внешний атрибут
  cgOsChg_MilPerMonth  : word = 34;  // Пробег за месяц
  cgOsChg_PodrTr       : word = 35;  // Подразделение
  cgOsChg_FormMovable  : word = 36;  // Тип имущества
  cgOsChg_AmortCorr    : word = 37;  // Корректировка амортизации
  cgOsChg_Characteristik : word = 38;  // Характеристика
  cgOsChg_OffBalIznos  : word = 39;    // Забалансовый износ
  cgOsChg_ZavNum       : word = 40;    // Заводской номер
  cgOsChg_PassNum      : word = 41;    // Номер паспорта
  cgOsChg_TipMark      : word = 42;    // Модель, тип, марка

  // !!! При добавлении новых полей стоит также посмотреть заполнение
  // истории изменения значений в печати списка операций по карточке в  P_KatOs.vpp.
end;

const
  // Для метода ObjChgParEdit.SetMayEdit
  cgChgParMayNotEdit         : word = 0; // Запрещено редактирование данных
  cgChgParMayEditAllMeth     : word = 1; // Разрешено редактирование данных для всех методов учета
  cgChgParMayEditOnlyCurMeth : word = 2; // Разрешено редактирование только для текущего метода учета
  cgChgParMayEditOnlyCurOS   : word = 4; // Разрешено редактирование только для текущей карточки
end

#ifdef __NeedLoadOsChgPar__
#include FpOAF.Inc
#include FpOAF.Vih      // универсальное хранилище
const
  // Имя таблицы и полей в хранилище
  cgChgParTbl      = 'OCP';
  cgChgParWType    = 'WType';
  cgChgParCMoveOs  = 'CMoveOs';
  cgChgParCNastrOs = 'CNastrOs';
  cgChgParCKatOs   = 'CKatOs';
  cgChgParParCode  = 'ParCode';
  cgChgParCValue   = 'CValue';
  cgChgParDValue   = 'DValue';
end;
#end // #ifdef __NeedLoadOsChgPar__

//==============================================================================
#doc
  Работа с дополнительными изменяемыми параметрами ИК по операциям ОС, НМА
#end
ObjInterface ObjMoveOsChgPar;
// -----------------------------------------------------------------------------
#doc
  Установка текущей операции
#end
  Procedure SetMoveOsRec(pcMoveOsNRec : comp; _MarkersSp : TPtr = 0);
// -----------------------------------------------------------------------------
#doc
  Установка текущего метода учета
#end
  Procedure SetNastrOsRec(pcNastrOsNRec : comp);
// -----------------------------------------------------------------------------
#doc
  Установка текущей инвентарной карточки
#end
  Procedure SetKatOsRec(pcKatOsNRec : comp);
// -----------------------------------------------------------------------------
#doc
  Удаление данных по заданной операции
#end
  Function DelMoveOs(pcMoveOsNRec : comp) : boolean;
// -----------------------------------------------------------------------------
#doc
  Создание данных по заданному методу учета для текущей операции на основе
  данных текущего метода учета.
#end
  Function AddNastrOsForMoveOs(pcNastrOsNRec : comp) : boolean;
// -----------------------------------------------------------------------------
#doc
  Удаление данных по заданному методу учета по всем операциям
#end
  Function DelNastrOs(pcNastrOsNRec : comp) : boolean;
// -----------------------------------------------------------------------------
#doc
  <brief>Сохранение старых значений (до проведения операции) полей таблицы KatOs</brief>
  Сохраняет старые значения (до проведения операции) полей KatOs для
  текущей операции по заданному списку параметров<br>
  Если данные по какой-то причине уже сохранены, то повторное сохранение не делается.
#end
  Function SaveKatOsOldValues( pbKatOs : type$KatOs ) : boolean;
// -----------------------------------------------------------------------------
#doc
  <brief>Сохранение старых значений (до проведения операции) полей таблицы SpKatOs</brief>
  Сохраняет старые значения (до проведения операции) полей SpKatOs для
  текущей операции по заданному списку параметров<br>
  Если данные по какой-то причине уже сохранены, то повторное сохранение не делается.<br>
  WARNING !!! Данные о значениях до проведения операции могут появиться
  не только в результате отработки этого метода, но и в случае создания
  данных для нового метода учета, если в исходном методе такие данные были
  сохранены.
#end
  Function SaveSpKatOsOldValues( pbSpKatOs : type$SpKatOs ) : boolean;
// -----------------------------------------------------------------------------
#doc
  Удаляет сохраненные старые значения для заданного KatOs по операции
#end
  Function DelKatOsOldValues(pcKatOsNRec : comp) : boolean;
// -----------------------------------------------------------------------------
#doc
  Удаляет сохраненные старые значения для заданного SpKatOs по операции
#end
  Function DelSpKatOsOldValues(pcKatOsNRec : comp; pcNastrOsNRec : comp) : boolean;
// -----------------------------------------------------------------------------
#doc
  Флаг того, что операция содержит изменение значений в KatOs.
#end
  Function isPresentKatOsData : boolean;
// -----------------------------------------------------------------------------
#doc
  Флаг того, что операция содержит изменение значений в SpKatOs.
#end
  Function isPresentSpKatOsData : boolean;
// -----------------------------------------------------------------------------
#doc
  Флаг того, что операция содержит изменение указанного параметра для текущего ОС
#end
  Function isPresentParameter( pwParCode : word ) : boolean;
// -----------------------------------------------------------------------------
#doc
  Заполняет в буфере KatOs новые значения дополнительных параметров по текущей операции.
#end
  // Необходима, например, при проведении операции.
  // Возвращает true если произошло изменение значений в переданном буфере.
  Function PutKatOsNewValues( var vbKatOs : type$KatOs ) : boolean;
// -----------------------------------------------------------------------------
#doc
  Заполняет в буфере SpKatOs новые значения дополнительных параметров по текущей
  операции и текущему методу учета.
#end
  // Необходима, например, при проведении операции.
  // Возвращает true если произошло изменение значений в переданном буфере.
  Function PutSpKatOsNewValues( var vbSpKatOs : type$SpKatOs ) : boolean;
// -----------------------------------------------------------------------------
#doc
  Заполняет в буфере KatOs старые значения дополнительных параметров по текущей
  операции и текущей карточке
#end
  // Необходима, например, при отмене проведения операции.
  // Возвращает true если произошло изменение значений в переданном буфере.
  Function PutKatOsOldValues( var vbKatOs : type$KatOs ) : boolean;
// -----------------------------------------------------------------------------
#doc
  Заполняет в буфере SpKatOs старые значения дополнительных параметров по
  текущей операции, текущему методу учета и карточке.
#end
  // Необходима, например, при отмене проведения операции.
  // Возвращает true если произошло изменение значений в переданном буфере.
  Function PutSpKatOsOldValues( var vbSpKatOs : type$SpKatOs ) : boolean;
// -----------------------------------------------------------------------------
#doc
  // Удаляет сохраненные старые значения для определенного типа параметра
#end
  Function DelOsChgParOldValues(pcKatOsNRec : comp; pcNastrOsNRec : comp; pwPrevParam: word) : boolean;
// -----------------------------------------------------------------------------
#doc
  // Удаление данных по карточке при удалении позиции операции
#end
  Function DelKatOsAllValues(pcMoveOsNRec : comp; pcKatOsNRec : comp) : boolean;
// -----------------------------------------------------------------------------
#doc
  Восстановление значений внешних КАУ в ИК на основании операции перемещения ОС/НМА
#end
  Procedure RestoreKauReffByDate(pwTiDk: word; pcKatOS: comp; dStartDate, dDate: date);
// -----------------------------------------------------------------------------
#doc
  Ссылка на значение внешнего КАУ на основании операции перемещения ОС/НМА до проведения операции
#end
  // pwKau - код внешнего КАУ
  Function GetKauReffOldValues(pwKau : word) : comp;
// -----------------------------------------------------------------------------
#doc
  Ссылка на значение внешнего КАУ на основании операции перемещения ОС/НМА после проведения операции
#end
  // pwKau - код внешнего КАУ
  Function GetKauReffNewValues(pwKau : word) : comp;
// -----------------------------------------------------------------------------
#doc
  Флаг того, что операция содержит изменение Внешнего КАУ заданного кода
#end
  Function isPresentKauReff(pwKau : word): boolean;
// -----------------------------------------------------------------------------
#doc
  Наименование изменяемого параметра
#end
  Function GetNameParCode(pwParCode: word) : string;
// -----------------------------------------------------------------------------
#doc
  Флаг того, что операция содержит указанный параметр, для одного из ОС в операции
#end
  Function isPresentParameterInOperation( pwParCode : word; pwKau : word = 0 ) : boolean;
// -----------------------------------------------------------------------------

#doc
  Приведение в соответствие "предыдущих" значений изменяемых параметров<br>
  для операции ОС/НМА для карточки.</brief><br>
#end
  Function RefreshChgParForSpMoveOS(pcMoveOS, pcKatOS, pcNastrOS: comp; var pMsgKind : longint) : boolean;
// -----------------------------------------------------------------------------

#doc
  Проверка различия "предыдущих" значений изменяемых параметров в операции ОС/НМА
#end
  Function ChkPrevValuesInMoveOS(pcMoveOS, pcNastrOS: comp; pwMode: word) : word;
// -----------------------------------------------------------------------------
#doc
  Сохранить значения полей KatOs для текущей операции для заданного параметра
#end
  Function SaveKatOsValues_ParCode(pbKatOs: type$KatOs; pbSpKatOs: type$SpKatOs; pwType, pwParCode: word) : boolean;
// -----------------------------------------------------------------------------

#doc
  Получить значение налоговой группы для карточки ОС из операции ОС/НМА
#end
  Function GetKatNalGrValue(pwType : word; pcKatOS: comp) : comp;
// -----------------------------------------------------------------------------
#doc
  Установить налоговую группу для карточки ОС
#end
  Function SetNalGrOSValue(pwType: word; pcKatOS: comp): comp;
// -----------------------------------------------------------------------------

//------------------------------------------------------------------------------
#doc
  Перерисовка окна редактирования значений параметров.
#end
  Procedure RescanChgPar;
//------------------------------------------------------------------------------
#doc
  Перечитывает все значения параметров в окне редактирования.
#end
  // !!! Рекомендую методом RereadChgPar пользоваться осторожно. !!!
  // При тестировании использования его вызовов в перемещениях между
  // записями операций (MoveOs) обнаружено, что если операция проведена (то ли
  // по текущему методу, то ли по любому, точно не знаю) и список
  // дополнительных параметров карточки для изменения по операции пуст, то при
  // позиционировании на такую запись, по какой-то странной причине, возникает
  // событие, приводящее к закрытию текущего окна (по крайней мере тогда когда
  // встроенная панель этого интерфейса видима).
  Procedure RereadChgPar;
//------------------------------------------------------------------------------
#doc
   Установка разрешения на редактирование данных.
#end
  // В случае запрета - задается строка сообщения (psReason) о причине
  // запрета, которая будет дополнять сообщения пользователю.
  //   Необходимо устанавливать при каждом переключении между операциями и
  // переключении методов учета в интерфейсе редактирования.
  // Например запрет редактирования при проведенности операции или при
  // нахождении операции в закрытом отчетном периоде (при соответствующей
  // настройке).
  // cgChgParMayNotEdit         = 0; // Запрещено редактирование данных
  // cgChgParMayEditAllMeth     = 1; // Разрешено редактирование данных для всех методов учета
  // cgChgParMayEditOnlyCurMeth = 2; // Разрешено редактирование только для текущего метода учета
  Procedure SetMayEdit(pwMayEdit : word; psReason : string);
//------------------------------------------------------------------------------
#doc
  Событие по изменению метода учета
#end
  event Procedure OnChangeNastrOs;
//------------------------------------------------------------------------------

// Возвращает дату установки признака использования "Ремонт"  в операции изменения параметров 102.130965
// Если настройка не указана, или текущий признак в карточке (или в архиве) не Ремонт, то вернет Zerodate.
Function GetDatePriznRemont(_cKatOs, _cNastrOs: comp; _dPeriod: date): date;

  // Скопировать запись OsChgPar для нового типа
  Function CopyOsChgPar(_cMoveOsIn, _cKatOsIn, _cNastrOsIn, _cMoveOsOut, _cKatOsOut, _cNastrOsOut : comp) : boolean;

  // Функция проверки можно ли в параметре задать разные значения для разных  методов учета.
  function isMultiMethod(pwParCode:word) : boolean;

  // Является ли параметр индивидуальным для каждой карточки. Суммой
  Function IsSumParm (_TipParm: word) : boolean;

  //  Добавить новый параметр в операцию. Или обновить значение если существует параметр.
  // Возвращает ссылку на добавленый.
  Function AddNewOsChgPar(_cMoveOs, _cKatOs, _cNastrOs : comp; _OsChgPar : type$OsChgPar) : comp;

  // Скопироватть новое значение параметра из существующего для другого ОС
  // Возвращает вствленное значение.
  Function CopyNewOsChgParFromOther(_OsChgPar, _cKatOs, _cNastrOs : comp) : comp;

  // Добавление данных из текущего метода учета в другие
  procedure InsertOtherMeth(_OsChgPar, _cNastrOs : comp);

  // Добавить новую запись
  Function AddNewOsChgParValues( _OsChgPar : type$OsChgPar) : boolean;


  // Получить значение тип tSumma
  Function dGetOsChgPar (_cMoveOs, _cKatOs, _cNastrOs : comp; _ParCode : longInt; _wType : word) : tSumma;
  // Получить значение тип Comp
  Function cGetOsChgPar (_cMoveOs, _cKatOs, _cNastrOs : comp; _ParCode : longInt; _wType : word) : comp;
  // Получить значение тип Comp
  Function dtGetOsChgPar(_cMoveOs, _cKatOs, _cNastrOs : comp; _ParCode : longInt; _wType : word) : date;

  // Получить название внешнего параметра
  Function GetNameParCodeExt(pwParCode: Word; _wKau: Word = 0) : String;

end;    // ObjInterface




//==============================================================================
#doc
  Работа с операциями по восстановлению значений в карточках измененных операциями изменения параметров
#end
ObjInterface ObjMoveOsChgParRev;
#doc
  Формирование операций обратного возвращения значений параметров,
  модифицированных операцией изменения параметров.
#end
  // -------------------------------------------------------------------------
  // Передаваемые параметры:
  //     pcMoveOs - ссылка на исходную операцию.
  //     pcKatOs  - ссылка на карточку по которой необходимо сформировать
  //                операцию.
  //                0, если формировать по всем карточкам операции.
  //     pdDatOb  - дата для создаваемой операции
  // -------------------------------------------------------------------------
  procedure CreateReversOperations(pcMoveOs : comp; pcKatOs : comp; pdDatOb : date);
// -----------------------------------------------------------------------------
#doc
  Просмотр списка операций обратной корректировки.
#end
  // -------------------------------------------------------------------------
  // Передаваемые параметры:
  //     pcMoveOs - ссылка на исходную операцию
  // -------------------------------------------------------------------------
  procedure ViewReversOperations(pcMoveOs : comp);
// -----------------------------------------------------------------------------
#doc
  Формирование операций обратного возвращения значений параметров,<br>
  модифицированных операциями изменения параметров, действие которых<br>
  завершается в заданном периоде.</brief><br>
  Период задается пользователем в соответствующем окне ввода.
  <ul> Передаваемые параметры:
  <li><ul>   pwTiDk - тип документов для которых осуществляется операция:
      <li>      15 - ОС,
      <li>      16 - НМА </ul></ul>
#end
  public procedure CreateOperationsForPeriod(pwTiDk : word);
// -----------------------------------------------------------------------------
end;

ObjInterface objChgParEvent;
#doc
  Событие по выбору изменяемого параметра
#end
  Event Procedure OnPickChgPar;
end;


VipInterface OsChgPar implements ObjMoveOsChgPar, objChgParEvent
  Licensed(Free);

VipInterface OsChgParRev implements ObjMoveOsChgParRev
  Licensed(Free);

#end // __CHGPAR_VIH__
#end // __OsChgPar__
