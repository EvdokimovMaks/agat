/*
 ╔═══════════════════════════════════════════════════════════════════════════╗
 ║                    (c) 1994,2003 корпорация ГАЛАКТИКА                     ║
 ║ Проект        : ГАЛАКТИКА                                                 ║
 ║ Система       : Основные средства                                         ║
 ║ Версия        : 6.0                                                       ║
 ║ Назначение    : СПЕЦИФИКАЦИЯ ОС ПО МЦ                                     ║
 ║ Параметры     : Есть                                                      ║
 ╚═══════════════════════════════════════════════════════════════════════════╝
*/
#ifndef __MCINOS_VIH__
#define __MCINOS_VIH__

#ifdef ComponentVersion
#Component "F_OS"
#end
#ifdef ComponentVersionInDict
#include iOsMc.vih
#include iSpOsMc.vih
#end

#ifdef ComponentVersionInDict
public Type TOsMcDoc = Record As Table OsMc;
public Type TSpOsMcDoc = Record As Table SpOsMc;
#else
Type TOsMcDoc = Record As Table OsMc;
Type TSpOsMcDoc = Record As Table SpOsMc;
#end

ObjInterface ObjMcInOs; forward;
#doc
  Объект для работы со спецификацией ОС по МЦ
#end
ObjInterface ObjMcInOs;
//------------------------------------------------------------------------------
#doc
  Инициализация параметров
#end
  procedure InitMcInOsParams(In_cKatOs    : comp;   //ссылка на ИК
                             In_cOsMc     : comp;   //ссылка на OsMc
                             In_cNastrOsO : comp    //ссылка на основной метод учёта
                            );
//------------------------------------------------------------------------------
#doc
  Установка текущего инвентарного объекта
#end
  procedure SetKatOs(pcKatOsNRec : comp);
//------------------------------------------------------------------------------
#doc
  Установка текущего метода учета
#end
  procedure SetNastrOs(pcNastrOsNRec : comp);
//------------------------------------------------------------------------------
#doc
  Позиционирование на методах учета (NastrOs) перед добавлением новых записей
#end
  procedure PosMethods(In_cMainNastrOs : comp;  //основной метод учёта
                       In_cNewNastrOs  : comp   //метод, для которого создаём новые записи
                      );
//------------------------------------------------------------------------------
#doc
  Добавление записи спецификации (SpOsMc) для одного метода учёта</brief><br>
  (предварительно нужно вызывать PosMethods для позиционирования
   на нужных методах учета и InitMcInOsParams для инициализации параметров
   для требуемой позиции ОС и МЦ)
#end
  procedure InsSpOsMc;
//------------------------------------------------------------------------------
#doc
  Удаление записей состава (OsMc)</brief><br>
  (перед вызовом нужно проинициализировать параметры методом InitMcInOsParams,
   указав ссылку на ИК и на удаляемую запись состава (ссылка на метод учёта не нужна))
#end
  procedure DeleteOsMc(In_bDeleteAll : boolean); //True - удалять все нижестоящие записи
                                                //False - удалять только текущую запись
//------------------------------------------------------------------------------
#doc
  Удаление ВСЕX записей состава (OsMc) по указанной ИК
#end
  procedure DeleteAllOsMc(In_cKatOs : comp);     //ссылка на карточку, у которой удаляем состав

//------------------------------------------------------------------------------
#doc
  Удаление всех записей спецификации (SpOsMc) для одного метода учёта
#end
  procedure DelAllSpOsMc(In_cNastrOs  : comp);   //метод, по которому удаляем записи

//------------------------------------------------------------------------------
#doc
  Установка значений по умолчанию при добавлении записей в таблицы OsMc и SpOsMc
#end
  procedure SetDefaults(var pBufOsMc   : TOsMcDoc;  var pBufSpOsMc : TSpOsMcDoc; In_cKatOs  : comp);

//------------------------------------------------------------------------------
#doc
  Установка значений по умолчанию при добавлении записей в таблицу OsMc
#end
  procedure SetDefaultOsMc(var pBufOsMc   : TOsMcDoc; In_cKatOs  : comp);
//------------------------------------------------------------------------------
#doc
  Установка значений по умолчанию при добавлении записей в таблицу SpOsMc
#end
  procedure SetDefaultSpOsMc(_pcOsMc, _pcNastrOS : comp; var pBufSpOsMc : TSpOsMcDoc);
//------------------------------------------------------------------------------
#doc
  Добавление спецификации ОС по МЦ (OsMc) со всей ее собственной спецификацией по методам учета (SpOsMc)
#end
  function InsertOsMc(pBufOsMc    : TOsMcDoc;
                      pBufSpOsMc  : TSpOsMcDoc;
                      bAddToUpper : boolean     //признак добавления стоимости объекта в вышестоящие объекты
                     ) : comp; //возвращает ссылку на добавленный OsMc
//------------------------------------------------------------------------------
#doc
  Добавление записи в таблицу OsMc
#end
  function AddOsMc(pBufOsMc : TOsMcDoc) : comp;
//------------------------------------------------------------------------------
#doc
  Добавление позиции спецификации (SpOsMc) для одного метода учета
#end
  Function AddSpOsMc(pBufSpOsMc  : TSpOsMcDoc;
                     bAddToUpper : boolean     //признак добавления стоимости объекта в вышестоящие объекты
                    ) : comp;
//------------------------------------------------------------------------------
#doc
  Копирование состава из одной ИК в другую
#end
  procedure CopyOsMcFromOneIkToAnother(In_cOldKatOs : comp;   //ссылка на ИК, из которой берём состав для копирования
                                       In_cNewKatOs : comp);   //ссылка на ИК, в которую копируем состав

//------------------------------------------------------------------------------
#doc
  Корректирует стоимости составляющих комплекта так, чтобы
  они в сумме равнялись стоимости самого комплекта
#end
  procedure CorrectStoim(In_cKomplOsMc : comp);  //ссылка на комплект

//------------------------------------------------------------------------------
#doc
  Добавление значений в указанный узел и все вышестоящие
#end
  // ---------------------------------------------------------------------------
  // Передаваемые параметры:
  //      _OsMcNRec   - номер записи в которой делать добавление
  //      _NastrOsNRec - метод учета по которому делается подсуммирование
  //      _Stoim, _SumIzn, _SIznM.
  // ---------------------------------------------------------------------------
  function AddValueToHigherMc( _OsMcNRec    : comp;
                               _NastrOsNRec : comp;
                               _Stoim       : Double;
                               _SumIzn      : Double;
                               _SIznM       : Double
                             ) : boolean;
//------------------------------------------------------------------------------
#doc
  Пересчет сумм сложной составляющей и ее сложных подчиненных записей.
#end
  procedure RefreshComplexValues( pcOsMcNRec : comp );
//------------------------------------------------------------------------------
#doc
  Определяет возможность использования объекта в операции</brief><br>
  (объект должен быть доступен на момент заданной даты состояния (In_dStateDate)
   и быть доступным на редактирование в периоде операции.)
#end
  function CanUseThisOsMcInOper(In_dOperDate  : date; // дата проведения операции
                                In_dStateDate : date; // дата состояния объекта
                                In_cOsMc      : comp  // ссылка на объект
                               ) : boolean;
//------------------------------------------------------------------------------
#doc
  Проверяет наличие МЦ в составе объекта.</brief><br>
  Возвращает true, если в составе объекта есть МЦ.
#end
  function ExistsRef( pcKatOsNRec : comp // ссылка на инвентарный объект
                    ) : boolean;
//------------------------------------------------------------------------------
#doc
  Инициализация для встраивания в другой интерфейс
#end
  procedure InitWindowMcInOsShow(In_bEdit : boolean); //False - нельзя редактировать, True - можно

//------------------------------------------------------------------------------
#doc
  Перерисовка состава объекта.
  // Например при изменении отображаемого инвентарного объекта или метода
  // учета при встраивании окна wiMcInOsShow.
#end
  procedure RereadMcInOsShow;
//------------------------------------------------------------------------------
#doc
  Вызов состава объекта на редактирование.
#end
  // Аналог вызова через RunInterface, но с дополнителными возможностями.
  function ShowToEdit( pcKatOsNRec : comp ) : boolean;
//------------------------------------------------------------------------------
  // События по перемещению между инвентарными карточками в порядке заданном в
  // вызвавшем интерфейсе. Используется при использовании метода ShowToEdit.
  // По этому собятию вызвавший интерфейс должен найти предыдущую или следующую
  // инвентарную карточку и вызвать метод SetKatOs (и RereadMcInOsShow) для
  // переданного в процедуру объектного интерфейса.
#doc
  Найти предыдущую инвентарную карточку и вызвать метод SetKatOs</brief><br>
  (Используется при использовании метода ShowToEdit.)
#end
  event procedure OnGoToPrevKatOs(poMcInOs : ObjMcInOs);
//------------------------------------------------------------------------------
#doc
  Найти следующую инвентарную карточку и вызвать метод SetKatOs</brief><br>
  Используется при использовании метода ShowToEdit.
#end
  event procedure OnGoToNextKatOs(poMcInOs : ObjMcInOs);
//------------------------------------------------------------------------------
#doc
  Событие по изменению метода учета
#end
  event Procedure OnChangeNastrOs;
//------------------------------------------------------------------------------
#doc
  Выбор накладной
#end
Procedure GetOsMc(_KatOs : comp; var _KatSopr : comp; var _Mc : comp);

//------------------------------------------------------------------------------
event Procedure OnReScanKatOs;


//------------------------------------------------------------------------------
// Пересчитать все сложные МЦ Для ОС
FuncTion RecalcOsMcOne (_cKatOs : comp ; _cOsMC : comp; _cNastrOs : comp ) : boolean;
FuncTion RecalcOsMc    (_cKatOs, _cOsMc : comp ) : boolean;
FuncTion RecalcOsMcAll (_cKatOs : comp ) : boolean;
FuncTion RecalcOsMcAllOneMU (_cKatOs : comp; _cNastrOs : comp ) : boolean;
FuncTion GetUpNode     (_cOsMc : comp ) : comp;

//------------------------------------------------------------------------------
// Выполнит операцию перемещения(выбытия) МЦ
procedure DoOperOsMcMove   ( _cSpMoveOs : comp );
procedure UnDoOperOsMcMove ( _cSpMoveOs : comp );
Function  CanDelOsMcAtUndoMoveOS(pcKatOS, pcMoveOs: comp; pwMode: word) : boolean;


end;

VipInterface McInOs   Implements ObjMcInOs   Licensed   (Free)
  Parameters
  (
    p_cKatOs    : comp;   // Ссылка на ИК
    p_cOsMc     : comp;   // На входе - ссылка на объект, который не надо светить,
                          // на выходе - ссылка на выбранную позицию спецификации.
    p_bEditMode : boolean;// Параметр работает только при p_cOsMc = 0...
                          //  True - по F4 редактирование, по Enter закрытие окна
                          //  False - по Enter редактирование, по Esc закрытие окна
    p_bCanEdit  : boolean // True - можно редактировать данные, False - нельзя
  )
;

#end // __MCINOS_VIH__
