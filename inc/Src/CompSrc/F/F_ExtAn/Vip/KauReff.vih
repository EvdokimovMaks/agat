//------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Галактика 7.12 - Бухгалтерский контур
// Объектный интрефейс, Внешняя аналитика (Внешние КАУ)
//------------------------------------------------------------------------------

#ifndef __KauReff_vih__
#define __KauReff_vih__

#Component "F_ExtAn"

ObjInterface ObjEditKauReff; forward;

#doc
<brief>
   Внешние КАУ привязываются к произвольной таблице, по константе coTable и полю Nrec. <br>
</brief>

   Чтобы закодировать внешние КАУ, нужно сделать следующее: <br><br>
1) добавить в исходник <br>
<pre>
     include KauReff.vih
</pre>
2) добавить переменную: <br>
<pre>
     var iKauReff : EditKauReff; // Переменная типа "Интерфеса EditKauReff"
</pre>
3) написать обработчик комманды: <br>
<pre>
     cmKauReff: iKaureff.Exec(word(coTable), Table.nRec, true);  //редактировать
     cmKauReff: iKaureff.Exec(word(coTable), Table.nRec, false); //только просматривать
</pre>
4) при удалении докумнта удалить все внешние КАУ используя вызов:<br>
<pre>
     iKaureff.DeleteAll(word(coTable), Table.nRec);
</pre>
5) в локальное меню интерфейса добавить строчку<br>
<pre>
     MyMenu_HotKeys Menu
     {
      - 'Внешние КАУ',cmKauReff,'Внешние КАУ по ...Table...',,'Alt-T',kbAltT,sci1Esc;
     }
</pre>

<br><br>

так же будут полезны функции реализованные в G_Kau.dll (см. Также ServKau.vih)<br>

<pre>
  Получить наменование каталога аналитики
   function GetAnalitikName (wKau : word) : string;

  Получить значение внешней аналитики привязанной к таблице
  по NREC-у таблицы и коду каталога аналитики:
  1) Получить NREC значения внешенй аналитики -
     function GetKauReffNrec   (TableName: string; cRec:comp; wKau:word) : comp;
  2) Получить наимнование значения внешенй аналитики -
     function GetKauReffName   (TableName: string; cRec:comp; wKau:word) : string;
  3) Получить строковый код значения внешенй аналитики -
     function GetKauReffStrKod (TableName: string; cRec:comp; wKau:word) : string;
  4) Получить абревиатуру значения внешенй аналитики -
     function GetKauReffAbbr   (TableName: string; cRec:comp; wKau:word) : string;
  5) Получить код для сортировки значения внешенй аналитики -
     function GetKauReffCode   (TableName: string; cRec:comp; wKau:word) : string;

  Получить значение всех внешних аналитик привязанных к таблице по NREC-у таблицы:
  1) наименования привязанных каталогов аналитики
     function GetKauReffArrayKatalog (TableName: string; cRec:comp) : string;
  2) наименования привязанных значений аналитики
     function GetKauReffArrayName    (TableName: string; cRec:comp) : string;
  3) строковые коды привязанных значений аналитики
     function GetKauReffArrayStrKod  (TableName: string; cRec:comp) : string;
  4) абревиатуры привязанных значений аналитики
     function GetKauReffArrayAbbr    (TableName: string; cRec:comp) : string;
  5) коды для сортировки строковый код привязанных значений аналитики
     function GetKauReffArrayCode    (TableName: string; cRec:comp) : string;
</pre>
#end
ObjInterface ObjEditKauReff;
  #doc
  запускает интерфейс редактирования/просмотра внешних КАУ.
  #end
  function Exec(coTable : word; cRec : comp; CanEdit : boolean) : word;

  #doc
  запускает выбор значения внешнего КАУ для оного определеннго каталога аналитики
  #end
  function PickReff(coTable : word; cRec : comp; wKau : word) : word;

  #doc
  запускает интерфейс редактирования внешних КАУ с операциями тиражирования.
  #end
  function ExecReplica(coTable : word; cRec : comp; TitleBlock : string) : word;

  #doc
  событие, котрое приходит при активации операции тиражирования.
  #end
  event procedure onReplicate(iReplKauReff : ObjEditKauReff);

  #doc
  метод, котрторый нужно вызвать в обработчике события для выполнения операции тиражирования.
  #end
  function ReplicaOperation(Repl_coTable : word; Repl_cRec : comp) : boolean;

  #doc
  получить значение внешней аналитики
  #end
  function GetKauReff(coTable : word; cRec : comp; wKau : word) : comp;

  #doc
  привязать значение внешеней аналитики
  #end
  function SetKauReff(coTable : word; cRec : comp; wKau : word; cKau : comp) : boolean;

  #doc
  Набор функций для удаления, перемещения и копирования одного значения аналитики привязанного к заданной записи <br>
  - копирование
  #end
  function CopyReff(coTable: word;  cRecFrom: comp;  cRecTo : comp; wKau : word) : boolean;

  #doc
  Набор функций для удаления, перемещения и копирования одного значения аналитики привязанного к заданной записи <br>
  - копирование в другую таблицу
  #end
  function CopyReffEx(coTableFrom: word;  cRecFrom: comp;  coTableTo: comp; cRecTo : comp; wKau : word) : boolean;

  #doc
  Набор функций для удаления, перемещения и копирования одного значения аналитики привязанного к заданной записи <br>
  - перенос от старой записи к новой (откуда-куда)
  #end
  function MoveReff(coTable: word; cRecFrom: comp; cRecTo: comp; wKau : word): boolean;

  #doc
  Набор функций для удаления, перемещения и копирования одного значения аналитики привязанного к заданной записи <br>
  - перенос от старой записи одной таблицы к новой другой(откуда-куда)
  #end
  function MoveReffEx(coTableFrom: word;  cRecFrom: comp;  coTableTo: comp; cRecTo : comp; wKau : word): boolean;

  #doc
  Набор функций для удаления, перемещения и копирования одного значения аналитики привязанного к заданной записи <br>
  - удаление
  #end
  function DeleteReff(coTable : word; cRec : comp; wKau : word) : boolean;

  #doc
  Набор функций для удаления, перемещения и копирования одного значения аналитики привязанного к заданной записи <br>
  - проверить наличие хотябы одной внешеней аналитики
  #end
  function ExistReff(coTable : word; cRec : comp; wKau : word) : boolean;

  #doc
  Набор функций для удаления, перемещения и копирования всех внешних КАУ привязанных к заданной записи <br>
  - копирование
  #end
  function CopyAll(coTable: word;  cRecFrom: comp;  cRecTo : comp) : boolean;

  #doc
  Набор функций для удаления, перемещения и копирования всех внешних КАУ привязанных к заданной записи <br>
  - копирование в другую таблицу
  #end
  function CopyAllEx(coTableFrom: word;  cRecFrom: comp;  coTableTo: comp; cRecTo : comp) : boolean;

  #doc
  Набор функций для удаления, перемещения и копирования всех внешних КАУ привязанных к заданной записи <br>
  - перенос от старой записи к новой (откуда-куда)
  #end
  function MoveAll(coTable: word; cRecFrom: comp; cRecTo: comp): boolean;

  #doc
  Набор функций для удаления, перемещения и копирования всех внешних КАУ привязанных к заданной записи <br>
  - перенос от старой записи одной таблицы к новой другой(откуда-куда)
  #end
  function MoveAllEx(coTableFrom: word;  cRecFrom: comp;  coTableTo: comp; cRecTo : comp): boolean;

  #doc
  Набор функций для удаления, перемещения и копирования всех внешних КАУ привязанных к заданной записи <br>
  - удаление
  #end
  function DeleteAll(coTable : word; cRec : comp) : boolean;

  #doc
  Набор функций для удаления, перемещения и копирования всех внешних КАУ привязанных к заданной записи <br>
  - проверить наличие хотябы одной внешеней аналитики
  #end
  function ExistSomeone(coTable : word; cRec : comp) : boolean;
End;

ObjInterface ObjEditKauReffEx;

  #doc
  Изменить параметры, Рескан броуза.
  #end
  function RescanKauReff(coTable : word; cRec : comp) : word;

  #doc
  Настройка параметров для использования шаблонов <br>
  USE:<br>
  0: Не использовать шаблоны <br>
  1: Использовать шаблоны без отображения функционала для установки КАУ по умолчанию <br>
     (Например при репликации)<br>
  2: Использовать шаблоны с отображением функционала для установки КАУ по умолчанию  <br>
  если Use=0 TD (Тип документа) не используется <br>
  <br>
  Пример:<br>
   iKauReff.SetShablonParam(2,1); <br>
   iKauReff.Exec(coSoprHoz,coSoprHoz.Nrec,True);<br>
  #end
  procedure SetShablonParam(Use : word; TD : word);

  #doc
  ищет КАУ по умолчанию, если такая есть то устанавливает их и возвращает true иначе false<br>
  дублируется функция из ShablonKau. (для удобства, можно использовать только KauReff)
  #end
  function AddPresetKau(coTable : word; cFlt:comp;TD : word) : boolean;

  
End;

ObjInterface ObjEditKauReffEx2;
  #doc
  Устанавливает контекст помощи для шаблонов
  #end
  procedure SetHelpContext;
End;

ObjInterface ObjEditKauReffEx3;
  #doc
  Проверяет возможность редактирования/добавления/удаления внешней КАУ
  #end
  function CheckKauReffAccess(_bMode : byte; _wType : word; _cRec : comp) : boolean;
End;

ObjInterface ObjEditKauReffEx4;
  #doc
  Проверяет возможность редактирования/добавления/удаления внешней КАУ
  с выбором режима проверки
  #end
  function CheckKauReffAccessEX(_bMode : byte; _wType : word; _cRec : comp; _hMode : boolean) : boolean;
End;

ObjInterface ObjEditKauReffEx5;
  #doc
  Удаление только тех КАУ, к которым есть доступ
  #end
  function DeleteAllEx(coTable : word; cRec : comp; wType : word) : boolean;

  #doc
  Копирование в другую таблицу с типом документа и проверкой прав доступа
  #end
  function CopyAllEx2(coTableFrom: word;  cRecFrom: comp;  coTableTo: comp; cRecTo : comp; wType : word) : boolean;
End;

VipInterface EditKauReff
  Implements ObjEditKauReff, ObjEditKauReffEx, ObjEditKauReffEx2, ObjEditKauReffEx3, ObjEditKauReffEx4,
  ObjEditKauReffEx5
  Licensed (Free)
;

#endif //__KauReff_vih__
