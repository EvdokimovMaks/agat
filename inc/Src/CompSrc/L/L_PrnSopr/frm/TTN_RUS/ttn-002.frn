!Цикл сведений о грузе
.begin
  var _ClassCode: word;

  iNpp++;

  //с грузом следуют документы
  if (pClassDocOfGoods <> comp(0))
    RunInterface('Prn_DocOfGoods', pClassDocOfGoods, wClassCodeDocOfGoods, спецификация2_нрек, sDocOfGoods, '', '', '');

  //код груза и класс груза
  _ClassCode := GetClassCode (coKatMC, 'КОД ГРУЗА');

#ifdef __PrnSoprFunMem__
  FROMKATMCMEM.pNrec := comp(спецификация2_нрек);

  if (FROMKATMCMEM.GetFirst SpSoprMemTTN = tsOk)
    if (FROMKATMCMEM.GetFirst KatMc = tsOk)
    {
      CodeGoods  := GetSegName(_ClassCode, FROMKATMCMEM.KatMc.NRec);
      ClassGoods := sGetAttr(coKatMC, FROMKATMCMEM.KatMc.NRec, 'КЛАСС ГРУЗА');
    }

  // вывод грузовых мест в 1-Т со сведениями о грузе
  var tKolGrm2: double;
  tKolGrm2 := FROMKATMCMEM.SpSoprMemTTN.KolGrM;

  //---------------------------------------------------------------------------
  //Количесто грузовых мест
  EdGrM2 := KolGrM2 := '';

  if (FROMKATMCMEM.GetFirst KatEdGr where (( FROMKATMCMEM.SpSoprMemTTN.cOtpEdGrM == KatEdGr.NRec )) = tsOk)
  {
    EdGrM2  := if(wGetTune('Doc.SD.PrnNakl.BrAbbrEd') = 1, FROMKATMCMEM.KatEdGr.Name, FROMKATMCMEM.KatEdGr.ABBR);
    KolGrM2 := DoubleToStr(FROMKATMCMEM.SpSoprMemTTN.KolGrM, RoundGrm);
  }
  else
    if (FROMKATMCMEM.GetFirst KatOtpEd = tsOk)
    {
      EdGrM2  := if(wGetTune('Doc.SD.PrnNakl.BrAbbrEd') = 1, FROMKATMCMEM.KatOtpEd.Name, FROMKATMCMEM.KatOtpEd.ABBR);
      KolGrM2 := DoubleToStr(FROMKATMCMEM.SpSoprMemTTN.KolFact, RoundGrm);
    }

  if (bAutoGrM)
  {
    KolGrM2 := DoubleToStr(FROMKATMCMEM.SpSoprMemTTN.KolGrM, RoundGrm);

    // если МЦ - тара - выводить прочерки в графах 10-12 ТТН-1, ТН-2; 6-8 ТОРГ-12; 8-9 1-Т
    if (tKolGrm2 = 0)
      if (FROMKATMCMEM.SpSoprMemTTN.cOwner <> comp(0))
      {
        EdGrM2 := KolGrM2 := '-';
        EXIT;
      }
  }
  else
    KolGrM2 := DoubleToStr(if (tKolGrm2 <> 0, tKolGrm2, КолФ2), RoundGrm);

  if (FROMKATMCMEM.GetFirst KatOtpEd = tsOk)
  {
    var _ClassCode : word;
    var sMethod    : string;

    _ClassCode := GetClassCode(coKatOtpEd, 'СПОСОБ ПЕРЕВОЗКИ Н/У ГРУЗА');
    sMethod    := GetSegName  (_ClassCode, FROMKATMCMEM.KatOtpEd.NRec);

    if (sMethod <> '')
    {
      EdGrM2  := sGetTune('Doc.SD.AbbrField.Gruz');
      KolGrM2 := '-';
    }
  }
#else
  FROMKATMC.pNrec := comp(спецификация2_нрек);

  if (FROMKATMC.GetFirst SpSopr = tsOk)
    if (FROMKATMC.GetFirst KatMc = tsOk)
    {
      CodeGoods  := GetSegName(_ClassCode, FROMKATMC.KatMc.NRec);
      ClassGoods := sGetAttr(coKatMC, FROMKATMC.KatMc.NRec, 'КЛАСС ГРУЗА');
    }

  // вывод грузовых мест в 1-Т со сведениями о грузе
  var tKolGrm2: double;
  tKolGrm2 := FROMKATMC.SpSopr.KolGrM;

  //---------------------------------------------------------------------------
  //Количесто грузовых мест
  EdGrM2 := KolGrM2 := '';

  if (FROMKATMC.GetFirst KatEdGr where (( FROMKATMC.SpSopr.cOtpEdGrM == KatEdGr.NRec )) = tsOk)
  {
    EdGrM2  := if(wGetTune('Doc.SD.PrnNakl.BrAbbrEd') = 1, FROMKATMCMEM.KatEdGr.Name, FROMKATMCMEM.KatEdGr.ABBR);
    KolGrM2 := DoubleToStr(FROMKATMC.SpSopr.KolGrM, RoundGrm);
  }
  else
    if (FROMKATMC.GetFirst KatOtpEd = tsOk)
    {
      EdGrM2  := if(wGetTune('Doc.SD.PrnNakl.BrAbbrEd') = 1, FROMKATMCMEM.KatOtpEd.Name, FROMKATMCMEM.KatOtpEd.ABBR);
      KolGrM2 := DoubleToStr(FROMKATMC.SpSopr.KolFact, RoundGrm);
    }

  if (bAutoGrM)
  {
    KolGrM2 := DoubleToStr(FROMKATMC.SpSopr.KolGrM, RoundGrm);

    // если МЦ - тара - выводить прочерки в графах 10-12 ТТН-1, ТН-2; 6-8 ТОРГ-12; 8-9 1-Т
    if (tKolGrm2 = 0)
      if (FROMKATMC.SpSopr.cOwner <> comp(0))
      {
        EdGrM2 := KolGrM2 := '-';
        EXIT;
      }
  }
  else
    KolGrM2 := DoubleToStr(if (tKolGrm2 <> 0, tKolGrm2, КолФ2), RoundGrm);

  if (FROMKATMC.GetFirst KatOtpEd = tsOk)
  {
    var _ClassCode : word;
    var sMethod    : string;

    _ClassCode := GetClassCode(coKatOtpEd, 'СПОСОБ ПЕРЕВОЗКИ Н/У ГРУЗА');
    sMethod    := GetSegName  (_ClassCode, FROMKATMC.KatOtpEd.NRec);

    if (sMethod <> '')
    {
      EdGrM2  := sGetTune('Doc.SD.AbbrField.Gruz');
      KolGrM2 := '-';
    }
  }
#end
end.
