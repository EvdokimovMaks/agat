
//##############################################################################
//################    Функции реализующих интерфейсов    #######################
//##############################################################################

/*
  Этот VIH унифицирован и подключается во все вновь создаваемые интерфейсы,
  которые будут реализовывать его функции.


                               ТИПЫ УРОВНЕЙ
               (группировки в вариантах представлений каталогов)

  В полях VPrSp.TipLevel = VPrKat.TipLevel сохраняются типы уровней иерархии
  по вариантам представлений каталогов. Для ускорения процессов поиска и обновлений
  записей в VPrKat, типы являются уникальными для всех вариантов представлений.
  Поэтому если вы будете вводить новые типы уровней (группировок) в свои варианты
  представлений - не перекройте чужие и дополните инжеследующий список:

    0                              :  сами записи каталогов (VPr.KodTable = VPrKat.KodTable)
    cgVPr_TipLevelKAU_User = 1000  :  Аналитика (пользовательская)
    1                              :  признак "Архивные/Рабочие" (KatMC.isArch)
    2                              :  Группа МЦ (GroupMC)
    3                              :  Шаблон МЦ (MaskMC)

*/

#ifndef __oVPr_vih__
#define __oVPr_vih__

#ifdef ComponentVersion
#component "L_VPr"
#end

//таблица в памяти с перенумерованными иерархичными значениями каталогов
Table STRUCT m_VPrIerNumKat ""
(
  NRec          : comp        "",
  KodLevel      : word        "", //тип уровня (копия VPrSp.TipLevel)
  KodTip        : word        "", //подтип уровня (например SpKAU.KodGrKau или 0)
  Npp           : Longint     "", //номер по порядку
  cRec          : comp        "", //ссылка на значение (NRec)
  cNode         : comp        "", //копия cNode
  Name          : string[255] ""  //копия Name
)
With Index
(
 m_VPrIerNumKat01 = NRec(Unique,AutoInc),
 m_VPrIerNumKat02 = KodLevel + KodTip + cRec
);

const
 cgVPr_TipLevelKAU_User  = 1000;      //тип уровня Аналитики (пользовательская)
end;

#ifdef ComponentVersionInDict
#include iVPrKat.vih
#include iVPrSp.vih
#end

#ifndef __TYPE_TVPRKAT__
#define __TYPE_TVPRKAT__
#doc
структуры записи таблицы VPrKat
#end
#GalPublic type TVPrKat = record as table VPrKat;
#end

#ifndef __TYPE_TVPRSP__
#define __TYPE_TVPRSP__
#doc
структуры записи таблицы VPrSp
#end
#GalPublic type TVPrSp = record as table VPrSp;
#end

#doc
Объектный интерфейс описывает сервисные методы для работы с группировки в вариантах представлений каталогов
#end
ObjInterface ObjVPrKatObj_Real;

//******************************************************************************
#doc
Возвращает имя каталога уровня
#end
function GetLevelName (TipLevel_ : word) : string;
//******************************************************************************
#doc
Возвращает кол-во записей каталога
#end
function GetCountKat : LongInt;
//******************************************************************************
#doc
Возвращает кол-во уровней группировки в таблице каталога
#end
function GetLevelCount : Longint;
//******************************************************************************
#doc
Возвращает Тип уровня и его текстовое представление по его порядковому номеру (Num_)
#end
function GetLevelList (Num_  : Longint;
                   var Tip_  : Word;
                   var sTip_ : string
                      )      : boolean;
//******************************************************************************
#doc
Возвращает кол-во значений поля VPrSp.SvLevel для уровня с типом (TipLevel_) таблицы
#end
function GetLevelSvCount (TipLevel_ : Word) : Longint;
//******************************************************************************
#doc
Возвращает значение поля VPrSp.SvLevel (TipSv_), его текстовое назначение (sTipSv_)
по порядковому номеру значения (Num_) для уровня типа TipLevel_
#end
function GetLevelSv (TipLevel_ : Word; Num_ : Longint; var TipSv_ : Word; var sTipSv_ : string) : boolean;
//******************************************************************************
#doc
Возвращает признак видимости полей VPrSp.sNullZn (VPrSp.sNullKAU) по свойству (TipSv_) уровня (TipLevel_)
#end
function GetLevelSvNullZn (TipLevel_ : Word; TipSv_ : Word) : boolean;
//******************************************************************************
#doc
Создает сортированную копию иерархичного каталога для таблицы в памяти (m_VPrIerNumKat) при ее отсутствии
тип сообщений: 0-нет/1-сообщения об ошибках
#end
Function PutInIerSpNum (TipMess, TipLevel_, KodTip_ : word; bModifOne : boolean; _NRec: comp) : boolean;
//******************************************************************************
#doc
Вернуть по записи (_cRec) уровня (TipLevel_) актуальные значения полей для VPrKat
тип сообщений: 0-нет/1-сообщения об ошибках
Если _cRec=0, то использовать текущее позиционирование
#end
function GetRecFieldsOnLevel (TipLevel_ : Word; _cRec : comp; TipMess : word;
                              var isFindLevel : boolean; var bufVPrKat : TVPrKat) : Boolean;
//******************************************************************************
#doc
Перемещение по записям каталога
TipMove_: 'GetFirst'/'GetNext'
тип сообщений: 0-нет/1-сообщения об ошибках
#end
function MoveKat (TipMove_ : string; TipMess : word) : Boolean;
//******************************************************************************
#doc
Вернуть по текущей записи каталога для уровня (VPrSp) актуальные значения полей для VPrKat
тип сообщений: 0-нет/1-сообщения об ошибках
isIerLevel_ : показатель иерархичности уровня
SetLevel    : показатель необходимости вставки записи в вариант представления
#end
function SetLevel (bufVPrSp  : TVPrSp; TipMess : word; var isIerLevel_ : boolean;
                   var bufVPrKat : TVPrKat; tiplevel : word) : Boolean;




end;
#end //__oVPr_vih__
