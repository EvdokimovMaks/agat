//------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Галактика 5.8х - УКС - Управление капитальным строительством
// Функции работы с планами капитального строительства
//------------------------------------------------------------------------------

#component "L_UksPlans"

#include TValue.inc

#doc
Атрибуты копии плана
#end
Type TPlanAttr = record
    wPlanMode   : word;
    cPlanVar    : comp;
    cPresent    : comp;
    cUksAxis    : comp;
    cPlanTree   : comp;
    cSpPlan     : comp;
    cUksArticle : comp;
    cFpPeriod   : comp;
    wEditTabb   : word;
    wObjTabb1   : word;
    wObjTabb2   : word;
    iParamReg   : integer;
    iParamTip   : integer;
    iParamPrc   : integer;
    iParamNal   : integer;
    wParamJob   : word;
    wSpecCols   : word;
    cJobAxis    : comp;
    cPlanJob    : comp;
    wSortJob    : word;
    bNormName   : boolean;
    iReserv     : integer;
    iComplTip   : integer;
    iComplPrc   : integer;
    bPerOut     : boolean;
  End;

#doc
Содержит методы для работы с планами строительства.
#end
ObjInterface OUksFunc;

!---------------------------------------------------------------------------
  #doc
  Формирование строки, содержащей имя пользователя и текущие дату/время.
  #end
  Function GetCurDateTimeUser : string;

!---------------------------------------------------------------------------
  #doc
  Доступность корпоративных свойств модуля капстроительства.
  #end
  Function CorpoProp : boolean;

!---------------------------------------------------------------------------
! МОДИФИКАЦИЯ ПЛАНА
!---------------------------------------------------------------------------

  #doc
  Создание плана с заданными атрибутами.
  #end
  Function InsertUksPlan(_cStat, _cCO, _cPeriod, _cTune: comp; var  _cVar, acPlanVar: comp): comp;

  #doc
  Удаление заданного плана.
  #end
  Function DeleteUksPlan(acNrec: comp): boolean;

  #doc
  Копирование заданного плана.
  #end
  Function CopyPlan(acVar1, acVar2: comp; aiMode: integer): boolean;

  #doc
  Копирование части заданного плана.
  #end
  Function CopyPlanPart(
        acVar1    : comp;    // источник: ссылка на PlanVar (копию варианта плана)
        acVar2    : comp;    // приемник: ссылка на PlanVar (копию варианта плана)
                             // Возможные значения нижеследующих аргументов см. UksValue.inc
        aiMode    : integer; // Режим копирования значений показателей плана
        aiPlanTo  : integer; // В какой регистр учета копируем данные из регистра "План"
        aiPlanPrc : integer; // Данные плана в каких ценах
        aiFactTo  : integer; // В какой регистр учета копируем данные из регистра "Факт"
        aiFactPrc : integer; // Данные факта в каких ценах
        aiVersion : integer  // Версия хранилища
                              ) : boolean;

!---------------------------------------------------------------------------
! МОДИФИКАЦИЯ ВАРИАНТА ПЛАНА
!---------------------------------------------------------------------------
  #doc
  Создание варианта плана с заданными атрибутами.
  #end
  Function InsertVariant(_cPlan, _cVar: comp): comp;

  #doc
  Создание варианта плана с заданным буфером записи.
  #end
  Function InsertPlanVar(apPlanVar: type$PlanVar): comp;

  #doc
  Создание варианта плана с проверкой наличия плана.
  #end
  Function MakePlanVar(acCO, acPer, acVar: comp; var acPlanVar: comp): boolean;

  #doc
  Модификация варианта плана.
  #end
  Function UpdatePlanVar(apPlanVar: type$PlanVar; acHozOper: comp): boolean;

  #doc
  Удаление спецификации заданной копии варианта плана.
  #end
  Function ClearPlanVar(acPlanVar: comp): boolean;

  #doc
  Удаление заданной копии варианта плана.
  #end
  Function DeletePlanVar(acNrec : comp) : boolean;

  #doc
  Сделать копию варианта плана активной.
  #end
  Procedure SetActiveVar(acVariant: comp);

  #doc
  Получить активную вкладку, текущее значение режима цен, регистра учета и режима налогов для заданного варианта плана.
  #end
  Function GetPlanVarParam(acPlanVar: comp; var aiSheet, aiPrice, aiRegister: integer): boolean;

  #doc
  Установить активную вкладку, текущее значение режима цен, регистра учета и
  режима налогов для заданного варианта плана. При значении параметра cgKeep - не меняем.
  #end
  Function SetPlanVarParam(acPlanVar: comp; aiSheet, aiPrice, aiRegister: integer; acRec: comp): boolean;

  #doc
  Получить заданный атрибут плана.
  #end
  Procedure GetPlanAttr(var arPA: TPlanAttr);

  #doc
  Установить заданный атрибут плана.
  #end
  Procedure SetPlanAttr(arPA: TPlanAttr);

  #doc
  Пересчет показателей из одного режима цен в другой для заданных копии и регистра учета плана.
  #end
  Function RecalcCurrentPrice(acPlanVar: comp; aiRegister: integer; isPriceBasic: boolean): boolean;

  #doc
  Коррекция значений показателей плана.
  #end
  Function CorrectPlan(acPlanVar, acPresent, acUksAxis: comp; arValue: TValue): boolean;

  #doc
  Обновление суммы капвложений в SoprHoz.
  #end
  Function UpdateSoprHozSum(acPlanVar: comp): boolean;

!---------------------------------------------------------------------------
! МОДИФИКАЦИЯ ОБЪЕКТА В ПЛАНЕ
!---------------------------------------------------------------------------
  #doc
  Вставка в заданную копию плана новой позиции спецификации.
  #end
  Function InsertSpPlan(acPlanVar  : comp;    // Вариант плана
                        acPresent  : comp;    // Текущее представление плана
                        aiRegister : integer; // Текущий регистр учета
                        acNode     : comp;    // Ссылка на вышестоящую спецификацию
                        awTable    : word;    // Тип элемента спецификации плана (объект/заявка)
                        acObject   : comp;    // Ссылка на вставляемый в план объект (заявку)
                        awKau      : word;    // Код КАУ
                    var acSpPlan   : comp): comp;

  #doc
  Изменение ссылки на объект/заявку/аналитику для заданной позиции спецификации плана.
  #end
  Function UpdateSpPlan(acSpPlan: comp;    // Ссылка на элемент спецификации плана
                        acObject: comp     // Ссылка на новый объект (заявку)
                                       ): boolean;
  #doc
  Удаление позиции спецификации плана.
  #end
  Function DeleteSpPlan(acNrec: comp): boolean;

  #doc
  Смена наименования позиции спецификации плана типа "Прочее".
  #end
  Function RenameSpPlan(acNrec: comp; asName: string): boolean;

  #doc
  Пересчет значения заданного вычисляемого показателя "Прочие капвложения".
  #end
  Function RecalcOther(arValue: TValue): boolean;

  #doc
  Возвращает значение заданного показателя активной копии плана.
  #end
  Function GetActValue(acCO, acPeriod, acObj: comp; awKau: word; acKau: comp;
                       aiRegister, aiPrice, aiArticle: integer): double;

  #doc
  Проверка возможности удаления позиции из плана работ по объекту.</brief>
  В случае невозможности удаления возвращает false и описание причины в параметре denyReason
  #end
  function CanDeletePlanJob(
    acPlanJob: comp;       //#docl ссылка на PlanJob (PlanJob.nRec)
    out denyReason: string //#docl описание причины, почему нельзя удалять
  ): boolean;

  #doc
  Удаление позиции из плана работ по объекту.
  #end
  Function DeletePlanJob(acPlanJob: comp): boolean;

  #doc
  Является ли позиция плана ресурсом
  #end
  Function isResource(awPlanJobTipPos: word): boolean;

  #doc
  Может ли быть данная позиция планируемой
  #end
  Function IsPlanedPosition(_planJobTipPos, _planJobTipRes: word): boolean;

  #doc
  Является ли позиция сметным разделом
  #end
  Function isPart(awPlanJobTipPos: word): boolean;

  #doc
  Является ли позиция работой (задачей)
  #end
  Function isTask(awPlanJobTipPos: word): boolean;

  #doc
  Возвращает наименование указанного типа ресурса.</brief>
  (NormResource.ResType, PickSmeta.TipRes, SpDocSmeta.TipRes, PlanJob.TipRes)
  #end
  Function GetNameOfResType(_resType: word): string;
End;

VipInterface IUksFunc
  implements OUksFunc
  licensed(FREE);
