//------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Галактика 9.1
// Сервисные функции механизмов назначения исполнителей
//------------------------------------------------------------------------------
#ifndef _ExecutorsFuncs_vih_
#define _ExecutorsFuncs_vih_

#component "L_UksPlans"

#include UksSchedule.vih

objinterface IExecutorsFuncs;

  #doc
  Возвращает дату начала выполнения работы исполнителем.</brief>
  Рассчитывается на основании смещения от даты начала использования определяющего ресурса (_cTimeShiftFrom)
  Для различных исполнителей определяющим могут являются ресурсы, отличные от ресурса, для которого назначены
  исполнители. Так, для назначений ресурсов cgRes_OZP, cgRes_EM определяющим является сам ресурс - владелец
  назначения. А вот для назначений ресурса cgRes_ZPM определяющим выступает ресурс cgRes_EM, которым управляет
  машинист, а не сам cgRes_ZPM. Чтобы унифицировать механизм определения даты начала и окончания выполнения
  работ исполнителем и было введено поле AssignRes.cTimeShiftFrom
  #end
  public function GetExecutorDateBegin(
    _cTimeShiftFrom: comp; //#docl Ссылка на определяющий ресурс, относительно которого определяется время начала выполнения работы исполнителем (AssignRes.cTimeShiftFrom).
    _fTimeShift: double //#docl Смещение от даты начала использования определяющего ресурса (AssignRes.fTimeShift)
  ): date;

  #doc
  Возвращает дату окончания выполнения работы исполнителем.</brief>
  Рассчитывается на основании смещения от даты начала использования ресурса и продолжительности работы.
  (см. также описание GetExecutorDateBegin)
  #end
  public function GetExecutorDateEnd(
    _cTimeShiftFrom: comp; // ссылка на определяющий ресурс, относительно которого определяется время начала выполнения работы исполнителем (поле AssignRes.cTimeShiftFrom).
    _fTimeShift: double; // смещение от даты начала использования определяющего ресурса
    _fDuration: double // Продолжительность выполнения работы исполнителем (AssignRes.fDuration)
  ): date;

  #doc
  Определяет самую раннюю дату начала и самую позднюю дату окончания выполнения
  работы исполнителями указанного ресурса.</brief>
  Возвращает false, если хотя бы одну из дат определить не удалось
  #end
  public function CalcExecutorsBoundaryDates(
    _planJob: comp;
    out _earlierDBeg: date;
    out _latestDEnd: date
  ): boolean;

  #doc
  Возвращает true, если для указанной записи AssignRes задан исполнитель.
  #end
  public function ExecutorAssignedFor(_assignRes: type$AssignRes): boolean;

  #doc
  Проверяет, имеются ли для указанного назначения зависимые от него назначения в других ресурсах.</brief>
  #end
  public function HasDependendAssignments(
    _assignRes: comp;           //#docl ссылка на проверяемое назначение (AssignRes.nRec)
    out _dependenceInfo: string //#docl выходной параметр - информация о найденной зависимости
  ): boolean;

  #doc
  Можно ли для указанного ресурса назначать исполнителя
  #end
  public function CanAssignExecutor(_planJobTipRes: word): boolean;

  #doc
  Возвращает true, если для ресурса назначены исполнители
  #end
  public function HasAssignedExecutors(_planJob: comp): boolean;

  #doc
  Возвращает суммарное значение трудоемкости по всем назначенным исполнителям
  #end
  public function TotalExecutorsLabor(_planJob: comp): double;

  #doc
  Возвращает имя указанного исполнителя
  #end
  public function GetExecutorName(_executor: comp; _executorType: word): string;

  #doc
  #end
  // Добавляет исполнителей как ресурс задачи
  public procedure AddExecutorsAsTaskRes(
    _task: comp;
    _planJob: comp;
    _resType: word;
    _unitAbbr: string;
    _shedule: IUksSchedule
  );
end;

vipinterface ExecutorsFuncs implements IExecutorsFuncs licensed(free);

#endif
