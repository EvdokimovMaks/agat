//------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Галактика 8.1 - Управление капитальными вложениями и строительством
// Расчет сумм для ввода в эксплуатацию
//------------------------------------------------------------------------------

#ifndef _GetSummaSopr_vih_
#define _GetSummaSopr_vih_

#component "L_UKS"

ObjInterface IGetSummaSopr;
  
  #doc
  Выполнить все интерактивные настройки, требующие участия пользователя.</brief>
  Достаточно выполнить один раз после загрузки интерфейса.
  #end
  Function AskUserToSetup: boolean; //#docl Возвращает false, если пользователь отказался от настройки.

  #doc
  Настройка интерфейса на работу с указанным объектом строительства и инвентарным объектом.</brief>
  Метод должен быть вызван перед вызовом любого другого (за исключением AskUserToSetup) метода интерфейса.
  #end
  Procedure SetObjParam(
    _cKatStroy:  comp; //#docl Ссылка на объект строительства.
    _cSpVVStroy: comp  //#docl Ссылка на инвентарный объект.
  );

  #doc
  Формирует перечень позиций документов для расчета стоимости инвентарного объекта.</brief>
  <p>Внимание! Требует предварительной настройки интерфейса вызовом SetObjParam !<br>
  <p>Списки позиций, составляющих стоимость инвентарного объекта должны находится в именованных маркерах
  'SpSoprUKS', 'SpBazeZatr', 'MarkerAccompExpenses'.
  #end
  Procedure MakeVVSoprFromSelected;

  #doc
  Проводит расчет стоимости текущего инвентарного объекта.</brief>
  <p>Внимание! Требует предварительной настройки интерфейса вызовом SetObjParam !<br>
  <p>Возвращает стоимость инвентарного объекта и стоимость для налогового учета.
  #end
  Procedure CalculateCosts(
    out _totalCost:       double; //#docl Рассчитанная стоимость инвентарного объекта.
    out _totalCostTaxAcc: double  //#docl Рассчитанная стоимость для налогового учета (tax accounting).
  );

end;

VipInterface GetSummaSopr
  implements IGetSummaSopr
  licensed (FREE)
  Parameters(pKatStroy : comp; pSpVVStroy : comp; Stoimost : double; StoimostNU : double);

#end
