//------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Галактика 7.12 - Управление капитальными вложениями и строительством
// Функции создания/удаления связи объекта с документом и другие функции общего назначения модуля УКВиС
//------------------------------------------------------------------------------

// для объявления переменной необходимо использовать #include UKSfuns.var (для
// обеспечения межверсионной устойчивости), в котором описана переменная oUKSfuns
// с типом текущей последней версии объекта
//
// пример использования:
//      if oUKSfuns.JoinAkt( ...

//******************************************************************************
#ifNdef __UKSfuns_vih__
#define __UKSfuns_vih__

//******************************************************************************

#component "L_UKS"

#doc
Функции создания/удаления связи объекта с документом и другие функции общего назначения модуля УКВиС
#end
ObjInterface ObjUKSfuns;

  //------------------------------------------------------------------------------
  #doc
  Привязать/отвязать ДО
  #end
  Procedure JoinDO(cBaseDoc: comp);

  #doc
  Привязать/отвязать ПКП
  #end
  Procedure JoinCalPlan(cCalPlan: comp; wAdd: word; wDel: word);

  #doc
  Привязать/отвязать договор
  #end
  Procedure JoinDogovor(cDogovor: comp; wAdd: word; wStatus: word; wDel: word);

  #doc
  Привязать/отвязать платеж
  #end
  Procedure JoinPl(cPl: comp);

  #doc
  Привязать/отвязать накладную
  #end
  Procedure JoinNakl(cKatSopr: comp);

  #doc
  Привязать/отвязать акт
  #end
  Procedure JoinAkt(cKatSopr: comp; wVidSopr: word);

  #doc
  Привязать акт
  #end
  Procedure AddAktOnly(cKatSopr: comp; wVidSopr: word);

  #doc
  Привязать/отвязать ордер
  #end
  Procedure JoinSO(cSklOrder: comp);

  #doc
  Привязать/отвязать счет-фактуру
  #end
  Procedure JoinSchF(cSchFact: comp);

  #doc
  Отвязать/привязать счет-фактуру
  #end
  Procedure RecalcSchF(cSchFact: comp);

  #doc
  Привязать/отвязать акт
  #end
  Procedure JoinAkt_Forced(cKatSopr: comp; wVidSopr: word);

  #doc
  <brief>Возвращает тип переданного объекта УКС (поле KatStroy.LevelObj).</brief>
  Значения типов объектов перечислены заданы константами cgObj_* файла KatStroy.inc.
  #end
  function GetKindOfObj(
    _cObj: comp; // #docl ссылка на объект в таблице KatStroy (nRec записи)
    out _kindOfObj: word // #docl тип найденного объекта УКС
  ): longint; // #docl возвращает tsOk, если тип объекта определен, в противном случае значение _kindOfObj не определено.

  #doc
  Содержит ли стройка указанный объект строительства/объект сбора затрат?</brief>
  В метод вместо стройки можно передать ссылку и на объект строительства. Тогда при совпадении ссылок функция
  вернет true. Также в качестве объекта может выступать сама стройка. В этом случае функция также вернет true.
  #end
  function HasBuildingAreaTheObj(
    _buildingArea: comp; // #docl ссылка на стройку  (объект, у которого KatStroy.LevelObj = cgObj_Stroyka) или на объект строительства
    _cObj: comp          // #docl ссылка на объект строительства/стройку/объект сбора затрат.
  ): boolean;

  #doc
  Проверка на наличие спецификации ДО со ссылкой на объект НЗС
  #end
  function HasBuildingAreaTheSpStepMC(
    var _bSpStep: type$SpStep // #docl buffer SpStep
  ): boolean;

  #doc
  Проверка на наличие спецификации договора/соглашения/ПКП со ссылкой на объект НЗС
  #end
  function HasBuildingAreaTheSpDocsMC(
    _cDogovor: comp;
var _bSpDocs : type$SpDocs // #docl buffer SpDocs
  ): boolean;

//------------------------------------------------------------------------------

end;

//******************************************************************************

VipInterface UKSfuns
  implements ObjUKSfuns
  licensed(free);

#end // __UKSfuns_vih__
//******************************************************************************
