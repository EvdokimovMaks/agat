#ifndef __BoxFuncsFunctions_vih__
#define __BoxFuncsFunctions_vih__

#ifdef ComponentVersion
#component "L_Box"
#end

#DOC
Объектный интерфейс описывает методы для работы с ячейками
#END
objinterface iBoxFuncsFunctions;

#DOC
Функция проверки использования ячеек
#END
  function UseBox: boolean;

#DOC
подсчет распределенного или списанного количества по позиции ордера
#END
  function CountRasprKol(cSpOrder_: comp): double;

#DOC
расчет свободного объема по ячейке
#END
  function CountFreeVol(cBox_: comp): double;

#DOC
подсчет распределенного объема в ячейке:
#END
  function CountRasprVolumeInBox(cBox_: comp): double;

#DOC
подсчет объема(количества) МЦ, распределяемого на склад в спецификации накладной
#END
  function CountOrderedVolKol(_cSpSopr : comp; _cPodr : comp;
                              VolNeed : boolean) : double;

#DOC
проверка на безразмерную ячейку (только по объему)
#END
  function IsBoxUnsizeable(_cBox : comp) : boolean;

#DOC
определяет, можно ли разместить n МЦ в ячейку хранения
#END
  function BoxCanGetMC(_cBox : comp; _cMC : comp) : double;

#DOC
возвращает количество и объем по SaldoBox
#END
  procedure CountSaldoBoxVolumeKol(cSaldoBox_: comp;
                   var vol_: double;  var kol_: double );

#DOC
корректно удаляет SaldoBox
#END
  function DelSaldoBox( cSaldoB_: comp ): boolean;

#DOC
распределяет в ячейке нужное количество (для списания kol_ д.б. < 0) возвращает количество распределенное в ячейке
#END
  function PutInBox( cSopr_, cSpBox_, cPodr_, cBox_:comp;
                     dOpr_:date;
                     cMC_, cParty_:comp;
                     volume1_, kol_:double): double;

#DOC
распределяет ордер
#END
  function RaspredSklOrder( cSklOrder_: comp; cSpOrder_: comp;
                                  dOpr_:date;
                                  needProtocol: boolean; needAsk: boolean ): boolean;

#DOC
списывает ордер
#END
  function SpisSklOrder( cSklOrder_: comp; cSpOrder_: comp;
                              dOpr_:date;
                              needProtocol: boolean; needAsk: boolean ): boolean;

#DOC
пакетное распределение
#END
  function RaspredSpisSpOrders( dOpr_:date;
                        needProtocol: boolean; needAsk: boolean ): boolean;

#DOC
пакетное распределение ордеров (not used)
#END
  function RaspredSpisSklOrders( needProtocol: boolean ): boolean;

#DOC
удаляет SpBox и возвращает delkol_. nkol_ - сколько нужно удалить (0 - все кол-во)
#END
  function DeleteSpBox(cSpBox_: comp; nkol_: double; var delkol_: double): boolean;

#DOC
корректно удаляет все операции по SpOrder
#END
  function UndoSpOrderBoxOperations( cSpOrder_: comp; kol_: double;
           needVisual: boolean; needAsk: boolean; onlyCheck: boolean): boolean;

#DOC
если нужно удалить с протоколом (для ордеров)
#END
  function UndoSpOrderBoxOperationsWithProt( cSpOrder_: comp; kol_: double): boolean;

#DOC
корректно удаляет все операции по SklOrder
#END
  function UndoSklOrderBoxOperations( cSklOrder_: comp;
                  onlyCheck: boolean ): boolean;

#DOC
возвращает из SpOrder'a нужные параметры
#END
  function GetSpOrderFlds(cSpOrder_: comp; var cPodr_: comp;var cMC_: comp;
                           var cParty_: comp; var kol_: double): boolean;

#DOC
Протокол операций по ячейкам
#END
  procedure ShowProt;

#DOC
аварийное завершение протокола операций
#END
  procedure AbortProt;
end;

vipinterface BoxFuncs implements iBoxFuncsFunctions licensed(FREE);
#end //__BoxFuncsFunctions_vih__
