//------------------------------------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Галактика 9.1
// Работа с ЭЦП в документах
//------------------------------------------------------------------------------------------------------------

#ifNdef __SignEDO_VIH__
#define __SignEDO_VIH__

#include SignEDO.tbl

#ifdef ComponentVersion
#component "L_Common"
#end

#include CAdESCOM.vih

const
  csAttrSignKatSopr: String = 'ЭЦП документа';
end;

#doc
Работа с ЭЦП в документах
#end

objinterface oSignEDO;

  #doc
  Инициализация объектов для работы с ЭЦП
  #end
  Function Init: boolean;

  #doc
  Выбор сертификата
  #end
  Function SetCertificate: boolean;

  #doc
  Подпись ЭЦП xml-файла
  #end
  Function SignXMLCreate(fileName: string; isVerify: boolean = false): boolean;

  #doc
  Проверка ЭЦП xml-файла
  #end
  Function VerifyXML(fileName: string; isVerify: boolean = false): boolean;

  #doc
  Подпись ЭЦП счета-фактуры
  #end
  Function SignSchFact(cSF: comp): boolean;

  #doc
  Проверка ЭЦП счета-фактуры
  #end
  Function VerifySchFact(cSF: comp): boolean;

  #doc
  Подпись ЭЦП сопроводительного документа
  #end
  Function SignKatSopr(ptrMarker: TPtr): boolean;

  #doc
  Отвязка ЭЦП от сопроводительного документа
  #end
  Function ClearSignKatSopr(ptrMarker: TPtr): boolean;

  #doc
  Проверка ЭЦП сопроводительного документа
  #end
  Function VerifyKatSopr(cKS: comp): boolean;

  #doc
  Существует ли ЭЦП у сопроводительного документа
  #end
  Function IsExistsSignKS(cKS: comp): boolean;

  #doc
  Загрузить сведения о ЭЦП документа
  #end
  Procedure FillSignsEDO(cKS: comp);

end;

#doc
Расширение №01 интерфейса SignEDO
#end
ObjInterface oSignEDO01;

  #doc
    Просмотр наличия подписи любого документа
  #end
  //-------------------------
  Function GetDoc(pDoc: comp): boolean;
  Function IsSetCertificate: boolean;

  Function isCanSignDoc(_CoSing: boolean): boolean;
  Function Init_Chk: boolean;
  Procedure ResetInit;

  #doc
    Подписание любого документа
  #end
  Function SignXMLCreateTable(fileName: string; isVerify: boolean = false; _wTable:word=0; _cRec:comp=0): boolean;
  Function SignCreate2TmpFile(var fileName: string; isCoSign: boolean = false; isVerify: boolean = false; _wTable:word=0; _Nrec:comp=0): boolean;
  Function InitRepError:boolean;
  Procedure ShowRepError(_boShow:boolean=true);
  Procedure WriteRepError(_s:string);
  Procedure Init_Log;
  Procedure Show_Log(_boShow:boolean=true);
  Procedure Write_Log(_s:string);
  #doc
    проверка платежного поручения
  #end
  Function VerifyPlPor(_pPlPor:comp):boolean;
  #doc
    проверка любого документа
  #end
  Function VerifyAnyDoc(_Table :word; _pNrec : comp):boolean;
  Function GetLastError:string;

end; //ObjInterface ObjAddressFunc12;

#doc
Расширение №02 интерфейса SignEDO
#end
ObjInterface oSignEDO02;
  #doc
    Подписание строки и сохранение в файл .sig
    Возвращает имя файла.
  #end
  Function SignString2TmpFile(aStr: string;
                            isVerify: boolean = false;
                            isDetached: boolean = false;
                            encodingType: CAPICOM_ENCODING_TYPE = CAPICOM_ENCODE_BASE64 ): string;

  #doc
    Подписание файла
    Возвращает true если всё хорошо
    FileName - обязательный параметр. Если подпись откреплённая, то возвращается файл подписи
    isCoSign - если уже не первая подпись
    isVerify - если нужно посмотреть на результат
    isDetached - откреплённая подпись, возвращает файл подписи в FileName
    encodingType - CAPICOM_ENCODING_TYPE
  #end
Function SignFile(var FileName: string; // если подпись откреплённая, то возвращает файл подписи
                  isCoSign: boolean = false; // если уже не первая подпись
                  isVerify: boolean = false; // если нужно посмотреть на результат
                  isDetached: boolean = false; // если нужно получить откреплённую подпись
                  encodingType: CAPICOM_ENCODING_TYPE = CAPICOM_ENCODE_BASE64; // шифровать в Base64
                  isBase64: boolean = false  // подписываемые данные - в зашифрованы Base64
                  ): boolean;

  #doc
    Поиск сертификата по типу CAPICOM_CERTIFICATE_FIND_TYPE (CAPICOM.vih)
    и критерию Criteria (Если строка, то выполняет поиск подстроки по вхождению).
    ValidOnly - поиск только среди действительных сертификатов.
    Возвращает true, если сертификат найден и установлен текущим.
  #end
  Function FindCertificate(FindType: CAPICOM_CERTIFICATE_FIND_TYPE; Criteria: variant; ValidOnly: boolean) : boolean;

  #doc
    Возвращает субъекта сертификата
  #end
  Function GetSubjectName: string;

  #doc
    Возвращает серийный номер сертификата
  #end
  Function GetSerialNumber: string;

  #doc
    Возвращает SHA1 отпечаток сертификата
  #end
  Function GetThumbprint: string;

  #doc
    Кодирование файла в Base64.
    Полученный код записывается в указанный файл.
  #end
  Function FileToBase64(FileSource, FileDest: string): boolean;

  #doc
    Кодирование содержимого текстового файла в Base64.
    Полученный код записывается в указанный файл.
  #end
  Function FileTextToBase64(FileSource, FileDest: string): boolean;

  #doc
    Декодирование содержимого текстового файла из Base64 в указанный файл.
  #end
  Function FileFromBase64(FileSource, FileDest: string): boolean;
end;
//-----------------------------------------------------------------------------
VipInterface SignEDO implements oSignEDO,oSignEDO01,oSignEDO02 licensed(free);

#end // __SignEDO_VIH__
