//------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Галактика 9.1 - Логистика
// Электронный документооборот - экспорт документа в XML-файл
//------------------------------------------------------------------------------

#ifndef __ExportDoc_vih__
#define __ExportDoc_vih__

#Component "L_Common"

#include TuneEDO.vih
#include XMLConverter.vih

const
//------------------------------------------------------------------------------
// Параметр экспорта документов _wParam
//------------------------------------------------------------------------------
// 1. Используется при экспорте СФ (константы cg_ExpSf...):
//    1,2,4, ..., 512 - Дополнительный параметр в настройке экспорта
//    1024, 2048...   - Прочие параметры
  cg_ExpSfPriceNDS     = 1;   // цена с учетом НДС
  cg_ExpSfCreateSign   = 2;   // создать файл с ЭЦП

  cg_ExpSfSingEDO      = 1024; // экспорт СФ для ЭЦП
  cg_ExpSfNalStRasch   = 2048; // налоговая ставка СФ расчетная
  cg_ExpSfNalStProc    = 4096; // налоговая ставка СФ процентная
  cg_ExpSfHideKolPrice = 8192; // Не выводить количество и цену ОКЕИ у услуги


//------------------------------------------------------------------------------
// 2. При экспорте остальных документов пока не используется
//------------------------------------------------------------------------------
end;

#doc
Методы, специфичные для выгрузки документов различных типов (СФ, Корректировочный СФ, ТОРГ-12, Акт на услуги)
#end
ObjInterface ObjExportDoc;

  #doc
  Префикс имени XML-файла (для СФ это 'ON_SFAKT')
  #end
  Function FileNamePrefix: string;

  #doc
  Позиционирование на документ, определение контрагента
  #end
  Function GotoDoc(_Doc: comp): boolean;

  #doc
  Дата документа
  #end
  Function DocDate: date;

  #doc
  Параметры экспорта
  #end
  Procedure SetParamExport(_wParam: word; _oEDO: TuneEDO);

  #doc
  Выгрузка содержимого документа в XML-формат
  #end
  Function Export(_Path, _FileName, _IdPok: string): boolean;

  #doc
  Выгрузка содержимого документа в XML-формат в таблицы интерфейса XMLConverter
  #end
  Function ExportToObj(_FileName, _IdPok: string; var _oXMLConverter : XMLConverter): boolean;
End;


#doc
Базовый интерфейс (общая функциональность) выгрузки документа в XML-формат
#end
VipInterface ExportDoc
  implements ObjExportDoc
  licensed (FREE);

#doc
Методы, специфичные для выгрузки счета-фактуры
#end
ObjInterface ObjExportSF(ObjExportDoc);

  #doc
  Подписант
  #end
  Procedure SetPodpisant(_sFIO, _sPosition: string);

End;

#doc
Выгрузка счета-фактуры в XML-формат
#end
VipInterface ExportSF(ExportDoc) implements ObjExportSF
  licensed (FREE);
  public:
    Function ObjExportDoc.FileNamePrefix: string;
    Function ObjExportDoc.GotoDoc(_Doc: comp): boolean;
    Function ObjExportDoc.DocDate: date;
    Function ObjExportDoc.Export(_Path, _FileName, _IdPok: string): boolean;
    Function ObjExportDoc.ExportToObj(_FileName, _IdPok: string; var _oXMLConverter : XMLConverter): boolean;
End;

#doc
Выгрузка корректировочного счета-фактуры в XML-формат
#end
VipInterface ExportCorrSF(ExportDoc) implements ObjExportSF
  licensed (FREE);
  public:
    Function ObjExportDoc.FileNamePrefix: string;
    Function ObjExportDoc.GotoDoc(_Doc: comp): boolean;
    Function ObjExportDoc.DocDate: date;
    Function ObjExportDoc.Export(_Path, _FileName, _IdPok: string): boolean;
    Function ObjExportDoc.ExportToObj(_FileName, _IdPok: string; var _oXMLConverter : XMLConverter): boolean;
End;

#doc
Выгрузка сопроводительного документа для формирования ЭЦП
#end
VipInterface ExportKS(ExportDoc)
  licensed (FREE);
  public:
    Function ObjExportDoc.FileNamePrefix: string;
    Function ObjExportDoc.GotoDoc(_Doc: comp): boolean;
    Function ObjExportDoc.DocDate: date;
    Function ObjExportDoc.Export(_Path, _FileName, _IdPok: string): boolean;
    Function ObjExportDoc.ExportToObj(_FileName, _IdPok: string; var _oXMLConverter : XMLConverter): boolean;
End;

// Типы данных, описанные в формате ФНС
type TName  = string[60];  // Для фамилии, имени и отчества
type TINNUL = string[10];  // Типовой элемент <ИННЮЛТип>. T(=10)
type TINNFL = string[12];  // Типовой элемент <ИННФЛТип>. T(=12)
type TKPP   = string[9];   // Типовой элемент <КППТип>. T(=9)
type TIndex = string[6];   // Почтовый индекс. T(=6)
type TSSRF  = string[2];   // Типовой элемент <CCРФТип> T(=2)
type TOKSM  = string[3];   // Типовой элемент <ОКСМТип> T(=3)
type TOKEI  = string[3];   // Типовой элемент <ОКЕИТип> T(=3). Код по Общероссийскому классификатору единиц измерения.
type TGUID  = string[36];  // GUID. T(=36)
type TOKV   = string[3];   // Типовой элемент <ОКВТип> T(=3). Код по Общероссийскому классификатору валют.
type TIdEDO = string[3];   // Идентификатор оператора электронного оборота счетами-фактурами (оператор ЭДО),
                           // услугами которого пользуется покупатель (продавец), символьный трехзначный код.
                           // В значении идентификатора допускаются символы латинского алфавита a-z, цифры 0-9,
                           // знаки "@", ".", "-". Значение идентификатора регистронезависимо.
                           // При включении оператора ЭДО в сеть доверенных операторов ЭДО ФНС России,
                           // идентификатор присваивается Федеральной налоговой службой

#end // __ExportDoc_vih__