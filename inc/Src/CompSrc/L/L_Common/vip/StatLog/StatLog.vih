#ifndef __STATLOG_VIH__
#define __STATLOG_VIH__

#ifndef __StatLogObj__
// define __StatLogObj__ убирать НЕ НАДО,
// т.к. он используется для совместимости кода на "старых" версиях 585.01, 711,
// когда функционал был оформлен в виде StatLog.Vpp
#define __StatLogObj__
#end // __StatLogObj__

#ifdef ComponentVersion
#component "L_COMMON"
#end

#doc
Объектный интерфейс для управления изменением статуса
#end

ObjInterface IStatLog;
  property ChangeStatusEnabled : boolean read write;
end;

//------------------------------------------------------------------------------
#doc
Точка расширения для управления изменением статуса
#end
ExtensionPoint epOnChangeDocStatus(wDocType: word; pDoc: comp; wOldStatus: word; pOldNote: comp; wNewStatus: word; pNewNote: comp; StatLoger: IStatLog);

#doc
Точка расширения изменения статуса
#end
ExtensionPoint epStatusHasChanged(wDocType: word; pDoc: comp; wNewStatus: word; pNewNote: comp);

#doc
Описывает методы для работы с таблицей StatLog (таблица истории изменения статуса документов)
#end
ObjInterface StatLogObj;
  //******************************************************************************
  #doc
  Функция добавления записи в историю изменения статуса документа
  #end
  function StatLog_Insert ( _DocType : word;      // тип документа
                            _cDoc    : comp;      // nRec документа
                            _Comment : string[80] // комментарий в историю
                          ) : word ; // код ошибки
  //******************************************************************************
  #doc
  Функция удаления истории изменения статуса документа
  #end
  function StatLog_Delete ( TypeDoc : word;          // тип документа
                            nRecDoc : comp) : word;  // nRec документа
  //******************************************************************************
  #doc
  Функция получения последней записи истории изменения статуса документа
  #end
  function StatLog_GetLast ( TypeDoc    : word;         // тип документа
                             nRecDoc    : comp;         // nRec документа
                         var _OldStatus : word;
                         var _OldNote   : comp) : word;
  //******************************************************************************
  #doc
  Функция удаления последней записи из истории изменения статуса документа
  #end
  function StatLog_DeleteLast ( TypeDoc : word;          // тип документа
                                nRecDoc : comp) : word;  // nRec документа
  //******************************************************************************
  #doc
  Функция вставки записи в историю изменения статуса документа
  #end
  function StatLog_InsNewStat ( _DocType  : word;      // тип документа
                                _cDoc     : comp;      // nRec документа
                                _OldStat  : word;      // старый статус
                                _cOldStat : comp;      // nRec старого статуса
                                _NewStat  : word;      // новый статус
                                _cNewStat : comp;      // nRec нового статуса
                                _Comment  : string[80] // комментарий в историю
                              ) : word;                // код ошибки
  //******************************************************************************
end;

#doc
Описывает методы для работы с таблицей StatLog (таблица истории изменения статуса документов)
#end
ObjInterface StatLogObjV2(StatLogObj);
  //******************************************************************************
  #doc
  Получение даты и времени для записи об изменении статуса
  #end
  procedure StatLog_GetDateTime ( var _Date : date;
                                  var _Time : time );
  //******************************************************************************
end;

//--------------------------------------------------------------------------------
#doc
Описывает методы для работы с таблицей StatLog (таблица истории изменения статуса документов)
#end
ObjInterface StatLogObjExt(StatLogObjV2);

  #doc
  Признак пакетного режима изменения статуса
  #end
  property isStartBatchChangeStatus: boolean read write;

  #doc
  Признак что можно менять статус
  #end
  property isCanChangeStatus: boolean read write;

  #doc
  Получить статус
  #end
  function GetStatus(_cNote: comp) : word;
 
  #doc
  Информация о последней ошибке
  #end
  property sLastError : string read write;

end;


VipInterface vipStatLog implements StatLogObjExt licensed (FREE);


//------------------------------------------------------------------------------
#doc
<p>Точка расширения перед изменением статуса.</p>
<p>В случае невозможности изменения статуса обработчик должен вернуть <code>false</code>.</p>
#end
ExtensionPoint epOnBeforeChangeStatus(_TiDk: word; _pDoc: comp; _wOldStatus: word; _cOldNote: comp; _wNewStatus: word; _cNewNote: comp; pVipStatLog: vipStatLog);

#doc
<p>Точка расширения после изменения статуса. Вызывается после создания записи протокола.</p>
<p>В случае невозможности изменения статуса обработчик должен вернуть <code>false</code>.</p>
#end
ExtensionPoint epOnAfterChangeStatus(_TiDk: word; _pDoc: comp; _wOldStatus: word; _cOldNote: comp; _wNewStatus: word; _cNewNote: comp; pVipStatLog: vipStatLog);

#doc
<p>Точка расширения ДО пакетного изменения статуса.</p>
#end
ExtensionPoint epOnBeforeBatchChangeStatus(_TiDk: word; _pMrkDoc: TPtr; _cOldNote: comp; _cNewNote: comp; pVipStatLog: vipStatLog);

#doc
<p>Точка расширения после пакетного изменения статуса.</p>
#end
ExtensionPoint epOnAfterBatchChangeStatus(_TiDk: word; _pMrkDoc: TPtr; _cOldNote: comp; _cNewNote: comp; pVipStatLog: vipStatLog);


#end //__STATLOG_VIH__
