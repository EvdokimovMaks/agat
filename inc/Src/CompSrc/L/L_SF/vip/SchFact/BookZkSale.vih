/*
 ╔═══════════════════════════════════════════════════════════════════════════╗
 ║                     (c) 1994,2004 корпорация ГАЛАКТИКА                    ║
 ║ Проект        : ГАЛАКТИКА                                                 ║
 ║ Система       : Оперативный контур                                        ║
 ║ Версия        : 5.85.02                                                   ║
 ║ Назначение    : Объектный интерфейс для связи книги пок. c накладными на  ║
 ║                 реализацию МЦ                                             ║
 ║ Ответственный : Полежай Алексей Геннадьевич                               ║
 ╚═══════════════════════════════════════════════════════════════════════════╝
*/
#ifdef ComponentVersion
#component "L_SF"
#end

type
#doc
структура для передачи данных о реализации
#end
  TBookZkSale = record
    cEqual   : comp;
    cSpEqual : comp;
    kol   : double;
    cOtpEd: comp;
    dateEqual: date;
  end;

#doc
Методы для связи книги покупок c накладными на реализацию МЦ
#end
ObjInterface IBookZkBySaleData;

  #doc
  Возвращает данные о первой найденной реализации
  #end
  function findEquivalent(wTable_Sp: word; cSpSopr: comp; kol: double;
                          w_Mode: word; var recEqual: TBookZkSale): boolean;

  #doc
  Возвращает данные о следующей найденной реализации
  #end
  function getNextEquivalent(var recEqual: TBookZkSale): boolean;

  #doc
  Добавляет запись в таблицу BookSB - связь приходов с реализованными МЦ или отпущенными на строительство
  #end
  function establishConnection(cBookZk: comp;
                               cSoprZk: comp;
                               cBookPr: comp;
                               cSoprPr: comp;
                               kolReg: double;
                               w_Mode: word
                              ): boolean;

  #doc
  Расчет количества, уже зарегистрированного по данной позиции прихода
  #end
  function getRegKolZk(cSchFact: comp; cSopr: comp; w_Mode: word): double;

  #doc
  Расчет количества, уже зарегистрированного/сторнированнного по данной позиции
  #end
  function getRegKolPr(cSopr: comp; w_Mode: word): double;

  #doc
  Для записи регистрации установка признака обработки
  #end
  procedure SetRegZk(aBK : Comp);

  #doc
  Добавление конечной записи (без дальнейших проверок) в BookSB - связь приходов с переводами в ОС
  #end
  procedure Create_BookSB(aBk, aSp, aSpOS: Comp; aKol : Double);

end;

VipInterface BookZkOS implements IBookZkBySaleData
licensed (FREE)
;
VipInterface BookZkDelayedUKS implements IBookZkBySaleData
licensed (FREE)
;
// интерфейс предполагается использовать следующим образом:
/*
  kolNoReg := SpSopHoz.Kolvo - iBkOS.getRegKol(SchFact.nRec, SpSopr.nRec);
  if (iBkOS.findSale(SpSopr.nRec, kolNoReg, recOS))
  {
    do
    {
      <...создать запись регистрации в книге покупок...>
      iBkOS.establishConnection(BookPrZk.nRec, SpSopr.nRec, recOS.cSpOS, recOS.kol);
    } while (iBkOS.getNextOS(recOS));
  }
*/
