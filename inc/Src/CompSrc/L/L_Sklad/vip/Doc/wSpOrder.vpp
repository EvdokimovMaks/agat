!╔═══════════════════════════════════════════════════════════════════════════╗
!║                     (c) 1994,97 корпорация ГАЛАКТИКА                      ║
!║ Проект        : ГАЛАКТИКА                                                 ║
!║ Система       : Оперативный контур                                        ║
!║ Версия        : 5.00                                                      ║
!║ Назначение    : Окно расширенной информации спецификации ордеров          ║
!║ Ответственный : Журавлев Эдуард Иванович                                  ║
!║ Параметры     : есть                                                      ║
!╚═══════════════════════════════════════════════════════════════════════════╝
!╔═══════════════════════════════════════════════════════════════════════════╗
!║ Используют :                                                              ║
!╚═══════════════════════════════════════════════════════════════════════════╝

#doc
Спецификация ордера
#end
Window wSpOrder 'Спецификация ордера' EscClose;
  Show at (,,104,26);
panel pSpOrd
  Show at (,,,12);
  table SpOrder;

Screen scSpOrd (,hcSkladWOrdExtSpec,sci178Esc)
  Bevel b1 {2, 5, 102, 6};// bsHorizontal};

Fields
  KatMC.Name      ('Наименование МЦ'                 ,,sci1378Esc) : protect;
  SpOrder.sNameVar('Наименование для печати'         ,,          ) : NoProtect;
  KatMC.BarKod    ('Номенклатурный номер МЦ'         ,,sci1378Esc) : protect;
  KatParty.KOD    ('Ссылка на партию отпускаемого МЦ',,sci1378Esc);
  KatParty.Name   ('Ссылка на партию отпускаемого МЦ',,sci1378Esc);

  SpOrder.Kol     ('Количество МЦ по ордеру'         ,,          ) : [prSignsInKol        , '\3p[|-]36`666`666`666`666.888'];
  KatEd.Name      ('Наименование единицы измерения'  ,,sci1378Esc) : skip;
  SpOrder.rSrPrice('Цена МЦ по ордеру'               ,,          ) : [brForSpOrder_PriceE , '\2p[|-]36`666`666`666`666.88'], protect;
  oValFunc.GetValSymbol(0) : skip;
  SpOrder.rVPrice ('Цена МЦ по ордеру'               ,,          ) : [brForSpOrder_PriceE , '\2p[|-]36`666`666`666`666.88'];
  KlVal.SimvolV   ('Символ валюты'                   ,,sci1378Esc) : protect;
  SumPrice        ('Стоимость МЦ по ордеру'          ,,          ) : [brForSpOrder_PriceE , '\2p[|-]36`666`666`666`666.88'] ,skip;
  oValFunc.GetValSymbol(0) : skip;
  SumPriceV       ('Стоимость в валюте'              ,,sci1378Esc) : [brForSpOrder_VPriceE, '\2p[|-]36`666`666`666`666.88'], skip;
  KlVal.SimvolV   ('Символ валюты',,sci1378Esc) : skip;
  SpOrder.PriceN  ('Цена МЦ для налогового учета'    ,,          ) : [brForSpOrder_PriceE , '\2p[|-]36`666`666`666`666.88'], NoProtect;
  strNDE          : skip;
  SpOrder.SummN   ('Сумма для налогового учета'      ,,sci1378Esc) : [brForSpOrder_PriceE , '\2p[|-]36`666`666`666`666.88'], NoProtect;
  strNDE1         : skip;
<<

  `Наименование МЦ`.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
       `для печати`.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
  `Ном. номер МЦ`  .@@@@@@@@@@@@@@@
  `Партия`         .@@@@@@@@@@@@@@@.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

  `Количество`     .@@@@@@@@@@@@@@@.@@@@@@@@@@@@@@@@@
  `Цена`           .@@@@@@@@@@@@@@@.@@@@@ `в валюте`.@@@@@@@@@@@@@@@@.@@@@@
  `Стоимость`      .@@@@@@@@@@@@@@@.@@@@@ `в валюте`.@@@@@@@@@@@@@@@@.@@@@@

  `Цена для НУ`    .@@@@@@@@@@@@@@@.@@@@@ `Сумма НУ`.@@@@@@@@@@@@@@@@.@@@@@
>>
end; // screen
end; // panel

Panel pnpSpOrd1;
  show (,13,,);
  table SpOrder;

TabbedSheet Bottom tsSpOrdscrExtendetInfo

Embedded scKauEdit1    'Целевой учет'    Interface              ; end;
Embedded brEditSerialN 'Серийные номера' Interface oSpOrdSerialN; end;

end;

HandleEvent
cmPositionChanged :
{
  if ( CurTable = #SpOrder )
    oSpOrdSerialN.SetSpOrdSerialN(SpOrder.nRec);
}

end; // handleevent
end; // panel;

handleevent

cmInit: //для Нал.Уч.
{
  strNDE := strNDE1 := oValFunc.GetValSymbol(0);

  SetFieldAndLabelVisible(#SpOrder.PriceN, boGetTune('Oper.NalUch'));
  SetFieldAndLabelVisible(#strNDE        , boGetTune('Oper.NalUch'));
  SetFieldAndLabelVisible(#SpOrder.SummN , boGetTune('Oper.NalUch'));
  SetFieldAndLabelVisible(#strNDE1       , boGetTune('Oper.NalUch'));
  var wPrView_Edit : word;
  wPrView_Edit := cgPr_Edit;

  if (Check_BackDate) or (NOT boGetTune('Doc.ModOrder')) or
     (NOT fCloseBuhPer(SklOrder.nRec, SklOrder.VidOrder, SklOrder.SP, False)) or
     ((wGetTune('Sklad.ModHaveProvod') = 0) and (ExistsAnyOborotSklOrder(SklOrder.Nrec)))
    wPrView_Edit := cgPr_View;

  oLinkMTR2Spec.SetObjParam(coSpOrder, SpOrder.nRec, wPrView_Edit);

  DisableCommand(cmAttrib);   //блокируем вызов этого окна в меню
  DisableCommand(cmIerarchy); //целевой учет перенесен в это окно
}

cmOpenSearch: //для Нал.Уч.
{
  if ( wGetTune('Oper.Box.ModOrdAftPer') <> 0 )
    if ( oCheckSpisBox.Check_wasSpisBox(SklOrder.NRec) )
    {
      ShowTune( 'Запрещена модификация приходных ордеров при наличии перемещений из ячеек хранения!'
              , 'Oper.Box.ModOrdAftPer');
      Exit;
    }

  case CurField of
   #sumNalUch
 , #SpOrder.SummN
:
   {
     Abort;

     var getSum : double;

     getSum := SpOrder.priceN * SpOrder.kol;

     if RunDialog('GetSumTov', getSum) = cmCancel
       Exit;

     set SpOrder.priceN := getSum/SpOrder.kol;
     set SpOrder.SummN  := getSum;
     set SpOrder.SummN  := oSaldo_K.RoundRubOrd(SpOrder.priceN, SpOrder.Kol)*SpOrder.Kol;

     PushPos(#SpSopr);
     
     if (GetFirst SpSopr where ((SpOrder.cSpSopr == SpSopr.nRec)) = tsOk)
     {
       SpSopr.priceN       := getSum/SpSopr.KolFact;
       SpSopr.SummN        := getSum;
       SpSopr.SummN        := oSaldo_K.RoundRubOrd(SpSopr.PriceN, SpSopr.KolFact)*SpSopr.KolFact;
       SpSopr.manualNalUch := 1;

       update current SpSopr;
     }

     PopPos(#SpSopr);
  }
 end;
}

cmPick: //для Нал.Уч.
{
  case CurField of
   #sumNalUch
 , #SpOrder.SummN
:
   {
     if (SpOrder.tipOrd = 3) or (SpOrder.vidOrder = 1)
     {
       if SpOrder.vidOrder=1
         message('Составляющие налоговой суммы доступны только для приходных ордеров, созданных по накладным');

       Exit;
     }

     if GetFirst SpSopr where ((SpOrder.cSpSopr == SpSopr.nRec)) <> tsOk
     {
       message('Ордер создан не по накладной');
       Exit;
     }

     if SpSopr.manualNalUch = 1
       if message('Налоговая сумма по данной позиции накладной - ручная. '+
                  'Изменить на расчетную?', Confirmation + YesNo) <> cmYes
         Exit;

     var wModeSpis : word;
     if Check_wasSpis(SklOrder.NRec, wModeSpis)
     {
       if ( wGetTune('Oper.Sklad.EditPrihOrdWithRash') <> 0 )
       {
         ShowTune( 'Запрещена модификация приходных ордеров при наличии после них расходных!'
                 , 'Oper.Sklad.EditPrihOrdWithRash');
         Exit;
       }

       if ( wGetTune('Oper.Box.ModOrdAftPer') <> 0 )
         if ( oCheckSpisBox.Check_wasSpisBox(SklOrder.NRec) )
         {
            ShowTune( 'Запрещена модификация приходных ордеров при наличии перемещений из ячеек хранения!'
                    , 'Oper.Box.ModOrdAftPer');
            Exit;
         }

        if Message('По разрезу оприходования ордера (' + f_sNumDate(SklOrder.nOrder, SklOrder.dOrd) +
            ') уже были проведены списания.'#13 +
            ' При изменении данного ордера возможны неверные цены списания в расходных ордерах.'#13#13 +
            + 'Продолжить?', YesNo+Confirmation+mfSwapButtons) <> cmYes
          Exit;

        if Message('По разрезу оприходования ордера (' + f_sNumDate(SklOrder.nOrder, SklOrder.dOrd) +
                ') уже были сформированы Акты изменения целевого назначения запасов МТР.'#13 +
                ' При изменении данного ордера возможны некорректные остатки запасов МТР в разрезе целевого учета.'#13#13 +
                + 'Продолжить?', YesNo+Confirmation+mfSwapButtons) <> cmYes
          exit;
     }
     else
       if ( wGetTune('Oper.Box.ModOrdAftPer') <> 0 )
         if ( oCheckSpisBox.Check_wasSpisBox(SklOrder.NRec) )
         {
           ShowTune( 'Запрещена модификация приходных ордеров при наличии перемещений из ячеек хранения!'
                   , 'Oper.Box.ModOrdAftPer');
           Exit;
         }

     SpSopr.manualNalUch:= 0;
     update current SpSopr;

     var sumNalUch_: double;

     if (KatSopr.vidSopr = 101 or KatSopr.vidSopr = 108)//накладная на закупку
       SaveMyDSK(SpOrder.nRec, 'watchSpOrder_nRec'); //для просмотра по прих.накаладной - м.б. разнесение на разные склады

     if (KatSopr.vidSopr = 621) //акт на комплектование, разукомплектование
     {
       Message('Составляющих налоговой суммы нет, так как ордер был сформирован по акту на комплектование/разукомплектование.');
       Exit;
     }

     RunInterface(ViewNalUch, SpSopr.nRec, sumNalUch_, double(0), false);

     SpSopr.priceN := sumNalUch_/SpSopr.KolFact;
     SpSopr.SummN  := sumNalUch_;
     SpSopr.SummN  := oSaldo_K.RoundRubOrd(SpSopr.priceN, SpSopr.KolFact)*SpSopr.KolFact;

     update current SpSopr;

     set SpOrder.priceN := sumNalUch_/SpOrder.Kol;
     set SpOrder.SummN  := sumNalUch_;
     set SpOrder.SummN  := oSaldo_K.RoundRubOrd(SpOrder.priceN, SpOrder.Kol)*SpOrder.Kol;

     RunInterface('ViewNalUch', SpSopr.nRec, sumNalUch_, double(0), true);

     SaveMyDSK(comp(0), 'watchSpOrder_nRec'); // обязательно !
   }
  end;
}

cmInsert:
{
  if isProtected(#SklOrder)
    {
      stop;
      ProcessCommand(cmProtectedInput);
    }
}

cmOpenSearch :
{
  if isProtected(#SklOrder) or isProtected(#SpOrder)
    { //message('Запись защищена от модификации!');
      stop;
      ProcessCommand(cmProtectedInput);
      Exit;
    }

  case (curfield) of
   #SpOrder.rSrPrice:
     { stop;
       var GetSum: double;  GetSum := SpOrder.rSrPrice;

       if RunDialog('GetPriceTov', GetSum) = cmCancel
         Exit;

       set SpOrder.rSrPrice := GetSum;

       F_SpOrder_CheckField;
     }
  else
    PutCommand(cmPick);
  end;//case
}

cmSaveDoc :
{
  if ( not CanEditOrderWithRash(true) )
    Exit;

  GetSaveDoc; 
}

cmNal :
  if (CurTable = #SpOrder)
   if (UpdateTable)
    RunInterface('GetSaldoMC', SkPr, SpOrder.dOrd, SpOrder.cMC, 0,0,0);

cmCalc:
{
  oSerialMove.SetSerialForOrder(SpOrder.nRec, true, false);
}

cmShowAll :
  RunInterface('GSaldDat', SklOrder.dOrd, word(0),
                           SpOrder.cMC,
                           SpOrder.ccPodr, SpOrder.ccMOL, SpOrder.cParty, comp(0));

cmValue11 :
  RunInterface('SpOrderInBox', SpOrder.nrec);

cmValue12 :
{
  pBoxFuncs.RaspredSklOrder( SklOrder.nRec, SpOrder.nRec, if(wGetTune('Oper.Box.DateOpr') = 0, Cur_Date, SklOrder.dOrd), true, true);
}

cmValue16 :
{
  pBoxFuncs.UndoSpOrderBoxOperations(SpOrder.nRec, 0, true, true, false)
}

cmValue14 :
{
  pBoxFuncs.SpisSklOrder( SklOrder.nRec, SpOrder.nRec, if(wGetTune('Oper.Box.DateOpr') = 0, Cur_Date, SklOrder.dOrd), true, true);
}

cmValue15 :
  RunInterface('SpOrderOutBox', SpOrder.nrec);

cmValue17 :
{
  pBoxFuncs.UndoSpOrderBoxOperations(SpOrder.nRec, 0, true, true, false)
}

cmValue10 : F_Value10;

cmHotKeys :
  RunHotKeys;

cmDone :
{
  EnableCommand(cmAttrib); //разблокируем вызов этого окна в меню
  EnableCommand(cmIerarchy);

  if ( UpdateTable )
    RereadRecord(#SpOrder);
}

cmValue60:
{
  RunInterface('ShowSpesHowSmeta', SklOrder.nRec, coSklOrder);
}

end; // HandleEvent for Window
end; // window wSpOrder
