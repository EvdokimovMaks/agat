
#ifdef ComponentVersion
#component "L_MCU"
#end

#doc
Объектный интерфейс описывает методы работы по формированию и выбору МЦ (с заданием значений аналитик)
#end
ObjInterface AddGetMC_Obj1;

#doc
Ищет (создает) МЦ по Шаблону и значениям аналитик (на 3-х маркерах):
  <_MarHead>_KAU   - Ссылки на Аналитики
  <_MarHead>_Role  - Ссылки на Роль
  <_MarHead>_cKAU  - Ссылки на Значения аналитик
#end
function PickInsertMC_Mask (_rMask_MC : comp;    //Ссылка на Шаблон МЦ
                            _MarHead  : string;  //Начальные имена 3-х маркеров
                            isMessErr : boolean; //Выдавать ли сообщения об ошибках
                            _HashAn   : comp;    //Кэш замещаемых значений аналитик (0 - пустые значения)
                        var _isNew    : boolean  //Возвращает: True - новая / False - найдена среди имеющихся
                           )          : comp;    //KatMC.NRec найденной(созданной) / 0 - при неудаче
//******************************************************************************
#doc
Ищет (создает) МЦ по Шаблону переданной МЦ и значениям аналитик (на 3-х маркерах):
  <_MarHead>_KAU   - Ссылки на Аналитики
  <_MarHead>_Role  - Ссылки на Роль
  <_MarHead>_cKAU  - Ссылки на Значения аналитик
#end
function PickInsertMC_MC (_rMC      : comp;    //Ссылка на МЦ-прототип
                          _MarHead  : string;  //Начальные имена 3-х маркеров
                          isMessErr : boolean; //Выдавать ли сообщения об ошибках
                      var _isNew    : boolean  //Для неуказанных аналитик:
                                               //True - обнулить значения / False - оставить аналитики МЦ-прототипа
                                               //Возвращает: True - создана новая МЦ / False - найдена среди имеющихся
                         )          : comp;    //KatMC.NRec найденной(созданной) / 0 - при неудаче


//==============================================================================
//================== Для работы в интерфейсе-контейнере ========================
//==============================================================================

//******************************************************************************
  #doc
  Инициализация интерфейса в контейнере (передаются параметры инициализации интерфейса)
    KontPr_ - вид контейнера
          1 - стандартный (без ограничений)
  #end
  function Kont_IsInitKonteiner (  KontPr_     : word;
                                   pMask_      : comp;
                                   pIsOnlyNew_ : boolean;
                                   pVkl_       : word;
                                   pMC_        : comp
                                ) : boolean;
  //******************************************************************************
  #doc
  Возвращает текущее название окна (Title)
  #end
  function Kont_CurrTitle : string;
  //******************************************************************************
  #doc
  необходима для отслеживания события изменения заголовка окна в интерфейсе контейнере
  #end
  Event Procedure Kont_AnyTitle;
  //******************************************************************************
  #doc
  Для отработки закрытия Контейнера по cmDefault
  #end
  //******************************************************************************
  function ClosecmDefault : boolean;
  #doc
  Для отработки закрытия Контейнера по cmCancel & cmClose
  #end
  function ClosecmCancelcmClose : boolean;
  //******************************************************************************
  #doc
  Возвращает текущий KatMC.NRec
  #end
  function ReturnCurrMC : comp;
  //******************************************************************************
  #doc
  Возвращает текущий признак новой записи KatMC
  #end
  function ReturnCurrIsNew : boolean;

//==============================================================================

#doc
Ищет (создает) МЦ по Шаблону и значениям аналитик (_HashAn)
#end
function PickInsert_MaskHash (_rMask_MC  : comp;    //Ссылка на Шаблон МЦ
                               isMessErr : boolean; //Выдавать ли сообщения об ошибках
                               _HashAn   : comp;    //Кэш значений аналитик
                           var _isNew    : boolean  //Возвращает: True - новая / False - найдена среди имеющихся
                             )           : comp;    //KatMC.NRec найденной(созданной) / 0 - при неудаче

/*
  ============================================================================
  ================= Пример использования PickInsertMC_MC =====================
  ============================================================================
...
#include AddGetMC.vih
...
#include AddGetMC.var
...

 var MyBool7     : boolean;
 var MyMC7       : comp;
 var Marker_KAU  : TPtr;
 var Marker_Role : TPtr;
 var Marker_cKAU : TPtr;
 var _MarHead    : string;


 _MarHead := 'PickInsertMC_MyMarker';
 //Заполняет таблицу в памяти значениями из маркеров
 Marker_KAU   := InitMarker (_MarHead + 'KAU', 8,100,10,false);
 Marker_Role  := InitMarker (_MarHead + 'Role',8,100,10,false);
 Marker_cKAU  := InitMarker (_MarHead + 'cKAU',8,100,10,false);

 ClearMarker(Marker_KAU);
 ClearMarker(Marker_Role);
 ClearMarker(Marker_cKAU);

 InsertMarker(Marker_KAU,10004); //10000-Цвет
 InsertMarker(Marker_Role,0);
 InsertMarker(Marker_cKAU,18);    //5-Бирюза

 InsertMarker(Marker_KAU,10005); //10004-Дата
 InsertMarker(Marker_Role,2);    //3-дата изготовления
 InsertMarker(Marker_cKAU,longint(date(1,7,2003)));

 InsertMarker(Marker_KAU,10005); //10004-Дата
 InsertMarker(Marker_Role,3);    //2-срок годности
 InsertMarker(Marker_cKAU,longint(date(10,7,2003)));


 DoneMarker(Marker_KAU, _MarHead + 'KAU');
 DoneMarker(Marker_Role,_MarHead + 'Role');
 DoneMarker(Marker_cKAU,_MarHead + 'cKAU');

 MyBool7 := False;
 //подгружаем копию
 if (NullVipRef(fAddGetMC)) LoadVipInterface(fAddGetMC);
 MyMC7 := fAddGetMC.PickInsertMC_MC(KatMC.NRec  //Ссылка на МЦ-прототип
                                   ,_MarHead    //Начальные имена 3-х маркеров
                                   ,True        //Выдавать ли сообщения об ошибках
                                   ,MyBool7     //Для неуказанных аналитик:
                                                //True - обнулить значения / False - оставить аналитики МЦ-прототипа
                                                //Возвращает: True - создана новая МЦ / False - найдена среди имеющихся
                                   );           //KatMC.NRec найденной(созданной) / 0 - при неудаче
 //выгружаем копию
 if ( Not NullVipRef(fAddGetMC) ) FreeVipInterface(fAddGetMC);

 Message(''#3'Создалась новая = ' + string(MyBool7)
       +''#13'KatMC.NRec = ' + string(MyMC7)
       ,Information);


 ...
  ===========================================================================
*/


end;
VipInterface AddGetMC implements AddGetMC_Obj1
  licensed (FREE) Parameters (pMask : comp; pIsOnlyNew : boolean; pVkl : word; pMC : comp; pIsNew : boolean)
;
