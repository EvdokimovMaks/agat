#ifndef _GetKatLimit_vih_
#define _GetKatLimit_vih_

// Для использования интерфейса в режиме фильтра необходимо:
//
// 1. "накачать" таблицу Pick ссылками на записи каталога, которые мы хотели бы видеть в интерфейсе
// delete Pick where(( cgGetKatLimitFilterDataId == Pick.wList )); // если кто не "прибрался" раньше
// _loop ... {
//    insetr Pick set Pick.wList := cgGetKatLimitFilterDataId, Pick.cRec := <Нужная нам запись>;
// }
//
// 2. вызвать интерфейс с нужными параметрами
// RunInterface( 'GetKatLimit', <Константа_нужного_режима>, true /* фильтр включен */, dummy );
// delete Pick where(( cgGetKatLimitFilterDataId == Pick.wList )); // поработали - убрали за собой

const
  // рабочие режимы интерфейса (для задания значения параметра p_workMode)
  cgGetKatLimitSelect = 1; // режим выбора из каталога
  cgGetKatLimitView = 2; // режим просмотра каталога
  cgGetKatLimitEdit = 3; // режим редактирования записей каталога

  // идентификатор Pick.wList для значений фильтра в таблице Pick
  cgGetKatLimitFilterDataId: word = 65136; // пожалуйста, используйте константу, а не числовое выражение идентификатора
end;

VipInterface GetKatLimit
  licensed (FREE)
  Parameters(
    p_workMode: word; // рабочий режим. Константы рабочих режимов см. выше
    p_isFilterPresent: boolean; // true, если необходимо фильтровать записи каталога по Pick.cRec
    p_katLimitNrec: comp // nRec выбранной записи каталога. При запуске интерфейса позиционируется на указанную запись.
  );

#endif
