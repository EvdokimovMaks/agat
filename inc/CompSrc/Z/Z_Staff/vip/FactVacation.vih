//------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Галактика 9.1 - Управление персоналом
// Объект фактических отпусков
//------------------------------------------------------------------------------

#ifdef ComponentVersion
#component "z_Staff"
#end

#doc
#end
objinterface oIFactVacation;

#doc
 Функция подсчета дней отпуска, полагающихся но не предоставленных

 параметры:
  cParam_PutVac   - ссылка на полагающийся отпуск
  cParam_Vacation - nRec текущего отпуска

 возвращаемое значение:
  количество дней отпуска, полагающихся но не предоставленных
#end
function funGetBalanceVac(cParam_PutVac, cParam_Vacation: comp; dParam_Date: date): double;


#doc
  Функция расчета полагающихся дней отпуска за определенный период

  параметры:
    dBeg - дата начала расчетного периода
    dEnd - дата окончания расчетного периода
    cPerson - nRec человека
    cKlOtpusk - nRec классификатора отпусков
#end
public function funGetDayProportion(dBeg, dEnd : date; cPerson, cKlOtpusk, cParam_Vacation : comp) : double;

#doc
 Функция получения ссылки на лицевой счет из текущей записи FactOtpusk
 возвращаемое значение:
  nRec лицевого счета.
#end
public function funGetFactLSchet: comp;

#doc
 Функция определения наличия пакета отпусков для сотрудника

 параметры:
  cPar_Person - nRec сотрудника, для которого определяется наличие пакета отпусков

 возвращаемое значение:
  true  - отпуск найден
  false - не найдено пакета отпусков для сотрудника
#end
function funIsValidFact(cPar_Person: comp): boolean;

#doc
 Функция определения наличия отпуска у сотрудника

 параметры:
  cPar_Person - nRec сотрудника, для которого определяется наличие отпусков

 возвращаемое значение:
  true  - отпуск найден
  false - не найдено отпуска для сотрудника
#end
function funIsValidVac(cPar_Person: comp): boolean;

#doc
 Функция выбора фактического отпуска для сотрудника

 параметры:
  cParam_Person   - ссылка на сотрудника
  cParam_Vac      - для позиционирования при запуске (ссылка на отпуск Otpusk)

 возвращаемое значение:
  ссылка на отпуск Otpusk
#end
function funGetVacation (cParam_Person, cParam_Vac: comp): comp;

#doc
 Процедура передачи параметров в интерфейс

 параметры:
  cSetPersonNrec  - nRec сотрудника
  cSetAppointNrec - nRec назначения сотрудника
#end
procedure prSetParam(cSetPersonNrec, cSetAppointNrec: comp);

#doc
 Процедура позиционирования на соответствующий ПЛАНУ-ГРАФИКУ факт

 параметры:
   cParam_PlanOtp            - nRec планового отпуска (PlanOtpusk)
   cParam_Person             - nRec сотрудника
   wVisibleFactParam,
   wVisibleCompensationParam - параметры фильтра
#end
public procedure prSetPosition(cParam_PlanOtp, cParam_Person: comp; wVisibleFactParam, wVisibleCompensationParam: word);

#doc
 Печать отчета о неиспользованных днях отпуска на дату

 параметры:
   liParam_Marker - уникальный идентификатор маркера
   cParam_Person  - сотрудник для которого происходит расчет
   cParam_Appoint - назначение сотрудника для которого происходит расчет
   dParam_Date    - дата на которую рассчитываются неиспользованные отпуска
#end
public procedure prPrintNoProvide(liParam_Marker: longInt; cParam_Person, cParam_Appoint: comp; dParam_Date: date);

#doc
 Выводит на экран окно для выбора даты

 возвращаемое значение:
   выбранная дата
#end
public function funGetDate: date;

#doc
Пересчитывает остаток отпуска в следующем рабочем периоде при предоставлении дополнительных дней отпуска в текущем

cPar_PutVacNrec - текущий предоставленный отпуск
dNewDayCount - количество предоставленных дней в приказе
bConfirm - признак, проверять или пересчитывать остаток отпуска
#end
public function funCalcNextRemaind(cPar_PutVacNrec: comp; dNewDayCount: double; bConfirm : boolean): boolean;

#doc
Пересчитывает остаток отпуска в следующем рабочем периоде при удалении приказа в текущем

cPar_PutVacNrec - текущий предоставленный отпуск
dNewDayCount - количество предоставленных дней в приказе
#end
public procedure prBalanceDel(cPar_PutVacNrec: comp; dNewDayCount: word);

#doc
Подсчитывает количество дней на дату предоставления отпуска с признаком "пропорционально за ВУТ"

  параметры:
    cParam_PutVac - ссылка на полагающийся отпуск
    dParamDateEnd - дата на которую определяется количество дней к предоставлению
    var dResult   - возвращаемый параметр - рассчитанное по пропорции количество дней

  возвращаемое значение:
    true  - в случае, когда полагающийся отпуск имеет способ предоставления "пропорционально за ВУТ"
    false - способ предоставления полагающегося отпуска НЕ "пропорционально за ВУТ"
   (var dResult   - возвращаемый параметр - рассчитанное по пропорции количество дней)

#end
public function funGetDaysHarmVac(cParam_PutVac: comp; dParamDateEnd: date; var dResult: double): boolean;

end;

#doc
Расширение объектного интерфеса для работы с фактическими отпусками
#end
objinterface oIFactVacation2;

#doc
 Функция выбора фактического отпуска для сотрудника по назначению

 параметры:
  cParam_Person   - ссылка на сотрудника
  cParam_Vac      - для позиционирования при запуске (ссылка на отпуск Otpusk)
  cParam_App      - ссылка на назначение (необязательный параметр со значением по умолчанию 0 - выбирать
                    отпуска независимо от назначения)

 возвращаемое значение:
  ссылка на отпуск Otpusk
#end
function funGetVacationByApp (cParam_Person, cParam_Vac: comp; cParam_App: comp = 0): comp;

end;

#doc
Расширение объектного интерфеса для работы с фактическими отпусками
#end
objinterface oIFactVacation3;

#doc
 Функция выбора отпуска по уходу за ребенком для сотрудника по назначению

 параметры:
  cParam_Person   - ссылка на сотрудника
  cParam_Vac      - для позиционирования при запуске (ссылка на отпуск Vacation)
  cParam_App      - ссылка на назначение (необязательный параметр со значением по умолчанию 0 - выбирать
                    отпуска независимо от назначения)

 возвращаемое значение:
  ссылка на отпуск Vacation
#end
function funGetDecrVacationByApp(cParam_Person, cParam_Vac: comp; cParam_App: comp = 0): comp;

end;

#doc
Расширение объектного интерфеса для работы с фактическими отпусками
#end
objinterface oIFactVacation4;

#doc
  Функция расчета полагающихся дней отпуска за определенный период

  параметры:
    dBeg - дата начала расчетного периода
    dEnd - дата окончания расчетного периода
    cAppoint - nRec назначения человека
    cKlOtpusk - nRec классификатора отпусков
#end
public function funGetDayProportionCur(dBeg, dEnd : date; cPutVacation, cParam_Vacation : comp) : double;

end;

#doc
Расширение объектного интерфейса для работы с интерфейсом выбора пакета отпусков при отзыве
#end
objinterface oIFactVacation5;

#doc
 Функция выбора отпуска для сотрудника по назначению

 параметры:
  cParam_Person   - ссылка на сотрудника
  cParam_Vac      - для позиционирования при запуске (ссылка на отпуск Otpusk)
  bPackage        - определяет, выбран пакет либо конкретный отпуск(возвращаемый параметр)
  cParam_App      - ссылка на назначение (необязательный параметр со значением по умолчанию 0 - выбирать
                    отпуска независимо от назначения)

 возвращаемое значение:
  ссылка на отпуск Otpusk
#end
function funGetVacationByAppType (cParam_Person, cParam_Vac: comp; var bPackage: boolean; cParam_App: comp = 0): comp;


#doc
 Функция выбора фактического отпуска для сотрудника

 параметры:
  cParam_Person   - ссылка на сотрудника
  cParam_Vac      - для позиционирования при запуске (ссылка на отпуск Otpusk)
  bPackage        - определяет, выбран пакет либо конкретный отпуск
 возвращаемое значение:
  ссылка на отпуск Otpusk
#end
function funGetVacationType (cParam_Person, cParam_Vac: comp; var bPackage: boolean): comp;

end;

#doc
Расширение объектного интерфейса для работы с интерфейсом выбора пакета отпусков при отзыве
#end
objinterface oIFactVacation6;

#doc
установка/снятие протекта
#end
procedure SetProtect(isProtect : boolean = True);

end;

vipinterface iFactVacation implements oIFactVacation, oIFactVacation2, oIFactVacation3, oIFactVacation4, oIFactVacation5, oIFactVacation6
#ifdef ATL51
Licensed (free)
parameters (cPersNrec, cAppNRec: comp; wMode: word)
#end
;
