#ifndef _WorkPeriods_INCLUDED_
#define _WorkPeriods_INCLUDED_

#ifdef ComponentVersion
#component "z_Staff"
#end

#doc
#end
objinterface IWorkPeriods;

#doc
Функция для определения года, по который формируются рабочие периоды
#end
public function GetYearForMakeWP: word;

#doc
Функция для выбора флага даты расчета стажа при формировании полагающихся отпусков
Возвращаемые значения:
-1 - была произведена отмена формирования
 0 - расчет стажа на дату начала рабочего периода
 1 - расчет стажа на дату окончания рабочего периода
#end
public function GetFlagForMakeOtp: integer;

#doc
Параметры :
  cPers - ссылка на карточку сотрудника
  cApp  - назначение сотрудника
  wControlYear - год, по который формируются РП (обязательно использовать при заполнении РП в цикле)
  bUseDateFromAppoint - для первого РП будет использоваться не дата приема из карточки, а дата назначения (для перевода в другой филиал с единой отчетностью)
Возвращаемые значения:
0 - создание РП прошло успешно
1 - ошибка ссылки на сотрудника
2 - ошибка ссылки на назначение
3 - функция не может создать новый РП, т.к. дата начала выходит за дату увольнения/ухода с должности
4 - функция не может создать новый РП, т.к. дата начала выходит за заданный год
5 - не прошла вставка записи в таблицу
6 - дата начала РП оказалась пустой
#end
public function MakeNewWPForPers(cPers, cApp : comp; wControlYear : word; bUseDateFromAppoint : boolean): word;

#doc
Замена ссылки на назначение в РП при переводе с одного основного назначения на другое
#end
public procedure ChangeMainAppointForWP(cPers, cOldApp, cNewApp : comp; bWasDel: boolean);

#doc
Замена ссылки на назначение в РП при переводе с одного совместительства на другое
#end
public procedure ChangeSovnAppointForWP(cOldPers, cNewPers, cOldApp, cNewApp : comp; bWasDel: boolean);

#doc
 Процедура корректировки рабочих периодов при увольнении сотрудника
#end
public procedure CorrectWPWithDis(cPers, cApp : comp; dDisDate : date);

#doc
 Процедура корректировки рабочих периодов при внесении сдвига
#end
public procedure CorrectWPByShifts(cWorkPeriod : comp; bGoNextAnyWay : boolean);

#doc
 Процедура создания положенных отпусков для одного рабочего периода
 Параметр flParam:
  1,2 биты: ОБЯЗАТЕЛЬНО должен быть заполнен ОДИН из них - они отвечают за расчет стажа для количества дней отпуска
  3 бит: пересчет количества дней полагающихся отпусков
  4 бит: перенос "остатков за прошлые года"
#end
public procedure MakeNewOtpForOneWP(cWorkPeriod : comp; flParam : word);

#doc
 Процедура создания положенных отпусков для всех рабочих периодов сотрудника
#end
public procedure MakeNewOtpForAllWP(cPers : comp; flParam : word);

#doc
 Функция создания рабочих периодов для одного сотрудника по всем его назначениям до определенного года
 Параметры: cPers        - сотрудник, по которому производится расчет
            wControlYear - последний год создаваемых РП
 Возвращаемое значение: количество созданных РП
#end
public function MakeAllWPForPers(cPers : comp; wControlYear : word): integer;

#doc
 Процедура перерисовки РП в справочнике и позиционирования на первую запись
#end
public procedure prReReadWP;

#doc
 Процедура заполнения параметров интерфейса
#end
public procedure SetInfcParam (cPers, cApp : comp; wFlMode : word);

#doc
 Процедура создания рабочих периодов для всех сотрудника по назначениям до текущей даты - КОНВЕРТЕР
#end
procedure CreateAllWP;

#doc
Функция для выбора полагающегося отпуска для РП
 Параметры:
   cWorkPeriod    - РП для которого отбражаются полагающиеся отпуска
   dParam_GetDate - дата расчета остатка для полагающихся отпусков с типом "пропорционально..."
#end
public function GetVacationForWP(cWorkPeriod : comp; dParam_GetDate: date): comp;

#doc
Процедура отображения рабочих периодов, привязанных к записи планирования отпусков
#end
public procedure ShowWPForYearPlanOtpusk (cPlOtp : comp);

#doc
Процедура установки параметром перед использованием MakeNewWPForPers
#end
public procedure SetParamBeforeUseVShedul;

#doc
Функция получения рабочего периода, содержащего дату dOtchDate, по назначению cApp сотрудника;
по параметру bFindFirstWP развязка нужен только РП, в который попадает дата, или нужен первый РП на дату
#end
public function GetWPByDateAndApp(cPers,cApp : comp; dOtchDate : date; bFindFirstWP : boolean): comp;

#doc
Процедура отката рабочих периодов после удаления приказа
#end
public procedure prReturnWPforOrder(cContDoc_Appoint: comp);

#doc
Функция определения типа отпуска, основной или дополнительный
 Параметры:
   cPar_nRecKlOtpusk - nRec классификатора отпусков
 Возвращаемое значение:
   true  - основной отпуск
   false - НЕ основной отпуск (дополнительный, прочий, компенсация, целодневная неявка)
#end
public function funIsPrimaryType(cPar_nRecKlOtpusk: comp): boolean;

#doc
Процедура замены даты окончания рабочего периода с помощью искуственного сдвига
#end
public procedure ChangeDateEndForWP (cWorkPeriod : comp);

end;

objinterface IWorkPeriods1;
#doc
Функция для выбора полагающегося отпуска для РП
 Параметры:
   cWorkPeriod    - РП для которого отбражаются полагающиеся отпуска
   cPutVac        - полагающийся отпуск, на котором вызывается окно выбора
   dParam_GetDate - дата расчета остатка для полагающихся отпусков с типом "пропорционально..."
#end
public function GetVacationForWP_WithPosition(cWorkPeriod, cPutVac : comp; dParam_GetDate: date): comp;

#doc
 Процедура корректировки рабочих периодов после изменения даты приема на работу/даты начала совместительства
#end
public procedure CorrectAllWPByChangeAppDate(cPers, cApp : comp);

end;

objinterface IWorkPeriods2;

#doc
 Процедура установки флага о скрытии некоторых полей параметров формирования полагающихся отпусков
#end
public procedure SetCantUseFlOtp(iMask: integer);

#doc
 Процедура запуска формирования полагающихся отпусков по текущему/отчетному/всем рабочим периодам
#end
public procedure RunCreatePutVacation(cWorkPeriod, cPerson, cAppoint: comp; iFlMakeOtp: integer);

#doc
 Процедура формирования полагающихся отпусков по всем рабочим периодам назначения сотрудника
#end
public procedure MakeNewOtpForAllWPApoint(cPers, cAppoint : comp; flParam : word);

end;

objinterface IWorkPeriods3;

#doc
 Функция получения ссылки на лицевой счет из текущей записи WorkPeriods
 возвращаемое значение:
  nRec лицевого счета.
#end
public function fnGetWPLSchet: comp;
end;

objinterface IWorkPeriods4;

#doc
установка/снятие протекта
#end
procedure SetProtect(isProtect : boolean = True);
end;

vipinterface WorkPeriods implements IWorkPeriods, IWorkPeriods1, IWorkPeriods2, IWorkPeriods3, IWorkPeriods4
#ifdef ATL51
Licensed (free)
parameters (PersNrec : comp; AppNRec: comp; wMode: word)
#end
;

#end // _WorkPeriods_INCLUDED_
