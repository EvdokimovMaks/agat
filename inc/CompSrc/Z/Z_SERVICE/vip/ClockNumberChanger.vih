//------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Галактика 8.1 - Заработная плата
// Интерфейс замены табельного номера и подразделения
//------------------------------------------------------------------------------
#ifndef _CLOCKNUMBERCHANGER_VIH_INCLUDED_
#define _CLOCKNUMBERCHANGER_VIH_INCLUDED_

#component "Z_SERVICE"

// Поскольку из-за недоработок в атлантисе 5.4.40 нельзя апдейтить прямыми запросами на Оракле,
// решили подключать данный объект только на 9.1
// На 8.1 получено ускорение в 2.0 раза на MS SQL, и замедление в 1.2 раза на Оракле.

const
  cnc_SilentChange       = 1; // подавить выдачу сообщений об ошибках во время работы функции
  cnc_StrictChange       = 2; // выполнять замену также в переходах в межпериод и постоянных доплатах
  cnc_DisableStaffChange = 4; // подавить модификацию кадровской информации
  cnc_CreateVisual       = 8; // создавать собственный Visual в процедуре (по умолчанию используется созданный извне)
end;

#doc
<brief>Интерфейс замены табельного номера и подразделения</brief>

<h3>Инструкция для замены вызовов старых паскалевских функций на вызовы методов данного объекта.</h3>

<p>
Вызовы старых паскалевских функций ChangeClockNumber, StaffSafeChangeClockNumber, ChangeClockNumberCP
обрамлялись вызовами функций InitChange и DoneChange. Функция InitChange создавала Visual,
который крутился до тех пор, пока не вызывалось DoneChange, а уж функции замены табельного номера
просто меняли заголовок в этом Visual.
</p>
<p>
Теперешний метод <link function Z_SERVICE::IClockNumberChanger.ChangeClockNumber>IClockNumberChanger.ChangeClockNumber</link>
тоже требует того, чтобы на экране маячил Visual. Теперь существуют два способа достичь этого эффекта:
<ol>
  <li>
    Вызывать метод ChangeClockNumber с установленным флагом cnc_CreateVisual.
    В таком случае метод сам создаст внутри себя Rotate Visual, а по окончании выполнения уничтожит его.
    Достоинство данного способа - в простоте, недостаток - в мелькании Visual-ов
    при замене табельных у нескольких человек подряд.
  </li>
  <li>
    Если происходит замена табельного сразу нескольких человек, то целесообразно создать Rotate Visual извне,
    руководствуясь тем, как располагались ранее вызовы InitChange и DoneChange. Пример:
    <code>
    <br>//------------------------------------------------------------------------------
    <br>// Прежний код
    <br>//------------------------------------------------------------------------------
    <br>if (InitChange)
    <br>{
    <br>&nbsp&nbsp цикл
    <br>&nbsp&nbsp {
    <br>&nbsp&nbsp&nbsp&nbsp ChangeClockNumber(...);
    <br>&nbsp&nbsp }
    <br>
    <br>&nbsp&nbsp DoneChange;
    <br>}
    <br>
    <br>//------------------------------------------------------------------------------
    <br>// Новый код
    <br>//------------------------------------------------------------------------------
    <br>StartNewVisual(vtRotateVisual, vfTimer, '', 1);
    <br>цикл
    <br>{
    <br>&nbsp&nbsp CNC.ChangeClockNumber(...);
    <br>}
    <br>
    <br>StopVisual('', 0);
    </code>
  </li>
</ol>
</p>

<p>
Порядок замены паскалевских функций на вызовы метода ChangeClockNumber интерфейса IClockNumberChanger.
</p>
<ul>
  <li>
    Вместо старой паскалевской функции <b>ChangeClockNumber</b> следует использовать
    метод ChangeClockNumber с установленным флагом cnc_StrictChange
    и сброшенным флагом cnc_DisableStaffChange.
  </li>
  <li>
    Вместо старой паскалевской функции <b>ChangeClockNumberCP</b> следует использовать
    метод ChangeClockNumber со сброшенными флагами cnc_StrictChange и cnc_DisableStaffChange.
  </li>
  <li>
    Вместо старой паскалевской функции <b>StaffSafeChangeClockNumber</b> следует использовать
    метод ChangeClockNumber с установленными флагами cnc_StrictChange и cnc_DisableStaffChange.
  </li>
</ul>
#end
objInterface IClockNumberChanger;

#doc
<brief>Функция замены табельного номера и подразделения</brief>
Параметры:
<ul>
<li><i>AccountID</i> - NRec лицевого счета</li>
<li><i>NewNumericClockNumber</i> - новое значение числового табельного номера</li>
<li><i>NewCharacterClockNumber</i> - новое значение символьного табельного номера</li>
<li><i>NewCex</i> - новое значение ссылки на подразделение</li>
<li>
  <i>lFlags</i> - управляющие флаги. Параметр может представлять собой комбинацию (or)
  следующих флагов:
  <ul>
  <li>cnc_SilentChange       = 1; // подавить выдачу сообщений об ошибках во время работы функции</li>
  <li>cnc_StrictChange       = 2; // выполнять замену также в переходах в межпериод и постоянных доплатах</li>
  <li>cnc_DisableStaffChange = 4; // подавить модификацию кадровской информации</li>
  <li>cnc_CreateVisual       = 8; // создавать собственный Visual в процедуре (по умолчанию используется созданный извне)</li>
  </ul>
</li>
</ul>
Возвращаемое значение: успешность проведения операции
#end
function ChangeClockNumber(AccountID: comp; NewNumericClockNumber: TTabN; NewCharacterClockNumber: string;
                           NewCex: comp; lFlags: longint): boolean;

end;

#doc
Официальная реализация интерфейса <link objInterface Z_SERVICE::IClockNumberChanger>IClockNumberChanger</link>
#end
vipInterface ClockNumberChanger implements IClockNumberChanger licensed(free);

#end
