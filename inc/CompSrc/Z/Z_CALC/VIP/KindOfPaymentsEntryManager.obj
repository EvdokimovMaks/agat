//******************************************************************************
//                                                      (с) корпорация Галактика
// Галактика 8.1 - Заработная плата
// Менеджер входимостей видов оплат в отчеты
//******************************************************************************
//==============================================================================
// Префиксы:
//  f_  - ([f]ields) переменные-поля скринов
//  m_  - ([m]embers) интерфейсные переменные
//  p_  - ([p]rotected) запрещено непосредственно изменять
//  cf_ - ([c]alculated [f]ield) вычисляемые поля (выражения)
//==============================================================================

#ifndef _KindOfPaymentsEntryManager_obj_INCLUDED_
#define _KindOfPaymentsEntryManager_obj_INCLUDED_


#ifdef ComponentVersion
#component "Z_CALC"
#end

  #doc
    Менеджер входимостей видов оплат в отчеты </brief>
    Предназначен для инкапсуляции "навороченных" реализаций входимостей, когда в один char упаковывают
    различные сведения по входимостям по нескольким видам оплат.

    Интерфейс можно доработать. Пока он работает используя тезис, что один вид оплаты может входить только в
    одну колонку одного отчета. В принципе, возможны случаи, когда один вид оплаты входит в несколько колонок
    одного отчета.

    Логичнее было бы передавать просто ссылку на вид оплаты. Но здесь в методы передается буффер записи
    таблицы KLVIDOPL. Инкапсулировать модификацию полей БД нельзя. При попытке вызова методов, которые
    позволяют себе делать модификацию и апдейт из кода, который сам начал модификацию своего буффера записи
    таблицы, после апдейта из вызывающего кода произойдет ошибка исполнения "другой пользователь уже
    отредактировал запись". Разрулить эту ситуацию не сообщая сведения о внутренней реализации
    vip-интерфейсов невозможно. Поэтому... Еще одно ограничение: входимость должна храниться нигде кроме
    таблицы KLVIDOPL.
  #end
  objinterface IKindOfPaymentsEntryManager;
    #doc
      Устанавливает в какой отчет(nameOfReport) в какую колонку(columnNumber) входит указанный вид
      оплаты(kindOfPayment). </brief>
      Возвращает false, если по указанному отчету(nameOfReport) отсутсвует реализация.
      Не имеет смысл передавать параметром columnNumber - 0. Для задания "просто входимости" следует
      пользоваться методом SetEntryToReportB()
    #end
    public function SetColumnB(var kindOfPaymentBuffer: type$KLVIDOPL; nameOfReport: longint; columnNumber: byte): boolean;

    #doc
      Возвращает в какую колонку входит указанный вид оплаты(kindOfPayment) в указанном отчете(nameOfReport). </brief>
      Возвращает 0, если колонка не задана, но вид оплаты входит в отчет
      Возвращает -1, если вид оплаты не входит в отчет
      error - возвращает true, если по указанному отчету(nameOfReport) отсутствует реализация, либо по другой ошибке.
    #end
    public function GetColumnB(kindOfPaymentBuffer: type$KLVIDOPL; nameOfReport: longint; var error: boolean): integer;

    #doc
      Возвращает в какую колонку входит указанный вид оплаты(kindOfPayment) в указанном отчете(nameOfReport). </brief>
      Возвращает 0, если колонка не задана, но вид оплаты входит в отчет
      Возвращает -1, если вид оплаты не входит в отчет
      error - возвращает true, если по указанному отчету(nameOfReport) отсутствует реализация, либо по другой ошибке.
    #end
    public function GetColumn(p_vidOpl: tVidOpl; nameOfReport: longint; var error: boolean): integer;

    #doc
      Устанавливает входимость в отчет. </brief>
      Возвращает false, если для указанного отчета входимость не реализована, либо входимость задается в
      конкретную колонку.
      toAccount: boolean - устанавливать/снимать входимость
      ( методом SetColumnB() )
    #end
    public function SetEntryToReportB(var kindOfPaymentBuffer: type$KLVIDOPL; nameOfReport: longint; toAccount: boolean): boolean;

    #doc
      Возвращает true, если указанный вид оплаты(kindOfPayment) входит в указанный отчет(nameOfReport) </brief>
      error - возвращает true, если по указанному отчету(nameOfReport) отсутствует реализация, либо по другой ошибке.
    #end
    public function IsEntryToReportB(kindOfPaymentBuffer: type$KLVIDOPL; nameOfReport: longint; var error: boolean): boolean;

    #doc
      Возвращает true, если указанный вид оплаты(kindOfPayment) входит в указанный отчет(nameOfReport) </brief>
      error - возвращает true, если по указанному отчету(nameOfReport) отсутствует реализация, либо по другой ошибке.
    #end
    public function IsEntryToReport(p_vidOpl: tVidOpl; nameOfReport: longint; var error: boolean): boolean;

    #doc
      Сбрасывает данные о входимости по указанному отчету во всех видах оплат </brief>
      Возвращает false - при отсутствии реализации по указанному отчему, либо при других ошибках.
    #end
    public function ResetAllEntryDataForReport(nameOfReport: longint): boolean;

    #doc
      Для отладки. Возвращает "сырые данные" - данные элементарного типа, в которых хранится информация о
      входимости.
    #end
    public function Debug_GetDirtyBytes(kindOfPayment: tVidOpl; nameOfReport: longint; var error: boolean): variant;

  end; //objinterface IKindOfPaymentsEntryManager
#end
