/*
 ╔═══════════════════════════════════════════════════════════════════════════╗
 ║                     (c) 1994,97 корпорация ГАЛАКТИКА                      ║
 ║ Проект        : ГАЛАКТИКА                                                 ║
 ║ Система       : Заработная плата                                          ║
 ║ Назначение    : obj-интерфейс "Входимости оплаты"                         ║
 ║ Ответственный : Корзюк Виталий Францевич                                  ║
 ║ Параметры     : нет                                                       ║
 ╚═══════════════════════════════════════════════════════════════════════════╝
*/

#ifndef _PMNTENTS_INCLUDED_
#define _PMNTENTS_INCLUDED_

#ifdef ComponentVersion
  #component "z_calc"
#end

#doc
  Объектный интерфейс для доступа к информации о дополнительных входимостях
  видов оплат.</brief>

  <p>Под  "входимостью"  (Entering)  следует  понимать  ее номер (word),
  который состоит из кода группы (старший байт) и кода входимости (младший
  байт).</p>
#end
objinterface IPaymentEnterings;
  #doc
    Возвращает код группы входимости по ее номеру.
  #end
  function GetGroup(AEntering: word): byte;

  #doc
    Возвращает код входимости по ее номеру.
  #end
  function GetCode(AEntering: word): byte;

  #doc
    Возвращает номер входимости по ее группе и коду.
  #end
  function GetEntering(AGroup: byte; ACode: byte): word;

  #doc
    Запускает интерфейс просмотра дополнительных входимостей вида оплаты с
    системным кодом APaymentCode.
  #end
  function ViewEnterings(APaymentCode: word): boolean;

  #doc
    Удаляет все дополнительные входимости вида оплаты с системным кодом
    APaymentCode.</brief>

    <p>Возвращает код ошибки (см. tsXXXXX-константы).</p>
  #end
  function DeleteEnterings(APaymentCode: word): integer;

  #doc
    Удаляет дополнительную входимость с номером AEntering вида оплаты с
    системным кодом APaymentCode.</brief>

    <p>Возвращает код ошибки (см. tsXXXXX-константы).</p>
  #end
  function DeleteEntering(APaymentCode: word; AEntering: word): integer;

  #doc
    Добавляет виду оплаты с системным кодом APaymentCode дополнительную
    входимость с номером AEntering и признаками AInfo и AInfo1.</brief>

    <p>Возвращает код ошибки (см. tsXXXXX-константы).</p>
  #end
  function AddEntering(APaymentCode: word; AEntering: word; AInfo: longint; AInfo1: longint): integer;

  #doc
    Возвращает true, если вид оплаты оплата с системным кодом APaymentCode
    имеет дополнительную входимость с номером AEntering. В противном случае
    возвращает false.
  #end
  function HasEntering(APaymentCode: word; AEntering: word): boolean;

  #doc
    Возвращает true, если вид оплаты с системным кодом APaymentCode имеет
    входимость с номером AEntering; при этом в Info и Info1 возвращаются
    значения дополнительных признаков входимости. Иначе возвращает false.
  #end
  function HasEnteringEx(APaymentCode: word; AEntering: word; var Info: longint; var Info1: longint): boolean;
end;

#doc
  Объектный интерфейс для доступа к информации о дополнительных входимостях
  видов оплат.</brief>
  Дополнительная реализация.
#end
objInterface IPaymentEnterings1;
#doc
    Удаляет дополнительную входимость с номером AEntering .</brief>

    <p>Возвращает код ошибки (см. tsXXXXX-константы).</p>
#end
  function DeleteOneEntering(AEntering: word): integer;  
#doc
  Добавляет виду оплаты с системным кодом APaymentCode дополнительную
  входимость с номером AEntering и признаками AInfo и AInfo1.</brief>
  <p>Возвращает код ошибки (см. tsXXXXX-константы).</p>
#end
  function AddEnteringName(APaymentCode: word; AEntering: word; AInfo: longint; AInfo1: longint; AName: string): integer;
end;
#doc
  Объектный интерфейс браузера входимостей видов оплат.
#end

objinterface IPaymentEnteringsViewer;
  #doc
    Запускает интерфейс просмотра дополнительных входимостей видов оплат.
  #end
  procedure ViewEnterings;

  #doc
    Запускает интерфейс просмотра дополнительных входимостей вида оплаты с
    системным кодом APaymentCode.
  #end
  procedure ViewPaymentEnterings(APaymentCode: word);
end;

vipinterface PaymentEnterings implements IPaymentEnterings, IPaymentEnterings1
  licensed(free)
;

vipinterface PaymentEnteringsViewer implements IPaymentEnteringsViewer
#ifdef Gal8_0
  licensed(free)
#end
;

#end
