//------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Галактика ERP 9.1 - Заработная плата
// Объект для расчёта кол-ва сверхурочных часов
//------------------------------------------------------------------------------

#ifNdef _OVERWORKCALCULATOR_VIH_INCLUDED_
#define _OVERWORKCALCULATOR_VIH_INCLUDED_

#component "Z_WT"

#doc
<brief>Объект, инкапсулирующий алгоритм расчёта сверхурочных</brief>
<p>
  Объект отвечает за правильную выдачу кол-ва подённых и суммированных сверхурочных
  за произвольный интервал согласно настройкам системы (считать суммированные часы как есть
  либо распределять пропорционально дням переработки). <b>Суммированный учёт за период более месяца
  <font color="red">не поддерживается.</font></b> Объект считает всегда так, как если бы любой
  суммированный учёт был только в рамках месяца.
</p>
#end
//------------------------------------------------------------------------------
// TODO: В случае, если понадобится научить работать с суммированным учётом за любой интервал,
// НЕ РАЗВИВАТЬ ДАННЫЙ ОБЪЕКТ, а организовать решение в виде отдельного функционала ЗАНОВО!
// Функционал при этом должен быть устроен так, чтобы его можно было встроить в предварительную разноску.
// С предварительной разноски нужно снять при этом функцию как определения интервалов, за которые суммировать,
// так и подсчёта кол-ва часов по этим интервалам. Единственное, что останется в разноске, это
// разбивание либо не разбивание часов по переходам, согласно настройкам КВО.
// После чего данный объект УНИЧТОЖИТЬ, обращения к нему заменить на обращения к разработанному функционалу.
//------------------------------------------------------------------------------
objInterface IOverworkCalculator;
  #doc
  <brief>Кол-во сверхурочных по данным текущего загруженного табеля, в пределах месяца</brief>
  <p>
    Рассчитывает кол-во сверхурочных по данным текущего загруженного табеля в заданном диапазоне
    дней текущего месяца табеля. Лицевой счет, месяц и год задается предварительно при вызове
    функции <code><link externalFunction c_extfun.chm|LoadWorkingTable>LoadWorkingTable</link></code>.
  </p>
  <h3>Параметры</h3>
  <ul>
    <li><code>dayRangeStart</code> - первый день диапазона</li>
    <li><code>dayRangeEnd</code> - крайний день диапазона</li>
    <li><code>flags</code> - <link article c_extfun.chm|WTABELDOC_ControlFlags>управляющие флаги</link></li>
  </ul>
  <h3>См. также</h3>
  <code><link externalFunction c_extfun.chm|WT_GetHoursBwDaysEx>WT_GetHoursBwDaysEx</link></code> <br />
  #end
  function GetOverworkBwDays(dayRangeStart: byte; dayRangeEnd: byte; flags: longint): double;
  #doc
  <brief>Остаток сверхурочных по данным текущего загруженного табеля, в пределах месяца</brief>
  <p>
    Рассчитывает остаток сверхурочных по данным текущего загруженного табеля в заданном диапазоне
    дней текущего месяца табеля. Лицевой счет, месяц и год задается предварительно при вызове
    функции <code><link externalFunction c_extfun.chm|LoadWorkingTable>LoadWorkingTable</link></code>.
  </p>
  <h3>Параметры</h3>
  <ul>
    <li><code>dayRangeStart</code> - первый день диапазона</li>
    <li><code>dayRangeEnd</code> - крайний день диапазона</li>
    <li><code>flags</code> - <link article c_extfun.chm|WTABELDOC_ControlFlags>управляющие флаги</link></li>
  </ul>
  <h3>См. также</h3>
  <code><link externalFunction c_extfun.chm|WT_GetHoursBwDaysEx>WT_GetHoursBwDaysEx</link></code> <br />
  #end
  function GetOverworkRestBwDays(dayRangeStart: byte; dayRangeEnd: byte; flags: longint): double;

  #doc
  <brief>Кол-во сверхурочных по данным текущего загруженного табеля, в промежутке между двумя датами.</brief>
  <p>
    Рассчитывает кол-во сверхурочных по данным текущего загруженного табеля в заданном диапазоне дат.
    В отличие от <code>GetOverworkBwDays</code>,
    позволяет посчитать количество часов не только в рамках текущего месяца табеля,
    но и за иные периоды. По окончании расчета контекст табеля (текущий месяц и год) остается
    тем же, каким был до вызова данной функции, независимо от того, за какие периоды количество часов считалось.
    Лицевой счет задается предварительно при вызове функции
    <code><link externalFunction c_extfun.chm|LoadWorkingTable>LoadWorkingTable</link></code>.
  </p>
  <h3>Параметры</h3>
  <ul>
    <li><code>dateRangeStart</code> - дата первого дня диапазона</li>
    <li><code>dateRangeEnd</code> - дата крайнего дня диапазона</li>
    <li><code>flags</code> - <link article c_extfun.chm|WTABELDOC_ControlFlags>управляющие флаги</link></li>
  </ul>
  <h3>См. также</h3>
  <code><link externalFunction c_extfun.chm|WT_GetHoursBwDatesEx>WT_GetHoursBwDatesEx</link></code> <br />
  #end
  function GetOverworkBwDates(dateRangeStart: date; dateRangeEnd: date; flags: longint): double;
  #doc
  <brief>Остаток сверхурочных по данным текущего загруженного табеля, в промежутке между двумя датами.</brief>
  <p>
    Рассчитывает остаток сверхурочных по данным текущего загруженного табеля в заданном диапазоне дат.
    В отличие от <code>GetOverworkRestBwDays</code>,
    позволяет посчитать количество часов не только в рамках текущего месяца табеля,
    но и за иные периоды. По окончании расчета контекст табеля (текущий месяц и год) остается
    тем же, каким был до вызова данной функции, независимо от того, за какие периоды количество часов считалось.
    Лицевой счет задается предварительно при вызове функции
    <code><link externalFunction c_extfun.chm|LoadWorkingTable>LoadWorkingTable</link></code>.
  </p>
  <h3>Параметры</h3>
  <ul>
    <li><code>dateRangeStart</code> - дата первого дня диапазона</li>
    <li><code>dateRangeEnd</code> - дата крайнего дня диапазона</li>
    <li><code>flags</code> - <link article c_extfun.chm|WTABELDOC_ControlFlags>управляющие флаги</link></li>
  </ul>
  <h3>См. также</h3>
  <code><link externalFunction c_extfun.chm|WT_GetHoursBwDatesEx>WT_GetHoursBwDatesEx</link></code> <br />
  #end
  function GetOverworkRestBwDates(dateRangeStart: date; dateRangeEnd: date; flags: longint): double;

  #doc
  <brief>Получить итог сверхурочных за месяц</brief>
  <p>
    Рассчитывает кол-во сверхурочных по данным текущего загруженного табеля.
    Лицевой счет, месяц и год задается предварительно при вызове
    функции <code><link externalFunction c_extfun.chm|LoadWorkingTable>LoadWorkingTable</link></code>.
  </p>
  <p>
    Отличие от <code><link function Z_WT::IOverworkCalculator.GetOverworkBwDays>GetOverworkBwDays</link></code>
    состоит в том, что данная функция умеет работать с итогами, введёнными вручную.
    А при наложенном на табель <link article c_extfun.chm|WTABELDOC_AboutFilters>подённом фильтре</link>
    по переходу (<code><link externalFunction c_extfun.chm|WT_AddChangeFilter>WT_AddChangeFilter</link></code>/
    <code><link externalFunction c_extfun.chm|WT_SetAttributeFilter>WT_SetAttributeFilter</link></code>)
    данная функция позволяет достать вручную введенный итог по переходу.
  </p>

  <h3>Параметры</h3>
  <ul>
    <li><code>flags</code> - <link article c_extfun.chm|WTABELDOC_ControlFlags>управляющие флаги</link></li>
  </ul>

  <h3>См. также</h3>
  <code><link externalFunction c_extfun.chm|WT_GetHoursEx>WT_GetHoursEx</link></code> <br />
  #end
  function GetOverwork(flags: longint): double;
  #doc
  <brief>Получить итог по остатку сверхурочных за месяц</brief>
  <p>
    Рассчитывает кол-во сверхурочных по данным текущего загруженного табеля.
    Лицевой счет, месяц и год задается предварительно при вызове
    функции <code><link externalFunction c_extfun.chm|LoadWorkingTable>LoadWorkingTable</link></code>.
  </p>
  <p>
    Отличие от <code><link function Z_WT::IOverworkCalculator.GetOverworkRestBwDays>GetOverworkRestBwDays</link></code>
    состоит в том, что данная функция умеет работать с итогами, введёнными вручную.
    А при наложенном на табель <link article c_extfun.chm|WTABELDOC_AboutFilters>подённом фильтре</link>
    по переходу (<code><link externalFunction c_extfun.chm|WT_AddChangeFilter>WT_AddChangeFilter</link></code>/
    <code><link externalFunction c_extfun.chm|WT_SetAttributeFilter>WT_SetAttributeFilter</link></code>)
    данная функция позволяет достать вручную введенный итог по переходу.
  </p>

  <h3>Параметры</h3>
  <ul>
    <li><code>flags</code> - <link article c_extfun.chm|WTABELDOC_ControlFlags>управляющие флаги</link></li>
  </ul>

  <h3>См. также</h3>
  <code><link externalFunction c_extfun.chm|WT_GetHoursEx>WT_GetHoursEx</link></code> <br />
  #end
  function GetOverworkRest(flags: longint): double;

  #doc
  <brief>Очистить кэш объекта</brief>
  <p>
    Данный объект устроен таким образом, что при последовательном вызове одной и той же функции
    с одними и теми же входными параметрами вычисление значений произойдёт только при первом вызове,
    а оставшиеся вызовы будут брать готовый результат. Такой же эффект наблюдается и при вызове
    "одинаковых" функций: <code>GetOverworkBwDays</code> и <code>GetOverworkRestBwDays</code>;
    <code>GetOverworkBwDates</code> и <code>GetOverworkRestBwDates</code>.
    Данная процедура служит для того, чтобы заставить объект при следующем вызове подсчёта часов
    произвести расчеты заново.
  </p>
  <p>
    По факту потребность в данной функции возникает только тогда, когда меняется
    <link article c_extfun.chm|WTABELDOC_AboutFilters>подённый фильтр табеля</link>,
    поскольку текущий лицевой счёт табеля, месяц и год учитываются при запоминании результатов
    как своеобразные "неявные параметры" вызова функций.
  </p>
  #end
  procedure DropCaches;
end;

vipInterface OverworkCalculator implements IOverworkCalculator licensed(free);

#endif
