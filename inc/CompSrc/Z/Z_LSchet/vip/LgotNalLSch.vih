//******************************************************************************
//                                                      (с) корпорация Галактика
// Галактика 8.10 - Заработная плата
// Объявление реализации объектного интерфейса
//******************************************************************************
#ifndef _LGOTNALLSCH_VIH_INCLUDED_
#define _LGOTNALLSCH_VIH_INCLUDED_


#include Marks.vih

#ifdef ComponentVersion
  #component "Z_LSCHET"
#end

type tTaxAbatementRec = record
    // владелец льготы
    Owner:        comp;
    // вид налога
    TaxKind:      word;
    // год ввода льготы
    Year:         integer;
    // месяц ввода льготы
    Month:        byte;
    // вид замещающего налога
    SubstTaxKind: word;
    // льготный процент
    Percent:      double;
    // наличие льготы обусловлено уплатой единого налога на вмененный доход
    IsConditionedByENVD: boolean;
    // замещающая шкала ставок
    Nomscale: word;
    //причина
    Reason : word;
end;

  #doc
    Объектный интерфейс для определения статуса иностранца по льготам  на налоги на ФОТ
  #end
objInterface IStatusInostr;
  #doc
    Является не застрахованным иностранцем на определенную дату
  #end
  function GetStatusInostrZastrOfDate(cLschet: comp; dDateSearch: date): boolean;

  #doc
    Является не застрахованным иностранцем на определенный период
  #end
  function GetStatusInostrZastrBetweenDates(cLschet: comp; dDateStartSearch: date; dDateEndSearch: date): boolean;
 #doc
    Является не застрахованным иностранцем на определенную дату
  #end
  function GetStatusInostrNoZastrOfDate(cLschet: comp; dDateSearch: date): boolean;

  #doc
    Является не застрахованным иностранцем на определенный период
  #end
  function GetStatusInostrNoZastrBetweenDates(cLschet: comp; dDateStartSearch: date; dDateEndSearch: date): boolean;

end;

  #doc
    Объектный интерфейс для определения статуса иностранца (любого) 
    и временно пребывающего иностранца, по кот. не считаются взносы
  #end
objInterface IStatusInostr_All;
  #doc
    Является не застрахованным иностранцем на определенную дату
  #end
  function GetStatusInostrVremPrebDo6Mes(cLschet: comp; dDateSearch: date): boolean;
  #doc
    Является ли иностранцем на определенную дату
  #end
  function GetStatusInostr(cLschet: comp; dDateSearch: date): boolean;
end;

objInterface IStatusInvValidatorOptions;
  #doc
    Задать параметры валидатора лицевых счетов по наличию инвалидности
  #end
  procedure Setup(pBegDate: Date; pEndDate: Date);
end;

  #doc
    Объектный интерфейс для определения статуса инвалидности по льготам  на налоги на ФОТ
  #end
objInterface ILgotNalLSch;

  #doc
    Имеется ли инвалидность у лицевого счета в расчетный период
  #end
  function GetStatusInv(cLschet: comp): boolean;

  #doc
    Имеется ли инвалидность у лицевого счета на определенную дату
  #end
  function GetStatusInvOfDate(cLschet: comp; dDateSearch: date): boolean;

  #doc
    Имеется ли инвалидность у лицевого счета на определенный период
  #end
  function GetStatusInvBetweenDates(cLschet: comp; dDateStartSearch: date; dDateEndSearch: date): boolean;

  #doc
    Позиционирование на запись о действующей льготе по виду налога на определенную дату
  #end
  function GetRecordAbatementTax(cLSchet: comp; wVidPer:word; dDateSearch: date): tTaxAbatementRec;

  #doc
    Очистить данные из временных таблиц
  #end
  function ClearCash: boolean;

  #doc
    Очистить данные из временных таблиц по лицевому счету
  #end
  function ClearCashLSchet(cLschet: comp): boolean;

end; //objinterface ILgotNalLSch;


  objInterface ILgotNalLSchExt1;
    #doc
    Позиционирование на запись о действующей льготе по виду налога на определенную дату
    #end
    function GetRecordAbatementTaxExt(cLSchet: comp; wVidPer:word; dDateSearch: date): tTaxAbatementRec;
  end;

vipinterface LgotNalLsch
  implements
    ILgotNalLsch, IPersonalAccountValidator, IStatusInvValidatorOptions, IStatusInostr, ILgotNalLSchExt1, IStatusInostr_All 
#ifdef ATL51
  licensed (free)
#end
;

#end
