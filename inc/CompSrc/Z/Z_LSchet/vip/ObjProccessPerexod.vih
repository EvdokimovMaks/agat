//------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Галактика 8.1 - Заработная плата
// Объект для типовых операций с переходами в межпериод
//------------------------------------------------------------------------------

#ifndef _OBJPROCCESSPEREXOD_VIH_INCLUDED_
#define _OBJPROCCESSPEREXOD_VIH_INCLUDED_

#include WTReformer.vih // Переформирователь табеля

#ifdef ComponentVersion
  #component "z_Lschet"
#end

#doc
  Объект для обработки переходов в межпериод
#end
objInterface IObjProccessPerexod;
#doc
 функция создания нового перехода (параметры - ссылка на Лицевой счет, дата изменения и дата окончания)
 возвращает ссылку на новую запись
#end
function CreateNewPerexod(cLschet: comp; DateBegin, DateEnd: date): comp;
#doc
 функция удаляет переход по ссылке
#end
function DeletePerexod(cPerexod: comp): boolean;
#doc
 функция копирует переход в новую запись
 возвращает Nrec новой записи о переходе с указаными датой изменения и окончания
#end
function CopyPerexod(cSourcePerexod: comp; DateBegin, DateEnd: date; ShowErr: boolean): comp;
#doc
 функция копирует переход в новую запись другому сотруднику
 возвращает Nrec новой записи о переходе с указаными датой изменения и окончания
#end
function CopyPerexodToOtherLs(cSourcePerexod, cNewLSchet: comp; DateBegin, DateEnd: date; ShowErr: boolean): comp;
#doc
 обновление дат перехода
#end
function UpdatePerexod(cPerexod: comp; DateBegin, DateEnd: date): boolean;
#doc
 Наследование аналитик
#end
function SetAnalitic(cPerexod, cPrikaz : comp): boolean;
#doc
 функция просмотра записи о переходе
 параметры Lschet.Nrec, Lschet.Cex(подразделение) и ссылка на переход
 возвращает true, если переход есть
#end
function ViewPerexod(cLschet, cCex, cPerexod: comp): boolean;

end;

#doc
  Расширение интерфейса ObjProccessPerexod
#end
objinterface IObjProccessPerexod2;
  #doc
    <brief>Создает копию перехода</brief>
    Функция создает копию указанного перехода, и возвращает ссылку на новый переход.
    Даты начала/окончания нового перехода тоже копируются из старого.
    Табель не трогается. Проверка на пересечение с другими переходами
    и выдача каких-либо сообщений в лог или на экран не производится.

    Параметры:
    <ul>
      <li><i>cSourcePerexod</i> - ссылка на исходный переход</li>
    </ul>

    <i>Возвращаемое значение</i> - ссылка на копию, или нулевая ссылка в случае ошибки.
  #end
  function CreatePerexodCopy(cSourcePerexod: comp): comp;

  #doc
    <brief>Удалить дополнительные аналитики из перехода</brief>
    Функция удаляет записи дополнительных аналитик из перехода.

    Параметры:
    <ul>
      <li><i>cPerexod</i> - ссылка на переход</li>
    </ul>

    <i>Возвращаемое значение</i> - а было ли удалено.
  #end
  function ClearExtrAnalytics(cPerexod: comp): boolean;

  #doc
    <brief>Привязать к переходу внешние атрибуты на указанную дату</brief>

    Метод работает по аналогии с методом SetDefault объектного интерфейса IChangeHelper,
    но служит для внешних атрибутов, не хранящихся в самой таблице Perexod.

    К таким атрибутам относятся:
    - Составляющие сложного корректирующего коэффициента
    - Разбивка по источникам финансирования

    Параметры:
    <ul>
      <li><i>cPerexod</i> - ссылка на переход</li>
      <li><i>onDate</i> - дата, на которую искать внешние атрибуты</li>
      <li><i>ignoreChanges</i> - игнорировать ли другие переходы в межпериод</li>
    </ul>

    <i>Возвращаемое значение</i> - успешно ли прошла операция.
  #end
  function BindExtrAttrOnDate(cPerexod: comp; onDate: date; ignoreChanges: boolean): boolean;
end;

#doc
  Расширение интерфейса IObjProccessPerexod
#end
objInterface IObjProccessPerexod3;
  #doc
    <brief>Удаление перехода с отложенным переформированием табеля</brief>

    Функция удаляет переход и кладёт период действия перехода в очередь на переформирование
    табелей (объект типа <link objinterface Z_WT::IWorkingTableReformer>IWorkingTableReformer</link>).
    Функция предназначена для того, чтобы при множественном удалении переходов
    табели учета рабочего времени можно было переформировать в пакетном режиме.

    Параметры:
    <ul>
      <li><i>cPerexod</i> - ссылка на переход</li>
      <li><i>WTR</i> - ссылка на <link objinterface Z_WT::IWorkingTableReformer>объект для пакетного переформирования табелей</link>. Можно передавать nullref.</li>
    </ul>

    <i>Возвращаемое значение</i> - успешно ли прошла операция.
  #end
  function DeletePerexodWithDelayedWTReform(cPerexod: comp; WTR: IWorkingTableReformer): boolean;
end;

#doc
  Расширение интерфейса IObjProccessPerexod
#end
objInterface IObjProccessPerexod4;
  #doc
    <brief>Конвертация абсолютного перехода в полупрозрачный</brief>

    Функция преобразует абсолютный переход в полупрозрачный.

    Параметры:
    <ul>
      <li><i>cPerexod</i> - ссылка на переход, который нужно преобразовать</li>
    </ul>

    <i>Возвращаемое значение</i> - успешно ли прошла операция.
  #end
  function ConvertAbsolutePerexodToTranslucent(cPerexod: comp): boolean;

  #doc
    <brief>Слияние двух переходов</brief>

    Объединение данных из двух переходов. Объединение касается только изменяемых параметров; даты,
    ссылка на лицевой счет и т.п. здесь не анализируются.
    За основу берется переход cMainPerexod, и на него накатываются значения параметров,
    изменяемых переходом cAdditionalPerexod. Результат сохраняется в переходе cMainPerexod.

    Параметры:
    <ul>
      <li><i>cMainPerexod</i> - переход, на который накатываются изменения; он же переход-результат</li>
      <li><i>cAdditionalPerexod</i> - переход, изменения из которого накатываются на исходный переход</li>
    </ul>

    <i>Возвращаемое значение</i> - успешно ли прошла операция.
  #end
  function MergeTwoPerexods(cMainPerexod, cAdditionalPerexod: comp): boolean;
end;

vipInterface ObjProccessPerexod implements IObjProccessPerexod, IObjProccessPerexod2,
                                           IObjProccessPerexod3, IObjProccessPerexod4
#ifdef ATL51
Licensed(Free)
#end
;

#endif
