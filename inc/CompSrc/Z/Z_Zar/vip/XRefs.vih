//------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Галактика 8.10 - Заработная плата
// Работа с перекрестными ссылками
//------------------------------------------------------------------------------

#ifndef _XREFS_INCUDED_
#define _XREFS_INCUDED_

#component "Z_Zar"

#doc
Работа с перекрестными ссылками
#end
ObjInterface IXRefs;

  function Exists(XRefType: word; PrimaryRef, SecondaryRef: comp): boolean;

  #doc
  создать перекрестную ссылку
  #end
  function Ins(XRefType: word; PrimaryRef, SecondaryRef: comp): integer;

  #doc
  удалить перекрестную ссылку
  #end
  function Del(XRefType: word; PrimaryRef, SecondaryRef: comp): integer;

  #doc
  удалить перекрестные ссылки с PrimaryRef в качестве ссылки на первичный об]ект
  #end
  function DelByPrimary(XRefType: word; PrimaryRef: comp): integer;

  #doc
  удалить перекрестные ссылки с SecondaryRef в качестве ссылки на вторичный об]ект
  #end
  function DelBySecondary(XRefType: word; SecondaryRef: comp): integer;

  #doc
  удалить все перекрестные ссылки данного типа
  #end
  function DelByType(XRefType: word): integer;

  #doc
  проверить существование перекрестных ссылок с SecondaryRef в качестве ссылки на вторичный об]ект
  #end
  function HasPrimary(XRefType: word; SecondaryRef: comp): boolean;

  #doc
  проверить существование перекрестных ссылок с PrimaryRef в качестве ссылки на первичный об]ект
  #end
  function HasSecondary(XRefType: word; PrimaryRef: comp): boolean;

  #doc
  проверить существование косвенной связи между PrimaryRef и SecondaryRef
  #end
  function HaveIndirectRef(XRefType: word; PrimaryRef, SecondaryRef: comp): boolean;

  #doc
  проверить существование цикла в цепочке перекрестных ссылок, начинающихся
  с Ref в качестве ссылки на первичный (PrimaryRef = true)
  или вторичный (PrimaryRef = false) об]ект
  #end
  function HasCircularRef(XRefType: word; Ref: comp; PrimaryRef: boolean): boolean;
end;

#doc
Итератор по перекрестным ссылкам
#end
ObjInterface IXRefsIterator;

  #doc
  перейти на первую перекрестную ссылку
  #end
  function First(AXRefType: word): boolean;

  #doc
  перейти на следующую перекрестную ссылку
  #end
  function Next: boolean;

  #doc
  вернуть ссылку на первичный об]ект
  #end
  function GetPrimary: comp;

  #doc
  вернуть ссылку на вторичный об]ект
  #end
  function GetSecondary: comp;

End;

#doc
Итератор по смежным ссылкам (для просмотра всех вторичных по первичной или наоборот)
#end
ObjInterface IAdjacentRefsIterator;

  #doc
  перейти на первую смежную ссылку
  #end
  function First(AXRefType: comp; ARef: comp): boolean;

  #doc
  перейти на следующую смежную ссылку
  #end
  function Next: boolean;

  #doc
  вернуть ссылку
  #end
  function GetAdjacent: comp;

End;

#doc
Работа с датированными данными
#end
ObjInterface IDated;
  
  #doc
  возвращает дату и время датирования
  #end
  function GetDateTime: _DateTime;

end;

#doc
Обработка датированных перекрестных ссылок
#end
ObjInterface IDatableXRefs(IXRefs);

  #doc
  создать датированную перекрестную ссылку
  #end
  function InsDated(XRefType: word; PrimaryRef, SecondaryRef: comp; XDateTime: _DateTime): integer;

  #doc
  обновить дату перекрестной ссылки
  #end
  function UpdateDate(XRefType: word; PrimaryRef, SecondaryRef: comp; XDateTime: _DateTime): integer;

End;

//------------------------------------------------------------------------------
VipInterface XRefs
  implements IXRefs, IDatableXRefs
  licensed(free);

VipInterface XRefsIterator
  implements IXRefsIterator, IDated
  licensed(free);

VipInterface PrimaryRefsIterator
  implements IAdjacentRefsIterator, IDated
  licensed(free);

VipInterface SecondaryRefsIterator
  implements IAdjacentRefsIterator, IDated
  licensed(free);

#end
