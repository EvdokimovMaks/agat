//------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Галактика 7.12 - Заработная плата
// Прикладные контексты
//------------------------------------------------------------------------------

#ifndef _CONTEXTS_OBJ_INCLUDED_
#define _CONTEXTS_OBJ_INCLUDED_

#component "Z_Zar"

//******************************************************************************
#doc
  Объектный интерфейс сессии прикладного контекста.</brief>

  <p>Экземпляры реализаций данного объектного интерфейса никогда не должны
  создаваться вручную.</p>

  <p>Для ознакомления с базовыми понятиями см. комментарии в pas\money\contexts.pas</p>

  <p>"Сессия контекста" инкапсулирует хранение и освобождение экспортируемых в
  vip ссылок на одноименный com-интерфейс.</p>
#end
objinterface IContextSession;
  #doc
    #doc_internal
  #end
  procedure SetHandle(Value: longint);

  #doc
    #doc_internal
  #end
  function GetHandle: longint;
end;

//******************************************************************************
#doc
  Объектный интерфейс списка прикладных контекстов.</brief>

  <p>"Список сессий" - это враппер для функций
  захвата и освобождения зарегистрированных контекстов. Существует единственная
  реализация этого obj-интерфейса: ContextList.</p>

  <p>Типичный пример использования механизма контекстов:</p>
  <pre class=example>
  ##include Contexts.vih

  interface Test;
    create view x
      var
        CS: IContextSession;
        ...
    as select
    ...
    ;
    ...

    handleevent
      cmInit:
      {
        // захват зарегистрированных контекстов
        var CL: ContextList;

        if not CL.Add(CS, 'RegisteredContext1')
        or not CL.Add(CS, 'RegisteredContext2')
        or not ...
        {
          abort;
          exit;
        }
      }
      ...
    end;
  end.
  </pre>

  <p>Обратите внимание на то, что никаких дополнительных действий по закрытию
  сессии и освобождению связанных с ней контекстов выполнять не нужно - это
  будет сделано автоматически: в момент разрушения логической таблицы
  отработает код очистки переменной CS. В этом коде будет выполнено
  освобождение импортированной ссылки на com-интерфейс сессии, что, в свою
  очередь, приведет к освобождению связанных с ним контекстов.</p>
#end
objinterface IContextList;
  #doc
    Захватывает прикладную сессию.</brief>

    <p>Имя контекста передается в ContextName. Возвращает true в случае
    удачного захвата. В ContextSession передаётся ссылка на сессию. Если в
    момент вызова метода сессия не была инициализирована, в ContextSession
    возвращается ссылка на новую сессию.</p>
  #end
  function Add(var ContextSession: IContextSession; const ContextName: string): boolean;

  #doc
    Освобождает все захваченные сессией контексты.
  #end
  procedure Close(const ContextSession: IContextSession);
end;

#end
