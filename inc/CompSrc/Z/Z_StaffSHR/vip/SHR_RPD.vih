/*
                      (c) 1994,2003 корпорация ГАЛАКТИКА
  Проект        : ГАЛАКТИКА
  Система       : Управление персоналом
  Назначение    : объектный интерфейс реализации приказа по ШР
*/

#ifndef _SHR_RPD_INCLUDED_
#define _SHR_RPD_INCLUDED_

#ifdef ComponentVersion
#component "Z_StaffSHR"
#end

#doc
  все РПД
#end

var bUpdateSotr: boolean;
var bShowUpdateSotr: boolean;

objinterface ISHR_RPD;
#doc
  Процедура установки начальных параметров для формирования логической таблицы
  содержимого приказа
#end
  procedure SetRelation(Value: comp);

#doc
  Процедура установки режима работы с интерфейсом. Актуальна при работе из других
  мест, не "перечня приказов". cStrCont - ссылка на сотрудника, если приказ групповой
#end
  procedure SetView(ModView: word; cStrCont: comp);


#doc
  Проверка возможно ли удаление приказа
#end
  function CheckDeleteOrder: boolean;
#doc
  Процедура удаления приказа
#end
  function DeleteOrder: boolean;

#doc
  Процедура проверки корректности заполнения приказа
#end
  function CheckOrder: boolean;

#doc
  Процедура утверждения приказа по текущему работнику (по таблице StrCont)
#end
  Function ConfirmOrder: boolean;

#doc
  Процедура печати приказа( пока 0: печатаем через отдельный интерфейс; что-то другое - ссылка на форму: CommomRep)
#end
  procedure PrintOrder(typePrint: LongInt; fcEnter: word);

#doc
  Процедура, сообщающая интерфейсу-владельцу об изменении данных
#end
  event procedure OnIdle(Sender: comp); // сообщили об этом

#doc
  Процедура, которая находит ContDoc
#end
  event procedure GetCont(cPart: comp; cCont: comp); // сообщили об этом
#doc
  Процедура перерисовки доступных панелей
#end
  procedure ReDrawPanels;

#doc
  Безусловная (жесткая) перерисовка всех панелей (ReReadRecord)
#end
  procedure ReReadRecords;
end;

// Создание структурного подразделения
vipinterface SHR_RPD_1
  implements ISHR_RPD
    Licensed(Free);
// Ликвидация структурного подразделения
vipinterface SHR_RPD_2
  implements ISHR_RPD
    Licensed(Free);
// Переименование структурного подразделения
vipinterface SHR_RPD_3
  implements ISHR_RPD
    Licensed(Free);
// Переподчинение структурного подразделения
vipinterface SHR_RPD_4
  implements ISHR_RPD
    Licensed(Free);
// Создание ставки
vipinterface SHR_RPD_20
  implements ISHR_RPD
    Licensed(Free);
// Ликвидация ставки
vipinterface SHR_RPD_21
  implements ISHR_RPD
    Licensed(Free);
// Изменение количества ставок
vipinterface SHR_RPD_22
  implements ISHR_RPD
    Licensed(Free);
// Изменение атрибутов ставки
vipinterface SHR_RPD_23
  implements ISHR_RPD
    Licensed(Free);
//  Добавление доплаты
vipinterface SHR_RPD_30
  implements ISHR_RPD
    Licensed(Free);
// Снятие доплаты
vipinterface SHR_RPD_31
  implements ISHR_RPD
    Licensed(Free);
// Изменение доплаты
vipinterface SHR_RPD_32
  implements ISHR_RPD
    Licensed(Free);
// Прочие
vipinterface SHR_RPD_100
  implements ISHR_RPD
    Licensed(Free);
#end
