// =============================================================================
//                                                     (c)  корпорация Галактика
// Галактика 7.11 - Производственный контур
// Описание интерфейса-объекта "Движок на экспорт (XML)"
// =============================================================================

#component "M_EIXML"

//******************************************************************************
// ObjInterface oEIExpEngine_CF
#doc
 Описание интерфейса-объекта "Движок на экспорт (XML)"</brief>
#end
#ifndef __Def_EIExpEngine_CF__
#define __Def_EIExpEngine_CF__

ObjInterface oEIExpEngine_CF;

//------------------------------------------------------------------------------
#doc
 Освобождение ресурсов</brief>
#end
Procedure Done;

//------------------------------------------------------------------------------
#doc
 Инициализация</brief><br>
 Параметры:<br>
   acEIExpSet   - Ссылка на настройку экспорта<br>
   awFlExp      - Группа флагов экспорта:<br>
     1: экспортировать данные<br>
     2: создавать метаописание<br>
     4: не выдавать запрос о перезаписи существующего файла<br>
   asFile       - Имя создаваемого файла, включая путь<br>
   acEIProtocol - Ссылка на протокол экспорта (передается/возвращается)<br>
 Результат:<br>
   True, если успешно, иначе - False<br>
#end
Function Init(acEIExpSet: comp; awFlExp: word; asFile: string; acEIProtocol: comp): boolean;

//------------------------------------------------------------------------------
#doc
 Определение, были ли фатальные ошибки при выполнении экспорта данных</brief><br>
 Результат:<br>
   True, если были, иначе - False<br>
#end
Function CheckFatalErrorByRun: boolean;

//------------------------------------------------------------------------------
#doc
 Установка кода и описания фатальной ошибки при выполнении экспорта данных</brief><br>
 Параметры:<br>
   asErrorDescript - Состояние выполнения процесса экспорта<br>
#end
Procedure SetFatalErrorByRun(asErrorDescript: string);

//------------------------------------------------------------------------------
#doc
 Чтение описания последней фатальной ошибки при выполнении экспорта данных</brief><br>
 Результат:<br>
   True, если успешно, иначе - False<br>
#end
Function GetLastFatalErrorByRun: string;

//------------------------------------------------------------------------------
#doc
 Создание DOM-документа</brief><br>
 Результат:<br>
   True, если успешно, иначе - False<br>
#end
Function CreateDOMDocument: boolean;

//------------------------------------------------------------------------------
#doc
 Сохранение DOM-документа</brief><br>
 Результат:<br>
   True, если успешно<br>
#end
Function SaveDOMDocument: boolean;

//------------------------------------------------------------------------------
#doc
 Добавление класса в очередь для экспорта в DOM-документ</brief><br>
 Параметры:<br>
   asName - Имя<br>
 Результат:<br>
   True, если учпешно, иначе - False<br>
#end
Function PushClassForExp(asName: string): boolean;

//------------------------------------------------------------------------------
#doc
 Чтение класса из очереди для экспорта в DOM-документ</brief><br>
 Параметры:<br>
   asName - Имя<br>
 Результат:<br>
   True, если учпешно, иначе - False<br>
#end
Function PopClassForExp(var asName: string): boolean;

//------------------------------------------------------------------------------
#doc
 Чтение количества классов в очереди для экспорта в DOM-документ</brief><br>
 Результат:<br>
   Количество классов в очереди для экспорта в DOM-документ<br>
#end
Function GetCountClassForExp: longint;

//------------------------------------------------------------------------------
#doc
 Добавление объекта в очередь для экспорта в DOM-документ</brief><br>
 Параметры:<br>
   asClassName - Имя класса<br>
   asObjID     - Идентификатор объекта<br>
 Результат:<br>
   True, если учпешно, иначе - False<br>
#end
Function PushObjForExp(asClassName: string; asObjID: string): boolean;

//------------------------------------------------------------------------------
#doc
 Чтение объекта из очереди для экспорта в DOM-документ</brief><br>
 Параметры:<br>
   asClassName - Имя класса<br>
   asObjID     - Идентификатор объекта<br>
 Результат:<br>
   True, если учпешно, иначе - False<br>
#end
Function PopObjForExp(var asClassName: string; var asObjID: string): boolean;

//------------------------------------------------------------------------------
#doc
 Чтение количества объектов в очереди для экспорта в DOM-документ</brief><br>
 Результат:<br>
   Количество объектов в очереди для экспорта в DOM-документ<br>
#end
Function GetCountObjForExp: longint;

//------------------------------------------------------------------------------
#doc
 Добавление класса в список экспортированных в DOM-документ</brief><br>
 Параметры:<br>
   asName - Имя<br>
 Результат:<br>
   True, если учпешно, иначе - False<br>
#end
Function PushExpClass(asName: string): boolean;

//------------------------------------------------------------------------------
#doc
 Добавление объекта в список экспортированных в DOM-документ</brief><br>
 Параметры:<br>
   asClassName - Имя класса<br>
   asObjID     - Идентификатор объекта<br>
 Результат:<br>
   True, если учпешно, иначе - False<br>
#end
Function PushExpObj(asClassName: string; asObjID: string): boolean;

//------------------------------------------------------------------------------
#doc
 Освобождение ресурсов для узла DOM-документа</brief><br>
 Параметры:<br>
   aliNode - Handle узла<br>
 Результат:<br>
   True, если успешно, иначе - False<br>
#end
Function ReleaseDOMNode(var aliNode: longint): boolean;

//------------------------------------------------------------------------------
#doc
 Добавление класса в DOM-документ</brief><br>
 Параметры:<br>
   aliNodeParent - Handle узла-родитиеля<br>
   asName        - Имя<br>
   asCaption     - Наименование<br>
 Результат:<br>
   Handle сформированного узла "<Class>"<br>
#end
Function AddClass(aliNodeParent: longint; asName: string; asCaption: string): longint;

//------------------------------------------------------------------------------
#doc
 Добавление коллекции в DOM-документ</brief><br>
 Параметры:<br>
   aliNodeParent - Handle узла-родитиеля<br>
   asName        - Имя<br>
   asCaption     - Наименование<br>
   asChildClass  - Класс элементов<br>
 Результат:<br>
   Handle сформированного узла "<Collection>"<br>
#end
Function AddCollection(aliNodeParent: longint; asName: string; asCaption: string; asChildClass: string): longint;

//------------------------------------------------------------------------------
#doc
 Добавление объекта в DOM-документ</brief><br>
 Параметры:<br>
   aliNodeParent - Handle узла-родитиеля<br>
   asName        - Имя<br>
   asClassName   - Имя класса<br>
   asID          - Идентификатор объекта<br>
 Результат:<br>
   Handle сформированного узла "<Object>"<br>
#end
Function AddObject(aliNodeParent: longint; asName: string; asClassName: string; asID: string): longint;

//------------------------------------------------------------------------------
#doc
 Добавление свойства в DOM-документ</brief><br>
 Параметры:<br>
   aliNodeParent - Handle узла-родитиеля<br>
   awDataType    - Тип значения (0 - строка, 1 - число, 2 - дата, 3 - мемо, 4 - ссылка)<br>
   asName        - Имя<br>
   asCaption     - Наименование<br>
 Результат:<br>
   Handle сформированного узла "<property>"<br>
#end
Function AddProperty(aliNodeParent: longint; awDataType: word; asName: string; asCaption: string): longint;

//------------------------------------------------------------------------------
#doc
 Добавление значения свойства в DOM-документ</brief><br>
 Параметры:<br>
   aliNodeParent - Handle узла-родитиеля<br>
   awDataType    - Тип значения (0 - строка, 1 - число, 2 - дата, 3 - мемо, 4 - ссылка)<br>
   asPropName    - Имя свойства<br>
   asValue       - Значение<br>
   asRltClass    - Имя класса для связанного объекта<br>
   aliMemoHandle - Ссылка на объект File, полученная методом Handle (для чтения содержимого мемо-полей)<br>
 Результат:
   Handle сформированного узла "<Class>"
#end
Function AddPropValue(aliNodeParent: longint; awDataType: word; asPropName: string;
  asValue: string; asRltClass: string; aliMemoHandle: longint): longint;

//------------------------------------------------------------------------------
#doc
 Добавление варианта значения свойства в DOM-документ</brief><br>
 Параметры:<br>
   aliNodeParent - Handle узла-родитиеля<br>
   awValue       - Значение<br>
   asCaption     - Наименование<br>
 Результат:<br>
   Handle сформированного узла "<Class>"<br>
#end
Function AddEnumItem(aliNodeParent: longint; awValue: word; asCaption: string): longint;

//------------------------------------------------------------------------------
#doc
 Добавление связанного со свойством-ссылкой класса в DOM-документ</brief><br>
 Параметры:<br>
   aliNodeParent - Handle узла-родитиеля<br>
   asName        - Имя класса (типа данных)<br>
 Результат:<br>
   Handle сформированного узла "<Class>"<br>
#end
Function AddRltClass(aliNodeParent: longint; asName: string): longint;

//------------------------------------------------------------------------------
#doc
 Получение ссылки на протокол экспорта</brief><br>
 Результат:<br>
   Ссылка на протокол экспорта<br>
#end
Function GetEIProtocol: comp;

//------------------------------------------------------------------------------
#doc
 Добавление сообщения в протокол экспорта-импорта</brief><br>
 Параметры:<br>
   aliProtEventCode  - Код сообщения (см. EIExpImp_CN.vpp)<br>
   awProtEventType   - Тип сообщения (см. EIExpImp_CN.vpp):<br>
     evtInformation: Информация<br>
     evtWarning    : Предупреждение<br>
     evtError      : Ошибка<br>
     evtFatalError : Фатальная ошибка<br>
   asDescript        - Дополнительное описание сообщения<br>
   abQueryByContinue - Признак выдачи запроса на продолжение выполнения процесса (возвращается)<br>
 Результат:<br>
   tsOk, если успешно, иначе - код ошибки<br>
#end
Function AddEventInProtocol(aliProtEventCode: longint; awProtEventType: word;
  asDescript: string; abQueryByContinue: boolean): longint;

End; // ObjInterface oEIExpEngine_CF

VipInterface iEIExpEngine_CF implements oEIExpEngine_CF
Licensed(Free);
#endif
