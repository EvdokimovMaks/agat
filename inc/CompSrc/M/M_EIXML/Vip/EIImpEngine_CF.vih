// =============================================================================
//                                                     (c)  корпорация Галактика
// Галактика 7.11 - Производственный контур
// Описание интерфейса-объекта "Движок на импорт (XML)"
// =============================================================================

#component "M_EIXML"

//******************************************************************************
// ObjInterface oEIExpEngine_CF
#doc
 Описание интерфейса-объекта "Движок на импорт (XML)"</brief><br>
#end
#ifndef __Def_EIImpEngine_CF__
#define __Def_EIImpEngine_CF__

ObjInterface oEIImpEngine_CF;

//------------------------------------------------------------------------------
#doc
 Освобождение ресурсов</brief><br>
#end
Procedure Done;

//------------------------------------------------------------------------------
#doc
 Инициализация</brief><br>
 Параметры:<br>
   acEIImpSet   - Ссылка на настройку импорта<br>
   asFile       - Имя создаваемого файла, включая путь<br>
   asComment    - Комментарий к импорту данных<br>
   abTestImport - Признак выполнения тест-импорта данных<br>
   acEIProtocol - Ссылка на протокол имспорта/тест-импорта (передается/возвращается)<br>
 Результат:<br>
   True, если успешно, иначе - False<br>
#end
Function Init(acEIImpSet: comp; asFile: string; asComment: string; abTestImport: boolean; acEIProtocol: comp): boolean;

//------------------------------------------------------------------------------
#doc
 Определение, были ли фатальные ошибки при выполнении импорта (тест-импорта) данных</brief><br>
 Результат:<br>
   True, если были, иначе - False<br>
#end
Function CheckFatalErrorByRun: boolean;

//------------------------------------------------------------------------------
#doc
 Установка кода и описания фатальной ошибки при выполнении импорта (тест-импорта) данных</brief><br>
 Параметры:<br>
   asErrorDescript - Состояние выполнения процесса экспорта<br>
#end
Procedure SetFatalErrorByRun(asErrorDescript: string);

//------------------------------------------------------------------------------
#doc
 Чтение описания последней фатальной ошибки при выполнении импорта (тест-импорта) данных</brief><br>
 Результат:<br>
   True, если успешно, иначе - False<br>
#end
Function GetLastFatalErrorByRun: string;

//------------------------------------------------------------------------------
#doc
 Открытие DOM-документа</brief><br>
 Результат:<br>
   True, если успешно, иначе - False<br>
#end
Function OpenDOMDocument: boolean;

//------------------------------------------------------------------------------
#doc
 Получение количества типов данных для коллекций объектов узла <Data> в DOM-документе</brief><br>
 Результат:<br>
   Количество типов данных<br>
#end
Function GetDTCount: longint;

//------------------------------------------------------------------------------
#doc
 Получение типа данных для первой коллекции объектов узла <Data> в DOM-документе</brief><br>
 Параметры:<br>
   asClassName  - Имя типа данных (класса объектов)<br>
   asCltCaption - Наименование коллекции класса объектов<br>
 Результат:<br>
   True, если успешно, иначе - False<br>
#end
Function GetFirstDT(var asClassName: string; var asCltCaption: string): boolean;

//------------------------------------------------------------------------------
#doc
 Получение типа данных для следующей коллекции объектов узла <Data> в DOM-документе</brief><br>
 Параметры:<br>
   asClassName  - Имя типа данных (класса объектов)<br>
   asCltCaption - Наименование коллекции класса объектов<br>
 Результат:<br>
   True, если успешно, иначе - False<br>
#end
Function GetNextDT(var asClassName: string; var asCltCaption: string): boolean;

//------------------------------------------------------------------------------
#doc
 Получение количества объектов для заданного типа данных узла <Data> в DOM-документе</brief><br>
 Параметры:<br>
   asClassName - Имя типа данных (класса объектов)<br>
 Результат:<br>
   Количество объектов<br>
#end
Function GetObjCount(asClassName: string): longint;

//------------------------------------------------------------------------------
#doc
 Получение информации по первому объекту для заданного типа данных узла <Data> в DOM-документе</brief><br>
 Параметры:<br>
   asClassName  - Имя типа данных (класса объектов)<br>
   aliObjHandle - Handle объекта<br>
   asObjName    - Наименование объекта из DOM-документа<br>
   asObjID      - Идентификатор объекта в DOM-документе<br>
 Результат:<br>
   True, если успешно, иначе - False<br>
#end
Function GetFirstObj(asClassName: string; var aliObjHandle: longint; var asObjName: string;
  var asObjID: string): boolean;

//------------------------------------------------------------------------------
#doc
 Получение информации по следующему объекту для заданного типа данных узла <Data> в DOM-документе</brief><br>
 Параметры:<br>
   asClassName  - Имя типа данных (класса объектов)<br>
   aliObjHandle - Handle объекта<br>
   asObjName    - Наименование объекта из DOM-документа<br>
   asObjID      - Идентификатор объекта в DOM-документе<br>
 Результат:<br>
   True, если успешно, иначе - False<br>
#end
Function GetNextObj(asClassName: string; var aliObjHandle: longint; var asObjName: string;
  var asObjID: string): boolean;

//------------------------------------------------------------------------------
#doc
 Фиксирование импорта объекта (для дальнейшей обработки)</brief><br>
 Параметры:<br>
   asClassName - Имя класса объекта<br>
   asObjID    - Идентификатор дочернего объекта<br>
   asObjName  - Наименование дочернего объекта<br>
   asObjIDnew - Новый идентификатор дочернего объекта<br>
   awFlUpd    - Флаг модификации при импорте (см. EIExpImp_CN.vpp)<br>
 Результат:<br>
   tsOk, если успешно, иначе - код ошибки<br>
#end
Function ApplyImpObj(asClassName: string; asObjID: string; asObjName: string;
  asDBObjID: string; awFlUpd: word): longint;

//------------------------------------------------------------------------------
#doc
 Чтение флага импорта для импортируемого объекта, соответствующего заданному объекту из XML-документа</brief><br>
 Параметры:<br>
   asClassName - Имя класса объекта<br>
   asObjID     - Идентификатор объекта в XML-документе<br>
 Результат:<br>
   Значение флага импорта (см. EIExpImp_CN.vpp)<br>
#end
Function GetFlUpdForObj(asClassName: string; asObjID: string): word;

//------------------------------------------------------------------------------
#doc
 Получение идентификатора объекта в БД, соответствующего заданному объекту из XML-документа</brief><br>
 Параметры:<br>
   asClassName - Имя класса объекта<br>
   asObjID     - Идентификатор объекта в XML-документе<br>
 Результат:<br>
   Идентификатор соответствующего объекта в БД<br>
#end
Function GetDBObjID(asClassName: string; asObjID: string): string;

//------------------------------------------------------------------------------
#doc
 Чтение первого значения свойства для заданного узла-объекта в XML-документе</brief><br>
 Параметры:<br>
   aliNodeObj  - Указатель на узел-объект в XML-документе<br>
   asPropName  - Имя свойства (возвращается)<br>
   asPropValue - Значение свойства (возвращается)<br>
   asRefDT     - Имя класса объектов для значений свойств-ссылок (возвращается)<br>
 Результат:<br>
   True, если успешно, иначе - False<br>
#end
Function GetFirstObjPV(aliNodeObj: longint; var asPropName: string; var asPropValue: string;
  var asRefDT: string): boolean;

//------------------------------------------------------------------------------
#doc
 Чтение следующего значения свойства для заданного узла-объекта в XML-документе</brief><br>
 Параметры:<br>
   aliNodeObj  - Указатель на узел-объект в XML-документе<br>
   asPropName  - Имя свойства (возвращается)<br>
   asPropValue - Значение свойства (возвращается)<br>
   asRefDT     - Имя класса объектов для значений свойств-ссылок (возвращается)<br>
 Результат:<br>
   True, если успешно, иначе - False<br>
#end
Function GetNextObjPV(aliNodeObj: longint; var asPropName: string; var asPropValue: string;
  var asRefDT: string): boolean;

//------------------------------------------------------------------------------
#doc
 Импорт содержимого узла-значения свойства в мемо-поле</brief><br>
 Параметры:<br>
   aliNodeObj    - Указатель на узел-объект в XML-документе<br>
   asPropName    - Имя свойства<br>
   aliMemoHandle - Ссылка на объект File, полученная методом Handle (для записи в мемо-поля)<br>
 Результат:<br>
   True, если успешно, иначе - False<br>
#end
Function ImpMemoPV(aliNodeObj: longint; asPropName: string; aliMemoHandle: longint): boolean;

//------------------------------------------------------------------------------
#doc
 Чтение первого дочернего узла-объекта для заданного узла-объекта в XML-документе</brief><br>
 Параметры:<br>
   aliNodeObj      - Указатель на узел-объект в XML-документе<br>
   aliNodeChildObj - Указатель на дочерний узел-объект для aliNodeObj (возвращается)<br>
   asChildObjClass - Имя класса дочернего объекта (возвращается)<br>
   asChildObjID    - Идентификатор дочернего объекта (возвращается)<br>
   asChildObjName  - Наименование дочернего объекта (возвращается)<br>
 Результат:<br>
   True, если успешно, иначе - False<br>
#end
Function GetFirstChildObj(aliNodeObj: longint; var aliNodeChildObj: longint;
  var asChildObjClass: string; var asChildObjID: string; var asChildObjName: string): boolean;

//------------------------------------------------------------------------------
#doc
 Предподготовка данных для чтения дочерних узлов-объектов для заданного узла-объекта в XML-документе</brief><br>
 Параметры:<br>
   aliNodeObj      - Указатель на узел-объект в XML-документе<br>
#end
Procedure PrepareGetChildObj(aliNodeObj: longint);

//------------------------------------------------------------------------------
#doc
 Чтение следующего дочернего узла-объекта для заданного узла-объекта в XML-документе</brief><br>
 Параметры:<br>
   aliNodeObj      - Указатель на узел-объект в XML-документе<br>
   aliNodeChildObj - Указатель на дочерний узел-объект для aliNodeObj (возвращается)<br>
   asChildObjClass - Имя класса дочернего объекта (возвращается)<br>
   asChildObjID    - Идентификатор дочернего объекта (возвращается)<br>
   asChildObjName  - Наименование дочернего объекта (возвращается)<br>
 Результат:<br>
   True, если успешно, иначе - False<br>
#end
Function GetNextChildObj(aliNodeObj: longint; var aliNodeChildObj: longint;
  var asChildObjClass: string; var asChildObjID: string; var asChildObjName: string): boolean;

//------------------------------------------------------------------------------
#doc
 Получение информации по объекту для заданного типа данных узла <Data> в DOM-документе</brief><br>
 и идентификатору объекта<br>
 Параметры:<br>
   asClassName  - Имя типа данных (класса объектов)<br>
   asObjID      - Идентификатор объекта в DOM-документе<br>
   aliObjHandle - Handle объекта<br>
   asObjName    - Наименование объекта из DOM-документа<br>
 Результат:<br>
   True, если успешно, иначе - False<br>
#end
Function GetObjByID(asClassName: string; asObjID: string; var aliObjHandle: longint;
  var asObjName: string): boolean;

//------------------------------------------------------------------------------
#doc
 Получение ссылки на протокол импорта</brief><br>
 Результат:<br>
   Ссылка на протокол импорта<br>
#end
Function GetEIProtocol: comp;

//------------------------------------------------------------------------------
#doc
 Добавление сообщения в протокол экспорта-импорта</brief><br>
 Параметры:<br>
   aliProtEventCode  - Код сообщения (см. EIExpImp_CN.vpp)<br>
   awProtEventType   - Тип сообщения (см. EIExpImp_CN.vpp):<br>
     evtInformation: Информация<br>
     evtWarning    : Предупреждение<br>
     evtError      : Ошибка<br>
     evtFatalError : Фатальная ошибка<br>
   asDescript        - Дополнительное описание сообщения<br>
   abQueryByContinue - Признак выдачи запроса на продолжение выполнения процесса (возвращается)<br>
 Результат:<br>
   tsOk, если успешно, иначе - код ошибки<br>
#end
Function AddEventInProtocol(aliProtEventCode: longint; awProtEventType: word;
  asDescript: string; abQueryByContinue: boolean): longint;

End; // ObjInterface oEIImpEngine_CF

VipInterface iEIImpEngine_CF implements oEIImpEngine_CF
Licensed(Free);
#endif
