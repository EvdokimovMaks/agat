//******************************************************************************
//                                                    (  c) корпорация ГАЛАКТИКА
// ГАЛАКТИКА 7.1 Производственный контур
//               Объектный интерфейс регистрации ситуаций
//******************************************************************************

#ifndef __OIEVNLOG__
#define __OIEVNLOG__

#ifdef ComponentVersion
#component "M_TPP"
#end

//******************************************************************************
Type
  rELItem = record
              nRec   : comp;
              cParent: comp;
              wEObj  : word;
              wOwner : word;
              cOwner : comp;
              wObject: word;
              cObject: comp;
              wEType : word;
              wECode : word;
              dtReg  : _DateTime;
              sText  : string;
              LCount : longint;
#ifdef ATL51
              wInfo  : array[1..10] of word;
              cInfo  : array[1..10] of comp;
              dInfo  : array[1..10] of double;
#else
              wInfo$1, wInfo$2, wInfo$3, wInfo$4, wInfo$5,
              wInfo$6, wInfo$7, wInfo$8, wInfo$9, wInfo$10: word;
              cInfo$1, cInfo$2, cInfo$3, cInfo$4, cInfo$5,
              cInfo$6, cInfo$7, cInfo$8, cInfo$9, cInfo$10: comp;
              dInfo$1, dInfo$2, dInfo$3, dInfo$4, dInfo$5,
              dInfo$6, dInfo$7, dInfo$8, dInfo$9, dInfo$10: double;
#end
            end;

  rELILine = record
               nRec   : comp;
               cELItem: comp;
               wNom   : word;
               sInfo  : string;
             end;

//******************************************************************************
#doc
Объектный интерфейс регистрации ситуаций</brief>
#end
ObjInterface oiEvnLog;

//******************************************************************************
#doc
сооздает новый элемент журнала</brief><br>
Если был создан новый элемент журнала, то возвращает <I>tsOk</I> и
в свойство <I>Item</I> устанавливает значение нового элемента
#end
  function ItemInsert(wObj: word; wType: word; wCode: word): longint;

#doc
функция расширенного создания новыго элемента журнала</brief><br>
Если был создан новый элемент журнала, то возвращает <I>tsOk</I> и
в свойство <I>Item</I> устанавливает значение нового элемента
#end
  Function ItemInsertExt(wOwn : Word;
                         cOwn : Comp;
                         wObj : Word;
                         cObj : Comp;
                         wType: Word;
                         wCode: Word;
                         sInfo: String
                        ): longint;

//******************************************************************************
#doc
записать строку в текстовое описание к текущему элементу журнала</brief><br>
если не указан номер, то будет записано в текущее описание
#end
  function WriteLine(LineNom: longint; sLine: string): longint;

//******************************************************************************
#doc
прочитать строку текстового описания к текущему элементу журнала</brief><br>
если не указан номер, то будет прочитано текущее описание
#end
  function ReadLine(LineNom: longint): string;

//******************************************************************************
#doc
прочитать текущее текстовое описание к элементу журнала</brief><br>
если не указан номер, то будет прочитано текущее описание
#end
  Function ReadLineExt: string;

//******************************************************************************
#doc
функция очистки журнала</brief><br>
возвращает <I>tsOk</I>, если все элементы журнала были удалены
#end
  function ClearLog: longint;

//******************************************************************************
#doc
функция расширенной очистки журнала</brief><br>
возвращает <I>tsOk</I>, если все элементы журнала (подэлементы <I>cItem</I>) были удалены
#end
  Function ClearLogExt(cItem: Comp): Longint;

//******************************************************************************
#doc
Перейти на первый элемент журнала</brief><br>
если существует первый элемент журнала, то возвращает <I>tsOk</I> и
в свойство <I>Item</I> устанавливает значение первого элемента
#end
  function fGetFirst: longint;

//******************************************************************************
#doc
Перейти на следующий элемент журнала</brief><br>
если существует следующий элемент журнала, то возвращает <I>tsOk</I> и
в свойство <I>Item</I> устанавливает значение следующего элемента
#end
  function fGetNext: longint;

//******************************************************************************
#doc
Перейти на последний элемент журнала</brief><br>
если существует последний элемент журнала, то возвращает <I>tsOk</I> и
в свойство <I>Item</I> устанавливает значение последнего элемента
#end
  function fGetLast: longint;

//******************************************************************************
#doc
Перейти на предыдущий элемент журнала</brief><br>
если существует предыдущий элемент журнала, то возвращает <I>tsOk</I> и
в свойство <I>Item</I> устанавливает значение предыдущего элемента
#end
  function fGetPrev: longint;

//******************************************************************************
#doc
Получить список событий</brief><br>
Параметры:<br>
<I>cItem</I>      - cсылка на событие (если -1, то берется корневое)
<I>bRecursive</I> - обрабатывать ли подсобытия
#end
  Function GetItems(cItem     : Comp;      
                    bRecursive: Boolean    
                   ): Longint;

//******************************************************************************
#doc
Перейти на первый элемент журнала</brief><br>
если существует первый элемент журнала, то возвращает <I>tsOk</I> и
в свойство <I>Item</I> устанавливает значение первого элемента
(вызывать после функции <I>GetItems</I>)
#end
  Function fGetFirstExt: longint;

//******************************************************************************
#doc
Перейти на следующий элемент журнала</brief><br>
если существует следующий элемент журнала, то возвращает <I>tsOk</I> и
в свойство <I>Item</I> устанавливает значение следующего элемента
(вызывать после функции <I>GetItems</I>)
#end
  Function fGetNextExt: longint;

//******************************************************************************
#doc
Перейти на последний элемент журнала</brief><br>
если существует последний элемент журнала, то возвращает <I>tsOk</I> и
в свойство <I>Item</I> устанавливает значение последнего элемента
(вызывать после функции <I>GetItems</I>)
#end
  Function fGetLastExt: longint;

//******************************************************************************
#doc
Перейти на предыдущий элемент журнала</brief><br>
если существует предыдущий элемент журнала, то возвращает <I>tsOk</I> и
в свойство <I>Item</I> устанавливает значение предыдущего элемента
вызывать после функции <I>GetItems</I>)
#end
  Function fGetPrevExt: longint;

//******************************************************************************
#doc
Перейти на первую строку описания</brief><br>
если существует первая строка описания, то возвращает <I>tsOk</I> и
в свойство <I>Line</I> устанавливает значение первой строки
#end
  Function fGetFirstLine: Longint;

//******************************************************************************
#doc
Перейти на следующую строку описания</brief><br>
если существует следующая строка описания, то возвращает <I>tsOk</I> и
в свойство <I>Line</I> устанавливает значение следующей строки
#end
  Function fGetNextLine: Longint;

//******************************************************************************
#doc
Перейти на последнюю строку описания</brief><br>
если существует последняя строка описания, то возвращает <I>tsOk</I> и
в свойство <I>Line</I> устанавливает значение последней строки
#end
  Function fGetLastLine: Longint;

//******************************************************************************
#doc
Перейти на предыдущую строку описания</brief><br>
если существует предыдущая строка описания, то возвращает <I>tsOk</I> и
в свойство <I>Line</I> устанавливает значение предыдущей строки
#end
  Function fGetPrevLine: Longint;

//******************************************************************************
#doc
Поиск элемента журнала</brief><br>
если найден элемент журнала с заданным <I>nRec</I>, то возвращает <I>tsOk</I>
и устанавливает в свойство <I>Item</I> значение найденного элемента
#end
  function ItemSeek(cItemKey: comp): longint;

//******************************************************************************
#doc
сортировка элементов журнала</brief><br>
значения параметров:<br>
  0    - не сортировать по данному полю
  1..3 - номер данного поля в ключе сортировки
#end
  procedure ItemsSort(wOrdObj: word; wOrdType: word; wOrdCode: word);

//******************************************************************************
#doc
сортировка элементов журнала</brief> (если вызывается ItemsFilterExt, то ItemsSortExt
должна вызываться полсе нее)<br>
значения параметров:<br>
  0    - не сортировать по данному полю<br>
  1..3 - номер данного поля в ключе сортировки<br>
#end
  Procedure ItemsSortExt(OrdwTime: Word;
                         OrdwOwn : Word;
                         OrdcOwn : Word;
                         OrdwObj : Word;
                         ORdcObj : Word;
                         OrdwType: Word;
                         OrdwCode: Word);

//******************************************************************************
#doc
фильтр элементов журнала</brief><br>
значения параметров:<br>
 0 - не фильтровать по данному полю
#end
  procedure ItemsFilter(wValObj: word; wValType: word; wValCode: word);

//******************************************************************************
#doc
расширенный фильтр элементов журнала</brief><br>
значения параметров:<br>
 0 - не фильтровать по данному полю
#end
Procedure ItemsFilterExt(wOwn : Word;
                         cOwn : Comp;
                         wObj : Word;
                         cObj : Comp;
                         wType: Word;
                         wCode: Word);

//******************************************************************************
//  property Item: rELItem Read Write; это будет на Атл.5
#doc
получить рабочий элемент журнала</brief>
#end
  function Item: rELItem;

#doc
установить рабочий элемент журнала</brief>
#end
  function SetItem(Item: rELItem): longint;

//******************************************************************************
#doc
количество элементов журнала</brief>
#end
//  property ItemsCount: longint Read; это будет на Атл.5
  function ItemsCount: longint;

//******************************************************************************
#doc
количество элементов журнала (поделементов <I>cItem</I>)</brief>
#end
  Function ItemsCountExt(cItem     : Comp;      // Ссылка на событие (если -1, берется корневое)
                         bRecursive: Boolean    // Обрабатывать ли подсобытия
                        ): Longint;

//******************************************************************************
#doc
количество текстовых описаний элемента журнала</brief>
#end
//  property ItemLinesCount: longint Read; это будет на Атл.5
  function ItemLinesCount: longint;

//******************************************************************************
#doc
номер текущего текстового описания элемента журнала</brief>
#end
//  property LineNom: longint Read; это будет на Атл.5
  function LineNom: longint;

//******************************************************************************
#doc
Установить корневое событие (элемент журнала)</brief>
#end
  Function SetRootItem(cItem: Comp): Longint;

//******************************************************************************
#doc
Получить корневое событие (элемент журнала)</brief>
#end
  Function GetRootItem: Comp;

#doc
Экспорт протокола событий в XML-файл</brief>
#end
  Function ExportToXML(cProt         : Comp;    // Ссылка на протокол событий
                       var asFileName: String;  // Имя XML-файла (с директорием); если пустая строка -
                                                // экспорт идет в файл %Temp%\tmpDDHHNNSS.xml, где DDHHNNSS - дата и
                                                // время формирования протокола
                       lFlag         : Longint  // Флаг "Параметры экспорта" (обычно - 1+2+16)
                                                //   0: 1 - экспортировать данные
                                                //   1: 1 - создавать метаописание
                                                //   2: 1 - не выдавать запрос о перезаписи существующего файла
                                                //   3: резерв, не используется
                                                //   4: 1 - не выдавать сообщения
                      ): Longint;

//******************************************************************************
#doc
Запись протокола из XML-файла в Memo-поле</brief>
#end
  Function XMLToMemoProtocol(asFileName: String;  // Имя XML-файла (с директорием)
                             acProt    : Comp     // Ссылка на протокол
                            ): Longint;

//******************************************************************************
#doc
Запись протокола из Memo-поля в XML-файл</brief>
#end
  Function MemoToXMLProtocol(acProt        : Comp;    // Ссылка на протокол событий
                             var asFileName: String   // Имя XML-файла (с директорием)
                            ): Longint;

end; // oiEvnLog

#endif  // __OIEVNLOG__
