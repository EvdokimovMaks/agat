// =============================================================================
//                                                     (c)  корпорация Галактика
// Галактика 7.12 - Производственный контур
// Описание интерфейс-объекта "Функции для работы с журналом резервирования ПФ ПЦ"
// =============================================================================

//#ifdef ComponentVersion
//#component "M_MnPlan"
//#endif

#ifndef __Def_tmpSpMnPlan__
#define __Def_tmpSpMnPlan__

Table Struct tmpSpMnPlan  // записи после разбивки на партии
(
  cSpMnPlanTmp: comp,    // ссылка на временную таблицу SpMnPlantmp (она же ссылка на позицию SpMnPlan)
  FlagGlob: word,        // флаг основной записи
  FlagParty: word,       // флаг флаг прописки партии
  cSpMnpl: comp,         // ссылка на созданный SpMnPl
  cRsvOper: comp,        // ссылка на созданный RsvOper
  Number: string,
  NameMC: string,
  Oboznathenie: string,
  fcAnVal1: comp,        // значение аналитик 1
  fcAnVal2: comp,        // значение аналитик 2
  fcAnVal3: comp,        // значение аналитик 3
  fcAnVal4: comp,        // значение аналитик 4
  fcAnVal5: comp,        // значение аналитик 5
  fcNewParty: comp,      // если разбиваем на партии, то ссылка на партии
  fcParentParty: comp,   // родительская партия
  cMesNDoc: comp,        // ссылка на cMesNDoc
  KolField: longint,     // Количество после разбивки
  StartDateFact: Date,
  EndDateFact: Date
)
with index
(
  tmpSpMnPlan01 = cSpMnPlanTmp,
  tmpSpMnPlan02 = cSpMnPlanTmp + FlagGlob,
  tmpSpMnPlan03 = cSpMnPlanTmp + FlagGlob + FlagParty + KolField
);

#endif

#ifndef __Def_SpMnPlanTmp__
#define __Def_SpMnPlanTmp__
Table Struct SpMnPlanTmp       // копия позиции документа документа
(
//  NRec: comp,
  cRec: comp,             // ссылка на позицию документа SpMnPlan
  cSpMnPl: comp,          // ссылка на SpMnPl
  cParentParty : comp,     // ссылка на родительскую партию
  StartDateTime: _DateTime, // дата и время запуска
  KolFieldTmp: double,     // временное значение
  KolFieldZap: double,  // размер поля для запуска
  KolFieldZapCopy: double,  // размер поля для запуска
  KolFieldZapFakt: double,  // размер поля для фактически запущенного
  KolFieldTmpNew: double  // размер партии при разбивке
)
With Index
(
//  SpMnPlanTmp01 = NRec(unique, surrogate)
  SpMnPlanTmp01 = cRec,
  SpMnPlanTmp02 = cSpMnPl
);
#endif

#ifndef __Def_RsvOperN__
#define __Def_RsvOperN__
Table Struct RsvOperN   // временная таблица ЖР
(
  Nrec        : comp,
  cRsvOper    : comp,      // ссылка на RsvOper
  cSpMnPlanTmp: comp,   // ссылка на временную таблицу SpMnPlanTmp (она же ссылка на поз.док SpMnPlan)
  cSpMnpl     : comp,   // ссылка на SpMnpl
  cAnVal2     : comp,    // ссылка на позицию МК
  cRsvOperLast: comp,    // ссылка на последнюю операцию в ветке(маршруте)
  FlagFirst   : word,   // 1 - первая операция   (в разрезе )
  FlagLast    : word,   // 1 - последняя операция (в разрезе )
  fKol        : double, // новое количество позиции журнала для корректировки плана
  RazParty    : double, // размер партии
  dtBeg       : _datetime,   // новая дата запуска
  dtEnd       : _datetime,   // новая дата выпуска
  cWhy        : comp,   // код причины корректировки
  wRazrez     : word,   // 0 - по всему дереву изделия
                        // 1 - по всему дереву изделия
                        // 2 - МЦ (маршрут)
                        // 4 - МЦ (маршрут) + Подразделение
                        // 8 - МЦ (маршрут) + Операция
                        // 16 - + Партия
                        // 32 - + Контрольная операция
                        // 64 - пересчитывать даты
                        // 128 - учитывать вложенность маршрутов
  cRsvOperN   : comp,   // ссылка на вышестоящую запись RsvOperN
  wType       : word,   // тип записи: 1 - обычный RsvOper; 2 - RsvOper с НЗП,
  wTypeSost   : word,   // 1     - Готово к запуску
                        // 2     - Подготовка
                        // 4     - Обработка
                        // 8     - Завершение
                        // 16    - Передача
                        // 32    - Брак (окончательный)
                        // 64    - Брак (исправимый)
  cPodrOrg     : comp,  // подразделение-организация
  wKauPodrOrg  : word   // кау подразделение-организация
)
With Index
(
  RsvOperN01 = Nrec(Unique, Surrogate),
  RsvOperN02 = cRsvOper + cSpMnPlanTmp,
  RsvOperN03 = cSpMnPlanTmp + FlagFirst,
  RsvOperN04 = FlagFirst + cSpMnPlanTmp,
  RsvOperN05 = FlagLast + cSpMnPlanTmp,
  RsvOperN06 = cWhy + cRsvOper,
  RsvOperN07 = cAnVal2 + cSpMnPlanTmp + cRsvOperLast,
  RsvOperN08 = cRsvOper + FlagFirst,
  RsvOperN09 = cRsvOper + FlagLast,
  RsvOperN10 = cRsvOperN,
  RsvOperN11 = wType + cRsvOper
);
#endif

#ifndef __Def_RsvOperNewParty__
#define __Def_RsvOperNewParty__
Table Struct RsvOperNewParty   // временная таблица ЖР
(
  cRsvOper    : comp,   // ссылка на RsvOper
  cRsvOperOld : comp,   // ссылка на старый RsvOper
  cSpMnPlanTmp: comp,   // ссылка на временную таблицу SpMnPlanTmp (она же ссылка на поз.док SpMnPlan)
  cSpMnPl     : comp,   // ссылка на SpMnPl
  KolPart     : longint, //
  FlagFirst   : word,   // 1 - первая операция   (в разрезе )
  FlagLast    : word,   // 1 - последняя операция (в разрезе )
  Flag        : word    // условия привязки
)
With Index
(
  RsvOperNewParty01 = cRsvOper + cSpMnPlanTmp,
  RsvOperNewParty02 = cSpMnPlanTmp + FlagLast + Flag + KolPart,
  RsvOperNewParty03 = Flag + KolPart,
  RsvOperNewParty04 = cRsvOperOld
);
#endif
