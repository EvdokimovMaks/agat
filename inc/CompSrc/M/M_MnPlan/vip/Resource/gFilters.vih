/*
 ╔═══════════════════════════════════════════════════════════════════════════╗
 ║                     (c) 1994,2001 корпорация ГАЛАКТИКА                    ║
 ║ Проект        : ГАЛАКТИКА                                                 ║
 ║ Система       : Модуль Управление ресурсами                               ║
 ║ Версия        : 7.10                                                      ║
 ║ Назначение    : Интерфейс для работы с иерархическими структурами         ║
 ║ Ответственный : Скороход Дмитрий Владимирович                             ║
 ║ Параметры     : да                                                        ║
 ╚═══════════════════════════════════════════════════════════════════════════╝
*/

#ifdef ComponentVersion
#component "M_MNPLAN"
#end

ObjInterface gFiltersObj;

  // формирование списка видимых элементов для отображения
  public function GetTitleInfo(wWhere : word): string;
  public procedure PrepareWindow;
  public function CheckWindow: boolean;
  public procedure SetDocument(aDoc : comp);
  public function CopyDocument: comp;
  public function NextDocument: comp;
  public procedure InsertDocument;
  public procedure UpdateDocument;
  public procedure DeleteDocument(aDoc : comp);
  public procedure SetParam(aType : word; aPlan : longint);
  event procedure WasChangedDocument;
End;

VipInterface f4Algorithm        implements gFiltersObj #Licensed_Free;
VipInterface f4KatSopr          implements gFiltersObj #Licensed_Free;
VipInterface f4SpSopr           implements gFiltersObj #Licensed_Free;
VipInterface f4BaseDoc          implements gFiltersObj #Licensed_Free;
VipInterface f4BaseDocFltr      implements gFiltersObj #Licensed_Free Parameters(SFiltersNRec : comp; RunMode : word);
VipInterface f4Claim            implements gFiltersObj #Licensed_Free;
VipInterface f4ClaimOrder       implements gFiltersObj #Licensed_Free Parameters(LookingForTheSummer : comp; aIndent : comp);
VipInterface f4DogovorCalPlan   implements gFiltersObj #Licensed_Free;
VipInterface f4GetPotrMatFiltr  implements gFiltersObj #Licensed_Free;
VipInterface f4GetPotrMatView   implements gFiltersObj #Licensed_Free;
VipInterface f4Indent           implements gFiltersObj #Licensed_Free;
VipInterface f4IndentView       implements gFiltersObj #Licensed_Free;
VipInterface f4JavaAdvFields    implements gFiltersObj #Licensed_Free;
VipInterface f4KatMarshUserFltr implements gFiltersObj #Licensed_Free;
VipInterface f4MnPlanView       implements gFiltersObj #Licensed_Free;
VipInterface f4OPInfo           implements gFiltersObj #Licensed_Free;
VipInterface f4Plan             implements gFiltersObj #Licensed_Free;
VipInterface f4Plan4MTG         implements gFiltersObj #Licensed_Free;
VipInterface f4PlanPeriod       implements gFiltersObj #Licensed_Free Parameters(LookingForTheSummer : comp; ExternalDate : date; wResult : word);
VipInterface f4PutLst           implements gFiltersObj #Licensed_Free;
VipInterface f4RsvOperFiltr     implements gFiltersObj #Licensed_Free;
VipInterface f4RsvOperForBorR   implements gFiltersObj #Licensed_Free;
VipInterface f4RsvOperNextLevel implements gFiltersObj #Licensed_Free;
VipInterface f4RsvOperView      implements gFiltersObj #Licensed_Free;
VipInterface f4RepHead          implements gFiltersObj #Licensed_Free;
VipInterface f4SpDocs           implements gFiltersObj #Licensed_Free;
VipInterface f4SpecDocFltr      implements gFiltersObj #Licensed_Free;
VipInterface f4SpecifDoc        implements gFiltersObj #Licensed_Free;
VipInterface f4SpecProdView     implements gFiltersObj #Licensed_Free;
VipInterface f4SpMnPlAlg        implements gFiltersObj #Licensed_Free;
VipInterface f4SpMnPlanFltr     implements gFiltersObj #Licensed_Free;
VipInterface f4SpOperPlan       implements gFiltersObj #Licensed_Free;
VipInterface f4SpSkladOil       implements gFiltersObj #Licensed_Free;
VipInterface f4SpStep           implements gFiltersObj #Licensed_Free;
VipInterface f4WPDocView        implements gFiltersObj #Licensed_Free;
VipInterface f4WayAccouView     implements gFiltersObj #Licensed_Free;
VipInterface f4GetKatPartyMnf   implements gFiltersObj #Licensed_Free;

#declare gFiltersObjDocument(TableName, RootRec)
public procedure SetDocument(aDoc : comp);
{
  // message('SetDocument '  + aDoc);
  set #RootRec := aDoc;
  if( not isValid(##TableName))
    NewRecord;
  // message('SetDocument ' + isNew + ' ' + isModified);
}

public function CopyDocument: comp;
{
  #TableName.NRec := 0;
  insert current #TableName;
  CopyDocument := #TableName.NRec;
}

public function NextDocument: comp;
{
  NextDocument := GetNextNRec(##TableName, 0)
}

public procedure InsertDocument;
{
  insert current #TableName;
  // message('insert current #TableName' + #TableName.NRec);
}

public procedure UpdateDocument;
{
  update current #TableName;
}

public procedure DeleteDocument(aDoc : comp);
{
  delete #TableName where((aDoc  == #TableName.NRec));
}
#end

#declare gFiltersMFilters
public function CopyDocument: comp;
{
//  Message('CopyDocument= '+SFilters.NRec,Information);
  var SFiltersNRec : comp;
  SFiltersNRec := SFilters.NRec;
  SFilters.NRec := 0;
  insert current SFilters;
  CopyDocument := SFilters.NRec;
  var i : word;
  for ( i := GetFirst MFilters where (( SFiltersNRec == MFilters.cSFilters ));
        i = tsOk;
        i := GetNext MFilters where (( SFiltersNRec == MFilters.cSFilters )))
    if ( GetFirst MFiltersForInsert where (( MFilters.NRec == MFiltersForInsert.NRec )) =tsOk )
    {
      MFiltersForInsert.NRec := 0;
      MFiltersForInsert.cSFilters := CopyDocument;
      insert current MFiltersForInsert;
//      Message('MFiltersInsert =   '+MFiltersForInsert.NRec+'   wType='+MFiltersForInsert.wType,Information);
    }
}

public function NextDocument: comp;
{
  NextDocument := GetNextNRec(#SFilters, 0)
}

public procedure DeleteDocument(aDoc : comp);
{
  delete all MFilters where((aDoc  == MFilters.cSFilters));
  delete SFilters where((aDoc  == SFilters.NRec));
}
#end

#declare SFilterNameRoutines

const
  _SC_ : string = 'текущий';
end;

// самое печальное, что эта функция всё равно не работает
function ShowDifName(index_ : word; Def : string): string;
{
  /*
  if( SFilters.cValRes[index_] = 0 )
    ShowDifName := string(_SC_);
  else
    ShowDifName := Def
  */
  ShowDifName := 'jjjj'
}

function ShowKauName(index_ : word): string;
{
  if( SFilters.iceKauCo[index_] = 0 )
    ShowKauName:= _SC_;
  else
    ShowKauName := #gKauName(SFilters.iceKauCo[index_]);
}

function ShowKauVal(index_ : word): string;
{
  if( SFilters.iceKauVa[index_] = 0 )
    ShowKauVal := _SC_;
  else
    ShowKauVal := #gKauValue(SFilters.iceKauCo[index_], SFilters.iceKauVa[index_])
}
#end

#declare StdFiltersTitles
public function GetTitleInfo(wWhere : word): string;
{
  case wWhere of
    0: GetTitleInfo := 'Выберите фильтры';
    1: GetTitleInfo := 'Выберите фильтр';
    2: GetTitleInfo := 'Просмотр списка фильтров';
    10: GetTitleInfo := 'Редактирование фильтра';
  end; // case
}
#end
