//------------------------------------------------------------------------------
//                                                      (c) Корпорация ГАЛАКТИКА
//------------------------------------------------------------------------------
// Система       : ГАЛАКТИКА
// Проект        : Планирование
// Версия        : 8.0
// Назначение    : Паблик - типы
//------------------------------------------------------------------------------

#ifndef __TMnPlan__vih__
#define __TMnPlan__vih__

#ifdef ComponentVersionInDict
  #include iWayAccou.vih
  #include iSpWayAc.vih
  #include iObjAcct.vih
  #include iSpObjAcc.vih
  #include iObjParam.vih
  #include iSpObjPar.vih
  #include iNeedMats.vih
  #include iSpNeedMt.vih
  #include iMnPlan.vih
  #include iSpMnPlan.vih
  #include iSpMnPl.vih
  #include iValSpMnp.vih
  #include iPropSpMn.vih
  #include iMnAnal.vih
  #include iNormNZP.vih
  #include iResInfo.vih
  #include iIndent.vih
  #include iClaim.vih
  #include iSpFormPl.vih
  #include iFormPl.vih
  #include itmOutm.vih
  #include itmInpm.vih
  #include iSFilters.vih
  #include iOperPlan.vih
  #include iSpOperPlan.vih
  #include iOPInfo.vih
  #include iSpSpObAc.vih
  public type TWayAccou   = record as table WayAccou;
  public type TWayAccou_P = record as table WayAccou with x$position;
  public type TSpWayAc    = record as table SpWayAc;
  public type TSpWayAc_P  = record as table SpWayAc with x$position;
  public type TObjAcct    = record as table ObjAcct;
  public type TObjAcct_P  = record as table ObjAcct with x$position;
  public type TSpObjAcc   = record as table SpObjAcc;
  public type TSpObjAcc_P = record as table SpObjAcc with x$position;
  public type TObjParam   = record as table ObjParam;
  public type TObjParam_P = record as table ObjParam with x$position;
  public type TSpObjPar   = record as table SpObjPar;
  public type TSpObjPar_P = record as table SpObjPar with x$position;
  public type TNeedMats   = record as table NeedMats;
  public type TNeedMats_P = record as table NeedMats with x$position;
  public type TSpNeedMt   = record as table SpNeedMt;
  public type TSpNeedMt_P = record as table SpNeedMt with x$position;
  public type TMnPlan     = record as table MnPlan;
  public type TMnPlan_P   = record as table MnPlan with x$position;
  public type TSpMnPlan   = record as table SpMnPlan;
  public type TSpMnPlan_P = record as table SpMnPlan with x$position;
  public type TSpMnPl     = record as table SpMnPl;
  public type TSpMnPl_P   = record as table SpMnPl with x$position;
  public type TValSpMnp   = record as table ValSpMnp;
  public type TValSpMnp_P = record as table ValSpMnp with x$position;
  public type TPropSpMn   = record as table PropSpMn;
  public type TPropSpMn_P = record as table PropSpMn with x$position;
  public type TMnAnal     = record as table MnAnal;
  public type TMnAnal_P   = record as table MnAnal with x$position;
  public type TNormNZP    = record as table NormNZP;
  public type TNormNZP_P  = record as table NormNZP with x$position;
  public type TResInfo    = record as table ResInfo;
  public type TResInfo_P  = record as table ResInfo with x$position;
  public type TIndent     = record as table Indent;
  public type TIndent_P   = record as table Indent with x$position;
  public type TClaim      = record as table Claim;
  public type TClaim_P    = record as table Claim with x$position;
  public type TSpFormPl   = record as table SpFormPl;
  public type TSpFormPl_P = record as table SpFormPl with x$position;
  public type TFormPl     = record as table FormPl;
  public type TFormPl_P   = record as table FormPl with x$position;
  public type TtmOutm     = record as table tmOutm;
  public type TtmOutm_P   = record as table tmOutm with x$position;
  public type TtmInpm     = record as table tmInpm;
  public type TtmInpm_P   = record as table tmInpm with x$position;
  public type TSFilters   = record as table SFilters;
  public type TSFilters_P = record as table SFilters with x$position;
  public type TOperPlan   = record as table OperPlan;
  public type TOperPlan_P = record as table OperPlan with x$position;
  public type TSpOperPlan   = record as table SpOperPlan;
  public type TSpOperPlan_P = record as table SpOperPlan with x$position;
  public type TOPInfo     = record as table OPInfo;
  public type TOPInfo_P   = record as table OPInfo with x$position;
  public type TSpSpObAc   = record as table SpSpObAc;
  public type TSpSpObAc_P = record as table SpSpObAc with x$position;

#else
         type TWayAccou   = record as table WayAccou;
         type TWayAccou_P = record as table WayAccou with x$position;
         type TSpWayAc    = record as table SpWayAc;
         type TSpWayAc_P  = record as table SpWayAc with x$position;
         type TObjAcct    = record as table ObjAcct;
         type TObjAcct_P  = record as table ObjAcct with x$position;
         type TSpObjAcc   = record as table SpObjAcc;
         type TSpObjAcc_P = record as table SpObjAcc with x$position;
         type TObjParam   = record as table ObjParam;
         type TObjParam_P = record as table ObjParam with x$position;
         type TSpObjPar   = record as table SpObjPar;
         type TSpObjPar_P = record as table SpObjPar with x$position;
         type TNeedMats   = record as table NeedMats;
         type TNeedMats_P = record as table NeedMats with x$position;
         type TSpNeedMt   = record as table SpNeedMt;
         type TSpNeedMt_P = record as table SpNeedMt with x$position;
         type TMnPlan     = record as table MnPlan;
         type TMnPlan_P   = record as table MnPlan with x$position;
         type TSpMnPlan   = record as table SpMnPlan;
         type TSpMnPlan_P = record as table SpMnPlan with x$position;
         type TSpMnPl     = record as table SpMnPl;
         type TSpMnPl_P   = record as table SpMnPl with x$position;
         type TValSpMnp   = record as table ValSpMnp;
         type TValSpMnp_P = record as table ValSpMnp with x$position;
         type TPropSpMn   = record as table PropSpMn;
         type TPropSpMn_P = record as table PropSpMn with x$position;
         type TMnAnal     = record as table MnAnal;
         type TMnAnal_P   = record as table MnAnal with x$position;
         type TNormNZP    = record as table NormNZP;
         type TNormNZP_P  = record as table NormNZP with x$position;
         type TResInfo    = record as table ResInfo;
         type TResInfo_P  = record as table ResInfo with x$position;
         type TIndent     = record as table Indent;
         type TIndent_P   = record as table Indent with x$position;
         type TClaim      = record as table Claim;
         type TClaim_P    = record as table Claim with x$position;
         type TSpFormPl   = record as table SpFormPl;
         type TSpFormPl_P = record as table SpFormPl with x$position;
         type TFormPl     = record as table FormPl;
         type TFormPl_P   = record as table FormPl with x$position;
         type TtmOutm     = record as table tmOutm;
         type TtmOutm_P   = record as table tmOutm with x$position;
         type TtmInpm     = record as table tmInpm;
         type TtmInpm_P   = record as table tmInpm with x$position;
         type TSFilters   = record as table SFilters;
         type TSFilters_P = record as table SFilters with x$position;
         type TOperPlan   = record as table OperPlan;
         type TOperPlan_P = record as table OperPlan with x$position;
         type TSpOperPlan   = record as table SpOperPlan;
         type TSpOperPlan_P = record as table SpOperPlan with x$position;
         type TOPInfo     = record as table OPInfo;
         type TOPInfo_P   = record as table OPInfo with x$position;
         type TSpSpObAc   = record as table SpSpObAc;
         type TSpSpObAc_P = record as table SpSpObAc with x$position;

#end

#ifdef ComponentVersion
  #define TWayAccou TWayAccou
  #define TWayAccou_P TWayAccou_P
  #define TSpWayAc TSpWayAc
  #define TSpWayAc_P TSpWayAc_P
  #define TObjAcct TObjAcct
  #define TObjAcct_P TObjAcct_P
  #define TSpObjAcc TSpObjAcc
  #define TSpObjAcc_P TSpObjAcc_P
  #define TObjParam TObjParam
  #define TObjParam_P TObjParam_P
  #define TSpObjPar TSpObjPar
  #define TSpObjPar_P TSpObjPar_P
  #define TNeedMats TNeedMats
  #define TNeedMats_P TNeedMats_P
  #define TSpNeedMt TSpNeedMt
  #define TSpNeedMt_P TSpNeedMt_P
  #define TMnPlan TMnPlan
  #define TMnPlan_P TMnPlan_P
  #define TSpMnPlan TSpMnPlan
  #define TSpMnPlan_P TSpMnPlan_P
  #define TSpMnPl TSpMnPl
  #define TSpMnPl_P TSpMnPl_P
  #define TValSpMnp TValSpMnp
  #define TValSpMnp_P TValSpMnp_P
  #define TPropSpMn TPropSpMn
  #define TPropSpMn_P TPropSpMn_P
  #define TMnAnal TMnAnal
  #define TMnAnal_P TMnAnal_P
  #define TNormNZP TNormNZP
  #define TNormNZP_P TNormNZP_P
  #define TResInfo TResInfo
  #define TResInfo_P TResInfo_P
  #define TIndent TIndent
  #define TIndent_P TIndent_P
  #define TClaim TClaim
  #define TClaim_P TClaim_P
  #define TSpFormPl TSpFormPl
  #define TSpFormPl_P TSpFormPl_P
  #define TFormPl TFormPl
  #define TFormPl_P TFormPl_P
  #define TtmOutm TtmOutm
  #define TtmOutm_P TtmOutm_P
  #define TtmInpm TtmInpm
  #define TtmInpm_P TtmInpm_P
  #define TSFilters TSFilters
  #define TSFilters_P TSFilters_P
  #define TOperPlan TOperPlan
  #define TOperPlan_P TOperPlan_P
  #define TSpOperPlan TSpOperPlan
  #define TSpOperPlan_P TSpOperPlan_P
  #define TOPInfo TOPInfo
  #define TOPInfo_P TOPInfo_P
  #define TSpSpObAc TSpSpObAc
  #define TSpSpObAc_P TSpSpObAc_P

#else
  #define TWayAccou type$WayAccou
  #define TWayAccou_P type$p_WayAccou
  #define TSpWayAc type$SpWayAc
  #define TSpWayAc_P type$p_SpWayAc
  #define TObjAcct type$ObjAcct
  #define TObjAcct_P type$p_ObjAcct
  #define TSpObjAcc type$SpObjAcc
  #define TSpObjAcc_P type$p_SpObjAcc
  #define TObjParam type$ObjParam
  #define TObjParam_P type$p_ObjParam
  #define TSpObjPar type$SpObjPar
  #define TSpObjPar_P type$p_SpObjPar
  #define TNeedMats type$NeedMats
  #define TNeedMats_P type$p_NeedMats
  #define TSpNeedMt type$SpNeedMt
  #define TSpNeedMt_P type$p_SpNeedMt
  #define TMnPlan type$MnPlan
  #define TMnPlan_P type$p_MnPlan
  #define TSpMnPlan type$SpMnPlan
  #define TSpMnPlan_P type$p_SpMnPlan
  #define TSpMnPl type$SpMnPl
  #define TSpMnPl_P type$p_SpMnPl
  #define TValSpMnp type$ValSpMnp
  #define TValSpMnp_P type$p_ValSpMnp
  #define TPropSpMn type$PropSpMn
  #define TPropSpMn_P type$p_PropSpMn
  #define TMnAnal type$MnAnal
  #define TMnAnal_P type$p_MnAnal
  #define TNormNZP type$NormNZP
  #define TNormNZP_P type$p_NormNZP
  #define TResInfo type$ResInfo
  #define TResInfo_P type$p_ResInfo
  #define TIndent type$Indent
  #define TIndent_P type$p_Indent
  #define TClaim type$Claim
  #define TClaim_P type$p_Claim
  #define TSpFormPl type$SpFormPl
  #define TSpFormPl_P type$p_SpFormPl
  #define TFormPl type$FormPl
  #define TFormPl_P type$p_FormPl
  #define TtmOutm type$tmOutm
  #define TtmOutm_P type$p_tmOutm
  #define TtmInpm type$tmInpm
  #define TtmInpm_P type$p_tmInpm
  #define TSFilters type$SFilters
  #define TSFilters_P type$p_SFilters
  #define TOperPlan type$OperPlan
  #define TOperPlan_P type$p_OperPlan
  #define TSpOperPlan type$SpOperPlan
  #define TSpOperPlan_P type$p_SpOperPlan
  #define TOPInfo type$OPInfo
  #define TOPInfo_P type$p_OPInfo
  #define TSpSpObAc type$SpSpObAc
  #define TSpSpObAc_P type$p_SpSpObAc

#end

#end // __TMnPlan__vih__
