// =============================================================================
//                                                     (c)  корпорация Галактика
// Галактика 7.11
// Описание интерфейса "Общие функции для ограничений на расчет потребностей в ресурсах"
// =============================================================================

#include PrmTree_CF.vih

#component "M_MnPlan"

//******************************************************************************
// ObjInterface oLimitCR_CF
#ifndef __Def_oLimitCR_CF__
#define __Def_oLimitCR_CF__
#doc
 Описание интерфейса "Общие функции для ограничений на расчет потребностей в ресурсах"</brief>
#end
ObjInterface oLimitCR_CF;

//------------------------------------------------------------------------------
#doc
 Контроль данных перед созданием новой записи LimitCR</brief> <br>
 Параметры: <br>
   ar_LimitCR - Запись LimitCR <br>
 Результат: <br>
   tsOk - если все нормально, иначе - код ошибки <br>
#end
Function LimitCR_ChkBIns(ar_LimitCR: type$FormPl): longint;

//------------------------------------------------------------------------------
#doc
 Создание новой записи LimitCR</brief> <br>
 Параметры: <br>
   ar_LimitCR - Запись LimitCR <br>
 Результат: <br>
   tsOk - если все нормально, иначе - код ошибки <br>
#end
Function LimitCR_Ins(var ar_LimitCR: type$FormPl): longint;

//------------------------------------------------------------------------------
#doc
 Контроль данных перед модификацией записи LimitCR</brief> <br>
 Параметры: <br>
   ar_LimitCR - Запись LimitCR <br>
   asFldName  - Имя поля, на которое надо установить фокус в случае ошибки (возвращается) <br>
 Результат: <br>
   tsOk - если все нормально, иначе - код ошибки <br>
#end
Function LimitCR_ChkBUpd(ar_LimitCR: type$FormPl; var asFldName: string): longint;

//------------------------------------------------------------------------------
#doc
 Модификация существующей записи LimitCR</brief> <br>
 Параметры: <br>
   ar_LimitCR - Запись LimitCR <br>
 Результат: <br>
   tsOk - если все нормально, иначе - код ошибки <br>
#end
Function LimitCR_Upd(ar_LimitCR: type$FormPl): longint;

//------------------------------------------------------------------------------
#doc
 Контроль данных перед удалением записи LimitCR</brief> <br>
 Параметры: <br>
   acRec - Ссылка на запись LimitCR <br>
 Результат: <br>
   tsOk, если успешно, иначе - код ошибки <br>
#end
Function LimitCR_ChkBDel(acRec: comp): longint;

//------------------------------------------------------------------------------
#doc
 Удаление записи LimitCR</brief> <br>
 Параметры: <br>
   acRec - Ссылка на запись LimitCR <br>
 Результат: <br>
   tsOk, если успешно, иначе - код ошибки <br>
#end
Function LimitCR_Del(acRec: comp): longint;

//------------------------------------------------------------------------------
#doc
 Установка текущего ограничения на расчет потребностей в ресурсах</brief> <br>
 Параметры: <br>
   acRec       - Ссылка на запись LimitCR <br>
   abFlRefresh - Флаг обновления текущей записи, если ее nRec совпадает с acRec <br>
 Результат: <br>
   tsOk, если успешно, иначе - код ошибки <br>
#end
Function SetCurLimitCR(acRec: comp; abFlRefresh: boolean): longint;

//------------------------------------------------------------------------------
#doc
 Получение значения параметра для текущего ограничения на расчет потребностей в ресурсах</brief> <br>
 Параметры: <br>
   asPrmName - Имя параметра <br>
 Результат: <br>
   Значение параметра, если не найден - пустая строка <br>
#end
Function GetPrmVal(asPrmName: string): string;

//------------------------------------------------------------------------------
#doc
 Текущая запись PrmVLR</brief> <br>
 Результат: <br>
   Запись PrmVLR <br>
#end
Function RecPrmVLR: TRecPrmVLR;

//------------------------------------------------------------------------------
#doc
 Получение первой записи для PrmVLR</brief> <br>
 Параметры: <br>
   asPrmName - Имя параметра <br>
 Результат: <br>
   tsOk, если успешно, иначе - код ошибки <br>
#end
Function PrmVLR_GetFirst(asPrmName: string): longint;

//------------------------------------------------------------------------------
#doc
 Получение последней записи для PrmVLR</brief> <br>
 Параметры: <br>
   asPrmName - Имя параметра <br>
 Результат: <br>
   tsOk, если успешно, иначе - код ошибки <br>
#end
Function PrmVLR_GetLast(asPrmName: string): longint;

//------------------------------------------------------------------------------
#doc
 Получение следующей записи относительно текущей позиции для PrmVLR</brief> <br>
 Параметры: <br>
   asPrmName - Имя параметра <br>
 Результат: <br>
   tsOk, если успешно, иначе - код ошибки <br>
#end
Function PrmVLR_GetNext(asPrmName: string): longint;

//------------------------------------------------------------------------------
#doc
 Получение предыдующей записи относительно текущей позиции для PrmVLR</brief> <br>
 Параметры: <br>
   asPrmName - Имя параметра <br>
 Результат: <br>
   tsOk, если успешно, иначе - код ошибки <br>
#end
Function PrmVLR_GetPrev(asPrmName: string): longint;

End; // ObjInterface oLimitCR_CF
VipInterface iLimitCR_CF implements oLimitCR_CF Licensed(Free);

#endif
