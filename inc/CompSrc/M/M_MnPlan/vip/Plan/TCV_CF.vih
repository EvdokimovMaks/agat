/*
 ╔═══════════════════════════════════════════════════════════════════════════╗
 ║                     (c) 2004 корпорация ГАЛАКТИКА                         ║
 ║ Проект        : ГАЛАКТИКА                                                 ║
 ║ Система       : Производственное планирование                             ║
 ║ Версия        : 7.1                                                       ║
 ║ Назначение    : Общие функции работы с таблицами расчета количеств        ║
 ║ Ответственный : Гиль Кирилл Евгеньевич <Kirill>                           ║
 ╚═══════════════════════════════════════════════════════════════════════════╝
*/

#ifndef __Def_OI_TCV_CF__
#define __Def_OI_TCV_CF__

#ifdef ComponentVersion
#component "M_MnPlan"
#endif

#include oiEvnLog.vih
#include DebugObj.vih
#include oDocSpecFltr.vih
#include GetTekOstDateObj.vih
#include TCV_ParBuff.vih
#include TCVTmplClnObj.vih
#include TCVTmplAnlObj.vih


//VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV
// Типы данных
//******************************************************************************
#Include CntSyst.inc
#include TCV.inc


//VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV
// ObjInterface oTCV_CF
ObjInterface oTCV_CF;
  Procedure InitInter;
  Procedure DoneInter;

  //****************************************************************************
  Procedure SetvarGlb_for_PF_Posthran(prcTypeMC_PF_Posthran : comp; prcParty_PF_Posthran : comp);
!  Function GetFlag_TekMC_PF_Posthran(prcMC : comp) : boolean;
  //****************************************************************************
  Function LoadGetTekOstDateObj(prGetTekOstDateObj : oGetTekOstDate) : boolean;
  //****************************************************************************
  Function GetwList_TmpTabTemplate_Wrk(prTCVStr : type$SpMnPlan; prTCVTmplClnObj : oTCVTmplCln) : word;
  //****************************************************************************
  Function GetActiveDoc_Vh(prDate : date; prTypeDoc_S_Vh : word; prTCVStr : type$SpMnPlan; wProd : word;
                           prwIzgotovitel : word; prcIzgotovitel : comp;
                           prcRole_1 : comp; prKodGrKau_1 : word; prcAnVal_1 : comp;
                           prcRole_2 : comp; prKodGrKau_2 : word; prcAnVal_2 : comp;
                           prcRole_3 : comp; prKodGrKau_3 : word; prcAnVal_3 : comp) : comp;
  Function GetActiveDoc_Ish(prTypeDoc_S_Ish : word; prTCVStr : type$SpMnPlan; wProd : word) : comp;
  //****************************************************************************
  Function GetTCVStr_InfoDoc_Vh(prTCVStr : type$SpMnPlan; var prTypeHeadDoc : word; var prRefHeadDoc : comp) : boolean;
  Function GetTCVStr_InfoDoc_Ish(prTCVStr : type$SpMnPlan; var prTypeHeadDoc : word; var prRefHeadDoc : comp) : boolean;
  //****************************************************************************
  Function GetFlagZeroKol_for_oneTCVStr(prTCVStr : type$SpMnPlan; prTypeRecFld : word; prTypeDS : word; prTCVTmplClnObj : oTCVTmplCln) : boolean;
  Function SetAllColumn_for_TCVStr(prTCVHead : type$MnPlan; prTCVTmplClnObj : oTCVTmplCln; prTCVTmplAnlObj : oTCVTmplAnl;
                                   prTCVStr : type$SpMnPlan; prFlag_RspKolNZP : word; var aoEvnLog: oiEvnLog) : longint;
  Function Ins_TCVStr_Full(prTCVHead : type$MnPlan; prTCVTmplClnObj : oTCVTmplCln; prTCVTmplAnlObj : oTCVTmplAnl; var prTCVStr : type$SpMnPlan; var aoEvnLog: oiEvnLog) : comp;
  Function SetResInNewTCVStr(prTCVHead : type$MnPlan; prFagGrRes : word; prTopTypeIzd : word; prS_TCVStr_Res : StructTCVStr_Res; prRefMnPlan : comp; prRefSpMnPlan : comp;
                             prRefShablon_Wrk : comp; prRefShablon_Vh : comp; prRefPodr : comp; prRefMOL : comp;
                             prS_TCVPrmIO_Vh : StructTCVPrmIO; prS_TCVPrmIO_Ish : StructTCVPrmIO;
                             prTCVTmplClnObj : oTCVTmplCln; prTCVTmplAnlObj : oTCVTmplAnl; var prTCVStr : type$SpMnPlan) : longInt;
  //****************************************************************************
  Function DeleteAllTCVStr_Party(prRefTCVHead : comp) : boolean;
  Function DeleteDownTCVStr_Party(prRefTopTCVStr : comp) : boolean;
  Function GetDefTCVStr_Down(prTCVHead : type$MnPlan; prTopTCVStr : type$SpMnPlan; prTypeIzd : word; prcIzd : comp; prFlag_Party : word;
                                                prS_TCVPrmIO_Vh : StructTCVPrmIO; prS_TCVPrmIO_Ish : StructTCVPrmIO; var prTCVStr : type$SpMnPlan) : Boolean;
  //****************************************************************************
  Function GetFlagUseColumn_TypeDSTmpl(prTypeDS : word; prList_TCVTmpl : word; prTCVTmplClnObj : oTCVTmplCln) : boolean;   // потом перенсти в TCVTemplObj !!!!!!!!!!!!
  Function GetFlagUseColumn_TypeDSTmpl_Full(prTypeDS : word; prIndexDS : comp; prTypeRecFld : word; prList_TCVTmpl : word; prTCVTmplClnObj : oTCVTmplCln) : boolean;   // потом перенсти в TCVTemplObj !!!!!!!!!!!!
  Function GetFlagUseColumn_Quality(prList_TCVTmpl : word; prTCVTmplClnObj : oTCVTmplCln) : boolean;
  Function GetFlagUseDate_to_RecFldInfo(prTypeRecFld : word; prList_TCVTmpl : word; prTCVTmplClnObj : oTCVTmplCln) : boolean;
  Function SetTabMnCena_For_NZP(prTypeDoc : word; prRefDoc : comp) : boolean;
  Function SetKolRsp_bez_Ostatka(prTCVHead : type$MnPlan; prFlagConv_Mnf_Gr_Res : word;
                                 prNumCln_Src_Norm : word;
                                 prNumCln_Src_GP : word; prNumCln_Src_S : word; prNumCln_Dst_S : word; prTCVTmplClnObj : oTCVTmplCln) : boolean;
  //****************************************************************************
  Function GetActTCVHead_Vh(prTypeOwn : word; prRefOwner : comp) : type$MnPlan;
  //****************************************************************************
  // чтение данных для ведомости материалов из спецификации
  Function TCV_InsFromDoc_MP(
    prTCVHead                  : type$MnPlan;
    prTCVTmplClnObj            : oTCVTmplCln;
    prTCVTmplAnlObj            : oTCVTmplAnl;
    prList_TTMaskaGrRes        : word;
    S_TCVPrm_Vh                : StructTCVPrmIO;                  // параметры вх/вых данных
    S_TCVPrm_Vh_Ext            : StructTCVPrmIO_Ext;              // параметры вх/вых данных
    S_TCVPrm_Ish               : StructTCVPrmIO;                  // параметры вх/вых данных
    prFlag_RspKolNZP           : word;
    var prDocSpecFltrObj       : oDocSpecFltr
  ): longint;                               // tsOk, если успешно, иначе - код ошибки

Function TCV_InsFromDoc_S_OneMP(
    prDate                     : date;
    prTCVHead                  : type$MnPlan;
    prTCVStr                   : type$SpMnPlan;
    prTCVTmplClnObj            : oTCVTmplCln;
    prTCVTmplAnlObj            : oTCVTmplAnl;
    prList_TTMaskaGrRes        : word;
    S_TCVPrm_Vh                : StructTCVPrmIO;
    S_TCVPrm_Vh_Ext            : StructTCVPrmIO_Ext;
    S_TCVPrm_Ish               : StructTCVPrmIO;
    prFlag_RspKolNZP           : word;
    prSwitch_KategoryRes       : word;
    prFlag_UchetKoefPoter      : word;
    prwIzgotovitel : word; prcIzgotovitel : comp;
    prcRole_1 : comp; prKodGrKau_1 : word; prcAnVal_1 : comp;
    prcRole_2 : comp; prKodGrKau_2 : word; prcAnVal_2 : comp;
    prcRole_3 : comp; prKodGrKau_3 : word; prcAnVal_3 : comp;
    prcRole_SpMnPlan : comp; prKodGrKau_SpMnPlan : word
  ) : longint; // tsOk, если успешно, иначе - код ошибки

Function TCV_InsFromDoc_S_AllMP(
    prDate                     : date;
    prTCVHead                  : type$MnPlan;
    prTCVTmplClnObj            : oTCVTmplCln;
    prTCVTmplAnlObj            : oTCVTmplAnl;
    prList_TTMaskaGrRes        : word;
    S_TCVPrm_Vh                : StructTCVPrmIO;
    S_TCVPrm_Vh_Ext            : StructTCVPrmIO_Ext;
    S_TCVPrm_Ish               : StructTCVPrmIO;
    prFlag_RspKolNZP           : word;
    prSwitch_KategoryRes       : word;
    prFlag_UchetKoefPoter      : word;
    prwIzgotovitel : word; prcIzgotovitel : comp;
    prcRole_1 : comp; prKodGrKau_1 : word; prcAnVal_1 : comp;
    prcRole_2 : comp; prKodGrKau_2 : word; prcAnVal_2 : comp;
    prcRole_3 : comp; prKodGrKau_3 : word; prcAnVal_3 : comp;
    prcRole_SpMnPlan : comp; prKodGrKau_SpMnPlan : word
  ) : longint; // tsOk, если успешно, иначе - код ошибки

/*
  Function ReadData(
    acTCV                  : comp;                            // ссылка на ТРК
    prTCVTmplClnObj           : oTCVTmplCln;
    S_TCVPrmMP_Vh          : StructTCVPrmIO;                  // параметры вх/вых данных
    S_TCVPrmMP_Vh_Ext      : StructTCVPrmIO_Ext;              // параметры вх/вых данных
    S_TCVPrmMP_Ish         : StructTCVPrmIO;                  // параметры вх/вых данных
    S_TCVPrmS_Vh           : StructTCVPrmIO;                  // параметры вх/вых данных
    S_TCVPrmS_Vh_Ext       : StructTCVPrmIO_Ext;              // параметры вх/вых данных
    S_TCVPrmS_Ish          : StructTCVPrmIO;                  // параметры вх/вых данных
    prDate_Start           : date;
    prDate_End             : date;
    prFlag_RspKolNZP       : word
  ): longint;                               // tsOk, если успешно, иначе - код ошибки
*/
  //****************************************************************************
  // запись данных ведомости материалов в спецификацию
Function TCV_InsToDoc_MP(
    prTCVHead                : type$MnPlan;                     // шапка ТРК
    prIndex_NameDoc_Part_1 : word; prNameDoc_Comment_1 : string;
    prIndex_NameDoc_Part_2 : word; prNameDoc_Comment_2 : string;
    prIndex_NameDoc_Part_3 : word; prNameDoc_Comment_3 : string;
    prdtBeg : date; prdtEnd : date;
    prTCVTmplClnObj          : oTCVTmplCln;
    prTCVTmplAnlObj          : oTCVTmplAnl;
    S_TCVPrm                 : StructTCVPrmIO;                       // параметры вх/вых данных
    S_TCVPrm_Ext             : StructTCVPrmIO_Ext;                   // параметры вх/вых данных
    prFlag_KolNormVid        : word;
    prFlCreateNormForDocPlan : word
    ) : integer;

Function TCV_InsToDoc_S_OneMP(
    prTCVHead : type$MnPlan; prTCVStr : type$SpMnPlan;
    prIndex_NameDoc_Part_1 : word; prNameDoc_Comment_1 : string;
    prIndex_NameDoc_Part_2 : word; prNameDoc_Comment_2 : string;
    prIndex_NameDoc_Part_3 : word; prNameDoc_Comment_3 : string;
    prdtBeg : date; prdtEnd : date;
    prTCVTmplClnObj          : oTCVTmplCln;
    prTCVTmplAnlObj          : oTCVTmplAnl;
    S_TCVPrm                 : StructTCVPrmIO;                       // параметры вх/вых данных
    S_TCVPrm_Ext             : StructTCVPrmIO_Ext;                   // параметры вх/вых данных
    prFlag_KolNormVid        : word;
    prFlCreateNormForDocPlan : word
    ) : integer;

Function TCV_InsToDoc_S_AllMP(
    prTCVHead : type$MnPlan;                      // шапка ТРК
    prIndex_NameDoc_Part_1 : word; prNameDoc_Comment_1 : string;
    prIndex_NameDoc_Part_2 : word; prNameDoc_Comment_2 : string;
    prIndex_NameDoc_Part_3 : word; prNameDoc_Comment_3 : string;
    prdtBeg : date; prdtEnd : date;
    prTCVTmplClnObj          : oTCVTmplCln;
    prTCVTmplAnlObj          : oTCVTmplAnl;
    S_TCVPrm                 : StructTCVPrmIO;                       // параметры вх/вых данных
    S_TCVPrm_Ext             : StructTCVPrmIO_Ext;                   // параметры вх/вых данных
    prFlag_KolNormVid        : word;
    prFlCreateNormForDocPlan : word
    ) : integer;

!  Function SaveData(
!    acTCV               : comp;                                  // ссылка на ТРК
!    prdtBeg             : date;
!    prdtEnd             : date;
!    prTCVTmplClnObj        : oTCVTmplCln;
!    S_TCVPrmMP_Ish      : StructTCVPrmIO;                        // параметры вх/вых данных
!    S_TCVPrmMP_Ish_Ext  : StructTCVPrmIO_Ext;                    // параметры вх/вых данных
!    S_TCVPrmS_Ish       : StructTCVPrmIO;                        // параметры вх/вых данных
!    S_TCVPrmS_Ish_Ext   : StructTCVPrmIO_Ext;                    // параметры вх/вых данных
!    prFlag_KolNormVid   : word
!  ) : longint;                                // tsOk, если успешно, иначе - код ошибки

  //****************************************************************************
  // получение значения позиции ТРК.
  Function GetVL(
    acTCV: comp;                            // ссылка на ТРК
    asStrNmb: string;                       // номер строки ТРК
    awFldNmb: word                          // номер поля ТРК
  ): double;                                // значение для заданной позиции ТРК если она найдена, иначе   -1

  //****************************************************************************
  // запись нового значения позиции ТРК.
  Function SetVL(
    acTCV: comp;                            // ссылка на ТРК
    asStrNmb: string;                       // номер строки ТРК
    awFldNmb: word;                         // номер поля ТРК
    adValue: double                         // новое значение
  ): longint;                               // tsOk, если успешно, иначе - код ошибки

  //****************************************************************************
  // получение кол-ва партий, связ. (присвоенных) заданному материалу (строке ТРК)
  Function GetPNUM(
    acTCV: comp;                            // ссылка на ТРК
    asStrNmb: string                        // номер строки ТРК
  ): longint;                               // кол-ва партий, связ. (присвоенных) заданному материалу (строке ТРК). Если партии не заданы, 1

  //****************************************************************************
  // получение суммарного кол-ва в партиях, связ. (присвоенных) заданному материалу (строке ТРК)
  Function GetPSUM(
    acTCV: comp;                            // ссылка на ТРК
    asStrNmb: string                        // номер строки ТРК
  ): double;                                // суммарнное кол-во в связ. (присвоенных) партиях. Если партии не заданы, то = кол-ву материала

  //****************************************************************************
  // получение среднеарифмет. кол-ва в партиях, связ. (присвоенных) заданному материалу (строке ТРК)
  Function GetPAMV(
    acTCV: comp;                            // ссылка на ТРК
    asStrNmb: string                        // номер строки ТРК
  ): double;                                // среднеарифмет. кол-во в связ. (присвоенных) партиях. Если партии не заданы, то = кол-ву материала

  //****************************************************************************
  // получение среднеарифмет. кол-ва для заданного поля в партиях, связ. (присвоенных) заданному материалу (строке ТРК)
  Function GetPAMV2(
    acTCV: comp;                            // ссылка на ТРК
    asStrNmb: string;                       // номер строки ТРК
    awFldNmb: word                          // номер поля ТРК
  ): double;                                // среднеарифмет. кол-во в связ. (присвоенных) партиях. Если партии не заданы, то = кол-ву материала

  //****************************************************************************
  // получение суммарного взвешенного кол-ва продукта для заданного поля в партиях, связ. (присвоенных) заданному материалу (строке ТРК)
  Function GetPPSM(
    acTCV: comp;                            // ссылка на ТРК
    asStrNmb: string;                       // номер строки ТРК
    awFldNmb: word                          // номер поля ТРК
  ): double;                                // Сумма_по_партиям (Кол-во_в_партии * значение_поля). Если партии не заданы, то =
                                            // кол-ву материала * значение_поля

  //****************************************************************************
  // получение суммарного взвешенного кол-ва продукта для 2-х заданных полей в партиях, связ. (присвоенных) заданному материалу (строке ТРК)
  Function GetPPSM2(
    acTCV: comp;                            // ссылка на ТРК
    asStrNmb: string;                       // номер строки ТРК
    awFldNmb1: word  ;                      // номер поля ТРК
    awFldNmb2: word                         // номер поля ТРК
  ): double;                                // Сумма_по_партиям (значение_поля1 * значение_поля2). Если партии не заданы, то =
                                            // значение_поля1 * значение_поля2

  //****************************************************************************
  // получение суммарного кол-ва продукта, деленного на знач. заданного поля в партиях, связ. (присвоенных) заданному материалу (строке ТРК)
  Function GetPQSM(
    acTCV: comp;                            // ссылка на ТРК
    asStrNmb: string;                       // номер строки ТРК
    awFldNmb: word                          // номер поля ТРК
  ): double;                                // Сумма_по_партиям (Кол-во_в_партии / значение_поля). Если партии не заданы, то =
                                            // кол-ву материала / значение_поля

  //****************************************************************************
  // получение суммарного знач. по полю 1, деленного на знач. заданного поля 2, в партиях, связ. (присвоенных) заданному материалу (строке ТРК)
  Function GetPQSM2(
    acTCV: comp;                            // ссылка на ТРК
    asStrNmb: string;                       // номер строки ТРК
    awFldNmb1: word  ;                      // номер поля ТРК 1
    awFldNmb2: word                         // номер поля ТРК 2
  ): double;                                // Сумма_по_партиям (значение_поля1 / значение_поля2). Если партии не заданы, то =
                                            // (значение_поля1 / значение_поля2)

  //****************************************************************************
  // вычисление значения выражения (формулы)
!  Function GetExprValue(
!    acTCV: comp;                            // ссылка на ТРК
!    asExpr: string                          // строка-выражение(формула)
!  ): double;                                // знач., дибо -1 если ошибка

  //****************************************************************************
  // расчет выхода продукта
  Function CalcOutcome(
    acTCV        : comp;                             // ссылка на ТРК
    prTCVTmplClnObj : oTCVTmplCln
  ): longint;                               // если все норм. - tsOk, иначе - код ошибки

  //****************************************************************************
  // расчет кол-ва материала (Сырье)
  Function CalcStuff(
    acTCV        : comp;                             // ссылка на ТРК
    prTCVTmplClnObj : oTCVTmplCln
  ): longint;                               // если все норм. - tsOk, иначе - код ошибки

  //****************************************************************************
  Function GetType_for_StructVhIshDoc(prTypeDoc_StructIO : word; prFlagRspRes : word; prRefTopTCVStr : comp; prTopTypeIzd : word; prTypeIzd : word) : StructTCVStr_VhIshDoc;
  Function Get_StructVh_Tek(prRefTopTCVStr : comp; prTopTypeIzd : word; prTypeIzd : word; prFlagParty : word; prS_TCVPrmIO_Vh : StructTCVPrmIO) : StructTCVStr_VhIshDoc;
  Function Get_StructIsh_Tek(prRefTopTCVStr : comp; prTopTypeIzd : word; prTypeIzd : word; prFlagParty : word; prS_TCVPrmIO_Ish : StructTCVPrmIO) : StructTCVStr_VhIshDoc;
  //****************************************************************************
  Procedure GetTune_For_ActDoc(prTypeRecFld : word; prTypeDocOwn : word; prRefDocOwn : comp; var prS_TCVPrmIO : StructTCVPrmIO; var prS_TCVPrmIO_Ext : StructTCVPrmIO_Ext);
  //****************************************************************************
  Function Set_RefVhInfo_for_OneTCVStr(prTCVHead : type$MnPlan; prTCVStr : type$SpMnPlan; prTCVHead_Vh : type$MnPlan; prFlag_Agr1_Vh0 : word) : boolean;
  Function Set_RefVhInfo_for_AllTCVStr(prTCVHead : type$MnPlan; prS_TCVPrmIO_S_Vh : StructTCVPrmIO; prS_TCVPrmIO_S_Vh_Ext : StructTCVPrmIO_Ext; prFlag_Agr1_Vh0 : word) : boolean;
  Function SetForAllTCVStr_ShablonVh(prTCVHead : type$MnPlan; prTCVTmplClnObj : oTCVTmplCln) : boolean;
  Function SetForAllTCVStr_ShablonAgr(prTCVHead : type$MnPlan; prTCVTmplClnObj : oTCVTmplCln) : boolean;
  Function ImportNormQuality_for_AllTCVStr(prRefTCVHead : comp; prS_TCVPrmIO_S_Vh_Ext : StructTCVPrmIO_Ext; prFlagLoadVLT : boolean; prTCVTmplClnObj : oTCVTmplCln) : boolean;
  Function SetInfo_from_AllTCVStr_Vh(prTCVHead : type$MnPlan; prS_TCVPrmIO_S_Vh : StructTCVPrmIO; prS_TCVPrmIO_S_Vh_Ext : StructTCVPrmIO_Ext;
                                     prTCVTmplClnObj : oTCVTmplCln; prTCVTmplAnlObj : oTCVTmplAnl; prList_TTMaskaGrRes : word; prTCV_ParBuffObj : oTCV_ParBuff;
                                     prDate_Start : date; prDate_End : date; prFlag_RspKolNZP : word) : boolean;
  Function GetRefDocNorm_from_MnPlan_Wrk(prType_MnPlan : word; prRefMnPlan : comp; prTypeIzd : word; prRefIzd : comp; prType_DocNorm : word;
                                                                                                                  prNumber : string; var prRef_DocNorm : comp) : string;
  //****************************************************************************
  Function SetAgr_TCVStr_GrRes(prListTmpGrN_F : word; prRefTCVStr : comp; prTypeGrRes : word; prRefGrRes : comp; prTCVTmplClnObj : oTCVTmplCln; prTCVTmplAnlObj : oTCVTmplAnl; var prCountConv : comp) : string;
  Function SetAgregationRes(prRefTCVStr : comp; prTCVTmplClnObj : oTCVTmplCln; prTCVTmplAnlObj : oTCVTmplAnl) : string;
  Function ConvGr_Fact_TCVStr_from_TmpGrN(prListTmpGrN_F : word; var prCountConv_All : comp; var prCountConv_MCUsl : comp; var prCountConv_Wrk : comp;
                                          var prTCVTmplClnObj : oTCVTmplCln; var prTCVTmplAnlObj : oTCVTmplAnl) : string;

  Function SetTmpGrN_from_Order_All(prDate_Start : date; prDate_End : date; prTypeRecFld : word; prListShablon : word;
                                    prTCVTmplClnObj : oTCVTmplCln; prTCV_ParBuffObj : oTCV_ParBuff) : boolean;
  //****************************************************************************
  Function Convert_TmplFrm_to_WrkFrm(prRefTmpl_Frm_AllMemo : comp; prRefWrk_Frm_AllMemo : comp) : string;
  //****************************************************************************
  // конвертация данных ТРК по новому шаблону
  Function ConvertRecords(prRefTCVHead : comp; var aoEvnLog: oiEvnLog) : boolean;
  //****************************************************************************
  Function DeleteAllErrTCVStr(prRefTCVHead : comp) : boolean;

  //****************************************************************************
  //  Отладка
  Function GetStrDsk_Deb : string;
  Procedure SetStrDsk_Deb(prStrDSK_Deb : string);
  Function GetNameObj : string;
  Procedure SetNameObj(prNameObj : string);
  Function LoadDebugObj(prDebugObj : oDebug) : boolean;
  Function GetModeDebug : boolean;
  Function SetModeDebug(prFlagDebug : boolean) : Boolean;
  Procedure SetStartVarDebug(prStrDSK_Deb : string; prNameObj : string);
  Function RunWindow_Debug(prTypeWnd : word; prNameWnd : string; prDebStr : string) : Boolean;
  Function SetExtInfoDebug(prDebugObj : oDebug) : Boolean;

  //****************************************************************************

  Procedure WrDeb_StructTCVPrmIO(prStrTitle : string; S_TCVPrmIO : StructTCVPrmIO; prNameFunc : string);
  Procedure WrDeb_StructTCVPrmIO_Ext(prStrTitle : string; S_TCVPrmIO_Ext : StructTCVPrmIO_Ext; prNameFunc : string);

End; // ObjInterface oTCV_CF
#end
