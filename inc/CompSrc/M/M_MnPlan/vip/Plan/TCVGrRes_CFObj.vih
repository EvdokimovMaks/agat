/*
 ╔═══════════════════════════════════════════════════════════════════════════╗
 ║                     (c) 2000 корпорация ГАЛАКТИКА                         ║
 ║ Проект        : ГАЛАКТИКА                                                 ║
 ║ Система       : Производственное планирование                             ║
 ║ Версия        : 7.1                                                       ║
 ║ Назначение    : Объект для работы с шаблонами таблиц расчета количеств    ║
 ║ Ответственный : Левченко Андрей Александрович (Andrew)                    ║
 ╚═══════════════════════════════════════════════════════════════════════════╝
*/
// выдавать сообщение если в шаблоне не определенео ни одного столбика
// потом надо сделать на закладке выбор разреза хранения !!!!!!!!!!!!!!!! не надо мы это будем делать в лок меню

#ifdef ComponentVersion
#component "M_MnPlan"
#endif


#ifndef __TCVGrRes_VIH__
#define __TCVGrRes_VIH__

#Include CntSyst.inc
#include TCV.inc
#Include TCVGrRes.tbl

#include DebugObj.vih


ObjInterface oTCVGrRes_CF;
//------------------------ Системные функции ----------------------------------------------
  Function KillAllTab_CasheGrRes : string;
  Function KillAllTab_ListNotUsedMaska : string;
  Function KillAllTmpTab : boolean;
//------------------------------------------------------------------------------------------
  Function Del_TTShablon_GrRes_One(prcTTShablon_GrRes : comp) : string;
  Function SetDefTTShablon_GrRes(prList : word; prNPP : word; prTypeGrRes : word; var prTTShablon_GrRes : type$TTShablon_GrRes) : boolean;
  Function Get_TTShablon_GrRes_from_Shablon(prList : word; prTypeGrRes : word; prcShablon : comp) : type$TTShablon_GrRes;
  Function SetTTShablon_GrRes_Full(prRefTTShablon_GrRes : comp; prList : word; prNPP : word; prTypeGrRes : word; prcShablon : comp; var prTTShablon_GrRes : type$TTShablon_GrRes) : string;
  Function GetInfoTmpl_from_ResTCV(prTypeRes : word; prcRes : comp; var prcSloj_Res : comp; var prcShablon_Res : comp; var prcHashAn_Res : comp) : string;

  Function SetDefTTList_GrRes(prList : word; prNPP : word; prTypeGrRes : word; prcShablon : comp; var prTTList_GrRes : type$TTList_GrRes) : boolean;
  Function Get_TTList_GrRes_from_RefGrRes(prList : word; prTypeGrRes : word; prcGrRes : comp) : type$TTList_GrRes;
  Function SetTTList_GrRes_Full(prcTTList_GrRes : comp; prList : word; prNPP : word; prTypeGrRes : word; prcGrRes : comp; var prTTList_GrRes : type$TTList_GrRes) : string;
  Function Del_TTList_GrRes_One(prcTTList_GrRes : comp) : string;

!  Function GetFlagUseAnl_from_MaskaAnl(prList : word; prTypeGrRes : word; prcGrRes : comp; prcRole : comp; prKodGrKau : word; prcAn : comp) : boolean;
  Function GetFlagConvert_Mnf_Gr_Res(prList_TTMaskaGrRes : word; prTypeRes_to : word; prRefRes_Fact : comp; prRefRes_Gr : comp) : boolean;
  Function GetFlagUseShablon_from_MaskaAnl(prList : word; prTypeGrRes : word; prcShablon : comp) : boolean;
  Function GetNumKolAnl_Used(prList : word; prTypeGrRes : word; prcGrRes : comp) : word;

!  Function GetFlagUseGrRes_from_MaskaAnl(prList : word; prTypeGrRes : word; prcGrRes : comp) : boolean;
  Function GetFirst_TTList_GrRes(prList : word; prTypeGrRes : word; prcShablon : comp; var prcGrRes : comp) : word;
  Function GetNext_TTList_GrRes(prList : word; prTypeGrRes : word; prcShablon : comp; prNPP : word; var prcGrRes : comp) : word;

  Function Conv_DictTab_TmpTab_OneMaskaGrRes(prcWayAccou_GrM : comp; prList : word) : boolean;
  Function Conv_TmpTab_DictTab_OneMaskaGrRes(prcWayAccou_GrM : comp; prList : word) : boolean;
//------------------------------------------------------------------------------------------
  Function GetRefGrRes(prList_TTMaskaGrRes : word; prTypeIzd_Fact : word; prcIzd_Fact : comp) : comp;
  Function SetTmpTabInfo_GrRes_from_MnfRes(prList_TTMaskaGrRes : word; prTypeIzd_Fact : word; prcIzd_Fact : comp) : string;
  Function GetFlagGrRes_for_Res(prList_TTMaskaGrRes : word; prTypeIzd : word; prcIzd : comp) : word;
  Function Set_GrRes_TmpGrN_From_Mnf_TmpGrN(pr_Mnf_TmpGrN : type$TmpGrN; prListTmpGrN_VDGrRes : word; prNumPage : word; prTypeRes : word; prRefGrRes : comp) : string;
  Function SetGrRes_VD_TmpGrN_All(prList_TTMaskaGrRes : word) : string;
  Function SetListTmpGrN_NotFindMaskaAn(prList_TmpGrN_F : word; prFlagSort : word; prFlagVisible_TmpGrN : word; var prFlag_FindResNotMaskaAnl : boolean) : string;
  Function DelCashe_from_TabNotMaskaAnl : string;
  Function SetGrRes_VD_TmpGrN_SelectUser(prList_TTMaskaGrRes : word) : string;
  Function SetCasheGrRes_SelectUser(prList_TmpGrN_F : word; prList_VDGrRes_TmpGrN : word) : string;

  Function SetTmpGrN_Conv_OneRec(prList_TTMaskaGrRes : word; prRefTCVStr : comp;
                                 prListTmpGrN_F : word; prFlagSort_F : word; prFlagVisible_TmpGrN_F : word; prListTmpGrN_G : word; prFlagSort_G : word) : string;
  Function SetTmpGrN_Conv_ListRec(prList_TTMaskaGrRes : word; prListPickTCVStr : word; prFlagConvRec : word; prSwtFlagGrRes : word; prFlagGrRes : word;
                                  prListTmpGrN_F : word; prFlagSort_F : word; prFlagVisible_TmpGrN_F : word; prListTmpGrN_G : word; prFlagSort_G : word;
                                  var prCountConv_All : comp; var prCountConv_MCUsl : comp; var prCountConv_Wrk : comp) : string;
  Function SetTmpGrN_Conv_AllRec_Gen(prList_TTMaskaGrRes : word; prTCVHead : type$MnPlan; prFlagConvRec : word; prSwtFlagGrRes : word; prFlagGrRes : word;
                                     prListTmpGrN_F : word; prFlagSort_F : word; prFlagVisible_TmpGrN_F : word; prListTmpGrN_G : word; prFlagSort_G : word;
                                     var prCountConv_All : comp; var prCountConv_MCUsl : comp; var prCountConv_Wrk : comp) : string;
  Function SetTmpGrN_Conv_AllRec(prList_TTMaskaGrRes : word; prTCVHead : type$MnPlan; prSwtFlagGrRes : word; prFlagGrRes : word;
                                 prListTmpGrN_F : word; prFlagSort_F : word; prFlagVisible_TmpGrN_F : word; prListTmpGrN_G : word; prFlagSort_G : word;
                                 var prCountConv_All : comp; var prCountConv_MCUsl : comp; var prCountConv_Wrk : comp) : string;

//------------------------ Системные функции ----------------------------------------------
  Function InitInter : boolean;
  Function DoneInter : boolean;
//------------------------- Отладка -------------------------------------------------------
  Function GetStrDsk_Deb : string;
  Procedure SetStrDsk_Deb(prStrDSK_Deb : string);
  Function GetNameObj : string;
  Procedure SetNameObj(prNameObj : string);
  Function LoadDebugObj(prDebugObj : oDebug) : boolean;
  Function GetModeDebug : boolean;
  Function SetModeDebug(prFlagDebug : boolean) : Boolean;
  Procedure SetStartVarDebug(prStrDSK_Deb : string; prNameObj : string);
  Function SetExtInfoDebug(prDebugObj : oDebug) : Boolean;
  Function RunWindow_Debug(prTypeWnd : word; prNameWnd : string; prDebStr : string) : Boolean;

end;
#end

