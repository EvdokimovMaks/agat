// =============================================================================
//                                                     (c)  корпорация Галактика
// Галактика 7.11
// Описание интерфейса-объекта "Список MRP-ресурсов"
// =============================================================================

#include ListNormDoc.vih //
#include ListAn.vih      //

#component "M_MnPlan"

//******************************************************************************
// Типы данных

//------------------------------------------------------------------------------
// MRP-ресурс
#ifndef __Def_TRecMRPRes__
#define __Def_TRecMRPRes__
#doc
 MRP-ресурс</brief> <br>
 Поля: <br>
   wPriority    - Приоритет ресурса <br>
   dtQuery      - Дата запроса/расчета <br>
   CalcGroup    - Код группы расчета <br>
   KAU_Res      - КАУ ресурса <br>
   cRes         - Ссылка на ресурс <br>
   oListAn      - Список аналитик для ресурса <br>
   oListND      - Список документов-норм для ресурса <br>
   wTypeUM      - Тип единицы измерения (0 - KatOtpEd, 1 - временная) <br>
   cUnitMsr     - Ссылка на единицу измерения (либо код временной ЕИ) <br>
   cCurrency    - Ссылка на валюту (используется для денежных величин) <br>
   dPlanCnt     - Плановое количество запрашиваемого/имеющегося ресурса <br>
   dCost        - Цена единицы запрашиваемого/имеющегося ресурса <br>
   dSum         - Сумма (плановая) для запрашиваемого/имеющегося ресурса <br>
   dTtlNeed     - Общая потребность запрашиваемого/имеющегося ресурса <br>
   dPlanCmn     - Плановые поступления запрашиваемого/имеющегося ресурса <br>
   dPlanAvl     - Плановое наличие запрашиваемого/имеющегося ресурса <br>
   dNetNeed     - Чистая потребность запрашиваемого/имеющегося ресурса <br>
   dOrdCount    - Количество заказа запрашиваемого/имеющегося ресурса <br>
   wRangeFindND - Диапазон поиска документов-норм для ресурса: <br>
     0: Объект планирования в заголовке <br>
     1: Объект планирования в спецификации <br>
     2: Объект планирования в заголовке, при отсутствии в спецификации <br>
     3: Объект планирования в спецификации, при отсутствии в заголовке <br>
   KAU_ND       - КАУ предпочтительного документа-нормы <br>
   cNormDoc     - Ссылка на предпочтительный документ-норму <br>
   wTypeNR      - Тип нормы для ресурса (0 - норма (Н), 1 -выход (В)) <br>
   wTypeOutP    - Тип продукта выхода (0 - готовая продукция, 1 - полуфабрикаты, 2 - отходы) <br>
   wPosNR       - Признак местоположения ресурса в документе-норме (0-заголовок, 1-спецификация) <br>
   wTypeUM_NR   - Тип единицы измерения нормируемого ресурса (0 - KatOtpEd, 1 - временная) <br>
   cUnitMsr_NR  - Ссылка на единицу измерения нормируемого ресурса (либо код временной ЕИ) <br>
   dCount_NR    - Количество нормируемого ресурса <br>
#end
Type TRecMRPRes = record
  wPriority: word;        // Приоритет ресурса
  dtQuery: date;          // Дата запроса/расчета
  CalcGroup: comp;        // Код группы расчета
  KAU_Res: word;          // КАУ ресурса
  cRes: comp;             // Ссылка на ресурс
  oListAn: oiListAn;      // Список аналитик для ресурса
  oListND: oiListNormDoc; // Список документов-норм для ресурса
  wTypeUM: word;          // Тип единицы измерения (0 - KatOtpEd, 1 - временная)
  cUnitMsr: comp;         // Ссылка на единицу измерения (либо код временной ЕИ)
  cCurrency: comp;        // Ссылка на валюту (используется для денежных величин)
  dPlanCnt: double;       // Плановое количество запрашиваемого/имеющегося ресурса
  dCost: double;          // Цена единицы запрашиваемого/имеющегося ресурса
  dSum: double;           // Сумма (плановая) для запрашиваемого/имеющегося ресурса
  dTtlNeed: double;       // Общая потребность запрашиваемого/имеющегося ресурса
  dPlanCmn: double;       // Плановые поступления запрашиваемого/имеющегося ресурса
  dPlanAvl: double;       // Плановое наличие запрашиваемого/имеющегося ресурса
  dNetNeed: double;       // Чистая потребность запрашиваемого/имеющегося ресурса
  dOrdCount: double;      // Количество заказа запрашиваемого/имеющегося ресурса
  wRangeFindND: word;     // Диапазон поиска документов-норм для ресурса:
                          //   0: Объект планирования в заголовке
                          //   1: Объект планирования в спецификации
                          //   2: Объект планирования в заголовке, при отсутствии в спецификации
                          //   3: Объект планирования в спецификации, при отсутствии в заголовке
  KAU_ND: word;           // КАУ предпочтительного документа-нормы
  cNormDoc: comp;         // Ссылка на предпочтительный документ-норму
  wTypeNR: word;          // Тип нормы для ресурса (0 - норма (Н), 1 -выход (В))
  wTypeOutP: word;        // Тип продукта выхода (0 - готовая продукция, 1 - полуфабрикаты, 2 - отходы)
  wPosNR: word;           // Признак местоположения ресурса в документе-норме (0-заголовок, 1-спецификация)
  wTypeUM_NR: word;       // Тип единицы измерения нормируемого ресурса (0 - KatOtpEd, 1 - временная)
  cUnitMsr_NR: comp;      // Ссылка на единицу измерения нормируемого ресурса (либо код временной ЕИ)
  dCount_NR: double;      // Количество нормируемого ресурса
End; // Type TRecMRPRes = record
#endif

//******************************************************************************
// ObjInterface oiListMRPRes
#ifndef __Def_OI_ListMRPRes__
#define __Def_OI_ListMRPRes__
#doc
 Описание интерфейса-объекта "Список MRP-ресурсов"</brief>
#end
ObjInterface oiListMRPRes;

//------------------------------------------------------------------------------
#doc
 Просмотр буфера</brief> <br>
 Параметры: <br>
   asWindowTitle - заголовок окна <br>
#end
Procedure ViewData(asWindowTitle: string);

//------------------------------------------------------------------------------
#doc
 Инициализация структуры типа TRecOutP</brief> <br>
 Параметры: <br>
   ardRecMRPRes - структура для хранения MRP-ресурса <br>
#end
Procedure InitRec(var ardRecMRPRes: TRecMRPRes);

//------------------------------------------------------------------------------
#doc
 Получение копии записи</brief> <br>
 Параметры: <br>
  awFlag           - Флаги: <br>
    1: копировать также ListAn <br>
    2: копировать также ListND <br>
  ardRecMRPRes_Src - Структура-источник для хранения MRP-ресурса <br>
  ardRecMRPRes_Dst - Структура-приемник для хранения MRP-ресурса <br>
 Результат: <br>
   True, если успешно <br>
#end
Function AssignRec(awFlag: word; ardRecMRPRes_Src: TRecMRPRes; var ardRecMRPRes_Dst: TRecMRPRes): boolean;

//------------------------------------------------------------------------------
#doc
 Получение порядкового номера текущей записи</brief> <br>
 Результат: <br>
   Npp записи, 0 - если запись не определена <br>
#end
Function GetCurRecNpp: comp;

//------------------------------------------------------------------------------
#doc
 Чтение текущей записи в списке</brief> <br>
 Параметры: <br>
   ardRecMRPRes - Структура для хранения MRP-ресурса <br>
 Результат: <br>
   True, если успешно <br>
#end
Function GetCurRec(var ardRecMRPRes: TRecMRPRes): boolean;

//------------------------------------------------------------------------------
#doc
 Обновление текущей записи в списке</brief> <br>
 Параметры: <br>
   ardRecMRPRes - Структура для хранения MRP-ресурса <br>
 Результат: <br>
   True, если успешно <br>
#end
Function UpdCurRec(ardRecMRPRes: TRecMRPRes): boolean;

//------------------------------------------------------------------------------
#doc
 Поиск в списке</brief> <br>
 Параметры: <br>
   ardRecMRPRes - Структура для хранения MRP-ресурса <br>
 Результат: <br>
   порядковый номер в списке <br>
#end
Function Find(ardRecMRPRes: TRecMRPRes): comp;

//------------------------------------------------------------------------------
#doc
 Переход на запись</brief> <br>
 Параметры: <br>
   acNpp - Порядковый номер в списке <br>
 Результат: <br>
   True, если успешно <br>
#end
Function GoToRec(acNpp: comp): boolean;

//------------------------------------------------------------------------------
#doc
 Добавление в список</brief> <br>
 Параметры: <br>
   ardRecMRPRes - Структура для хранения MRP-ресурса <br>
 Результат: <br>
   порядковый номер <br>
#end
Function Add(ardRecMRPRes: TRecMRPRes): comp;

//------------------------------------------------------------------------------
#doc
 Очистка списка</brief> <br>
 Результат: <br>
   True, если успешно <br>
#end
Function Clear: boolean;

//------------------------------------------------------------------------------
#doc
 Удаление из списка</brief> <br>
 Параметры: <br>
   ardRecMRPRes - Структура для хранения MRP-ресурса <br>
 Результат: <br>
   True, если успешно <br>
#end
Function Del(ardRecMRPRes: TRecMRPRes): boolean;

//------------------------------------------------------------------------------
#doc
 Получение первой записи</brief> <br>
 Параметры: <br>
   ardRecMRPRes - Структура для хранения MRP-ресурса <br>
 Результат: <br>
   True, если запись найдена <br>
#end
Function GetFirstMRPRes(var ardRecMRPRes: TRecMRPRes): boolean;

//------------------------------------------------------------------------------
#doc
 Получение последней записи</brief> <br>
 Параметры: <br>
   ardRecMRPRes - Структура для хранения MRP-ресурса <br>
 Результат: <br>
   True, если запись найдена <br>
#end
Function GetLastMRPRes(var ardRecMRPRes: TRecMRPRes): boolean;

//------------------------------------------------------------------------------
#doc
 Получение следующей записи относительно текущей позиции</brief> <br>
 Параметры: <br>
   ardRecMRPRes - Структура для хранения MRP-ресурса <br>
 Результат: <br>
   True, если запись найдена <br>
#end
Function GetNextMRPRes(var ardRecMRPRes: TRecMRPRes): boolean;

//------------------------------------------------------------------------------
#doc
 Получение предыдующей записи относительно текущей позиции</brief> <br>
 Параметры: <br>
   ardRecMRPRes - Структура для хранения MRP-ресурса <br>
 Результат: <br>
   True, если запись найдена <br>
#end
Function GetPrevMRPRes(var ardRecMRPRes: TRecMRPRes): boolean;

//------------------------------------------------------------------------------
#doc
 Обнуление значений полей в записях списка</brief> <br>
 Параметры: <br>
   awFlFld - Битовый флаг для определения обнуляемых полей: <br>
     1: dCount <br>
     2: KAU_ND, cNormDoc <br>
 Результат: <br>
   True, если успешно <br>
#end
Function ClearFields(awFlFld: word): boolean;

End; // ObjInterface oiListMRPRes

VipInterface iListMRPRes implements oiListMRPRes Licensed(Free);

#end
