// =============================================================================
//                                                     (c)  корпорация Галактика
// Галактика 7.11 - Производственный контур
// Описание интерфейса-владельца дерева параметров
// =============================================================================

#component "M_MnPlan"

//******************************************************************************
// Типы данных

//------------------------------------------------------------------------------
// Структура для хранения информации о параметре
#ifndef __Def_TRltPrmInfo__
#define __Def_TRltPrmInfo__
#doc
 Структура для хранения информации о параметре</brief> <br>
 Поля: <br>
   Value      - Значение параметра <br>
   DT_Rlt     - Значение для имени связанного класса <br>
   PrmCaption - Наименование параметра <br>
   Value_Str  - Строковое значение параметра (для параметров-ссылок) <br>
   Value_New  - Новое значение параметра <br>
   DT_Rlt_New - Новое значение для имени связанного класса <br>
   Descript1  - Описание параметра (строка 1) <br>
   Descript2  - Описание параметра (строка 2) <br>
   Descript3  - Описание параметра (строка 3) <br>
#end
Type TRltPrmInfo = record
  Value: string;      // Значение параметра
  DT_Rlt: string;     // Значение для имени связанного класса
  PrmCaption: string; // Наименование параметра
  Value_Str: string;  // Строковое значение параметра (для параметров-ссылок)
  Value_New: string;  // Новое значение параметра
  DT_Rlt_New: string; // Новое значение для имени связанного класса
  Descript1: string;  // Описание параметра (строка 1)
  Descript2: string;  // Описание параметра (строка 2)
  Descript3: string;  // Описание параметра (строка 3)
End; // Type TRltPrmInfo = record
#endif

//******************************************************************************
// ObjInterface oPrmTreeOwner_CF
#ifndef __Def_oPrmTreeOwner_CF__
#define __Def_oPrmTreeOwner_CF__
#doc
 Описание интерфейса-владельца дерева параметров</brief>
#end
ObjInterface oPrmTreeOwner_CF;

//------------------------------------------------------------------------------
#doc
 Получение имени DSK-параметра для восстановления состояния дерева</brief><br>
 Результат:<br>
   Имя DSK-параметра<br>
#end
Function PrmTree_GetDskPrm: string;

//------------------------------------------------------------------------------
#doc
 Инициализация параметров в дереве параметров</brief><br>
#end
Procedure PrmTree_InitParams;

//------------------------------------------------------------------------------
#doc
 Получение дополнительной информации для параметра-ссылки в дереве</brief><br>
 Параметры:<br>
   asPrmName     - Имя параметра<br>
   awMode        - Режим вызова функции:<br>
     0 - получить наименование параметра<br>
     1 - получить строковое значение параметра для отображения<br>
     2 - вызвать интерфейс для изменения значения параметра (cmPick)<br>
   ardRltPrmInfo - Структура для хранения информации о параметре-ссылке<br>
 Результат:<br>
   True - если успешно, иначе - False<br>
#end
Function PrmTree_GetExPrmInfo(asPrmName: string; awMode: word;
  var ardRltPrmInfo: TRltPrmInfo): boolean;

//------------------------------------------------------------------------------
#doc
 Запись значений параметров из дерева параметров</brief><br>
#end
Procedure PrmTree_ReadPrmValues;

//------------------------------------------------------------------------------
#doc
 Запись значений параметров из дерева параметров</brief><br>
#end
Procedure PrmTree_SavePrmValues;

//------------------------------------------------------------------------------
#doc
 Добавление дополнительных пунктов для всплывающего меню дерева параметров</brief><br>
 Параметры:<br>
   aliMenuID - Идентификатор меню<br>
 Результат:<br>
   tsOk, если все нормально, иначе - False<br>
#end
Function PrmTree_LoadPopupMenu(var aliMenuID: longint): longint;

//------------------------------------------------------------------------------
#doc
 Расширенный обработчик событий для дерева параметров</brief><br>
 Параметры:<br>
   aliEvent - Код события<br>
 Результат:<br>
   Код последующего события либо 0, если последующего события нет<br>
#end
Function PrmTree_HandleEvent(aliEvent: longint): longint;

End; // ObjInterface oPrmTreeOwner_CF
#endif
