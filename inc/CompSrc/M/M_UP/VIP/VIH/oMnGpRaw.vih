/*
 ╔═══════════════════════════════════════════════════════════════════════════╗
 ║                     (c) 2002 корпорация ГАЛАКТИКА                         ║
 ║ Проект        : ГАЛАКТИКА                                                 ║
 ║ Система       : Производство                                              ║
 ║ Версия        : 7.1                                                       ║
 ║ Назначение    : Сигнатуры функций для формирования списков ГП и сырья     ║
 ║ Ответственный : Жилко Дмитрий Витальевич (HATTER)                         ║
 ║ Параметры     : нет                                                       ║
 ╚═══════════════════════════════════════════════════════════════════════════╝
*/
#include tSpGP.tbl    //список ГП
#include tSpGPAgr.tbl //список ГП
#include tSpRaw.tbl   //список сырья
#include tSpNorm.tbl  //источники комплектации для ГП

#doc
Формирование списков готовой продукции и сырья<br>
<b>Внимание!</b> Интерфейс предназначен только для внутреннего использования<br>
#end

ObjInterface objFnc_MnfListGPRaw;

  //=======================================================================
  // 'СОЗДАНИЕ СПИСКА ИСТОЧНИКОВ НОРМ ПО СПИСКУ ГОТОВОЙ ПРОДУКЦИИ
  //  на входе: получает временную таблицу tSpGP
  //  на выходе: формирует временную таблицу tSpNorm
  //-----------------------------------------------------------------------
#doc
Найти источники норм для списка готовой продукции<br>
#end
  Function GetListNormbyListGP(
                               pwFlag : word
                              ): boolean;

#doc
Найти источники норм<br>
#end
  Function GetListNorm(
                       pwListGPAgr : word //Pick.wList для фильтра по tSpGPAgr, если 0 - не надо
                      ): boolean;

  //=======================================================================
  // 'СОЗДАНИЕ СПИСКА ГОТОВОЙ ПРОДУКЦИИ
  //  на выходе: формирует временную таблицу tSpGP
  //-----------------------------------------------------------------------
#doc
Получить список готовой продукции<br>
#end
  Function GetListGP(
                      pdtBeg : date // дата начальная
                     ;pdtEnd : date // дата конечная
                     ;pwFlag : word //
                                    //   2 - с учетом дат
                                    //   4 - по 502 (приход ГП)
                                    //   8 - по 505 (межцеховой)
                                    //  16 - по 508 (акт на оказание услуг)
                                    //  32 - по позициям заказов
                                    //  64 - по отвязанным МЦ
                                    // 128 - по отвязанным услугам
                     ;pwListPodr : word //Pick.wList для фильтра по подразделениям, если 0 - не надо
                     ;pwListMol  : word //Pick.wList для фильтра по МОЛам, если 0 - не надо
                     ;pwNormSrc  : word
                     ;pcFormPl   : comp
                    ): boolean;

  //=======================================================================
  // 'СОЗДАНИЕ ИТОГОВОГО СПИСКА ГОТОВОЙ ПРОДУКЦИИ
  //  на входе: получает временную таблицу tSpGP
  //  на выходе: формирует временную таблицу tSpGPAgr
  //-----------------------------------------------------------------------
#doc
Получить агрегированный список готовой продукции<br>
по переданным ограничениям<br>
#end
  Function GetListGPAgrbyListGP(
                                 pdtBeg : date
                                ;pdtEnd : date
                                ;pwFlag : word //
                                               //  2 - в разрезе подразделений
                                               //  4 - в разрезе МОЛ
                                               //  8 - в разрезе партий
                                ;pwNormSrc  : word
                                ;pcFormPl   : comp
                               ): boolean;

#doc
Получить фактическое движение и нормы<br>
по переданным ограничениям<br>
#end
  Function GetFaktNorm (
                         pdtBeg: date // дата начальная
                        ;pdtEnd: date // дата конечная
                        ;pwListGPAgr: word //Pick.wList для фильтра по tSpGPAgr, если 0 - не надо
                        ;pcPodr: comp // разрез для подразделений
                        ;pcMol: comp // разрез для МОЛ
                        ;pwType: word // 0 - по ОВ, 1 - по ГП
                        ;pwNormSrc  : word
                        ;pcFormPl   : comp
                       ): Boolean;

  //=======================================================================
  // 'СОЗДАНИЕ СПИСКА СЫРЬЯ ПО СПИСКУ ГОТОВОЙ ПРОДУКЦИИ
  //  на входе: получает временную таблицу готовой продукции tSpGP
  //  на выходе: формирует временную таблицу сырья tSpRaw
  //-----------------------------------------------------------------------
#doc
Получить список сырья по списку готовой продукции<br>
#end
  Function GetListRawbyListGP(
                               pdtBeg : date // дата начальная
                              ;pdtEnd : date // дата конечная
                             ): boolean;

  //=======================================================================
  // 'СОЗДАНИЕ СПИСКА СЫРЬЯ ПО СОВОКУПНОМУ СПИСКУ ГОТОВОЙ ПРОДУКЦИИ
  //  на входе: получает временную таблицу готовой продукции tSpGPAgr
  //  на выходе: формирует временную таблицу сырья tSpRaw
  //-----------------------------------------------------------------------
#doc
Получить список сырья по агрегированному списку готовой продукции<br>
#end
  Function GetListRawbyListGPAgr(
                                  pdtBeg : date // дата начальная
                                 ;pdtEnd : date // дата конечная
                                 ;pwListGPAgr : word //Pick.wList для фильтра по tSpGPAgr, если 0 - не надо
                                 ;pwFlag : word // 1 - суммировать без учета подрзделений
                                                // 2 - суммировать без учета МОЛов
                                                // 4 - суммировать без учета партий
                                ): boolean;

end;

VipInterface iFnc_MnfListGPRaw implements objFnc_MnfListGPRaw
#ifdef ATL51
  licensed (FREE)
#end
;