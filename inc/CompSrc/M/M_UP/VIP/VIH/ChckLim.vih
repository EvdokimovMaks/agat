//********************************************************************************
//                                                        (c) корпорация Галактика
// Галактика 7.12 - Управление производственной логистикой
// Объектный интерфейс для обработки стоймостных и количественных лимитов
//********************************************************************************

#ifdef ComponentVersion
#component "M_UP"
#endif



#Include DefTypeLim.inc
#include Limit.tbl

#ifndef _CHCKLIM_VIH_
#define _CHCKLIM_VIH_

!#include DebugObj.vih

#doc
 Объект для анализа и корректировки величины отспука по лимиту<br>
 в производство<br>
#end

ObjInterface oCheckLimit;
#Doc
Генерация временных таблиц по истории замен для рассчета лимитов<br>
#end
    Function SetTmpTabHistZam_from_KatSopr_Wrk(prKatSopr : type$KatSopr; prcBaseDoc : comp) : boolean;

#Doc
Генерация временных таблиц по истории замен по накладным в разрезе ДО<br>
#end
    Function SetTmpTabHistZam_from_KatSopr_OldAll(prcBaseDoc : comp) : boolean;

#Doc
Анализ данных по движению сырья в производстве с учетом<br>
заданного в ДО-ЛЗК лимита<br>
Перечень ресурсов для анализа грузится из спецификации<br>
накладной<br>
#end
    Function CheckLimit_SpecifNkl(prcKatSopr : comp) : word;

#Doc
Анализ данных по движению сырья в производстве с учетом
заданного в ДО-ЛЗК лимита<br>
Перечень ресурсов для анализа грузится из спецификации ДО<br>
#end
    Function CheckLimit_SpecifDO(prcKatSopr : comp) : word;
#Doc
Анализ данных по движению сырья в производстве с учетом
заданного в ДО-ЛЗК лимита<br>
Перечень ресурсов для анализа грузится из спецификации ДО<br>
#end
    Function CheckLimit_SpecifDO_Old(prcBaseDoc : comp) : word;

#doc
Возвращает true ecли настройка "Форма расчета лимита"("Manuf.OverLimit")<br>
установлена в положение<br>
    0 - "по количеству и по стоимости (КС)";
    1 - "по количеству (К)";
#end
    Function TuneForKol : boolean;

#doc
Возвращает true ecли настройка "Форма расчета лимита"("Manuf.OverLimit")<br>
установлена в положение<br>
    0 - "по количеству и по стоимости (КС)";
    2 - "по стоимости (С)";
#end
    Function TuneForSum : boolean;

#doc
Возвращает true ecли настройка "Разрешить отпуск ресурсов с нулевым лимитом
по количеству" "Manuf.OtpuskNotLimRes" установлена в положение 0 - "нет";<br>
#end
    Function TuneForLimZeroKol : boolean;

#doc
Возвращает true ecли настройка "Разрешить отпуск МЦ не указанных в лимитированных
наборах стоимостных лимитов ДО" "Manuf.OtpuskMCLimRes" установлена в положение 0 - "нет";<br>
#end
    Function TuneForFoundMCInLimDoc : boolean;

#doc
<br>
#end
    Function GetTuneLim : word;


#doc
Возвращает набор флагов по "общегалактическим" настройкам<br>
которые задействованы для работы с лимитами в производстве<br>
#end
    Function GetTuneLim_Full : word;

#doc
Возвращает текущее состояние настройки "Manuf.Limit"<br>
#end
    Function GetStr_TuneLim_Ctrl : string;

#doc
Возвращает текущее состояние настройки "Manuf.OverLimit"<br>
#end
    Function GetStr_TuneLim_Form : string;

#doc
Возвращает текущее состояние настройки "Manuf.OtpuskNotLimRes"<br>
#end
    Function GetStrTune_OtpuskNotLimRes : string;

#doc
Возвращает текущее состояние настройки "Manuf.OtpuskMCLimRes"<br>
#end
    Function GetStrTune_OtpuskMCLimRes : string;

/*
#doc
Возвращает "false" если в соотвествии с "общегалактическим" настройками<br>
категория ресурсов, которой поставлена в соответствие констатнта "TabIndex",<br>
не должна учитываться при анализе движения сырья<br>
категории ресурсов :
  "МЦ отпущена на замену"
  "МЦ была заменена"
  "Отпустить МЦ на замену"
  "Заменить МЦ"

#end
    Function GetTuneForMCZam(TabIndex : word) : Boolean;
*/

#doc
Анализ превышения лимита<br>
Возвращает флажок:
  cnt_OverLimKol = 1;  - лимит превышен по количеству
  cnt_OverLimSum = 2;  - лимит превышен по сумме
  cnt_LimKolZero = 4;  - в спецификации накладной задействованы
                         ресурсы с нулевом лимитом по количеству
  cnt_NotMCInLim = 8;  - в спецификации документа заданы ресурсы
                         не лимитированные в наборах стоимостных лимитах ДО
#end
Function GetFlagOverLim_KatSoprOne(prcKatSopr : comp) : word;

#doc
Удаляет все времменые таблицы<br>
#end
    Procedure KillAllTmpTab;

#doc
Выводит окно с данными по лимитам для заданной накладной<br>
#end
    Function Run_WndLimit_KatSoprOne_Full(prcBaseDoc : comp; prcKatSopr : comp) : longint;

!#doc
!// ????????????????????? tttttttttttttt
!#end
Function SetTmpGrN_from_TTSpSopr(prcKatSopr : comp) : boolean;

#doc
Возвращает величину количественного лимита и величину остатка равного
отпуск - возврат  по оприходованным накладным<br>
#end
Procedure GetWrkKol_from_TTLimBaseDoc_Kol_Old(prTTLimBaseDoc_Kol : type$TTLimBaseDoc_Kol;
                                              var prLimit_Kol : double; var prKolOtpusk_minus_Vozvrat : double; var prSumOtpusk_minus_Vozvrat : double);

#doc
Расчет остатка по количественному лимиту по текущей накладной<br>
#end
Function GetValOst_LimKol_Tek_for_ResDO(prcBaseDoc : comp; prcKatSopr : comp; prcMC : comp; prcParty : comp) : double;

#doc
Расчет остатка по количественному лимиту по оприходованным накладным<br>
#end
Function GetValOst_LimKol_Old_for_ResDO(prcBaseDoc : comp; prcMC : comp; prcParty : comp) : double;

#doc
Возвращает сумму стоимостного лимита и сумму остатка равного   отпуск - возврат  <br>
по оприходованным накладным<br>
#end
Procedure GetWrkSum_from_TTLimBaseDoc_Sum_Old(prTTLimBaseDoc_Sum : type$TTLimBaseDoc_Sum; var prLimDoc_Sum : double; var prSumOtpusk_minus_Vozvrat : double);

#Doc
Функция выполняет :
1)Анализ данных по движению сырья в производстве с учетом <br>
  заданного в ДО-ЛЗК лимита<br>
2)Генерация таблиц "LimTmp" в которых представлены результаты <br>
  проведенного аназиза<br>
Возвращает "true" если операция прошла успешно<br>
#end
    Function GetDataForOtchet(prd1 : date; prd2 : date; prList_OrgFrom : word; prList_OrgTo : word) : Boolean;

#Doc
Возвращает для МЦ величину остатка количественного лимта, сумму остатка, <br>
величину лимита. Используется при формировании отчетов<br>
#end
Function GetValLim_For_MC_Kol(prRefMC : comp; var prKolOstatok : double; var prSumOstatok : double; var prKolLimit : double) : boolean;

#Doc
Возвращает для МЦ величину остатка количественного лимта, сумму остатка, <br>
величину лимита. Используется при формировании отчетов<br>
#end
Function GetValOverLim_For_MC_Kol(prRefMC : comp; var prKolOstatok : double; var prSumOstatok : double; var prKolLimit : double) : boolean;

#Doc
Возвращает для МЦ величину остатка стоимостного лимта, сумму остатка, <br>
величину лимита. Используется при формировании отчетов<br>
#end
Function GetValLim_For_KatLimit_Sum(prRefKatLimit : comp; var prSumOstatok : double; var prSumLimit : double) : boolean;

#Doc
Возвращает для МЦ величину остатка стоимостного лимта, сумму остатка, <br>
величину лимита. Используется при формировании отчетов<br>
#end
Function GetValOverLim_For_KatLimit_Sum(prRefKatLimit : comp; var prSumOstatok : double; var prSumLimit : double) : boolean;

#Doc
Возвращает величину добавленных мц по актам замен для накладной<br>
#end
Function GetKolOnZam_Nkl(prRefSpSopr : comp; prRefOtpED_SpStep : comp; prRefMCUsl_SpStep : comp; prRefParty_SpStep : comp) : double;

#Doc
Возвращает величину удаленных мц по актам замен для накладной<br>
#end
Function GetKolWasZam_Nkl(prRefKatSopr : comp; prRefOtpED_SpStep : comp; prRefMCUsl_SpStep : comp; prRefParty_SpStep : comp) : double;

#Doc
//??????????? zzzzzzzzzzz
#end
Function GetKolOstDO_for_HistZam(prlFlag : longint; prcBaseDoc : comp; prcMC : comp; prcParty : comp;
                                 prTypePos : word; prcPos : comp; prTypeNorm : word; prcNorm : comp; prcOtpED : comp) : double;

#doc
Инициализация объекта<br>
#end
    Function InitInter : Boolean;

#doc
Деинициализация объекта<br>
#end
   Function DoneInter : Boolean;

!    Function GetStrDsk_Deb : string;
!    Procedure SetStrDsk_Deb(prStrDSK_Deb : string);
!    Function GetNameObj : string;
!    Procedure SetNameObj(prNameObj : string);
!    Function LoadDebugObj(prDebugObj : oDebug) : boolean;
!    Function GetModeDebug : boolean;
!    Function SetModeDebug(prFlagDebug : boolean) : Boolean;
!    Procedure SetStartVarDebug(prStrDSK_Deb : string; prNameObj : string);
!    Function RunWindow_Debug(prTypeWnd : word; prNameWnd : string; prDebStr : string) : Boolean;
!    Function SetExtInfoDebug(prDebugObj : oDebug) : Boolean;
end;


ObjInterface oCheckLimit1(oCheckLimit);

  Function TuneUchetIsMCZamInLimit : boolean;

  Function TuneUchetWasMCZamInLimit : boolean;

  Function GetSum_OverLimKol_for_Report(prcTTLim_Kol : comp; prKol_OverLimit : double) : double;

!  Function GetSum_OverLimSum_for_Report(prcTTLim_Sum : comp; prSum_OverLimit : double) : double;

  Function SetTTLim_for_Rep_Kol_All : Boolean;

  Function SetTTLim_for_Rep_Sum_All : Boolean;

end;


ObjInterface oCheckLimit2(oCheckLimit1);

#doc
Расчет величны количественного лимита по ДО<br>
#end
Function GetVal_LimKol_Old_for_ResDO(prcBaseDoc : comp; prcMC : comp; prcParty : comp) : double;

end;

#endif
