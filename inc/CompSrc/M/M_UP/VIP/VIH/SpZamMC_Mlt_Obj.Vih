/*
 ╔═══════════════════════════════════════════════════════════════════════════╗
 ║                     (c) 1994,98 корпорация ГАЛАКТИКА                      ║
 ║ Проект        : ГАЛАКТИКА                                                 ║
 ║ Система       : Оперативный контур                                        ║
 ║ Версия        : 5.70                                                      ║
 ║ Назначение    : Интерфейс уточнения замен на материальные ценности        ║
 ║ Ответственный : Левченко Андрей Александрович(Andrew)                     ║
 ║ Параметры     : есть                                                      ║
 ╚═══════════════════════════════════════════════════════════════════════════╝
*/


#ifdef ComponentVersion
#component "M_UP"
#end

#ifndef _SPZAMMC_MLT_OBJ_VIH_
#define _SPZAMMC_MLT_OBJ_VIH_

#Include AktZamOperType.inc

#include GetSvOst_SpDocObj.vih
#include ChckLim.vih

#doc
Объект для проведения замен по актам замен вида "Комплексные замены"<br>
и "Одиночные замены" в формате "Комплексные замены"<br>
#end

ObjInterface oSpZamMC_Mlt;
  //------------------------------------------------------------------------------------------------------------------------------
  Function Get_varTTInfoResM_Mess(prcTTInfoResM : comp) : type$TTInfoResM;

  Function SetTTInfoResM(pr_prMC : word; prcMC : comp; prcParty : comp; prcSaldTune : comp; prcKitKau : comp) : type$TTInfoResM;

  Function SetTTInfoResM_for_TTNaZamenuM(prFlag_Use_CU : word; prTTNaZamenuM : type$TTNaZamenuM) : type$TTInfoResM;

  Function ResetFlagNZeroKol_TTFilter_All : boolean;
  Function ResetFlagNZeroKol_TTDocZam_Wrk_All : boolean;

#doc
Вставка новой записи таблицы TTNeedZamM.<br>
Параметры :<br>
-"prFlagWrk" - здесь заданы настройки в соответствии с которыми будет формироваться<br>
 перечень ресурсов подлежащих замене(таблица TTNeedZamM)<br>
-prRefDoc - ссылка на документ в котором проводятся замены<br>
-prDate - дата расчета остатков по разрезу<br>
-prRefPodr, prRefMOL - разрез<br>
-prRefMC, prRefParty, prKolSpecif, prDiskret_ED - информация по заданной позиции спецификации документа<br>
Возвращает ссылку на "TTNeedZamM"<br>
#end
  Function AnalizNeedZam_One(prFlagWrk : longint; prFlag_KolNeedZam : word; prFlag_Use_CU : word; prDate : date; prRefPodr : comp; prRefMOL : comp; prTTInfoResM : type$TTInfoResM;
                    prRefTopTab : comp; prRefNoteBene : comp; prRefFilter : comp; prwNumNBSIzm : word; prTypeOper : word; prPriznakMCUsl_Oper : word; prRefMCUsl_Oper : comp;
                    prKol : double; prKol_Norm : double; prKolNorma : double; prDiskret_ED : word) : comp;

#doc
Возвращает ссылку на "корень" иерархии TTNeedZamM.<br>
#end
  Function GetTop_TTNeedZam(prTTNeedZam : type$TTNeedZamM) : type$TTNeedZamM;

#doc
Возвращает ссылку на "TTNeedZamM"(ресурс из списка "К замене") для заданной<br>
таблицы TTNaZamenuM(ресурс из списка "На замену").<br>
#end
  Function GetTTNeedZamM_from_TTNaZamenuM(prTTNaZamenuM : type$TTNaZamenuM) : type$TTNeedZamM;
  //------------------------------------------------------------------------------------------------------------------------------
#doc
Удаление временной таблицы "TTPossibleZamM"<br>
#end
  Procedure KillAll_TTPossibleZam;
#doc
Вставка новой позиции "TTPossibleZamM"<br>
Возвращает ссылку на "TTPossibleZamM"<br>
#end
  Function SetTTPossibleZam(prFlagWrk : Longint; prRefSpecifDoc : comp; prRefOwnSpecifTab : comp;
                            prNeedZam_cTTInfoResM : comp; prPriznakMCUsl_Oper : word; prRefMCUsl_Oper : comp;
                            prTypeOper : word; prRefListZam : comp; prRefNBSZam : comp; prRefNBSIzm : comp; prKoefZam : double; prKol_Add : double; prRzltNBSZam : word) : comp;
  //------------------------------------------------------------------------------------------------------------------------------
#doc
Вставка новой позиции "TTDocZam_Wrk"<br>
Возвращает ссылку на "TTDocZam_Wrk"<br>
#end
  Function SetTTDocZam_Wrk(prNeedZam_cTTInfoResM : comp; prRefNoteBene : comp) : comp;
#doc
Вставка новой позиции "TTFilter"<br>
Возвращает ссылку на "TTFilter"<br>
#end
  Function SetTTFilter(prNeedZam_cTTInfoResM : comp; prRefNoteBene : comp; prRefFilter : comp; prNumber : word) : comp;
  //------------------------------------------------------------------------------------------------------------------------------
#doc
Формирует иерархию таблиц "TTNeedZamM".<br>
корень данной иерархии - ресурсы из списка "К замене",<br>
подчиненные позиции - перечень операций который необходимо провести<br>
в соответствии с заданным актом для корректной замены ресурса вышестоящей<br>
позиции<br>
#end
  Function SetTTNeedZam_by_TTPossibleZam(prFlagWrk : longint; prFlag_KolNeedZam : word; prFlag_Use_CU : word; prData_Zam : date; prRefPodr : comp; prRefMOL : comp;
                                         var prFlagBreak : boolean) : boolean;
#doc
Для каждой позиции "TTNeedZamM" по заданному перечню  <br>
возможных замен(TTPossibleZamM) определяет перечень планируемых замен - "TTNaZamenu"<br>
Возвращает "true" если данная операция прошла успешно<br>
#end
  Function SetTTNaZamenu_by_TTPossibleZam(prFlagWrk : longint; prKlPrice : type$KlPrice; prTypeDoc_tp : word; prRefValDoc : comp;
                    prFlagSort_SG0_F1_L2_P3 : word; prFlag_Use_CU : word; prData_Zam : date; prRefPodr : comp; prRefMol : comp; var prFlagBreak : boolean) : boolean;

#doc
Для таблиц "TTNeedZamM", "TTDocZam_Wrk" устанавливает флажки "есть\нет свободные остатки по разрезу"<br>
Возвращает "true" если данная операция прошла успешно<br>
#end
  Function SetFlagValidZam_for_TTTabAll(prFlag_NotUsed_Party1_MC2 : word) : boolean;
//------------------------------------------------------------------------------------------------------------------------------
#doc
Автоподбор замен по партиям для заданной МЦ из списка "К замене"<br>
#end
  Function FillMCZamDown_IR_TopDown_Party(prFlagWrk : longint; prFlag_Use_CU : word; prTypeDoc_tp : word; prRefBaseDoc : comp; prNeedZam_cTTInfoResM : comp;
                                          prNewVal : double; prFlag_WR_RD : word; var prKol_Zam_Party : double) : boolean;
#doc
Автоподбор замен по актам замен\листу замен для заданной МЦ из списка "К замене"<br>
#end
  Function FillMCZamDown_IR_TopDown_MC(prFlagWrk : longint; prFlag_Use_CU : word; prTypeDoc_tp : word; prRefBaseDoc : comp; prTopTTNeedZam : type$TTNeedZamM;
                                       prRefNoteBene : comp; prRefVariantZamen : comp;
                                       prNewVal : double; prFlag_ZamS_ZamM : word; prFlag_WR_RD : word; var prKol_Zam_MC : double; var prFlag_CorrectBalance : boolean; var pl_CodErr_use_VarZam : longint; var p_TTInfoResM_Err : type$TTInfoResM) : boolean;
//------------------------------------------------------------------------------------------------------------------------------
#doc
Преобразует значение тип данных "comp" в "longint" без потери точности<br>
#end
  Function GetTTCnv_Comp_Longint(prTypeTab : word; prRefTab : comp) : LongInt;
#doc
Ставит в соответствие значению типа "comp" значение "longint".
#end
  Function SetTTCnv_Comp_Longint(prTypeTab : word; prRefTab : comp) : LongInt;
//------------------------------------------------------------------------------------------------------------------------------
#doc
Автоподбор замен по партиям<br>
Возвращает "true" если данная операция прошла успешно<br>
Возвращаемые параметры :<br>
-флаг ошибки - prFlagErr = 0 если ошибок не обнаружено, prFlagErr = 1 если ошибки обнаружены<br>
-набор флагов состояния - CodExecute;<br>
#end
  Function AvtoFillTreeZam_All_Party(prFlagWrk : longint; prFlag_Use_CU : word; prTypeDoc_tp : word; prRefBaseDoc : comp; var prCountZam : word) : boolean;
#doc
Автоподбор замен по заданному акту замен вида "Комплексные замены"<br>
Возвращает "true" если данная операция прошла успешно<br>
Возвращаемые параметры :<br>
-флаг ошибки - prFlagErr = 0 если ошибок не обнаружено, prFlagErr = 1 если ошибки обнаружены<br>
-набор флагов состояния - CodExecute;<br>
#end
  Function AvtoFillTreeZam_All_MC_OneNoteBene_Wrk(pd_Data_Zam : date; pl_FlagWrk : longint; pw_Uchet_OgrGP : word; pw_ModeUse_RspGP : word; pc_AttrNam_for_NoteBene : comp; ps_Attribute_Value : String; pw_Flag_Use_CU : word;
                                                  pw_TypeDocZam : word; pc_Doc_nRec : comp; pc_BaseDoc_nRec : comp;
                                                  pc_NoteBene_nRec : comp; pc_VariantZamen_nRec : comp; var pw_CountZam : word) : boolean;

#doc
Отмена всех подобранных замен<br>
Возвращает "true" если данная операция прошла успешно<br>
Возвращаемые параметры :<br>
-флаг ошибки - prFlagErr = 0 если ошибок не обнаружено, prFlagErr = 1 если ошибки обнаружены<br>
-набор флагов состояния - CodExecute;<br>
#end
  Function AvtoFillTreeZam_Zero_All(prFlagWrk : longint; prFlag_Use_CU : word; prTypeDoc_tp : word; prRefBaseDoc : comp) : boolean;
//------------------------------------------------------------------------------------------------------------------------------
#doc
Устанавливает флажки состояния для всех таблиц "TTNeedZamM"<br>
Возвращает "true" если данная операция прошла успешно<br>
Возвращаемые параметры :<br>
-флаг ошибки - prFlagErr = 0 если ошибок не обнаружено, prFlagErr = 1 если ошибки обнаружены<br>
-набор флагов состояния - CodExecute;<br>
#end
  Function SetCodExecute_TTNeedZam_All(prFlagWrk : longint; prFlag_Use_CU : word; prTypeDoc_tp : word; prRefBaseDoc : comp; prFlag_NotUsed_Party1_MC2 : word;
                                       var prFlagErr : Byte; var prCodExecute : longInt) : boolean;
//------------------------------------------------------------------------------------------------------------------------------
#doc
Возвращает "true" если для планируемые операций по актам замен определены<br>
#end
  Function FindNotZeroKol_from_TTNaZamenu : boolean;

#doc
Запускает окно с сообщениями об ошибках и предупреждающими сообщениями<br>
Тексты сообщений генерируются функцией по набору флагов состояния (prCodExecute)<br>
Возвращает :<br>
"cmDefault" - пользователем нажата кнопка "Провести замены"<br>
"0" - пользователем нажата кнопка "Отменить планируемые замены"<br>
"cmCancel" пользователем нажата кнопка "Вернуться в окно подбора замен"<br>
#end
  Function Run_Wnd_MessageMemo3B(prTitle_Wnd : string; prTitle_Message : string; prFlagWrk : longint; prCodExecute : longInt; prFlagButtons_Disable : word) : longInt;
//------------------------------------------------------------------------------------------------------------------------------
#doc
Позиционирование, установка флажков видимости полей, установка <br>
наименования полей в окне "WndMainPan"<br>
Возвращает "true" если данная операция прошла успешно<br>
#end
  Function ReReadRecord_WndMainPan(var prRefV_TTNeedZam : comp) : boolean;
//------------------------------------------------------------------------------------------------------------------------------
#doc
Удаляет все временные таблицы<br>
#end
  Procedure KillAllTmpTab;
#doc
Удаляет все экземпляры таблицы TmpGrN<br>
#end
  Procedure KillAll_TmpGrN;
#doc
Инициализация объекта<br>
#end
  Function InitInter : boolean;

#doc
Возвращает значения глобальных переменных объекта<br>
#end
  Function GetPar_Gen(var prNameDoc : string; var prRefPodr : comp; var prRefMOL : comp; var prFlagUsed_AktZam0_ListZam1 : word; var prGetSvOst_SpDocObj : oGetSvOst_SpDoc) : boolean;
#doc
Устанавливает значения глобальных переменных объекта<br>
#end
  Function SetPar_Gen(prTypeDoc_tp : word; prRefDoc : comp; prNameDoc : string; prRefPodr : comp; prRefMOL : comp; prFlagUsed_AktZam0_ListZam1 : word;
                      var prCheckLimObj : oCheckLimit; var prGetSvOst_SpDocObj : oGetSvOst_SpDoc) : boolean;
#doc
Возвращает значения глобальных переменных объекта<br>
#end
  Function GetPar_Wrk(var prFlagWrk : longint; var prData_Zam : date; var prUchet_OgrGP : word; var prModeUse_RspGP : word; var pc_AttrNam_for_NoteBene : comp; var ps_Attribute_Value : String; var prFlag_NotUsed_Party1_MC2 : word; var prFlagSort_SG0_F1_L2_P3 : word; var prFlag_Use_CU : word;
                            var prRefValDoc : comp; var prKolZnak_Kol : word; var prKolZnak_Price : word; var prKolZnakKol_Doc : word; var prKolZnakPrice_Doc : word; var prTypeEd : word; var prFlagDel_HistZam : word) : boolean;
#doc
Устанавливает значения глобальных переменных объекта<br>
#end
  Function SetPar_Wrk(prFlagWrk : longint; prData_Zam : date; prUchet_OgrGP : word; prModeUse_RspGP : word; pc_AttrNam_for_NoteBene : comp; ps_Attribute_Value : String; prFlag_NotUsed_Party1_MC2 : word; prFlagSort_SG0_F1_L2_P3 : word; prFlag_Use_CU : word;
                                            prRefValDoc : comp; prKolZnak_Kol : word; prKolZnak_Price : word; prKolZnakKol_Doc : word; prKolZnakPrice_Doc : word; prTypeEd : word; prFlagDel_HistZam : word) : boolean;

#doc
Возвращает значения глобальных переменных объекта<br>
#end
  Function GetPar_KlPrice_Wrk(var prRefKlPrice : comp) : boolean;
#doc
Устанавливает значения глобальных переменных объекта<br>
#end
  Function SetPar_KlPrice_Wrk(prRefKlPrice : comp) : boolean;

#Doc
Возвращает флаг закрытия окна WndMainPan<br>
#end
 Event Procedure GetFlagRzlt_WndMainPan(prRzlt_WndMainPan : longint);

 Event Function GetFlagUseVariant_S_Wrk(prData_Zam : date; prFlagWrk : Longint; prUchet_OgrGP : word; prModeUse_RspGP : word; pc_AttrNam_for_NoteBene : comp; ps_Attribute_Value : String; pc_NBSZam_nRec : comp;
                                        var pl_CodErr_use_VarZam : Longint; var p_TTInfoResM_Err : type$TTInfoResM; var pw_TypeRes_GP_to : word; var pc_Res_GP : comp) : boolean;

 Event Function GetFlagUseVariant_M_Wrk(prData_Zam : date; prFlagWrk : Longint; prUchet_OgrGP : word; prModeUse_RspGP : word; pc_AttrNam_for_NoteBene : comp; ps_Attribute_Value : String; prRefObjParam : comp;
                                        var pl_CodErr_use_VarZam : Longint; var p_TTInfoResM_Err : type$TTInfoResM; var pw_TypeRes_GP_to : word; var pc_Res_GP : comp) : boolean;

#doc
Функция деинициализации объекта<br>
#end
  Function DoneInter : boolean;
end;
#endif
