/*
 ╔═════════════════════════════════════════════════════════════════════════════╗
 ║                     (c) 2004 корпорация ГАЛАКТИКА                           ║
 ║ Проект        : ГАЛАКТИКА                                                   ║
 ║ Система       : Управление качеством продукции                              ║
 ║ Версия        : 7.12                                                        ║
 ║ Назначение    : Общие функции для работы с "паспортами" качества            ║
 ║ Ответственный : Жилко Дмитрий Витальевич (HATTER)                           ║
 ╚═════════════════════════════════════════════════════════════════════════════╝
*/
#ifdef Kachestvo

#ifdef ComponentVersion
#component "M_QUALITY"
#endif


#include oiEvnLog.vih

//******************************************************************************
// константы
//******************************************************************************
// константы живут в MnPlan.inc

#include QualConst.vpp // константы действий

//******************************************************************************
// типы данных
//******************************************************************************
#ifndef __Def_tQPPrmIO__
  type
  tQPPrmIO = record
    TypeDoc    : word;  // тип документа
    cDoc       : comp;  // документ
    dCreate    : date;  // дата создания
    TypeSpDoc  : word;  // тип спецификации документа
    cSpDoc     : comp;  // позиция документа
    VidSopr    : word;
    dOpr       : date;  // дата оприходования для накладных
    FlControl  : word;  // контроль
                        //  1 - не контролировать подразделение
                        //  2 - не контролировать МОЛ
                        //  4 - не контролировать партию
                        //  8 - не контролировать заказ
                        // 16 - не контролировать поз.заказа
    TypeDocM   : word;  // тип документа (для входящих)
    cDocM      : comp;  // документ (для входящих)
    TypeSpDocM : word;  // тип спецификации документа (для входящих)
    cSpDocM    : comp;  // позиция документа (для входящих)
    FlError    : word;  // флаг ошибки
                        // 0 - нет ошибок
    stFormPl   : tFormPl;
  end; // type tQPPrmIO
  #define __Def_tQPPrmIO__
#end // #ifndef __Def_tQPPrmIO__

//******************************************************************************
// таблицы в памяти
//******************************************************************************

//******************************************************************************
// oQP_CF
//******************************************************************************
#doc
Функции для работы с паспортами качества<br>
<b>Внимание!</b> Интерфейс предназначен только для внутреннего использования<br>
#end

ObjInterface oQP_CF;
//****************************************************************************

//******************************************************************************
#doc
Установить способ обработки ошибок<br>
#end
Procedure QP_SetContext ( arwContext: word );

//******************************************************************************
#doc
Вернуть значение показателя качества<br>
по передаваемым составляющим складского разреза<br>
#end
Function GetQValue (
                    arSkPr   : word; // 0 - склад, 1 - производство
                    arPrMc   : word; // toMc, toUsl
                    arcMcUsl : comp;
                    arcPodr  : comp;
                    arcMol   : comp;
                    arcParty : comp;
                    arcPokaz : comp;
                    arDate   : date
                   ): string;

//****************************************************************************
#doc
Поиск фактического значения показателя качества<br>
по источникам качества для строки документа<br>
#end
Function GetFactQValueByPos (
                             arTypePos : word;
                             arcPos    : comp;
                             arcPokaz  : comp
                            ): string;

//****************************************************************************
#doc
Поиск нормативного значения показателя качества<br>
по источникам качества для строки документа<br>
#end
Function GetNormQValueByPos (
                             arTypePos : word;
                             arcPos    : comp;
                             arcPokaz  : comp
                            ): string;

//****************************************************************************
#doc
Поиск значения показателя качества из теста<br>
по источникам качества для строки документа<br>
#end
Function GetTestQValueByPos (
                             arTypePos   : word;
                             arcPos      : comp;
                             arcPokaz    : comp;
                             arcTsKachvo : comp
                            ): string;

//****************************************************************************
#doc
Поиск расширенного разреза ведения паспортов качества<br>
с автоматическим его пополнением<br>
#end
// arwFlag: 0001h - если не найдена, то не добавлять

Function MnSlit_Get (
                     arMnSlit: type$MnSlit;
                     arwFlag: word
                    ): comp;

//******************************************************************************
#doc
Создание нового расширенного разреза ведения паспортов качества<br>
#end
Function MnSlit_Ins (
                     var arMnSlit: type$MnSlit
                    ): longint; // tsOk, если успешно, иначе - код ошибки

//******************************************************************************
// замена чего-нибудь (сорта, статуса, паспорта(?!)) на разрезе
// arwAction: 0001h - изменять паспорт
//            0002h -          статус
//            0004h -          сорт
#doc
Замена сорта, статуса, паспорта на разрезе, начиная с заданной даты<br>
#end
Function QPM_STChange (
                       arwAction: word;
                       arcMnSlit: tnRec;
                       ardOper: date;
                       arcQPHead: tnRec;
                       arcKatStats: tnRec;
                       arcKatSort: tnRec
                      ): longint;

//******************************************************************************
// поиск актуального паспорта по разрезу
// arwAction: 0 - на дату
//            1 - после даты
// arcQPMove - с учетом записи в журнале
#doc
Поиск актуального паспорта на разрезе на заданную дату<br>
#end
Function QPM_QPFind (
                     arwAction: word;
                     arcMnSlit: tnRec;
                     ardOper: date;
                     arcQPMove: tnRec;
                     var arcQPHead: tnRec;
                     var arcKatStats: tnRec;
                     var arcKatSort: tnRec
                    ): longint;

//****************************************************************************
#doc
Контроль данных перед созданием строки спецификации паспорта качества<br>
#end
Function QPL_ChkBIns (
                      arQPLine: type$QPLine;
                      var aoEvnLog: oiEvnLog                  // объект регистрации ситуаций для сохранения списка ошибок, предупр., информац. сообщений
                     ): longint; // tsOk, если успешно, иначе - код ошибки

//****************************************************************************
#doc
Создание новой строки спецификации паспорта качества<br>
#end
Function QPL_Ins (
                   var arQPLine: type$QPLine
                 ): longint; // tsOk, если успешно, иначе - код ошибки

//****************************************************************************
#doc
Контроль данных перед модификацией строки спецификации паспорта качества<br>
#end
Function QPL_ChkBUpd (
                      arQPLine: type$QPLine;
                      var aoEvnLog: oiEvnLog                  // объект регистрации ситуаций для сохранения списка ошибок, предупр., информац. сообщений
                     ): longint; // tsOk, если успешно, иначе - код ошибки

//****************************************************************************
#doc
Модификация строки спецификации паспорта качества<br>
#end
Function QPL_Upd (
                   arQPLine: type$QPLine
                 ): longint; // tsOk, если успешно, иначе - код ошибки

//****************************************************************************
#doc
Контроль данных перед удалением строки спецификации паспорта качества<br>
#end
Function QPL_ChkBDel (
                      acRec: comp;
                      var aoEvnLog: oiEvnLog                  // объект регистрации ситуаций для сохранения списка ошибок, предупр., информац. сообщений
                     ): longint; // tsOk, если успешно, иначе - код ошибки

//****************************************************************************
#doc
Удаление строки спецификации паспорта качества<br>
#end
Function QPL_Del (
                   acRec: comp
                 ): longint; // tsOk, если успешно, иначе - код ошибки

//****************************************************************************
#doc
Групповое удаление строк спецификации паспорта качества<br>
#end
Function QPL_GroupDel (
                       acRec: comp;
                       var aoEvnLog: oiEvnLog                  // объект регистрации ситуаций для сохранения списка ошибок, предупр., информац. сообщений
                      ): longint; // tsOk, если успешно, иначе - код ошибки

//****************************************************************************
#doc
Контроль данных перед созданием нового паспорта качества<br>
#end
Function QPH_ChkBIns (
                      arQPHead: type$QPHead;
                      var aoEvnLog: oiEvnLog                  // объект регистрации ситуаций для сохранения списка ошибок, предупр., информац. сообщений
                     ): longint; // tsOk, если успешно, иначе - код ошибки

//****************************************************************************
#doc
Установка значений по умолчанию для паспорта качества<br>
#end
Function QPH_SetDefault (
                         var arQPHead: type$QPHead
                        ): longint; // tsOk, если успешно, иначе - код ошибки

//****************************************************************************
#doc
Создание нового паспорта качества<br>
#end
Function QPH_Ins (
                   var arQPHead: type$QPHead
                 ): longint; // tsOk, если успешно, иначе - код ошибки

//****************************************************************************
#doc
Контроль данных перед модификацией паспорта качества<br>
#end
Function QPH_ChkBUpd (
                      arQPHead: type$QPHead;
                      var aoEvnLog: oiEvnLog                  // объект регистрации ситуаций для сохранения списка ошибок, предупр., информац. сообщений
                     ): longint; // tsOk, если успешно, иначе - код ошибки

//****************************************************************************
#doc
Модификация паспорта качества<br>
#end
Function QPH_Upd (
                   arQPHead: type$QPHead
                 ): longint; // tsOk, если успешно, иначе - код ошибки

//****************************************************************************
#doc
Контроль данных перед удалением паспорта качества<br>
#end
Function QPH_ChkBDel (
                      acRec: comp;
                      var aoEvnLog: oiEvnLog
                     ): longint; // tsOk, если успешно, иначе - код ошибки

//****************************************************************************
#doc
Удаление паспорта качества<br>
#end
Function QPH_Del (
                   acRec: comp
                 ): longint; // tsOk, если успешно, иначе - код ошибки

//****************************************************************************
#doc
Контроль данных перед созданием новой записи журнала<br>
#end
Function QPM_ChkBIns (
                      arQPMove: type$QPMove;
                      var aoEvnLog: oiEvnLog                  // объект регистрации ситуаций для сохранения списка ошибок, предупр., информац. сообщений
                     ): longint; // tsOk, если успешно, иначе - код ошибки

//****************************************************************************
#doc
Создание новой записи журнала<br>
#end
Function QPM_Ins (
                   var arQPMove: type$QPMove
                 ): longint; // tsOk, если успешно, иначе - код ошибки

//****************************************************************************
#doc
Контроль данных перед модификацией записи журнала<br>
#end
Function QPM_ChkBUpd (
                      arQPMove: type$QPMove;
                      var aoEvnLog: oiEvnLog                  // объект регистрации ситуаций для сохранения списка ошибок, предупр., информац. сообщений
                     ): longint; // tsOk, если успешно, иначе - код ошибки

//****************************************************************************
#doc
Модификация записи журнала<br>
#end
Function QPM_Upd (
                   var arQPMove: type$QPMove
                 ): longint; // tsOk, если успешно, иначе - код ошибки

//****************************************************************************
#doc
Контроль данных перед удалением записи из журнала<br>
#end
Function QPM_ChkBDel (
                      acRec: comp;
                      var aoEvnLog: oiEvnLog
                     ): longint; // tsOk, если успешно, иначе - код ошибки

//****************************************************************************
#doc
Удаление записи из журнала<br>
#end
Function QPM_Del (
                   acRec: comp
                 ): longint; // tsOk, если успешно, иначе - код ошибки

//******************************************************************************
#doc
Замена в журнале паспорта качества<br>
#end
Function QPMove_QPChange (
                          ardtQPPrmIO: tQPPrmIO;
                          var aoEvnLog: oiEvnLog                  // объект регистрации ситуаций для сохранения списка ошибок, предупр., информац. сообщений
                         ): longint;

//****************************************************************************
#doc
Создание паспорта качества по документу<br>
#end
Function QP_CrtByDoc (
                       ardtQPPrmIO: tQPPrmIO;
                       var arQPHead: type$QPHead;
                       var aoEvnLog: oiEvnLog                  // объект регистрации ситуаций для сохранения списка ошибок, предупр., информац. сообщений
                      ): longint;

//****************************************************************************
#doc
Обновление записей в журнале в связи с оприходованием<br>
#end
Function QPMove_FinByDoc (
                          ardtQPPrmIO: tQPPrmIO;
                          var aoEvnLog: oiEvnLog                  // объект регистрации ситуаций для сохранения списка ошибок, предупр., информац. сообщений
                         ): longint;

//****************************************************************************
#doc
Проверка возможности удаления (отката) записей в журнале для документа<br>
#end
Function QPMove_ChkBDelByDoc (
                              ardtQPPrmIO: tQPPrmIO;
                              var aoEvnLog: oiEvnLog                  // объект регистрации ситуаций для сохранения списка ошибок, предупр., информац. сообщений
                             ): longint;

//****************************************************************************
#doc
Удаление паспорта качества, созданного по документу<br>
#end
Function QP_DelByDoc (
                      ardtQPPrmIO: tQPPrmIO;
                      var aoEvnLog: oiEvnLog                  // объект регистрации ситуаций для сохранения списка ошибок, предупр., информац. сообщений
                     ): longint;

//****************************************************************************
#doc
Создание записей в журнале качества по документу<br>
#end
Function QPMove_CrtByDoc (
                          ardtQPPrmIO: tQPPrmIO;
                          var aoEvnLog: oiEvnLog                  // объект регистрации ситуаций для сохранения списка ошибок, предупр., информац. сообщений
                         ): longint;

//****************************************************************************
#doc
Установка цен для документа в зависимости от сортности МЦ<br>
#end
Function QPMove_SetPriceDoc (
                             ardtQPPrmIO: tQPPrmIO;
                             var aoEvnLog: oiEvnLog                  // объект регистрации ситуаций для сохранения списка ошибок, предупр., информац. сообщений
                            ): longint;

//****************************************************************************
#doc
Удаление в журнале изменений качества записей, созданных по документу<br>
#end
Function QPMove_DelByDoc (
                          ardtQPPrmIO: tQPPrmIO;
                          var aoEvnLog: oiEvnLog                  // объект регистрации ситуаций для сохранения списка ошибок, предупр., информац. сообщений
                         ): longint;

End; // ObjInterface oQP_CF

VipInterface iQP_CF implements oQP_CF
#ifdef ATL51
  Licensed (FREE)
#endif
;

#end // #ifdef Kachestvo
