#ifndef _DogUslFuncs_vih_
#define _DogUslFuncs_vih_

#ifdef ComponentVersion
#component "L_PRICES"
#end

#doc
Функции договоров на оказание платных услуг
#end
ObjInterface objDogUslFuncs;
//----------------------------------------------------------------------
#doc
Возвращает TRUE если установлены договора на оказание платных услуг
#end
Function IsDogUsl : boolean;
//----------------------------------------------------------------------
#doc
Процедура создания договоров на оказание платных услуг по маркеру
  wTable - таблица, на основании которой делаем договора (U_Student или U_Abiturient)
  sMarker - наименование маркера
#end
Procedure MakeDogsByMarker(wTable : word; sMarker : string);
//----------------------------------------------------------------------
#doc
Процедура привязки базового учебного плана к позициям прайс-листа
  marker   - маркер с выбранными позициями прайс-листа
#end
Procedure BindCurrToPrice(marker : longint);
//----------------------------------------------------------------------
#doc
Процедура привязки позиций прайс-листа к базовому учебному плану
  marker   - маркер с выбранными базовыми учебными планами
#end
Procedure BindPriceToCurr(marker : longint);
//----------------------------------------------------------------------
#doc
Процедура получения значения полей для прайс-листа
  pPrice   - ссылка на позицию прайс-листа
  sField   - наименование поля
#end
Function GetField_CurrToPrice(pPrice : comp; sField : string) : string;
//----------------------------------------------------------------------
#doc
Процедура удаления привязки базового учебного плана к позициям прайс-листа
  pPrice   - ссылка на позицию прайс-листа
#end
Procedure DeleteCurrToPrice(pPrice : comp);
//----------------------------------------------------------------------
#doc
Процедура копирования привязки базового учебного плана к позициям прайс-листа
  pPriceSource   - ссылка на позицию прайс-листа - источник
  pPriceRec      - ссылка на позицию прайс-листа - приемник
#end
Procedure CopyCurrToPrice(pPriceSource, pPriceRec : comp);
//----------------------------------------------------------------------
#doc
Процедура формирования услуг по выбранным специальностям
  marker   - маркер с выбранными специальностями
#end
Procedure CreateKatUslBySpeciatity(marker : longint);
//----------------------------------------------------------------------
#doc
Процедура формирования услуг по выбранным базовым учебным планам
  marker   - маркер с выбранными базовыми учебными планами
#end
Procedure CreateKatUslByCurriculum(marker : longint);
//----------------------------------------------------------------------
#doc
Открыть интерфейс договоров с фильтром по контрагенту
  cRec   - ссылка на студента\абитуриента
  wTable - код таблицы
#end
Procedure ShowDogovorsOnStudAbit(cRec : comp; wTable : word);
//----------------------------------------------------------------------
#doc
Открыть отчет о ходе исполнения договоров с фильтром по контрагенту
  cRec   - ссылка на студента\абитуриента
  wTable - код таблицы
#end
Procedure ShowGetDocs2OnStudAbit(cRec : comp; wTable : word);
//----------------------------------------------------------------------
#doc
Выводит наименование фильтра
  wNoTable - 1 - студенты, 2 - абитуриенты
#end
Function GetFilterName(wNoTable : word) : string;
//----------------------------------------------------------------------
#doc
Очищает фильтр
  wNoTable - 1 - студенты, 2 - абитуриенты
#end
Procedure ClearFilter(wNoTable : word);
//----------------------------------------------------------------------
#doc
Выбор
  wNoTable - 1 - студенты, 2 - абитуриенты
#end
Function PickFilter(wNoTable : word) : boolean;
//----------------------------------------------------------------------
#doc
Проверка фильтра
  wNoTable - 1 - студенты, 2 - абитуриенты
  pDogovor - ссылка на договор
#end
Function CheckFilterDogovor(wNoTable : word; pDogovor : comp) : boolean;

#doc
Создает записи с информацией об обучающемся для вновь привязанных контрагентов
  pU_AbitStudKontr - ссылка на таблицу связи контрагента с обучающимся
#end
Procedure MakePersInfoForKontr(pU_AbitStudKontr : comp);
//----------------------------------------------------------------------
#doc
Создает записи с информацией об обучающемся для договора
  pDogovor - ссылка на таблицу связи контрагента с обучающимся
#end
Procedure MakePersInfoForDogovor(pDogovor : comp);
//----------------------------------------------------------------------
#doc
Удаляет записи DogPersInfo при удалении договора
  pRec - ссылка на договор
#end
Procedure DelDogPersInfo(pRec : comp);
//----------------------------------------------------------------------
#doc
Выполняет действие cmPick, cmDelOnProtect и т.д.
  pPrice  - ссылка на позицию прайса
  sField  - наименование поле
  wCommand - событие
  sValue  - новое значение поля
#end
Procedure FieldAction_CurrToPrice(pPrice : comp; sField : string; wCommand : word; sValue : string);
//----------------------------------------------------------------------
#doc
Получение параметров копирования прайс-листа
#end
Function GetParamToCopy : boolean;
end;

#doc
Функции договоров на оказание платных услуг
#end
ObjInterface objDogUslFuncs_Ex;

#doc
Запуск интерфейса просмотра и редактирования текстовой информации договора
  pAbiturient - ссылка на абитуриента
  pPlan       - ссылка на план обучения
#end
Procedure Run_U_TextRepr(pAbiturient, pPlan : comp);

#doc
Проверяет и заполняет дату оплаты у абитуриента
  cDoc  - ссылка на документ
  wTiDk - тип документа
#end
Procedure CheckAndFillOpl(cDoc : comp; wTiDK : word);

#doc
Создание позиций прайс-листа по БУПам
  pKlPrice - прайс-лист
#end
Procedure MakePriceByCurr(pKlPrice : comp);
end;

#doc
Функции договоров на оказание платных услуг
#end
ObjInterface objDogUslFuncs_V2(objDogUslFuncs_Ex);
#doc
Меняет учебную группу студента в договорах
  pStudent - ссылка на студента
  pGroup   - ссылка на группу
#end
Procedure ChangeStudentGroup(pStudent : comp; pGroup : comp);

#doc
Меняет категорию студента в договорах
  pStudent - ссылка на студента
  pRank    - ссылка на категорию
#end
Procedure ChangeStudentRank(pStudent : comp; pRank : comp);

#doc
Получить значение поля по договору
  pDogovor - ссылка на договор
  sField   - поле
#end
Function GetField_ByDogovor(pDogovor : comp; sField : string) : string;
end;

#doc
Функции договоров на оказание платных услуг
#end
ObjInterface objDogUslFuncs_V3(objDogUslFuncs_V2);

#doc
Запустить интерфейс договоров на оказание платных услуг
#end
Function Run_Dogovor_Uch(Dogovor_VidDog
                       , Dogovor_TiDk
                       , Dogovor_Direct
                       , Dogovor_Status : word;
                         Dogovor_cDogovor
                       , Dogovor_nRec   : comp) : word;

#doc
Заполнение временной таблицы для быстрого поиска договоров по студентам
#end
Procedure Fill_tblDogFinder;
end;

//*********************************************************************************

VipInterface DogUslFuncs implements objDogUslFuncs
                                  , objDogUslFuncs_V3
                         licensed (FREE);

#end // _DogUslFuncs_vih_