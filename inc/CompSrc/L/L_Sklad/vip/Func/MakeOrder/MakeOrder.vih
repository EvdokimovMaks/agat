//********************************************************************************
//                                                        (c) корпорация Галактика
// Галактика 8.10 - Логистика
// Формирование ордеров
//********************************************************************************
#ifndef _MAKEORDER_VIH
#define _MAKEORDER_VIH

#ifdef ComponentVersion
#component "L_SKLAD"
#end

//******************************************************************************
#doc
  Функции для формирования ордеров
#end
//******************************************************************************

ObjInterface objMakeOrder;

//------------------------------------------------------------------------------
#doc
Формирование приходного складского ордера.</brief>

Параметры:
wMode - битовые маски режимов работы функции (см. константы в MakeOptionsByDefines.inc).
  поддерживаются биты WMODE_BATCH, WMODE_REQUEST_DPRICE, WMODE_USE_MSGBATCH
wParam - указывает, какие дефайны определены в вызывающем модуле (см. константы в MakeOptionsByDefines.inc).
Для формирования параметров wMode, wParam при вызове метода рекомендуется использовать
procedure MakeOptionsByDefines (MakeOptionsByDefines.vpp).
В MakeOptionsByDefines.inc описаны возможные значения параметров.
#end
public function MakePrihOrder(
  pKatSopr: comp;         //#docl Ссылка на сопроводительный документ
  ShowMess: boolean;      //#docl Выводить ли пользовательские сообщения
  var firstRozn: boolean;
  var prRozn: boolean;
  wSkPr,                  //#docl вид учета (см. константы cgVidUchO_* в oper.inc)
  wMode,                  //#docl Варианты взаимодействия с пользователем (см. примечание и константы в MakeOptionsByDefines.inc).
  wParam: word            //#docl Указывает, какие дефайны определены в вызывающем модуле (см. примечание и константы в MakeOptionsByDefines.inc).
): boolean; //#docl возвращает true при успехе

//------------------------------------------------------------------------------
#doc
  удаление ордеров по настройке
#end
Function IsDelOrder (pKatSopr: comp): boolean;

//------------------------------------------------------------------------------
#doc
  проверка возможности удаления ордера
#end
Function CanDelOrdEx(pKatSopr: comp; mesPrmt, checkTune: boolean; wMode: word): boolean;

//------------------------------------------------------------------------------
#doc
Удаление ордеров.
#end
Function DeleteOrders (pKatSopr: comp; MesPrmt, make_prih, make_rash: boolean; wMode, wParam: word): boolean;

//------------------------------------------------------------------------------
#doc
  Перерасчет средних цен в накладной
#end
Procedure CalcSrPriceInNakl(pKatSopr: comp);

//------------------------------------------------------------------------------
#doc
  Проверка наличия МЦ
#end
Function CheckNalTov(pKatSopr: comp; Dat: Date; var Counts: integer; wMode, wParam: word; frmProt: TPtr): word;

//------------------------------------------------------------------------------
#doc
  Пересчет кол-ва с учетом дискретности
#end
Function Divide_SpSopr_by_SpOrder(pKatSopr: comp): boolean;

//------------------------------------------------------------------------------
#doc
  формирование расходного складского ордера
#end
Function MakeRashOrder( pKatSopr: comp; dForm: date; Counts: integer; doDoocen, nDescr: boolean;
                        frmHandle: TPtr; var wMsgForm: word; wSkPr, wMode, wParam: word): boolean;

//------------------------------------------------------------------------------
#doc
Формирование расходного складского ордера.</brief>
  Поддерживается протоколирование сообщений как в переданный хэндл формы, так и в разделяемый
объект oMsgBatch (интерфейс MsgBatch). Для вывода протокола в oMsgBatch необходимо установить
бит WMODE_LOG_TO_MSGBATCH параметра wMode.
#end
Function MakeRashOrd(
  pKatSopr: comp;   //#docl ссылка на сопроводительный документ
  NeedMsg: boolean; //#docl выдавать ли сообщения пользователю во время формирования ордера
  pDateOrd: date;   //#docl дата формирования ордера. Если передана ZeroDate, то в не в пакетном режиме будет выдан запрос на ввод даты.
  wSkPr,            //#docl вид учета (см.oper.inc)
  wMode,            //#docl битовая маска настраиваемых режимов работы метода (см.OrderFuncModes.inc).
  wParam: word;     //#docl битовая маска предопределенных в вызывающем коде дефайнов (см.MakeOptionsByDefines.inc)
  frmProt: TPtr     //#docl Хэндл формы протокола сообщений. Если передан 0 - протокол не ведется.
): Boolean;         //#docl возвращает true, если ордера успешно сформированы.

//------------------------------------------------------------------------------
#doc
  Установка даты формирования ордера
#end
event Function CanMakeOrder: Date;

//------------------------------------------------------------------------------
#doc
  Вид учета ордера, формируемого по сопроводительному документу заданного вида
#end
Function GetVidUch(awVidSopr, awDirect: word): word;

//------------------------------------------------------------------------------
#doc
  Возвращает решение о том, разрешено ли списывать МЦ (true - разрешено, false - запрещено).
  Выводит сообщение или запрос пользователю, либо пишет сообщение в протокол.
#end
Function IsWriteOffAllowed(
  _errorFlags: word; // #docl флаги ошибок, устанавливаемые методами текущего интерфейса (CheckNalTov, MakeRashOrd)
  _hideRequestsToUser: boolean = false; // #docl нужно ли прятать пользовательские сообщения и писать их в протокол
  _protocolFormHandle: TPtr    = 0      // #docl сюда передаем хэндл формы протокола (имеет смысл при hideRequestsToUser = true).
  ): boolean;

end;

ObjInterface objMakeOrder_V2(objMakeOrder);
//------------------------------------------------------------------------------
#doc
  Вид учета ордера, формируемого по заданному сопроводительному документу
#end
//
Function GetVidUchSopr(aKatSopr: comp; awVidSopr, awDirect: word): word;

end;


ObjInterface objMakeOrder_V3(objMakeOrder_V2);
//------------------------------------------------------------------------------
#doc
  Контроль необходимости переформирования ордеров по документам
#end
function ChReBuildOrd(cKatSopr_, cPodr_, cMol_ : comp; boPrih, boRash, DElOldRaz, boReclNakl : boolean): boolean;

//------------------------------------------------------------------------------

end;

//******************************************************************************
VipInterface MakeOrder_Release implements objMakeOrder_V3
  Licensed (FREE);
  Public:
    // пользовательская функция выполняется перед удалением ордера False - прервать удаление
    Function  OnBeforeDeleteOrder: boolean;
    // пользовательская процедура выполняется после удаления ордера
    Procedure OnAfterDeleteOrder;
    // пользовательская функция выполняется перед формированием приходного ордера False - прервать формирование
    Function  OnBeforeMakePrihOrder: boolean;
    // пользовательская процедура выполняется после формирование приходного ордера
    Procedure OnAfterMakePrihOrder;
    // пользовательская функция выполняется перед формированием расходного ордера False - прервать формирование
    Function  OnBeforeMakeRashOrder: boolean;
    // пользовательская процедура выполняется после формирование расходного ордера
    Procedure OnAfterMakeRashOrder;
  end
;

VipInterface MakeOrder(MakeOrder_Release)
  SourceFile = "MakeOrder_Release.vip"
  Licensed (FREE);
  Public:
    // пользовательская функция выполняется перед удалением ордера False - прервать удаление
    Function  OnBeforeDeleteOrder: boolean;
    // пользовательская процедура выполняется после удаления ордера
    Procedure OnAfterDeleteOrder;
    // пользовательская функция выполняется перед формированием приходного ордера False - прервать формирование
    Function  OnBeforeMakePrihOrder: boolean;
    // пользовательская процедура выполняется после формирование приходного ордера
    Procedure OnAfterMakePrihOrder;
    // пользовательская функция выполняется перед формированием расходного ордера False - прервать формирование
    Function  OnBeforeMakeRashOrder: boolean;
    // пользовательская процедура выполняется после формирование расходного ордера
    Procedure OnAfterMakeRashOrder;
  end
;
#end