//------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Галактика 9.1
//
// Проверка возможности назначений исполнителей с учетом ранее проведенный
// назначений конкретного исполнителя в пределах текущего варианта плана,
// рамках модуля "Управление персоналом" согласно табеля учета рабочего времени,
// в рамках модуля "Управление транспортом" согласно путевых листов,
// в рамках модуля "Управление ремонтами" согласно графика ремонтов.
//------------------------------------------------------------------------------

#ifndef _AssignmentsValidator_vih_
#define _AssignmentsValidator_vih_

#component "L_UksPlans"

#doc
Генерируется при попытке вызова методов UpdateAssignment, ValidateAssignment без предварительной загрузки
списков ранее назначенных исполнителей.
#end
exception ExAssignmentsNotLoaded;

objinterface IAssignmentsValidator;
  #doc
  Возвращает текстовое описание причины неудачи назначения исполнителя.</brief>
  #end
  public function GetLastError: string;

  #doc
  Удаление ранее добавленного назначения из списка назначений и освобождение ресурсов, используемых
  назначением.</brief>
  #end
  public procedure RemoveAssignment(
    _assignRes: comp //#docl Ссылка на назначение (AssignRes.nRec)
  );

  #doc
  Добавление нового назначения или обновление параметров ранее добавленного.</brief>
  В случае успешного назначения метод возвращает TRUE.
  При невозможности назначения из-за недостатка ресурсов метод возвращает FALSE.
  Текстовое описание причины неудачи можно получить с помощью метода GetLastError
  Т.о. с помощью данной процедуры можно также безопасно проверять возможность назначения исполнителя
  с указанными параметрами.
  Может генерировать исключение ExAssignmentsNotLoaded.
  #end
  public function UpdateAssignment(
    _executor: comp; //#docl Ссылка на исполнителя. (LSchet.nRec, Transp.nRec, в зависимости от m_executorType)
    _executorType: word; //#docl Тип исполнителя. См. константы EXECUTOR_TYPE_* в Executors.inc
    _assignRes: comp; //#docl Ссылка на назначение (AssignRes.nRec)
    _dateBegin, _dateEnd: date; //#docl Дата начала и окончания выполнения работы исполнителем.
    _ktu: double //#docl КТУ исполнителя.
  ): boolean;

  #doc
  Загрузка списков ранее назначенных исполнителей в рамках указанного варианта плана.</brief>
  Проверка валидности загружаемых назначений не производится.
  Возвращает false при неудаче, устанавливая значение last error
  #end
  public function ForceLoadAssignments(_planVar: comp): boolean;

  #doc
  Отложенная загрузка списков ранее назначенных исполнителей в рамках указанного варианта плана.</brief>
  При вызове процедура реально не загружает список исполнителей, а только запоминает значение ссылки на
  вариант плана. Непосредственно загрузка происходит при первом обращении к одному из паблик-методов интерфейса.
  #end
  public procedure LoadAssignments(_planVar: comp);

  #doc
  Очистка ранее загруженных данных по исполнителям и подготовка для загрузки новых данных.</brief>
  #end
  public procedure Clear;

  #doc
  Проверяет, удовлетворяет ли хранящееся в БД назначение исполнителя ограничениям по ресурсам.</brief>
  Текстовое описание причины неудачи можно получить с помощью метода GetLastError
  Может генерировать исключение ExAssignmentsNotLoaded.
  #end
  public function ValidateAssignment(
    _assignRes: comp // Ссылка на назначение (AssignRes.nRec)
  ): boolean;
end;

vipinterface AssignmentsValidator implements IAssignmentsValidator licensed(free);
public:
  constructor Init;
end;

#endif
