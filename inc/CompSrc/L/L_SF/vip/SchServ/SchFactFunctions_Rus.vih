//******************************************************************************
//                                                      (c) корпорация Галактика
// Галактика 7.12 - логистика
// Объект для работы с документами для учета НДС (Россия)
//******************************************************************************

#ifndef _SCHFACTFUNCTIONS_RUS_VIH
#define _SCHFACTFUNCTIONS_RUS_VIH

#ifdef ComponentVersion
#component "L_SF"
#end
#include SchRegisterProvider.vih

#doc
Методы для работы со счетами-фактурами (Россия и другие страны, кроме Беларуси)
#end
ObjInterface ISchFactFunctions_Rus;
  // Функции, аналог которых есть в объекте по РБ, т.к. разная реализация
  #doc
  Инициализация
  #end
  function DoInit_Rus(pDir:word):boolean;

  #doc
  Создание СФ по сопроводительному документу
  #end
  function CreateSFbyKatSopr_Rus(cKatSopr:comp):boolean;

  #doc
  Создание СФ по сводному сопроводительному документу
  #end
  function CreateSFByGrSopr_Rus(aGrSopr : Comp) : Boolean;

  #doc
  Создание СФ по платежному документу
  #end
  function CreateSFbySoprHoz_Rus(cSoprHoz:comp):boolean;

  #doc
  Создание СФ заданного типа по платежному документу
  #end
  function CreateSFbySoprHoz2_Rus(cSoprHoz:comp; IsAvans:boolean; IsRozn:boolean):boolean;

  #doc
  Создание СФ заданного типа и номера по платежному документу
  #end
  function CreateSFbySoprHoz3_Rus(cSoprHoz:comp; IsAvans:boolean; num:string): boolean;

  #doc
  Добавление хозоперации к сводному СФ
  #end
  function AddSoprHozToSF_Rus(aSH, aSvSF : Comp) : Boolean;

  #doc
  Удаление СФ
  #end
  function DeleteSchFact_Rus(cSchFact: comp): boolean;

  #doc
  Установка даты формирования документа
  #end
  function SetDateFact_Rus(cSchFact: comp; df: date): boolean;

  #doc
  Установка даты оплаты/отгрузки документа
  #end
  function SetDatePost_Rus(cSchFact: comp; dp: date): boolean;

  #doc
  Регистрация счета-фактуры
  #end
  function Register_Rus(cSchFact: comp):boolean;

  #doc
  Регистрация счета-фактуры по разноске платежа
  #end
  function RegisterSoprHoz_Rus(cSchFact :comp; cSoprHoz: comp):boolean;

  #doc
  Пакетные операции над СФ (0 - регистрация, 1 - удаление)
  #end
  function DoPacket_Rus(wAction: word; lMarker: longint; bToForm: boolean): longint;

  #doc
  Удаление записи в книге продаж/закупок
  #end
  function DeleteBookPrZk_Rus(cBookPrZk :comp): boolean;

  #doc
  Создание СФ на суммовую разницу
  #end
  function CreateSchSumDif_Rus(cSoprHoz: comp): boolean;

  // Функции без аналогов в объекте РБ
  #doc
  Проверка системных настроек
  #end
  function ErrSystDate_Rus: boolean;

  #doc
  Создание СФ по накладной на реализацию
  #end
  function CreateSFbyKassa_Rus(sBaseNDS1: double; sNDS1: double;
                                 sBaseNDS2: double; sNDS2: double;
                                 sBaseNDS3: double; sNDS3: double;
                                 sNoNDS: double; sDrNal: double;
                                 sAkciz: double; sTaraNDS: double;
                                 sTaraNoNDS: double; cVal: comp): comp;

  #doc
  Установка протокола сообщений
  #end
  procedure SetMsgState_Rus(bForm: boolean);

  #doc
  Закрытие протокола сообщений
  #end
  procedure CloseMsgState_Rus;

  #doc
  Установка типа СФ
  #end
  procedure SetCreateType_Rus(wType: word);

  #doc
  Создание/модификация ТХО по записи книги продаж/покупок
  #end
  procedure UpdateSoprHoz_Rus(cBookPrZk :comp);

  #doc
  Установка параметров для регистрации СФ по объектам строительства
  #end
  procedure SetUKSRegMode_Rus(isUks: boolean; dateReg: date; cObj: comp; bPartReg: boolean);

  #doc
  Создание СФ по операции ввода объекта в эксплуатацию
  #end
  function CreateSchFactUKS_Rus(cVvStroy: comp): boolean;

  #doc
  Формирование сторно-записи для зарегистрированного счета-фактуры
  #end
  Function StornSF4UKS_Ex_Rus( recStornSF: TSchRegUKS;
                           provider: DelayedUKSRegistration
                         ): boolean;

  #doc
  Регистрация счета-фактуры по объектам строительства
  #end
  Function RegisterSF_Ex_Rus( recRegSF: TSchRegUKS;
                          provider: DelayedUKSRegistration
                        ): boolean;

  #doc
  Создание СФ по накладной на возврат (розница)
  #end
  function CreateSFbyVozvrRozn_Rus(cDoc: comp): comp;

end;

VipInterface VISchFunc_Rus implements ISchFactFunctions_Rus
  LICENSED (FREE)
  SourceFile = "SchFactFunctions_Rus.vip"
;

#end // SCHFACTFUNCTIONS_RUS_VIH
