//------------------------------------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Галактика 8.1
// Расчет сальдовых остатков на дату c возможностью формирования по нескольким видам учета
//------------------------------------------------------------------------------------------------------------

#ifNdef __Store_VIH__
#define __Store_VIH__

#ifdef ComponentVersion
#component "L_Ostatki"
#end

#doc
Функции расчета остатков
#end

const
  // --- отбор записей ---
  ftALL  =  0; // все записи
  ftNULL = -1; // только записи с пустой ссылкой (cRec = 0)
  ftPICK = -2; // фильтр остатков по Pick
  // --- группировка записей ---
  grEnterprise = 0; // по предприятию
  grPodr       = 1;
  grMol        = 2;
  grParty      = 4;
  grBranch     = 8; // при группировке по филиалу, запускается VIP-код, а не DSQL!!!
  // --- передаваемые параметры ---
  prToStore         =   1; // входящий остаток
  prHideAll         =   2; // не заполнять цены и количество
  prForceInBase     =   4; // для многовалютного учета валюту выводить базовую
  prGetMCGroup      =   8; // заполнять в TmpSaldo1 поля cGroupMC и kGroupMC
  prGetDateParty    =  16; // заполнять в TmpSaldo1 поле DateParty
  prNotGetMcNullKol =  32; // не брать записи с нулевым количеством и ненулевой ценой
  prFiltrGroupMC    =  64; // вместо фильтра по МЦ использовать фильтр по Группе МЦ (только для DSQL)
  prGroupSp         = 128; // группировать по значению вида учета записанного в поле cObj
  prPriceEnterprice = 256; // цены по предприятию
end;

type SummRazrez = record // аккумулирующие переменные
  kol      : double;
  srPrice  : double;
  vPrice   : double;
  cVal     : comp;
  kolP     : double;
  kolR     : double;
  opers    : double;
end;

ObjInterface objStore;

//-----------------------------------------------------------------------------
  #doc
  Расчет остатка. Результат помещается в TmpSaldo1.
  #end
  procedure GetStore(_dDate: date;      //#docl дату
    _cMC, _cPodr, _cMol, _cParty: comp; //#docl параметры фильтрации (константы ft...)
    _wGroup: word;                      //#docl группировка (константы gr...)
    _wMaskVidUcheta: word;              //#docl вид учета остатков (oper.inc)
    _wParam: word = 0);                 //#docl параметры формирования; default = исходящие остатки(константы pr...)

  #doc
  Преобразование из кода вида учета в битовую маску видов учета (константы oper.inc)
  #end
  function GetMaskFromVidUch(_VidUch: word): word;

  #doc
  Возвращает битовый параметр группировки по булевым параметрам
  #end
  function GetGroupFromBool(_bGrPodr, _bGrMol, _bGrParty: boolean): word;

  #doc
  Расчет propepty StoreKol, StoreSum, по сформированной таблице TmpSaldo1.
  Возвращает TRUE если кол или сумма не ноль.
  #end
  function CalcStore(_cMC, _cPodr, _cMol, _cParty, _cVal : comp): boolean;

  property KolStore:    double read; //#docl наличие количества
  property SummaStore:  double read; //#docl возвращает сумму в НДЕ
  property SummaVStore: double read; //#docl возвращает сумму в валюте
  property SummaNStore: double read; //#docl возвращает налоговую сумму
  
  #doc
  Расчет остатка для одной МЦ
  #end
  function GetMCStore(_dDate: date;     //#docl дата остатка
    _cMC, _cPodr, _cMol, _cParty: comp; //#docl параметры фильтрации (константы ft...)
    _wMaskVidUcheta: word;              //#docl вид учета остатков (oper.inc)
    _wParam: word = 0): double;         //#docl параметры формирования; default = исходящие остатки(константы pr...)

  // для функции GetMCStore
  property KolMCStore : double read; //#docl количества для одной МЦ
  property AvrMCPrice : double read; //#docl средняя цена МЦ
  property AvrMCPriceV: double read; //#docl средняя цена МЦ в валюте
  property AvrMCPriceN: double read; //#docl средняя цена МЦ по налоговой стоимости

  // only DSQL
  #doc
  Получить остаток на конкретную дату по конкретному разрезу (одна запись, без всяких аккумулирующих сумм и параметров)
  #end
  function StoreRazrOnDate(
    _dDate: date;                      // дата остатка
    _wVidUcheta: word;                 // вид учета остатков
    _cMC, _cPodr, _cMol, _cParty: comp // разрез
  ): SummRazrez;                       // SummRazrez

end;

//-----------------------------------------------------------------------------
VipInterface Store implements objStore licensed (FREE);

#end // __Store_VIH__
