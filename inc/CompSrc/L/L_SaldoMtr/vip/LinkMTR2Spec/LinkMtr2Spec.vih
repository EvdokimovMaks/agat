//------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Галактика 7.12 - Целевой учет запасов
// Аналитики целевого учета в спецификации
//------------------------------------------------------------------------------

#ifNdef __LinkMTR2Spec_vih__
#define __LinkMTR2Spec_vih__

#component "L_SaldoMtr"

Const
  // Значения параметра pwPr метода SetObjParam и интерфейса LinkMTR2Spec
  cgPr_Edit  = 0; // редактирование
  cgPr_View  = 1; // просмотр
  cgPr_Smeta = 2; // есть связь со сметой
  cgPr_Kau1  = 3; // КАУ 1 менять нельзя, т.к. он указан в шапке документа
  cgPr_UKS   = 4; // можно работать только с настройкой ЦУ с кодом 001 (Капстрой)
  cgPr_ViewA = 6; // то же что и cgPr_View, но с хэлпом для Акта на перемещение между объектами
  cgPr_EditA = 7; // то же что и cgPr_Edit, но с хэлпом для Акта на перемещение между объектами
  cgPr_Auto  = 8; // (рекомендуемый!) режим работы определяется внутри объекта

  // Значения параметра pwAction интерфейса EditMtr2Spec_2
  cgAct_None = 0; // редактирование
  cgAct_Pick = 1; // нажали F3 на поле аналитики
  cgAct_Del  = 2; // нажали Delete на поле аналитики
End;

#doc
Аналитики целевого учета в спецификации.
#end
ObjInterface ObjLinkMTR2Spec;

  #doc
  Возвращает наименование роли для КАУ с заданным номером.
  #end
  Function GetRole(aiNum : word) : string;

  #doc
  Инициализирует объект для работы с КАУ.
  #end
  Function InitKau(cSaldTune: comp; var wKauKol: word): boolean;

  #doc
  Инициализирует объект для работы с КАУ.
  #end
  Function InitKauU(cSaldTune: comp; bUKS: boolean; var wKauKol: word): boolean;

  #doc
  Проверка возможности копирования привязки к объекту целевого учета.
  #end
  Function CanCopySpec(wSrcTab : word; cSrcSpec : comp; wDstTab : word; cDstSpec : comp): boolean;

  #doc
  Процедура инициализации интерфейса.
  #end
  Procedure SetObjParam(wTable: word; cSpec: comp; wPr: word);

  #doc
  Осуществляет привязку объекта целевого учета к позиции спецификации.</brief>

  <p>Замечание:<br>
    Если необходимо только осуществить привязку ОЦУ к позиции спецификации документа,
  без использования других возможностей интерфейса LinkMtr2Spec, рекомендуется пользоваться
  универсальным методом oMtrFun.LinkMtrToSpec. Более того, если вызов SetVal все же окажется
  необходим, более не нужно строить громоздких конструкций вида:
  <pre class="example">
  case TypeSopr of
    106: oLinkMTR2Spec.SetVal(coSpSopr, SpSopr.nRec, coGetTune('CelUchForModul.SELL') );
    206: oLinkMTR2Spec.SetVal(coSpSopr, SpSopr.nRec, coGetTune('CelUchForModul.BUY') );
    ....
  end;
  </pre>
  Вместо этого достаточно сделать один вызов SetVal(coSpSopr, SpSopr.nRec, 0), SetVal(coSpStep, SpStep.nRec, 0) и т.п.
  Все остальные значения автоматически определит метод oMtrFun.LinkMtrToSpec, который используют методы SetVal, SetValU.
  #end
  //    Только убедитесь, пожалуйста, в наличии нужной таблицы и вашего типа документа в
  //  методах GetSaldTuneByTable, GetSaldTuneBySpSopr, GetSaldTuneBySpStep интерфейса MTRFuncs
  //  (тяжело при создании метода учесть все возможные документы системы).
  Procedure SetVal(
    wTable: word; // #docl Код таблицы спецификации документа ( например coSpSopr ).
    cSpec,        // #docl nRec указанной таблицы спецификации, к которой осуществляется привязка.

    #doc
    Позволяет указать объект ЦУ, отличный от такового по умолчанию.
    Если указан 0 - берет значение по настройке CelUchForModul в зависимости от типа документа.
    #end
    cSaldTune: comp
  );

  #doc
  Осуществляет привязку объекта целевого учета к позиции спецификации.</brief>

  <p>Замечание:<br>
  Если необходимо только осуществить привязку ОЦУ к позиции спецификации документа,
  без использования других возможностей интерфейса LinkMtr2Spec, рекомендуется пользоваться
  универсальным методом oMtrFun.LinkMtrToSpec. Более того, если вызов SetValU все же окажется
  необходим, более не нужно строить громоздких конструкций вида:
  <pre class="example">
  case TypeSopr of
    106: oLinkMTR2Spec.SetValU(coSpSopr, SpSopr.nRec, coGetTune('CelUchForModul.SELL'), false);
    206: oLinkMTR2Spec.SetValU(coSpSopr, SpSopr.nRec, coGetTune('CelUchForModul.BUY'), false);
    1610, 610, 629:
      if boGetTune('CelUchForModul.UKS')
        oLinkMTR2Spec.SetValU(coSpSopr, SpSopr.nRec, 0, true);
  end;
  </pre>
  Вместо этого достаточно сделать один вызов SetVal(coSpSopr, SpSopr.nRec, 0), SetVal(coSpStep, SpStep.nRec, 0) и т.п.
  вместо SetValU. Все остальные значения автоматически определит метод oMtrFun.LinkMtrToSpec, который используют
  методы SetVal, SetValU.
  #end
  //    Только убедитесь, пожалуйста, в наличии нужной таблицы и вашего типа документа в
  //  методах GetSaldTuneByTable, GetSaldTuneBySpSopr, GetSaldTuneBySpStep интерфейса MTRFuncs
  //  (тяжело при создании метода учесть все возможные документы системы).
  Procedure SetValU(
    wTable: word; // #docl Код таблицы спецификации документа ( например coSpSopr ).
    cSpec,        // #docl nRec указанной таблицы спецификации, к которой осуществляется привязка.

    #doc
    Позволяет указать объект ЦУ, отличный от такового по умолчанию.
    Если указан 0 - берет значение по настройке CelUchForModul в зав-ти от типа документа.
    #end
    cSaldTune: comp;

    #doc
    Позволяет принудительно задать объект целевого учета "УКС", если установить его в TRUE.
    Если указан FALSE - объект целевого учета определяется автоматически по типу документа.
    #end
    bUKS: boolean
  );

  #doc
  Процедура осуществляет удаление объекта целевого учета привязанного к позиции спецификации.
  #end
  Procedure DelVal(wTable: word; cSpec: comp);

  #doc
  Процедура осуществляет переключение форматов.
  #end
  Procedure SelFormat(pbShowK: boolean);

  #doc
  Событие, возникающее при нажатии PageUp.
  #end
  event Procedure DoPageUp;

  #doc
  Событие, возникающее при нажатии PageDown.
  #end
  event Procedure DoPageDown;

  #doc
  Событие, возникающее при изменении значения аналитики.
  #end
  event Procedure RereadKAU;

  event Function EventPick: boolean;

End;

VipInterface LinkMTR2Spec implements ObjLinkMTR2Spec
  licensed( free )
  Parameters ( pwTable: word; pcSpec: comp; pwPr: word );

VipInterface EditMtr2Spec_2( LinkMTR2Spec )
  licensed( free )
  Parameters( pwAction, pwField: word );

#end
