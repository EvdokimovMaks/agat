//-------------------------------------------------------------------
//--- Copyright(c) 2001 by Galaktika Corporation                  ---
//--- Этот файл автоматически генерируется для использования      ---
//--- COM интерфейсов из Атлантиса. Править этот файл запрещается ---
//--- так как это может привести к неработоспособности системы    ---
//-------------------------------------------------------------------

// 

#ifndef __ExRatesCOM__
#define __ExRatesCOM__
#include atlcom.vih

//--- Forwards declarations --------------

ObjInterface comIXMLNode; forward;
ObjInterface comIDataSet; forward;
ObjInterface comIExRates; forward;
ObjInterface com_CurrenciesRefDailyCompletedEventHandler; forward;
ObjInterface com_CurrenciesRefDailyCompletedEventArgs; forward;
ObjInterface com_CurrenciesRefMonthlyCompletedEventHandler; forward;
ObjInterface com_CurrenciesRefMonthlyCompletedEventArgs; forward;
ObjInterface com_StartDateCompletedEventHandler; forward;
ObjInterface com_StartDateCompletedEventArgs; forward;
ObjInterface com_LastDailyExRatesDateCompletedEventHandler; forward;
ObjInterface com_LastDailyExRatesDateCompletedEventArgs; forward;
ObjInterface com_LastMonthlyExRatesDateCompletedEventHandler; forward;
ObjInterface com_LastMonthlyExRatesDateCompletedEventArgs; forward;
ObjInterface com_ExRatesDailyCompletedEventHandler; forward;
ObjInterface com_ExRatesDailyCompletedEventArgs; forward;
ObjInterface com_ExRatesMonthlyCompletedEventHandler; forward;
ObjInterface com_ExRatesMonthlyCompletedEventArgs; forward;
ObjInterface com_ExRatesDynCompletedEventHandler; forward;
ObjInterface com_ExRatesDynCompletedEventArgs; forward;
ObjInterface com_CurrenciesRefCompletedEventHandler; forward;
ObjInterface com_CurrenciesRefCompletedEventArgs; forward;
ObjInterface com_MetalsLastDateCompletedEventHandler; forward;
ObjInterface com_MetalsLastDateCompletedEventArgs; forward;
ObjInterface com_MetalsRefCompletedEventHandler; forward;
ObjInterface com_MetalsRefCompletedEventArgs; forward;
ObjInterface com_MetalsPricesCompletedEventHandler; forward;
ObjInterface com_MetalsPricesCompletedEventArgs; forward;
ObjInterface com_IngotsPricesCompletedEventHandler; forward;
ObjInterface com_IngotsPricesCompletedEventArgs; forward;
ObjInterface com_IngotsLastDateCompletedEventHandler; forward;
ObjInterface com_IngotsLastDateCompletedEventArgs; forward;
ObjInterface com_StockAddRatesCompletedEventHandler; forward;
ObjInterface com_StockAddRatesCompletedEventArgs; forward;
ObjInterface com_StockAddRatesLastDateCompletedEventHandler; forward;
ObjInterface com_StockAddRatesLastDateCompletedEventArgs; forward;
ObjInterface com_RefRateOnDateCompletedEventHandler; forward;
ObjInterface com_RefRateOnDateCompletedEventArgs; forward;
ObjInterface com_RefRateDynCompletedEventHandler; forward;
ObjInterface com_RefRateDynCompletedEventArgs; forward;
ObjInterface com_CXMLNode; forward;
ObjInterface com_CDataSet; forward;
ObjInterface com_CExRates; forward;

VipInterface coCurrenciesRefDailyCompletedEventHandler; forward;
VipInterface coCurrenciesRefDailyCompletedEventArgs; forward;
VipInterface coCurrenciesRefMonthlyCompletedEventHandler; forward;
VipInterface coCurrenciesRefMonthlyCompletedEventArgs; forward;
VipInterface coStartDateCompletedEventHandler; forward;
VipInterface coStartDateCompletedEventArgs; forward;
VipInterface coLastDailyExRatesDateCompletedEventHandler; forward;
VipInterface coLastDailyExRatesDateCompletedEventArgs; forward;
VipInterface coLastMonthlyExRatesDateCompletedEventHandler; forward;
VipInterface coLastMonthlyExRatesDateCompletedEventArgs; forward;
VipInterface coExRatesDailyCompletedEventHandler; forward;
VipInterface coExRatesDailyCompletedEventArgs; forward;
VipInterface coExRatesMonthlyCompletedEventHandler; forward;
VipInterface coExRatesMonthlyCompletedEventArgs; forward;
VipInterface coExRatesDynCompletedEventHandler; forward;
VipInterface coExRatesDynCompletedEventArgs; forward;
VipInterface coCurrenciesRefCompletedEventHandler; forward;
VipInterface coCurrenciesRefCompletedEventArgs; forward;
VipInterface coMetalsLastDateCompletedEventHandler; forward;
VipInterface coMetalsLastDateCompletedEventArgs; forward;
VipInterface coMetalsRefCompletedEventHandler; forward;
VipInterface coMetalsRefCompletedEventArgs; forward;
VipInterface coMetalsPricesCompletedEventHandler; forward;
VipInterface coMetalsPricesCompletedEventArgs; forward;
VipInterface coIngotsPricesCompletedEventHandler; forward;
VipInterface coIngotsPricesCompletedEventArgs; forward;
VipInterface coIngotsLastDateCompletedEventHandler; forward;
VipInterface coIngotsLastDateCompletedEventArgs; forward;
VipInterface coStockAddRatesCompletedEventHandler; forward;
VipInterface coStockAddRatesCompletedEventArgs; forward;
VipInterface coStockAddRatesLastDateCompletedEventHandler; forward;
VipInterface coStockAddRatesLastDateCompletedEventArgs; forward;
VipInterface coRefRateOnDateCompletedEventHandler; forward;
VipInterface coRefRateOnDateCompletedEventArgs; forward;
VipInterface coRefRateDynCompletedEventHandler; forward;
VipInterface coRefRateDynCompletedEventArgs; forward;
VipInterface coCXMLNode; forward;
VipInterface coCDataSet; forward;
VipInterface coCExRates; forward;

//--- Types definition  ------------------


//--- arrays



//--- Object Interfaces ------------------

ObjInterface comIXMLNode( comIDispatch );
// #docl Объектный интерфейс comIXMLNode </brief>
  procedure XmlNode2File  // #docl  Комментарии отсутствуют. </brief> 
                           ( fileName // #docl Тип параметра: входной.
                           : string );
end;

VipInterface vcomIXMLNode( vcomIDispatch ) Implements comIXMLNode (virtual);
// #docl Служебный объект, создавать запрещается !!! </brief>
public:
  constructor CreateQI// #docl Создает экземпляр интерфейса. </brief>
                      ( iComHandle       // #docl Код экземпляра.
                      : longint; flags   // #docl Свойства экземпляра.
                      : word );
end;

ObjInterface comIDataSet( comIDispatch );
// #docl Объектный интерфейс comIDataSet </brief>
  procedure DataSet2File  // #docl  Комментарии отсутствуют. </brief> 
                           ( fileName // #docl Тип параметра: входной.
                           : string );
end;

VipInterface vcomIDataSet( vcomIDispatch ) Implements comIDataSet (virtual);
// #docl Служебный объект, создавать запрещается !!! </brief>
public:
  constructor CreateQI// #docl Создает экземпляр интерфейса. </brief>
                      ( iComHandle       // #docl Код экземпляра.
                      : longint; flags   // #docl Свойства экземпляра.
                      : word );
end;

ObjInterface comIExRates( comIDispatch );
// #docl Объектный интерфейс comIExRates </brief>
  property  service_Url// #docl Дополнительная документация отсутствует. </brief>
                        : string Read Write;
  procedure service_AuthenticationBasic  // #docl  Комментарии отсутствуют. </brief> 
                                          ( user // #docl Тип параметра: входной.
                                          : string; password // #docl Тип параметра: входной.
                                          : string; domain // #docl Тип параметра: входной.
                                          : string );
  procedure service_AuthenticationX509Certificate  // #docl  Комментарии отсутствуют. </brief> 
                                                    ( certificate // #docl Тип параметра: входной.
                                                    : string );
  function  CurrenciesRefDaily  // #docl  Комментарии отсутствуют. </brief> 
                                 : comIDataSet; // #docl Результат типа comIDataSet
  function  CurrenciesRefMonthly  // #docl  Комментарии отсутствуют. </brief> 
                                   : comIDataSet; // #docl Результат типа comIDataSet
  function  StartDate  // #docl  Комментарии отсутствуют. </brief> 
                        ( Periodicity // #docl Тип параметра: входной.
                        : longint ) : DATE; // #docl Результат типа DATE
  function  LastDailyExRatesDate  // #docl  Комментарии отсутствуют. </brief> 
                                   : DATE; // #docl Результат типа DATE
  function  LastMonthlyExRatesDate  // #docl  Комментарии отсутствуют. </brief> 
                                     : DATE; // #docl Результат типа DATE
  function  ExRatesDaily  // #docl  Комментарии отсутствуют. </brief> 
                           ( onDate // #docl Тип параметра: входной.
                           : DATE ) : comIDataSet; // #docl Результат типа comIDataSet
  function  ExRatesMonthly  // #docl  Комментарии отсутствуют. </brief> 
                             ( onDate // #docl Тип параметра: входной.
                             : DATE ) : comIDataSet; // #docl Результат типа comIDataSet
  function  ExRatesDyn  // #docl  Комментарии отсутствуют. </brief> 
                         ( curId // #docl Тип параметра: входной.
                         : longint; fromDate // #docl Тип параметра: входной.
                         : DATE; toDate // #docl Тип параметра: входной.
                         : DATE ) : comIDataSet; // #docl Результат типа comIDataSet
  function  CurrenciesRef  // #docl  Комментарии отсутствуют. </brief> 
                            ( Periodicity // #docl Тип параметра: входной.
                            : longint ) : comIDataSet; // #docl Результат типа comIDataSet
  function  MetalsLastDate  // #docl  Комментарии отсутствуют. </brief> 
                             : DATE; // #docl Результат типа DATE
  function  MetalsRef  // #docl  Комментарии отсутствуют. </brief> 
                        : comIDataSet; // #docl Результат типа comIDataSet
  function  MetalsPrices  // #docl  Комментарии отсутствуют. </brief> 
                           ( MetalId // #docl Тип параметра: входной.
                           : longint; fromDate // #docl Тип параметра: входной.
                           : DATE; toDate // #docl Тип параметра: входной.
                           : DATE ) : comIDataSet; // #docl Результат типа comIDataSet
  function  IngotsPrices  // #docl  Комментарии отсутствуют. </brief> 
                           ( onDate // #docl Тип параметра: входной.
                           : DATE ) : comIDataSet; // #docl Результат типа comIDataSet
  function  IngotsLastDate  // #docl  Комментарии отсутствуют. </brief> 
                             : DATE; // #docl Результат типа DATE
  function  StockAddRates  // #docl  Комментарии отсутствуют. </brief> 
                            ( onDate // #docl Тип параметра: входной.
                            : DATE ) : comIDataSet; // #docl Результат типа comIDataSet
  function  StockAddRatesLastDate  // #docl  Комментарии отсутствуют. </brief> 
                                    : DATE; // #docl Результат типа DATE
  function  RefRateOnDate  // #docl  Комментарии отсутствуют. </brief> 
                            ( onDate // #docl Тип параметра: входной.
                            : DATE ) : comIDataSet; // #docl Результат типа comIDataSet
  function  RefRateDyn  // #docl  Комментарии отсутствуют. </brief> 
                         : comIDataSet; // #docl Результат типа comIDataSet
end;

VipInterface vcomIExRates( vcomIDispatch ) Implements comIExRates (virtual);
// #docl Служебный объект, создавать запрещается !!! </brief>
public:
  constructor CreateQI// #docl Создает экземпляр интерфейса. </brief>
                      ( iComHandle       // #docl Код экземпляра.
                      : longint; flags   // #docl Свойства экземпляра.
                      : word );
end;

ObjInterface com_CurrenciesRefDailyCompletedEventHandler( comIDispatch );
// #docl Объектный интерфейс com_CurrenciesRefDailyCompletedEventHandler </brief>
end;

VipInterface vcom_CurrenciesRefDailyCompletedEventHandler( vcomIDispatch ) Implements com_CurrenciesRefDailyCompletedEventHandler (virtual);
// #docl Служебный объект, создавать запрещается !!! </brief>
public:
  constructor CreateQI// #docl Создает экземпляр интерфейса. </brief>
                      ( iComHandle       // #docl Код экземпляра.
                      : longint; flags   // #docl Свойства экземпляра.
                      : word );
end;

ObjInterface com_CurrenciesRefDailyCompletedEventArgs( comIDispatch );
// #docl Объектный интерфейс com_CurrenciesRefDailyCompletedEventArgs </brief>
end;

VipInterface vcom_CurrenciesRefDailyCompletedEventArgs( vcomIDispatch ) Implements com_CurrenciesRefDailyCompletedEventArgs (virtual);
// #docl Служебный объект, создавать запрещается !!! </brief>
public:
  constructor CreateQI// #docl Создает экземпляр интерфейса. </brief>
                      ( iComHandle       // #docl Код экземпляра.
                      : longint; flags   // #docl Свойства экземпляра.
                      : word );
end;

ObjInterface com_CurrenciesRefMonthlyCompletedEventHandler( comIDispatch );
// #docl Объектный интерфейс com_CurrenciesRefMonthlyCompletedEventHandler </brief>
end;

VipInterface vcom_CurrenciesRefMonthlyCompletedEventHandler( vcomIDispatch ) Implements com_CurrenciesRefMonthlyCompletedEventHandler (virtual);
// #docl Служебный объект, создавать запрещается !!! </brief>
public:
  constructor CreateQI// #docl Создает экземпляр интерфейса. </brief>
                      ( iComHandle       // #docl Код экземпляра.
                      : longint; flags   // #docl Свойства экземпляра.
                      : word );
end;

ObjInterface com_CurrenciesRefMonthlyCompletedEventArgs( comIDispatch );
// #docl Объектный интерфейс com_CurrenciesRefMonthlyCompletedEventArgs </brief>
end;

VipInterface vcom_CurrenciesRefMonthlyCompletedEventArgs( vcomIDispatch ) Implements com_CurrenciesRefMonthlyCompletedEventArgs (virtual);
// #docl Служебный объект, создавать запрещается !!! </brief>
public:
  constructor CreateQI// #docl Создает экземпляр интерфейса. </brief>
                      ( iComHandle       // #docl Код экземпляра.
                      : longint; flags   // #docl Свойства экземпляра.
                      : word );
end;

ObjInterface com_StartDateCompletedEventHandler( comIDispatch );
// #docl Объектный интерфейс com_StartDateCompletedEventHandler </brief>
end;

VipInterface vcom_StartDateCompletedEventHandler( vcomIDispatch ) Implements com_StartDateCompletedEventHandler (virtual);
// #docl Служебный объект, создавать запрещается !!! </brief>
public:
  constructor CreateQI// #docl Создает экземпляр интерфейса. </brief>
                      ( iComHandle       // #docl Код экземпляра.
                      : longint; flags   // #docl Свойства экземпляра.
                      : word );
end;

ObjInterface com_StartDateCompletedEventArgs( comIDispatch );
// #docl Объектный интерфейс com_StartDateCompletedEventArgs </brief>
end;

VipInterface vcom_StartDateCompletedEventArgs( vcomIDispatch ) Implements com_StartDateCompletedEventArgs (virtual);
// #docl Служебный объект, создавать запрещается !!! </brief>
public:
  constructor CreateQI// #docl Создает экземпляр интерфейса. </brief>
                      ( iComHandle       // #docl Код экземпляра.
                      : longint; flags   // #docl Свойства экземпляра.
                      : word );
end;

ObjInterface com_LastDailyExRatesDateCompletedEventHandler( comIDispatch );
// #docl Объектный интерфейс com_LastDailyExRatesDateCompletedEventHandler </brief>
end;

VipInterface vcom_LastDailyExRatesDateCompletedEventHandler( vcomIDispatch ) Implements com_LastDailyExRatesDateCompletedEventHandler (virtual);
// #docl Служебный объект, создавать запрещается !!! </brief>
public:
  constructor CreateQI// #docl Создает экземпляр интерфейса. </brief>
                      ( iComHandle       // #docl Код экземпляра.
                      : longint; flags   // #docl Свойства экземпляра.
                      : word );
end;

ObjInterface com_LastDailyExRatesDateCompletedEventArgs( comIDispatch );
// #docl Объектный интерфейс com_LastDailyExRatesDateCompletedEventArgs </brief>
end;

VipInterface vcom_LastDailyExRatesDateCompletedEventArgs( vcomIDispatch ) Implements com_LastDailyExRatesDateCompletedEventArgs (virtual);
// #docl Служебный объект, создавать запрещается !!! </brief>
public:
  constructor CreateQI// #docl Создает экземпляр интерфейса. </brief>
                      ( iComHandle       // #docl Код экземпляра.
                      : longint; flags   // #docl Свойства экземпляра.
                      : word );
end;

ObjInterface com_LastMonthlyExRatesDateCompletedEventHandler( comIDispatch );
// #docl Объектный интерфейс com_LastMonthlyExRatesDateCompletedEventHandler </brief>
end;

VipInterface vcom_LastMonthlyExRatesDateCompletedEventHandler( vcomIDispatch ) Implements com_LastMonthlyExRatesDateCompletedEventHandler (virtual);
// #docl Служебный объект, создавать запрещается !!! </brief>
public:
  constructor CreateQI// #docl Создает экземпляр интерфейса. </brief>
                      ( iComHandle       // #docl Код экземпляра.
                      : longint; flags   // #docl Свойства экземпляра.
                      : word );
end;

ObjInterface com_LastMonthlyExRatesDateCompletedEventArgs( comIDispatch );
// #docl Объектный интерфейс com_LastMonthlyExRatesDateCompletedEventArgs </brief>
end;

VipInterface vcom_LastMonthlyExRatesDateCompletedEventArgs( vcomIDispatch ) Implements com_LastMonthlyExRatesDateCompletedEventArgs (virtual);
// #docl Служебный объект, создавать запрещается !!! </brief>
public:
  constructor CreateQI// #docl Создает экземпляр интерфейса. </brief>
                      ( iComHandle       // #docl Код экземпляра.
                      : longint; flags   // #docl Свойства экземпляра.
                      : word );
end;

ObjInterface com_ExRatesDailyCompletedEventHandler( comIDispatch );
// #docl Объектный интерфейс com_ExRatesDailyCompletedEventHandler </brief>
end;

VipInterface vcom_ExRatesDailyCompletedEventHandler( vcomIDispatch ) Implements com_ExRatesDailyCompletedEventHandler (virtual);
// #docl Служебный объект, создавать запрещается !!! </brief>
public:
  constructor CreateQI// #docl Создает экземпляр интерфейса. </brief>
                      ( iComHandle       // #docl Код экземпляра.
                      : longint; flags   // #docl Свойства экземпляра.
                      : word );
end;

ObjInterface com_ExRatesDailyCompletedEventArgs( comIDispatch );
// #docl Объектный интерфейс com_ExRatesDailyCompletedEventArgs </brief>
end;

VipInterface vcom_ExRatesDailyCompletedEventArgs( vcomIDispatch ) Implements com_ExRatesDailyCompletedEventArgs (virtual);
// #docl Служебный объект, создавать запрещается !!! </brief>
public:
  constructor CreateQI// #docl Создает экземпляр интерфейса. </brief>
                      ( iComHandle       // #docl Код экземпляра.
                      : longint; flags   // #docl Свойства экземпляра.
                      : word );
end;

ObjInterface com_ExRatesMonthlyCompletedEventHandler( comIDispatch );
// #docl Объектный интерфейс com_ExRatesMonthlyCompletedEventHandler </brief>
end;

VipInterface vcom_ExRatesMonthlyCompletedEventHandler( vcomIDispatch ) Implements com_ExRatesMonthlyCompletedEventHandler (virtual);
// #docl Служебный объект, создавать запрещается !!! </brief>
public:
  constructor CreateQI// #docl Создает экземпляр интерфейса. </brief>
                      ( iComHandle       // #docl Код экземпляра.
                      : longint; flags   // #docl Свойства экземпляра.
                      : word );
end;

ObjInterface com_ExRatesMonthlyCompletedEventArgs( comIDispatch );
// #docl Объектный интерфейс com_ExRatesMonthlyCompletedEventArgs </brief>
end;

VipInterface vcom_ExRatesMonthlyCompletedEventArgs( vcomIDispatch ) Implements com_ExRatesMonthlyCompletedEventArgs (virtual);
// #docl Служебный объект, создавать запрещается !!! </brief>
public:
  constructor CreateQI// #docl Создает экземпляр интерфейса. </brief>
                      ( iComHandle       // #docl Код экземпляра.
                      : longint; flags   // #docl Свойства экземпляра.
                      : word );
end;

ObjInterface com_ExRatesDynCompletedEventHandler( comIDispatch );
// #docl Объектный интерфейс com_ExRatesDynCompletedEventHandler </brief>
end;

VipInterface vcom_ExRatesDynCompletedEventHandler( vcomIDispatch ) Implements com_ExRatesDynCompletedEventHandler (virtual);
// #docl Служебный объект, создавать запрещается !!! </brief>
public:
  constructor CreateQI// #docl Создает экземпляр интерфейса. </brief>
                      ( iComHandle       // #docl Код экземпляра.
                      : longint; flags   // #docl Свойства экземпляра.
                      : word );
end;

ObjInterface com_ExRatesDynCompletedEventArgs( comIDispatch );
// #docl Объектный интерфейс com_ExRatesDynCompletedEventArgs </brief>
end;

VipInterface vcom_ExRatesDynCompletedEventArgs( vcomIDispatch ) Implements com_ExRatesDynCompletedEventArgs (virtual);
// #docl Служебный объект, создавать запрещается !!! </brief>
public:
  constructor CreateQI// #docl Создает экземпляр интерфейса. </brief>
                      ( iComHandle       // #docl Код экземпляра.
                      : longint; flags   // #docl Свойства экземпляра.
                      : word );
end;

ObjInterface com_CurrenciesRefCompletedEventHandler( comIDispatch );
// #docl Объектный интерфейс com_CurrenciesRefCompletedEventHandler </brief>
end;

VipInterface vcom_CurrenciesRefCompletedEventHandler( vcomIDispatch ) Implements com_CurrenciesRefCompletedEventHandler (virtual);
// #docl Служебный объект, создавать запрещается !!! </brief>
public:
  constructor CreateQI// #docl Создает экземпляр интерфейса. </brief>
                      ( iComHandle       // #docl Код экземпляра.
                      : longint; flags   // #docl Свойства экземпляра.
                      : word );
end;

ObjInterface com_CurrenciesRefCompletedEventArgs( comIDispatch );
// #docl Объектный интерфейс com_CurrenciesRefCompletedEventArgs </brief>
end;

VipInterface vcom_CurrenciesRefCompletedEventArgs( vcomIDispatch ) Implements com_CurrenciesRefCompletedEventArgs (virtual);
// #docl Служебный объект, создавать запрещается !!! </brief>
public:
  constructor CreateQI// #docl Создает экземпляр интерфейса. </brief>
                      ( iComHandle       // #docl Код экземпляра.
                      : longint; flags   // #docl Свойства экземпляра.
                      : word );
end;

ObjInterface com_MetalsLastDateCompletedEventHandler( comIDispatch );
// #docl Объектный интерфейс com_MetalsLastDateCompletedEventHandler </brief>
end;

VipInterface vcom_MetalsLastDateCompletedEventHandler( vcomIDispatch ) Implements com_MetalsLastDateCompletedEventHandler (virtual);
// #docl Служебный объект, создавать запрещается !!! </brief>
public:
  constructor CreateQI// #docl Создает экземпляр интерфейса. </brief>
                      ( iComHandle       // #docl Код экземпляра.
                      : longint; flags   // #docl Свойства экземпляра.
                      : word );
end;

ObjInterface com_MetalsLastDateCompletedEventArgs( comIDispatch );
// #docl Объектный интерфейс com_MetalsLastDateCompletedEventArgs </brief>
end;

VipInterface vcom_MetalsLastDateCompletedEventArgs( vcomIDispatch ) Implements com_MetalsLastDateCompletedEventArgs (virtual);
// #docl Служебный объект, создавать запрещается !!! </brief>
public:
  constructor CreateQI// #docl Создает экземпляр интерфейса. </brief>
                      ( iComHandle       // #docl Код экземпляра.
                      : longint; flags   // #docl Свойства экземпляра.
                      : word );
end;

ObjInterface com_MetalsRefCompletedEventHandler( comIDispatch );
// #docl Объектный интерфейс com_MetalsRefCompletedEventHandler </brief>
end;

VipInterface vcom_MetalsRefCompletedEventHandler( vcomIDispatch ) Implements com_MetalsRefCompletedEventHandler (virtual);
// #docl Служебный объект, создавать запрещается !!! </brief>
public:
  constructor CreateQI// #docl Создает экземпляр интерфейса. </brief>
                      ( iComHandle       // #docl Код экземпляра.
                      : longint; flags   // #docl Свойства экземпляра.
                      : word );
end;

ObjInterface com_MetalsRefCompletedEventArgs( comIDispatch );
// #docl Объектный интерфейс com_MetalsRefCompletedEventArgs </brief>
end;

VipInterface vcom_MetalsRefCompletedEventArgs( vcomIDispatch ) Implements com_MetalsRefCompletedEventArgs (virtual);
// #docl Служебный объект, создавать запрещается !!! </brief>
public:
  constructor CreateQI// #docl Создает экземпляр интерфейса. </brief>
                      ( iComHandle       // #docl Код экземпляра.
                      : longint; flags   // #docl Свойства экземпляра.
                      : word );
end;

ObjInterface com_MetalsPricesCompletedEventHandler( comIDispatch );
// #docl Объектный интерфейс com_MetalsPricesCompletedEventHandler </brief>
end;

VipInterface vcom_MetalsPricesCompletedEventHandler( vcomIDispatch ) Implements com_MetalsPricesCompletedEventHandler (virtual);
// #docl Служебный объект, создавать запрещается !!! </brief>
public:
  constructor CreateQI// #docl Создает экземпляр интерфейса. </brief>
                      ( iComHandle       // #docl Код экземпляра.
                      : longint; flags   // #docl Свойства экземпляра.
                      : word );
end;

ObjInterface com_MetalsPricesCompletedEventArgs( comIDispatch );
// #docl Объектный интерфейс com_MetalsPricesCompletedEventArgs </brief>
end;

VipInterface vcom_MetalsPricesCompletedEventArgs( vcomIDispatch ) Implements com_MetalsPricesCompletedEventArgs (virtual);
// #docl Служебный объект, создавать запрещается !!! </brief>
public:
  constructor CreateQI// #docl Создает экземпляр интерфейса. </brief>
                      ( iComHandle       // #docl Код экземпляра.
                      : longint; flags   // #docl Свойства экземпляра.
                      : word );
end;

ObjInterface com_IngotsPricesCompletedEventHandler( comIDispatch );
// #docl Объектный интерфейс com_IngotsPricesCompletedEventHandler </brief>
end;

VipInterface vcom_IngotsPricesCompletedEventHandler( vcomIDispatch ) Implements com_IngotsPricesCompletedEventHandler (virtual);
// #docl Служебный объект, создавать запрещается !!! </brief>
public:
  constructor CreateQI// #docl Создает экземпляр интерфейса. </brief>
                      ( iComHandle       // #docl Код экземпляра.
                      : longint; flags   // #docl Свойства экземпляра.
                      : word );
end;

ObjInterface com_IngotsPricesCompletedEventArgs( comIDispatch );
// #docl Объектный интерфейс com_IngotsPricesCompletedEventArgs </brief>
end;

VipInterface vcom_IngotsPricesCompletedEventArgs( vcomIDispatch ) Implements com_IngotsPricesCompletedEventArgs (virtual);
// #docl Служебный объект, создавать запрещается !!! </brief>
public:
  constructor CreateQI// #docl Создает экземпляр интерфейса. </brief>
                      ( iComHandle       // #docl Код экземпляра.
                      : longint; flags   // #docl Свойства экземпляра.
                      : word );
end;

ObjInterface com_IngotsLastDateCompletedEventHandler( comIDispatch );
// #docl Объектный интерфейс com_IngotsLastDateCompletedEventHandler </brief>
end;

VipInterface vcom_IngotsLastDateCompletedEventHandler( vcomIDispatch ) Implements com_IngotsLastDateCompletedEventHandler (virtual);
// #docl Служебный объект, создавать запрещается !!! </brief>
public:
  constructor CreateQI// #docl Создает экземпляр интерфейса. </brief>
                      ( iComHandle       // #docl Код экземпляра.
                      : longint; flags   // #docl Свойства экземпляра.
                      : word );
end;

ObjInterface com_IngotsLastDateCompletedEventArgs( comIDispatch );
// #docl Объектный интерфейс com_IngotsLastDateCompletedEventArgs </brief>
end;

VipInterface vcom_IngotsLastDateCompletedEventArgs( vcomIDispatch ) Implements com_IngotsLastDateCompletedEventArgs (virtual);
// #docl Служебный объект, создавать запрещается !!! </brief>
public:
  constructor CreateQI// #docl Создает экземпляр интерфейса. </brief>
                      ( iComHandle       // #docl Код экземпляра.
                      : longint; flags   // #docl Свойства экземпляра.
                      : word );
end;

ObjInterface com_StockAddRatesCompletedEventHandler( comIDispatch );
// #docl Объектный интерфейс com_StockAddRatesCompletedEventHandler </brief>
end;

VipInterface vcom_StockAddRatesCompletedEventHandler( vcomIDispatch ) Implements com_StockAddRatesCompletedEventHandler (virtual);
// #docl Служебный объект, создавать запрещается !!! </brief>
public:
  constructor CreateQI// #docl Создает экземпляр интерфейса. </brief>
                      ( iComHandle       // #docl Код экземпляра.
                      : longint; flags   // #docl Свойства экземпляра.
                      : word );
end;

ObjInterface com_StockAddRatesCompletedEventArgs( comIDispatch );
// #docl Объектный интерфейс com_StockAddRatesCompletedEventArgs </brief>
end;

VipInterface vcom_StockAddRatesCompletedEventArgs( vcomIDispatch ) Implements com_StockAddRatesCompletedEventArgs (virtual);
// #docl Служебный объект, создавать запрещается !!! </brief>
public:
  constructor CreateQI// #docl Создает экземпляр интерфейса. </brief>
                      ( iComHandle       // #docl Код экземпляра.
                      : longint; flags   // #docl Свойства экземпляра.
                      : word );
end;

ObjInterface com_StockAddRatesLastDateCompletedEventHandler( comIDispatch );
// #docl Объектный интерфейс com_StockAddRatesLastDateCompletedEventHandler </brief>
end;

VipInterface vcom_StockAddRatesLastDateCompletedEventHandler( vcomIDispatch ) Implements com_StockAddRatesLastDateCompletedEventHandler (virtual);
// #docl Служебный объект, создавать запрещается !!! </brief>
public:
  constructor CreateQI// #docl Создает экземпляр интерфейса. </brief>
                      ( iComHandle       // #docl Код экземпляра.
                      : longint; flags   // #docl Свойства экземпляра.
                      : word );
end;

ObjInterface com_StockAddRatesLastDateCompletedEventArgs( comIDispatch );
// #docl Объектный интерфейс com_StockAddRatesLastDateCompletedEventArgs </brief>
end;

VipInterface vcom_StockAddRatesLastDateCompletedEventArgs( vcomIDispatch ) Implements com_StockAddRatesLastDateCompletedEventArgs (virtual);
// #docl Служебный объект, создавать запрещается !!! </brief>
public:
  constructor CreateQI// #docl Создает экземпляр интерфейса. </brief>
                      ( iComHandle       // #docl Код экземпляра.
                      : longint; flags   // #docl Свойства экземпляра.
                      : word );
end;

ObjInterface com_RefRateOnDateCompletedEventHandler( comIDispatch );
// #docl Объектный интерфейс com_RefRateOnDateCompletedEventHandler </brief>
end;

VipInterface vcom_RefRateOnDateCompletedEventHandler( vcomIDispatch ) Implements com_RefRateOnDateCompletedEventHandler (virtual);
// #docl Служебный объект, создавать запрещается !!! </brief>
public:
  constructor CreateQI// #docl Создает экземпляр интерфейса. </brief>
                      ( iComHandle       // #docl Код экземпляра.
                      : longint; flags   // #docl Свойства экземпляра.
                      : word );
end;

ObjInterface com_RefRateOnDateCompletedEventArgs( comIDispatch );
// #docl Объектный интерфейс com_RefRateOnDateCompletedEventArgs </brief>
end;

VipInterface vcom_RefRateOnDateCompletedEventArgs( vcomIDispatch ) Implements com_RefRateOnDateCompletedEventArgs (virtual);
// #docl Служебный объект, создавать запрещается !!! </brief>
public:
  constructor CreateQI// #docl Создает экземпляр интерфейса. </brief>
                      ( iComHandle       // #docl Код экземпляра.
                      : longint; flags   // #docl Свойства экземпляра.
                      : word );
end;

ObjInterface com_RefRateDynCompletedEventHandler( comIDispatch );
// #docl Объектный интерфейс com_RefRateDynCompletedEventHandler </brief>
end;

VipInterface vcom_RefRateDynCompletedEventHandler( vcomIDispatch ) Implements com_RefRateDynCompletedEventHandler (virtual);
// #docl Служебный объект, создавать запрещается !!! </brief>
public:
  constructor CreateQI// #docl Создает экземпляр интерфейса. </brief>
                      ( iComHandle       // #docl Код экземпляра.
                      : longint; flags   // #docl Свойства экземпляра.
                      : word );
end;

ObjInterface com_RefRateDynCompletedEventArgs( comIDispatch );
// #docl Объектный интерфейс com_RefRateDynCompletedEventArgs </brief>
end;

VipInterface vcom_RefRateDynCompletedEventArgs( vcomIDispatch ) Implements com_RefRateDynCompletedEventArgs (virtual);
// #docl Служебный объект, создавать запрещается !!! </brief>
public:
  constructor CreateQI// #docl Создает экземпляр интерфейса. </brief>
                      ( iComHandle       // #docl Код экземпляра.
                      : longint; flags   // #docl Свойства экземпляра.
                      : word );
end;

ObjInterface com_CXMLNode( comIDispatch );
// #docl Объектный интерфейс com_CXMLNode </brief>
end;

VipInterface vcom_CXMLNode( vcomIDispatch ) Implements com_CXMLNode (virtual);
// #docl Служебный объект, создавать запрещается !!! </brief>
public:
  constructor CreateQI// #docl Создает экземпляр интерфейса. </brief>
                      ( iComHandle       // #docl Код экземпляра.
                      : longint; flags   // #docl Свойства экземпляра.
                      : word );
end;

ObjInterface com_CDataSet( comIDispatch );
// #docl Объектный интерфейс com_CDataSet </brief>
end;

VipInterface vcom_CDataSet( vcomIDispatch ) Implements com_CDataSet (virtual);
// #docl Служебный объект, создавать запрещается !!! </brief>
public:
  constructor CreateQI// #docl Создает экземпляр интерфейса. </brief>
                      ( iComHandle       // #docl Код экземпляра.
                      : longint; flags   // #docl Свойства экземпляра.
                      : word );
end;

ObjInterface com_CExRates( comIDispatch );
// #docl Объектный интерфейс com_CExRates </brief>
end;

VipInterface vcom_CExRates( vcomIDispatch ) Implements com_CExRates (virtual);
// #docl Служебный объект, создавать запрещается !!! </brief>
public:
  constructor CreateQI// #docl Создает экземпляр интерфейса. </brief>
                      ( iComHandle       // #docl Код экземпляра.
                      : longint; flags   // #docl Свойства экземпляра.
                      : word );
end;


//--- coClasses---------------------------

VipInterface coCurrenciesRefDailyCompletedEventHandler // #docl  Комментарии отсутствуют. </brief> 
                                                       ( vcom_CurrenciesRefDailyCompletedEventHandler );
public:
  constructor Init // #docl Инициализация экземпляра интерфейса. </brief>
                   ;
  constructor Create // #docl Инициализация экземпляра интерфейса с флагами. </brief>
                     ( atlFlags // #docl Флаги интерфейса. </brief>
                               : word );
end;

VipInterface coCurrenciesRefDailyCompletedEventArgs // #docl  Комментарии отсутствуют. </brief> 
                                                    ( vcom_CurrenciesRefDailyCompletedEventArgs );
public:
  constructor Init // #docl Инициализация экземпляра интерфейса. </brief>
                   ;
  constructor Create // #docl Инициализация экземпляра интерфейса с флагами. </brief>
                     ( atlFlags // #docl Флаги интерфейса. </brief>
                               : word );
end;

VipInterface coCurrenciesRefMonthlyCompletedEventHandler // #docl  Комментарии отсутствуют. </brief> 
                                                         ( vcom_CurrenciesRefMonthlyCompletedEventHandler );
public:
  constructor Init // #docl Инициализация экземпляра интерфейса. </brief>
                   ;
  constructor Create // #docl Инициализация экземпляра интерфейса с флагами. </brief>
                     ( atlFlags // #docl Флаги интерфейса. </brief>
                               : word );
end;

VipInterface coCurrenciesRefMonthlyCompletedEventArgs // #docl  Комментарии отсутствуют. </brief> 
                                                      ( vcom_CurrenciesRefMonthlyCompletedEventArgs );
public:
  constructor Init // #docl Инициализация экземпляра интерфейса. </brief>
                   ;
  constructor Create // #docl Инициализация экземпляра интерфейса с флагами. </brief>
                     ( atlFlags // #docl Флаги интерфейса. </brief>
                               : word );
end;

VipInterface coStartDateCompletedEventHandler // #docl  Комментарии отсутствуют. </brief> 
                                              ( vcom_StartDateCompletedEventHandler );
public:
  constructor Init // #docl Инициализация экземпляра интерфейса. </brief>
                   ;
  constructor Create // #docl Инициализация экземпляра интерфейса с флагами. </brief>
                     ( atlFlags // #docl Флаги интерфейса. </brief>
                               : word );
end;

VipInterface coStartDateCompletedEventArgs // #docl  Комментарии отсутствуют. </brief> 
                                           ( vcom_StartDateCompletedEventArgs );
public:
  constructor Init // #docl Инициализация экземпляра интерфейса. </brief>
                   ;
  constructor Create // #docl Инициализация экземпляра интерфейса с флагами. </brief>
                     ( atlFlags // #docl Флаги интерфейса. </brief>
                               : word );
end;

VipInterface coLastDailyExRatesDateCompletedEventHandler // #docl  Комментарии отсутствуют. </brief> 
                                                         ( vcom_LastDailyExRatesDateCompletedEventHandler );
public:
  constructor Init // #docl Инициализация экземпляра интерфейса. </brief>
                   ;
  constructor Create // #docl Инициализация экземпляра интерфейса с флагами. </brief>
                     ( atlFlags // #docl Флаги интерфейса. </brief>
                               : word );
end;

VipInterface coLastDailyExRatesDateCompletedEventArgs // #docl  Комментарии отсутствуют. </brief> 
                                                      ( vcom_LastDailyExRatesDateCompletedEventArgs );
public:
  constructor Init // #docl Инициализация экземпляра интерфейса. </brief>
                   ;
  constructor Create // #docl Инициализация экземпляра интерфейса с флагами. </brief>
                     ( atlFlags // #docl Флаги интерфейса. </brief>
                               : word );
end;

VipInterface coLastMonthlyExRatesDateCompletedEventHandler // #docl  Комментарии отсутствуют. </brief> 
                                                           ( vcom_LastMonthlyExRatesDateCompletedEventHandler );
public:
  constructor Init // #docl Инициализация экземпляра интерфейса. </brief>
                   ;
  constructor Create // #docl Инициализация экземпляра интерфейса с флагами. </brief>
                     ( atlFlags // #docl Флаги интерфейса. </brief>
                               : word );
end;

VipInterface coLastMonthlyExRatesDateCompletedEventArgs // #docl  Комментарии отсутствуют. </brief> 
                                                        ( vcom_LastMonthlyExRatesDateCompletedEventArgs );
public:
  constructor Init // #docl Инициализация экземпляра интерфейса. </brief>
                   ;
  constructor Create // #docl Инициализация экземпляра интерфейса с флагами. </brief>
                     ( atlFlags // #docl Флаги интерфейса. </brief>
                               : word );
end;

VipInterface coExRatesDailyCompletedEventHandler // #docl  Комментарии отсутствуют. </brief> 
                                                 ( vcom_ExRatesDailyCompletedEventHandler );
public:
  constructor Init // #docl Инициализация экземпляра интерфейса. </brief>
                   ;
  constructor Create // #docl Инициализация экземпляра интерфейса с флагами. </brief>
                     ( atlFlags // #docl Флаги интерфейса. </brief>
                               : word );
end;

VipInterface coExRatesDailyCompletedEventArgs // #docl  Комментарии отсутствуют. </brief> 
                                              ( vcom_ExRatesDailyCompletedEventArgs );
public:
  constructor Init // #docl Инициализация экземпляра интерфейса. </brief>
                   ;
  constructor Create // #docl Инициализация экземпляра интерфейса с флагами. </brief>
                     ( atlFlags // #docl Флаги интерфейса. </brief>
                               : word );
end;

VipInterface coExRatesMonthlyCompletedEventHandler // #docl  Комментарии отсутствуют. </brief> 
                                                   ( vcom_ExRatesMonthlyCompletedEventHandler );
public:
  constructor Init // #docl Инициализация экземпляра интерфейса. </brief>
                   ;
  constructor Create // #docl Инициализация экземпляра интерфейса с флагами. </brief>
                     ( atlFlags // #docl Флаги интерфейса. </brief>
                               : word );
end;

VipInterface coExRatesMonthlyCompletedEventArgs // #docl  Комментарии отсутствуют. </brief> 
                                                ( vcom_ExRatesMonthlyCompletedEventArgs );
public:
  constructor Init // #docl Инициализация экземпляра интерфейса. </brief>
                   ;
  constructor Create // #docl Инициализация экземпляра интерфейса с флагами. </brief>
                     ( atlFlags // #docl Флаги интерфейса. </brief>
                               : word );
end;

VipInterface coExRatesDynCompletedEventHandler // #docl  Комментарии отсутствуют. </brief> 
                                               ( vcom_ExRatesDynCompletedEventHandler );
public:
  constructor Init // #docl Инициализация экземпляра интерфейса. </brief>
                   ;
  constructor Create // #docl Инициализация экземпляра интерфейса с флагами. </brief>
                     ( atlFlags // #docl Флаги интерфейса. </brief>
                               : word );
end;

VipInterface coExRatesDynCompletedEventArgs // #docl  Комментарии отсутствуют. </brief> 
                                            ( vcom_ExRatesDynCompletedEventArgs );
public:
  constructor Init // #docl Инициализация экземпляра интерфейса. </brief>
                   ;
  constructor Create // #docl Инициализация экземпляра интерфейса с флагами. </brief>
                     ( atlFlags // #docl Флаги интерфейса. </brief>
                               : word );
end;

VipInterface coCurrenciesRefCompletedEventHandler // #docl  Комментарии отсутствуют. </brief> 
                                                  ( vcom_CurrenciesRefCompletedEventHandler );
public:
  constructor Init // #docl Инициализация экземпляра интерфейса. </brief>
                   ;
  constructor Create // #docl Инициализация экземпляра интерфейса с флагами. </brief>
                     ( atlFlags // #docl Флаги интерфейса. </brief>
                               : word );
end;

VipInterface coCurrenciesRefCompletedEventArgs // #docl  Комментарии отсутствуют. </brief> 
                                               ( vcom_CurrenciesRefCompletedEventArgs );
public:
  constructor Init // #docl Инициализация экземпляра интерфейса. </brief>
                   ;
  constructor Create // #docl Инициализация экземпляра интерфейса с флагами. </brief>
                     ( atlFlags // #docl Флаги интерфейса. </brief>
                               : word );
end;

VipInterface coMetalsLastDateCompletedEventHandler // #docl  Комментарии отсутствуют. </brief> 
                                                   ( vcom_MetalsLastDateCompletedEventHandler );
public:
  constructor Init // #docl Инициализация экземпляра интерфейса. </brief>
                   ;
  constructor Create // #docl Инициализация экземпляра интерфейса с флагами. </brief>
                     ( atlFlags // #docl Флаги интерфейса. </brief>
                               : word );
end;

VipInterface coMetalsLastDateCompletedEventArgs // #docl  Комментарии отсутствуют. </brief> 
                                                ( vcom_MetalsLastDateCompletedEventArgs );
public:
  constructor Init // #docl Инициализация экземпляра интерфейса. </brief>
                   ;
  constructor Create // #docl Инициализация экземпляра интерфейса с флагами. </brief>
                     ( atlFlags // #docl Флаги интерфейса. </brief>
                               : word );
end;

VipInterface coMetalsRefCompletedEventHandler // #docl  Комментарии отсутствуют. </brief> 
                                              ( vcom_MetalsRefCompletedEventHandler );
public:
  constructor Init // #docl Инициализация экземпляра интерфейса. </brief>
                   ;
  constructor Create // #docl Инициализация экземпляра интерфейса с флагами. </brief>
                     ( atlFlags // #docl Флаги интерфейса. </brief>
                               : word );
end;

VipInterface coMetalsRefCompletedEventArgs // #docl  Комментарии отсутствуют. </brief> 
                                           ( vcom_MetalsRefCompletedEventArgs );
public:
  constructor Init // #docl Инициализация экземпляра интерфейса. </brief>
                   ;
  constructor Create // #docl Инициализация экземпляра интерфейса с флагами. </brief>
                     ( atlFlags // #docl Флаги интерфейса. </brief>
                               : word );
end;

VipInterface coMetalsPricesCompletedEventHandler // #docl  Комментарии отсутствуют. </brief> 
                                                 ( vcom_MetalsPricesCompletedEventHandler );
public:
  constructor Init // #docl Инициализация экземпляра интерфейса. </brief>
                   ;
  constructor Create // #docl Инициализация экземпляра интерфейса с флагами. </brief>
                     ( atlFlags // #docl Флаги интерфейса. </brief>
                               : word );
end;

VipInterface coMetalsPricesCompletedEventArgs // #docl  Комментарии отсутствуют. </brief> 
                                              ( vcom_MetalsPricesCompletedEventArgs );
public:
  constructor Init // #docl Инициализация экземпляра интерфейса. </brief>
                   ;
  constructor Create // #docl Инициализация экземпляра интерфейса с флагами. </brief>
                     ( atlFlags // #docl Флаги интерфейса. </brief>
                               : word );
end;

VipInterface coIngotsPricesCompletedEventHandler // #docl  Комментарии отсутствуют. </brief> 
                                                 ( vcom_IngotsPricesCompletedEventHandler );
public:
  constructor Init // #docl Инициализация экземпляра интерфейса. </brief>
                   ;
  constructor Create // #docl Инициализация экземпляра интерфейса с флагами. </brief>
                     ( atlFlags // #docl Флаги интерфейса. </brief>
                               : word );
end;

VipInterface coIngotsPricesCompletedEventArgs // #docl  Комментарии отсутствуют. </brief> 
                                              ( vcom_IngotsPricesCompletedEventArgs );
public:
  constructor Init // #docl Инициализация экземпляра интерфейса. </brief>
                   ;
  constructor Create // #docl Инициализация экземпляра интерфейса с флагами. </brief>
                     ( atlFlags // #docl Флаги интерфейса. </brief>
                               : word );
end;

VipInterface coIngotsLastDateCompletedEventHandler // #docl  Комментарии отсутствуют. </brief> 
                                                   ( vcom_IngotsLastDateCompletedEventHandler );
public:
  constructor Init // #docl Инициализация экземпляра интерфейса. </brief>
                   ;
  constructor Create // #docl Инициализация экземпляра интерфейса с флагами. </brief>
                     ( atlFlags // #docl Флаги интерфейса. </brief>
                               : word );
end;

VipInterface coIngotsLastDateCompletedEventArgs // #docl  Комментарии отсутствуют. </brief> 
                                                ( vcom_IngotsLastDateCompletedEventArgs );
public:
  constructor Init // #docl Инициализация экземпляра интерфейса. </brief>
                   ;
  constructor Create // #docl Инициализация экземпляра интерфейса с флагами. </brief>
                     ( atlFlags // #docl Флаги интерфейса. </brief>
                               : word );
end;

VipInterface coStockAddRatesCompletedEventHandler // #docl  Комментарии отсутствуют. </brief> 
                                                  ( vcom_StockAddRatesCompletedEventHandler );
public:
  constructor Init // #docl Инициализация экземпляра интерфейса. </brief>
                   ;
  constructor Create // #docl Инициализация экземпляра интерфейса с флагами. </brief>
                     ( atlFlags // #docl Флаги интерфейса. </brief>
                               : word );
end;

VipInterface coStockAddRatesCompletedEventArgs // #docl  Комментарии отсутствуют. </brief> 
                                               ( vcom_StockAddRatesCompletedEventArgs );
public:
  constructor Init // #docl Инициализация экземпляра интерфейса. </brief>
                   ;
  constructor Create // #docl Инициализация экземпляра интерфейса с флагами. </brief>
                     ( atlFlags // #docl Флаги интерфейса. </brief>
                               : word );
end;

VipInterface coStockAddRatesLastDateCompletedEventHandler // #docl  Комментарии отсутствуют. </brief> 
                                                          ( vcom_StockAddRatesLastDateCompletedEventHandler );
public:
  constructor Init // #docl Инициализация экземпляра интерфейса. </brief>
                   ;
  constructor Create // #docl Инициализация экземпляра интерфейса с флагами. </brief>
                     ( atlFlags // #docl Флаги интерфейса. </brief>
                               : word );
end;

VipInterface coStockAddRatesLastDateCompletedEventArgs // #docl  Комментарии отсутствуют. </brief> 
                                                       ( vcom_StockAddRatesLastDateCompletedEventArgs );
public:
  constructor Init // #docl Инициализация экземпляра интерфейса. </brief>
                   ;
  constructor Create // #docl Инициализация экземпляра интерфейса с флагами. </brief>
                     ( atlFlags // #docl Флаги интерфейса. </brief>
                               : word );
end;

VipInterface coRefRateOnDateCompletedEventHandler // #docl  Комментарии отсутствуют. </brief> 
                                                  ( vcom_RefRateOnDateCompletedEventHandler );
public:
  constructor Init // #docl Инициализация экземпляра интерфейса. </brief>
                   ;
  constructor Create // #docl Инициализация экземпляра интерфейса с флагами. </brief>
                     ( atlFlags // #docl Флаги интерфейса. </brief>
                               : word );
end;

VipInterface coRefRateOnDateCompletedEventArgs // #docl  Комментарии отсутствуют. </brief> 
                                               ( vcom_RefRateOnDateCompletedEventArgs );
public:
  constructor Init // #docl Инициализация экземпляра интерфейса. </brief>
                   ;
  constructor Create // #docl Инициализация экземпляра интерфейса с флагами. </brief>
                     ( atlFlags // #docl Флаги интерфейса. </brief>
                               : word );
end;

VipInterface coRefRateDynCompletedEventHandler // #docl  Комментарии отсутствуют. </brief> 
                                               ( vcom_RefRateDynCompletedEventHandler );
public:
  constructor Init // #docl Инициализация экземпляра интерфейса. </brief>
                   ;
  constructor Create // #docl Инициализация экземпляра интерфейса с флагами. </brief>
                     ( atlFlags // #docl Флаги интерфейса. </brief>
                               : word );
end;

VipInterface coRefRateDynCompletedEventArgs // #docl  Комментарии отсутствуют. </brief> 
                                            ( vcom_RefRateDynCompletedEventArgs );
public:
  constructor Init // #docl Инициализация экземпляра интерфейса. </brief>
                   ;
  constructor Create // #docl Инициализация экземпляра интерфейса с флагами. </brief>
                     ( atlFlags // #docl Флаги интерфейса. </brief>
                               : word );
end;

VipInterface coCXMLNode // #docl  Комментарии отсутствуют. </brief> 
                        ( vcom_CXMLNode );
public:
  constructor Init // #docl Инициализация экземпляра интерфейса. </brief>
                   ;
  constructor Create // #docl Инициализация экземпляра интерфейса с флагами. </brief>
                     ( atlFlags // #docl Флаги интерфейса. </brief>
                               : word );
end;

VipInterface coCDataSet // #docl  Комментарии отсутствуют. </brief> 
                        ( vcom_CDataSet );
public:
  constructor Init // #docl Инициализация экземпляра интерфейса. </brief>
                   ;
  constructor Create // #docl Инициализация экземпляра интерфейса с флагами. </brief>
                     ( atlFlags // #docl Флаги интерфейса. </brief>
                               : word );
end;

VipInterface coCExRates // #docl  Комментарии отсутствуют. </brief> 
                        ( vcom_CExRates );
public:
  constructor Init // #docl Инициализация экземпляра интерфейса. </brief>
                   ;
  constructor Create // #docl Инициализация экземпляра интерфейса с флагами. </brief>
                     ( atlFlags // #docl Флаги интерфейса. </brief>
                               : word );
end;


#endif
