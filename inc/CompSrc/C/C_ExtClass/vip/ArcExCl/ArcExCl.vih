/*
 ╔═══════════════════════════════════════════════════════════════════════════╗
 ║                     (c) 1994,2003 корпорация ГАЛАКТИКА                    ║
 ║ Проект        : ГАЛАКТИКА                                                 ║
 ║ Система       : Бухгалтерский контур                                      ║
 ║ Версия        : 5.8                                                       ║
 ║ Назначение    : Функции сохранения и восстановления внешней классификации ║
 ║ Ответственный : Какареко Сергей Александрович                             ║
 ╚═══════════════════════════════════════════════════════════════════════════╝
*/
#include NeedRights.vih

#ifdef ComponentVersion
#component "C_ExtClass"
#end

#doc
  Функции сохранения и восстановления внешней классификации.
#end
ObjInterface oArcExClass;

#doc
Удаление архива на дату
#end
Function DeleteArcExClassifier(dDate:Date; coTable:Word; cRec:Comp):Boolean;

#doc
Удаление классификации
#end
Function DeleteExClassifier(coTable:Word; cRec:Comp):Boolean;

#doc
Сохранение внешней классификации в архиве<br>
bParam = 0 Если архив уже есть - архив не замещается с выдачей сообщения
bParam = 1 Если архив уже есть - спрашивает заменить архив или нет
bParam = 2 Если архив уже есть - архив замещается без всяких сообщений
#end
Function SaveExClassifier(dDate:Date; coTable:Word; cRec:Comp; Var bParam:Byte):Boolean;

#doc
Восстановление внешней классификации из архива<br>
bParam = 0 Если класс. уже есть - класс. не замещается с выдачей сообщения
bParam = 1 Если класс. уже есть - спрашивает заменить класс. или нет
bParam = 2 Если класс. уже есть - класс. замещается без всяких сообщений
#end
Function RestoreExClassifier(dDate:Date; coTable:Word; cRec:Comp; Var bParam:Byte):Boolean;

#doc
Проверка существования архива на дату
#end
Function IsArcExClassifier(dDate:Date; coTable:Word; cRec:Comp):Boolean;

#doc
Проверка существования классификации
#end
Function IsExClassifier(coTable:Word; cRec:Comp):Boolean;

end;

VipInterface ArcExClass implements oArcExClass, oCheckRights
#ifdef ATL51
  licensed (FREE)
#end
;