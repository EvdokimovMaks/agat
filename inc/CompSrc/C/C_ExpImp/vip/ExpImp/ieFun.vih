//******************************************************************************
//                                                      (c) корпорация Галактика
// Галактика 8.10 - обмен бизнес-документами
// Объектный интерфейс функции  экспорта/импорта
//******************************************************************************

#ifndef __ObjIeFun__
#define __ObjIeFun__

#ifdef ComponentVersion
#component "C_EXPIMP"
#endif

#doc
  Объектный интерфейс функции экспорта импорта <br>
#end

ObjInterface ObjIeFun;

#doc
Спозиционироваться на текущую настройку <br>
#end
Procedure SetCurIEHead(cIEHead: comp);

#doc
Получить колличество ошибок импорта <br>
#end
function  Get_lImportErrorsCounter : Longint;
function  Set_lImportErrorsCounter  ( kol : Longint ) : Longint;
function  Get_sCurFieldName : string;
#doc
Установиить текущее поле для вывода ошибки <br>
#end
Procedure Set_sCurFieldName  ( name : string );

#doc
StartLogOperation - начало журнализации операции экспорта-импорта. <br>
#end
Procedure StartLogOperation(sSourceName : String; cIEHead: comp);

#doc
FinishLogOperation - соответственно, окончание той самой операции  <br>
#end
Procedure FinishLogOperation(sSourceName : String; wStatus : Word; cIEHead: comp);

#doc
LogDocument - Создать запись в ExImLogR для импортированной-экспортированной записи документа. <br>
#end
Procedure LogDocument(cDocument : Comp; wStatus : Word; Value : String; cIEHead: comp);

#doc
Записать ошибку  <br>
#end
procedure LogError(cLogR : comp; wStatus : word; sValue : string);

#doc
Записать ошибку с подродной информацией <br>
#end
procedure LogErrorDetail(cLogR : comp; wStatus : word; sValue : string; sDetailValue : string);

#doc
UpdateImportLog - перепривязать логи привязанные к временной таблице, на импортированный документ <br>
#end
Procedure UpdateImportLog(ctDocument : Comp; cDocument : Comp; wStatus : Word; cLogT : comp = 0);

#doc
Удалить из все ExImLogR импортированные но не вставленные в бд записи <br>
#end
Procedure DeleteAllTempLogR;
Procedure UpdateLogError (ctDocument : Comp; cLogT : comp);


#doc
ConvertToDate - преобразовать строку в дату в соответствии с настройкой  <br>
#end
Function ConvertToDate( sFieldValue : String ) : date;

#doc
ConvertFromDate - преобразовать дату в строку в соответствии с настройкой <br>
#end
Function ConvertFromDate( dFieldValue : date ) : String;

#doc
  fun.DuplicatesImportType -
#end
Function DuplicatesImportType : Byte;

#doc
  ThisCodePresentInTune - присутствует ли с кодом поле в настройке<br>
#end
Function ThisCodePresentInTune( wCode : Word ) : Boolean;


#doc
  NotRunDialogUpdate - определяет для каких интерфейсов не надо запускать диалог при обновлении документа<br>
#end
Function NotRunDialogUpdate( wCode : Word ) : Boolean;

end;

VipInterface IeFun implements ObjIeFun licensed(free);

#endif
