//------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Галактика 9.10 - модуль "Электронная отчетность"
// Базовый интерфейс редактирования : "Электронный отчет"
//------------------------------------------------------------------------------

#ifndef __BaseTxRep__vih__
#define __BaseTxRep__vih__

#ifdef ComponentVersion
#component "F_TaxReport"
#end //ComponentVersion

//------------------------------------------------------------------------------
#include DocEditor.vih
#include ErrorEditor.vih
#include ErrorChecking.vih
#include TaxScriptHolder.vih
//------------------------------------------------------------------------------

//==============================================================================
Vipinterface BaseTxRep(TaxScriptHolder) Implements ODocEditor, OErrorEditor, OErrorChecking
#Licensed_Free;
Public:
  constructor Init;
  destructor  Done;

  procedure ReReadNav;
  procedure DefaultMap;
  procedure WriteMapShareDef;
  function  CurTxFieldName : String;
  function  CurTxFieldVal  : String;
  procedure HotKeys(cRec : Comp);
  procedure PositionChanged(cRec : Comp);

  procedure ExpXml;
  procedure RunFr4;
  function  FieldByWay(fnm : String) : longint;
  dataStream BaseTxRep_DS;
  
  function  SetAdrInRasch(Adr: string) : boolean;
  procedure RereadTree;

  procedure ODocEditor.CheckFieldsState;

  static function getIter(iter : longint) : string;
End;
//******************************************************************************


//==============================================================================
//#region SERVICE DECLARE
//------------------------------------------------------------------------------
#include XMapShare.Tbl

#Declare StdToolbarEvnt
  cmValue10: Refresh;
  cmValue11: SaveDoc;
  cmValue12: ReCalc;
  cmValue13: Check;
  cmValue14: ImpXml;
  cmValue15: ExpXML;
  cmValue16: RunXmlStruct;
  cmValue17: RunFr4;
  cmValue18: Pdf417;
  cmValue19: ChangeTaxAlg;
  cmValue20: {FView.ShowWindow(cgPatViewMode_TreeNumeric) /*FView.ShowWindow('&"' + String(CurTxFieldName) + '"');*/}
  cmEdit:    RunXmlStruct;
  cmPick:    myPick();
  /*
  cmSortMC        : // Обновить (Alt+R)
  {
    Refresh;
  }
  cmSaveDoc       : // Сохранить(Ctrl+F2)
  {
    SaveDoc;
  }
  cmRecalcAllSums : // Рассчитать (Alt+G)
  {
    ReCalc;
  }
  cmDocBas        : // Структура документа (ALT+D)
  {
    RunXmlStruct;
  }
  cmExp           : // Экспорт в XML (Alt+O)
  {
    ExpXML;
  }
  cmPickAttr      : // Алгоритм расчета (Alt+A)
  {
    ChangeTaxAlg;
  }
  cmPrintDoc      : // Печатать отчет в FastReport (Ctrl+P)
  {
    RunFr4;
  }
  cmPlansNo       : // Печатать с двумерным штрихкодом (Alt+P)
  {
    Pdf417;
  }
  */
  cmBuhCalculator : // Бухгалтерский калькулятор )Shift+F3)
  {
    RunInterface('Buh_Calc', 0, 0, 0);
  }
#End

#declare addNavNode(Nrec, cRec, Npp, Name, Typ, Code, lVis=' ', xNode=0)
  ClearBuffer(#Nav);
  Nav.Nrec := #Nrec ;
  Nav.Npp  := #Npp  ;
  Nav.cRec := #cRec ;
  Nav.wType:= #Typ  ;
  Nav.Name := #Name ;
  Nav.Code := #Code ;
  Nav.lVis := #lVis ;
  Nav.xNode:= #xNode;
  Insert current Nav;
#end

#Declare ReadValues
function FieldByName(fnm : String) : longint; forward;

function ReadMyValue(fldName : String; Val : String) : String;
{
  ReadMyValue := String(XMLMAP.GetAttrValueByName(trim(Val)));
  var aFieldId : longint;  aFieldId := FieldByName(fldName);
  if (aFieldId <> -1)
  {
    var mPos : Comp   ;  mPos := XMLMAP.GetPositionByName(trim(Val));
    var prot : Variant;  prot := XMLMAP.GetMapField('Prot', mPos);
    ToggleFieldOption(aFieldId, ofProtected, boolean(prot));
  }
}
#End
//#endregion SERVICE DECLARE
//******************************************************************************

#End  //__BaseTxRep__vih__
