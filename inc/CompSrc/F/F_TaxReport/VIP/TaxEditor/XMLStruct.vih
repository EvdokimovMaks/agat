//------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Галактика 9.1 - модуль "Электронная отчетность"
// Функциональный интерфейс : "Структура документа"
//------------------------------------------------------------------------------

#ifndef __XmlStruct__vih__
#define __XmlStruct__vih__

#ifdef ComponentVersion
#Component "F_TaxReport"
#end

#doc
Xml Тест
#end

Private ObjInterface OXmlStruct;
  //============================================================================
  //#region ERROR
  //----------------------------------------------------------------------------
  #doc
     Получить описание последней ошибки выполнения
  #end
  Function GetStLastError : string;
  //----------------------------------------------------------------------------
  #doc
     Вывести сообщения о последней ошибки выполнения
  #end
  Function RunShowError : boolean;
  //#endregion ERROR
  //****************************************************************************

  //----------------------------------------------------------------------------
  #doc
     Установить признак: "Требует сохранения"
  #end
  Procedure SetNdSave;
  //----------------------------------------------------------------------------
  #doc
     Убрать признак: "Требует сохранения"
  #end
  Procedure ReSetNdSave;

  #doc
  Запустить окно редактирования
  #end
  procedure RunEditWindow(PosRec : Comp = 0);

  #doc
  Импорт структуры из XML
  #end
  procedure ImpXml(filename:string);
  #doc
  Импорт структуры из XSD
  #end
  procedure ImpXSD(filename:string);
  #doc
  Экспорт всей структуры в XML
  #end
  procedure ExpToXml(filename:string);
  #doc
  Экспорт структуры в XML по имени узла
  #end
  procedure ExpToXmlByName(NodeName,filename:string);


  procedure ImpStructXml(filename:string);
  procedure ExpToStructXml(filename:string);

  #doc
  Экспорт структуры в TXT формат для FR3
  #end
  procedure ExpToTxtFR3;

  #doc
  Экспорт структуры в TXT
  #end
  procedure ExpToTxt(filename:string);

  //>> работа с хранилищем
  #doc
  Очистить структуру XML
  #end
  procedure ClearMap;

  #doc
  Загрузить структуру из базы
  #end
  procedure GetTblMap(wEnt:Word; cTax : Comp);

  #doc
  Сохранить структуру В базу
  #end
  procedure SetTblMap(wEnt:Word; cTax : Comp);

  #doc
  Удалить структуру из базы
  #end
  procedure DelTblMap(wEnt:Word; cTax : Comp);

  #doc
  Скопировать структуру в базе
  #end
  procedure CopyTblMAp(wEnt:Word; cSource : Comp; cDest:Comp);

  #doc
  Было ли изменение структуры
  #end
  function NeedSave : boolean;
  //<<
  
  function CopyNode(NodeNrec: comp; NoData : boolean = false):comp;

  procedure DeleteNode(NodeNrec : comp);

  function FullTreePath(curNrec:comp):string;

  function GetPositionByName(NodeNAme:string; cNode : Comp = 0; isCreate:boolean=false) : Comp;

  function GetNodeCountByName(NodeNAme:string):longint;

  // Получить значение атрибута найдя его по имени
  function GetAttrValueByName(NodeName:string) : Variant;
  // Установить значение атрибута найдя его по имени
  procedure SetAttrValueByName(NodeName:string; Value: string ; eMode : Word = 0);
  
  //----------------------------------------------------------------------------
  #doc
     Получить значение атрибута, найдя его по имени  (тип Variant)
  #end
  function GetVariantAttrValueByName(NodeName : string) : Variant;
  //----------------------------------------------------------------------------
  #doc
     Установить значение атрибута, найдя его по имени (тип Variant)
  #end
  procedure SetVariantAttrValueByName(NodeName : string; Value : Variant; eMode : Word = 0);

  //----------------------------------------------------------------------------
  #doc
     Получить строковое значение атрибута, найдя его по имени
  #end
  function GetStringAttrValueByName(NodeName : string) : string;
  //----------------------------------------------------------------------------
  #doc
     Установить строковое значение атрибута, найдя его по имени
  #end
  procedure SetStringAttrValueByName(NodeName : string; Value : string; eMode : Word = 0);

  //----------------------------------------------------------------------------
  #doc
     Узнать является ли значение атрибута=Null, найдя его по имени
  #end
  function GetIsNullAttrValueByName(NodeName : string) : boolean;
  //----------------------------------------------------------------------------
  #doc
     Установить Null значение атрибута найдя его по имени
  #end
  procedure SetIsNullAttrValueByName(NodeName : string; eMode : Word = 0);


  procedure SetFormulaValueByName(NodeName:string; Value:string);

  function GetMapField(fName : String; MapRec : comp) : Variant;

  //Установить видимость элемента
  procedure SetAttrVisByName(NodeNAme:string; Value:boolean);

  //Вернуть видимость элемента (в зависимости от вышестоящих элементов)
  function GetAttrVisByNameInTree(NodeName:string) : boolean;

  //Проверяет, выгружаемо ли поле, найдя его по имени
  function GetAttrVisByName(NodeName:string) : boolean;

  //Проверяет, заполнена ли у поля формула, найдя его по имени
  function GetAttrFormulaByName(NodeName:string) : boolean;
  
  //Проверяет, заполнено ли поле из алгоритма, найдя его по имени
  function GetAttrEModeByName(NodeName:string) : boolean;
  
  //Проверяет, считывает вид ячейки (обязательность), найдя его по имени
  function GetAttrNeedByName(NodeName:string) : word;
  
  //Проверяет, считывает вид ячейки (обязательность), найдя его по имени
  function GetAttrUchRaschByName(NodeName:string) : word;

  // Получить, по имени вершины значение атрибута: "тип значения"
  function GetAttrValTypeByName(NodeName:string) : word;

  // Получить, по имени вершины значение атрибута: "формат значения"
  function GetAttrVFormatByName(NodeName:string) : string;

  // Получить, по имени вершины значение атрибута: "количество знаков после запятой"
  function GetAttrDecimalByName(NodeName:string) : word;

  //Установить значения параметров для расчета ПАТ формул
  //sanny procedure SetPATPrecision(PatServer : longint);

  function NodePos(_curNrec : comp):longint;

  function Count : longint;

  procedure CountFormulas(PatServer : longint; CountMode : word = 0); //cgPatCheckLevel_FullCount
  procedure AddFormulas(PatServer : longint);
  procedure GetCounted(PatServer : longint);


  procedure CreateShare;
  procedure LoadShare;
  procedure ClearShare;
  function CloneNode(fromStruct : ObjRef; NodeNrec : Comp; toNode : comp; NoData : boolean = false):comp;
  
  procedure SetCheckRW(Chk : word);

  //----------------------------------------------------------------------------
  #doc
     Построить список полных наименований полей документа
  #end
  function BuildFullNameFieldList(
    _MID : LongInt   // ID списка
  ) : boolean;
end;

Private ObjInterface OTbXmlStruct;
   property Nrec           : Comp read write;
   property cNode          : Comp read write;
   property Npp            : double read write;
   property NeedUse        : word read write;
   property ManyOccurs     : word read write;
   property Key            : string read write;
   property Name           : string read write;
   property Value          : string read write;
   property Formula        : string read write;
   property Comment        : string read write;
   property cXSD           : Comp read write;
   property wExp           : Word read write;
   property nType          : Word read write;
   property Prot           : Word read write;
   property eMode          : Word read write;
   property Need           : word read write;
   property UchRasch       : word read write;
   property wValType       : word read write;
   property wDecimal       : word read write;
   property sVFormat       : string read write;

   index Struct01 = NRec (Unique);
   index Struct02 = cNode, Npp;
   index Struct03 = cNode, Name;
   index Struct04 = cNode, Name, Npp;
end;

//==============================================================================
VipInterface XmlStruct implements OXmlStruct, OTbXmlStruct, IModify
Licensed(Free);
Public:
  Constructor Init;
  Destructor  Done;
End;
//******************************************************************************

var Maschtab: byte;
var kolFrac : byte;

#endif // __XmlStruct__vih__
