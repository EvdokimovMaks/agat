//------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Галактика 8.10 - модуль "Управление бюджетом"
// Визуальный интерфейс : "Куб данных"
//------------------------------------------------------------------------------

#ifndef __FpVCub_Vih__
#define __FpVCub_Vih__

//------------------------------------------------------------------------------
#ifdef  ComponentVersion
#component "F_FpBudget"
#endif//ComponentVersion

//------------------------------------------------------------------------------
#include FpTypes.Inc
#include xlReport.Vih
#include FpAgrSet.Vih
#include FpAxCub.Vih
#include FpL2Cel.Vih
//------------------------------------------------------------------------------
Type TColEditAttr = record  // Атрибуты редактирования колонки:
  IsCanEdit   : boolean;    // возможность редактирование
  wKodReg     : word;       // код регистра учета
end; // Type
Type TArrEditAttr = array[1..1] of TColEditAttr;  // Атрибуты редактирования колонок
//------------------------------------------------------------------------------


//==============================================================================
#doc
Визуальный интерфейс : "Куб данных"<br>
<b>Внимание!</b> Интерфейс предназначен только для внутреннего использования<br>
#end
Private ObjInterface IViewFpCube;

  //============================================================================
  //                                  ERROR
  //----------------------------------------------------------------------------
  //----------------------------------------------------------------------------
  #doc
     Функция возвращает описание последней ошибки
  #end
  Function GetStLastError : string;
  //****************************************************************************


  //============================================================================
  //                                  FIELDS
  //----------------------------------------------------------------------------
  #doc
     Получить идентификатор процесса
  #end
  Function GetProcessID : word;

  //----------------------------------------------------------------------------
  #doc
     Получить ссылку на объект работы с осями
  #end
  Function GetObjFpAxisCube : IObjFpAxisCube;

  //----------------------------------------------------------------------------
  #doc
     Установить значения настройки представления
  #end
  Function SetViewTune(_Value : comp) : boolean;

  //----------------------------------------------------------------------------
  #doc
     Установить режим редактирования колонок
  #end
  Function SetAllColCanEdit(
    _IsCanEditMode : boolean;
    _arrColCanEdit : TArrEditAttr;
    _pEditAgrSet   : IEditFpAgrSet
  ) : boolean;

  //----------------------------------------------------------------------------
  #doc
     Переустановить аналитику куба
  #end
  Function ReSetAnCub : boolean;
  //----------------------------------------------------------------------------
  #doc
     Задать аналитику оси X
  #end
  Function SetAnAxX(_CAn : TPtr) : boolean;
  //----------------------------------------------------------------------------
  #doc
     Задать аналитику оси Y
  #end
  Function SetAnAxY(_CAn : TPtr) : boolean;
  //****************************************************************************


  //============================================================================
  //                                 COMMON
  //----------------------------------------------------------------------------
  #doc
     Init куба
  #end
  Function CreateCube(
    _CAnData      : TPtr;
    _MeasureCount : LongInt
  ) : boolean;
  //----------------------------------------------------------------------------
  #doc
     Done куба
  #end
  Function DoneCube : boolean;

  //----------------------------------------------------------------------------
  #doc
     Добавить в куб Measure
  #end
  Function AddCubeMeasure(
    _Title  : string;
    _isShow : boolean
  ) : boolean;

  //----------------------------------------------------------------------------
  #doc
     Построить оси куба
  #end
  Function BuildAllAxis : boolean;
  //----------------------------------------------------------------------------
  #doc
     Перестроить оси куба
  #end
  Function ReBuildAllAxis(
    _isReSetDDLeaf : boolean       // переустанавливать ли DDLeaf
  ) : boolean;

  //----------------------------------------------------------------------------
  #doc
     Добавить в куб значение измерения
  #end
  Function AddSpDimCube(_wAn : word; _cAn : comp) : boolean;

  //----------------------------------------------------------------------------
  #doc
     Переустановить фильтр на данные куба
  #end
  Function ReSetFilter : boolean;

  //----------------------------------------------------------------------------
  #doc
     Очистить оси куба
  #end
  Function ClearAllAxis : boolean;
  //----------------------------------------------------------------------------
  #doc
     Очистить данные куба
  #end
  Function ClearAllValues : boolean;
  //----------------------------------------------------------------------------
  #doc
     Очистить все в кубе
  #end
  Function ClearCube : boolean;
  //----------------------------------------------------------------------------
  #doc
     Очистить данные ячейки куба
  #end
  Function ClearCellValue(_CAnID : TPtr; _M : LongInt) : boolean;

  //----------------------------------------------------------------------------
  #doc
     Перечитать значения ячеек в визуальном кубе
  #end
  Procedure ViewCube_ReReadAllCells;

  //----------------------------------------------------------------------------
  #doc
     Загрузить в куб "пустые" данные
  #end
  Function LoadEmptyLeafValues(
    _MeasureNpp : LongInt;
    _cPeriod    : comp;
    _cStBud     : comp;
    _CAnID      : TPtr;
    _IsDDLeaf   : boolean
  ) : boolean;
  //----------------------------------------------------------------------------
  #doc
     Загрузить в куб данные бюджета
  #end
  Function LoadValues(
      _MeasureNpp : LongInt;
      _cBudVar    : comp;
      _wKodReg    : word;
      _cPeriod    : comp;
      _cStBud     : comp;
      _cSloj      : comp;
      _cFilter    : comp;
      _cGrAnStBud : comp;
      _IsDDLeaf   : boolean;
      _cVal_StBud : comp;
      _cEdIzStBud : comp;
      _rcValInfo  : TFpValPrm;
  var _isHaveData : boolean
  ) : boolean;
  //----------------------------------------------------------------------------
  #doc
     Загрузить в куб данные финопераций
  #end
  Function LoadOborot(
      _MeasureNpp : LongInt;
      _cCOBud     : comp;
      _wKodReg    : word;
      _cPeriod    : comp;
      _cStBud     : comp;
      _cSloj      : comp;
      _cFilter    : comp;
      _cGrAnStBud : comp;
      _IsDDLeaf   : boolean;
      _cVal_StBud : comp;
      _cEdIzStBud : comp;
      _rcValInfo  : TFpValPrm;
  var _isHaveData : boolean;
      _wIgnoreMode : word
  ) : boolean;

  //----------------------------------------------------------------------------
  #doc
     Загрузить в куб данные бюджета (с использованием DSQL)
  #end
  Function DSQLLoadBudgetMeasure(
    _MeasureNpp : LongInt;
    _cBudVar    : comp;
    _wKodReg    : word;
    _PerMID     : TPtr;
    _cFilter    : comp;
    _rcValInfo  : TFpValPrm
  ) : boolean;
  //****************************************************************************


  //============================================================================
  //                                  AGREGATE
  //----------------------------------------------------------------------------
  //----------------------------------------------------------------------------
  #doc
     Раскрытие показателя-агрегата по данным бюджета
  #end
  Function OpenCurCellByBudget : boolean;
  //----------------------------------------------------------------------------
  #doc
     Раскрытие показателя-агрегата по данным бюджета
  #end
  Function OpenCurCellByOborot : boolean;
  //----------------------------------------------------------------------------
  #doc
     Загрузка показателей из книги финансовых операций
  #end
  Function LoadCurCellByOborot : boolean;
  //****************************************************************************


  //============================================================================
  //                                  HIER
  //----------------------------------------------------------------------------
  //============================================================================
  // Вертикальная ось
  //----------------------------------------------------------------------------
  #doc
     Раскрыть текущий узел вертикальной оси
  #end
  Procedure Hier_OpenNodeYLevel;
  //----------------------------------------------------------------------------
  #doc
     Закрыть текущий узел вертикальной оси
  #end
  Procedure Hier_CloseNodeYLevel;

  //----------------------------------------------------------------------------
  #doc
     Раскрыть полностью текущий узел вертикальной оси
  #end
  Procedure Hier_OpenNodeYUDown;
  //----------------------------------------------------------------------------
  #doc
     Закрыть полностью текущий узел вертикальной оси
  #end
  Procedure Hier_CloseNodeYUDown;

  //----------------------------------------------------------------------------
  #doc
     Раскрыть все узлы вертикальной оси
  #end
  Procedure Hier_OpenAxisY;
  //----------------------------------------------------------------------------
  #doc
     Закрыть все узлы вертикальной оси
  #end
  Procedure Hier_CloseAxisY;
  // Вертикальная ось
  //****************************************************************************

  //============================================================================
  // Горизонтальная ось
  //----------------------------------------------------------------------------
  #doc
     Раскрыть текущий узел горизонтальной оси
  #end
  Procedure Hier_OpenNodeXLevel;
  //----------------------------------------------------------------------------
  #doc
     Закрыть текущий узел горизонтальной оси
  #end
  Procedure Hier_CloseNodeXLevel;

  //----------------------------------------------------------------------------
  #doc
     Раскрыть полностью текущий узел горизонтальной оси
  #end
  Procedure Hier_OpenNodeXUDown;
  //----------------------------------------------------------------------------
  #doc
     Закрыть полностью текущий узел горизонтальной оси
  #end
  Procedure Hier_CloseNodeXUDown;

  //----------------------------------------------------------------------------
  #doc
     Раскрыть все узлы горизонтальной оси
  #end
  Procedure Hier_OpenAxisX;
  //----------------------------------------------------------------------------
  #doc
     Закрыть все узлы горизонтальной оси
  #end
  Procedure Hier_CloseAxisX;
  // Горизонтальная ось
  //****************************************************************************

  //============================================================================
  // Весь КУБ
  //----------------------------------------------------------------------------
  #doc
     Раскрыть все узлы куба
  #end
  Procedure Hier_OpenAllAxis;
  //----------------------------------------------------------------------------
  #doc
     Закрыть все узлы куба
  #end
  Procedure Hier_CloseAllAxis;
  // Весь КУБ
  //****************************************************************************


  //============================================================================
  //                                 RUNVIEW
  //----------------------------------------------------------------------------
  //----------------------------------------------------------------------------
  #doc
     Запуск интерфейса печати
  #end
  Function RunPrint(
      _isAllTree : boolean
  ) : boolean;

  //----------------------------------------------------------------------------
  #doc
     Запуск интерфейса осей
  #end
  Function RunAxisWindow : boolean;

  //----------------------------------------------------------------------------
  #doc
     Запуск интерфейса фильтров
  #end
  Function RunFilterEdit(
      _wAn    : word;
  Var _KolFlt : LongInt
  ) : boolean;

  //----------------------------------------------------------------------------
  #doc
     Заполнить список агрегатов в "Распределение агрегатов аналитик"
  #end
  Function FillAllAgregates(
    _pEditFpRaspAgr: iEditFpRaspAgr
  ): boolean;

  //----------------------------------------------------------------------------
  #doc
     Проверить возможно ли распределение по переданному агрегату
  #end
  Function CheckCurrentSampleAgr(
    _AgrKodGrKau   : word;
    _cAgrMean      : comp;
    _pEditFpRaspAgr: iEditFpRaspAgr
  ): boolean;
  //****************************************************************************


  //============================================================================
  //                                 EVENT
  //----------------------------------------------------------------------------
  //----------------------------------------------------------------------------
  #doc
     Событие формирования локального меню
  #end
  Event Function Event_GetIHotKey : string;

  //----------------------------------------------------------------------------
  #doc
     Событие для закрытия интерфейса
  #end
  Event Procedure Event_CloseInterface;

  //----------------------------------------------------------------------------
  #doc
     Событие для подгрузке данных при "раскрытии" статьи по аналитике
  #end
  Event Procedure Event_LoadNextDDLevelCurStBud(
      _cPeriod    : comp;
      _cStBud     : comp;
  var _isHaveData : boolean;
  var _isAllOk    : boolean
  );

  //----------------------------------------------------------------------------
  #doc
     Событие для раскрытия всех уровней иерархии
  #end
  Event Procedure Event_LoadNextDDLevelAllStBud;

  //----------------------------------------------------------------------------
  #doc
     Событие для запуска бюджетного процесса
  #end
  Event Procedure Event_RunFpBPRunner(
    _wMessageMode : word           // режим выдачи сообщений
  );

  //----------------------------------------------------------------------------
  #doc
     Событие для получения DDLeaf режима для заданной статьи
  #end
  Event Procedure Event_GetStBudDDLeafMode(
      _cStBud     : comp;
  var _isDDLeaf   : boolean
  );

  //----------------------------------------------------------------------------
  #doc
     Событие для запуска окна настройки иерархии
  #end
  Event Procedure Event_BuildHier;

  //----------------------------------------------------------------------------
  #doc
     Событие для запуска окна настройки распределения агрегатов
  #end
  Event Procedure Event_RunEditRaspRule;

  //----------------------------------------------------------------------------
  #doc
     Событие для выбора статей анализа
  #end
  Event Procedure Event_PickStBud;

  //----------------------------------------------------------------------------
  #doc
     Событие для запуска редактирования списка копий бюджетов
  #end
  Event Procedure Event_EditCopiesList;

  //----------------------------------------------------------------------------
  #doc
     Событие для перегрузки данных заново
  #end
  Event Procedure Event_ReReadAllData;

  //----------------------------------------------------------------------------
  #doc
     Событие для проверки режима загрузки всех статей по слоям типовой формы
  #end
  Event Procedure Event_GetIsAllOpenByTForm(
  var _Value : boolean
  );
  //----------------------------------------------------------------------------
  #doc
     Событие для проверки режима загрузки всех статей по группе аналитик
  #end
  Event Procedure Event_GetIsAllOpenByGrAn(
  var _Value : boolean
  );
  //----------------------------------------------------------------------------
  #doc
     Событие для проверки существует ли бюджетный процесс для текущего представления
  #end
  Event Procedure Event_GetIsBudProcExist(
  var _Value : boolean
  );


  //----------------------------------------------------------------------------
  #doc
     Событие получения сообщения о последней ошибке
  #end
  Event Procedure Event_GetStLastError(
  var _sLastError : string   // описание ошибки
  );

  //----------------------------------------------------------------------------
  #doc
     Событие при получении значения ячейки
  #end
  Event Function Event_GetCellValue(
      _CubCAnID    : TPtr   ;             // аналитика ячейки
      _MeasureNpp  : LongInt;             // номер показателя
      _OldSumma    : double ;             // старая сумма
      _BudCAnID    : TPtr   ;             // аналитика показателя
  var _rcCellInfo  : TFpBudEditCellInfo   // информация по ячейке
  ): boolean;

  //----------------------------------------------------------------------------
  #doc
     Событие при сохранении значения ячейки
  #end
  Event Procedure Event_SaveCellValue(
      _CubCAnID   : TPtr   ;  // аналитика ячейки
      _MeasureNpp : LongInt;  // номер показателя
      _OldSumma   : double ;  // старая сумма
      _NewSumma   : double ;  // новая  сумма
      _IsShow     : boolean;  // режим визуализации
      _CurAgrKod  : word   ;  // текущий код аналитики
      _UnderRecKod: word   ;  // подчиненный код аналитики
  var _isModif    : boolean;  // была ли модификация данных
  var _isAllOk    : boolean   // все ли прошло успешно
  );
  //----------------------------------------------------------------------------
  #doc
     Событие при удалении значения по ячейке
  #end
  Event Procedure Event_KillCellValue(
      _CubCAnID   : TPtr   ;  // аналитика ячейки
      _MeasureNpp : LongInt;  // номер показателя
  var _isModif    : boolean;  // была ли модификация данных
  var _isAllOk    : boolean   // все ли прошло успешно
  );

  //----------------------------------------------------------------------------
  #doc
     Событие при раскрытии агрегата по данным бюджета
  #end
  Event Procedure Event_OpenAgrByBudget(
      _CubCAnID   : TPtr   ;  // аналитика ячейки
      _MeasureNpp : LongInt;  // номер показателя
      _OldSumma   : double ;  // старая сумма
      _isCanEdit  : boolean;  // возможность редактирования
  var _isModif    : boolean;  // была ли модификация данных
  var _isAllOk    : boolean   // все ли прошло успешно
  );
  //----------------------------------------------------------------------------
  #doc
     Событие при раскрытии агрегата по данным книги финансовых операций
  #end
  Event Procedure Event_OpenAgrByOborot(
      _CubCAnID   : TPtr   ;  // аналитика ячейки
      _MeasureNpp : LongInt;  // номер показателя
      _OldSumma   : double ;  // старая сумма
      _isCanEdit  : boolean;  // возможность редактирования
  var _isModif    : boolean;  // была ли модификация данных
  var _isAllOk    : boolean   // все ли прошло успешно
  );
  //----------------------------------------------------------------------------
  #doc
     Событие при загрузке агрегата по данным книги финансовых операций
  #end
  Event Procedure Event_LoadAgrByOborot(
      _CubCAnID   : TPtr   ;  // аналитика ячейки
      _MeasureNpp : LongInt;  // номер показателя
  var _isModif    : boolean;  // была ли модификация данных
  var _isAllOk    : boolean   // все ли прошло успешно
  );


  //----------------------------------------------------------------------------
  #doc
     Событие при запуске печати переменных сущности
  #end
  Event Procedure Event_PrintVar(
    _pXL          : XLSRepBuilder;
    _isCreateXLT  : boolean
  );
  //----------------------------------------------------------------------------
  #doc
     Событие при запуске печати таблицы сущности
  #end
  Event Procedure Event_PrintTbl(
    _pXL          : XLSRepBuilder;
    _isCreateXLT  : boolean
  );
  //****************************************************************************

End; // ObjInterface
//******************************************************************************


//==============================================================================
VipInterface ViewFpCube implements IViewFpCube
Licensed (
#include ViewFpCube.lih
);
Public:
  Constructor Init;
  Destructor  Done;
End;
//******************************************************************************


#endif//__FpVCub_Vih__
