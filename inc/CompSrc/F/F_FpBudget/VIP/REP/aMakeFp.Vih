//------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Галактика 5.80 - модуль "Управление бюджетом"
// Базовый объект : "Построитель иерархических отчетов"
//------------------------------------------------------------------------------

#ifndef __aMakeFp_Vih__
#define __aMakeFp_Vih__

#ifdef  ComponentVersion
#component "F_FpBudget"
#endif//ComponentVersion

//------------------------------------------------------------------------------
// Построение отчетов
#include FpTypes.inc
#include aTreeOut.Vpp // много всего, нужен только TStructOut
#include aTreeNam.Vih // ObjTreeNames
#include aTreeNew.Vih // ObjTreeNew
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
#doc
Базовый объект : "Построитель иерархических отчетов"<br>
<b>Внимание!</b> Интерфейс предназначен только для внутреннего использования<br>
#end
#IntPrivate ObjInterface iObjFpHierRepBuilder;

//------------------------------------------------------------------------------
#doc
   Получение ссылки на объект ObjTreeNew
#end
Function GetObjTreeNew  : ObjTreeNew;

//------------------------------------------------------------------------------
#doc
   Освобождение ссылки на объект ObjTreeNew
#end
Function FreeObjTreeNew : boolean;

//------------------------------------------------------------------------------
#doc
   Заполнение rStructOut (cgFpTable_Oborot or cgFpTable_Values)
#end
Function StructOut_Fill(
  _Table: word; _cTable: comp;
  var rStructOut: TStructOut
): boolean;

//------------------------------------------------------------------------------
#doc
   Добавление сумм бюджета к листу и пересчет ветки
#end
Function SumsValues_AddToNodeAndRecount(
  _cRec : comp;
  _VlSum: double; _VlSumTr: double; _VlSumKol: double
): boolean;

//------------------------------------------------------------------------------
#doc
   Добавление суммы к ветке
#end
Function Sums_AddOneToBranch(
  _cNode  : comp; _SumsNpp: word;
  _nSum   : word; _Sum    : double;
  _nSumTr : word; _SumTr  : double;
  _nSumKol: word; _SumKol : double
): boolean;

//------------------------------------------------------------------------------
#doc
   Добавление одной записи в дерево
#end
Function Build_One(_Table: word; _ContAn: LongInt): comp;

//------------------------------------------------------------------------------
#doc
<brief> Получить ссылку на лист иерархии </brief>
  Получить ссылку на лист иерархии
  Если такого листа еще небыло, то создается новый.
  Только для отчета по данным бюджета!
#end
Function Find_ValuesLeaf(_ContAn : LongInt) : comp;

//------------------------------------------------------------------------------
#doc
   Регистр преобразует из настройки в настоящий регистр
#end
Function TuneRegToReg(_KodReg: word): word;

//------------------------------------------------------------------------------
#doc
   Установить тип отчета
#end
Function SetReportType(_wReportType : word) : boolean;

//------------------------------------------------------------------------------
#doc
   Установка параметров
#end
Procedure Params_SetKodReg(_KodReg: word);

//------------------------------------------------------------------------------
#doc
   Установка параметров
#end
Function  Params_GetKodReg: word;

//------------------------------------------------------------------------------
#doc
   Установка параметров
#end
Procedure Params_SetVariant(_cVariant: comp);

//------------------------------------------------------------------------------
#doc
   Установка параметров
#end
Procedure Params_SetFilter(_cFilter: comp);

//------------------------------------------------------------------------------
#doc
   Установка параметров
#end
Procedure Params_SetDopParam(_DopParam: word);

//------------------------------------------------------------------------------
#doc
   Установка параметров
#end
Procedure Params_SetTable(_wTable: word);

//------------------------------------------------------------------------------
#doc
   Установка параметров
#end
Procedure Params_SetBudVar(_cBudVar: comp);

//------------------------------------------------------------------------------
#doc
   Установка параметров
#end
Procedure Params_SetTreeVal(_fpVal: tFpValPrm);

//------------------------------------------------------------------------------
#doc
   Установка параметров
#end
Procedure Params_Set(
  _KodReg     : word;
  _cVariant   : comp;
  _cFilter    : comp;
  _DopParam   : word;
  _wTable     : word;
  _cBudVar    : comp;
  _fpVal      : tFpValPrm
);

//------------------------------------------------------------------------------
#doc
   Ссылка на копию бюджета
#end
Function Params_GetBudVar : comp;

//------------------------------------------------------------------------------
#doc
   Очистка параметров
#end
Procedure Params_ReSet;

//------------------------------------------------------------------------------
#doc
   Удаление всех уровней
#end
Function SpSetting_Clear(_cRepTune: comp): boolean;

//------------------------------------------------------------------------------
#doc
   Добавление уровня в настройку группировки
#end
Function SpSetting_Add(
  _cRepTune: comp; _wType  : word; _wKodGrKau: word;
  _wMode   : word; _cTopRec: comp
): boolean;

//------------------------------------------------------------------------------
#doc
<brief> Ограничение на верхнюю запись иерархии </brief>
   Ограничение на верхнюю запись иерархии, отображаемую в отчете
   используется совместно с установкой фильтров по нижестоящим к ней уровням
#end
Function SpSetting_SetTop(
  _cRepTune : comp; _wType : word;
  _wKodGrKau : word; _cTopRec : comp
): boolean;

//------------------------------------------------------------------------------
#doc
   Таблицу с настройками - в память
#end
Function TuneToMem(_cTune: comp): boolean;

//------------------------------------------------------------------------------
#doc
   Получение свойства период
#end
Function GetPeriod : comp;

//------------------------------------------------------------------------------
#doc
   Получение свойства статья 
#end
Function GetStBud  : comp;

//------------------------------------------------------------------------------
#doc
   Получение свойства ЦО
#end
Function GetCO  : comp;
//------------------------------------------------------------------------------
#doc
   Используется аналитика операции
#end
Function IsUseGalAn : boolean;
//------------------------------------------------------------------------------
#doc
   Используется аналитика статьи
#end
Function IsUseBudAn : boolean;
//------------------------------------------------------------------------------
#doc
   Построение дерева
#end
Function BuildNewTree(_wReportType : word; _cTune: comp): boolean;

//------------------------------------------------------------------------------
#doc
   Экспорт в Excel
#end
Function ExportToExcel(
  _cTune   : comp;
  _cFilter : comp
): boolean;


//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
End;

VipInterface ObjFpHierRepBuilder implements iObjFpHierRepBuilder, objTreeNames
#Licensed_Free
;

#end //__aMakeFp_Vih__
