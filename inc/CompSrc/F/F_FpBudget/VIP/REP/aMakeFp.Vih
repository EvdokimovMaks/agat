//------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Галактика 5.80 - модуль "Управление бюджетом"
// Базовый объект : "Построитель иерархических отчетов"
//------------------------------------------------------------------------------

#ifndef __aMakeFp_Vih__
#define __aMakeFp_Vih__

#ifdef  ComponentVersion
#component "F_FpBudget"
#endif//ComponentVersion

//------------------------------------------------------------------------------
#include FpTypes.Inc   // Все типы данных FP
//------------------------------------------------------------------------------
#include aTreeOut.Vpp  // много всего, нужен только TStructOut
#include aTreeNam.Vih  // ObjTreeNames
#include aTreeNew.Vih  // ObjTreeNew
//------------------------------------------------------------------------------

//==============================================================================
#doc
Базовый объект : "Построитель иерархических отчетов"<br>
<b>Внимание!</b> Интерфейс предназначен только для внутреннего использования<br>
#end
Private ObjInterface IObjFpHierRepBuilder;  //#region ObjInterface

  //============================================================================
  //#region ERROR
  //----------------------------------------------------------------------------
  #doc
     Функция возвращает описание последней ошибки
  #end
  Function GetStLastError : string;
  //----------------------------------------------------------------------------
  #doc
     Вывод сообщения последней ошибки
  #end
  Function RunShowError : boolean;
  //#endregion ERROR
  //****************************************************************************

  //============================================================================
  //#region FIELDS
  //----------------------------------------------------------------------------
  #doc
     Получить период
  #end
  Function GetPeriod : comp;

  //----------------------------------------------------------------------------
  #doc
     Получить статью
  #end
  Function GetStBud  : comp;

  //----------------------------------------------------------------------------
  #doc
     Получить ЦО
  #end
  Function GetCO  : comp;
  //----------------------------------------------------------------------------
  #doc
     Узнать используется ли аналитика операции
  #end
  Function IsUseGalAn : boolean;
  //----------------------------------------------------------------------------
  #doc
     Узнать используется ли аналитика статьи
  #end
  Function IsUseBudAn : boolean;

  //----------------------------------------------------------------------------
  #doc
     Установить тип отчета
  #end
  Function SetReportType(_wReportType : word) : boolean;

  //----------------------------------------------------------------------------
  #doc
     Преобразовать регистр из настройки в настоящий регистр
  #end
  Function TuneRegToReg(_KodReg: word): word;
  //#endregion FIELDS
  //****************************************************************************

  //============================================================================
  //#region ПАРАМЕТРЫ
  //----------------------------------------------------------------------------
  #doc
     Получить регистр учета
  #end
  Function  Params_GetKodReg: word;
  //----------------------------------------------------------------------------
  #doc
     Задать регистр учета
  #end
  Procedure Params_SetKodReg(_Value : word);

  //----------------------------------------------------------------------------
  #doc
     Задать вариант бюджета
  #end
  Procedure Params_SetVariant(_Value : comp);

  //----------------------------------------------------------------------------
  #doc
     Задать основной фильтр
  #end
  Procedure Params_SetFilter(_Value : comp);

  //----------------------------------------------------------------------------
  #doc
     Задать дополнительный фильтр
  #end
  Procedure Params_SetAddFlt(_Value : comp);

  //----------------------------------------------------------------------------
  #doc
     Задать дополнительные параметры
  #end
  Procedure Params_SetDopParam(_Value : word);

  //----------------------------------------------------------------------------
  #doc
     Задать таблицу данных
  #end
  Procedure Params_SetTable(_Value : word);

  //----------------------------------------------------------------------------
  #doc
     Получить копию бюджета
  #end
  Function Params_GetBudVar : comp;
  //----------------------------------------------------------------------------
  #doc
     Задать копию бюджета
  #end
  Procedure Params_SetBudVar(_Value : comp);

  //----------------------------------------------------------------------------
  #doc
     Задать валюту дерева
  #end
  Procedure Params_SetTreeVal(_Value : TFpValPrm);

  //----------------------------------------------------------------------------
  #doc
     Задать параметры
  #end
  Procedure Params_Set(
    _KodReg     : word;
    _cVariant   : comp;
    _cFilter    : comp;
    _DopParam   : word;
    _wTable     : word;
    _cBudVar    : comp;
    _fpVal      : tFpValPrm
  );

  //----------------------------------------------------------------------------
  #doc
     Очистить параметры
  #end
  Procedure Params_ReSet;
  //#endregion ПАРАМЕТРЫ
  //****************************************************************************

  //============================================================================
  //#region ПОСТРОЕНИЕ
  //----------------------------------------------------------------------------
  #doc
     Получить ссылку на объект ObjTreeNew
  #end
  Function GetObjTreeNew  : ObjTreeNew;

  //----------------------------------------------------------------------------
  #doc
     Освободить ссылки на объект ObjTreeNew
  #end
  Function FreeObjTreeNew : boolean;

  //----------------------------------------------------------------------------
  #doc
     Заполнить rStructOut (cgFpTable_Oborot or cgFpTable_Values)
  #end
  Function StructOut_Fill(
      _Table : word;
      _cTable: comp;
  var rStructOut: TStructOut
  ): boolean;

  //----------------------------------------------------------------------------
  #doc
     Добавить суммы бюджета к листу и пересчет ветки
  #end
  Function SumsValues_AddToNodeAndRecount(
    _cRec    : comp;
    _VlSum   : double;
    _VlSumTr : double;
    _VlSumKol: double
  ): boolean;

  //----------------------------------------------------------------------------
  #doc
     Добавить суммы к ветке
  #end
  Function Sums_AddOneToBranch(
    _cNode  : comp; _SumsNpp: word;
    _nSum   : word; _Sum    : double;
    _nSumTr : word; _SumTr  : double;
    _nSumKol: word; _SumKol : double
  ): boolean;

  //----------------------------------------------------------------------------
  #doc
     Добавить одну запись в дерево
  #end
  Function Build_One(_Table: word; _ContAn: TPtr): comp;

  //----------------------------------------------------------------------------
  #doc
     Получить ссылку на лист иерархии
  #end
  Function Find_ValuesLeaf(_ContAn : TPtr) : comp;

  //----------------------------------------------------------------------------
  #doc
     Удалить все уровни
  #end
  Function SpSetting_Clear(_cRepTune: comp): boolean;

  //----------------------------------------------------------------------------
  #doc
     Добавить уровень в настройку группировки
  #end
  Function SpSetting_Add(
    _cRepTune: comp; _wType  : word; _wKodGrKau: word;
    _wMode   : word; _cTopRec: comp
  ): boolean;

  //----------------------------------------------------------------------------
  #doc
     Установить ограничение на верхнюю запись иерархии
  #end
  Function SpSetting_SetTop(
    _cRepTune : comp; _wType : word;
    _wKodGrKau : word; _cTopRec : comp
  ): boolean;

  //----------------------------------------------------------------------------
  #doc
     Поместить таблицу с настройками
  #end
  Function TuneToMem(_cTune: comp): boolean;

  //----------------------------------------------------------------------------
  #doc
     Запустить построение дерева
  #end
  Function BuildNewTree(_wReportType : word; _cTune: comp): boolean;
  //#endregion ПОСТРОЕНИЕ
  //****************************************************************************

  //============================================================================
  //#region ЭКСПОРТ
  //----------------------------------------------------------------------------
  #doc
     Запустить экспорт в Excel
  #end
  Function ExportToExcel(
    _cTune   : comp;
    _cFilter : comp
  ): boolean;
  //#endregion ЭКСПОРТ
  //****************************************************************************
End; //#endregion ObjInterface
//******************************************************************************


//==============================================================================
VipInterface ObjFpHierRepBuilder implements IObjFpHierRepBuilder, objTreeNames
#Licensed_Free;
//******************************************************************************

#end //__aMakeFp_Vih__
