//------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Галактика 8.10 - модуль "Управление бюджетом"
// Визуальный интерфейс : "Просмотр иерархических отчетов"
//------------------------------------------------------------------------------

#ifndef __FpOtchSe_Vih__
#define __FpOtchSe_Vih__

#ifdef  ComponentVersion
#component "F_FpBudget"
#endif//ComponentVersion

//------------------------------------------------------------------------------
#include aMakeFP.Vih
#include xlReport.Vih
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
#doc
Визуальный интерфейс : "Просмотр иерархических отчетов"<br>
<b>Внимание!</b> Интерфейс предназначен только для внутреннего использования<br>
#end
#IntPrivate ObjInterface iViewFpHierReport;

//==============================================================================
//                                  ERROR
//------------------------------------------------------------------------------
#doc
   Функция возвращает описание последней ошибки
#end
Function GetStLastError : string;

//==============================================================================
//                                  INIT
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
#doc
   Инициализация параметров интерфейса
#end
Function InitParam(
  _IntMode      : word;
  _RunMode      : word;
  _wReportType  : word;
  _cUserDeskRep : comp;
  _cValTree     : comp;
  _pRepBuilder  : iObjFpHierRepBuilder
) : boolean;

//==============================================================================
//                                 COMMON
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
#doc
   Получить признак актуальности данных в иерархии
#end
Function GetIsTreeActualData: boolean;
//------------------------------------------------------------------------------
#doc
   Установить признак актуальности данных в иерархии
#end
Procedure SetIsTreeActualData(_Value : boolean);

//------------------------------------------------------------------------------
#doc
   Установить значения валюты для всех листьев
#end
Procedure SetValLeaf(_cVal: comp);

//------------------------------------------------------------------------------
#doc
   Установить валюту дерева
#end
Procedure SetValTree(_cVal: comp);

//------------------------------------------------------------------------------
#doc
   Установить тип отчета
#end
Function SetReportType(_wReportType : word) : boolean;

//------------------------------------------------------------------------------
#doc
   Установка режима (cgFpRep_RegimFixed)
#end
Procedure SetRegim(_regim: word; _isOn: boolean);

//------------------------------------------------------------------------------
#doc
   Установка фиксированного значения (для режима фиксации)
#end
Procedure SetFixedFpValues(_cFpValues: comp);

//------------------------------------------------------------------------------
#doc
   Установить интерфейс-владелец (для встраивания)
#end
Procedure SetOwnerInterface(_sOwnerInterface : string);

//------------------------------------------------------------------------------
#doc
   Сохранение изменений
#end
Function SaveChanges : boolean;

//------------------------------------------------------------------------------
#doc
   Получить итоговые суммы для текущего агрегата
#end
Function GetAllSumByAgr(
    _cAgrStBud  : comp;       // статья агрената
    _cAgrPeriod : comp;       // период агрегата
var _pTreeSums  : TPTreeSums  // итоговые суммы
): boolean;

//------------------------------------------------------------------------------
#doc
   Пересканирование дерева
#end
Procedure Tree_Rescan;

//------------------------------------------------------------------------------
#doc
   Печать отчета
#end
Procedure Print_Tree(_ReportType : word);


//==============================================================================
//                                  EVENTS
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
#doc
   Поля интерфейса-контейнера (True - создание шаблона, False - выгрузка)
#end
Event Procedure Event_PrintVar(_pXL: XLSRepBuilder; _isCreateXLT: boolean);

//------------------------------------------------------------------------------
#doc
   Таблицы интерфейса-контейнера (True - создание шаблона, False - выгрузка)
#end
Event Procedure Event_PrintTbl(_pXL: XLSRepBuilder; _isCreateXLT: boolean);

//------------------------------------------------------------------------------
#doc
   Передача измененной записи
#end
Event Procedure Event_ChangeFpValues(_ContAn: LongInt; _SumNes: double);
//------------------------------------------------------------------------------

#doc
   Передача удаленных записей
#end
Event Procedure Event_DeleteFpValues(_markFpValues: LongInt);

//------------------------------------------------------------------------------
#doc
   Настройка иерархии
#end
Event Function Event_RunHierSetting : boolean;

//------------------------------------------------------------------------------
#doc
   Обновить итоговые суммы
#end
Event Function Event_ReSetAllTopSumm : boolean;

//------------------------------------------------------------------------------
#doc
   Загрузить данные в бюджет
#end
Event Function Event_LoadToBudget : boolean;

//------------------------------------------------------------------------------
#doc
   Изменить фиксированное значение
#end
Event Function Event_SetFixed(_ContAn: LongInt; _isOn: boolean): boolean;

//------------------------------------------------------------------------------
#doc
   Изменить значение агрегата
#end
Event Function Event_DeltaSumm(_DeltaSumm: double; _DeltaSummTr: double; _DeltaSummKol: double): boolean;

//------------------------------------------------------------------------------
#doc
   Изменить значение фиксированного элемента
#end
Event Function Event_DeltaSummFix(_DeltaSumm: double; _DeltaSummTr: double; _DeltaSummKol: double): boolean;

//------------------------------------------------------------------------------
#doc
   Контейнер аналитик создаваемой записи
#end
Event Procedure Event_AddRecContAn(_CAn: LongInt);

//------------------------------------------------------------------------------
#doc
   Событие заполнения аналитики из места вызова
#end
Event Procedure Event_GetParentAnalitics(_CAn : LongInt);

//------------------------------------------------------------------------------
#doc
   Был изменен заголовок окна
#end
Event Procedure Event_TitleWasChanged(_sAddTitle : string);
//------------------------------------------------------------------------------

End;

VipInterface fpOtchSe implements iViewFpHierReport
Licensed (sfp)
Parameters (
  parIntMode      : word;
  parRunMode      : word;    // cgFpTable_ - константы из fpotchco.vpp
  parReportType   : word;    // тип отчета
  parUserDeskRep  : comp;    // настройка пользователя
  parKlValTree    : comp;    // валюта дерева
  pRepBuilder     : iObjFpHierRepBuilder
)
;

#end //__FpOtchSe_Vih__
