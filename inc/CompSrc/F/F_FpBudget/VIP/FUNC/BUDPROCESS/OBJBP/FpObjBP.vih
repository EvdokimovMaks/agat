//------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Галактика 5.80 - модуль "Управление бюджетом"
// Объект поиска и доступа к данным хранилища бюдж.процессов
//------------------------------------------------------------------------------

#ifndef __FpObjBP_VIH
#define __FpObjBP_VIH

#ifdef  ComponentVersion
#component "F_FpBudget"
#endif//ComponentVersion

#ifdef  GAL8_1
#define __FPManagerParamNewDict__
#endif//GAL8_1

#include ManagerTypes.inc

//------------------------------------------------------------------------------
#doc
Объект поиска и доступа к данным хранилища бюдж.процессов<br>
<b>Внимание!</b> Интерфейс предназначен только для внутреннего использования<br>
#end
#IntPrivate ObjInterface iFpObjBP;

//------------------------------------------------------------------------------
#doc
   Задать для модели первоначальный сценарий<br>
   <ul>
   <li> _cScenario - ссылка на сценарий<br>
   </ul>
#end
Function SetCurFirstScenario(_cScenario : comp) : boolean;

//------------------------------------------------------------------------------
#doc
   Задать ссылку на присоединенный сценарий<br>
   <ul>
   <li> _cMaxSc - ссылка на присоединенный сценарий<br>
   </ul>
#end
Function SetCurMaxScenario(_cMaxSc : comp) : boolean;

//------------------------------------------------------------------------------
#doc
   Задать для модели ссылку на сценарий-ссылку<br>
   <ul>
   <li> _cNextSc - ссылка на сценарий-ссылку<br>
   </ul>
#end
Function SetCurNextScenario(_cNextSc : comp) : boolean;

//------------------------------------------------------------------------------
#doc
   Получить константу сущности по параметру и роли<br>
   <ul>
   <li> _wParam    -  тип параметра:<br>
     <ul>
     <li> 1 - ЦО<br>
     <li> 2 - период<br>
     <li> 3 - реквизиты копии<br>
     <li> 4 - регистр учета<br>
     <li> 5 - типовая форма<br>
     <li> 6 - списки бюджетов<br>
     <li> 7 - режим замены<br>
     <li> 8 - пользователь<br>
     </ul>
   <li> _bRule     -  в какой роли используется:<br>
     <ul>
     <li> True  - роль А<br>
     <li> False - роль В<br>
     </ul>
   </ul>
#end
Function GetParamConst(_wParam : word; _bRule : boolean) : word;

//------------------------------------------------------------------------------
#doc
   Получить значения роли указанной для родителя в модели для единичного параметра<br>
#end
Function GetRuleParent1(_NRec : comp; _wEntity : word) : word;

//------------------------------------------------------------------------------
#doc
   Получить значения роли указанной для родителя в модели для списка параметров<br>
#end
Function GetRuleParentN(_NRec : comp; _wEntity : word) : word;

//------------------------------------------------------------------------------
#doc
   Получить NRec сценария для заданной модели<br>
   <ul>
   <li> _NRec      -  текущая в списке бюджетных процессов<br>
   <li> _wMode1NAB -  тип параметра<br>
     <ul>
     <li> 1 - для единичного параметра роли А<br>
     <li> 2 - для списка параметров роли А<br>
     <li> 3 - для единичного параметра роли В<br>
     <li> 4 - для списка параметров роли В<br>
     </ul>
   <li> _wParam    -  тип параметра:<br>
     <ul>
     <li> 1 - ЦО<br>
     <li> 2 - период<br>
     <li> 3 - реквизиты копии<br>
     <li> 4 - регистр учета<br>
     <li> 5 - типовая форма<br>
     <li> 6 - списки бюджетов<br>
     <li> 7 - режим замены<br>
     <li> 8 - пользователь<br>
     </ul>
   <li>   _wEntity   - вернет в какой сущности брать данные по найденному NRec (А или В)<br>
   <li>   _bNeedReLoad - вернет необходимо ли перегружать данные<br>
   </ul>
#end
Function GetScenario(_NRec : comp; _wMode1NAB : word; _wParam : word; var _wEntity : word; var _bNeedReLoad : boolean ) : comp;

//------------------------------------------------------------------------------
#doc
   Проверить установлен ли единичный ЦО в сценарии. а если нет то выбрать.<br>
#end
Function CheckSet1CO(_NRec : comp; _wEntity : word; _wChangeMode : word) : boolean;

//------------------------------------------------------------------------------
#doc
   Проверить установлен ли список ЦО в сценарии. а если нет то выбрать.<br>
#end
Function CheckSetNCO(_NRec : comp; _wEntity : word; _wChangeMode : word) : boolean;

//------------------------------------------------------------------------------
#doc
   Проверить установлен ли единичный период в сценарии. а если нет то выбрать.<br>
#end
Function CheckSet1Per(_NRec : comp; _wEntity : word; _wChangeMode : word) : boolean;

//------------------------------------------------------------------------------
#doc
   Проверить установлен ли список периодов в сценарии. а если нет то выбрать.<br>
#end
Function CheckSetNPer(_NRec : comp; _wEntity : word; _wChangeMode : word) : boolean;

//------------------------------------------------------------------------------
#doc
   Проверить установлены ли параметры реквизитов копии в сценарии. а если нет то выбрать.<br>
#end
Function CheckSet1Stage(_NRec : comp; _wEntity : word; _wChangeMode : word) : boolean;

//------------------------------------------------------------------------------
#doc
   Позиционирование на первой записи загруженной таблицы ЦО<br>
#end
Function GetFirstRecCO : boolean;

//------------------------------------------------------------------------------
#doc
   Позиционирование на следующую запись загруженной таблицы ЦО<br>
#end
Function GetNextRecCO  : boolean;

//------------------------------------------------------------------------------
#doc
   Получить буфер таблицы ЦО по текущей позиции<br>
#end
Function GetBuffCO(var _Buff : TParamCO): boolean;

//------------------------------------------------------------------------------
#doc
   Позиционирование на первой записи загруженной таблицы периодов<br>
#end
Function GetFirstRecPer : boolean;

//------------------------------------------------------------------------------
#doc
   Позиционирование на следующую запись загруженной таблицы периодов<br>
#end
Function GetNextRecPer  : boolean;

//------------------------------------------------------------------------------
#doc
   Получить буфер таблицы периодов по текущей позиции<br>
#end
Function GetBuffPer(var _Buff : TParamPer): boolean;

//==============================================================================
//                               TUNE
//==============================================================================
//------------------------------------------------------------------------------
#doc
   Прочитать из хранилища значение единичного параметра ЦО<br>
#end
Function Read_ITune_CO(_cTune : comp; _wEntity : word) : comp;

//------------------------------------------------------------------------------
#doc
   Прочитать из хранилища значение единичного параметра периода<br>
#end
Function Read_ITune_Per(_cTune : comp; _wEntity : word) : comp;

//------------------------------------------------------------------------------
#doc
   Прочитать из хранилища значение единичного параметра варианта<br>
#end
Function Read_ITune_Variant(_cTune : comp; _wEntity : word) : comp;

//------------------------------------------------------------------------------
#doc
   Прочитать из хранилища значение единичного параметра стадии<br>
#end
Function Read_ITune_Stage(_cTune : comp; _wEntity : word) : string;

//------------------------------------------------------------------------------
#doc
   Прочитать из хранилища значение единичного параметра кода регистра<br>
#end
Function Read_ITune_KodReg1(_cTune : comp; _wEntity : word) : word;

//------------------------------------------------------------------------------
#doc
   Прочитать из хранилища значение множественного параметра кода регистра<br>
#end
Function Read_ITune_KodRegN(_cTune : comp; _wEntity : word) : word;

//------------------------------------------------------------------------------
#doc
   Прочитаем из хранилища по NRec и сущности список ЦО<br>
#end
Function Read_ITune_tblCO(_cTune : comp; _wEntity : word) : boolean;

//------------------------------------------------------------------------------
#doc
   Прочитаем из хранилища по NRec и сущности список периодов<br>
#end
Function Read_ITune_tblPer(_cTune : comp; _wEntity : word) : boolean;

//------------------------------------------------------------------------------
#doc
   Прочитаем из хранилища по NRec и сущности режим замены<br>
#end
Function Read_ITune_ReplaceMode(_cTune : comp; _wEntity : word) : word;

//------------------------------------------------------------------------------
#doc
   Прочитаем из хранилища по NRec и сущности пользователя<br>
#end
Function Read_ITune_User(_cTune : comp; _wEntity : word) : string;

//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
End; // IFpObjBP

VipInterface FpObjBP implements iFpObjBP
#Licensed_Free
; // VipInterface FpObjBP


#endif //__FpObjBP_VIH

