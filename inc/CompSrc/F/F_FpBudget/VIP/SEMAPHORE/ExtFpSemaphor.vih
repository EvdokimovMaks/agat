//------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Галактика 5.80 - модуль "Управление бюджетом"
// Интерфейс взаимодействия : Менеджер блокировки данных
//------------------------------------------------------------------------------

#ifndef __ExtFpSemaphor_Included__
#define __ExtFpSemaphor_Included__

#ifdef  ComponentVersion
#component "F_FpBudget"
#endif//ComponentVersion

//------------------------------------------------------------------------------
#doc
<brief>Объект реализующий работу с семафорами</brief>
     Объект   реализующий   работу   с  семафорами   на
собственной таблице FpLockData.<br>
     Параметры новых функций и возвращаемые значения не
отличаются   от   функций  работы   с  семафорами,   но
существуют некоторые отличия в работе  этих функций.  В
объекте так же реализованы  дополнительные функции  для
работы с семафорами.<br>
     Перед  ознакомлением с  описанием данного  объекта
следует воспользоваться справочной  системой и  изучить
работу  семафоров,  т.к.  ниже  будут  описаны   только
отличия и особенности работы с семафорами  реализуемыми
в объекте от стандартных семафоров.<br>
#end
ObjInterface iExtObjFpSemaphor;

//==============================================================================
//                                  ERROR
//------------------------------------------------------------------------------
#doc
Функция возвращает последнюю сформированную ошибку при работе с семафорами<br>
#end
Function GetStLastError : string;

//------------------------------------------------------------------------------
#doc
Функция выводит сообщение с последней сформированной ошибкой при работе
с семафорами<br>
#end
Function ShowMessageLastError : boolean;

//------------------------------------------------------------------------------
#doc
Функция возвращает NRec последнего  (на  момент вызова функции) пользователя
выставившего семафор<br>
#end
Function GetLastLockUser : comp;

//------------------------------------------------------------------------------
#doc
Функция возвращает полное имя последнего (на момент   вызова   функции)
пользователя выставившего семафор<br>
#end
Function GetLastLockUserName : string;

//==============================================================================
//                                  Семафоры
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
#doc
<brief>Функция установки семафора</brief>
     Если семафора с именем sName не существует, то  он
будет успешно выставлен.<br>
     В  случае  если  уже  установлен  сессионный   или
постоянный  семафор  и  происходит  попытка   выставить
семафор  с  несовпадающим  режимом  то  функция  вернет
ошибку - tsSemaphorModeError (Попытка выставить семафор
при наличии  уже выставленного  семафора с  совпадающим
именем, но несовпадающим режимом).<br>
     Если  режим  совпадает   и  выставленный   семафор
блокирующий,    то    функция    вернёт    ошибку     -
tsSemaphorIsBusy (установлено состояние ЗАНЯТО).<br>
     Если  выставленный  семафор   не  блокирующий,   а
происходит  попытка  выставить  блокирующий семафор  то
функция  так  же  вернёт   ошибку  -   tsSemaphorIsBusy
(установлено состояние ЗАНЯТО).<br>
     Если  выставленный  семафор   не  блокирующий,   и
происходит  попытка  выставить  так  же не  блокирующий
семафор, то он успешно будет выставлен.<br>
#end
Function fpSetSemaphore(sName : string; iFlags : byte ) : word;

//------------------------------------------------------------------------------
#doc
<brief>Функция снятия семафора</brief>
Сначала происходит попытка снятия своих семафоров. Если своих семафоров не
обнаружено, то  происходит попытка снятия чужих постоянных семафоров.<br>
Чужие сессионные семафоры снять нельзя.<br>
#end
Function fpClearSemaphore(sName : string) : word;

//------------------------------------------------------------------------------
#doc
<brief>Функция проверки состояния семафора</brief>
Если семафор с заданным именем существует, то функция вернет True и режим в
котором семафор выставлен. В противном случае функция вернёт False.<br>
#end
Function fpIsSemaphore(sName : string; var iMode : byte) : boolean;

//------------------------------------------------------------------------------
#doc
Функция снимает все "протухшие" сессионные семафоры пользователей отсутствующих
в системе.<br>
Автоматически выполняется при инициализации объекта менеджера блокировки данных.<br>
#end
Function KillInefficientSemaphore : boolean;

//------------------------------------------------------------------------------
#doc
Функция снимает все "протухшие" сессионные семафоры текущего пользователя.<br>
Всегда автоматически выполняются при запуске Галактики.<br>
#end
Function KillOwnInefficientSemaphore : boolean;

//==============================================================================
//                                  DIALOG
//------------------------------------------------------------------------------
#doc
Функция предназначена для использования в отладочном режиме и позволяет
просмотреть список выставленных семафоров.<br>
#end
Function RunViewSemaphor : boolean;

//------------------------------------------------------------------------------
#doc
<brief>Функция проверки состояния семафора</brief>
Если семафор с заданным именем существует для пользователя, то функция вернет True и режим в
котором семафор выставлен. В противном случае функция вернёт False.<br>
#end
Function fpIsSemaphoreByUser(sName : string; pcUserID : comp; var iMode : word) : boolean;
//------------------------------------------------------------------------------
End;

//------------------------------------------------------------------------------

VipInterface vExtObjFpSemaphor implements iExtObjFpSemaphor
#Licensed_Free
;

#endif //__ExtFpSemaphor_Included__


