//------------------------------------------------------------------------------
//                                                      (c) Корпорация ГАЛАКТИКА
//------------------------------------------------------------------------------
// Галактика 5.74 - Бухгалтерский контур
// Формирование интервалов для анализа задолженности
//------------------------------------------------------------------------------

#doc
Формирование интервалов для отчета "Анализа задолженности"
#end
ObjInterface oIntervals;
  #doc
  Инициализация
  #end
  procedure InitParams (dBegin   : date;          // Дата начала интервадов
                       bShag    : byte;          // Шаг интервалов (день, месяц)
                       wSpeed   : word;          // Размер шага
                       wKol_Vo  : word);         // Количество шагов


  #doc
  Активация окна интерфейса
  #end
  function ShowIntervals : boolean;
  #doc
  Выбор интервала для фильтра
  #end 
  function GetInterval(var iNum: word; var HideColumn: boolean; Narast: boolean) : boolean;

  #doc
  Установить значения по умолчанию
  #end
  procedure SetDefaultRanges(dDefault : date);

  #doc
  Добавление интервала. Вызывать только после InitParams.
  #end
  function addInterval: boolean;

  #doc
  Добавление объединенного интервала. Только для внешнего вызова
  #end
  procedure AddGroupInterval(NumIntervals : word);

  #doc
  Количество (не)объединенных интервалов в записи NumPP
  #end
  function NumPPInRec (NumPP : word): word;

  #doc
  Возвращает дату из таблицы по № п/п.
  #end
  function retDate (NumPP : word;                 // № п/п
                   Beg : boolean) : date;        // Начальная дата или конечная

  #doc
  Возвращает название из таблицы по № п/п.
  #end
  function retName (NumPP : word;                 // № п/п
                   Beg : boolean) : string;      // Начальное название или конечное

  #doc
  Возвращает количество месяцев между интервалами начальным и NumPP
  #end
  function RetIntervalValue (NumPP: word; Beg: boolean): word;

  #doc
  Размер шага сетки
  #end
  function SpeedSteps : word;

  #doc
  Тип шага сетки
  #end
  function ShagSteps : byte;

  #doc
  Количество интервалов в таблице
  #end
  function RecordsInpRanges : LongInt;

  #doc
  Очистка таблицы pRanges
  #end
  procedure ClearpRanges;

  #doc
  Состояния таблицы(шаг + размер шага + количество интервалов)
  #end
  function IntervalNames : string;

  #doc
  Установить новую начальную дату и пересчитать даты интервалов
  #end
  procedure SetNewDate(NewDate: date);
end;

VipInterface iIntervals implements oIntervals #Licensed_Free;
Table struct pRanges
(
  NRec       : comp
 ,Npp        : word    // Номер по порядку
 ,PrevNRec   : comp    // Номер следующей записи
 ,NextNRec   : comp    // Номер предыдущей записи
 ,RangeBeg   : date    // Начало перода
 ,RangeEnd   : date    // Окончание периода
 ,RangeName1 : string  // Название начала периода
 ,RangeName2 : string  // Название окончания периода
 ,GridTip    : char    // Тип периода
)
with index
(
   pRanges01 = NRec (Unique, Surrogate)
  ,pRanges02 = NextNRec
  ,pRanges03 = PrevNRec
  ,pRanges04 = Npp
);


