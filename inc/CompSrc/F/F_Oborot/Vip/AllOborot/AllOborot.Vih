// ----------------------------------------------------------------------------
//                                                     (c) корпорация Галактика
// Галактика 5.85 - Бухгалтерский контур
// Обработка бухпроводок и финопераций по регистрам учета
// ----------------------------------------------------------------------------

#ifndef __AllOborot__vih__
#define __AllOborot__vih__

#ifdef ComponentVersion
#Component "F_Oborot"
#end

#include TDocument.vih  // Свойства документов и их спецификаций
#include PSManager.vih  // Работа с регистрами учета и планами счетов
#include CheckFocus.vih // Проверка фокуса ввода в контейнере (ObjCheckFocusInContainer)
#include TOborot.vih
#doc
Обработка бухпроводок и финопераций по регистрам учета<br>
<i>Данный интерфейс надо использовать, только если необходим
просмотр ИЛИ редактирование проводок по документу</i><br>
</brief><br>
 Типовое использование данного интерфейса такое:<br>
<br>
<pre class="example">
##include AllOborot.vih

Interface ...

##include AllEditOborot.var (AllViewOborot.var если надо редактирование)

// Описание формата (в примере - закладка)
Embedded embOborot 'Данные по регистру учета' interface iEditOborot;
  Show at (, 19);
End;

cmInit : // Окна, в котором встроен Oborot
         // Не нужно делать инициализации в cmInit интерфейса, если проводки
         // видны только в дополнительном окне

  if (NullVipRef(iEditOborot))
  {
    iEditOborot.SetParams(TDocument(Self), iPSManager, cgiOborot_SoprHozOborot, cgiNo);
    iEditOborot.SetShowMode(cgiOborot_ScreenShort);
    iEditOborot.ShowWindow;
  }
  iEditOborot.ShowContent;

// Везде в коде, где надо отрисовать встроенный Oborot, но только при условии
// если формат (окно) в котором встроен Oborot, видно на экране

  ...
  if (CurWindow = wnSlaveWindow)
    iEditOborot.ShowContent;

// При окончании работы Обязательно освобождать обратные ссылки, иначе не
// выгрузятся интерфейсы

cmDone :
{
  ...
  if (not NullVipRef(iEditOborot))
    iEditOborot.FreeLinks;
}
</pre>
#end
ObjInterface iAllOborot;

!-------------------------------------------------------------------------------
!                                  Embedded
!-------------------------------------------------------------------------------
#doc
Установить основные параметры
#end
procedure SetParams (_Document : TDocument; _PS: PSManager; _wBoundMode, _wWorkMode : word);

#doc
Установка режима отображения, Ex. cgiOborot_BrowseShort - по умолчанию
#end
procedure SetShowMode  (_wShowMode  : word);

#doc
Отображение окна (сигнал к инициализации интерфейса)
#end
procedure ShowWindow;

#doc
Обновление содержимого интерфейса
#end
procedure ShowContent;

#doc
Обновление содержимого интерфейса через сервис документа с передачей позиции
#end
procedure ShowContentWithPosition(_cOborot : comp);


!-------------------------------------------------------------------------------
!                                  Event
!-------------------------------------------------------------------------------

#doc
Произошло событие _Command. Если нужно заменить стандартную обработку события собственной,
то вернуть _Command = cmCancel
#end
Event Procedure EventPutCommand(var _Command: integer);

#doc
Для перерисовки дополнительно окрытых экземпляров
#end
Event Procedure EventSetPosition(var _nRec: tNRec);

#doc
Проверка прав доступа на редактирование документа
#end
Event Function EventCanEditDoc(awShowMessage: word; var awDocProtect: word): boolean;

#doc
Событие, генерируемое при передаче фокуса ввода контейнеру, если проводки редактировались
#end
Event Procedure EventAfterEdit;

!-------------------------------------------------------------------------------
!                                  Common
!-------------------------------------------------------------------------------
#doc
Установить резервную дату для функции GetDatObDoc (если в результате ее выполнения дата проводки все еще пустая)
#end
Procedure SetReserveDatObDoc(_Date: date);

#doc
Добавить меню _IHotKey в меню текущего окна
#end
Procedure AddIHotKey(_IHotKey: string);

#doc
Изменить меню текущего окна на меню _IHotKey
#end
Procedure SetIHotKey(_IHotKey: string);

#doc
Освободить обратные ссылки
#end
procedure FreeLinks;
!-------------------------------------------------------------------------------
End;

VipInterface AllViewOborot implements iAllOborot, ObjCheckFocusInContainer #Licensed_Free;
VipInterface AllEditOborot implements iAllOborot, ObjCheckFocusInContainer #Licensed_Free;

#end // __AllOborot__vih__
