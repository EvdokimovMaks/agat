//------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Галактика 5.80 - модуль "Управление бюджетом"
// Макросы
//------------------------------------------------------------------------------

#ifndef _Fp_Macro_VPP_
#define _Fp_Macro_VPP_

//------------------------------------------------------------------------------
// OBJ_INTERFACE
//------------------------------------------------------------------------------
#undef mGetVipRef
#declare mGetVipRef(_var, _interf, _Command)
{
  if (NullVipRef(#_var))
  {
    if not GetVipRef(#_var, #_interf)
    { Message(''#3'Ошибка загрузки библиотеки '+#_interf+'!',CancelButton);
       #_Command;
    }
  }
}
#end //mGetVipRef
//------------------------------------------------------------------------------
#undef mLoadVipRef
#declare mLoadVipRef(_var, _interf, _Command)
{
  if (NullVipRef(#_var))
  {
    if not LoadVipRef(#_var, #_interf)
    { Message(''#3'Ошибка загрузки библиотеки '+#_interf+'!',CancelButton);
       #_Command;
    }
  }
}
#end //mLoadVipRef
//------------------------------------------------------------------------------
#undef mGetVipInterface
#declare mGetVipInterface(_var, _Command)
{
  if (NullVipRef(#_var))
  {
    if not GetVipInterface(#_var)
    { Message(''#3'Ошибка загрузки библиотеки !',CancelButton);
       #_Command;
    }
  }
}
#end //mGetVipInterface
//------------------------------------------------------------------------------
#undef mLoadVipInterface
#declare mLoadVipInterface(_var, _Command)
{
  if (NullVipRef(#_var))
  {
    if not LoadVipInterface(#_var)
    { Message(''#3'Ошибка загрузки библиотеки !',CancelButton);
       #_Command;
    }
  }
}
#end //mLoadVipInterface

//------------------------------------------------------------------------------
#undef mBindInterface
#declare mBindInterface(_IDPanel,_var)
{
  if (not NullVipRef(#_var))
  {
    BindEmbeddedInterface(#_IDPanel, #_var);
  }
  else
  {
    Message('BindInterface NullVipRef!!! #_var');
  }
}
#end //mBindInterface
//------------------------------------------------------------------------------
#undef mBindWindInterface
#declare mBindWindInterface(_IDPanel,_var,_Wind)
{
  if (not NullVipRef(#_var))
  {
    BindEmbeddedInterface(#_IDPanel, #_var, #_Wind);
  }
  else
  {
    Message('BindInterface NullVipRef!!! #_var');
  }
}
#end //mBindWindInterface
//------------------------------------------------------------------------------
#undef mUnBindInterface
#declare mUnBindInterface(_IDPanel,_var)
{
  if (not NullVipRef(#_var))
  {
    UnBindEmbeddedInterface(#_IDPanel);
  }
  else
  {
    //FpLog('UnBindInterface NullVipRef!!! #_var');
  }
}
#end //mUnBindInterface

//------------------------------------------------------------------------------
#undef mBindEvent
#declare mBindEvent(_MainFun,_SlaveFun,_var)
{
  if (not NullVipRef(#_var))
  {
    BindEvent(#_MainFun, #_var.#_SlaveFun);
  }
  else
  {
    Message('BindEvent NullVipRef!!! #_var');
  }
}
#end //mBindEvent
//------------------------------------------------------------------------------
#undef mUnBindEvent
#declare mUnBindEvent(_MainFun,_SlaveFun,_var)
{
  if (not NullVipRef(#_var))
  {
    UnBindEvent(#_MainFun, #_var.#_SlaveFun);
  }
  else
  {
    //FpLog('UnBindEvent NullVipRef!!! #_var');
  }
}
#end //mUnBindEvent

//------------------------------------------------------------------------------
#undef mFreeVipInterface
#declare mFreeVipInterface(_var)
{
  if (not NullVipRef(#_var))
  { // никаких _try блоков делать нельзя,
    // иначе возникают ошибки типа:
    // "Окно в нестабильном состоянии..."
    FreeVipInterface(#_var);
  }
}
#end //mFreeVipInterface
//------------------------------------------------------------------------------
#undef mFreeCrossVipRef
#declare mFreeCrossVipRef(_var)
{
  if (not NullVipRef(#_var))
  {
    #(_var).FreeCrossVipRef;
    FreeVipInterface(#_var);
  }
}
#end //mFreeCrossVipRef

//------------------------------------------------------------------------------
// TABSHEET
//------------------------------------------------------------------------------
#undef mSetFormatEnabled
#declare mSetFormatEnabled(_IDPanel,_Enabled)
{
  if (GetFormatEnabled(#_IDPanel) <> #_Enabled)  SetFormatEnabled(#_IDPanel, #_Enabled);
}
#end //mSetFormatEnabled

//------------------------------------------------------------------------------
// BOUNDS
//------------------------------------------------------------------------------
#undef mAddBounds
#declare mAddBounds(_bound)
{
  if (not BoundActive(#_bound) )
    AddBounds(#_bound);  
}
#end //mAddBounds
//------------------------------------------------------------------------------
#undef mSubBounds
#declare mSubBounds(_bound)
{
  if (BoundActive(#_bound) )
    SubBounds(#_bound);  
}
#end //mSubBounds

//------------------------------------------------------------------------------
// DSK
//------------------------------------------------------------------------------
#undef mReadMyDsk
#declare mReadMyDsk(_Value,_ValueStr,_ValueDef)
{
  var isError: boolean;
  if (not ReadMyDsk(#_Value, #_ValueStr, isError))
    #_Value := #_ValueDef;
}
#end //mReadMyDsk
//------------------------------------------------------------------------------
#undef mSaveMyDsk
#declare mSaveMyDsk(_Value,_ValueStr,_ValueDef)
  SaveMyDsk(#_Value, #_ValueStr);
#end //mSaveMyDsk


//------------------------------------------------------------------------------
// HELPANDSTATUS
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
#undef mSetStatus
#declare mSetStatus(_Browser,_Status)
{
  SetHelpAndStatusContext(#_Browser, -1, #_Status, hcKeepCurrent)
}
#end //mSetStatus
//------------------------------------------------------------------------------
#undef mSetHelp
#declare mSetHelp(_Browser,_Help)
{
  SetHelpAndStatusContext(#_Browser, -1, -1, #_Help)
}
#end //mSetHelp
//------------------------------------------------------------------------------
#undef mSetHelpAndStatusContext
#declare mSetHelpAndStatusContext(_Browser,_Fld,_Status,_Help)
{
  SetHelpAndStatusContext(#_Browser, #_Fld, #_Status, #_Help)
}
#end //mSetHelpAndStatusContext

//------------------------------------------------------------------------------
// FIELDS OPTION
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
#undef mMyShowFld
#declare mMyShowFld(_Fld)
{
  SetFieldState  (#_Fld, sfVisible);
  ShowLabel4Field(#_Fld);
}
#end //mMyShowFld
//------------------------------------------------------------------------------
#undef mMyHideFld
#declare mMyHideFld(_Fld)
{
  HideLabel4Field(#_Fld);
  ClearFieldState(#_Fld, sfVisible);
}
#end //mMyHideFld
//------------------------------------------------------------------------------
#undef mMyVisibleFldLabel
#declare mMyVisibleFldLabel(_Fld,_Visible)
{
  if (#_Visible)
  {
    SetFieldState  (#_Fld, sfVisible);
    ShowLabel4Field(#_Fld);
  }
  else
  {
    HideLabel4Field(#_Fld);
    ClearFieldState(#_Fld, sfVisible);
  }
}
#end //mMyVisibleFldLabel
//------------------------------------------------------------------------------
#undef mMySelectableFld
#declare mMySelectableFld(_Fld,_Selectable)
  if (#_SelecTable)
  { SetFieldOption  (#_Fld, ofSelecTable); }
  else
  { ClearFieldOption(#_Fld, ofSelecTable); }
#end //mMySelectableFld
//------------------------------------------------------------------------------
#undef mMyProtectableFld
#declare mMyProtectableFld(_Fld,_Protectable)
  if (#_Protectable)
  { SetFieldOption  (#_Fld, ofProtected); }
  else
  { ClearFieldOption(#_Fld, ofProtected); }
#end //mMyProtectableFld
//------------------------------------------------------------------------------
#undef mMyVisibleFld
#declare mMyVisibleFld(_Fld,_Visible)
{
  if (#_Visible)
  { SetFieldState  (#_Fld, sfVisible);  }
  else
  { ClearFieldState(#_Fld, sfVisible);  }
}
#end //mMyVisibleFld

//------------------------------------------------------------------------------
#undef mMySelecTableCommand
#declare mMySelecTableCommand(_Command,_Selectable)
{
  if (#_SelecTable)
  { EnableCommand (#_Command); }
  else
  { DisableCommand(#_Command); }
}
#end //mMySelecTableCommand

//------------------------------------------------------------------------------
// LOG
//------------------------------------------------------------------------------
#undef Var
#declare Var(_Var)
''#13''+' #_Var='+string(#_Var)
#end //Var
//------------------------------------------------------------------------------
#undef mObjLog
#ifdef  __FpTestObjLog__
  #declare mObjLog(_s)
  { FpLog(#(__InterfaceName__)+':'+#_s); }
  #end //mObjLog
#else// __FpTestObjLog__
  #declare mObjLog(_s)
  { }
  #end //mObjLog
#endif//__FpTestObjLog__

//------------------------------------------------------------------------------
// PROFILER
//------------------------------------------------------------------------------
#undef mEnableProfiler
#undef mDisableProfiler
#undef mAddArea
#undef mCloseArea
#ifdef  PROFILER
  #declare mEnableProfiler(_Num,_File)
  { EnableProfiler(#(_Num),#(_File)); }
  #end //mEnableProfiler

  #declare mDisableProfiler
  { DisableProfiler; }
  #end //mDisableProfiler

  #declare mAddArea(_Num,_Name)
  { AddArea(#(_Num),#(_Name)); }
  #end //mAddArea

  #declare mCloseArea(_Num)
  { CloseArea(#(_Num)); }
  #end //mCloseArea
#else //PROFILER
  #declare mEnableProfiler(_Num,_File)
  { }
  #end //mEnableProfiler

  #declare mDisableProfiler
  { }
  #end //mDisableProfiler

  #declare mAddArea(_Num,_Name)
  { }
  #end //mAddArea

  #declare mCloseArea(_Num)
  { }
  #end //mCloseArea
#endif//PROFILER


//------------------------------------------------------------------------------
// SINGLELINE
//------------------------------------------------------------------------------
#undef  mSingleLine
#ifdef  ATL51
  #define mSingleLine ,[SingleLine]
#else //ATL51
  #define mSingleLine
#endif//ATL51


//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
#endif  // _Fp_Macro_VPP_


