//------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Галактика 5.80 - модуль "Платежный календарь"
// Множественные фильтры - UserDeskRep
//------------------------------------------------------------------------------

#ifndef __FILTER_UDR_VPP__
#define __FILTER_UDR_VPP__

#define __Hide_CountPickRep__

#include PMarker.vpp    // работа с PickRep по текущей UserDeskRep.nRec

#undef __Hide_CountPickRep__

//******************************************************************************
#include ofpMacro.vpp // mIsFlag

// -----------------------------------------------------------------------------
Function Filter_isFlag(n: word): boolean;
{
  Filter_isFlag := #mIsFlag(UserDeskRep.ResWord[1], n);
}

// -----------------------------------------------------------------------------
// если флагов больше 16
Function Filter_isFlag2 (n: word): Boolean;
{
  Filter_isFlag2 := #mIsFlag(UserDeskRep.ResWord[4], n - 16);
}

// -----------------------------------------------------------------------------
// значения фильтров
Function Filter_GetWord(_nFilter: word): word;
{
  Filter_GetWord := UserDeskRep.ResWord[20+_nFilter];
}

// -----------------------------------------------------------------------------
Function Filter_GetComp(_nFilter: word): comp;
{
  Filter_GetComp := UserDeskRep.ResComp[20+_nFilter];
}

// -----------------------------------------------------------------------------
Function Filter_SetWord(_nFilter: word; _Value: word) : boolean;
{
  Filter_SetWord := True;
  set UserDeskRep.ResWord[20+_nFilter] := _Value;
}

// -----------------------------------------------------------------------------
Function Filter_SetComp(_nFilter: word; _Value: comp) : boolean;
{
  Filter_SetComp := True;
  set UserDeskRep.ResComp[20+_nFilter] := _Value;
}

// -----------------------------------------------------------------------------
Function Filter_Clear( _FltPos: word) : boolean;
{
  Filter_Clear := True;
  DelPickRep(     _FltPos); // работает с тек.UserDeskRep.nRec
  Filter_SetWord( _FltPos, 0);
  Filter_SetComp( _FltPos, 0);
}

// -----------------------------------------------------------------------------
// маркер с множ.выбором - в таблицу PickRep с кодом nReport
Function MyMarker2PickRep(_MarkerName: string; _nFilter: word) : boolean;
var
  tmpWord: TNumPick;
  tmpComp: comp;
{
  MyMarker2PickRep := True;
  // использует тек. UserDeskRep.nRec
  // очистим PickRep
  DelPickRep(_nFilter);
  // скопируем
  Marker2PickRep(_MarkerName, _nFilter, tmpComp, tmpWord);
  // просто чтобы обновилось поле
  set UserDeskRep.ResComp[20+_nFilter] := tmpComp;
  set UserDeskRep.ResWord[20+_nFilter] := tmpWord;
}

// -----------------------------------------------------------------------------
Function MyPick2PickRep(_CodeSource: word; _nFilter: word) : boolean;
var
  tmpWord: TNumPick;
  tmpComp: comp;
{
  MyPick2PickRep := True;
  // использует тек. UserDeskRep.nRec
  // очистим PickRep
  DelPickRep(_nFilter);
  // скопируем
  Pick2PickRep(_CodeSource, _nFilter, tmpComp, tmpWord);
  // просто чтобы обновилось поле
  set UserDeskRep.ResComp[20+_nFilter] := tmpComp;
  set UserDeskRep.ResWord[20+_nFilter] := tmpWord;
}

// добавляет также ноль
Function MyPick2PickRepEx(_CodeSource: word; _nFilter: word) : boolean;
var
  tmpWord: TNumPick;
  tmpComp: comp;
{
  MyPick2PickRepEx := True;
  // использует тек. UserDeskRep.nRec
  // очистим PickRep
  DelPickRep(_nFilter);
  // скопируем
  Pick2PickRepEx(_CodeSource, _nFilter, tmpComp, tmpWord);
  // просто чтобы обновилось поле
  set UserDeskRep.ResComp[20+_nFilter] := tmpComp;
  set UserDeskRep.ResWord[20+_nFilter] := tmpWord;
}

// наоборот
Function MyPickRep2Marker(_MarkerName: string; _nFilter: word) : boolean;
{
  MyPickRep2Marker := True;
  // использует тек. UserDeskRep.nRec
  // скопируем
  PickRep2Marker(_MarkerName, _nFilter,
                 UserDeskRep.ResComp[20+_nFilter]);
}

Function MyPickRep2Pick(_CodeDest: word; _nFilter: word) : boolean;
{
  MyPickRep2Pick := True;
  // использует тек. UserDeskRep.nRec
  // очистим PickRep
  DelPick(_CodeDest);
  // скопируем
  PickRep2Pick(_nFilter, _CodeDest,
               UserDeskRep.ResComp[20+_nFilter]);
}

// чтобы потом сработала MyPickRep2Marker
Function MarkerCompToMarkerWord(_sMarkComp: string; _sMarkWord: string) : boolean;
var
  markWord, markComp: longint;
  valueWord: word;
  valueComp: comp;
{ // считаем, что comp помещается в word
  MarkerCompToMarkerWord := True;
  markComp := InitMarker(_sMarkComp,8,100,5);
  markWord := InitMarker('',2,100,5);
  while GetMarker(markComp, 0, valueComp)
  {
    valueWord := comp(valueComp);
    InsertMarker(markWord, valueWord);
    AtDeleteMarker(markComp, 0);
  }
  DoneMarker(markWord, _sMarkWord);
  // а этот не сохраняем
  DoneMarker(markComp, '');
}

// чтобы потом сработала Marker2PickRep
Function MarkerWordToMarkerComp(_sMarkWord: string; _sMarkComp: string) : boolean;
var
  markWord, markComp: longint;
  valueWord: word;
  valueComp: comp;
{
  MarkerWordToMarkerComp := True;
  markWord := InitMarker(_sMarkWord,2,100,5);
  markComp := InitMarker('',8,100,5);
  while GetMarker(markWord, 0, valueWord)
  {
    valueComp := comp(valueWord);
    InsertMarker(markComp, valueComp);
    AtDeleteMarker(markWord, 0);
  }
  DoneMarker(markComp, _sMarkComp);
  // а этот не сохраняем
  DoneMarker(markWord, '');
}

//******************************************************************************
#end //__FILTER_UDR_VPP__
