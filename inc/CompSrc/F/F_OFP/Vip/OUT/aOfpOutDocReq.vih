//------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Галактика 8.10 - модуль "Платежный календарь"
// Интерфейс взаимодействия: "Заявки модуля платежный календарь"
//------------------------------------------------------------------------------

#ifndef __aOfpOutDocReq_VIH__
#define __aOfpOutDocReq_VIH__

//------------------------------------------------------------------------------
#component "F_OFP"

//------------------------------------------------------------------------------
#include ofptypes.vpp
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
#doc
Интерфейс взаимодействия: "Заявки модуля платежный календарь"
#end
ObjInterface objOfpOutDocReq;

  ///////////////////////////////// ERROR //////////////////////////////////////
  #doc
  Описание послежней ошибки выполнения
  #end
  Function GetLastError(Var _LastError: TLastError ): Boolean;

  ///////////////////// СВЯЗЬ С ФИНПЛАНИРОВАНИЕМ ///////////////////////////////
  #doc
  Просмотр бюджета по заявке
  #end
  Function DocReq_SeeBudget(bufDocReq: TDocReq): boolean;
  #doc
  Просмотр/редактирование (_regim) привязки к сатьям
  #end
  Procedure DocReq_EditStBud(_regim: word; bufDocReq: TDocReq);
  #doc
  Заполнение по аналитике соответствующего поля в буфере заявки
  #end
  Function DocReq_SetAnalitikToBuf(var bufDocReq: TDocReq; _wKau: word; _cKau: comp): boolean;
  #doc
  Аналитика только данного документа
  #end
  Function DocReq_GetDocAnaliticByBuf(bufDocReq: TDocReq; var _contId: longint): boolean;
  #doc
  Заполнение контейнера аналитик по буферу Заявки
  #end
  Function DocReq_GetAnaliticByBuf(bufDocReq: TDocReq; var _contId: longint): boolean;

  ////////////////////// РАЗЛИЧНЫЕ НАЗВАНИЯ ////////////////////////////////////
  #doc
  Название периода
  #end
  Function DocReq_GetPeriodName(n: word): string;
  #doc
  Название заявки для отображения в иерархии
  #end
  Function DocReq_GetName(_NoDoc: string; _DocType: word): string;
  #doc
  То же - по буферу
  #end
  Function DocReq_GetNameByBuf(bufDocReq: TDocReq): string;
  #doc
  То же по nRec
  #end
  Function DocReq_GetNameRec(_cDocReq: comp): string;
  #doc
  Название заявки
  #end
  Function DocReq_GetNameType(_DocType: word): string;
  #doc
  Название группы отчетов
  #end
  Function DocReq_GetNameReport(_DocType, _Modul: word): string;
  #doc
  Название модуля, из которого сформирована Заявка на р.средств
  #end
  Function DocReq_GetNameRecType(_RecType: word): string;
  #doc
  Заголовок окна ред. Заявки на расходование средств
  #end
  Function DocReq_CheckTitle(_isFromOfp: boolean; _Modul: word; _DocType: word; var retTitle: string): boolean;

  /////////////////////// РАЗЛИЧНЫЕ АТРИБУТЫ ///////////////////////////////////
  #doc
  Тип заявки по умолчанию
  #end
  Function DocReq_GetDefDocType(_Direct: word): word;
  #doc
  Направление денег для заявок
  #end
  Function DocReq_GetDirect(_DocType: word): word;
  #doc
  В заявке можно указать ПС
  #end
  Function DocReq_HasPlatMean(_DocType: word): boolean;
  #doc
  Тип ПС
  #end
  Function DocReq_GetMeanType(_DocType: word; _cRec: comp): word;
  #doc
  ПС
  #end
  Function DocReq_GetPlatMean(_DocType: word; _cRec: comp): comp;
  #doc
  Периодическая или обычная
  #end
  Function DocReq_isPrd(_DocType: word): word;
  #doc
  Можно ли формировать ФО по заявке
  #end
  Function DocReq_CanMakeFO(bufDocReq: TDocReq; _NeedMessage: word): boolean;

  ///////////////////// СОЗДАНИЕ И УДАЛЕНИЕ ////////////////////////////////////
  #doc
  Обновление SoprHoz (для ТФО - разноски по статьям бюджета)
  #end
  Function DocReq_MakeSoprHoz(bufDocReq: TDocReq): boolean;
  #doc
  Сразу после добавления любой записи
  #end
  Function DocReq_AfterInsert(bufDocReq: TDocReq): boolean;
  #doc
  Заполение буфера
  #end
  Procedure DocReq_Fill(var bufDocReq: TDocReq; _DocType: word);
  #doc
  Можно ли удалять ФО (с сообщением или без)
  #end
  Function DocReq_CheckDelete(bufDocReq: TDocReq; _NeedMessage: boolean): boolean;
  #doc
  Удаление ук.заявки (c сообщением)
  #end
  public Function DocReq_Delete_Eval_01(_cDocReq: comp; _isMessage: word): boolean;
  #doc
  Удаление ук.заявки (без сообщения)
  #end
  Function DocReq_Delete(_cDocReq: comp): boolean;

  //////////////////////// РАЗЛИЧНЫЕ ОПЕРАЦИИ //////////////////////////////////
  #doc
  Количество ФО, которые будут сформированы по такой заявке
  #end
  Function DocReq_PeriodNumFO(_dBegPlat: date; _dEndPlat: date; _wPeriod: word; _DaysOffset: word): longint;
  #doc
  Формирование ФО по Периодической заявке
  #end
  Function DocReq_PeriodMakeFO(_cDocReq: comp; _dBegPeriod: date; _dEndPeriod: date; _Replace: word): boolean;
  #doc
  Формирование ФО (настройка, что делать с существующими ФО)
  #end
  Function DocReq_MakeFO(_cDocReq: comp; _tuneExFo: word; _markCount: longint; var _UserCase: word): boolean;
  #doc
  Изменение статуса
  #end
  Function DocReq_SetStatus(_cDocReq: comp; _New_Status: word; _New_cNote: comp; _comment: string[80]): boolean;
  #doc
  Изменение приоритета
  #end
  Function DocReq_SetPrior(_cDocReq: comp; _NewPrior: word): boolean;
  #doc
  Перенос планируемой даты оплаты
  #end
  Function RecChangeDatePlat(_cDocReq: comp; dateBeg, dateEnd: date): boolean;
End;

//------------------------------------------------------------------------------
VipInterface iOfpOutDocReq implements objOfpOutDocReq
  Licensed(Free);
Public:
  Constructor Init;
  Destructor  Done;
End;

#end //__aOfpOutDocReq_VIH__
