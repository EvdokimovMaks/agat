/*
 ╔═══════════════════════════════════════════════════════════════════════════╗
 ║                     (c) 1994,2003 корпорация ГАЛАКТИКА                    ║
 ║ Проект        : ГАЛАКТИКА                                                 ║
 ║ Система       : Основные средства                                         ║
 ║ Версия        : 5.8                                                       ║
 ║ Назначение    : Процедуры по изменению отчетного периода                  ║
 ╚═══════════════════════════════════════════════════════════════════════════╝
*/
#ifndef __OTCHPER_VIH__
#define __OTCHPER_VIH__

#include NeedRights.vih

#ifdef ComponentVersion
#Component "F_OSOper"
#end

// Параметры перехода на следующий и на предыдущий период
type TNextPerPar = record
  bKatRestoreExClass : boolean; // восстановление внешней классификации из архива
  bKatDelExClass     : boolean; // удаление внешней классификации при отсутствии в архиве
  bRecalcHierar      : boolean; // пересчет сумм всех сложных объектов
  wProtCalc_Amort    : word;       // Признак формирования протокола при расчете/отмене амортизации (0-нет, 1-только ошибки, 2-полный)
end;

#doc
  Базовые функции перехода между отчетными периодами по одной карточке
#end
// --------------------------------------------------------------------
// В случае иерархических объектов ОС:
// * При переходе на следующий период обязательно необходимо до обработки
//   вложенных объектов обработать их вышестоящие.
// * При переходе на предыдущий периода необходимо сначала обрабатывать
//   вложенные объекты, а потом их вышестоящие. Причем подчиненность
//   необходимо определять по состоянию на тот период на который откатываемся.
// Данные ограничения обусловлены необходимостью установления связей между
// записями разного уровня иерархии в архиве (при переходе вперед) и в
// картотеке (при откате назад).
//

//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
ObjInterface oOtchPerCore;
#doc
  Инициализация процесса перехода на следующий период
#end
  function  StartNextProcess : boolean;
#doc
  Установка параметров перехода на следующий период
#end
  procedure SetNextParam( pParams : TNextPerPar );
#doc
  Перевод карточки на следующий период</brief> (pdPeriod - не используется)
#end
  function  NextPeriod( pcKatOsNRec : comp; pdPeriod : date ) : boolean;
#doc
  Закрытие процесса перехода на следующий период
#end
  function  FinishNextProcess : boolean;
#doc
  Инициализация процесса возврата к предыдущему периоду
#end
  function  StartPrevProcess (_dEndPrevPer: date): boolean;
#doc
  Откат к предыдущему периоду
#end
  function  PrevPeriod( pcKatOsNRec : comp; pdPeriod : date ) : boolean;
#doc
  Закрытие процесса возврата
#end
  function  FinishPrevProcess : boolean;
#doc
  Количество встреченных записей (от момента вызова StartXXXXProcess)
#end
  function GetAllRecCount : LongInt;
#doc
  Количество полностью обработанных записей (от момента вызова StartXXXXProcess)
#end
  function GetProcessedRecCount : LongInt;
#doc
  Флаг обнаружения ошибок при обработке данных
#end
  function FoundErrors : boolean;
#doc
  Отображение протокола об ошибках
#end
  procedure ShowErrReport(In_bNeedShowReport : boolean);
#doc
  Установить тип обрабатываемых объектов (ОС/НМА)
#end
  Procedure SetTiDk(pwTiDk: word);

#doc
 Переход на следующий период для выбранных карточки ОС/НМА используя DSQL
#end
function NextPeriodPick (_TiDk: word; _OtchPer: date; _wMode: word) : boolean;

function RunBefoNextPeriod (_TiDk: word; _OtchPer: date; _KolIk: LongInt) : boolean;

function RunAfterPrevPeriod ( ) : boolean;

end;

//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
#doc
Функции перехода между отчетными периодами
#end
ObjInterface oOtchPer;
#doc
  Переход на следующий период
#end
  function NextPeriod : boolean;
#doc
  Откат к предыдущему периоду
#end
  function PrevPeriod : boolean;
#doc
  Установить тип обрабатываемых объектов (ОС/НМА)
#end
  Procedure SetTiDk(pwTiDk: word);
end;

//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
#doc
Функции перехода для модуля ОС и НМА
#end
ObjInterface oOtchPerSilence;
#doc
  Переключение режима без сообщений
#end
  function SetSilentMode( pbSilent : boolean ) : boolean;
end;

//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
#doc
Функции проверки наличия проведённых операций в периоде
#end
ObjInterface oOtchPerOpers;
#doc
  Поиск проведённых операций по всей картотеке
#end
  function FoundProvedOpers(pdPeriod : date //дата, в периоде которой ищем операции
                           ) : boolean;
#doc
  Поиск проведённых операций для определённой карточки в её отчётном периоде
#end
  function FoundIKProvedOpers(pcKatOs   : comp;    //ссылка на инвентарную карточку
                              pbFillTmp : boolean  //нужно ли заносить ссылки на операцию в таблицу в памяти
                             ) : boolean;
#doc
  Отображает окно со списком проведённых операций</brief><br>
  (предварительно надо вызывать FoundIKProvedOpers для заполнения этого окна)
#end
  procedure ShowProvedOpers;
end;

//==============================================================================
//------------------------------------------------------------------------------
VipInterface OtchPerCore   Implements oOtchPerCore, oCheckRights    Licensed   (Free);

//------------------------------------------------------------------------------
// Функции перехода для модуля ОС и НМА
VipInterface OtchPerOS   Implements oOtchPer, oOtchPerSilence   Licensed   (Free);

//------------------------------------------------------------------------------
// Функции перехода по списку инвентарных карточек
VipInterface OtchPerPick   Implements oOtchPer    Licensed   (Free);

//------------------------------------------------------------------------------
// Функции проверки наличия проведённых операций в периоде
VipInterface OtchPerOpers   Implements oOtchPerOpers   Licensed   (Free);


//==============================================================================
// Точки расширенния для каждой ИК.
#doc
Точка расширения. Вызывается перед переводом ИК в следующий отчетный период.
</brief>
 <p> Вызывается из интерфейса OtchPerCore. Вызывается один раз для каждой ИК. <br>
 <p> _cKatOs - ссылка на KatOs. <br>
#end

ExtensionPoint epBeforeNextPeriod (_cKatOs : comp);

#doc
Точка расширения. Вызывается после перевода ИК в следующий отчетный период.
</brief>
 <p> Вызывается из интерфейса OtchPerCore. Вызывается один раз для каждой ИК. <br>
 <p> _cKatOs - ссылка на KatOs. <br>
#end
ExtensionPoint epAfterNextPeriod (_cKatOs : comp);

#doc
Точка расширения. Вызывается перед переводом ИК в предыдущий отчетный период.
</brief>
 <p> Вызывается из интерфейса OtchPerCore. Вызывается один раз для каждой ИК. <br>
 <p> _cKatOs - ссылка на KatOs. <br>
#end
ExtensionPoint epBeforePrevPeriod (_cKatOs : comp);

#doc
Точка расширения. Вызывается после перевода ИК в предыдущий отчетный период.
</brief>
 <p> Вызывается из интерфейса OtchPerCore. Вызывается один раз для каждой ИК. <br>
 <p> _cKatOs - ссылка на KatOs. <br>
#end
ExtensionPoint epAfterPrevPeriod (_cKatOs : comp);


//==============================================================================
// Точки расширенния для всех ИК.
#doc
Точка расширения. Вызывается перед переводом всех ИК в следующий отчетный период.
</brief>
 <p> Вызывается из интерфейса OtchPer (Администратор\Новый месяц) и OtchPerPick (из карттеки).
     Вызывается один раза для всех ИК.  <br>
 <p> _wList - код выбранных ИК, для Pick.wlist (27). Если _wList=0, то вызов из OtchPer (Администратор\Новый месяц). <br>
#end

ExtensionPoint epBeforeNextPeriodPick (_wList : word);

#doc
Точка расширения. Вызывается после перехода всех ИК в следующий отчетный период.
</brief>
 <p> Вызывается из интерфейса OtchPer (Администратор\Новый месяц) и OtchPerPick (из карттеки).
     Вызывается один раза для всех ИК.  <br>
 <p> _wList - код выбранных ИК, для Pick.wlist (27). Если _wList=0, то вызов из OtchPer (Администратор\Новый месяц). <br>
#end

ExtensionPoint epAfterNextPeriodPick (_wList : word);

#doc
Точка расширения. Вызывается перед переводом всех ИК в предыдущий отчетный период.
</brief>
 <p> Вызывается из интерфейса OtchPer (Администратор\Возврат) и OtchPerPick (из карттеки).
     Вызывается один раза для всех ИК.  <br>
 <p> _wList - код выбранных ИК, для Pick.wlist (27). Если _wList=0, то вызов из OtchPer (Администратор\Возврат). <br>
#end

ExtensionPoint epBeforePrevPeriodPick (_wList : word);

#doc
Точка расширения. Вызывается после перевода всех ИК в предыдущий отчетный период.
</brief>
 <p> Вызывается из интерфейса OtchPer (Администратор\Возврат) и OtchPerPick (из карттеки).
     Вызывается один раза для всех ИК.  <br>
 <p> _wList - код выбранных ИК, для Pick.wlist (27). Если _wList=0, то вызов из OtchPer (Администратор\Возврат). <br>
#end

ExtensionPoint epAfterPrevPeriodPick (_wList : word);


#end // __OTCHPER_VIH__
