.LinkForm 'AktPeremNMA' Prototype is 'OSONE'
.NameInList '[ВСМН] Акт приема-передачи нематериального актива'
.F 'NUL'
.group 'Внутреннее перемещение НМА <<ВСМН>>'
.var
  iRow : word;
  iFeeSigners : FeeSigners;
  iLvar : iLvarToString;
  Массив_Член_комиссии_ФИО: ARRAY [1..2] of String;
  Массив_Член_комиссии_Должность: ARRAY [1..2] of String;
  Номер_подписанта:Word;
  barcode : string;
  iLastHeadRow : integer;
.endvar
.create view n
as select
 *
from
 MoveOS
where
((
  MoveOS.COSNOV   == KlassOS.nrec
 ))
;
.{ // Начало формы
.begin
  xlKillExcel;
  xlDisplayAlerts(false);
  xlCreateExcelWithTemplate(TranslatePath('%ClientStartPath%')+'\XLS\F_OSOper\AktPeremNMA.xlt',true);

  if (xlIsExcelValid)
  {
    barcode :=  Ean13ToEanGnivcTTF(GenerateBarCodeEx (coMoveOs, MoveOsNRec));
    xlSetCellStringValue(barcode, 1/*Row*/, 1/*Col*/,1 ,1);
    xlSetCellStringValue('     АКТ № '+Номер_документа+' от ' +DateToStr(Дата_документа, '" DD " mon YYYYг.'), 6, 5, 6 ,5);
    //xlSetCellStringValue(Поставщик, 11/*Row*/, 6/*Col*/,11 ,5);
    xlSetCellStringValue(Структурное_подразделение_Поставщика, 11/*Row*/, 6/*Col*/,11 ,6);
    xlSetCellStringValue(ПОСТАВЩИК_ОКПО, 11, 13, 11, 13);
    //xlSetCellStringValue(Получатель,13/*Row*/, 6/*Col*/,13 ,6);
    xlSetCellStringValue(Структурное_подразделение_Получателя, 13/*Row*/, 6/*Col*/,13 ,6);
    xlSetCellStringValue(Получатель_ОКПО, 13, 13, 13, 13);
    // Характеристика
    iRow := 16;

    var r : word;
    var s : string;
    r:=0;

    if iLvar.InitAllMemo(Comp(KatOSNrec), 3000, 0)
    while (iLVar.GetMemoStr(S))
    {
      r++;
      if r = 1
        xlSetCellStringValue(s, iRow, 5 ,iRow ,5);
      else
      {
        iRow++;
        xlInsertRange(-4121/*xlShiftDown*/ , iRow, 1,iRow, 15);
        xlMergeCells(iRow, 1, iRow, 9);
        xlFrameCells(xlBorderB, xlThin, 1, 1, iRow, 1, iRow, 9);
        xlSetCellStringValue(s, iRow, 1 ,iRow ,1);
      }
    }

    iRow:=iRow + 2;

    If n.GetFirst MoveOS where ((comp(MoveOsNRec) == MoveOS.Nrec))= tsOk
      If n.GetFirst KlassOS = tsOk
        xlSetCellStringValue(KlassOs.Name, iRow, 6, iRow, 6);
  }
end.
.{CheckEnter FEESIGNERSMEMBER_OSONE
.}
.{CheckEnter FEESIGNERSRESPONSIBLE_OSONE
.}
.{CheckEnter OS_OBOROT
.}
.{CheckEnter OS_LEAFS
.}
.{CheckEnter OS_SOSTAV
.}
.{CheckEnter OS_NALDRAG
.}
.{CheckEnter OS_AKTUSL
.}
.begin
  // Установить ширину заголовка таблицы
  iLastHeadRow := iRow+4; //5
  xlSetRowHeight(50, iRow+5/*Row*/, 13/*Col*/, iRow+5, 13);
  xlSetRowHeight(38, iRow+6/*Row*/, 13/*Col*/, iRow+6, 13);

  //спецификация
  iRow:=iRow+8;
  xlSetCellNumberValue(Полная_стоимость, iRow, 1/*Col*/,iRow ,1);
  xlSetNumberFormat('#'+xlGetThousandSeparator+ '##0'+xlGetDecimalSeparator+'00',iRow, 1, iRow, 1);

  xlSetCellNumberValue(Срок_полезного_использования, iRow, 3/*Col*/,iRow ,3);
  xlSetCellNumberValue(Новая_сумма_износа,iRow, 5/*Col*/,iRow ,5);
  xlSetCellNumberValue(if (((Новая_сумма_износа = 0) and ((Word(Тип_Операции) <> 4) or (Word(Объект_у_Получателя) = 0))), 0,
                       Round(Полная_стоимость - Новая_сумма_износа,2)) ,iRow, 6/*Col*/,iRow ,6);
  xlSetNumberFormat('#'+xlGetThousandSeparator+ '##0'+xlGetDecimalSeparator+'00',iRow, 3, iRow, 6);

  xlSetCellStringValue(ИмяОС, iRow, 7/*Col*/,iRow ,7);
  xlSetCellStringValue(DateToStr(ДАТА_ПОСТ,'DD.MM.YYYY'), iRow, 8/*Col*/,iRow ,8);
  xlSetCellStringValue(ИнвНомер, iRow, 9/*Col*/,iRow ,9);
  xlWrapText(iRow, 1,iRow, 12);

  iRow:=iRow+9;
  // сдал
  xlSetCellStringValue(МОЛ_ДОЛЖНОСТЬ_ПОСТАВЩИКА, iRow, 1/*Col*/,iRow ,1);
  xlSetCellStringValue(МОЛ_ПОСТАВЩИКА     , iRow, 5/*Col*/,iRow ,5);

  // принял
  xlSetCellStringValue(МОЛ_ДОЛЖНОСТЬ_ПОЛУЧАТЕЛЯ, iRow, 8/*Col*/,iRow ,8);
  xlSetCellStringValue(МОЛ_ПОЛУЧАТЕЛЯ     , iRow, 12/*Col*/,iRow ,12);

  iFeeSigners.InitFeeSigners(7306/*cgReport_Os*/);
  iFeeSigners.FindFeeSignersByNRec(Comp(cFeeSignersNRec));

  // Утверждающее лицо
  if (iFeeSigners.RestrictFeeByRole(2, 'UtvLico'))
    if (iFeeSigners.FeeSignersIsValid)
    {
      xlSetCellStringValue(iFeeSigners.GetSignerPosition(1), 4/*Row*/, 10/*Col*/,4 ,10);
      xlSetCellStringValue(iFeeSigners.GetSignerFIO(13), 7/*Row*/, 12/*Col*/,7 ,12);
    }

   // Бухгалтер
   iRow:= iRow + 4;

  if (iFeeSigners.RestrictFeeByRole(2, 'Bux')) and (iFeeSigners.FeeSignersIsValid)
  {
    iRow:= iRow + 2;
    xlSetCellStringValue(iFeeSigners.GetSignerPosition(1), iRow, 1, iRow,1);
    xlSetCellStringValue(iFeeSigners.GetSignerFIO(1),      iRow, 5, iRow,5);
  }

  iFeeSigners.ClearRestriction;

  var fMacros : string;
  fmacros  := GetStringParameter('Files','TmpFilesDirectory',0)+'AktPeremNMA.bas';
  DeleteFile(Fmacros);
  LogStrToFile(Fmacros, 'Sub Sub1()                         ');
  LogStrToFile(Fmacros, 'Rows("1:'+iLastHeadRow+'").EntireRow.AutoFit    ');
  LogStrToFile(Fmacros, 'End Sub                            ');
  if ( xlImportModule(Fmacros) )
    {
     if not xlRunMacro('Sub1') 
       message('Ошибка запуска макроса AktPeremNMA');
    }
  else
    message ('Ошибка загрузки макроса AktPeremNMA.');


  DeleteFile(Fmacros);
  xlKillExcel;
end.
.} // Конец формы
.endform
