//------------------------------------------------------------------------------
//                                                      (c) Корпорация ГАЛАКТИКА
//------------------------------------------------------------------------------
// Галактика 8.1 - Бухгалтерский контур
// Функции работы с типами документов, входят в TiDkInfo
//------------------------------------------------------------------------------

#ifdef Gal8_1
  #ifdef __TiDkInfoCompile__
    #define __CompileDirPD__
  #end
#else
  #define __CompileDirPD__
#end

#ifNdef __CompileDirPD__
// Раскомментировать, когда разбранчимся с 7.1x
// #warning Нет необходимости больше подключать DirPD.vpp
#else

#ifndef __DIRPD_VPP__
#define __DIRPD_VPP__

#ifNdef __TiDkInfoCompile__
#include DirVeksl.vpp
#end

//*******************************************************************
// продажа, покупка, конверт.валюты (таблица ValutDoc)
Function IsTabValutDoc(wTip: word) : boolean;
{
  case wTip of
    34,35,36 :
     IsTabValutDoc := true;
  else
     IsTabValutDoc := false;
  end;
}
// платежный документ (таблица PlPor)
Function IsPlatDoc(wTip: word) : boolean;
{
  case wTip of
    1..11,17,18,21,22,27,30..33,37,38,39,44,1004,1005,1011,1030,1032,1044 :
     IsPlatDoc := true;
  else
     IsPlatDoc := false;
  end;
}

Function IsFRODoc(wTip: word) : boolean;
!документ финансово-расчетный (из модуля ФРО)
{
  case wTip of
    1..6,10,11,21,22,27,30..33,44,1004,1005,1011,1030,1032,1044 :
     IsFRODoc := true;
  else
     IsFRODoc := false;
  end;
}

Function IsValutDoc(wTip: word) : boolean;
!является ли платежный документ валютным платежным документом
{
  case wTip of
    17,18,27,31,33,44,1044 :
     IsValutDoc := true;
  else
     IsValutDoc := false;
  end;
}

Function IsBankValDoc(wTip: word) : boolean;
!является ли платежный документ валютным банковским документом
{
  case wTip of
    27,31,33,44,1044 :
     IsBankValDoc := true;
  else
     IsBankValDoc := false;
  end;
}

Function IsAnother(wTip: word) : boolean;
!является ли документ сторонним
{
  case wTip of
    2,22,33,39,1004,1005,1011,1030,1032,1044 :  // сторонние документы
     IsAnother := true;
  else                                          // собственные документы
     IsAnother := false;
  end;
}

Function IsDebetDoc(wTip: word) : boolean;
!является ли платежный документ дебетовым, т.е. при создании новой проводки
!по умолчанию будет заполняться счет по дебету :
!АО - 71
!касса - 50
!р/с - 51
!вал. р/с - 52
{
  case wTip of
    2,6,7,11,17,22,30,32,33,39,1004,1005,1044 :
     IsDebetDoc := true;

    3: if wGetTune('FIN.DOC.INCPORDEFDIRECT') = 0 // продажа
         IsDebetDoc := true
       else
         IsDebetDoc := false;
  else
     IsDebetDoc := false;
  end;
}

Function IsKreditDoc(wTip: word) : boolean;
!является ли платежный документ кредитовым, т.е. при создании новой проводки
!по умолчанию будет заполняться счет по кредиту
!АО - 71
!касса - 50
!р/с - 51
!вал. р/с - 52
{
  case wTip of
    1,4,5,8,9,18,21,27,31,37,38,44,1011,1030,1032 :
     IsKreditDoc := true;

    3: if wGetTune('FIN.DOC.INCPORDEFDIRECT') = 1 // закупка
         IsKreditDoc := true
       else
         IsKreditDoc := false
  else
     IsKreditDoc := false;
  end;
}

Function IsKassaDoc(wTip: word) : boolean;
!является ли платежный документ кассовым документом
{
  case wTip of
    7..9,17,18 :
     IsKassaDoc := true;
  else
     IsKassaDoc := false;
  end;
}

Function IsKasOrder(wTip: word) : boolean;
!является ли платежный документ кассовым ордером
{
  case wTip of
    7,8,17,18 :
     IsKasOrder := true;
  else
     IsKasOrder := false;
  end;
}

Function IsNDEKasOrder(wTip: word): boolean;
!является ли платежный документ кассовым ордером
{
  case wTip of
    7,8:
     IsNDEKasOrder := true;
  else
     IsNDEKasOrder := false;
  end;
}

Function IsValKasOrder(wTip: word) : boolean;
!является ли платежный документ валютным кассовым ордером
{
  case wTip of
    17,18 :
     IsValKasOrder := true;
  else
     IsValKasOrder := false;
  end;
}

Function IsKassaPrihod(wTip: word) : boolean;
!является ли документ приходным кассовым документом
{
  case wTip of
    7,17 :
     IsKassaPrihod := true;
  else
     IsKassaPrihod := false;
  end;
}

Function IsKassaRashod(wTip: word) : boolean;
!является ли документ расходным кассовым документом
{
  case wTip of
    8, 18:
     IsKassaRashod := true;
  else
     IsKassaRashod := false;
  end;
}

Function IsOwnBankDoc(wTip: word) : boolean;
!является ли платежный документ собственным банковским документом
{
  case wTip of
    1,3..6,10,11,21,22,27,30,31,32,37,38,39,44 :
     IsOwnBankDoc := true;
  else
     IsOwnBankDoc := false;
  end;
}

Function IsOwnPor(wTip: word) : boolean;
!является ли платежный документ собственным документом-поручением
{
  case wTip of
    1,3,4,5,21,31,37,38,44 :
     IsOwnPor := true;
  else
     IsOwnPor := false;
  end;
}

Function IsAnotherPor(wTip: word) : boolean;
!является ли платежный документ сторонним документом-поручением
{
  case wTip of
    2,22,33,39,1004,1005,1044 :
     IsAnotherPor := true;
  else
     IsAnotherPor := false;
  end;
}

Function IsOwnTreb(wTip: word) : boolean;
!является ли платежный документ собственным документом-требованием
{
  case wTip of
    6,11,30,32 :
     IsOwnTreb := true;
  else
     IsOwnTreb := false;
  end;
}

Function IsAnotherTreb(wTip: word) : boolean;
!является ли платежный документ сторонним документом-требованием
{
  case wTip of
    1011,1030,1032 :
     IsAnotherTreb := true;
  else
     IsAnotherTreb := false;
  end;
}

// является ли документ Авизо
function isAvizoDoc(wTip: word): boolean;
{
  case wTip of
    21,22,38,39 :
      isAvizoDoc := true;
  else
      isAvizoDoc := false;
  end;
}
// является ли финансово-расчетный документ Авизо (в модуле ФРО)
function isAvizoFRODoc(wTip: word): boolean;
{
  case wTip of
    21,22 :
      isAvizoFRODoc := true;
  else
      isAvizoFRODoc := false;
  end;
}
// документ модуля "Ведение налоговых расчетов"
function isTaxesDoc(wTip: word): boolean;
{
  case wTip of
    37,38,39,112,113 :
      isTaxesDoc := true;
  else
      isTaxesDoc := false;
  end;
}
// платежный банковский документ (для привязки ДО)
function IsPlatBank(wTip: word): boolean;
{
  case wTip of
    1..6,11,30..33,44,1004,1005,1011,1030,1032,1044 :
      IsPlatBank := true;
  else
      IsPlatBank := false;
  end;
}

// банковский документ, в котором ведется учет филиалов банков
function IsBankFilialDoc(wTip: word): boolean;
{
  case wTip of
    1..5,11,32,37,44,1004,1005,1011,1032,1044 :
      IsBankFilialDoc := true;
  else
      IsBankFilialDoc := false;
  end;
}

// платежный документ, в котором ведется учет расходов по переводу
function IsChargesDoc(wTip: word): boolean;
{
  case wTip of
    1, 2, 11, 31, 33, 37, 1011:
      IsChargesDoc := true;
  else
      IsChargesDoc := false;
  end;
}

// платежный документ, в котором ведется КПП
function IsKPPDoc(wTip: word): boolean;
{
  case wTip of
    1,2,3 :
      IsKPPDoc := true;
  else
      IsKPPDoc := isTaxesDoc(wTip);
  end;
}

// платежный документ, в котором есть учет валюты расчетов (не ВПП)
// функция используется в F_PlPor\Vip\PL_DIRPL.VPP, L_SoprDoc\vip\Sh_PlPor.Vpp
function IsAccountDoc(wTip: word): boolean;
{
  IsAccountDoc := IsPlatTreb(wTip);
}

// платежные поручения
function IsPP(wTip: word): boolean;
{
  IsPP := (wTip = 1) or (wTip = 2) or (wTip = 37);
}

// платежные поручения из модуля ФРО
function IsFROPP(wTip: word): boolean;
{
  IsFROPP := (wTip = 1) or (wTip = 2);
}

// сторонее ПП
function IsAnotherPP(wTip: word): boolean;
{
  IsAnotherPP := (wTip = 2);
}

// Инкассовое поручение
function IsIncasPor(wTip: word): boolean;
{
  IsIncasPor := (wTip = 3);
}

// Заявление об отказе от акцепта
function IsAcceptRefusal(wTip: word): boolean;
{
  IsAcceptRefusal := (wTip = 5) or (wTip = 1005);
}

// Реестр чеков
function IsChekReg(wTip: word): boolean;
{
  IsChekReg := (wTip = 6);
}

// авансовый отчет
function IsAO(wTip: word): boolean;
{
  IsAO := (wTip = 9);
}

// бухсправка
function IsBuhSpravka(wTip: word): boolean;
{
  IsBuhSpravka := (wTip = 10);
}

// платежное требование-поручение (ПТП)
function IsTrebPor(wTip: word): boolean;
{
  IsTrebPor := (wTip = 11) or (wTip = 1011);
}

// валютный приходный кассовый ордер
Function IsValPKO(wTip: word): boolean;
{
  IsValPKO := (wTip = 17);
}

// валютный расходный кассовый ордер
Function IsValRKO(wTip: word): boolean;
{
  IsValRKO := (wTip = 18);
}

// входящее авизо
function IsVAvizo(wTip: word): boolean;
{
  case wTip of
    22,39 :
      isVAvizo := true;
  else
      isVAvizo := false;
  end;
}

Function IsRaspV(wTip: word) : boolean;
!является ли платежный документ реестром распределения валюты
{
  IsRaspV := (wTip = 27);
}

Function IsRegInvoice(wTip: word) : boolean;
!является ли платежный документ реестром счетов
{
  case wTip of
    30,1030 :
    isRegInvoice := true;
  else
    isRegInvoice := false;
  end;
}

Function IsValPP(wTip: word) : boolean;
!является ли платежный документ валютным платежным поручением
{
  case wTip of
    31,33 :
     IsValPP := true;
  else
     IsValPP := false;
  end;
}

// платежное требование
function IsPlatTreb(wTip: word): boolean;
{
  IsPlatTreb := (wTip = 32) or (wTip = 1032);
}

// валютный аккредитив
function IsValAkkred(wTip: word): boolean;
{
  IsValAkkred := (wTip = 44) or (wTip = 1044);
}

// является ли платежный документ аккредитивом
function IsAkkreditivDoc(wTip: word): boolean;
{
  case wTip of
    4,44,1004,1044 :
    isAkkreditivDoc := true;
  else
    isAkkreditivDoc := false;
  end;
}

// акт взаимозачета
function isVZachet(wTip : word) : boolean;
{
  case wTip of
    70,71 :
    isVZachet := true;
  else
    isVZachet := false;
  end;
}
// акт взаимозачета, но не спецификация
function isVZachetNotSpec(wTip : word) : boolean;
{
  case wTip of
    70 :
    isVZachetNotSpec := true;
  else
    isVZachetNotSpec := false;
  end;
}
// только спецификация акта взаимозачета
function isVZachetSpec(wTip : word) : boolean;
{
  case wTip of
    71 :
    isVZachetSpec := true;
  else
    isVZachetSpec := false;
  end;
}

//Акт зачета авансов
Function isAZA(wTip : word) : boolean;
{
  case wTip of
    770..772 :
    isAZA := true;
  else
    isAZA := false;
  end;
}
// внутренние документы (направление не определено)
function IsInternalDoc(wTip: word): boolean;
{
   if isAvizoDoc(wTip) or isBuhSpravka(wTip)
     IsInternalDoc := true;
   else
     IsInternalDoc := false;
}

//*******************************************************************
// направление PlPor
function GetDocDirect(_TiDkGal: word; _ModeDoc: word): word;
var ret: word;
{
  // не внутренний документ
  if not IsInternalDoc(_TiDkGal)
    ret := if (IsDebetDoc(_TiDkGal), cgDirPrihod, cgDirRashod);
  else
    ret := if ((_ModeDoc and 1024) <> 0, cgDirPrihod,
            if((_ModeDoc and 2048) <> 0, cgDirRashod,
            if((_ModeDoc and 4096) <> 0, cgDirNotDef, cgDirNotDef)));
  GetDocDirect := ret;
}
// направление документов из таблицы ValutDoc, _ForVal - для валюты/рублей
function ValutDoc_GetDirect(_TiDkGal: word; _isForVal: boolean): word;
var ret: word;
{
  case _TiDkGal of
    // покупка
    cgDoc_0034: ret := if (_isForVal, cgDirPrihod, cgDirRashod);
    // продажа
    cgDoc_0035: ret := if (_isForVal, cgDirRashod, cgDirPrihod);
    // конвертация
    cgDoc_0036: ret := cgDirNotDef;
    else ret := cgDirNotDef; // error
  end;
  ValutDoc_GetDirect := ret;
}

// контрагент - получатель
function isKontrPol(wTip: word): boolean;
{
  isKontrPol := IsOwnPor(wTip) or IsAnotherTreb(wTip);
}

//*******************************************************************
// должен ли быть BaseFin для данного типа документа
function NeedBaseFinForType(wTip: word): boolean;
{
  if (wTip = cgDoc_0037)
    NeedBaseFinForType := false;
  else
    if IsPlatDoc(wTip) or isAppVeksDoc(wTip)
      NeedBaseFinForType := true;
    else
      case wTip of
        71, 90..95:
          NeedBaseFinForType := true;
        else
          NeedBaseFinForType := false;
      end;
}

// необходимо ли заполнение поля Платеж за
function NeedPlatNewForType(_TiDkGal: word): boolean;
{
  // плат.пор, вал.п.п., вх.док, вал.вх.док, заявл.на ак-тив, реестр счетов,
  // кассовые документы, АПП векселей/ЦБ
  case _TiDkGal of
    1, 31, 2, 33, 4
!!!D надо определить типы сторонних документов на 7.1
#ifdef GAL7_1
#end
    :
      NeedPlatNewForType := true;
    else
      NeedPlatNewForType :=
         isKassaDoc(_TiDkGal) or isAppVeksDoc(_TiDkGal);
  end;
}

// обязательно должно быть заполнено поле PlPor.DatOb
function NeedDatOb(_TiDkGal: word): boolean;
{
  NeedDatOb := IsVAvizo(_TiDkGal);
}
// есть ли поле Назначение платежа
function NeedNaznForType(_TiDkGal: word): boolean;
{
  if (IsPlatDoc(_TiDkGal) or isVZachet(_TiDkGal)) and
     (not IsRegInvoice(_TiDkGal)) and (not IsChekReg(_TiDkGal))
    NeedNaznForType := true;
  else
    NeedNaznForType := false;
}

// включает ли назначение поле PlPor._field
function NaznHasField(_TiDkGal: word; _field: string): boolean;
var ret: boolean;
{
  // реестр чеков и реестр счетов не содержат поля Назначение
  if IsChekReg(_TiDkGal) or IsRegInvoice(_TiDkGal)
    ret := false;
  else
    case _field of
      // у всех входит в поле Назначение
      'NamePl1': ret := true;
      // у всех входит в поле Назначение
      'NamePl2': ret := true;
      // кроме реестра распр.валюты
      'NamePl3': ret := not IsRaspV(_TiDkGal);
      // кроме реестра распр.валюты и акта взаимозачетов
      'NamePl4': ret := (not IsRaspV(_TiDkGal)) and (not isVZachet(_TiDkGal));
      // кроме кассовых, реестра распр.вал. и акта взаим.
      'PodOtchet':
         ret := (not IsRaspV(_TiDkGal)) and (not isVZachet(_TiDkGal)) and
                (not isKassaDoc(_TiDkGal));
      // кроме вх.плат.док., бух.справ., авизо, р.р.вал и акта взаим.
      'Tax':
         ret := (not IsRaspV(_TiDkGal)) and (not isVZachet(_TiDkGal));
      else ret := false;
    end;
  NaznHasField := ret;
}

// Является ли документ объектом автоподстановки для Плательщика
function IsAutoFitPlat(_TiDkGal: word) : Boolean;
{
  case _TiDkGal of
    2, 7, 17, 22, 30, 33, 1004, 1044:
      IsAutoFitPlat := True;
  else
    IsAutoFitPlat := False;
  end;
}

// Является ли документ объектом автоподстановки для Получателя
function IsAutoFitPol(_TiDkGal: word) : Boolean;
{
  case _TiDkGal of
    1, 4, 8, 18, 21, 31, 44, 1030:
      IsAutoFitPol := True;
  else
    IsAutoFitPol := False;
  end;
}

// в документе отображается дата выбранного курса валюты
Function IsPickRateDateDoc(wTip: word): boolean;
{
  IsPickRateDateDoc := (boGetTune('Fin.Doc.PickRateDate') and (wGetTune('Country') = ccRus)
                        and (IsFROPP(wTip) or IsBuhSpravka(wTip)));
}
//*******************************************************************

#end // __DIRPD_VPP__
#end // __CompileDirPD__
