//------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Галактика 7.12 - Спецоснастка
// Объектный интерфейс к документам спецоснастки
//------------------------------------------------------------------------------

#ifndef _oMBP_Doc_
#define _oMBP_Doc_

#ifdef ComponentVersion
#component "F_MBP"
#end

//-----------------------------------------------------------------------------

#ifndef _T_MBP_Doc_
#define _T_MBP_Doc_

#ifdef ComponentVersionInDict
  public
#end
Type TMBP_Doc = Record As Table MBPMove;

#end

//-----------------------------------------------------------------------------

#doc
Данный интерфейс описывает набор функций для предварительной проверки и модификации
таблицы MBPMove - групповых документов модуля "Спецоснастка".<br>
#end
ObjInterface oMBP_Doc;

//-----------------------------------------------------------------------------
// Тривиальная логика - вставки, модификации, удаления.

#doc
Возвращает название типа документа по его числовому значению.<br>
#end
function GetTypeName( _Status : Word) : String;

#doc
Заполнение буфера записи значениями по умолчанию. Если какие-либо из полей инициализированы
перед вызовом данной процедуры, для них вызываются проверки корректности значений.<br>
#end
procedure SetDeflts( var _Buf : TMBP_Doc; var _cRec1 : TNRec; var _cRec2 : TNRec; _Contx : TCallCtx; var _Response: TBatConf);

#doc
Функция заполняет буфер значениями полей записи, на которую спозиционирован данный
интерфейс. Возвращает NRec спозиционированной записи.<br>
#end
function  GetValues( var _Buf : TMBP_Doc; var _cRec1 : TNRec; var _cRec2 : TNRec  // Буфер, заполняемый значениями полей записи
                   ) : TNRec; // Возвращает значение - для вызова в вычисл. поле с целью отображения в Browse.

#doc
Сравнивает буфер со значением в БД.<br>
#end
function  AnyChanged( _Buf : TMBP_Doc; _cRec1 : TNRec; _cRec2 : TNRec) : Boolean;

#doc
Пересчет зависимых, вычисляемых полей записи.<br>
#end
procedure CalcRecord( var _Buf : TMBP_Doc; var _cRec1 : TNRec; var _cRec2 : TNRec);

// Проверки модифицируемости. В случае отказа от удаления объекта генерируются исключения

#doc
Проверяет возможность модификации записи. В случае отрицательного результата генерируется
исключение.<br>
#end
procedure CanStartChObj( var _Buf : TMBP_Doc; var _cRec1 : TNRec; var _cRec2 : TNRec; _Contx : TCallCtx);

#doc
Запрашивает у пользователя подтверждения в случае неоднозначностей в вопросе возможности
модификации записи. При отказе пользователем от изменения записи генерируется исключение.<br>
#end
procedure CnfStartChObj( var _Buf : TMBP_Doc; var _cRec1 : TNRec; var _cRec2 : TNRec; _Contx : TCallCtx; var _Response: TBatConf);


#doc
Проверяет возможность изменения конкретного поля записи из заданного контекста. Выполняются
как безусловные проверки, так и с запросами подтверждения пользователя. Используется в обработчиках
cmCheckField, cmPick, cmDelOnProtect. В случае отрицательного результата генерируется исключение.<br>
#end
procedure ChkStartChFld( var _Buf : TMBP_Doc; var _cRec1 : TNRec; var _cRec2 : TNRec; _Contx : TCallCtx; var _Response: TBatConf; _FldID : Integer);


#doc
Проверяет допустимость нового ЗНАЧЕНИЯ поля. В случае отрицательного результата генерируется
исключение.<br>
#end
procedure PostCanChFld( var _Buf : TMBP_Doc; var _cRec1 : TNRec; var _cRec2 : TNRec; _Contx : TCallCtx; _FldID : Integer);

#doc
Запрашивает подтверждение у пользователя в случае если допустимость нового ЗНАЧЕНИЯ поля
вызывает сомнения. В случае отрицательного ответа пользователя генерируется исключение.<br>
#end
procedure PostCnfChFld( var _Buf : TMBP_Doc; var _cRec1 : TNRec; var _cRec2 : TNRec; _Contx : TCallCtx; var _Response: TBatConf; _FldID : Integer);

#doc
Представляет собой последовательный вызов двух предыдущих процедур. Используется
при проверках в обработчиках cmCheckField, cmDelOnProtect, cmPick.<br>
#end
procedure PostCheckFld( var _Buf : TMBP_Doc; var _cRec1 : TNRec; var _cRec2 : TNRec; _Contx : TCallCtx; var _Response: TBatConf; _FldID : Integer);

#doc
Выполняет проверки возможности и корректности изменений связанных записей из других
таблиц, которые необходимо выполнить при рассматриваемой модификации записи в таблице
MBPMove. Используется в обработчике cmCheckRecord, а также в процедуре ChkModify().<br>
#end
procedure ChkLinkedObj( var _Buf : TMBP_Doc; var _cRec1 : TNRec; var _cRec2 : TNRec; _Contx : TCallCtx; var _Response: TBatConf);


#doc
Выполняет все перечисленные выше безусловные(CanXXX) проверки возможности изменения и
корректности изменений записи. Используется в ChkModify().<br>
#end
procedure CanChRecord( var _Buf : TMBP_Doc; var _cRec1 : TNRec; var _cRec2 : TNRec; _Contx : TCallCtx);

#doc
Выполняет все перечисленные выше условные(CnfXXX) проверки возможности изменения и
корректности изменений записи. Используется в ChkModify().<br>
#end
procedure CnfChRecord( var _Buf : TMBP_Doc; var _cRec1 : TNRec; var _cRec2 : TNRec; _Contx : TCallCtx; var _Response: TBatConf);

#doc
Проверка возможности модификации объекта С УЧЕТОМ его СВЯЗЕЙ с другими объектами.
Используется для проверок корректности изменения записи при ее модификации алгоритмом
(а не интерактивно с клавитауры), при этом может измениться несколько полей записи сразу.
В будущем планируется реализовать отдельные ветки: CanModify() и CnfModify().<br>
#end
procedure ChkModify( var _Buf  : TMBP_Doc; // Предполагаемое изменение полей объекта
                    var _cRec1 : TNRec;
                    var _cRec2 : TNRec;
                        _Contx : TCallCtx;  // Глубина вложенности вызова, групповая обработка, контекст вызова
                 var _Response : TBatConf   // Накапливает реакцию пользователя на предупреждения
                   );
//-----------------------------------------------------------------------------

#doc
Выполняет вставку новой записи. Производятся необходимые модификации связанных записей.
Никаких проверок корректности изменений внутри не производится, поэтому процедуру необходимо
предварять соответствующим набором процедур проверки, размещенных в одном _try-блоке с ней.
При возникновении проблем с модификацией таблиц внутри процедуры генерируется исключение.<br>
Возвращает значение для позиционирования на новую запись в _Buf.NRec.<br>
#end
procedure InsertObj( var _Buf : TMBP_Doc; var _cRec1 : TNRec; var _cRec2 : TNRec; _Contx : TCallCtx; _Response : TBatConf);

#doc
Выполняет модификацию записи. Производятся необходимые модификации связанных записей.
Никаких проверок корректности изменений внутри не производится, поэтому процедуру необходимо
предварять соответствующим набором процедур проверки, размещенных в одном _try-блоке с ней.
При возникновении проблем с модификацией таблиц внутри процедуры генерируется исключение.<br>
#end
procedure UpdateObj( var _Buf : TMBP_Doc; var _cRec1 : TNRec; var _cRec2 : TNRec; _Contx : TCallCtx; _Response : TBatConf);


#doc
Выполняет все условные(требующие подтверждения пользователя) и безусловные проверки
возможности удаления записи. Анализируются, в том числе, необходимые модификации связанных
записей. В случае отрицательного результата генерируется исключение.<br>
#end
procedure ChkDelete( _Buf : TMBP_Doc; // Для позиционирования
                   _cRec1 : TNRec;
                   _cRec2 : TNRec;
                   _Contx : TCallCtx;  // Глубина вложенности вызова, групповая обработка, контекст вызова
            var _Response : TBatConf   // Накапливает реакцию пользователя на предупреждения
                   );

#doc
Удаляет запись. При необходимости корректируется информация в связанных записях
(удаляются дочерние записи). Никаких дополнительных проверок не выполняется, поэтому
процедуру необходимо предварять вызовом ChkDelete(), размещенным в том же _try-блоке.
При возникновении проблем с модификацией таблиц внутри процедуры генерируется исключение.<br>
#end
procedure DeleteObj( _Buf : TMBP_Doc; _cRec1 : TNRec; _cRec2 : TNRec; _Contx : TCallCtx; _Response : TBatConf);

//-----------------------------------------------------------------------------
// Собственно полезная функциональность

#doc
Корректирует общую сумму и сумму износа по документу _cDoc.<br>
#end
procedure corDoc( _cDoc : Comp; _Sum : Double; _Isn : Double);

#doc
Просматривает строки спецификации документа и перерасчитывает суммы по документу.<br>
#end
procedure cntDoc( _cDoc : Comp; _DelIfEmpty : Boolean);

/*
procedure updDoc( _cDoc : Comp; _Date : Date; _PodrF : Comp; _MolF : Comp;
                  _PodrT: Comp; _MolT : Comp; _Stat : Word);

function  crtDoc( _Date   : Date; var _Num  : String;
                  _PodrF  : Comp; _MolF : Comp;
                  _PodrT  : Comp; _MolT : Comp;
                  _Pers   : Comp; _Stat : Word;
                  _ParDoc : Comp) : Comp;
*/
end;

//-----------------------------------------------------------------------------

VipInterface iMBP_Doc implements oMBP_Doc
#ifdef Atl51
  Licensed ( FREE)
#end
;

//-----------------------------------------------------------------------------

#endif
