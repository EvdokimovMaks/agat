//------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Галактика 5.84 - ФРО и Налоговый учет
// Объектный интерфейс к налоговым регистрам
//------------------------------------------------------------------------------

#ifndef _ObjNalogReg_
#define _ObjNalogReg_

//------------------------------------------------------------------------------
#ifdef ComponentVersion
#Component "F_NalogReg"
#end

//------------------------------------------------------------------------------
// Открывать в клиенте таблицу NalRegDc не обязательно (см. NalRegCl.vip).
// При изменении версии компонента и его словаря описать старую структуру
// TNalRegDoc явно.

#ifdef ComponentVersionInDict
  Public
#end
Type TNalRegDoc = Record As Table NalRegDc;

#doc
Объектный интерфейс для работы с налоговыми регистрами
#end

ObjInterface ObjNalogReg;

//------------------------------------------------------------------------------
// Эмуляция объектных индексов - позиционирование документа
#doc
Позиционирование записи по NRec
#end
Function PosByNRec(pNRec : comp) : comp;

#doc
Позиционирование записи по ссылке на документ
#end
Function PosBySopr(pTiDk : word; pCSopr : comp) : comp;

#doc
Позиционирование записи по дате
#end
Function PosByDate(pTiDk : word; pCalcDate : date) : comp;

#doc
Проверка на существование записи
#end
Function isValidPos : boolean;

#doc
Перерисовка таблиц NalRegDc и NalRegSp
#end
Procedure Refresh;

//------------------------------------------------------------------------------
// Обработка строк спецификации документа
#doc
Добавление строки спецификации
#end
Function InsertSpecRow(pDatOb : date; pSumPr : double) : comp;

#doc
Обновление строки спецификации
#end
Procedure UpdateSpecRow(pDatOb : date; pSumPr : double; pNRec : comp);

#doc
Удаление строки спецификации
#end
Procedure DeleteSpecRow(pNRec : comp);

#doc
Удаление всех строк спецификации
#end
Procedure DeleteAllSpec;

//------------------------------------------------------------------------------
// Тривиальная логика - вставки, изменения, удаления.
// CanXXX предназначены для проверок с запросом подтверждения у пользователя -
// использовать вне транзакции чтобы не удлинять ее. Можно использовать и вне
// try-блока если при запросе подтверждения генерируются исключения препятствующие
// закрытию диалогового окна.
#doc
Заполнение полей по умолчанию
#end
Procedure SetDeflts(var pBuf : TNalRegDoc);

#doc
Получить текущие значения полей
#end
Procedure GetValues(var pBuf : TNalRegDoc);

#doc
Проверка на возможность добавления записи с подтверждением
#end
Function CanInsert(pBuf : TNalRegDoc) : boolean;

#doc
Добавление записи
#end
Function InsertRec(pBuf : TNalRegDoc) : comp;

#doc
Проверка на возможность обновления записи с подтверждением
#end
Function CanUpdate(pBuf : TNalRegDoc) : boolean;

#doc
Обновление записи
#end
Procedure UpdateRec(pBuf : TNalRegDoc);

#doc
Проверка на возможность удаления записи с подтверждением
#end
Function CanDelete : boolean;

#doc
Удаление записи
#end
Procedure DeleteRec;

//------------------------------------------------------------------------------
// Собственно полезная функциональность
#doc
Вычисление и округление значений алгоритма
#end
Function CalcAlgSumPr(var pVal : double) : boolean;

#doc
Различные проверки с подтверждением перед формированием план-графика
#end
Function CanRaspr : boolean;

#doc
Формирование план-графика
#end
Procedure MakeRaspr;

#doc
Расчет суммы по строкам спецификации
#end
Function CalcSpecsSum(var rSum : double) : double;

#doc
Получение названия налогового регистра и названия алгоритма для регистра
#end
Function GetRegTypeName(pTiDk : word; pMode : word) : string;

//------------------------------------------------------------------------------
// Пример получения значения любого поля таблицы на манер ReadOnly cвойства
#doc
Получение значения любого поля таблицы
#end
Function GetAllProps(var pBuf : TNalRegDoc) : comp;
end;

ObjInterface ObjNalogRegEx;

//------------------------------------------------------------------------------
// Собственно полезная функциональность
#doc
Проверяет дату записи на попадание в закрытый период и выдает свое сообщение
#end
Function IsChekRecCloseBuhPeriod(cNRec : comp; Marker : longint; var IsPlanGraf : boolean) : boolean;

end;

ObjInterface ObjNalogRegOperLog;

#doc
Проверяет дату записи на попадание в закрытый период и выдает свое сообщение
#end
Function IsChekRecCloseBuhPeriodLog(cNRec : comp; var ResMesDlg : word; var mess : string) : boolean;

#doc
Различные проверки перед формированием план-графика c выводом сообщений в протокол
#end
Function CanRasprLog(var ResMesDlg:word; var mess : string) : boolean;

end;

#include EditRaspr.vih
//------------------------------------------------------------------------------
VipInterface NalogReg implements ObjNalogReg, ObjNalogRegEx, iObjEditRaspr,ObjNalogRegOperLog
#Licensed_Free;

//------------------------------------------------------------------------------
#endif
