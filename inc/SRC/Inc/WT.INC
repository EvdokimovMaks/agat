//------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Галактика 9.1
// Константы табеля учета рабочего времени
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
// [s]chedule [t]ype
//------------------------------------------------------------------------------
// данные из маски ручной корректировки
stMask = -3;
// нормальный график (для расчета нормы времени при нормализации рабочих
// часов/дней или суммированном учете сверхурочных)
stStandard  = -2;
// балансный график
stBalanced  = -1;
// плановый график
stPlanned   = 0;
// фактический табель
stActual    = 1;

//------------------------------------------------------------------------------
// [h]ours [k]ind
//------------------------------------------------------------------------------
// рабочие часы
hkWorking                     = 1;
// часы работы вечером
hkEvening                     = 2;
// часы работы ночью
hkNight                       = 3;
// часы работы в праздничные дни (за оплату). Сумма hkWorkingHoliday и hkWeekendHoliday.
hkHoliday                     = 4;
// часы работы в выходные (за оплату)
hkWeekend                     = 5;
// сверхурочные
hkOverwork                    = 6;
// остаток сверхурочных
hkOverworkRest                = 7;
// рабочие часы с точки зрения расчета по среднему
hkWorkingForAvgEarnings       = 10;
// часы, за которые можно выплатить аванс
// (рабочие часы в день, считающийся по плану рабочим, плюс часы
// приходящегося на такой день оплачиваемого отклонения)
hkAdvanceable                 = 11;
// оплачиваемые часы
// (рабочие часы плюс часы приходящегося на день оплачиваемого отклонения)
hkPaid                        = 12;
// переработка за период
hkOverworkForPeriod           = 14;
// рабочие часы, переходящие на следующие сутки
hkCarry                       = 17;
// рабочие часы для расчета времени по больничному(учет входимости видов оплат)
hkTimeForSickListEnteringKind = 18;
// средняя продолжительность рабочего дня, часов
hkWorkDayAvgTime              = 20;
// все отработанные часы (без учета настроек "рабочие часы за вычетом...")
hkWholeWorking                = 21;
// часы работы в рабочий по плану праздник
hkWorkingHoliday              = 22;
// часы работы в нерабочий по плану праздник (за оплату)
hkWeekendHoliday              = 23;
// часы отсутствия по уважительной причине
hkAbsenceForValidReason       = 24;
// часы явки
hkAppearance                  = 25;
// часы уменьшающих норму неявок
hkDecreasingStandardTime      = 26;
// часы работы во вредных условиях
// [!] Устаревший вид часов. Опирается только на признак "вредные условия" в отклонениях
hkHarmfulConditions           = 27;
// часы работы в праздник сверх плана
hkOverPlannedHoliday          = 28;
// часы работы по приказу на работу в выходные
hkOrderedWeekendWork          = 29;
// оплачиваемые часы работы по приказу на работу в выходные
hkPaidOrderedWeekendWork      = 30;
// часы работы по приказу на работу в выходные/праздничные за отгул
// сумма hkHolidayForLeave и hkWeekendForLeave
hkOrderedWeekendWorkForLeave  = 13;
// часы работы по приказу на сверхурочную работу за отгул
hkOrderedOvertimeWorkForLeave = 15;
// часы работы по приказу на работу сверхурочно
hkOvertimeWorkOrder           = 31;
//----------- Виды часов с кодом, бОльшим 31. Использовать только в функциях с постфиксом Ex
// часы работы в нормальных условиях труда (с кодом вредности ICOrdinary), и приравнивающиеся к таковым
hkICOrdinary                  = 32;
// часы работы во вредных условиях труда (с кодом вредности ICHarmful), и приравнивающиеся к таковым
hkICHarmful                   = 33;
// часы работы в особо вредных условиях труда (с кодом вредности ICExtraHarmful), и приравнивающиеся к таковым
hkICExtraHarmful              = 34;
// часы работы, принимающие участие в расчетах начислений по доп. тарифам
// (сумма hkICOrdinary, hkICHarmful, hkICExtraHarmful)
hkWorkingForIslbrCalculations = 35;
// сверхурочные, рассчитанные по правилам поденного учета (служебный вид часов)
hkDailyOverhours              = 36;
// сверхурочные, рассчитанные по правилам суммированного учета
// (служебный вид часов, могут быть меньше нуля)
hkSummedOverhours             = 37;
// часы уменьшающих норму неявок, как они выглядят согласно настройкам. Запрашивать для графика stActual
hkActualDecreasingStandTime   = 38;
// часы работы в праздники (нерабочие по плану) за отгул
hkHolidayForLeave             = 39;
// часы работы в выходные за отгул
hkWeekendForLeave             = 40;
// часы работы в нерабочие по плану праздники (как за оплату, так и за отгул)
// сумма hkWeekendHoliday и hkHolidayForLeave
hkWholeWeekendHoliday         = 41;
// часы работы в праздники (и за оплату, и за отгул)
// сумма hkWorkingHoliday, hkWeekendHoliday и hkHolidayForLeave
hkWholeHoliday                = 42;
// часы работы в выходные (и за оплату, и за отгул)
// сумма hkWeekend и hkWeekendForLeave
hkWholeWeekend                = 43;
// граница, до которой - обычные сверхурочные, а после которой - остаток сверхурочных,
// по правилам суммированного учета. Можно считать за произвольный период и сравнивать
// с hkSummedOverhours за этот же период, таким образом остаток сверхурочных вычисляя.
hkSummedOverworkRestBorder    = 44;
// рабочие часы во время отпуска. Появляются только если часы отпуска в этот же день,
// то есть не все часы отпуска съедены рабочими.
hkWorkingWhileVacation        = 45;
// фактически отработанные + часы оплачиваемых командировок, которые в обычном режиме
// не входят в фактически отработанное время
hkWorkingWithBusinessTrips    = 46;
// вредные часы, идущие "в зачёт" для РБ. Равны hkICHarmful, если день по итогу вредный.
// В остальных случаях - ноль
hkCreditedHarmful             = 47;
// "обычные" часы для пары к hkCreditedHarmful. В сумме с hkCreditedHarmful дают hkWorkingForIslbrCalculations
hkCreditedOrdinary            = 48;

//------------------------------------------------------------------------------
// [d]ay [k]ind
//------------------------------------------------------------------------------
dkSpecial               = 1;
// день, считающийся рабочим по закону (зависит от настроек)
dkWorking               = 2;
// праздничный день
dkHoliday               = 3;
// выходной
dkWeekEnd               = 4;
// дни работы сверхурочно
dkOverWork              = 5;
dkOverworkRest          = 6;
// дни работы вечером
dkEvening               = 7;
// дни работы ночью
dkNight                 = 8;
// дни с точки зрения расчета по среднему
dkWorkingForAvgEarnings = 10;
// день, за который можно выплатить аванс
// (рабочий день по плану и либо рабочий день по факту, либо день,
// на который пришлось оплачиваемое отклонение)
dkAdvanceable           = 11;
// оплачиваемый день
// (рабочий день, либо день, на который пришлось оплачиваемое отклонение)
dkPaid                  = 12;
// работа в праздничный день (как в рабочий по плану, так и в нерабочий по плану)
dkWorkingHoliday        = 13;
// работа в выходной день (за оплату)
dkWorkingWeekend        = 14;
// все отработанные дни (без учета настроек "рабочие часы за вычетом...")
dkWholeWorking          = 15;
// дни явки
dkAppearance            = 16;
// нерабочий праздничный день
dkWeekendHoliday        = 17;
// не отброшенный фильтром день
dkEnabled               = 18;
// дни работы во вредных условиях
dkHarmfulConditions     = 19;
// календарные дни работы
dkCalendarWorking             = 20;
// дни работы по приказу на работу в выходные
dkOrderedWeekendWork          = 21;
// дни оплачиваемой работы по приказу на работу в выходные
dkPaidOrderedWeekendWork      = 22;
// дни работы по приказу на работу сверхурочно
dkOrderedOvertimeWork         = 23;
// календарные дни для расчета отпуска
dkCalendarVacation            = 24;
// дни для времени, входящего в расчет больничного
dkTimeForSickListEnteringKind = 25;
// дни работы в выходные/праздничные по приказу, за отгул
dkOrderedWeekendWorkForLeave  = 26;
// дни работы сверхурочно по приказу, за отгул
dkOrderedOvertimeWorkForLeave = 27;
// дни работы в рабочий по плану праздничный день
dkWorkingWorkingHoliday       = 28;
// дни работы в нерабочий по плану праздничный день (за оплату)
dkWorkingWeekendHoliday       = 29;
// дни, отработанные в нормальных условиях труда (с кодом вредности ICOrdinary), и приравнивающиеся к таковым
dkICOrdinary                  = 30;
// дни, отработанные во вредных условиях труда (с кодом вредности ICHarmful), и приравнивающиеся к таковым
dkICHarmful                   = 31;
//----------- Виды дней с кодом, бОльшим 31. Использовать только в функциях с постфиксом Ex
// дни, отработанные в особо вредных условиях труда (с кодом вредности ICExtraHarmful), и приравнивающиеся к таковым
dkICExtraHarmful              = 32;
// дни работы, принимающие участие в расчетах начислений по доп. тарифам
dkWorkingForIslbrCalculations = 33;
// дни, могущие связываться переходящими сменами
dkShiftable                   = 34;
// дни работы в нерабочие по плану праздники за отгул
dkWorkingHolidayForLeave      = 35;
// дни работы в выходные за отгул
dkWorkingWeekendForLeave      = 36;
// дни, считающиеся вредными с точки зрения отпусков за вредные условия труда
dkHarmfulForVacations         = 37;
// дни, в которые положительное кол-во суммированных сверхурочных часов (hkSummedOverhours)
dkWithSummedOverhours         = 38;
// дни, содержащие работу во время отпуска (одновременно рабочие часы и часы отпуска)
dkWorkingWhileVacation        = 39;
// дни, содержащие фактически отработанное время и/или время оплачиваемых командировок
dkWorkingWithBusinessTrips    = 40;
// наличие и больничного и отпуска в один день
dkSchrodingersDay             = 41;
// выходной во время работы во время отпуска
dkWeekendWhileVacation        = 42;

//------------------------------------------------------------------------------
// [c]ontrol [f]lags
//------------------------------------------------------------------------------
// без учета фильтров
cfDisregardFilters      = 128;
// без учета дат приема на работу/увольнения
cfDisregardPeriod       = 64;
cfAllFlags              = 224; // с учетом резервного флажка 32

coWorkingHoursMask    = 1;
coEveningHoursMask    = 2;
coNightHoursMask      = 4;
coDiscountHoliday     = 8;
coDiscountWeekEnd     = 16;
// не считать день работой сверхурочно
coDiscountOverwork    = 32;
// маска праздничных часов
coHolidayHoursMask    = 64;
// ручная корректировка переходящей рабочей смены
coShiftCorrectionMask = 128;
// считать введенные в маске "праздничные часы" рабочими по плану
coHolidayHoursAsWorkingHoliday = 256;
//------------------------------------------------------------------------------
// [a]bsence [t]ype
// типы неявок
//------------------------------------------------------------------------------
// системные
atSystem = 0;
// за месяц
atMonthly = 1;

//------------------------------------------------------------------------------
// [a]bsence [a]ttributes
// атрибуты неявки
//------------------------------------------------------------------------------
// условное обозначение неявки: string
aaMark          = 1;
// дата начала неявки: date;
aaBeginning     = 2;
// дата окончания неявки: date
aaEnding        = 3;
// кол-во дней неявки: byte
aaDays          = 4;
// кол-во часов неявки: double
aaHours         = 5;
// описание неявки: string
aaDescription   = 6;
// код вида оплаты: word
aaPaymentCode   = 7;
// nrec записи-источника: comp
aaSourceRecord  = 8;
// nrec условного обозначения: comp
aaNotation      = 9;
// вид неявки: word (см. akXXXX-константы)
aaKind          = 10;
// карта распределения часов неявки: longint (PContainer); устарело
aaHoursMap      = 11;
// карта распределения дней неявки: longint (PContainer); устарело
aaDayMap        = 12;
// неявка не отнимает, а добавляет часы: boolean
aaAdditive      = 13;
// в классификаторе условных обозначений стоит входимость в расчет рабочего
// времени при выборе ограничения пособия: boolean
aaWorkTime      = 14;
// код для обозначения дней месяца в стандартных формах Т-12, Т-13: string
aaStandardCode  = 15;
// код для вывода информации о неявках в печатных формах табеля: string
aaAbsenceCode   = 16;
// входит в расчет среднесписочной численности: boolean
aaPayrollAvgNum = 17;
// код вида пособия или вида отпуска
aaCode          = 18;
// код группы условного обозначения: longint
aaGroupCode     = 19;
// признак "явка": boolean
aaAppearance    = 20;
// переопределяет код вредности: boolean
aaOverridesInsalubrityCode          = 21;
// код вредности, на который переопределяет: word
aaInsalubrityCode                   = 22;
// считается отработанным временем с точки зрения доп. тарифов: boolean
aaWorkingForInsalubrityCalculations = 23;
// входит в состав рабочих часов: boolean
aaIncludedInWorkingHours            = 24;
// признак "уменьшает норму": boolean
aaDecreasesStandardTime             = 25;
// Претендует ли неявка на то, чтобы занять целый день: создана на основе
// больничного/отпуска/командировки, либо на основе уменьшения с нулевым кол-вом часов.
// Признак характеризует именно "целодневность по плану". Пока что это понятие совпадает с "целодневностью по факту".
// : boolean
aaWholeDay                          = 26;
aaSourceKind = 27; // Вид отклонения: word

//------------------------------------------------------------------------------
MaxVarianceCount = 10;  // устарело
// мифическая константа, максимальное значение количества времени,
// воспринимаемое в качестве отработанного - величИны, превышающие ее, имеют
// особый смысл
MaxWorkingHours  = 100;

//------------------------------------------------------------------------------
// [w]orking [t]able [a]ttribute
//------------------------------------------------------------------------------
wtaChange      = 1;
wtaDepartment  = 2;

ByCurrency   = 906;
UkrCurrency  = 980;
RuCurrency   = 810;

//------------------------------------------------------------------------------
//константы для табеля учета рабочего времени
//------------------------------------------------------------------------------
WeekEndMark                 = 'В';
DefaultSickMark             = 'Б';
DefaultVacationMark         = 'О';

// эти константы используются для пометки в табеле дней, занятых целодневными
// неявками
SickSpecialValue            = 255;
VacationSpecialValue        = 254;
FiredSpecialValue           = 253;
BusinessTripSpecialValue    = 252;
DayLongAbsenceSpecialValue  = 251;
//250 - внутренний код

//------------------------------------------------------------------------------
// Периоды суммированного учета сверхурочных
//[p]eriod [s]ummed [o]verwork
//------------------------------------------------------------------------------
psoMonth    = 0;
psoQuarter  = 1;
psoHalfYear = 2;
psoYear     = 3;

//------------------------------------------------------------------------------
// [v]ariance [k]ind
// вид отклонения
//------------------------------------------------------------------------------
// замена
vkChange       = 0;
// уменьшение
vkDecrease     = 1;
// увеличение
vkIncrease     = 2;
// нарушение режима
vkIrregularity = 3;
// уточнение (не влияет на количество отработанного времени)
vkRefinement   = 4;
// информация (не влияет на количество отработанного времени, при этом влияет на пометку дня)
vkInformation  = 5;

//------------------------------------------------------------------------------
// [a]bsence [k]ind
//------------------------------------------------------------------------------
akNone              = 0;
// ручная корректировка (маска или безусловное отклонение)
akHandCorrection    = 4;
// командировка
akBusinessTrip      = 32;
// отзыв из отпуска (системная неявка)
akVacationRecall    = 64;
// выполнение гособязанностей
akDuty              = 128;
// больничный (системная неявка)
akSickList          = 256;
// отпуск (системная неявка)
akVacation          = 512;
// выходной день (на самом деле - буква "В" в табеле, даже не настоящий выходной)
akWeekendMark       = 768;
// прочая неявка (получается из отклонений от табеля учета рабочего времени)
akTableAbsence      = 1024;
// нарушение режима
akIrregularity      = 2048;
// уточнение (не влияет на количество отработанного времени)
akRefinement        = 4096;
// приказ по кадрам на работу сверхурочно
akOvertimeWorkOrder = 8192;
// приказ по кадрам на работу в выходные
akWeekendWorkOrder  = 8193;
// приказ по кадрам на обучение
akTrainingOrder     = 8194;
// приказ по кадрам: перенос обучения
akTrainingTransferOrder = 8195;
// тип табельного отклонения: информация
akInformation       = 8196;
// приказ на почасовое отклонение
akHoursAbsenceOrder = 8197;
// отгул по приказу на работу в выходной день
akHoursAbsenceByWeekendWorkOrderForLeave = 8198;

//------------------------------------------------------------------------------
// Флаги отладочного вывода внутренних структур табеля
// (WT Debug Output)
//------------------------------------------------------------------------------
// Часы всех типов по дням текущего месяца табеля
wtdoHours              = 1;
// Дни всех типов по дням текущего месяца табеля
wtdoDays               = 2;
// Содержимое рабочей коллекции переходов - устарело
wtdoChanges            = 4;
// Неявки
wtdoAbsences           = 8;
// Сдвигаемые отклонения
wtdoMovableVariances   = 16;
wtdoSystemVariances    = 16; // устаревш. конст.
// Месячные неявки
wtdoMonthlyAbsences    = 32;
// Системные неявки
wtdoSystemAbsences     = 64;
// Коллекция только постоянных переходов - устарело
wtdoPermanentChanges   = 128;
// Графики работ
wtdoSchedules          = 256;
// Внутренности текущего вычислителя реквизитов ЛС на дату, вместе с менеджером данных
wtdoPADetails          = 512;
// Внутренности вычислителя реквизитов ЛС с учетом только постоянных переходов, вместе с менеджером данных
wtdoPADetailsPermanent = 1024;
// Определитель плановой вредности на дату из ЛС и переходов
wtdoBaseIns            = 2048;
// Вывести ВСЁ (не учитывает устаревшие константы)
wtdoAll                = 3963; // менять значение при добавлении новых wtdo-констант

//------------------------------------------------------------------------------
// [a]ttribute [p]refix
//------------------------------------------------------------------------------
apWorking              = 'Рабочие';
apEveningHours         = 'Вечерние';
apNightHours           = 'Ночные';
apHolidayHours         = 'Праздничные';
apWorkingHolidayHours  = 'Праздничные, рабочие по плану';
apWeekendHolidayHours  = 'Праздничные, не рабочие по плану';
apWeekendHours         = 'Выходные';
apOverworkHours        = 'Сверхурочные';
apOverworkHoursRest    = 'Сверхурочные (остаток)';
apICOrdinary           = 'Работа в обычных условиях';
apICHarmful            = 'Работа во вредных условиях';
apICExtraHarmful       = 'Работа в особо вредных условиях';
apHolidayHoursForLeave = 'Праздничные за отгул';
apWeekendHoursForLeave = 'Выходные за отгул';

//------------------------------------------------------------------------------
// [a]ttribute [s]uffix
//------------------------------------------------------------------------------
asPaymentKind =     'ВидОплаты';
asPercent =         'Процент';
asTotalHours =      'Итого часов за период';
asTotalDays  =      'Итого дней за период';

//------------------------------------------------------------------------------
// [e]xternal [a]ttribute
//------------------------------------------------------------------------------
eaTotalWorkingHours = apWorking + '.' + asTotalHours;
eaTotalWorkingDays  = apWorking + '.' + asTotalDays;

//------------------------------------------------------------------------------
// LS[T]AB.[F]ILIALNO, флажки для поля FILIALNO табеля
//------------------------------------------------------------------------------
// Коэффициент среднесписочной введен вручную
tfAvgFactorManualEntry = 1;
// В лстабе хранится районный коэффициент
tfRegionalFactorStored = 2;
// Выходные дни хранятся в битовой маске в поле LSTAB.VIDOPL[3]
tfWeekendsStored = 4;
// ЛСТаб защищён от переноса реквизитов ЛС
tfPermanentLsData = 8;
// Табель имеет территориальные условия, независимые от ADVISES
tfIndependentTerritoryCon = 16;
// В лстабе хранятся кол-во ставок, условия труда на рабочем месте и территориальные условия
tfWageRateInsalubrityTerritorialStored = 32;
// В лстабе хранятся итоги по праздничным
tfHolidayStored = 64;
// В лстабе хранятся итоги за отгул
tfForLeaveStored = 128;

//------------------------------------------------------------------------------
//[h]oliday [t]ype constants
//------------------------------------------------------------------------------
htNone            = 0;
htHoliday         = 1; // праздник
htMovedSaturday   = 2; // перенесенная суббота (для календарных отпусков по 5-дневке)
htWorking         = 3; // рабочий день (воскресенье или суббота) (для календарных отпусков)
htMovedSunday     = 4; // перенесенное воскресенье (для календарных отпусков по 5- и 6-дневке)

//------------------------------------------------------------------------------
// Flags for [P]erexod [Ch]anging
//------------------------------------------------------------------------------

pchBrigade       = 4; // бригада
pchCategory      = 8; // категория
pchRejim         = 16; // режим
pchPosition      = 32; // должность
pchSysPay        = 64; // Система оплаты
pchCorrectCoeff  = 128; // Корректирующий коэффициент для тарифа
pchTarif         = 256; // Тарифная ставка или оклад
pchCurrency      = 512; // Валюта
pchTarStav       = 1024; // Код и наименование тарифной сетки
pchRazr          = 2048; // Разряд
pchKTY           = 4096; // Коэффициент трудового участия
pchOsnOpl        = 8192; // Автоматическое форм. Основного Вида Оплаты при предварит.разноске
pchRegionPercent = 16384; // Процент районной надбавки
pchNorthCategory = 32768; // Код и наименование категории для выплаты северных надбавок
pchSHPZ          = 65536;  // ШПЗ
pchTXO           = 131072; // Хозяйственная операция
pchParameter     = 262144; // Параметр выбора
pchExtrAnalitik  = 524288;  // Дополнительные аналитики
pchTerrUsl       = 1048576; // Территориальные условия (устаревший параметр)
pchPodr          = 2097152; // подразделение (2^21)
pchIF            = 4194304; // Разбивка по источникам финансирования
pchKPS           = 8388608; // Связка Особые условия - КПС - Территориальные условия
pchStavka        = 16777216;// Количество ставок
// битовая маска, описывающая все возможные изменения в переходе
pchAllChanges    = 33554428; // (2^25 - 4)

// если переходы были некорректно конвертированы
pchError         = 1610612736;//(2^30 + 2^29)
// признак "полупрозрачного перехода"
pchTranslucent   = 1073741824; // 2^30

//------------------------------------------------------------------------------
// [c]hange [t]ype
// тип перехода в межпериод
//------------------------------------------------------------------------------
ctPermanent         = 0; // постоянный
ctTemporary         = 1; // временный
ctArchivePermanent  = 3; // архивный постоянный
ctArchiveTemporary  = 4; // архивный временный

//------------------------------------------------------------------------------
// способ расчета сверхурочных часов
// [o]verwork [c]alculation [m]ethod
//------------------------------------------------------------------------------
// по настройке
ocmDefault  = 0;
// подневный учет
ocmDaily    = 1;
// суммированный учет (период = месяц)
ocmSummed   = 2;
// смешанный
ocmMixed    = 3;



