//------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Галактика 8.10 - Спецоснастка
// Печать отчета о движении драгметаллов в формате FastReport
//------------------------------------------------------------------------------

var iExcelFormat : ExcelFormat;

//-------------------------

procedure InitFilters;
{
  fltNum := 0;
  delete all Filters;

  InitFltByType(if (pCommand > 0, Word(53), Word(23)), fltNom, nmNom);
  InitFltByType(Word(11), fltPod, nmPod);
  InitFltByType(Word(8),  fltMol, nmMol);
  InitFltByType(Word(6),  fltOrg, nmOrg);
  InitFltByType(if (pCommand > 0, Word(44), Word(2)),  fltGrp, nmGrp);
  InitFltByType(Word(45), fltCrd, nmCrd);
  InitFltByType(Word(56), fltMet, nmMet);
  InitFltByType(Word(55), fltNrm, nmNrm);
  InitFltVidIFR(fltVid, nmVid);
  InitFltClassFR(fltClass, nmClass);
}

//-------------------------

DataStream dtsRIznMBP
(
  [CommonFormHeader] CommonFormHeader;
  [TypeRep]          short;
  [TypeSum]          dopFlags;
  [MBPKind]          pCommand;
  [FromDate]         dFrom;
  [ToDate]           dTo;
  [GroupingName]     if (isValid(#Grouping), Grouping.Name, '');
  [MyOrgName]        iOrgInfo.GetMyOrgNameT(dTo);
  [NDE_ShName]       sGetTune('NDE.ShortRub');

  Table Filters
  (
    [FiltName] Filters.FiltName;
  );

  Table tblOperList
  (
    [isLeaf]   tblOperList.isLeaf;

    [OperName] tblOperList.OperName;
    [EdName]   tblOperList.EdName;
    [DopInfo]  tblOperList.DopInfo;
    [DocDate]  tblOperList.DocDate;
    [DocNom]   tblOperList.DocNom;
    [DocType]  tblOperList.DocType;

    [dExpl]    tblOperList.dExpl;
    [Price]    tblOperList.Price;
    [Kol]      tblOperList.Kol;
    [Stoim]    tblOperList.Stoim;
    [IznPerc]  tblOperList.IznPerc;
    [IznSum]   tblOperList.IznSum;
    [IznSumF]  tblOperList.IznSumF;
    [OstStoim] tblOperList.OstStoim;
  );

  DataSet Signers
  (
    [NRec]  iFeeSigners.GetSignerNRec;
    [FIO]   iFeeSigners.GetSignerFIO(1);
    [TabN]  iFeeSigners.GetSignerTabN;
    [Post]  iFeeSigners.GetSignerPosition(1);
    [Role]  iFeeSigners.GetSignerRole;
  );
)

HandleEvent DataSet Signers
//-------------------------
  cmPreProcess:
  {
    lSign := 0;

    if (not iFeeSigners.FindFeeSignersByNRec(cSigners))
      AbortProcess;
  }
//-------------------------
  cmOnProcess:
  {
    if (not NextVisual)
      BreakProcess;

    lSign++;

    if (lSign = 1)
    {
      if (iFeeSigners.GetSignerFirst)
        ContinueDataSet;
    }
    else
    {
      if (iFeeSigners.GetSignerNext)
        ContinueDataSet;
    }
  }
//-------------------------
End; // HandleEvent DataSet Signers

HandleEvent Table tblOperList
//-------------------------
  cmOnProcess:
  {
    if (not NextVisual)
      BreakProcess;
  }
//-------------------------
End; // HandleEvent Table tblOperList

HandleEvent Table Filters
//-----------------------
  cmPreProcess:
    InitFilters;
//-----------------------
  cmOnProcess:
  {
    if (not NextVisual)
      BreakProcess;
  }
//-------------------------
End; // HandleEvent DataSet Filters

HandleEvent // HandleEvent DataStream dtsRIznMBP
//---------
  cmPreProcess:
    StartNewVisual(vtRotateVisual, vfTimer + vfBreak + vfConfirm,
                   'Формирование ведомости начисления износа в FastReport', 0);
//---------
  cmPostProcess:
    StopVisual('', 0);
//---------
end; // HandleEvent DataStream dtsRIznMBP
end; // DataStream dtsRIznMBP
