//------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Галактика 9.1 - Спецоснастка
// Печать отчета о наличии спецоснастки в формате FastReport
//------------------------------------------------------------------------------

//-------------------------

procedure InitFilters;
{
  fltNum := 0;
  delete all Filters;

  InitFltByType(if (pCommand > 0, Word(53), Word(23)), fltNom, nmNom);
  InitFltByType(Word(11), fltPod, nmPod);
  InitFltByType(Word(8),  fltMol, nmMol);
  InitFltByType(Word(6),  fltOrg, nmOrg);
  InitFltByType(if (pCommand > 0, Word(44), Word(2)),  fltGrp, nmGrp);
  InitFltByType(Word(45), fltCrd, nmCrd);
#ifndef __RNAL_SFO__
  InitFltByType(Word(56), fltMet, nmMet);

  if (fltInfo > 0)
  {
    var InfoFltStr : string;
    InfoFltStr := 'По доп. информации';

    case (fltInfo) of
    //--------------
      1: InfoFltStr := InfoFltStr + ' =';
    //--------------
      2: InfoFltStr := InfoFltStr + ' >';
    //--------------
    257: InfoFltStr := InfoFltStr + ' ==';
    //--------------
    258: InfoFltStr := InfoFltStr + ' >>';
    //--------------
    end;

    fltNum++;
    ClearBuffer(tnFilters);
    Filters.FiltNum  := fltNum;
    Filters.FiltName := InfoFltStr;
    insert current Filters;
  }
#end
  if (fltSrok > 0)
  {
    var SrokFltStr : string;
    SrokFltStr := 'По сроку службы' + if (fltSrok > 200, ' из первой выдачи', if (fltSrok > 100, ' из нормы', ''));

    case (fltSrok) of
    //--------------
      1, 101, 201: SrokFltStr := SrokFltStr + ' < ' + nmSrok + ' мес.';
    //--------------
      2, 102, 202: SrokFltStr := SrokFltStr + ' <= ' + nmSrok + ' мес.';
    //--------------
      3, 103, 203: SrokFltStr := SrokFltStr + ' > ' + nmSrok + ' мес.';
    //--------------
      4, 104, 204: SrokFltStr := SrokFltStr + ' >= ' + nmSrok + ' мес.';
    //--------------
      5, 105, 205: SrokFltStr := SrokFltStr + ' = ' + nmSrok + ' мес.';
    //--------------
      6, 106, 206: SrokFltStr := SrokFltStr + ': До износа';
    //------------
      7, 107, 207: SrokFltStr := SrokFltStr + ': До износа или < ' + nmSrok + ' мес.';
    //--------------
      8, 108, 208: SrokFltStr := SrokFltStr + ': До износа или <= ' + nmSrok + ' мес.';
    //--------------
      9, 109, 209: SrokFltStr := SrokFltStr + ': До износа или > ' + nmSrok + ' мес.';
    //--------------
     10, 110, 210: SrokFltStr := SrokFltStr + ': До износа или >= ' + nmSrok + ' мес.';
    //--------------
     11, 111, 211: SrokFltStr := SrokFltStr + ': До износа или = ' + nmSrok + ' мес.';
    //--------------
    end;

    fltNum++;
    ClearBuffer(tnFilters);
    Filters.FiltNum  := fltNum;
    Filters.FiltName := SrokFltStr;
    insert current Filters;
  }

  InitFltByType(Word(55), fltNrm, nmNrm);
  InitFltClassFR(fltClass, nmClass);
}

//-------------------------

DataStream dtsRNalMBP
(
  [CFHeader]         CommonFormHeader;
  [TypeRep]          short;
  [RepDate]          dFor;
  [MBPKind]          pCommand;
  [MBPPlace]         expVal;
  [GroupingName]     if (isValid(#Grouping), Grouping.Name, '');
  [MyOrgName]        iOrgInfo.GetMyOrgNameT(dFor);
  [NDE_ShName]       sGetTune('NDE.ShortRub');
  [ShowFields]       fltFields;

  Table Filters
  (
    [FiltName] Filters.FiltName;
  );

  Table tblOperList
  (
    [isLeaf]    tblOperList.isLeaf;
    [OperName]  tblOperList.OperName;

    [dOper]     f_DateToStrZ(S_MBPOut.dOper);
    [dSkl]      S_MBPOut.DragKod;
    [dExpl]     f_DateToStrZ(S_MBPOut.dExpl);
    [dBegExpl]  S_MBPOut.DragName;
    [dEndExpl]  f_DateToStrZ(S_MBPOut.dEndExpl);
    [Srok]      if (S_MBPOut.Srok = 0, 'Разовая', if (S_MBPOut.Srok = MaxWord, 'До износа', if (S_MBPOut.Srok > 0, String(S_MBPOut.Srok), '')));

    [Price]     S_MBPOut.Price;
    [Kol]       tblOperList.Kol;
    [EdName]    S_MBPOut.EdName;
    [EdKod]     S_MBPOut.EdKod;
    [Stoim]     tblOperList.Stoim;
    [IznPerc]   tblOperList.IznPerc;
    [IznSum]    tblOperList.IznSum;
    [OstStoim]  tblOperList.Stoim - tblOperList.IznSum;

    [DopInfo]   S_MBPOut.InInfo;
    [PodrName]  S_MBPOut.PodName;
    [PodrKod]   S_MBPOut.PodKod;
    [MolName]   S_MBPOut.MolName;
    [MolKod]    S_MBPOut.MolKod;
    [CardNum]   S_MBPOut.CrdNum;
    [PersonFIO] S_MBPOut.FIOName;
    [TabNum]    S_MBPOut.TabNum;
    [OrgName]   S_MBPOut.OrgName;
    [PartyName] S_MBPOut.PrtName;
    [PartyKod]  S_MBPOut.PrtKod;
  );

  DataSet Signers
  (
    [NRec]  iFeeSigners.GetSignerNRec;
    [FIO]   iFeeSigners.GetSignerFIO(1);
    [TabN]  iFeeSigners.GetSignerTabN;
    [Post]  iFeeSigners.GetSignerPosition(1);
    [Role]  iFeeSigners.GetSignerRole;
  );
)

HandleEvent DataSet Signers
//-------------------------
  cmPreProcess:
  {
    lSign := 0;

    if (not iFeeSigners.FindFeeSignersByNRec(cSigners))
      AbortProcess;
  }
//-------------------------
  cmOnProcess:
  {
    if (not NextVisual)
      BreakProcess;

    lSign++;

    if (lSign = 1)
    {
      if (iFeeSigners.GetSignerFirst)
        ContinueDataSet;
    }
    else
    {
      if (iFeeSigners.GetSignerNext)
        ContinueDataSet;
    }
  }
//-------------------------
End; // HandleEvent DataSet Signers

HandleEvent Table tblOperList
//-------------------------
  cmOnProcess:
    if (not NextVisual)
      BreakProcess;
//-------------------------
End; // HandleEvent Table tblOperList

HandleEvent Table Filters
//-----------------------
  cmPreProcess:
    InitFilters;
//-----------------------
  cmOnProcess:
    if (not NextVisual)
      BreakProcess;
//-------------------------
End; // HandleEvent DataSet Filters

HandleEvent // HandleEvent DataStream dtsRIznMBP
//---------
  cmPreProcess:
  {
    StartNewVisual(vtRotateVisual, vfTimer + vfBreak + vfConfirm, 'Формирование ведомости наличия в FastReport', 0);
    PushBounds(tbByFReport);
  }
//---------
  cmPostProcess:
  {
    PopBounds(tbByFReport);
    StopVisual('', 0);
  }
//---------
end; // HandleEvent DataStream dtsRNalMBP
end; // DataStream dtsRNalMBP
