//------------------------------------------------------------------------------------------------------------
//                                                                                    (c) корпорация Галактика
// Галактика 9.10 - модуль "Электронная отчетность РБ"
// Алгоритмы расчета : "Декларация по НДС"
//------------------------------------------------------------------------------------------------------------


//============================================================================================================
//#region СЕРВИСНЫЕ МЕТОДЫ
//============================================================================================================
//#region РАБОТА С ИТЕРАТОРАМИ
//------------------------------------------------------------------------------------------------------------
// Получить строковое представление итератора
@Script GetIter(
  _Ind : LongInt    // индекс итератора
) : string;
@begin
  Result := pIterRepStruct.GetIter(_Ind);
@end. // GetNodeCountByPath
//#endregion РАБОТА С ИТЕРАТОРАМИ
//************************************************************************************************************

//============================================================================================================
//#region ПОЛУЧЕНИЕ ИНФОРМАЦИИ ПО СТРУКТУРЕ
//------------------------------------------------------------------------------------------------------------
// Получить количество вершин по пути на вершину
@Script GetNodeCountByPath(
  _sPath  : string    // путь на вершину
) : LongInt;
@begin
  Result := pModiRepStruct.GetNodeCountByPath(_sPath);
@end. // GetNodeCountByPath
//#endregion ПОЛУЧЕНИЕ ИНФОРМАЦИИ ПО СТРУКТУРЕ
//************************************************************************************************************

//============================================================================================================
//#region ПОЛУЧЕНИЕ ДАННЫХ ПО ПУТИ НА ВЕРШИНУ
//============================================================================================================
//#region ПОЛУЧЕНИЕ АТРИБУТОВ ПОКАЗАТЕЛЯ
//------------------------------------------------------------------------------------------------------------
// Узнать является ли значение показателя "не определенным", найдя его по пути на вершину
@Script GetIsNullValueByPath(
  _sPath  : string    // путь на вершину
) : boolean;
@begin
  Result := pModiRepStruct.GetIsNullValueByPath(_sPath);
@end. // GetIsNullValueByPath

//------------------------------------------------------------------------------------------------------------
// Получить значение признака "Скрытая запись", найдя его по пути на вершину
//@Script GetIsHidenRecByPath(
//  _sPath  : string    // путь на вершину
//) : boolean;
//@begin
//  Result := pModiRepStruct.GetIsHidenRecByPath(_sPath);
//@end. // GetIsHidenRecByPath
//------------------------------------------------------------------------------------------------------------
// Получить значение признака "Скрытая запись", найдя его по пути на вершину (с учетом расположения в иерархии])
@Script GetIsHidenRecInTreeByPath(
  _sPath  : string    // путь на вершину
) : boolean;
@begin
  Result := pModiRepStruct.GetIsHidenRecInTreeByPath(_sPath);
@end. // GetIsHidenRecInTreeByPath

//------------------------------------------------------------------------------------------------------------
// Получить значение признака "Обязательный элемент в XML", найдя его по пути на вершину (с учетом расположения в иерархии])
@Script GetIsRequiredInTreeByPath(
  _sPath  : string    // путь на вершину
) : boolean;
@begin
  Result := pModiRepStruct.GetIsRequiredInTreeByPath(_sPath);
@end. // GetIsHidenRecInTreeByPath
//#endregion ПОЛУЧЕНИЕ АТРИБУТОВ ПОКАЗАТЕЛЯ
//************************************************************************************************************

//============================================================================================================
//#region ПОЛУЧЕНИЕ ЗНАЧЕНИЯ ПОКАЗАТЕЛЯ
//------------------------------------------------------------------------------------------------------------
// Получить значение показателя типа String, найдя его по пути на вершину
@Script GetStringValueByPath(
  _sPath  : string    // путь на вершину
) : string;
@begin
  Result := pModiRepStruct.GetStringValueByPath(_sPath);
@end. // GetStringValueByPath
//------------------------------------------------------------------------------------------------------------
// Получить значение показателя типа Double, найдя его по пути на вершину
@Script GetDoubleValueByPath(
  _sPath  : string    // путь на вершину
) : double;
@begin
  Result := pModiRepStruct.GetDoubleValueByPath(_sPath);
@end. // GetDoubleValueByPath
//------------------------------------------------------------------------------------------------------------
// Получить значение показателя типа Boolean, найдя его по пути на вершину
@Script GetBooleanValueByPath(
  _sPath  : string    // путь на вершину
) : boolean;
@begin
  Result := pModiRepStruct.GetBooleanValueByPath(_sPath);
@end. // GetBooleanValueByPath
//------------------------------------------------------------------------------------------------------------
// Получить значение показателя типа Date, найдя его по пути на вершину
@Script GetDateValueByPath(
  _sPath  : string    // путь на вершину
) : date;
@begin
  Result := pModiRepStruct.GetDateValueByPath(_sPath);
@end. // GetDateValueByPath
//#endregion ПОЛУЧЕНИЕ ЗНАЧЕНИЯ ПОКАЗАТЕЛЯ
//************************************************************************************************************
//#endregion ПОЛУЧЕНИЕ ДАННЫХ ПО ПУТИ НА ВЕРШИНУ
//************************************************************************************************************

//============================================================================================================
//#region УСТАНОВКА ДАННЫХ ПО ПУТИ НА ВЕРШИНУ
//------------------------------------------------------------------------------------------------------------
// Установить значение признака "Скрытая запись", найдя его по пути на вершину
@Script SetIsHidenRecByPath(
  _sPath  : string;   // путь на вершину
  _Value  : boolean   // значение
) : boolean;
@begin
  Result := pModiRepStruct.SetIsHidenRecByPath(_sPath, _Value);
@end. // SetIsHidenRecByPath

//------------------------------------------------------------------------------------------------------------
// Установить значение показателя типа String, найдя его по пути на вершину
@Script SetStringValueByPath(
  _sPath  : string;   // путь на вершину
  _Value  : string    // значение
) : boolean;
@begin
  Result := pModiRepStruct.SetStringValueByPath(_sPath, _Value, 2);
@end. // SetStringValueByPath
//------------------------------------------------------------------------------------------------------------
// Установить значение показателя типа Double, найдя его по пути на вершину
@Script SetDoubleValueByPath(
  _sPath  : string;   // путь на вершину
  _Value  : double    // значение
) : boolean;
@begin
  Result := pModiRepStruct.SetDoubleValueByPath(_sPath, _Value, 2);
@end. // SetDoubleValueByPath
//------------------------------------------------------------------------------------------------------------
// Установить значение показателя типа Boolean, найдя его по пути на вершину
@Script SetBooleanValueByPath(
  _sPath  : string;   // путь на вершину
  _Value  : boolean   // значение
) : boolean;
@begin
  Result := pModiRepStruct.SetBooleanValueByPath(_sPath, _Value, 2);
@end. // SetBooleanValueByPath
//------------------------------------------------------------------------------------------------------------
// Установить значение показателя типа Date, найдя его по пути на вершину
@Script SetDateValueByPath(
  _sPath  : string;   // путь на вершину
  _Value  : date      // значение
) : boolean;
@begin
  Result := pModiRepStruct.SetDateValueByPath(_sPath, _Value, 2);
@end. // SetDateValueByPath
//#endregion УСТАНОВКА ДАННЫХ ПО ПУТИ НА ВЕРШИНУ
//************************************************************************************************************

//------------------------------------------------------------------------------------------------------------
// Получить ID текстового поля
@Script TFID(
  _PrmFldID  : string  // первичный ID поля
) : string;
@begin
  Result := '/'+_PrmFldID+'/'+_PrmFldID+'_Value';
@end. // TFID

//------------------------------------------------------------------------------------------------------------
// Преобразовать число в строку
@Script DTS(
  _summ : double;  // сумма
  _frac : byte = 0 // количество дробных знаков
) : string;
@begin
  Result := string(_summ);
@end. // TFID
//#endregion СЕРВИСНЫЕ МЕТОДЫ
//************************************************************************************************************


//============================================================================================================
//#region ДЕЙСТВИЯ ВЫПОЛНЯЕМЫЕ ПРИ УСТАНОВКЕ ВИДИМОСТИ ПОЛЕЙ
//------------------------------------------------------------------------------------------------------------
// Установить видимость полей
@Script On_Visable : boolean;
@begin
  Result := False;
  var isAllOk : boolean;  isAllOk := True;
  do
  {
    //========================================================================================================
    //#region Заголовок
    //--------------------------------------------------------------------------------------------------------
    do
    {
      var sUppAddr : string;  sUppAddr := 'NDS';

      // тип и версия отчета
      SetIsHidenRecByPath(sUppAddr+'/type'   , False);
      SetIsHidenRecByPath(sUppAddr+'/version', False);

      // период
      SetIsHidenRecByPath(sUppAddr+'/year'     , False);
      SetIsHidenRecByPath(sUppAddr+'/term_type', False);
      SetIsHidenRecByPath(sUppAddr+'/period'   , False);

      // валюта
      SetIsHidenRecByPath(sUppAddr+'/currencyCode'               , False);
      SetIsHidenRecByPath(sUppAddr+'/currencyValuesDisplayFormat', False);

      // округлять суммы к уплате до наличных
      SetIsHidenRecByPath(sUppAddr+'/roundToCash', False);

      // признак ликвидации
      var sLiquidation : string;  sLiquidation := GetStringValueByPath(sUppAddr+'/liquidationType');
      if (sLiquidation = '')
      { // если НЕТ ликвидации
        SetIsHidenRecByPath(sUppAddr+'/liquidationType'    , True);
        SetIsHidenRecByPath(sUppAddr+'/liquidationDate'    , True);
        SetIsHidenRecByPath(sUppAddr+'/liquidationMonth'   , True);
        SetIsHidenRecByPath(sUppAddr+'/submLiquidationDate', True);
      } // если НЕТ ликвидации
      else
      { // если признак ликвидации задан
        SetIsHidenRecByPath(sUppAddr+'/liquidationType', False);
        // дата прекращения иностранной организацией деятельности на территории РБ
        SetIsHidenRecByPath(sUppAddr+'/liquidationDate', (sLiquidation != 'FOREIGN') ); // в соответствии с частью 5 пункта 2-1 ст.63 НК РБ

        if (sLiquidation = 'SELF_START')  // в соответствии с частью 1 пункта 2-1 ст.63 НК РБ
        or (sLiquidation = 'BRANCH')      // в соответствии с частью 4 пункта 2-1 ст.63 НК РБ
        {
          SetIsHidenRecByPath(sUppAddr+'/liquidationMonth'   , False);
          SetIsHidenRecByPath(sUppAddr+'/submLiquidationDate', False);
        }
        else
        {
          SetIsHidenRecByPath(sUppAddr+'/liquidationMonth'   , True );
          SetIsHidenRecByPath(sUppAddr+'/submLiquidationDate', True );
        }
      } // если признак ликвидации задан
    }
    while False;
    if (not isAllOk)
    { Break; }
    //#endregion Заголовок
    //********************************************************************************************************

    //========================================================================================================
    //#region Часть I Раздел 4
    //--------------------------------------------------------------------------------------------------------
    do
    {
      var sUppAddr : string;  sUppAddr := 'NDS/NDS_v3_part1/NDS_v3_part1_t003';

      //------------------------------------------------------------------------------------------------------
      //#region 12.1. Декретом Президента Республики Беларусь от 6 августа 2009 г. N 10
      {
        var sUppAddrRec : string ;  sUppAddrRec := sUppAddr+'/NDS_v3_part1_t003P1_ri';
        var NodeCount   : LongInt;  NodeCount   := GetNodeCountByPath(sUppAddrRec);
        var Ind : LongInt;
        for (Ind:=0; Ind<NodeCount; Ind++)
        {
          var sAddr : string;  sAddr := sUppAddrRec + GetIter(Ind);

          var isRecDataExist : boolean;  isRecDataExist := False;
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_part1P1_t003_ricd')) )  // дата
            isRecDataExist := True;
          if (not isRecDataExist)
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_part1P1_t003_ricn')) )  // номер
            isRecDataExist := True;
          if (not isRecDataExist)
          {
            if (GetDoubleValueByPath(sAddr+TFID('NDS_v3_part1P1_t003_rics')) != 0)  // сумма
              isRecDataExist := True;
          }
          SetIsHidenRecByPath(sAddr, (not isRecDataExist) );  // запись таблицы
        } // for
      }
      //#endregion 12.1. Декретом Президента Республики Беларусь от 6 августа 2009 г. N 10
      //------------------------------------------------------------------------------------------------------

      //------------------------------------------------------------------------------------------------------
      //#region 12.2. инвестиционными договорами, заключенными с Республикой Беларусь
      {
        var sUppAddrRec : string ;  sUppAddrRec := sUppAddr+'/NDS_v3_part1_t003P2_ri';
        var NodeCount   : LongInt;  NodeCount   := GetNodeCountByPath(sUppAddrRec);
        var Ind : LongInt;
        for (Ind:=0; Ind<NodeCount; Ind++)
        {
          var sAddr : string;  sAddr := sUppAddrRec + GetIter(Ind);

          var isRecDataExist : boolean;  isRecDataExist := False;
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_part1P2_t003_ricd')) )  // дата
            isRecDataExist := True;
          if (not isRecDataExist)
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_part1P2_t003_ricn')) )  // номер
            isRecDataExist := True;
          if (not isRecDataExist)
          {
            if (GetDoubleValueByPath(sAddr+TFID('NDS_v3_part1P2_t003_rics')) != 0)  // сумма
              isRecDataExist := True;
          }
          SetIsHidenRecByPath(sAddr, (not isRecDataExist) );  // запись таблицы
        } // for
      }
      //#endregion 12.2. инвестиционными договорами, заключенными с Республикой Беларусь
      //------------------------------------------------------------------------------------------------------

      //------------------------------------------------------------------------------------------------------
      //#region 12.3. иными актами Президента Республики Беларусь
      {
        var sUppAddrRec : string ;  sUppAddrRec := sUppAddr+'/NDS_v3_part1_t003P3_ri';
        var NodeCount   : LongInt;  NodeCount   := GetNodeCountByPath(sUppAddrRec);
        var Ind : LongInt;
        for (Ind:=0; Ind<NodeCount; Ind++)
        {
          var sAddr : string;  sAddr := sUppAddrRec + GetIter(Ind);

          var isRecDataExist : boolean;  isRecDataExist := False;
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_part1P3_t003_ricd')) )  // дата
            isRecDataExist := True;
          if (not isRecDataExist)
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_part1P3_t003_ricp')) )  // номер
            isRecDataExist := True;
          if (not isRecDataExist)
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_part1P3_t003_ricn')) )  // название
            isRecDataExist := True;
          if (not isRecDataExist)
          {
            if (GetDoubleValueByPath(sAddr+TFID('NDS_v3_part1P3_t003_rics')) != 0)  // сумма
              isRecDataExist := True;
          }
          SetIsHidenRecByPath(sAddr, (not isRecDataExist) );  // запись таблицы
        } // for
      }
      //#endregion 12.3. иными актами Президента Республики Беларусь
      //------------------------------------------------------------------------------------------------------
    }
    while False;
    //#endregion Часть I Раздел 4
    //********************************************************************************************************

    //========================================================================================================
    //#region Часть II
    //--------------------------------------------------------------------------------------------------------
    do
    {
      var sUppAddr : string;  sUppAddr := 'NDS/NDS_v3_part2';
      // признак Часть II данные существуют
      var isP2DataExist : boolean;  isP2DataExist := False;

      //------------------------------------------------------------------------------------------------------
      //#region Список государств
      {
        var sUppAddrRec : string ;  sUppAddrRec := sUppAddr+'/NDS_v3_part2_l1i';
        var NodeCount   : LongInt;  NodeCount   := GetNodeCountByPath(sUppAddrRec);
        var Ind : LongInt;
        for (Ind:=0; Ind<NodeCount; Ind++)
        {
          var sAddr : string;  sAddr := sUppAddrRec + GetIter(Ind);

          var isRecDataExist : boolean;
          isRecDataExist := (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_part2_l1i_f001')) );  // Код государства
          if (isRecDataExist)
          {
            isP2DataExist := True;
          }
          SetIsHidenRecByPath(sAddr, (not isRecDataExist) );  // запись таблицы
        } // for
      }
      //#endregion Список государств
      //------------------------------------------------------------------------------------------------------

      //======================================================================================================
      //#region ИТОГО
      {
        // дата по сроку уплаты
        SetIsHidenRecByPath(sUppAddr+TFID('NDS_v3_part2_f002'), (not isP2DataExist) );

        // Итого к уплате по части II
        SetIsHidenRecByPath('NDS'+TFID('NDS_v3_f004'), (not isP2DataExist) );

        // Значение true атрибута xsi:nil элемента XML явно указывает, что у элемента отсутствует содержимое,
        // будь то дочерние элементы или основной текст.
        if (not isP2DataExist)
        { // если в Часть II данные НЕ существуют
          SetBooleanValueByPath(sUppAddr+'/xsi:nil', True);
        }
        SetIsHidenRecByPath(sUppAddr+'/xsi:nil', isP2DataExist);
      }
      //#endregion ИТОГО
      //******************************************************************************************************
    }
    while False;
    if (not isAllOk)
    { Break; }
    //#endregion Часть II
    //********************************************************************************************************

    //========================================================================================================
    //#region Приложение 1
    //--------------------------------------------------------------------------------------------------------
    do
    {
      var sUppAddr : string;  sUppAddr := 'NDS/NDS_v3_spravka_t001';
      // признак данные приложения существуют
      var isDataExist : boolean;  isDataExist := False;

      //------------------------------------------------------------------------------------------------------
      //#region Список записей таблицы
      {
        var sUppAddrRec : string ;  sUppAddrRec := sUppAddr+'/NDS_v3_spravka_t001_ri';
        var NodeCount   : LongInt;  NodeCount   := GetNodeCountByPath(sUppAddrRec);
        var Ind : LongInt;
        for (Ind:=0; Ind<NodeCount; Ind++)
        {
          var sAddr : string;  sAddr := sUppAddrRec + GetIter(Ind);

          var isRecDataExist : boolean;  isRecDataExist := False;
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_spravka_t001_ric2')) )  // Содержание льготы с указанием подпункта, пункта, статьи нормативного правового акта
            isRecDataExist := True;
          if (not isRecDataExist)
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_spravka_t001_ric3')) )  // Код государства
            isRecDataExist := True;
          if (not isRecDataExist)
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_spravka_t001_ric4')) )  // Код льготы
            isRecDataExist := True;

          SetIsHidenRecByPath(sAddr, (not isRecDataExist) );  // запись таблицы
        } // for
      }
      //#endregion Список записей таблицы
      //------------------------------------------------------------------------------------------------------
    }
    while False;
    if (not isAllOk)
    { Break; }
    //#endregion Приложение 1
    //********************************************************************************************************

    //========================================================================================================
    //#region Приложение 2
    //--------------------------------------------------------------------------------------------------------
    do
    {
      var sUppAddr : string;  sUppAddr := 'NDS/NDS_v3_reestr/NDS_v3_reestr_t001';
      // признак данные приложения существуют
      var isDataExist : boolean;  isDataExist := False;

      //------------------------------------------------------------------------------------------------------
      //#region Список записей таблицы
      {
        var sUppAddrRec : string ;  sUppAddrRec := sUppAddr+'/NDS_v3_reestr_t001_ri';
        var NodeCount   : LongInt;  NodeCount   := GetNodeCountByPath(sUppAddrRec);
        var Ind : LongInt;
        for (Ind:=0; Ind<NodeCount; Ind++)
        {
          var sAddr : string;  sAddr := sUppAddrRec + GetIter(Ind);

          var isRecDataExist : boolean;  isRecDataExist := False;
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr_t001_ric1')) )  // дата
            isRecDataExist := True;
          if (not isRecDataExist)
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr_t001_ric2')) )  // номер
            isRecDataExist := True;
          if (not isRecDataExist)
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr_t001_ric3')) )  // код таможенной процедуры
            isRecDataExist := True;
          if (not isRecDataExist)
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr_t001_ric4')) )  // дата
            isRecDataExist := True;
          if (not isRecDataExist)
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr_t001_ric5')) )  // номер (до 2013)
            isRecDataExist := True;

          SetIsHidenRecByPath(sAddr, (not isRecDataExist) );  // запись таблицы
        } // for
      }
      //#endregion Список записей таблицы
      //------------------------------------------------------------------------------------------------------
    }
    while False;
    if (not isAllOk)
    { Break; }
    //#endregion Приложение 2
    //********************************************************************************************************

    //========================================================================================================
    //#region Приложение 3
    //--------------------------------------------------------------------------------------------------------
    do
    {
      var sUppAddr : string;  sUppAddr := 'NDS/NDS_v3_reestr0/NDS_v3_reestr0_t001';
      // признак данные приложения существуют
      var isDataExist : boolean;  isDataExist := False;

      //------------------------------------------------------------------------------------------------------
      //#region Список записей таблицы
      {
        var sUppAddrRec : string ;  sUppAddrRec := sUppAddr+'/NDS_v3_reestr0_t001_ri';
        var NodeCount   : LongInt;  NodeCount   := GetNodeCountByPath(sUppAddrRec);
        var Ind : LongInt;
        for (Ind:=0; Ind<NodeCount; Ind++)
        {
          var sAddr : string;  sAddr := sUppAddrRec + GetIter(Ind);

          var isRecDataExist : boolean;  isRecDataExist := False;
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr0_t001_ric2a')) )  // дата
            isRecDataExist := True;
          if (not isRecDataExist)
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr0_t001_ric2b')) )  // номер
            isRecDataExist := True;
          if (not isRecDataExist)
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr0_t001_ric3a')) )  // дата
            isRecDataExist := True;
          if (not isRecDataExist)
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr0_t001_ric3b')) )  // номер
            isRecDataExist := True;
          if (not isRecDataExist)
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr0_t001_ric4a')) )  // дата
            isRecDataExist := True;
          if (not isRecDataExist)
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr0_t001_ric4b')) )  // номер
            isRecDataExist := True;
          if (not isRecDataExist)
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr0_t001_ric5')) )  // Маршрут следования
            isRecDataExist := True;
          if (not isRecDataExist)
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr0_t001_ric6')) )  // Момент фактической реализации
            isRecDataExist := True;

          SetIsHidenRecByPath(sAddr, (not isRecDataExist) );  // запись таблицы
        } // for
      }
      //#endregion Список записей таблицы
      //------------------------------------------------------------------------------------------------------
    }
    while False;
    if (not isAllOk)
    { Break; }
    //#endregion Приложение 3
    //********************************************************************************************************

    //========================================================================================================
    //#region Приложение 4
    //--------------------------------------------------------------------------------------------------------
    do
    {
      var sUppAddr : string;  sUppAddr := 'NDS/NDS_v3_reestr1/NDS_v3_reestr1_t001';
      // признак данные приложения существуют
      var isDataExist : boolean;  isDataExist := False;

      //------------------------------------------------------------------------------------------------------
      //#region Список записей таблицы
      {
        var sUppAddrRec : string ;  sUppAddrRec := sUppAddr+'/NDS_v3_reestr1_t001_ri';
        var NodeCount   : LongInt;  NodeCount   := GetNodeCountByPath(sUppAddrRec);
        var Ind : LongInt;
        for (Ind:=0; Ind<NodeCount; Ind++)
        {
          var sAddr : string;  sAddr := sUppAddrRec + GetIter(Ind);

          var isRecDataExist : boolean;  isRecDataExist := False;
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr1_t001_ric1')) )  // регистрационный номер выпуска товаров
            isRecDataExist := True;
          if (not isRecDataExist)
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr1_t001_ric2')) )  // дата выпуска товаров
            isRecDataExist := True;
          if (not isRecDataExist)
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr1_t001_ric3')) )  // наименование документов
            isRecDataExist := True;
          if (not isRecDataExist)
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr1_t001_ric4a')) )  // дата
            isRecDataExist := True;
          if (not isRecDataExist)
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr1_t001_ric4b')) )  // номер
            isRecDataExist := True;
          if (not isRecDataExist)
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr1_t001_ric5a')) )  // дата договора с хранителем
            isRecDataExist := True;
          if (not isRecDataExist)
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr1_t001_ric5b')) )  // номер договора с хранителем
            isRecDataExist := True;
          if (not isRecDataExist)
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr1_t001_ric6' )) )  // код государства - члена Таможенного союза
            isRecDataExist := True;
          if (not isRecDataExist)
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr1_t001_ric7a')) )  // Дата договора с покупателем - иностранной организацией
            isRecDataExist := True;
          if (not isRecDataExist)
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr1_t001_ric7b')) )  // номер договора с покупателем - иностранной организацией
            isRecDataExist := True;
          if (not isRecDataExist)
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr1_t001_ric8' )) )  // дата отпуска (отгрузки) товаров
            isRecDataExist := True;

          SetIsHidenRecByPath(sAddr, (not isRecDataExist) );  // запись таблицы
        } // for
      }
      //#endregion Список записей таблицы
      //------------------------------------------------------------------------------------------------------
    }
    while False;
    if (not isAllOk)
    { Break; }
    //#endregion Приложение 4
    //********************************************************************************************************

    //========================================================================================================
    //#region Приложение 5
    //--------------------------------------------------------------------------------------------------------
    do
    {
      var sUppAddr : string;  sUppAddr := 'NDS/NDS_v3_reestr2/NDS_v3_reestr2_t001';
      // признак данные приложения существуют
      var isDataExist : boolean;  isDataExist := False;

      //------------------------------------------------------------------------------------------------------
      //#region Список записей таблицы
      {
        var sUppAddrRec : string ;  sUppAddrRec := sUppAddr+'/NDS_v3_reestr2_t001_ri';
        var NodeCount   : LongInt;  NodeCount   := GetNodeCountByPath(sUppAddrRec);
        var Ind : LongInt;
        for (Ind:=0; Ind<NodeCount; Ind++)
        {
          var sAddr : string;  sAddr := sUppAddrRec + GetIter(Ind);

          var isRecDataExist : boolean;  isRecDataExist := False;
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr2_t001_ric1')) )  // регистрационный номер выпуска товаров
            isRecDataExist := True;
          if (not isRecDataExist)
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr2_t001_ric2')) )  // дата выпуска товаров
            isRecDataExist := True;
          if (not isRecDataExist)
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr2_t001_ric3')) )  // Дата проставления таможенным органом РБ отметки <Товар вывезен>
            isRecDataExist := True;
          if (not isRecDataExist)
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr2_t001_ric4a')) )  // дата договора с хранителем
            isRecDataExist := True;
          if (not isRecDataExist)
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr2_t001_ric4b')) )  // номер договора с хранителем
            isRecDataExist := True;
          if (not isRecDataExist)
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr2_t001_ric5' )) )  // наименование иностранного государства
            isRecDataExist := True;
          if (not isRecDataExist)
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr2_t001_ric6a')) )  // Дата договора с покупателем - иностранной организацией
            isRecDataExist := True;
          if (not isRecDataExist)
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr2_t001_ric6b')) )  // номер договора с покупателем - иностранной организацией
            isRecDataExist := True;
          if (not isRecDataExist)
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr2_t001_ric7a')) )  // наименование
            isRecDataExist := True;
          if (not isRecDataExist)
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr2_t001_ric7b')) )  // дата
            isRecDataExist := True;
          if (not isRecDataExist)
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr2_t001_ric7c')) )  // номер документов
            isRecDataExist := True;
          if (not isRecDataExist)
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr2_t001_ric8' )) )  // дата отпуска (отгрузки) товаров
            isRecDataExist := True;
          if (not isRecDataExist)
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr2_t001_ric10a')) )  // Дата документов, подтверждающих поступление выручки на счет плательщика в банке РБ
            isRecDataExist := True;
          if (not isRecDataExist)
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr2_t001_ric10b')) )  // номер документов, подтверждающих поступление выручки на счет плательщика в банке РБ
            isRecDataExist := True;

          SetIsHidenRecByPath(sAddr, (not isRecDataExist) );  // запись таблицы
        } // for
      }
      //#endregion Список записей таблицы
      //------------------------------------------------------------------------------------------------------
    }
    while False;
    if (not isAllOk)
    { Break; }
    //#endregion Приложение 5
    //********************************************************************************************************

    //========================================================================================================
    //#region Приложение 6
    //--------------------------------------------------------------------------------------------------------
    do
    {
      var sUppAddr : string;  sUppAddr := 'NDS/NDS_v3_reestr3/NDS_v3_reestr3_t001';
      // признак данные приложения существуют
      var isDataExist : boolean;  isDataExist := False;

      //------------------------------------------------------------------------------------------------------
      //#region Список записей таблицы
      {
        var sUppAddrRec : string ;  sUppAddrRec := sUppAddr+'/NDS_v3_reestr3_t001_ri';
        var NodeCount   : LongInt;  NodeCount   := GetNodeCountByPath(sUppAddrRec);
        var Ind : LongInt;
        for (Ind:=0; Ind<NodeCount; Ind++)
        {
          var sAddr : string;  sAddr := sUppAddrRec + GetIter(Ind);

          var isRecDataExist : boolean;  isRecDataExist := False;
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr3_t001_ric1' )) )  // Наименование владельца магазина беспошлинной торговли
            isRecDataExist := True;
          if (not isRecDataExist)
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr3_t001_ric2a')) )  // дата
            isRecDataExist := True;
          if (not isRecDataExist)
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr3_t001_ric2b')) )  // номер
            isRecDataExist := True;
          if (not isRecDataExist)
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr3_t001_ric3a')) )  // номер
            isRecDataExist := True;
          if (not isRecDataExist)
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr3_t001_ric3b')) )  // дата
            isRecDataExist := True;
          if (not isRecDataExist)
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr3_t001_ric4a')) )  // номер выдачи
            isRecDataExist := True;
          if (not isRecDataExist)
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr3_t001_ric4b')) )  // дата выдачи
            isRecDataExist := True;
          if (not isRecDataExist)
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr3_t001_ric5' )) )  // период действия
            isRecDataExist := True;
          if (not isRecDataExist)
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr3_t001_ric6' )) )  // регистрационный номер выпуска товаров
            isRecDataExist := True;
          if (not isRecDataExist)
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr3_t001_ric7' )) )  // дата выпуска товаров
            isRecDataExist := True;

          SetIsHidenRecByPath(sAddr, (not isRecDataExist) );  // запись таблицы
        } // for
      }
      //#endregion Список записей таблицы
      //------------------------------------------------------------------------------------------------------
    }
    while False;
    if (not isAllOk)
    { Break; }
    //#endregion Приложение 6
    //********************************************************************************************************

    //========================================================================================================
    //#region Приложение 7
    //--------------------------------------------------------------------------------------------------------
    do
    {
      var sUppAddr : string;  sUppAddr := 'NDS/NDS_v3_reestr4/NDS_v3_reestr4_t001';
      // признак данные приложения существуют
      var isDataExist : boolean;  isDataExist := False;

      //------------------------------------------------------------------------------------------------------
      //#region Список записей таблицы
      {
        var sUppAddrRec : string ;  sUppAddrRec := sUppAddr+'/NDS_v3_reestr4_t001_ri';
        var NodeCount   : LongInt;  NodeCount   := GetNodeCountByPath(sUppAddrRec);
        var Ind : LongInt;
        for (Ind:=0; Ind<NodeCount; Ind++)
        {
          var sAddr : string;  sAddr := sUppAddrRec + GetIter(Ind);

          var isRecDataExist : boolean;  isRecDataExist := False;
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr4_t001_ric1')) )  // Наименование услуг
            isRecDataExist := True;
          if (not isRecDataExist)
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr4_t001_ric2a')) )  // дата
            isRecDataExist := True;
          if (not isRecDataExist)
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr4_t001_ric2b')) )  // номер
            isRecDataExist := True;
          if (not isRecDataExist)
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr4_t001_ric3a')) )  // наименование
            isRecDataExist := True;
          if (not isRecDataExist)
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr4_t001_ric3b')) )  // номер
            isRecDataExist := True;
          if (not isRecDataExist)
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr4_t001_ric3c')) )  // дата
            isRecDataExist := True;

          SetIsHidenRecByPath(sAddr, (not isRecDataExist) );  // запись таблицы
        } // for
      }
      //#endregion Список записей таблицы
      //------------------------------------------------------------------------------------------------------
    }
    while False;
    if (not isAllOk)
    { Break; }
    //#endregion Приложение 7
    //********************************************************************************************************

    //========================================================================================================
    //#region Приложение 8
    //--------------------------------------------------------------------------------------------------------
    do
    {
      var sUppAddr : string;  sUppAddr := 'NDS/NDS_v3_reestr5/NDS_v3_reestr5_t001';
      // признак данные приложения существуют
      var isDataExist : boolean;  isDataExist := False;

      //------------------------------------------------------------------------------------------------------
      //#region Список записей таблицы
      {
        var sUppAddrRec : string ;  sUppAddrRec := sUppAddr+'/NDS_v3_reestr5_t001_ri';
        var NodeCount   : LongInt;  NodeCount   := GetNodeCountByPath(sUppAddrRec);
        var Ind : LongInt;
        for (Ind:=0; Ind<NodeCount; Ind++)
        {
          var sAddr : string;  sAddr := sUppAddrRec + GetIter(Ind);

          var isRecDataExist : boolean;  isRecDataExist := False;
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr5_t001_ric1a')) )  // дата
            isRecDataExist := True;
          if (not isRecDataExist)
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr5_t001_ric1b')) )  // номер
            isRecDataExist := True;
          if (not isRecDataExist)
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr5_t001_ric2' )) )  // дата получения
            isRecDataExist := True;
          if (not isRecDataExist)
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr5_t001_ric3' )) )  // дата подписания плательщиком
            isRecDataExist := True;

          SetIsHidenRecByPath(sAddr, (not isRecDataExist) );  // запись таблицы
        } // for
      }
      //#endregion Список записей таблицы
      //------------------------------------------------------------------------------------------------------
    }
    while False;
    if (not isAllOk)
    { Break; }
    //#endregion Приложение 8
    //********************************************************************************************************

    //========================================================================================================
    //#region Приложение 9
    //--------------------------------------------------------------------------------------------------------
    do
    {
      var sUppAddr : string;  sUppAddr := 'NDS/NDS_v3_reestr6/NDS_v3_reestr6_t001';
      // признак данные приложения существуют
      var isDataExist : boolean;  isDataExist := False;

      //------------------------------------------------------------------------------------------------------
      //#region Список записей таблицы
      {
        var sUppAddrRec : string ;  sUppAddrRec := sUppAddr+'/NDS_v3_reestr6_t001_ri';
        var NodeCount   : LongInt;  NodeCount   := GetNodeCountByPath(sUppAddrRec);
        var Ind : LongInt;
        for (Ind:=0; Ind<NodeCount; Ind++)
        {
          var sAddr : string;  sAddr := sUppAddrRec + GetIter(Ind);

          var isRecDataExist : boolean;  isRecDataExist := False;
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr6_t001_ric1a')) )  // Дата договора купли-продажи, заключенного с лизингодателем
            isRecDataExist := True;
          if (not isRecDataExist)
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr6_t001_ric1b')) )  // Номер договора купли-продажи, заключенного с лизингодателем
            isRecDataExist := True;
          if (not isRecDataExist)
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr6_t001_ric2a')) )  // номер
            isRecDataExist := True;
          if (not isRecDataExist)
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr6_t001_ric2b')) )  // дата выдачи
            isRecDataExist := True;
          if (not isRecDataExist)
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr6_t001_ric3' )) )  // период действия
            isRecDataExist := True;
          //todo список:
          //NDS_v3_reestr6_t001_rit004
          //NDS_v3_reestr6_t001_rit005
          if (not isRecDataExist)
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr6_t001_ric6' )) )  // регистрационный номер выпуска товаров
            isRecDataExist := True;
          if (not isRecDataExist)
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr6_t001_ric7' )) )  // дата проставления отметки <товар вывезен>
            isRecDataExist := True;
          if (not isRecDataExist)
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr6_t001_ric8' )) )  // дата разрешения на убытие товара
            isRecDataExist := True;

          SetIsHidenRecByPath(sAddr, (not isRecDataExist) );  // запись таблицы
        } // for
      }
      //#endregion Список записей таблицы
      //------------------------------------------------------------------------------------------------------
    }
    while False;
    if (not isAllOk)
    { Break; }
    //#endregion Приложение 9
    //********************************************************************************************************

    //========================================================================================================
    //#region Приложение 10
    //--------------------------------------------------------------------------------------------------------
    do
    {
      var sUppAddr : string;  sUppAddr := 'NDS/NDS_v3_reestr7/NDS_v3_reestr7_t001';
      // признак данные приложения существуют
      var isDataExist : boolean;  isDataExist := False;

      //------------------------------------------------------------------------------------------------------
      //#region Список записей таблицы
      {
        var sUppAddrRec : string ;  sUppAddrRec := sUppAddr+'/NDS_v3_reestr7_t001_ri';
        var NodeCount   : LongInt;  NodeCount   := GetNodeCountByPath(sUppAddrRec);
        var Ind : LongInt;
        for (Ind:=0; Ind<NodeCount; Ind++)
        {
          var sAddr : string;  sAddr := sUppAddrRec + GetIter(Ind);

          var isRecDataExist : boolean;  isRecDataExist := False;
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr7_t001_ric1d')) )  // дата
            isRecDataExist := True;
          if (not isRecDataExist)
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr7_t001_ric1n')) )  // номер
            isRecDataExist := True;
          if (not isRecDataExist)
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr7_t001_ric2d')) )  // дата
            isRecDataExist := True;
          if (not isRecDataExist)
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr7_t001_ric2n')) )  // номер
            isRecDataExist := True;
          if (not isRecDataExist)
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr7_t001_ric3s')) )  // серия
            isRecDataExist := True;
          if (not isRecDataExist)
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr7_t001_ric3n')) )  // номер
            isRecDataExist := True;
          if (not isRecDataExist)
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr7_t001_ric3d')) )  // дата выдачи
            isRecDataExist := True;
          if (not isRecDataExist)
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr7_t001_ric3o')) )  // орган
            isRecDataExist := True;
          if (not isRecDataExist)
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr7_t001_ric3g')) )  // государственный регистрационный номер
            isRecDataExist := True;
          if (not isRecDataExist)
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr7_t001_ric4d')) )  // дата
            isRecDataExist := True;
          if (not isRecDataExist)
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr7_t001_ric4n')) )  // номер
            isRecDataExist := True;

          SetIsHidenRecByPath(sAddr, (not isRecDataExist) );  // запись таблицы
        } // for
      }
      //#endregion Список записей таблицы
      //------------------------------------------------------------------------------------------------------
    }
    while False;
    if (not isAllOk)
    { Break; }
    //#endregion Приложение 10
    //********************************************************************************************************

    //========================================================================================================
    //#region Приложение 11
    //--------------------------------------------------------------------------------------------------------
    do
    {
      var sUppAddr : string;  sUppAddr := 'NDS/NDS_v3_reestr8/NDS_v3_reestr8_t001';
      // признак данные приложения существуют
      var isDataExist : boolean;  isDataExist := False;

      //------------------------------------------------------------------------------------------------------
      //#region Список записей таблицы
      {
        var sUppAddrRec : string ;  sUppAddrRec := sUppAddr+'/NDS_v3_reestr8_t001_ri';
        var NodeCount   : LongInt;  NodeCount   := GetNodeCountByPath(sUppAddrRec);
        var Ind : LongInt;
        for (Ind:=0; Ind<NodeCount; Ind++)
        {
          var sAddr : string;  sAddr := sUppAddrRec + GetIter(Ind);

          var isRecDataExist : boolean;  isRecDataExist := False;
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr8_t001_ric1d')) )  // дата
            isRecDataExist := True;
          if (not isRecDataExist)
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr8_t001_ric1n')) )  // номер
            isRecDataExist := True;
          if (not isRecDataExist)
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr8_t001_ric2' )) )  // Идентификационный код (номер) налогоплательщика (импортера)
            isRecDataExist := True;
          if (not isRecDataExist)
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr8_t001_ric3' )) )  // Дата поступления в МНС информации
            isRecDataExist := True;

          SetIsHidenRecByPath(sAddr, (not isRecDataExist) );  // запись таблицы
        } // for
      }
      //#endregion Список записей таблицы
      //------------------------------------------------------------------------------------------------------
    }
    while False;
    if (not isAllOk)
    { Break; }
    //#endregion Приложение 110
    //********************************************************************************************************

    //========================================================================================================
    //#region Приложение 12
    //--------------------------------------------------------------------------------------------------------
    do
    {
      var sUppAddr : string;  sUppAddr := 'NDS/NDS_v3_reestr12/NDS_v3_reestr12_t001';
      // признак данные приложения существуют
      var isDataExist : boolean;  isDataExist := False;

      //------------------------------------------------------------------------------------------------------
      //#region Список записей таблицы
      {
        var sUppAddrRec : string ;  sUppAddrRec := sUppAddr+'/NDS_v3_reestr12_t001_ri';
        var NodeCount   : LongInt;  NodeCount   := GetNodeCountByPath(sUppAddrRec);
        var Ind : LongInt;
        for (Ind:=0; Ind<NodeCount; Ind++)
        {
          var sAddr : string;  sAddr := sUppAddrRec + GetIter(Ind);

          var isRecDataExist : boolean;  isRecDataExist := False;
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr12_t001_ric1')) )  // Наименование услуги
            isRecDataExist := True;
          if (not isRecDataExist)
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr12_t001_ric2d')) )  // дата
            isRecDataExist := True;
          if (not isRecDataExist)
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr12_t001_ric2n')) )  // номер
            isRecDataExist := True;
          if (not isRecDataExist)
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr12_t001_ric3d')) )  // дата
            isRecDataExist := True;
          if (not isRecDataExist)
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr12_t001_ric3n')) )  // номер
            isRecDataExist := True;
          if (not isRecDataExist)
          if (not GetIsNullValueByPath(sAddr+TFID('NDS_v3_reestr12_t001_ric4' )) )  // Момент фактической реализации
            isRecDataExist := True;

          SetIsHidenRecByPath(sAddr, (not isRecDataExist) );  // запись таблицы
        } // for
      }
      //#endregion Список записей таблицы
      //------------------------------------------------------------------------------------------------------
    }
    while False;
    if (not isAllOk)
    { Break; }
    //#endregion Приложение 12
    //********************************************************************************************************

  }
  while False;
  Result := isAllOk;
@end. // On_Visable
//#endregion ДЕЙСТВИЯ ВЫПОЛНЯЕМЫЕ ПРИ УСТАНОВКЕ ВИДИМОСТИ ПОЛЕЙ
//************************************************************************************************************


//============================================================================================================
//#region ДЕЙСТВИЯ ВЫПОЛНЯЕМЫЕ ПРИ ПРОВЕРКЕ
//------------------------------------------------------------------------------------------------------------
// Проверить отчет
@Script On_Check : boolean;
  //==========================================================================================================
  //#region СЕРВИС
  //----------------------------------------------------------------------------------------------------------
  //#endregion СЕРВИС
  //**********************************************************************************************************
@begin
  Result := False;
  var isAllOk : boolean;  isAllOk := True;

  var otRepStruct : ITRBTablRepStruct;  LoadVipRef(otRepStruct, 'TRBTablRepStruct');
  otRepStruct.SetSessionID(cRepSesID);
  do
  {
    _Loop otRepStruct
    {
      if (not otRepStruct.GetIsLeaf)
      { Continue; }
      if (InStr('xmlns', otRepStruct.Name) != 0)
      { Continue; }
      if (otRepStruct.sPath = '')
      {
        FpLog(FormatStr_2(
          'On_Check: (не задан _sPath): NRec=%S; "%S"'
        , string(otRepStruct.NRec)
        , otRepStruct.Name
        ) );
        Continue;
      }

      if (otRepStruct.wNeedMode = 1)
      { // если это обязательный для заполнения элемент
        if (not GetIsHidenRecInTreeByPath(otRepStruct.sPath) )
        { // если это НЕ скрытая запись в иерархии
          if (otRepStruct.sValue = '')
          { // если значение не определено
            if (otRepStruct.Name = 'NDS_v3_reestr_t001_ric5_Value')  // номер (до 2013)
            { // "номер (до 2013)" - всегда пустой
              Continue;
            }
            pRLogRepEditor.AddErrMessage(otRepStruct.sPath, 'Не задано значение показателя');
          } // если значение не определено
        } // если это НЕ скрытая запись в иерархии
      } // если это обязательный для заполнения элемент

      if (GetIsRequiredInTreeByPath(otRepStruct.sPath) )
      { // если это обязательный элемент в иерархии
        if (otRepStruct.isHidenRec)
        { // если это скрытая запись
          if (otRepStruct.Name = 'NDS_v3_part2_f002_Value')  // По сроку уплаты - дата
          { // в этом алгоритме не учитывается атрибут: "xsi:nil",
            Continue;
          }
          pRLogRepEditor.AddErrMessage(otRepStruct.sPath, 'отсутствует обязательный элемент в XML');
        } // если это скрытая запись
      } // если это обязательный элемент в иерархии

    } // _Loop otRepStruct
  }
  while False;
  FreeVipInterface(otRepStruct);

  Result := isAllOk;
@end. // On_Check
//#endregion ДЕЙСТВИЯ ВЫПОЛНЯЕМЫЕ ПРИ ПРОВЕРКЕ
//************************************************************************************************************


//============================================================================================================
//#region ДЕЙСТВИЯ ВЫПОЛНЯЕМЫЕ ПРИ РАСЧЕТЕ
//------------------------------------------------------------------------------------------------------------
// Рассчитать поля отчета
@Script On_Recalc : boolean;
  //==========================================================================================================
  //#region СЕРВИС
  //----------------------------------------------------------------------------------------------------------
  // Вычислить сумму налога
  function myCalcNal(
    _sPathSum : string;  // путь на показатель суммы
    _sPathNal : string;  // путь на показатель налога
    _sProc    : string;  // строковое представление процентной ставки
    _Proc     : double   // процентная ставка
  ) : boolean;
  {
    var Sum : double;  Sum := GetDoubleValueByPath(_sPathSum);
    var Nal : double;  Nal := Sum * _Proc;
    Result := SetDoubleValueByPath(_sPathNal, Nal);
    if (Result)
    {
      pRLogRepEditor.AddProtCalc(
        _sPathNal
      , 'НДС=сумма*'+_sProc
      , FormatStr_3(
          '%S=%S*%S'
        , DTS(GetDoubleValueByPath(_sPathNal), 2)
        , DTS(Sum, 2)
        , _sProc
        )
      );
    }
  } // function myCalcNal
  //#endregion СЕРВИС
  //**********************************************************************************************************
@begin
  Result := False;
  var isAllOk : boolean;  isAllOk := True;

  var otRepStruct : ITRBTablRepStruct;  LoadVipRef(otRepStruct, 'TRBTablRepStruct');
  otRepStruct.SetSessionID(cRepSesID);
  do
  {
    //========================================================================================================
    //#region Заголовок
    //--------------------------------------------------------------------------------------------------------
    do
    {
      var sUppAddr : string;  sUppAddr := 'NDS';

      // тип и версия отчета
      SetStringValueByPath(sUppAddr+'/type'   , 'NDS');
      SetStringValueByPath(sUppAddr+'/version', '3'  );

      // период
      var wYear : word;  wYear := Year(otTablRepHead.dBeg);
      SetDoubleValueByPath(sUppAddr+'/year', wYear);
      var wTPer : word;  wTPer := otTablRepHead.wTPer-2;
      SetDoubleValueByPath(sUppAddr+'/term_type', wTPer);
      var wPerNpp : word;  wPerNpp := 1;
      if (wTPer = 1)
      { // если тип периода - месяц
        wPerNpp := Month(otTablRepHead.dBeg);
      } // если тип периода - месяц
      SetDoubleValueByPath(sUppAddr+'/period', wPerNpp);

      // валюта
      var sCurrencyCode : string;  sCurrencyCode := GetStringValueByPath(sUppAddr+'/currencyCode');
      if  (sCurrencyCode != '974')
      and (sCurrencyCode != '933')
      {
        sCurrencyCode := '933';
      }
      var sCurrencyForm : string;  sCurrencyForm := if(sCurrencyCode = '974', 'THOUSAND', 'RUBLE');
      SetStringValueByPath(sUppAddr+'/currencyCode'               , sCurrencyCode);
      SetStringValueByPath(sUppAddr+'/currencyValuesDisplayFormat', sCurrencyForm);

      // округлять суммы к уплате до наличных
      if (GetIsNullValueByPath(sUppAddr+'/roundToCash') )
      {
        SetBooleanValueByPath(sUppAddr+'/roundToCash', False);
      }
    }
    while False;
    if (not isAllOk)
    { Break; }
    //#endregion Заголовок
    //********************************************************************************************************

    //========================================================================================================
    //#region Часть I Разделы 1-3
    //--------------------------------------------------------------------------------------------------------
    do
    {
      var sUppAddr : string;  sUppAddr := 'NDS/NDS_v3_part1/NDS_v3_part1_t001';

      //======================================================================================================
      //#region Раздел I. НАЛОГОВАЯ БАЗА
      myCalcNal(sUppAddr+TFID('NDS_v3_part1_t001_r1c2'  ), sUppAddr+TFID('NDS_v3_part1_t001_r1c4'  ), '(20/120)', (20/120) );  // 1. По операциям, облагаемым по ставке 20/120
      myCalcNal(sUppAddr+TFID('NDS_v3_part1_t001_r101c2'), sUppAddr+TFID('NDS_v3_part1_t001_r101c4'), '(25/125)', (25/125) );  // 11.По операциям, облагаемым по ставке 25/125
      myCalcNal(sUppAddr+TFID('NDS_v3_part1_t001_r2c2'  ), sUppAddr+TFID('NDS_v3_part1_t001_r2c4'  ), '(18/118)', (18/118) );  // 2. По операциям, облагаемым по ставке 18/118
      myCalcNal(sUppAddr+TFID('NDS_v3_part1_t001_r3c2'  ), sUppAddr+TFID('NDS_v3_part1_t001_r3c4'  ), '(10/110)', (10/110) );  // 3. По операциям, облагаемым по ставке 10/110
      myCalcNal(sUppAddr+TFID('NDS_v3_part1_t001_r4c2'  ), sUppAddr+TFID('NDS_v3_part1_t001_r4c4'  ), '(0.1667)', (0.1667) );  // 4. По операциям, облагаемым по ставке 16.67%
      myCalcNal(sUppAddr+TFID('NDS_v3_part1_t001_r5c2'  ), sUppAddr+TFID('NDS_v3_part1_t001_r5c4'  ), '(0.0909)', (0.0909) );  // 5. По операциям, облагаемым по ставке 9,09%

      //------------------------------------------------------------------------------------------------------
      //#region 14. ИТОГО по разделу I (сумма)
      {
        var sum01_ : double;  sum01_ := GetDoubleValueByPath(sUppAddr+TFID('NDS_v3_part1_t001_r1c2'  ) );  // стр.1. 
        var sum01t : double;  sum01t := GetDoubleValueByPath(sUppAddr+TFID('NDS_v3_part1_t001_r101c2') );  // стр.1`.
        var sum02_ : double;  sum02_ := GetDoubleValueByPath(sUppAddr+TFID('NDS_v3_part1_t001_r2c2'  ) );  // стр.2. 
        var sum03_ : double;  sum03_ := GetDoubleValueByPath(sUppAddr+TFID('NDS_v3_part1_t001_r3c2'  ) );  // стр.3. 
        var sum04_ : double;  sum04_ := GetDoubleValueByPath(sUppAddr+TFID('NDS_v3_part1_t001_r4c2'  ) );  // стр.4. 
        var sum05_ : double;  sum05_ := GetDoubleValueByPath(sUppAddr+TFID('NDS_v3_part1_t001_r5c2'  ) );  // стр.5. 
        var sum06_ : double;  sum06_ := GetDoubleValueByPath(sUppAddr+TFID('NDS_v3_part1_t001_r6c2'  ) );  // стр.6.
        var sum07_ : double;  sum07_ := GetDoubleValueByPath(sUppAddr+TFID('NDS_v3_part1_t001_r7c2'  ) );  // стр.7. 
        var sum08_ : double;  sum08_ := GetDoubleValueByPath(sUppAddr+TFID('NDS_v3_part1_t001_r8c2'  ) );  // стр.8.
        var sum09_ : double;  sum09_ := GetDoubleValueByPath(sUppAddr+TFID('NDS_v3_part1_t001_r9c2'  ) );  // стр.9. 
        var sum09t : double;  sum09t := GetDoubleValueByPath(sUppAddr+TFID('NDS_v3_part1_t001_r9p1c2') );  // стр.9`.
        var sum10_ : double;  sum10_ := GetDoubleValueByPath(sUppAddr+TFID('NDS_v3_part1_t001_r10c2' ) );  // стр.10.
        var sum13_ : double;  sum13_ := GetDoubleValueByPath(sUppAddr+TFID('NDS_v3_part1_t001_r11c2' ) );  // стр.13.
        var Itog : double;  Itog :=
          sum01_
        + sum01t
        + sum02_
        + sum03_
        + sum04_
        + sum05_
        + sum06_
        + sum07_
        + sum08_
        + sum09_
        + sum09t
        + sum10_
        + sum13_
        ;

        if (SetDoubleValueByPath(sUppAddr+TFID('NDS_v3_part1_t001_r12c2'), Itog) )
        { // если удалось установить значение показателя
          pRLogRepEditor.AddProtCalc(
            sUppAddr+TFID('NDS_v3_part1_t001_r12c2')
          , 'стр.14.Сумма='
            + 'стр.1. '
            +'+стр.1`.'
            +'+стр.2. '
            +'+стр.3. '
            +'+стр.4. '
            +'+стр.5. '
            +'+стр.6. '
            +'+стр.7. '
            +'+стр.8. '
            +'+стр.9. '
            +'+стр.9`.'
            +'+стр.10.'
            +'+стр.13.'
          , DTS(Itog)+'='
            +    DTS(sum01_)
            +'+'+DTS(sum01t)
            +'+'+DTS(sum02_)
            +'+'+DTS(sum03_)
            +'+'+DTS(sum04_)
            +'+'+DTS(sum05_)
            +'+'+DTS(sum06_)
            +'+'+DTS(sum07_)
            +'+'+DTS(sum08_)
            +'+'+DTS(sum09_)
            +'+'+DTS(sum09t)
            +'+'+DTS(sum10_)
            +'+'+DTS(sum13_)
          );
        } // если удалось установить значение показателя
      }
      //#endregion 14. ИТОГО по разделу I (сумма)
      //------------------------------------------------------------------------------------------------------

      //------------------------------------------------------------------------------------------------------
      //#region 14. ИТОГО по разделу I (НДС)
      {
        var sum01_ : double;  sum01_ := GetDoubleValueByPath(sUppAddr+TFID('NDS_v3_part1_t001_r1c4'  ) );  // стр.1. 
        var sum01t : double;  sum01t := GetDoubleValueByPath(sUppAddr+TFID('NDS_v3_part1_t001_r101c4') );  // стр.1`.
        var sum02_ : double;  sum02_ := GetDoubleValueByPath(sUppAddr+TFID('NDS_v3_part1_t001_r2c4'  ) );  // стр.2. 
        var sum03_ : double;  sum03_ := GetDoubleValueByPath(sUppAddr+TFID('NDS_v3_part1_t001_r3c4'  ) );  // стр.3. 
        var sum04_ : double;  sum04_ := GetDoubleValueByPath(sUppAddr+TFID('NDS_v3_part1_t001_r4c4'  ) );  // стр.4. 
        var sum05_ : double;  sum05_ := GetDoubleValueByPath(sUppAddr+TFID('NDS_v3_part1_t001_r5c4'  ) );  // стр.5. 
        var sum10_ : double;  sum10_ := GetDoubleValueByPath(sUppAddr+TFID('NDS_v3_part1_t001_r6c4'  ) );  // стр.10.
        var sum11_ : double;  sum11_ := GetDoubleValueByPath(sUppAddr+TFID('NDS_v3_part1_t001_r7c4'  ) );  // стр.11.
        var sum12_ : double;  sum12_ := GetDoubleValueByPath(sUppAddr+TFID('NDS_v3_part1_t001_r8c4'  ) );  // стр.12.
        var sum13_ : double;  sum13_ := GetDoubleValueByPath(sUppAddr+TFID('NDS_v3_part1_t001_r9c4'  ) );  // стр.13.
        var Itog : double;  Itog :=
          sum01_
        + sum01t
        + sum02_
        + sum03_
        + sum04_
        + sum05_
        + sum10_
        + sum11_
        + sum12_
        + sum13_
        ;
        //КонсультанПлюс примечание:
        //В строке 14 графы 4 отражается сумма НДС, полученная путем суммирования сумм НДС, отраженных в разделе I.
        //Если сумма показателей графы 4 по строкам 1 - 13 раздела I имеет отрицательное значение, то в графе 4 по строке 14 проставляется ноль (0).
        if (Itog < 0)
        {
          Itog := 0;
        }

        if (SetDoubleValueByPath(sUppAddr+TFID('NDS_v3_part1_t001_r10c4'), Itog) )
        { // если удалось установить значение показателя
          pRLogRepEditor.AddProtCalc(
            sUppAddr+TFID('NDS_v3_part1_t001_r12c2')
          , 'стр.14.НДС='
            + 'стр.1. '
            +'+стр.1`.'
            +'+стр.2. '
            +'+стр.3. '
            +'+стр.4. '
            +'+стр.5. '
            +'+стр.10.'
            +'+стр.11.'
            +'+стр.12.'
            +'+стр.13.'
          , DTS(Itog)+'='
            +    DTS(sum01_)
            +'+'+DTS(sum01t)
            +'+'+DTS(sum02_)
            +'+'+DTS(sum03_)
            +'+'+DTS(sum04_)
            +'+'+DTS(sum05_)
            +'+'+DTS(sum10_)
            +'+'+DTS(sum11_)
            +'+'+DTS(sum12_)
            +'+'+DTS(sum13_)
          );
        } // если удалось установить значение показателя
      }
      //#endregion 14. ИТОГО по разделу I (НДС)
      //------------------------------------------------------------------------------------------------------

      //------------------------------------------------------------------------------------------------------
      //#region 14в. Сумма НДС по остальным объектам
      {
        var sum14_ : double;  sum14_ := GetDoubleValueByPath(sUppAddr+TFID('NDS_v3_part1_t001_r10c4') );  // стр.14. 
        var sum14a : double;  sum14a := GetDoubleValueByPath(sUppAddr+TFID('NDS_v3_part1_t001_r11c4') );  // стр.14а.
        var sum14b : double;  sum14b := GetDoubleValueByPath(sUppAddr+TFID('NDS_v3_part1_t001_r12c4') );  // стр.14б.
        var sum14v : double;  sum14v := sum14_ - sum14a - sum14b;  // стр.14в.

        if (SetDoubleValueByPath(sUppAddr+TFID('NDS_v3_part1_t001_r13c4'), sum14v) )
        { // если удалось установить значение показателя
          pRLogRepEditor.AddProtCalc(
            sUppAddr+TFID('NDS_v3_part1_t001_r13c4')
          , 'стр.14в.=стр.14.-стр.14а.-стр.14б.'
          , DTS(sum14v)+'='
            +    DTS(sum14_)
            +'+'+DTS(sum14a)
            +'+'+DTS(sum14b)
          );
        } // если удалось установить значение показателя
      }
      //#endregion 14в. Сумма НДС по остальным объектам
      //------------------------------------------------------------------------------------------------------
      //#endregion Раздел I. НАЛОГОВАЯ БАЗА
      //******************************************************************************************************

      //======================================================================================================
      //#region Раздел II. НАЛОГОВЫЕ ВЫЧЕТЫ
      {
        var sum15a : double;  sum15a := GetDoubleValueByPath(sUppAddr+TFID('NDS_v3_part1_t001_r15c4') );  // стр.15а.
        var sum15b : double;  sum15b := GetDoubleValueByPath(sUppAddr+TFID('NDS_v3_part1_t001_r16c4') );  // стр.15б.
        var sum15v : double;  sum15v := GetDoubleValueByPath(sUppAddr+TFID('NDS_v3_part1_t001_r17c4') );  // стр.15в.
        var sum15_ : double;  sum15_ := sum15a + sum15b + sum15v;                                         // стр.15.
        if (SetDoubleValueByPath(sUppAddr+TFID('NDS_v3_part1_t001_r14c4'), sum15_) )
        { // если удалось установить значение показателя
          pRLogRepEditor.AddProtCalc(
            sUppAddr+TFID('NDS_v3_part1_t001_r14c4')
          , 'стр.15. = стр.15а. + стр.15б. + стр.15в.'
          , DTS(sum15_)+'='
            +    DTS(sum15a)
            +'+'+DTS(sum15b)
            +'+'+DTS(sum15v)
          );
        } // если удалось установить значение показателя
      }
      //#endregion Раздел II. НАЛОГОВЫЕ ВЫЧЕТЫ
      //******************************************************************************************************

      //======================================================================================================
      //#region Раздел III. СУММА НАЛОГА
      //------------------------------------------------------------------------------------------------------
      //#region 16а. Сумма НДС нарастающим итогом, остающаяся в распоряжении (подлежащая уменьшению) (строка 14а - строка 15а)
      {
        var sum14a : double;  sum14a := GetDoubleValueByPath(sUppAddr+TFID('NDS_v3_part1_t001_r11c4') );  // стр.14а.
        var sum15a : double;  sum15a := GetDoubleValueByPath(sUppAddr+TFID('NDS_v3_part1_t001_r15c4') );  // стр.15а.
        var sum16a : double;  sum16a := sum14a-sum15a;  // стр.16а.
        if (SetDoubleValueByPath(sUppAddr+TFID('NDS_v3_part1_t001_r19c4'), sum16a) )
        { // если удалось установить значение показателя
          pRLogRepEditor.AddProtCalc(
            sUppAddr+TFID('NDS_v3_part1_t001_r19c4')
          , 'стр.16а. = стр.14а. - стр.15а.'
          , DTS(sum16a)+'='
            +    DTS(sum14a)
            +'-'+DTS(sum15a)
          );
        } // если удалось установить значение показателя
      }
      //#endregion 16а. Сумма НДС нарастающим итогом, остающаяся в распоряжении (подлежащая уменьшению) (строка 14а - строка 15а)
      //------------------------------------------------------------------------------------------------------

      //------------------------------------------------------------------------------------------------------
      //#region 16б. Сумма НДС нарастающим итогом, подлежащая уплате (возврату) по объектам, по оборотам по реализации которых предоставлен налоговый кредит (строка 14б - строка 15б)
      {
        var sum14b : double;  sum14b := GetDoubleValueByPath(sUppAddr+TFID('NDS_v3_part1_t001_r12c4') );  // стр.14б.
        var sum15b : double;  sum15b := GetDoubleValueByPath(sUppAddr+TFID('NDS_v3_part1_t001_r16c4') );  // стр.15б.
        var sum16b : double;  sum16b := sum14b-sum15b;  // стр.16b.
        if (SetDoubleValueByPath(sUppAddr+TFID('NDS_v3_part1_t001_r20c4'), sum16b) )
        { // если удалось установить значение показателя
          pRLogRepEditor.AddProtCalc(
            sUppAddr+TFID('NDS_v3_part1_t001_r20c4')
          , 'стр.16б. = стр.14б. - стр.15б.'
          , DTS(sum16b)+'='
            +    DTS(sum14b)
            +'-'+DTS(sum15b)
          );
        } // если удалось установить значение показателя
      }
      //#endregion 16б. Сумма НДС нарастающим итогом, подлежащая уплате (возврату) по объектам, по оборотам по реализации которых предоставлен налоговый кредит (строка 14б - строка 15б)
      //------------------------------------------------------------------------------------------------------

      //------------------------------------------------------------------------------------------------------
      //#region 16в. Сумма НДС нарастающим итогом, подлежащая уплате (возврату) (строка 14в - строка 15в)
      {
        var sum14v : double;  sum14v := GetDoubleValueByPath(sUppAddr+TFID('NDS_v3_part1_t001_r13c4') );  // стр.14в.
        var sum15v : double;  sum15v := GetDoubleValueByPath(sUppAddr+TFID('NDS_v3_part1_t001_r17c4') );  // стр.15в.
        var sum16v : double;  sum16v := sum14v-sum15v;  // стр.16b.
        if (SetDoubleValueByPath(sUppAddr+TFID('NDS_v3_part1_t001_r21c4'), sum16v) )
        { // если удалось установить значение показателя
          pRLogRepEditor.AddProtCalc(
            sUppAddr+TFID('NDS_v3_part1_t001_r21c4')
          , 'стр.16в. = стр.14в. - стр.15в.'
          , DTS(sum16v)+'='
            +    DTS(sum14v)
            +'-'+DTS(sum15v)
          );
        } // если удалось установить значение показателя
      }
      //#endregion 16в. Сумма НДС нарастающим итогом, подлежащая уплате (возврату) (строка 14в - строка 15в)
      //------------------------------------------------------------------------------------------------------

      //------------------------------------------------------------------------------------------------------
      //#region
      // 16. Сумма НДС нарастающим итогом - всего (строка 16а + строка 16б + строка 16в)
      {
        var sum16a : double;  sum16a := GetDoubleValueByPath(sUppAddr+TFID('NDS_v3_part1_t001_r19c4') );  // стр.16а.
        var sum16b : double;  sum16b := GetDoubleValueByPath(sUppAddr+TFID('NDS_v3_part1_t001_r20c4') );  // стр.16б.
        var sum16v : double;  sum16v := GetDoubleValueByPath(sUppAddr+TFID('NDS_v3_part1_t001_r21c4') );  // стр.16в.
        var sum16_ : double;  sum16_ := sum16a+sum16b+sum16v;  // стр.16.
        if (SetDoubleValueByPath(sUppAddr+TFID('NDS_v3_part1_t001_r18c4'), sum16_) )
        { // если удалось установить значение показателя
          pRLogRepEditor.AddProtCalc(
            sUppAddr+TFID('NDS_v3_part1_t001_r18c4')
          , 'стр.16. = стр.16а. + стр.16б. + стр.16в.'
          , DTS(sum16_)+'='
            +    DTS(sum16a)
            +'+'+DTS(sum16b)
            +'+'+DTS(sum16v)
          );
        } // если удалось установить значение показателя
      }
      //#endregion 16. Сумма НДС нарастающим итогом - всего (строка 16а + строка 16б + строка 16в)
      //------------------------------------------------------------------------------------------------------

      //------------------------------------------------------------------------------------------------------
      //#region 17. Сумма НДС за отчетный период - всего (строка 17а + строка 17б + строка 17в)
      {
        var sum17a : double;  sum17a := GetDoubleValueByPath(sUppAddr+TFID('NDS_v3_part1_t001_r23c4') );  // стр.17а.
        var sum17b : double;  sum17b := GetDoubleValueByPath(sUppAddr+TFID('NDS_v3_part1_t001_r24c4') );  // стр.17б.
        var sum17v : double;  sum17v := GetDoubleValueByPath(sUppAddr+TFID('NDS_v3_part1_t001_r25c4') );  // стр.17в.
        var sum17_ : double;  sum17_ := sum17a+sum17b+sum17v;  // стр.17.
        if (SetDoubleValueByPath(sUppAddr+TFID('NDS_v3_part1_t001_r22c4'), sum17_) )
        { // если удалось установить значение показателя
          pRLogRepEditor.AddProtCalc(
            sUppAddr+TFID('NDS_v3_part1_t001_r22c4')
          , 'стр.17. = стр.17а. + стр.17б. + стр.17в.'
          , DTS(sum17_)+'='
            +    DTS(sum17a)
            +'+'+DTS(sum17b)
            +'+'+DTS(sum17v)
          );
        } // если удалось установить значение показателя
      }
      //#endregion 17. Сумма НДС за отчетный период - всего (строка 17а + строка 17б + строка 17в)
      //------------------------------------------------------------------------------------------------------

      //------------------------------------------------------------------------------------------------------
      //#region 18. Сумма НДС к уплате (возврату) за отчетный период - всего (строка 17б + строка 17в)
      {
        var sum17b : double;  sum17b := GetDoubleValueByPath(sUppAddr+TFID('NDS_v3_part1_t001_r24c4') );  // стр.17б.
        var sum17v : double;  sum17v := GetDoubleValueByPath(sUppAddr+TFID('NDS_v3_part1_t001_r25c4') );  // стр.17в.
        var sum18_ : double;  sum18_ := sum17b+sum17v;  // стр.18.
        if (SetDoubleValueByPath(sUppAddr+TFID('NDS_v3_part1_t001_r26c4'), sum18_) )
        { // если удалось установить значение показателя
          pRLogRepEditor.AddProtCalc(
            sUppAddr+TFID('NDS_v3_part1_t001_r26c4')
          , 'стр.18. = стр.17б. + стр.17в.'
          , DTS(sum18_)+'='
            +    DTS(sum17b)
            +'+'+DTS(sum17v)
          );
        } // если удалось установить значение показателя
      }
      //#endregion 18. Сумма НДС к уплате (возврату) за отчетный период - всего (строка 17б + строка 17в)
      //------------------------------------------------------------------------------------------------------
      //#endregion Раздел III. СУММА НАЛОГА
      //******************************************************************************************************

      //======================================================================================================
      //#region дата по сроку уплаты
      {
        var sDateAddr : string;  sDateAddr := 'NDS/NDS_v3_part1'+TFID('NDS_v3_part1_f002');
        if (GetIsNullValueByPath(sDateAddr) )
        { // если не задана дата
          SetDateValueByPath(sDateAddr, Cur_Date);
        }
      }
      //#endregion дата по сроку уплаты
      //******************************************************************************************************

      //======================================================================================================
      //#region ИТОГО к уплате по ЧАСТИ I
      {
        var sum18_ : double;  sum18_ := GetDoubleValueByPath(sUppAddr+TFID('NDS_v3_part1_t001_r26c4') );  // стр.18.
        var ItogP1 : double;  ItogP1 := sum18_;  // ИТОГО к уплате по ЧАСТИ I
        if (SetDoubleValueByPath('NDS'+TFID('NDS_v3_f003'), ItogP1) )
        { // если удалось установить значение показателя
          pRLogRepEditor.AddProtCalc(
            'NDS'+TFID('NDS_v3_f003')
          , 'ИТОГО к уплате по ЧАСТИ I = стр.18.'
          , DTS(ItogP1)+'='+DTS(sum18_)
          );
        } // если удалось установить значение показателя
      }
      //#endregion ИТОГО к уплате по ЧАСТИ I
      //******************************************************************************************************
    }
    while False;
    if (not isAllOk)
    { Break; }
    //#endregion Часть I Разделы 1-3
    //********************************************************************************************************

    //========================================================================================================
    //#region Часть I Раздел 4
    //--------------------------------------------------------------------------------------------------------
    do
    {
      var sUppAddr : string;  sUppAddr := 'NDS/NDS_v3_part1/NDS_v3_part1_t003';

      //------------------------------------------------------------------------------------------------------
      //#region 1. Суммы НДС текущего налогового периода, предъявленные при приобретении - всего (стр. 1.1 + стр. 1.2 + стр. 1.3)
      {
        var sum1_1 : double;  sum1_1 := GetDoubleValueByPath(sUppAddr+TFID('NDS_v3_part1_t003_r2c2a') );  // стр.1.1.
        var sum1_2 : double;  sum1_2 := GetDoubleValueByPath(sUppAddr+TFID('NDS_v3_part1_t003_r2c2b') );  // стр.1.2.
        var sum1_3 : double;  sum1_3 := GetDoubleValueByPath(sUppAddr+TFID('NDS_v3_part1_t003_r2c2c') );  // стр.1.3.
        var sum1__ : double;  sum1__ := sum1_1+sum1_2+sum1_3;  // стр.1.
        if (SetDoubleValueByPath(sUppAddr+TFID('NDS_v3_part1_t003_r1c2'), sum1__) )
        { // если удалось установить значение показателя
          pRLogRepEditor.AddProtCalc(
            sUppAddr+TFID('NDS_v3_part1_t003_r1c2')
          , 'стр.1. = стр.1.1. + стр.1.2. + стр.1.3.'
          , DTS(sum1__)+'='
            +    DTS(sum1_1)
            +'+'+DTS(sum1_2)
            +'+'+DTS(sum1__)
          );
        } // если удалось установить значение показателя
      }
      //#endregion 1. Суммы НДС текущего налогового периода, предъявленные при приобретении - всего (стр. 1.1 + стр. 1.2 + стр. 1.3)
      //------------------------------------------------------------------------------------------------------

      //------------------------------------------------------------------------------------------------------
      //#region 12.1. Декретом Президента Республики Беларусь от 6 августа 2009 г. N 10
      do
      {
        var ItogSum : double;  ItogSum := 0;
        var sMes : string;  sMes := '';  // сообщение
        var sDec : string;  sDec := '';  // расшифровка

        var sUppAddrRec : string ;  sUppAddrRec := sUppAddr+'/NDS_v3_part1_t003P1_ri';
        var NodeCount   : LongInt;  NodeCount   := GetNodeCountByPath(sUppAddrRec);
        var Ind : LongInt;
        for (Ind:=0; Ind<NodeCount; Ind++)
        {
          var sAddr : string;  sAddr := sUppAddrRec + GetIter(Ind);

          var Sum : double;  Sum := GetDoubleValueByPath(sAddr+TFID('NDS_v3_part1P1_t003_rics') );
          ItogSum += Sum;
          sMes += if(sMes='', '', '+')+'стр12.1.'+string(Ind+1)+'.';
          sDec += if(sDec='', '', '+')+DTS(Sum);
        } // for
        if (not isAllOk)
        { Break; }

        sMes := 'стр.12.1.='+sMes;
        sDec := DTS(ItogSum)+'='+sDec;
        if (SetDoubleValueByPath(sUppAddr+TFID('NDS_v3_part1_t003_r18p11c2'), ItogSum) )
        { // если удалось установить значение показателя
          pRLogRepEditor.AddProtCalc(
            sUppAddr+TFID('NDS_v3_part1_t003_r18p11c2')
          , sMes
          , sDec
          );
        } // если удалось установить значение показателя
      }
      while False;
      if (not isAllOk)
      { Break; }
      //#endregion 12.1. Декретом Президента Республики Беларусь от 6 августа 2009 г. N 10
      //------------------------------------------------------------------------------------------------------

      //------------------------------------------------------------------------------------------------------
      //#region 12.2. инвестиционными договорами, заключенными с Республикой Беларусь
      do
      {
        var ItogSum : double;  ItogSum := 0;
        var sMes : string;  sMes := '';  // сообщение
        var sDec : string;  sDec := '';  // расшифровка

        var sUppAddrRec : string ;  sUppAddrRec := sUppAddr+'/NDS_v3_part1_t003P2_ri';
        var NodeCount   : LongInt;  NodeCount   := GetNodeCountByPath(sUppAddrRec);
        var Ind : LongInt;
        for (Ind:=0; Ind<NodeCount; Ind++)
        {
          var sAddr : string;  sAddr := sUppAddrRec + GetIter(Ind);

          var Sum : double;  Sum := GetDoubleValueByPath(sAddr+TFID('NDS_v3_part1P2_t003_rics') );
          ItogSum += Sum;
          sMes += if(sMes='', '', '+')+'стр12.2.'+string(Ind+1)+'.';
          sDec += if(sDec='', '', '+')+DTS(Sum);
        } // for
        if (not isAllOk)
        { Break; }

        sMes := 'стр.12.2.='+sMes;
        sDec := DTS(ItogSum)+'='+sDec;
        if (SetDoubleValueByPath(sUppAddr+TFID('NDS_v3_part1_t003_r18p21c2'), ItogSum) )
        { // если удалось установить значение показателя
          pRLogRepEditor.AddProtCalc(
            sUppAddr+TFID('NDS_v3_part1_t003_r18p21c2')
          , sMes
          , sDec
          );
        } // если удалось установить значение показателя
      }
      while False;
      if (not isAllOk)
      { Break; }
      //#endregion 12.2. инвестиционными договорами, заключенными с Республикой Беларусь
      //------------------------------------------------------------------------------------------------------

      //------------------------------------------------------------------------------------------------------
      //#region 12.3. иными актами Президента Республики Беларусь
      do
      {
        var ItogSum : double;  ItogSum := 0;
        var sMes : string;  sMes := '';  // сообщение
        var sDec : string;  sDec := '';  // расшифровка

        var sUppAddrRec : string ;  sUppAddrRec := sUppAddr+'/NDS_v3_part1_t003P3_ri';
        var NodeCount   : LongInt;  NodeCount   := GetNodeCountByPath(sUppAddrRec);
        var Ind : LongInt;
        for (Ind:=0; Ind<NodeCount; Ind++)
        {
          var sAddr : string;  sAddr := sUppAddrRec + GetIter(Ind);

          var Sum : double;  Sum := GetDoubleValueByPath(sAddr+TFID('NDS_v3_part1P3_t003_rics') );
          ItogSum += Sum;
          sMes += if(sMes='', '', '+')+'стр12.3.'+string(Ind+1)+'.';
          sDec += if(sDec='', '', '+')+DTS(Sum);
        } // for
        if (not isAllOk)
        { Break; }

        sMes := 'стр.12.3.='+sMes;
        sDec := DTS(ItogSum)+'='+sDec;
        if (SetDoubleValueByPath(sUppAddr+TFID('NDS_v3_part1_t003_r18p31c2'), ItogSum) )
        { // если удалось установить значение показателя
          pRLogRepEditor.AddProtCalc(
            sUppAddr+TFID('NDS_v3_part1_t003_r18p31c2')
          , sMes
          , sDec
          );
        } // если удалось установить значение показателя
      }
      while False;
      if (not isAllOk)
      { Break; }
      //#endregion 12.3. иными актами Президента Республики Беларусь
      //------------------------------------------------------------------------------------------------------

      //------------------------------------------------------------------------------------------------------
      //#region 12. Принятые к вычету в полном объеме суммы НДС в соответствии с: (строка 12.1+ строка 12.2 + строка 12.3)
      {
        var sum12_1 : double;  sum12_1 := GetDoubleValueByPath(sUppAddr+TFID('NDS_v3_part1_t003_r18p11c2') );  // стр.12.1.
        var sum12_2 : double;  sum12_2 := GetDoubleValueByPath(sUppAddr+TFID('NDS_v3_part1_t003_r18p21c2') );  // стр.12.2.
        var sum12_3 : double;  sum12_3 := GetDoubleValueByPath(sUppAddr+TFID('NDS_v3_part1_t003_r18p31c2') );  // стр.12.3.
        var sum12__ : double;  sum12__ := sum12_1+sum12_2+sum12_3;  // стр.12.
        if (SetDoubleValueByPath(sUppAddr+TFID('NDS_v3_part1_t003_r18c2'), sum12__) )
        { // если удалось установить значение показателя
          pRLogRepEditor.AddProtCalc(
            sUppAddr+TFID('NDS_v3_part1_t003_r18c2')
          , 'стр.12. = стр.12.1. + стр.12.2. + стр.12.3.'
          , DTS(sum12__)+'='
            +    DTS(sum12_1)
            +'+'+DTS(sum12_2)
            +'+'+DTS(sum12_3)
          );
        } // если удалось установить значение показателя
      }
      //#endregion 12. Принятые к вычету в полном объеме суммы НДС в соответствии с: (строка 12.1+ строка 12.2 + строка 12.3)
      //------------------------------------------------------------------------------------------------------

      //------------------------------------------------------------------------------------------------------
      //#region 13. Сумма НДС, не поступившая в бюджет в связи с применением освобождения от НДС
      // (строка 8 раздела I части I налоговой декларации (расчета) по НДС - строка 6.1) x 20 / 100) - строка 6.1)
      {
        var sumP1R1s8__ : double;  sumP1R1s8__ := GetDoubleValueByPath('NDS/NDS_v3_part1/NDS_v3_part1_t001'+TFID('NDS_v3_part1_t001_r8c2') );  // ЧастьI.Раздел1.стр8
        var sumP1R4s6_1 : double;  sumP1R4s6_1 := GetDoubleValueByPath(sUppAddr+TFID('NDS_v3_part1_t003_r8c2b') );  // стр.6.1.
        var sumP1R4s13_ : double;  sumP1R4s13_ := ((sumP1R1s8__-sumP1R4s6_1)*20/100)-sumP1R4s6_1;  // стр.13.
        if (SetDoubleValueByPath(sUppAddr+TFID('NDS_v3_part1_t003_r19c2'), sumP1R4s13_) )
        { // если удалось установить значение показателя
          pRLogRepEditor.AddProtCalc(
            sUppAddr+TFID('NDS_v3_part1_t003_r19c2')
          , 'стр.13. = ((ЧастьI.Раздел1.стр8 - стр.6.1.) * 20/100) - стр.6.1.'
          , DTS(sumP1R4s13_)+'='+'(('+DTS(sumP1R1s8__)+'-'+DTS(sumP1R4s6_1)+')*20/100)-'+DTS(sumP1R4s6_1)
          );
        } // если удалось установить значение показателя
      }
      //#endregion 13. Сумма НДС, не поступившая в бюджет в связи с применением освобождения от НДС
      //------------------------------------------------------------------------------------------------------
    }
    while False;
    if (not isAllOk)
    { Break; }
    //#endregion Часть I Раздел 4
    //********************************************************************************************************

    //========================================================================================================
    //#region Часть I Раздел 5
    //--------------------------------------------------------------------------------------------------------
    // ИТОГО за год, в том числе:
    do
    {
      var sUppAddr : string;  sUppAddr := 'NDS/NDS_v3_part1/NDS_v3_part1_l4i/NDS_v3_part1_l4i_t001';

      var sum01 : double;  sum01 := GetDoubleValueByPath(sUppAddr+TFID('NDS_v3_part1_l4i_t001_r1c2') );  // Январь  
      var sum02 : double;  sum02 := GetDoubleValueByPath(sUppAddr+TFID('NDS_v3_part1_l4i_t001_r2c2') );  // Февраль 
      var sum03 : double;  sum03 := GetDoubleValueByPath(sUppAddr+TFID('NDS_v3_part1_l4i_t001_r3c2') );  // Март    
      var sum04 : double;  sum04 := GetDoubleValueByPath(sUppAddr+TFID('NDS_v3_part1_l4i_t001_r4c2') );  // Апрель  
      var sum05 : double;  sum05 := GetDoubleValueByPath(sUppAddr+TFID('NDS_v3_part1_l4i_t001_r5c2') );  // Май     
      var sum06 : double;  sum06 := GetDoubleValueByPath(sUppAddr+TFID('NDS_v3_part1_l4i_t001_r6c2') );  // Июнь    
      var sum07 : double;  sum07 := GetDoubleValueByPath(sUppAddr+TFID('NDS_v3_part1_l4i_t001_r1c4') );  // Июль    
      var sum08 : double;  sum08 := GetDoubleValueByPath(sUppAddr+TFID('NDS_v3_part1_l4i_t001_r2c4') );  // Август  
      var sum09 : double;  sum09 := GetDoubleValueByPath(sUppAddr+TFID('NDS_v3_part1_l4i_t001_r3c4') );  // Сентябрь
      var sum10 : double;  sum10 := GetDoubleValueByPath(sUppAddr+TFID('NDS_v3_part1_l4i_t001_r4c4') );  // Октябрь 
      var sum11 : double;  sum11 := GetDoubleValueByPath(sUppAddr+TFID('NDS_v3_part1_l4i_t001_r5c4') );  // Ноябрь  
      var sum12 : double;  sum12 := GetDoubleValueByPath(sUppAddr+TFID('NDS_v3_part1_l4i_t001_r6c4') );  // Декабрь 
      var ItogG : double;  ItogG := sum01+sum02+sum03+sum04+sum05+sum06+sum07+sum08+sum09+sum10+sum11+sum12;

      var sMes : string;  sMes := 'ИТОГО за год=Январь+Февраль+Март+Апрель+Май+Июнь+Июль+Август+Сентябрь+Октябрь+Ноябрь+Декабрь';
      var sDec : string;  sDec := DTS(ItogG)+'='+DTS(sum01)+'+'+DTS(sum02)+'+'+DTS(sum03)+'+'+DTS(sum04)+'+'+DTS(sum05)+'+'+DTS(sum06)
                                            +'+'+DTS(sum07)+'+'+DTS(sum08)+'+'+DTS(sum09)+'+'+DTS(sum10)+'+'+DTS(sum11)+'+'+DTS(sum12);
      if (SetDoubleValueByPath(sUppAddr+TFID('NDS_v3_part1_l4i_t001_r7c4'), ItogG) )
      { // если удалось установить значение показателя
        pRLogRepEditor.AddProtCalc(
          sUppAddr+TFID('NDS_v3_part1_l4i_t001_r7c4')
        , sMes
        , sDec
        );
      } // если удалось установить значение показателя
    }
    while False;
    if (not isAllOk)
    { Break; }
    //#endregion Часть I Раздел 5
    //********************************************************************************************************

    //========================================================================================================
    //#region Часть II
    //--------------------------------------------------------------------------------------------------------
    do
    {
      var sUppAddr : string;  sUppAddr := 'NDS/NDS_v3_part2';

      //------------------------------------------------------------------------------------------------------
      //#region Список государств
      var ItogP2 : double;  ItogP2 := 0;
      var sMes   : string;  sMes   := '';  // сообщение
      var sDec   : string;  sDec   := '';  // расшифровка
      do
      {
        // удалим лишние скрытые записи из списка
        pModiRepStruct.DeleteTblExtraHidenRec(sUppAddr, 'NDS_v3_part2_l1i');

        var sUppAddrRec : string ;  sUppAddrRec := sUppAddr+'/NDS_v3_part2_l1i';
        var NodeCount   : LongInt;  NodeCount   := GetNodeCountByPath(sUppAddrRec);
        var Ind : LongInt;
        for (Ind:=0; Ind<NodeCount; Ind++)
        {
          var sAddr : string;  sAddr := sUppAddrRec + GetIter(Ind);
          var codeGos : string;  codeGos := GetStringValueByPath(sAddr+TFID('NDS_v3_part2_l1i_f001') );  // Код государства

          sAddr += '/NDS_v3_part2_l1i_t002';

          myCalcNal(sAddr+TFID('NDS_v3_part2_l1i_t002_r1c2' ), sAddr+TFID('NDS_v3_part2_l1i_t002_r1c4' ), '(20/100)', (20/100) );  // 1. По операциям, облагаемым по ставке 20/100
          myCalcNal(sAddr+TFID('NDS_v3_part2_l1i_t002_r1c2A'), sAddr+TFID('NDS_v3_part2_l1i_t002_r1c4A'), '(20/100)', (20/100) );  // 1.1. в том числе увеличение налоговой базы 20/100
          myCalcNal(sAddr+TFID('NDS_v3_part2_l1i_t002_r2c2' ), sAddr+TFID('NDS_v3_part2_l1i_t002_r2c4' ), '(10/100)', (10/100) );  // 2. По операциям, облагаемым по ставке 10/100
          myCalcNal(sAddr+TFID('NDS_v3_part2_l1i_t002_r2c2A'), sAddr+TFID('NDS_v3_part2_l1i_t002_r2c4A'), '(20/100)', (20/100) );  // 2.1. в том числе увеличение налоговой базы 10/100

          // 4. ИТОГО
          var sum1 : double;  sum1 := GetDoubleValueByPath(sAddr+TFID('NDS_v3_part2_l1i_t002_r1c4') );  // стр.1.
          var sum2 : double;  sum2 := GetDoubleValueByPath(sAddr+TFID('NDS_v3_part2_l1i_t002_r2c4') );  // стр.2.
          var sum4 : double;  sum4 := sum1+sum2;  // стр.4.
          if (SetDoubleValueByPath(sAddr+TFID('NDS_v3_part2_l1i_t002_r4c4'), sum4) )
          { // если удалось установить значение показателя
            pRLogRepEditor.AddProtCalc(
              sAddr+TFID('NDS_v3_part2_l1i_t002_r4c4')
            , 'стр.4. = стр.1. + стр.2.'
            , DTS(sum4)+'='+DTS(sum1)+'+'+DTS(sum2)
            );
          } // если удалось установить значение показателя

          var Sum : double;  Sum := GetDoubleValueByPath(sAddr+TFID('NDS_v3_part2_l1i_t002_r4c4') );  // 4. ИТОГО
          ItogP2 += Sum;
          sMes += if(sMes='', '', '+')+'стр.4.('+codeGos+')';
          sDec += if(sDec='', '', '+')+DTS(Sum);
        } // for
        if (not isAllOk)
        { Break; }
      }
      while False;
      if (not isAllOk)
      { Break; }
      //#endregion Список государств
      //------------------------------------------------------------------------------------------------------

      //======================================================================================================
      //#region дата по сроку уплаты
      {
        var sDateAddr : string;  sDateAddr := 'NDS/NDS_v3_part2'+TFID('NDS_v3_part2_f002');
        if (GetIsNullValueByPath(sDateAddr) )
        { // если не задана дата
          SetDateValueByPath(sDateAddr, Cur_Date);
        }
      }
      //#endregion дата по сроку уплаты
      //******************************************************************************************************

      //======================================================================================================
      // Итого к уплате по части II
      sMes := 'ИТОГО к уплате по ЧАСТИ II='+sMes;
      sDec := DTS(ItogP2)+'='+sDec;
      if (SetDoubleValueByPath('NDS'+TFID('NDS_v3_f004'), ItogP2) )
      { // если удалось установить значение показателя
        pRLogRepEditor.AddProtCalc(
          'NDS'+TFID('NDS_v3_f004')
        , sMes
        , sDec
        );
      } // если удалось установить значение показателя
      //======================================================================================================
    }
    while False;
    if (not isAllOk)
    { Break; }
    //#endregion Часть II
    //********************************************************************************************************

    //========================================================================================================
    //#region Приложение 1
    //--------------------------------------------------------------------------------------------------------
    do
    {
      var sUppAddr : string;  sUppAddr := 'NDS/NDS_v3_spravka_t001';

      //------------------------------------------------------------------------------------------------------
      //#region Список записей
      // удалим лишние скрытые записи из списка
      pModiRepStruct.DeleteTblExtraHidenRec(sUppAddr, 'NDS_v3_spravka_t001_ri');
      //#endregion Список записей
      //------------------------------------------------------------------------------------------------------
    }
    while False;
    if (not isAllOk)
    { Break; }
    //#endregion Приложение 1
    //********************************************************************************************************

    //========================================================================================================
    //#region Приложение 2
    //--------------------------------------------------------------------------------------------------------
    do
    {
      var sUppAddr : string;  sUppAddr := 'NDS/NDS_v3_reestr';

      //------------------------------------------------------------------------------------------------------
      //#region Список записей
      var ItogSum : double;  ItogSum := 0;
      var sUppAddrTbl : string ;  sUppAddrTbl := sUppAddr+'/NDS_v3_reestr_t001';
      var sUppAddrRec : string ;  sUppAddrRec := sUppAddrTbl+'/NDS_v3_reestr_t001_ri';

      //------------------------------------------------------------------------------------------------------
      // удалим лишние скрытые записи из списка
      pModiRepStruct.DeleteTblExtraHidenRec(sUppAddrTbl, 'NDS_v3_reestr_t001_ri');

      //------------------------------------------------------------------------------------------------------
      // побежали по списку
      var NodeCount   : LongInt;  NodeCount   := GetNodeCountByPath(sUppAddrRec);
      var Ind : LongInt;
      for (Ind:=0; Ind<NodeCount; Ind++)
      {
        var sAddr : string;  sAddr := sUppAddrRec + GetIter(Ind);

        ItogSum += GetDoubleValueByPath(sAddr+TFID('NDS_v3_reestr_t001_ric6') );
      } // for
      if (not isAllOk)
      { Break; }
      //#endregion Список записей
      //------------------------------------------------------------------------------------------------------

      //======================================================================================================
      // ИТОГО по Приложению
      SetDoubleValueByPath(sUppAddrTbl+TFID('NDS_v3_reestr_t001_rnc6'), ItogSum);    // Итого сумма
      SetStringValueByPath(sUppAddr+TFID('NDS_v3_reestr_f002'),                      // Руководитель организации
        GetStringValueByPath('NDS/NDS_v3_f005/NDS_v3_f005_Value')                    // Руководитель организации
      );
      //======================================================================================================
    }
    while False;
    if (not isAllOk)
    { Break; }
    //#endregion Приложение 2
    //********************************************************************************************************

    //========================================================================================================
    //#region Приложение 3
    //--------------------------------------------------------------------------------------------------------
    do
    {
      var sUppAddr : string;  sUppAddr := 'NDS/NDS_v3_reestr0';

      //------------------------------------------------------------------------------------------------------
      //#region Список записей
      var ItogSum : double;  ItogSum := 0;
      var sUppAddrTbl : string ;  sUppAddrTbl := sUppAddr+'/NDS_v3_reestr0_t001';
      var sUppAddrRec : string ;  sUppAddrRec := sUppAddrTbl+'/NDS_v3_reestr0_t001_ri';

      //------------------------------------------------------------------------------------------------------
      // удалим лишние скрытые записи из списка
      pModiRepStruct.DeleteTblExtraHidenRec(sUppAddrTbl, 'NDS_v3_reestr0_t001_ri');

      //------------------------------------------------------------------------------------------------------
      // побежали по списку
      var NodeCount   : LongInt;  NodeCount   := GetNodeCountByPath(sUppAddrRec);
      var Ind : LongInt;
      for (Ind:=0; Ind<NodeCount; Ind++)
      {
        var sAddr : string;  sAddr := sUppAddrRec + GetIter(Ind);

        ItogSum += GetDoubleValueByPath(sAddr+TFID('NDS_v3_reestr0_t001_ric7') );
      } // for
      if (not isAllOk)
      { Break; }
      //#endregion Список записей
      //------------------------------------------------------------------------------------------------------

      //======================================================================================================
      // ИТОГО по Приложению
      SetDoubleValueByPath(sUppAddrTbl+TFID('NDS_v3_reestr0_t001_rnc7'), ItogSum);   // Итого сумма
      SetStringValueByPath(sUppAddr+TFID('NDS_v3_reestr0_f002'),                     // Руководитель организации
        GetStringValueByPath('NDS/NDS_v3_f005/NDS_v3_f005_Value')                    // Руководитель организации
      );
      //======================================================================================================
    }
    while False;
    if (not isAllOk)
    { Break; }
    //#endregion Приложение 3
    //********************************************************************************************************

    //========================================================================================================
    //#region Приложение 4
    //--------------------------------------------------------------------------------------------------------
    do
    {
      var sUppAddr : string;  sUppAddr := 'NDS/NDS_v3_reestr1';

      //------------------------------------------------------------------------------------------------------
      //#region Список записей
      var ItogSum : double;  ItogSum := 0;
      var sUppAddrTbl : string ;  sUppAddrTbl := sUppAddr+'/NDS_v3_reestr1_t001';
      var sUppAddrRec : string ;  sUppAddrRec := sUppAddrTbl+'/NDS_v3_reestr1_t001_ri';

      //------------------------------------------------------------------------------------------------------
      // удалим лишние скрытые записи из списка
      pModiRepStruct.DeleteTblExtraHidenRec(sUppAddrTbl, 'NDS_v3_reestr1_t001_ri');

      //------------------------------------------------------------------------------------------------------
      // побежали по списку
      var NodeCount   : LongInt;  NodeCount   := GetNodeCountByPath(sUppAddrRec);
      var Ind : LongInt;
      for (Ind:=0; Ind<NodeCount; Ind++)
      {
        var sAddr : string;  sAddr := sUppAddrRec + GetIter(Ind);

        ItogSum += GetDoubleValueByPath(sAddr+TFID('NDS_v3_reestr1_t001_ric9') );
      } // for
      if (not isAllOk)
      { Break; }
      //#endregion Список записей
      //------------------------------------------------------------------------------------------------------

      //======================================================================================================
      // ИТОГО по Приложению
      SetDoubleValueByPath(sUppAddrTbl+TFID('NDS_v3_reestr1_t001_rnc9'), ItogSum);   // Итого сумма
      SetStringValueByPath(sUppAddr+TFID('NDS_v3_reestr1_f002'),                     // Руководитель организации
        GetStringValueByPath('NDS/NDS_v3_f005/NDS_v3_f005_Value')                    // Руководитель организации
      );
      //======================================================================================================
    }
    while False;
    if (not isAllOk)
    { Break; }
    //#endregion Приложение 4
    //********************************************************************************************************

    //========================================================================================================
    //#region Приложение 5
    //--------------------------------------------------------------------------------------------------------
    do
    {
      var sUppAddr : string;  sUppAddr := 'NDS/NDS_v3_reestr2';

      //------------------------------------------------------------------------------------------------------
      //#region Список записей
      var ItogSum : double;  ItogSum := 0;
      var sUppAddrTbl : string ;  sUppAddrTbl := sUppAddr+'/NDS_v3_reestr2_t001';
      var sUppAddrRec : string ;  sUppAddrRec := sUppAddrTbl+'/NDS_v3_reestr2_t001_ri';

      //------------------------------------------------------------------------------------------------------
      // удалим лишние скрытые записи из списка
      pModiRepStruct.DeleteTblExtraHidenRec(sUppAddrTbl, 'NDS_v3_reestr2_t001_ri');

      //------------------------------------------------------------------------------------------------------
      // побежали по списку
      var NodeCount   : LongInt;  NodeCount   := GetNodeCountByPath(sUppAddrRec);
      var Ind : LongInt;
      for (Ind:=0; Ind<NodeCount; Ind++)
      {
        var sAddr : string;  sAddr := sUppAddrRec + GetIter(Ind);

        ItogSum += GetDoubleValueByPath(sAddr+TFID('NDS_v3_reestr2_t001_ric9') );
      } // for
      if (not isAllOk)
      { Break; }
      //#endregion Список записей
      //------------------------------------------------------------------------------------------------------

      //======================================================================================================
      // ИТОГО по Приложению
      SetDoubleValueByPath(sUppAddrTbl+TFID('NDS_v3_reestr2_t001_rnc9'), ItogSum);   // Итого сумма
      SetStringValueByPath(sUppAddr+TFID('NDS_v3_reestr2_f002'),                     // Руководитель организации
        GetStringValueByPath('NDS/NDS_v3_f005/NDS_v3_f005_Value')                    // Руководитель организации
      );
      //======================================================================================================
    }
    while False;
    if (not isAllOk)
    { Break; }
    //#endregion Приложение 5
    //********************************************************************************************************

    //========================================================================================================
    //#region Приложение 6
    //--------------------------------------------------------------------------------------------------------
    do
    {
      var sUppAddr : string;  sUppAddr := 'NDS/NDS_v3_reestr3';

      //------------------------------------------------------------------------------------------------------
      //#region Список записей
      var ItogSum : double;  ItogSum := 0;
      var sUppAddrTbl : string ;  sUppAddrTbl := sUppAddr+'/NDS_v3_reestr3_t001';
      var sUppAddrRec : string ;  sUppAddrRec := sUppAddrTbl+'/NDS_v3_reestr3_t001_ri';

      //------------------------------------------------------------------------------------------------------
      // удалим лишние скрытые записи из списка
      pModiRepStruct.DeleteTblExtraHidenRec(sUppAddrTbl, 'NDS_v3_reestr3_t001_ri');

      //------------------------------------------------------------------------------------------------------
      // побежали по списку
      var NodeCount   : LongInt;  NodeCount   := GetNodeCountByPath(sUppAddrRec);
      var Ind : LongInt;
      for (Ind:=0; Ind<NodeCount; Ind++)
      {
        var sAddr : string;  sAddr := sUppAddrRec + GetIter(Ind);

        ItogSum += GetDoubleValueByPath(sAddr+TFID('NDS_v3_reestr3_t001_ric8') );
      } // for
      if (not isAllOk)
      { Break; }
      //#endregion Список записей
      //------------------------------------------------------------------------------------------------------

      //======================================================================================================
      // ИТОГО по Приложению
      SetDoubleValueByPath(sUppAddrTbl+TFID('NDS_v3_reestr3_t001_rnc8'), ItogSum);   // Итого сумма
      SetStringValueByPath(sUppAddr+TFID('NDS_v3_reestr3_f002'),                     // Руководитель организации
        GetStringValueByPath('NDS/NDS_v3_f005/NDS_v3_f005_Value')                    // Руководитель организации
      );
      //======================================================================================================
    }
    while False;
    if (not isAllOk)
    { Break; }
    //#endregion Приложение 6
    //********************************************************************************************************

    //========================================================================================================
    //#region Приложение 7
    //--------------------------------------------------------------------------------------------------------
    do
    {
      var sUppAddr : string;  sUppAddr := 'NDS/NDS_v3_reestr4';

      //------------------------------------------------------------------------------------------------------
      //#region Список записей
      var ItogSum : double;  ItogSum := 0;
      var sUppAddrTbl : string ;  sUppAddrTbl := sUppAddr+'/NDS_v3_reestr4_t001';
      var sUppAddrRec : string ;  sUppAddrRec := sUppAddrTbl+'/NDS_v3_reestr4_t001_ri';

      //------------------------------------------------------------------------------------------------------
      // удалим лишние скрытые записи из списка
      pModiRepStruct.DeleteTblExtraHidenRec(sUppAddrTbl, 'NDS_v3_reestr4_t001_ri');

      //------------------------------------------------------------------------------------------------------
      // побежали по списку
      var NodeCount   : LongInt;  NodeCount   := GetNodeCountByPath(sUppAddrRec);
      var Ind : LongInt;
      for (Ind:=0; Ind<NodeCount; Ind++)
      {
        var sAddr : string;  sAddr := sUppAddrRec + GetIter(Ind);

        ItogSum += GetDoubleValueByPath(sAddr+TFID('NDS_v3_reestr4_t001_ric4') );
      } // for
      if (not isAllOk)
      { Break; }
      //#endregion Список записей
      //------------------------------------------------------------------------------------------------------

      //======================================================================================================
      // ИТОГО по Приложению
      SetDoubleValueByPath(sUppAddrTbl+TFID('NDS_v3_reestr4_t001_rnc4'), ItogSum);   // Итого сумма
      SetStringValueByPath(sUppAddr+TFID('NDS_v3_reestr4_f002'),                     // Руководитель организации
        GetStringValueByPath('NDS/NDS_v3_f005/NDS_v3_f005_Value')                    // Руководитель организации
      );
      //======================================================================================================
    }
    while False;
    if (not isAllOk)
    { Break; }
    //#endregion Приложение 7
    //********************************************************************************************************

    //========================================================================================================
    //#region Приложение 8
    //--------------------------------------------------------------------------------------------------------
    do
    {
      var sUppAddr : string;  sUppAddr := 'NDS/NDS_v3_reestr5';

      //------------------------------------------------------------------------------------------------------
      //#region Список записей
      var ItogSum : double;  ItogSum := 0;
      var sUppAddrTbl : string ;  sUppAddrTbl := sUppAddr+'/NDS_v3_reestr5_t001';
      var sUppAddrRec : string ;  sUppAddrRec := sUppAddrTbl+'/NDS_v3_reestr5_t001_ri';

      //------------------------------------------------------------------------------------------------------
      // удалим лишние скрытые записи из списка
      pModiRepStruct.DeleteTblExtraHidenRec(sUppAddrTbl, 'NDS_v3_reestr5_t001_ri');

      //------------------------------------------------------------------------------------------------------
      // побежали по списку
      var NodeCount   : LongInt;  NodeCount   := GetNodeCountByPath(sUppAddrRec);
      var Ind : LongInt;
      for (Ind:=0; Ind<NodeCount; Ind++)
      {
        var sAddr : string;  sAddr := sUppAddrRec + GetIter(Ind);

        ItogSum += GetDoubleValueByPath(sAddr+TFID('NDS_v3_reestr5_t001_ric5') );
      } // for
      if (not isAllOk)
      { Break; }
      //#endregion Список записей
      //------------------------------------------------------------------------------------------------------

      //======================================================================================================
      // ИТОГО по Приложению
      SetDoubleValueByPath(sUppAddrTbl+TFID('NDS_v3_reestr5_t001_rnc5'), ItogSum);   // Итого сумма
      SetStringValueByPath(sUppAddr+TFID('NDS_v3_reestr5_f002'),                     // Руководитель организации
        GetStringValueByPath('NDS/NDS_v3_f005/NDS_v3_f005_Value')                    // Руководитель организации
      );
      //======================================================================================================
    }
    while False;
    if (not isAllOk)
    { Break; }
    //#endregion Приложение 8
    //********************************************************************************************************

    //========================================================================================================
    //#region Приложение 9
    //--------------------------------------------------------------------------------------------------------
    do
    {
      var sUppAddr : string;  sUppAddr := 'NDS/NDS_v3_reestr6';

      //------------------------------------------------------------------------------------------------------
      //#region Список записей
      var ItogSum : double;  ItogSum := 0;
      var sUppAddrTbl : string ;  sUppAddrTbl := sUppAddr+'/NDS_v3_reestr6_t001';
      var sUppAddrRec : string ;  sUppAddrRec := sUppAddrTbl+'/NDS_v3_reestr6_t001_ri';

      //------------------------------------------------------------------------------------------------------
      // удалим лишние скрытые записи из списка
      pModiRepStruct.DeleteTblExtraHidenRec(sUppAddrTbl, 'NDS_v3_reestr6_t001_ri');

      //------------------------------------------------------------------------------------------------------
      // побежали по списку
      var NodeCount   : LongInt;  NodeCount   := GetNodeCountByPath(sUppAddrRec);
      var Ind : LongInt;
      for (Ind:=0; Ind<NodeCount; Ind++)
      {
        var sAddr : string;  sAddr := sUppAddrRec + GetIter(Ind);

        ItogSum += GetDoubleValueByPath(sAddr+TFID('NDS_v3_reestr6_t001_ric9') );
      } // for
      if (not isAllOk)
      { Break; }
      //#endregion Список записей
      //------------------------------------------------------------------------------------------------------

      //======================================================================================================
      // ИТОГО по Приложению
      SetDoubleValueByPath(sUppAddrTbl+TFID('NDS_v3_reestr6_t001_rnc9'), ItogSum);   // Итого сумма
      SetStringValueByPath(sUppAddr+TFID('NDS_v3_reestr6_f002'),                     // Руководитель организации
        GetStringValueByPath('NDS/NDS_v3_f005/NDS_v3_f005_Value')                    // Руководитель организации
      );
      //======================================================================================================
    }
    while False;
    if (not isAllOk)
    { Break; }
    //#endregion Приложение 9
    //********************************************************************************************************

    //========================================================================================================
    //#region Приложение 10
    //--------------------------------------------------------------------------------------------------------
    do
    {
      var sUppAddr : string;  sUppAddr := 'NDS/NDS_v3_reestr7';

      //------------------------------------------------------------------------------------------------------
      //#region Список записей
      var ItogSum : double;  ItogSum := 0;
      var sUppAddrTbl : string ;  sUppAddrTbl := sUppAddr+'/NDS_v3_reestr7_t001';
      var sUppAddrRec : string ;  sUppAddrRec := sUppAddrTbl+'/NDS_v3_reestr7_t001_ri';

      //------------------------------------------------------------------------------------------------------
      // удалим лишние скрытые записи из списка
      pModiRepStruct.DeleteTblExtraHidenRec(sUppAddrTbl, 'NDS_v3_reestr7_t001_ri');

      //------------------------------------------------------------------------------------------------------
      // побежали по списку
      var NodeCount   : LongInt;  NodeCount   := GetNodeCountByPath(sUppAddrRec);
      var Ind : LongInt;
      for (Ind:=0; Ind<NodeCount; Ind++)
      {
        var sAddr : string;  sAddr := sUppAddrRec + GetIter(Ind);

        ItogSum += GetDoubleValueByPath(sAddr+TFID('NDS_v3_reestr7_t001_ric5') );
      } // for
      if (not isAllOk)
      { Break; }
      //#endregion Список записей
      //------------------------------------------------------------------------------------------------------

      //======================================================================================================
      // ИТОГО по Приложению
      SetDoubleValueByPath(sUppAddrTbl+TFID('NDS_v3_reestr7_t001_rnc5'), ItogSum);   // Итого сумма
      SetStringValueByPath(sUppAddr+TFID('NDS_v3_reestr7_f002'),                     // Руководитель организации
        GetStringValueByPath('NDS/NDS_v3_f005/NDS_v3_f005_Value')                    // Руководитель организации
      );
      //======================================================================================================
    }
    while False;
    if (not isAllOk)
    { Break; }
    //#endregion Приложение 10
    //********************************************************************************************************

    //========================================================================================================
    //#region Приложение 11
    //--------------------------------------------------------------------------------------------------------
    do
    {
      var sUppAddr : string;  sUppAddr := 'NDS/NDS_v3_reestr8';

      //------------------------------------------------------------------------------------------------------
      //#region Список записей
      var ItogSum : double;  ItogSum := 0;
      var sUppAddrTbl : string ;  sUppAddrTbl := sUppAddr+'/NDS_v3_reestr8_t001';
      var sUppAddrRec : string ;  sUppAddrRec := sUppAddrTbl+'/NDS_v3_reestr8_t001_ri';

      //------------------------------------------------------------------------------------------------------
      // удалим лишние скрытые записи из списка
      pModiRepStruct.DeleteTblExtraHidenRec(sUppAddrTbl, 'NDS_v3_reestr8_t001_ri');

      //------------------------------------------------------------------------------------------------------
      // побежали по списку
      var NodeCount   : LongInt;  NodeCount   := GetNodeCountByPath(sUppAddrRec);
      var Ind : LongInt;
      for (Ind:=0; Ind<NodeCount; Ind++)
      {
        var sAddr : string;  sAddr := sUppAddrRec + GetIter(Ind);

        ItogSum += GetDoubleValueByPath(sAddr+TFID('NDS_v3_reestr8_t001_ric4') );
      } // for
      if (not isAllOk)
      { Break; }
      //#endregion Список записей
      //------------------------------------------------------------------------------------------------------

      //======================================================================================================
      // ИТОГО по Приложению
      SetDoubleValueByPath(sUppAddrTbl+TFID('NDS_v3_reestr8_t001_rnc4'), ItogSum);   // Итого сумма
      SetStringValueByPath(sUppAddr+TFID('NDS_v3_reestr8_f002'),                     // Руководитель организации
        GetStringValueByPath('NDS/NDS_v3_f005/NDS_v3_f005_Value')                    // Руководитель организации
      );
      //======================================================================================================
    }
    while False;
    if (not isAllOk)
    { Break; }
    //#endregion Приложение 11
    //********************************************************************************************************

    //========================================================================================================
    //#region Приложение 12
    //--------------------------------------------------------------------------------------------------------
    do
    {
      var sUppAddr : string;  sUppAddr := 'NDS/NDS_v3_reestr12';

      //------------------------------------------------------------------------------------------------------
      //#region Список записей
      var ItogSum : double;  ItogSum := 0;
      var sUppAddrTbl : string ;  sUppAddrTbl := sUppAddr+'/NDS_v3_reestr12_t001';
      var sUppAddrRec : string ;  sUppAddrRec := sUppAddrTbl+'/NDS_v3_reestr12_t001_ri';

      //------------------------------------------------------------------------------------------------------
      // удалим лишние скрытые записи из списка
      pModiRepStruct.DeleteTblExtraHidenRec(sUppAddrTbl, 'NDS_v3_reestr12_t001_ri');

      //------------------------------------------------------------------------------------------------------
      // побежали по списку
      var NodeCount   : LongInt;  NodeCount   := GetNodeCountByPath(sUppAddrRec);
      var Ind : LongInt;
      for (Ind:=0; Ind<NodeCount; Ind++)
      {
        var sAddr : string;  sAddr := sUppAddrRec + GetIter(Ind);

        ItogSum += GetDoubleValueByPath(sAddr+TFID('NDS_v3_reestr12_t001_ric5') );
      } // for
      if (not isAllOk)
      { Break; }
      //#endregion Список записей
      //------------------------------------------------------------------------------------------------------

      //======================================================================================================
      // ИТОГО по Приложению
      SetDoubleValueByPath(sUppAddrTbl+TFID('NDS_v3_reestr12_t001_rnc4'), ItogSum);   // Итого сумма
      SetStringValueByPath(sUppAddr+TFID('NDS_v3_reestr12_f002'),                     // Руководитель организации
        GetStringValueByPath('NDS/NDS_v3_f005/NDS_v3_f005_Value')                     // Руководитель организации
      );
      //======================================================================================================
    }
    while False;
    if (not isAllOk)
    { Break; }
    //#endregion Приложение 12
    //********************************************************************************************************

  }
  while False;
  FreeVipInterface(otRepStruct);

  Result := isAllOk;
@end. // On_Recalc
//#endregion ДЕЙСТВИЯ ВЫПОЛНЯЕМЫЕ ПРИ РАСЧЕТЕ
//************************************************************************************************************
