//------------------------------------------------------------------------------------------------------------
//                                                                                    (c) корпорация Галактика
// Галактика 9.1 - модуль "Электронная отчетность"
// Алгоритмы расчета : "Декларация по НДС"
//------------------------------------------------------------------------------------------------------------

//============================================================================================================
//#region СЕРВИСНЫЕ МЕТОДЫ
//------------------------------------------------------------------------------------------------------------
@Script GetStrVal(fld:string):string;
@begin
  Result := Trim(XMLMAP.GetAttrValueByName(fld));
@end.

//------------------------------------------------------------------------------------------------------------
@Script GetDblVal(fld:string):double;
@begin
  Result := Double(XMLMAP.GetAttrValueByName(fld));
@end.

//------------------------------------------------------------------------------------------------------------
@Script GetIntVal(fld:string):integer;
@begin
  Result := Integer(XMLMAP.GetAttrValueByName(fld));
@end.

//------------------------------------------------------------------------------------------------------------
@Script GetFldVis(fld:string):boolean;
@begin
  Result := XMLMAP.GetAttrVisByName(fld);
@end.

//------------------------------------------------------------------------------------------------------------
@Script GetFldVisInTree(fld:string):boolean;
@begin
  Result := XMLMAP.GetAttrVisByNameInTree(fld);
@end.

//------------------------------------------------------------------------------------------------------------
@Script SetFldVal(fld:string; val:variant);
@begin
  XMLMAP.SetVariantAttrValueByName_Formula(fld,val,2);
@end.

//------------------------------------------------------------------------------------------------------------
@Script SetFldVis(fld:string;vis:boolean);
@begin
  XMLMAP.SetAttrVisByName(fld,vis);
@end.

//------------------------------------------------------------------------------------------------------------
@Script GetIter(iter:longint):string;
@begin
  Result := '';

  if (iter > 0)
    Result := '[' + String(iter) + ']';
@end.

//------------------------------------------------------------------------------------------------------------
@Script DTS_I(zName: string): string;
@begin
 Result := DoubleToStr(Round(Double(zName)), '[|-]366666666666666666666');
@end.

//------------------------------------------------------------------------------------------------------------
@Script DTS_D(zName: string): string;
@begin
  Result := DoubleToStr(Double(zName), '[|-]3666~9');
@end.

//------------------------------------------------------------------------------------------------------------
// Вставить сообщение об "ошибке"
@Script MessageErrorStop_ALG(mesMesAdrXML, mesStr, mesPole, mesMes: string; mesCountIter: integer = 0): boolean;
@begin
  MesError.InsertMesError(mesMesAdrXML, Comp(0), mesStr, mesPole, mesMes, mesCountIter);
  Result := True;
@end.

//------------------------------------------------------------------------------------------------------------
@Script GetStrNull(fld:string):boolean;
@begin
  Result := XMLMAP.GetIsNullAttrValueByName(fld);
@end.

//------------------------------------------------------------------------------------------------------------
// Получить отформатированное значение типа Double
@Script GDS0(
  _Value : double  // значение показателя
) : string;
@begin
  Result := '';
  if (_Value >= 0)
    Result :=     DoubleToStr(_Value, '[|-]36666666666666666666666666');
  else
    Result := '('+DoubleToStr(_Value, '[|-]36666666666666666666666666')+')';
@end.

//------------------------------------------------------------------------------------------------------------
// Получить отформатированное значение типа Double
@Script GD0(
  _sAddr : string  // адрес показателя
) : string;
@begin
  var dblVal : double;  dblVal := Round(GetDblVal(_sAddr) );
  Result := GDS0(dblVal);
@end.

//------------------------------------------------------------------------------------------------------------
// Пересчитать видимость заданного поля в зависимости от наличия данных
@Script ReCalcVisFldByDataExist(
  _cParent : comp;  // ссылка на родителя
  _sFld  : string   // наименование поля
);
@begin
  var isVis : boolean;  isVis := (not XMLMAP.GetIsNullAttrValueByPathOnLevel(_cParent, _sFld) );
  XMLMAP.SetAttrVisByPathOnLevel(_cParent, _sFld, isVis);
@end. // ReCalcVisFldByDataExist

//------------------------------------------------------------------------------------------------------------
// Получить значение по умолчанию для поля "Налоговый период"
@Script myGetDefPeriodCodeValue : string;
  //----------------------------------------------------------------------------------------------------------
  const
    // типы налоговых периодов
    lc_RepTPer_Not    = 0;  // не определен
    lc_RepTPer_Month  = 3;  // месяц
    lc_RepTPer_Quater = 4;  // квартал
  end; // const
  //----------------------------------------------------------------------------------------------------------
  // Получить тип периода отчета
  function myGetRepTPer : word;
  {
    Result := lc_RepTPer_Not;
    var wMonthLength : word;  wMonthLength := Months_Between(TaxDat.dBeg, TaxDat.dEnd);
    if (wMonthLength = 2)
    or (wMonthLength = 3)
    { // если период - Квартал
      Result := lc_RepTPer_Quater;
    }
    else
    if (wMonthLength = 0)
    or (wMonthLength = 1)
    { // если период - Месяц
      Result := lc_RepTPer_Month;
    }
  }
  //----------------------------------------------------------------------------------------------------------
@begin
  Result := '';
  case myGetRepTPer() of
    lc_RepTPer_Quater :
    { // если период - Квартал
      case Month(TaxDat.dEnd) of
         1 , 2 , 3  : Result := '21';
         4 , 5 , 6  : Result := '22';
         7 , 8 , 9  : Result := '23';
         10, 11, 12 : Result := '24';
      end; // case
    }
    lc_RepTPer_Month :
    { // если период - Месяц
      case Month(TaxDat.dEnd) of
         1 : Result := '01';
         2 : Result := '02';
         3 : Result := '03';
         4 : Result := '04';
         5 : Result := '05';
         6 : Result := '06';
         7 : Result := '07';
         8 : Result := '08';
         9 : Result := '09';
        10 : Result := '10';
        11 : Result := '11';
        12 : Result := '12';
      end; // case
    }
  end; // case
@end. // myGetDefPeriodCodeValue
//#endregion СЕРВИСНЫЕ МЕТОДЫ
//************************************************************************************************************


//============================================================================================================
//#region ДЕЙСТВИЯ ВЫПОЛНЯЕМЫЕ ПРИ УСТАНОВКЕ ВИДИМОСТИ ПОЛЕЙ
//============================================================================================================
//#region ВИДИМОСТЬ ПОЛЕЙ ДОП РАЗДЕЛОВ
//============================================================================================================
//#region СЕРВИСНЫЕ МЕТОДЫ
//------------------------------------------------------------------------------------------------------------
// Пересчитать признак "выгружаемый" для полей заголовка доп разделов
@Script ReCalcVisFldHeadRXX(
  _sDocPath : string; // путь на вершину "Документ"
  _sPrSved  : string; // наименование вершины "ПризнСвед"
  _sDStore  : string  // наименование вершины хранения данных
) : boolean;          // признак наличия данных
@begin
  Result := False;
  // поле "Признак актуальности раннее представленных сведений"
  // "выгружаемый" если "Номер корректировки" > 0
  SetFldVis(   _sDocPath+'/'+_sPrSved
  , (GetIntVal(_sDocPath+'/'+'НомКорр') > 0)
  );
  // данные по доп разделу
  // "выгружаемый" если "Признак актуальности раннее представленных сведений" = "сведения неактуальны"
  SetFldVis(   _sDocPath+'/'+_sDStore
  , (GetIntVal(_sDocPath+'/'+_sPrSved) = 0)
  );
  // определение признака наличия данных
  if  (GetIntVal(_sDocPath+'/'+'НомКорр') != 0)
  and (GetIntVal(_sDocPath+'/'+_sPrSved ) != 0)
  { Exit; }
  Result := True;
@end. // ReCalcVisFldHeadRXX

//------------------------------------------------------------------------------------------------------------
// Для доп разделов проверить видимость полей для вершин типа "Код вида операции"
@Script RXXReCalcVisNodeCodeVidOp(
  _cParent : comp  // ссылка на родителя
) : boolean;
@begin
  Result := False;
  do
  {
    var i : LongInt;
    var NodeCount : LongInt;  NodeCount := XMLMap.GetNodeCountByNameOnLevel(_cParent, 'КодВидОпер');
    for (i := 0; i < NodeCount; i++)
    {
      var sNode : string ;  sNode := 'КодВидОпер'+GetIter(i);
      var isVis : boolean;  isVis := (not XMLMAP.GetIsNullAttrValueByPathOnLevel(_cParent, sNode+'/Значение') );

      XMLMAP.SetAttrVisByPathOnLevel(_cParent, sNode            , isVis);
      XMLMAP.SetAttrVisByPathOnLevel(_cParent, sNode+'/Значение', isVis);
    } // for
  }
  while False;
  Result := True;
@end. // RXXReCalcVisNodeCodeVidOp

//------------------------------------------------------------------------------------------------------------
// Для доп разделов проверить видимость полей для вершин типа "Дата принятия на учет"
@Script RXXReCalcVisNodeDataUchTov(
  _cParent : comp  // ссылка на родителя
) : boolean;
@begin
  Result := False;
  do
  {
    var i : LongInt;
    var NodeCount : LongInt;  NodeCount := XMLMap.GetNodeCountByNameOnLevel(_cParent, 'ДатаУчТов');
    for (i := 0; i < NodeCount; i++)
    {
      var sNode : string ;  sNode := 'ДатаУчТов'+GetIter(i);
      var isVis : boolean;  isVis := (not XMLMAP.GetIsNullAttrValueByPathOnLevel(_cParent, sNode+'/Значение') );

      XMLMAP.SetAttrVisByPathOnLevel(_cParent, sNode            , isVis);
      XMLMAP.SetAttrVisByPathOnLevel(_cParent, sNode+'/Значение', isVis);
    } // for
  }
  while False;
  Result := True;
@end. // RXXReCalcVisNodeDataUchTov

//------------------------------------------------------------------------------------------------------------
// Для доп разделов проверить видимость полей для вершин типа "Регистрационный номер таможенной декларации"
@Script RXXReCalcVisNodeRegNumGTD(
  _cParent : comp  // ссылка на родителя
) : boolean;
@begin
  Result := False;
  do
  {
    var i : LongInt;
    var NodeCount : LongInt;  NodeCount := XMLMap.GetNodeCountByNameOnLevel(_cParent, 'РегНомТД');
    for (i := 0; i < NodeCount; i++)
    {
      var sNode : string ;  sNode := 'РегНомТД'+GetIter(i);
      var isVis : boolean;  isVis := (not XMLMAP.GetIsNullAttrValueByPathOnLevel(_cParent, sNode+'/Значение') );

      XMLMAP.SetAttrVisByPathOnLevel(_cParent, sNode            , isVis);
      XMLMAP.SetAttrVisByPathOnLevel(_cParent, sNode+'/Значение', isVis);
    } // for
  }
  while False;
  Result := True;
@end. // RXXReCalcVisNodeRegNumGTD

//------------------------------------------------------------------------------------------------------------
// Для доп разделов проверить видимость полей для вершин типа "Код вида товара"
@Script RXXReCalcVisNodeKodVidTovar(
  _cParent : comp  // ссылка на родителя
) : boolean;
@begin
  Result := False;
  do
  {
    var i : LongInt;
    var NodeCount : LongInt;  NodeCount := XMLMap.GetNodeCountByNameOnLevel(_cParent, 'КодВидТовар');
    for (i := 0; i < NodeCount; i++)
    {
      var sNode : string ;  sNode := 'КодВидТовар'+GetIter(i);
      var isVis : boolean;  isVis := (not XMLMAP.GetIsNullAttrValueByPathOnLevel(_cParent, sNode+'/Значение') );

      XMLMAP.SetAttrVisByPathOnLevel(_cParent, sNode            , isVis);
      XMLMAP.SetAttrVisByPathOnLevel(_cParent, sNode+'/Значение', isVis);
    } // for
  }
  while False;
  Result := True;
@end. // RXXReCalcVisNodeKodVidTovar

//------------------------------------------------------------------------------------------------------------
// Для доп разделов проверить видимость полей для вершин типа "Сведения о документе, подтверждающем уплату/оплату налога"
@Script RXXReCalcVisNodeDocOplata(
  _cParent : comp;  // ссылка на родителя
  _sDoc  : string;  // наименование вершины "Документ"
  _sNum  : string;  // наименование вершины "Номер документа"
  _sDat  : string   // наименование вершины "Дата  документа"
) : boolean;
@begin
  Result := False;
  do
  {
    var i : LongInt;
    var NodeCount : LongInt;  NodeCount := XMLMap.GetNodeCountByNameOnLevel(_cParent, _sDoc);
    for (i := 0; i < NodeCount; i++)
    {
      var sNode : string ;  sNode := _sDoc+GetIter(i);
      var isVis : boolean;  isVis :=
         (not XMLMAP.GetIsNullAttrValueByPathOnLevel(_cParent, sNode+'/'+_sNum) )
      or (not XMLMAP.GetIsNullAttrValueByPathOnLevel(_cParent, sNode+'/'+_sDat) );

      XMLMAP.SetAttrVisByPathOnLevel(_cParent, sNode          , isVis);
      XMLMAP.SetAttrVisByPathOnLevel(_cParent, sNode+'/'+_sNum, isVis);
      XMLMAP.SetAttrVisByPathOnLevel(_cParent, sNode+'/'+_sDat, isVis);
    } // for
  }
  while False;
  Result := True;
@end. // RXXReCalcVisNodeDocOplata

//------------------------------------------------------------------------------------------------------------
// Для доп разделов Пересчитать признак "выгружаемый" для вершин типа "Сведения о контрагенте"
@Script RXXReCalcVisNodeContr(
  _cParent    : comp  ;      // ссылка на родителя
  _sFld       : string;      // наименование поля
  _sCodeVidOp : string = ''  // код вида операции
) : boolean;
@begin
  Result := False;
  do
  {
    var sINNUL : string;  sINNUL := XMLMap.GetAttrValueByPathOnLevel(_cParent, _sFld+'/СведЮЛ/ИННЮЛ');
    var sKPPUL : string;  sKPPUL := XMLMap.GetAttrValueByPathOnLevel(_cParent, _sFld+'/СведЮЛ/КПП'  );
    var sINNIP : string;  sINNIP := XMLMap.GetAttrValueByPathOnLevel(_cParent, _sFld+'/СведИП/ИННФЛ');

    if ((sINNUL = '')
    and (sKPPUL = '')
    and (sINNIP = ''))
    or (_sCodeVidOp = '99') // если это Крым
    { // если ничего не задано или это Крым
      XMLMAP.SetAttrVisByPathOnLevel(_cParent, _sFld                , False);
      XMLMAP.SetAttrVisByPathOnLevel(_cParent, _sFld+'/СведЮЛ'      , False);
      XMLMAP.SetAttrVisByPathOnLevel(_cParent, _sFld+'/СведЮЛ/ИННЮЛ', False);
      XMLMAP.SetAttrVisByPathOnLevel(_cParent, _sFld+'/СведЮЛ/КПП'  , False);

      XMLMAP.SetAttrVisByPathOnLevel(_cParent, _sFld+'/СведИП'      , False);
      XMLMAP.SetAttrVisByPathOnLevel(_cParent, _sFld+'/СведИП/ИННФЛ', False);
    } // если ничего не задано или это Крым
    else
    { // если это общий случай
      //------------------------------------------------------------------------------------------------------
      // СведЮЛ
      // "Сведения о контрагенте" видимы если:
      // (ИНН задан) and (Россия)
      var isULVis : boolean;  isULVis := (sINNUL != '');
      if (isULVis)
      {
        var cCrt : comp;  cCrt := XMLMap.GetCompAttrValueByPathOnLevel(_cParent, _sFld+'/NRec'+_sFld);
        isULVis := CheckError.GetIsRussiaINN(sINNUL, cCrt);
      }
      //------------------------------------------------------------------------------------------------------

      //------------------------------------------------------------------------------------------------------
      // СведИП
      // "Сведения о контрагенте" видимы если:
      // (ИНН задан) and (Россия)
      var isIPVis : boolean;  isIPVis := (sINNIP != '');
      if (isIPVis)
      {
        var cCrt : comp;  cCrt := XMLMap.GetCompAttrValueByPathOnLevel(_cParent, _sFld+'/NRec'+_sFld);
        isIPVis := CheckError.GetIsRussiaINN(sINNIP, cCrt);
      }
      //------------------------------------------------------------------------------------------------------

      XMLMAP.SetAttrVisByPathOnLevel(_cParent, _sFld                , (isULVis or isIPVis) );
      XMLMAP.SetAttrVisByPathOnLevel(_cParent, _sFld+'/СведЮЛ'      , isULVis);
      XMLMAP.SetAttrVisByPathOnLevel(_cParent, _sFld+'/СведЮЛ/ИННЮЛ', isULVis);
      XMLMAP.SetAttrVisByPathOnLevel(_cParent, _sFld+'/СведЮЛ/КПП'  , isULVis);

      XMLMAP.SetAttrVisByPathOnLevel(_cParent, _sFld+'/СведИП'      , isIPVis);
      XMLMAP.SetAttrVisByPathOnLevel(_cParent, _sFld+'/СведИП/ИННФЛ', isIPVis);
    } // если это общий случай
  }
  while False;
  Result := True;
@end. // RXXReCalcVisNodeContr
//------------------------------------------------------------------------------------------------------------
// Код вида операции для лома и шкур
@Script IsKodVidOperLom(
  _kodVidOper : string  // Код вида операции
) : boolean;
@begin
  //33 - Оплата в счет предстоящих поставок сырых шкур и лома
  //34 - Отгрузка сырых шкур и лома
  if ((_kodVidOper = '33') or (_kodVidOper = '34'))
    Result := True;
  else
    Result := False;
@end. //IsKodVidOperLom
//#endregion СЕРВИСНЫЕ МЕТОДЫ
//************************************************************************************************************

//============================================================================================================
//#region РАЗДЕЛ 8
//------------------------------------------------------------------------------------------------------------
// Пересчитать признак полей "выгружаемый" для строки "РАЗДЕЛА 08"
@Script ReCalcVisFldR08Str(
  _BStrNpp : LongInt  // номер строки книги
) : boolean;
@begin
  Result := False;
  do
  {
    var sAddr    : string;  sAddr    := 'Файл/Документ/НДС/КнигаПокуп/Файл/Документ/КнигаПокуп/КнПокСтр';
    var sStrAddr : string;  sStrAddr := sAddr+GetIter(_BStrNpp);
    var cStrNode : comp  ;  cStrNode := XMLMap.GetPositionByName(sStrAddr, True);

    ReCalcVisFldByDataExist(cStrNode, 'ДатаСчФПрод' );
    ReCalcVisFldByDataExist(cStrNode, 'НомИспрСчФ'  );
    ReCalcVisFldByDataExist(cStrNode, 'ДатаИспрСчФ' );
    ReCalcVisFldByDataExist(cStrNode, 'НомКСчФПрод' );
    ReCalcVisFldByDataExist(cStrNode, 'ДатаКСчФПрод');
    ReCalcVisFldByDataExist(cStrNode, 'НомИспрКСчФ' );
    ReCalcVisFldByDataExist(cStrNode, 'ДатаИспрКСчФ');
    ReCalcVisFldByDataExist(cStrNode, 'ОКВ'         );

    // Код вида операции
    RXXReCalcVisNodeCodeVidOp(cStrNode);

    // Регистрационный номер таможенной декларации
    RXXReCalcVisNodeRegNumGTD(cStrNode);

    // Дата принятия на учет товаров (работ, услуг), имущественных прав
    RXXReCalcVisNodeDataUchTov(cStrNode);

    // Сведения о продавце
    RXXReCalcVisNodeContr(cStrNode, 'СвПрод', XMLMap.GetAttrValueByPathOnLevel(cStrNode, 'КодВидОпер/Значение') );

    // Сведения о посреднике (комиссионере, агенте, экспедиторе, застройщике)
    RXXReCalcVisNodeContr(cStrNode, 'СвПос');

    // Сведения о документе, подтверждающем уплату налога
    RXXReCalcVisNodeDocOplata(cStrNode, 'ДокПдтвУпл', 'НомДокПдтвУпл', 'ДатаДокПдтвУпл');
  }
  while False;
  Result := True;
@end. // ReCalcVisFldR08Str

//------------------------------------------------------------------------------------------------------------
// Пересчитать признак полей "выгружаемый" для всего "РАЗДЕЛА 08"
@Script ReCalcVisFldR08(
  _isNeedSp : boolean  // требуется ли проверять спецификацию раздела
) : boolean;
@begin
  Result := False;
  StartNewVisual(vtNumericVisual, vfTimer+vfBreak+vfConfirm+vfScreenBottom
  , 'Установка видимости полей: "Раздел 8"...', 0);
  do
  {
    if (GetIntVal('Файл/ПризнНал8' ) = 0)
    { Break; }

    var sAddr : string;  sAddr := 'Файл/Документ/НДС/КнигаПокуп/Файл/Документ';
    if (not ReCalcVisFldHeadRXX(sAddr, 'ПризнСвед8', 'КнигаПокуп') )
    { Break; }

    if (not _isNeedSp)
    { Break; }

    sAddr := sAddr + '/КнигаПокуп/КнПокСтр';
    var BStrNpp   : LongInt;
    var BStrCount : LongInt;  BStrCount := XMLMap.GetNodeCountByName(sAddr);
    for (BStrNpp := 0; BStrNpp < BStrCount; BStrNpp++)
    { // побежали по строкам книги
      if (not NextVisual)
      { Break; }
      // проверка данных по строке
      ReCalcVisFldR08Str(BStrNpp);
    } // побежали по строкам книги
  }
  while False;
  StopVisual('', 0);
  Result := True;
@end. // ReCalcVisFldR08
//#endregion РАЗДЕЛ 8
//************************************************************************************************************

//============================================================================================================
//#region РАЗДЕЛ 8 ПРИЛОЖЕНИЕ 1
//------------------------------------------------------------------------------------------------------------
// Пересчитать признак полей "выгружаемый" для строки "ПРИЛОЖЕНИЯ К РАЗДЕЛУ 08"
@Script ReCalcVisFldR8DStr(
  _BStrNpp : LongInt  // номер строки книги
) : boolean;
@begin
  Result := False;
  do
  {
    var sAddr    : string;  sAddr    := 'Файл/Документ/НДС/КнигаПокупДЛ/Файл/Документ/КнигаПокупДЛ/КнПокДЛСтр';
    var sStrAddr : string;  sStrAddr := sAddr+GetIter(_BStrNpp);
    var cStrNode : comp  ;  cStrNode := XMLMap.GetPositionByName(sStrAddr, True);

    ReCalcVisFldByDataExist(cStrNode, 'ДатаСчФПрод' );
    ReCalcVisFldByDataExist(cStrNode, 'НомИспрСчФ'  );
    ReCalcVisFldByDataExist(cStrNode, 'ДатаИспрСчФ' );
    ReCalcVisFldByDataExist(cStrNode, 'НомКСчФПрод' );
    ReCalcVisFldByDataExist(cStrNode, 'ДатаКСчФПрод');
    ReCalcVisFldByDataExist(cStrNode, 'НомИспрКСчФ' );
    ReCalcVisFldByDataExist(cStrNode, 'ДатаИспрКСчФ');
    ReCalcVisFldByDataExist(cStrNode, 'ОКВ'         );

    // Код вида операции
    RXXReCalcVisNodeCodeVidOp(cStrNode);

    // Регистрационный номер таможенной декларации
    RXXReCalcVisNodeRegNumGTD(cStrNode);

    // Дата принятия на учет товаров (работ, услуг), имущественных прав
    RXXReCalcVisNodeDataUchTov(cStrNode);

    // Сведения о продавце
    RXXReCalcVisNodeContr(cStrNode, 'СвПрод', GetStrVal(sStrAddr+'/КодВидОпер/Значение'));

    // Сведения о посреднике (комиссионере, агенте, экспедиторе, застройщике)
    RXXReCalcVisNodeContr(cStrNode, 'СвПос');

    // Сведения о документе, подтверждающем уплату налога
    RXXReCalcVisNodeDocOplata(cStrNode, 'ДокПдтвУпл', 'НомДокПдтвУпл', 'ДатаДокПдтвУпл');
  }
  while False;
  Result := True;
@end. // ReCalcVisFldR8DStr

//------------------------------------------------------------------------------------------------------------
// Пересчитать признак полей "выгружаемый" для всего "ПРИЛОЖЕНИЯ К РАЗДЕЛУ 08"
@Script ReCalcVisFldR8D(
  _isNeedSp : boolean  // требуется ли проверять спецификацию раздела
) : boolean;
@begin
  Result := False;
  StartNewVisual(vtNumericVisual, vfTimer+vfBreak+vfConfirm+vfScreenBottom
  , 'Установка видимости полей: "Раздел 8 Приложение 1"...', 0);
  do
  {
    if (GetIntVal('Файл/ПризнНал81' ) = 0)
    { Break; }

    var sAddr : string;  sAddr := 'Файл/Документ/НДС/КнигаПокупДЛ/Файл/Документ';
    if (not ReCalcVisFldHeadRXX(sAddr, 'ПризнСвед81', 'КнигаПокупДЛ') )
    { Break; }

    if (not _isNeedSp)
    { Break; }

    sAddr := sAddr + '/КнигаПокупДЛ/КнПокДЛСтр';
    var BStrNpp   : LongInt;
    var BStrCount : LongInt;  BStrCount := XMLMap.GetNodeCountByName(sAddr);
    for (BStrNpp := 0; BStrNpp < BStrCount; BStrNpp++)
    { // побежали по строкам книги
      if (not NextVisual)
      { Break; }
      // проверка данных по строке
      ReCalcVisFldR8DStr(BStrNpp);
    } // побежали по строкам книги
  }
  while False;
  StopVisual('', 0);
  Result := True;
@end. // ReCalcVisFldR8D
//#endregion РАЗДЕЛ 8 ПРИЛОЖЕНИЕ 1
//************************************************************************************************************

//============================================================================================================
//#region РАЗДЕЛ 9
//------------------------------------------------------------------------------------------------------------
// Пересчитать признак полей "выгружаемый" для строки "РАЗДЕЛА 09"
@Script ReCalcVisFldR09Str(
  _BStrNpp : LongInt  // номер строки книги
) : boolean;
@begin
  Result := False;
  do
  {
    var sAddr    : string;  sAddr    := 'Файл/Документ/НДС/КнигаПрод/Файл/Документ/КнигаПрод/КнПродСтр';
    var sStrAddr : string;  sStrAddr := sAddr+GetIter(_BStrNpp);
    var cStrNode : comp  ;  cStrNode := XMLMap.GetPositionByName(sStrAddr, True);

    ReCalcVisFldByDataExist(cStrNode, 'НомИспрСчФ'  );
    ReCalcVisFldByDataExist(cStrNode, 'ДатаИспрСчФ' );
    ReCalcVisFldByDataExist(cStrNode, 'НомКСчФПрод' );
    ReCalcVisFldByDataExist(cStrNode, 'ДатаКСчФПрод');
    ReCalcVisFldByDataExist(cStrNode, 'НомИспрКСчФ' );
    ReCalcVisFldByDataExist(cStrNode, 'ДатаИспрКСчФ');
    ReCalcVisFldByDataExist(cStrNode, 'ОКВ'         );

    ReCalcVisFldByDataExist(cStrNode, 'СтоимПродСФВ' );
    ReCalcVisFldByDataExist(cStrNode, 'СтоимПродСФ'  );
    ReCalcVisFldByDataExist(cStrNode, 'СтоимПродСФ20');
    ReCalcVisFldByDataExist(cStrNode, 'СтоимПродСФ18');
    ReCalcVisFldByDataExist(cStrNode, 'СтоимПродСФ10');
    ReCalcVisFldByDataExist(cStrNode, 'СтоимПродСФ0' );
    ReCalcVisFldByDataExist(cStrNode, 'СумНДССФ20'   );
    ReCalcVisFldByDataExist(cStrNode, 'СумНДССФ18'   );
    ReCalcVisFldByDataExist(cStrNode, 'СумНДССФ10'   );
    ReCalcVisFldByDataExist(cStrNode, 'СтоимПродОсв' );

    // Код вида операции
    RXXReCalcVisNodeCodeVidOp(cStrNode);

    // Регистрационный номер таможенной декларации
    RXXReCalcVisNodeRegNumGTD(cStrNode);

    // Код вида товара
    RXXReCalcVisNodeKodVidTovar(cStrNode);

    // Сведения о покупателе
    RXXReCalcVisNodeContr(cStrNode, 'СвПокуп');

    // Сведения о посреднике (комиссионере, агенте, экспедиторе, застройщике)
    RXXReCalcVisNodeContr(cStrNode, 'СвПос');

    // Сведения о документе, подтверждающем уплату налога
    RXXReCalcVisNodeDocOplata(cStrNode, 'ДокПдтвОпл', 'НомДокПдтвОпл', 'ДатаДокПдтвОпл');
  }
  while False;
  Result := True;
@end. // ReCalcVisFldR09Str

//------------------------------------------------------------------------------------------------------------
// Пересчитать признак полей "выгружаемый" для всего "РАЗДЕЛА 09"
@Script ReCalcVisFldR09(
  _isNeedSp : boolean  // требуется ли проверять спецификацию раздела
) : boolean;
@begin
  Result := False;
  StartNewVisual(vtNumericVisual, vfTimer+vfBreak+vfConfirm+vfScreenBottom
  , 'Установка видимости полей: "Раздел 9"...', 0);
  do
  {
    if (GetIntVal('Файл/ПризнНал9' ) = 0)
    { Break; }

    var sAddr : string;  sAddr := 'Файл/Документ/НДС/КнигаПрод/Файл/Документ';
    if (not ReCalcVisFldHeadRXX(sAddr, 'ПризнСвед9', 'КнигаПрод') )
    { Break; }

    sAddr := sAddr + '/КнигаПрод';
    ReCalcVisFldByDataExist(0, sAddr+'/СтПродБезНДС20');
    ReCalcVisFldByDataExist(0, sAddr+'/СтПродБезНДС18');
    ReCalcVisFldByDataExist(0, sAddr+'/СтПродБезНДС10');
    ReCalcVisFldByDataExist(0, sAddr+'/СтПродБезНДС0' );
    ReCalcVisFldByDataExist(0, sAddr+'/СумНДСВсКПр20' );
    ReCalcVisFldByDataExist(0, sAddr+'/СумНДСВсКПр18' );
    ReCalcVisFldByDataExist(0, sAddr+'/СумНДСВсКПр10' );
    ReCalcVisFldByDataExist(0, sAddr+'/СтПродОсвВсКПр');

    if (not _isNeedSp)
    { Break; }

    sAddr := sAddr + '/КнПродСтр';
    var BStrNpp   : LongInt;
    var BStrCount : LongInt;  BStrCount := XMLMap.GetNodeCountByName(sAddr);
    for (BStrNpp := 0; BStrNpp < BStrCount; BStrNpp++)
    { // побежали по строкам книги
      if (not NextVisual)
      { Break; }
      // проверка данных по строке
      ReCalcVisFldR09Str(BStrNpp);
    } // побежали по строкам книги
  }
  while False;
  StopVisual('', 0);
  Result := True;
@end. // ReCalcVisFldR09
//#endregion РАЗДЕЛ 9
//************************************************************************************************************

//============================================================================================================
//#region РАЗДЕЛ 9 ПРИЛОЖЕНИЕ 1
//------------------------------------------------------------------------------------------------------------
// Пересчитать признак полей "выгружаемый" для строки "ПРИЛОЖЕНИЯ К РАЗДЕЛУ 09"
@Script ReCalcVisFldR9DStr(
  _BStrNpp : LongInt  // номер строки книги
) : boolean;
@begin
  Result := False;
  do
  {
    var sAddr    : string;  sAddr    := 'Файл/Документ/НДС/КнигаПродДЛ/Файл/Документ/КнигаПродДЛ/КнПродДЛСтр';
    var sStrAddr : string;  sStrAddr := sAddr+GetIter(_BStrNpp);
    var cStrNode : comp  ;  cStrNode := XMLMap.GetPositionByName(sStrAddr, True);

    ReCalcVisFldByDataExist(cStrNode, 'НомИспрСчФ'  );
    ReCalcVisFldByDataExist(cStrNode, 'ДатаИспрСчФ' );
    ReCalcVisFldByDataExist(cStrNode, 'НомКСчФПрод' );
    ReCalcVisFldByDataExist(cStrNode, 'ДатаКСчФПрод');
    ReCalcVisFldByDataExist(cStrNode, 'НомИспрКСчФ' );
    ReCalcVisFldByDataExist(cStrNode, 'ДатаИспрКСчФ');
    ReCalcVisFldByDataExist(cStrNode, 'ОКВ'         );

    ReCalcVisFldByDataExist(cStrNode, 'СтоимПродСФВ' );
    ReCalcVisFldByDataExist(cStrNode, 'СтоимПродСФ'  );
    ReCalcVisFldByDataExist(cStrNode, 'СтоимПродСФ20');
    ReCalcVisFldByDataExist(cStrNode, 'СтоимПродСФ18');
    ReCalcVisFldByDataExist(cStrNode, 'СтоимПродСФ10');
    ReCalcVisFldByDataExist(cStrNode, 'СтоимПродСФ0' );
    ReCalcVisFldByDataExist(cStrNode, 'СумНДССФ20'   );
    ReCalcVisFldByDataExist(cStrNode, 'СумНДССФ18'   );
    ReCalcVisFldByDataExist(cStrNode, 'СумНДССФ10'   );
    ReCalcVisFldByDataExist(cStrNode, 'СтоимПродОсв' );

    // Код вида операции
    RXXReCalcVisNodeCodeVidOp(cStrNode);

    // Регистрационный номер таможенной декларации
    RXXReCalcVisNodeRegNumGTD(cStrNode);

    // Код вида товара
    RXXReCalcVisNodeKodVidTovar(cStrNode);

    // Сведения о покупателе
    RXXReCalcVisNodeContr(cStrNode, 'СвПокуп');

    // Сведения о посреднике (комиссионере, агенте, экспедиторе, застройщике)
    RXXReCalcVisNodeContr(cStrNode, 'СвПос');

    // Сведения о документе, подтверждающем уплату налога
    RXXReCalcVisNodeDocOplata(cStrNode, 'ДокПдтвОпл', 'НомДокПдтвОпл', 'ДатаДокПдтвОпл');
  }
  while False;
  Result := True;
@end. // ReCalcVisFldR9DStr

//------------------------------------------------------------------------------------------------------------
// Пересчитать признак полей "выгружаемый" для всего "ПРИЛОЖЕНИЯ К РАЗДЕЛУ 09"
@Script ReCalcVisFldR9D(
  _isNeedSp : boolean  // требуется ли проверять спецификацию раздела
) : boolean;
@begin
  Result := False;
  StartNewVisual(vtNumericVisual, vfTimer+vfBreak+vfConfirm+vfScreenBottom
  , 'Установка видимости полей: "Раздел 9 Приложение 1"...', 0);
  do
  {
    if (GetIntVal('Файл/ПризнНал91' ) = 0)
    { Break; }

    var sAddr : string;  sAddr := 'Файл/Документ/НДС/КнигаПродДЛ/Файл/Документ';
    if (not ReCalcVisFldHeadRXX(sAddr, 'ПризнСвед91', 'КнигаПродДЛ') )
    { Break; }

    sAddr := sAddr + '/КнигаПродДЛ';
    ReCalcVisFldByDataExist(0, sAddr+'/ИтСтПродКПр20'  );
    ReCalcVisFldByDataExist(0, sAddr+'/ИтСтПродКПр18'  );
    ReCalcVisFldByDataExist(0, sAddr+'/ИтСтПродКПр10'  );
    ReCalcVisFldByDataExist(0, sAddr+'/ИтСтПродКПр0'   );
    ReCalcVisFldByDataExist(0, sAddr+'/СумНДСИтКПр20'  );
    ReCalcVisFldByDataExist(0, sAddr+'/СумНДСИтКПр18'  );
    ReCalcVisFldByDataExist(0, sAddr+'/СумНДСИтКПр10'  );
    ReCalcVisFldByDataExist(0, sAddr+'/ИтСтПродОсвКПр' );
    ReCalcVisFldByDataExist(0, sAddr+'/СтПродВсП1Р9_20');
    ReCalcVisFldByDataExist(0, sAddr+'/СтПродВсП1Р9_18');
    ReCalcVisFldByDataExist(0, sAddr+'/СтПродВсП1Р9_10');
    ReCalcVisFldByDataExist(0, sAddr+'/СтПродВсП1Р9_0' );
    ReCalcVisFldByDataExist(0, sAddr+'/СумНДСВсП1Р9_20');
    ReCalcVisFldByDataExist(0, sAddr+'/СумНДСВсП1Р9_18');
    ReCalcVisFldByDataExist(0, sAddr+'/СумНДСВсП1Р9_10');
    ReCalcVisFldByDataExist(0, sAddr+'/СтПродОсвП1Р9Вс');

    if (not _isNeedSp)
    { Break; }

    sAddr := sAddr + '/КнПродДЛСтр';
    var BStrNpp   : LongInt;
    var BStrCount : LongInt;  BStrCount := XMLMap.GetNodeCountByName(sAddr);
    for (BStrNpp := 0; BStrNpp < BStrCount; BStrNpp++)
    { // побежали по строкам книги
      if (not NextVisual)
      { Break; }
      // проверка данных по строке
      ReCalcVisFldR9DStr(BStrNpp);
    } // побежали по строкам книги
  }
  while False;
  StopVisual('', 0);
  Result := True;
@end. // ReCalcVisFldR9D
//#endregion РАЗДЕЛ 9 ПРИЛОЖЕНИЕ 1
//************************************************************************************************************

//============================================================================================================
//#region РАЗДЕЛ 10
//------------------------------------------------------------------------------------------------------------
// Пересчитать признак полей "выгружаемый" для строки "РАЗДЕЛА 10"
@Script ReCalcVisFldR10Str(
  _JStrNpp : LongInt  // номер строки журнала
) : boolean;
@begin
  Result := False;
  do
  {
    var sAddr    : string;  sAddr    := 'Файл/Документ/НДС/ЖУчВыстСчФ/Файл/Документ/ЖУчВыстСчФ/ЖУчВыстСчФСтр';
    var sStrAddr : string;  sStrAddr := sAddr+GetIter(_JStrNpp);
    var cStrNode : comp  ;  cStrNode := XMLMap.GetPositionByName(sStrAddr, True);

    ReCalcVisFldByDataExist(cStrNode, 'НомИспрСчФ'  );
    ReCalcVisFldByDataExist(cStrNode, 'ДатаИспрСчФ' );
    ReCalcVisFldByDataExist(cStrNode, 'НомКСчФПрод' );
    ReCalcVisFldByDataExist(cStrNode, 'ДатаКСчФПрод');
    ReCalcVisFldByDataExist(cStrNode, 'НомИспрКСчФ' );
    ReCalcVisFldByDataExist(cStrNode, 'ДатаИспрКСчФ');

    // Код вида операции
    RXXReCalcVisNodeCodeVidOp(cStrNode);

    // Сведения о покупателе
    RXXReCalcVisNodeContr(cStrNode, 'СвПокуп');

    sStrAddr := sStrAddr + '/СвСчФОтПрод';
    var MedNpp   : LongInt;
    var MedCount : LongInt;  MedCount := XMLMap.GetNodeCountByName(sStrAddr);
    for (MedNpp:= 0; MedNpp < MedCount; MedNpp++)
    { // побежали по сведениям из счетов-фактур, полученных от продавцов
      var sMedAddr : string;  sMedAddr := sStrAddr+GetIter(MedNpp);
      var cMedNode : comp  ;  cMedNode := XMLMap.GetPositionByName(sMedAddr, True);

      ReCalcVisFldByDataExist(cMedNode, 'ОКВ'          );
      ReCalcVisFldByDataExist(cMedNode, 'СтоимТовСчФВс');
      ReCalcVisFldByDataExist(cMedNode, 'СумНДССчФ'    );
      ReCalcVisFldByDataExist(cMedNode, 'РазСтКСчФУм'  );
      ReCalcVisFldByDataExist(cMedNode, 'РазСтКСчФУв'  );
      ReCalcVisFldByDataExist(cMedNode, 'РазНДСКСчФУм' );
      ReCalcVisFldByDataExist(cMedNode, 'РазНДСКСчФУв' );

      // Сведения о продавце
      RXXReCalcVisNodeContr(cMedNode, 'СвПрод');
    } // побежали по сведениям из счетов-фактур, полученных от продавцов
  }
  while False;
  Result := True;
@end. // ReCalcVisFldR10Str

//------------------------------------------------------------------------------------------------------------
// Пересчитать признак полей "выгружаемый" для всего "РАЗДЕЛА 10"
@Script ReCalcVisFldR10(
  _isNeedSp : boolean  // требуется ли проверять спецификацию раздела
) : boolean;
@begin
  Result := False;
  StartNewVisual(vtNumericVisual, vfTimer+vfBreak+vfConfirm+vfScreenBottom
  , 'Установка видимости полей: "Раздел 10"...', 0);
  do
  {
    if (GetIntVal('Файл/ПризнНал10' ) = 0)
    { Break; }

    var sAddr : string;  sAddr := 'Файл/Документ/НДС/ЖУчВыстСчФ/Файл/Документ';
    if (not ReCalcVisFldHeadRXX(sAddr, 'ПризнСвед10', 'ЖУчВыстСчФ') )
    { Break; }

    if (not _isNeedSp)
    { Break; }

    sAddr := sAddr + '/ЖУчВыстСчФ/ЖУчВыстСчФСтр';
    var JStrNpp   : LongInt;
    var JStrCount : LongInt;  JStrCount := XMLMap.GetNodeCountByName(sAddr);
    for (JStrNpp := 0; JStrNpp < JStrCount; JStrNpp++)
    { // побежали по строкам журнала
      if (not NextVisual)
      { Break; }
      ReCalcVisFldR10Str(JStrNpp);
    } // побежали по строкам журнала
  }
  while False;
  StopVisual('', 0);
  Result := True;
@end. // ReCalcVisFldR10
//#endregion РАЗДЕЛ 10
//************************************************************************************************************

//============================================================================================================
//#region РАЗДЕЛ 11
//------------------------------------------------------------------------------------------------------------
// Пересчитать признак полей "выгружаемый" для строки "РАЗДЕЛА 11"
@Script ReCalcVisFldR11Str(
  _JStrNpp : LongInt  // номер строки журнала
) : boolean;
@begin
  Result := False;
  do
  {
    var sAddr    : string;  sAddr    := 'Файл/Документ/НДС/ЖУчПолучСчФ/Файл/Документ/ЖУчПолучСчФ/ЖУчПолучСчФСтр';
    var sStrAddr : string;  sStrAddr := sAddr+GetIter(_JStrNpp);
    var cStrNode : comp  ;  cStrNode := XMLMap.GetPositionByName(sStrAddr, True);

    ReCalcVisFldByDataExist(cStrNode, 'НомИспрСчФ'  );
    ReCalcVisFldByDataExist(cStrNode, 'ДатаИспрСчФ' );
    ReCalcVisFldByDataExist(cStrNode, 'НомКСчФПрод' );
    ReCalcVisFldByDataExist(cStrNode, 'ДатаКСчФПрод');
    ReCalcVisFldByDataExist(cStrNode, 'НомИспрКСчФ' );
    ReCalcVisFldByDataExist(cStrNode, 'ДатаИспрКСчФ');
    ReCalcVisFldByDataExist(cStrNode, 'ОКВ'         );

    ReCalcVisFldByDataExist(cStrNode, 'СумНДССчФ'   );
    ReCalcVisFldByDataExist(cStrNode, 'РазСтКСчФУм' );
    ReCalcVisFldByDataExist(cStrNode, 'РазСтКСчФУв' );
    ReCalcVisFldByDataExist(cStrNode, 'РазНДСКСчФУм');
    ReCalcVisFldByDataExist(cStrNode, 'РазНДСКСчФУв');

    // Код вида операции
    RXXReCalcVisNodeCodeVidOp(cStrNode);

    // Сведения о продавце
    RXXReCalcVisNodeContr(cStrNode, 'СвПрод');

    // Сведения о субкомиссинере (субагенте)
    RXXReCalcVisNodeContr(cStrNode, 'СвКомис');
  }
  while False;
  Result := True;
@end. // ReCalcVisFldR11Str

//------------------------------------------------------------------------------------------------------------
// Пересчитать признак полей "выгружаемый" для всего "РАЗДЕЛА 11"
@Script ReCalcVisFldR11(
  _isNeedSp : boolean  // требуется ли проверять спецификацию раздела
) : boolean;
@begin
  Result := False;
  StartNewVisual(vtNumericVisual, vfTimer+vfBreak+vfConfirm+vfScreenBottom
  , 'Установка видимости полей: "Раздел 11"...', 0);
  do
  {
    if (GetIntVal('Файл/ПризнНал11' ) = 0)
    { Break; }

    var sAddr : string;  sAddr := 'Файл/Документ/НДС/ЖУчПолучСчФ/Файл/Документ';
    if (not ReCalcVisFldHeadRXX(sAddr, 'ПризнСвед11', 'ЖУчПолучСчФ') )
    { Break; }

    if (not _isNeedSp)
    { Break; }

    sAddr := sAddr + '/ЖУчПолучСчФ/ЖУчПолучСчФСтр';
    var JStrNpp   : LongInt;
    var JStrCount : LongInt;  JStrCount := XMLMap.GetNodeCountByName(sAddr);
    for (JStrNpp := 0; JStrNpp < JStrCount; JStrNpp++)
    { // побежали по строкам журнала
      if (not NextVisual)
      { Break; }
      ReCalcVisFldR11Str(JStrNpp);
    } // побежали по строкам журнала
  }
  while False;
  StopVisual('', 0);
  Result := True;
@end. // ReCalcVisFldR11
//#endregion РАЗДЕЛ 11
//************************************************************************************************************

//============================================================================================================
//#region РАЗДЕЛ 12
//------------------------------------------------------------------------------------------------------------
// Пересчитать признак полей "выгружаемый" для строки "РАЗДЕЛА 12"
@Script ReCalcVisFldR12Str(
  _SFStrNpp : LongInt  // номер строки списка СФ
) : boolean;
@begin
  Result := False;
  do
  {
    var sAddr    : string;  sAddr := 'Файл/Документ/НДС/ВыстСчФ_173.5/Файл/Документ/ВыстСчФ_173.5';
    var sStrAddr : string;  sStrAddr := sAddr+GetIter(_SFStrNpp);
    var cStrNode : comp  ;  cStrNode := XMLMap.GetPositionByName(sStrAddr, True);

    ReCalcVisFldByDataExist(cStrNode, 'ОКВ'         );

    // Сведения о покупателе
    RXXReCalcVisNodeContr(cStrNode, 'СвПокуп');
  }
  while False;
  Result := True;
@end. // ReCalcVisFldR12Str

//------------------------------------------------------------------------------------------------------------
// Пересчитать признак полей "выгружаемый" для всего "РАЗДЕЛА 12"
@Script ReCalcVisFldR12(
  _isNeedSp : boolean  // требуется ли проверять спецификацию раздела
) : boolean;
@begin
  Result := False;
  StartNewVisual(vtNumericVisual, vfTimer+vfBreak+vfConfirm+vfScreenBottom
  , 'Установка видимости полей: "Раздел 12"...', 0);
  do
  {
    if (GetIntVal('Файл/ПризнНал12' ) = 0)
    { Break; }

    var sAddr : string;  sAddr := 'Файл/Документ/НДС/ВыстСчФ_173.5/Файл/Документ';
    if (not ReCalcVisFldHeadRXX(sAddr, 'ПризнСвед12', 'ВыстСчФ_173.5') )
    { Break; }

    if (not _isNeedSp)
    { Break; }

    sAddr := sAddr + '/ВыстСчФ_173.5';
    var SFStrNpp   : LongInt;
    var SFStrCount : LongInt;  SFStrCount := XMLMap.GetNodeCountByName(sAddr);
    for (SFStrNpp := 0; SFStrNpp < SFStrCount; SFStrNpp++)
    { // побежали по строкам счетов-фактур
      if (not NextVisual)
      { Break; }
      ReCalcVisFldR12Str(SFStrNpp);
    } // побежали по строкам счетов-фактур

  }
  while False;
  StopVisual('', 0);
  Result := True;
@end. // ReCalcVisFldR12
//#endregion РАЗДЕЛ 12
//************************************************************************************************************

//------------------------------------------------------------------------------------------------------------
// Пересчитать признак "выгружаемый" для всех полей всех доп разделов
@Script ReCalcVisFldAllDopRazdel(
  _isNeedSp : boolean  // требуется ли пересчитывать спецификацию раздела
) : boolean;
  //==========================================================================================================
  //#region СЕРВИС
  //----------------------------------------------------------------------------------------------------------
  #declare IfVis(adrIfVis)
    SetFldVis(#adrIfVis, not GetStrNull(#adrIfVis));
  #end   //IfVis

  //----------------------------------------------------------------------------------------------------------
  // Для доп разделов установить видимость полей для вершин типа "Код вида операции"
  procedure myDRSetVisNodeCodeVidOp(_sAddr : string);
  {
    var i : LongInt;
    var NodeCount : LongInt;  NodeCount := XMLMap.GetNodeCountByName(_sAddr+'/КодВидОпер');
    for (i := 0; i < NodeCount; i++)
    {
      var sNode : string ;  sNode := _sAddr+'/КодВидОпер'+GetIter(i);
      var isVis : boolean;  isVis := not GetStrNull(sNode+'/Значение');
      SetFldVis(sNode            , isVis);
      SetFldVis(sNode+'/Значение', isVis);
    } // for
  }
  //----------------------------------------------------------------------------------------------------------
  // Для доп разделов установить видимость полей для вершин типа "Дата принятия на учет товаров (работ, услуг), имущественных прав"
  procedure myDRSetVisNodeDataUchTov(_sAddr : string);
  {
    var i : LongInt;
    var NodeCount : LongInt;  NodeCount := XMLMap.GetNodeCountByName(_sAddr+'/ДатаУчТов');
    for (i := 0; i < NodeCount; i++)
    {
      var sNode : string ;  sNode := _sAddr+'/ДатаУчТов'+GetIter(i);
      var isVis : boolean;  isVis := not GetStrNull(sNode+'/Значение');
      SetFldVis(sNode            , isVis);
      SetFldVis(sNode+'/Значение', isVis);
    } // for
  }
  //----------------------------------------------------------------------------------------------------------
  // Для доп разделов установить видимость полей для вершин типа "Сведения о документе, подтверждающем уплату/оплату налога"
  procedure myDRSetVisNodeDocOplata(
    _sAddr : string;  // адрес расположения данных
    _sDoc  : string;  // наименование вершины "Документ"
    _sNum  : string;  // наименование вершины "Номер документа"
    _sDat  : string   // наименование вершины "Дата  документа"
  );
  {
    var i : LongInt;
    var NodeCount : LongInt;  NodeCount := XMLMap.GetNodeCountByName(_sAddr+'/'+_sDoc);
    for (i := 0; i < NodeCount; i++)
    {
      var sNode : string ;  sNode := _sAddr+'/'+_sDoc+GetIter(i);
      var isVis : boolean;  isVis := (not GetStrNull(sNode+'/'+_sNum)) or (not GetStrNull(sNode+'/'+_sDat));
      SetFldVis(sNode          , isVis);
      SetFldVis(sNode+'/'+_sNum, isVis);
      SetFldVis(sNode+'/'+_sDat, isVis);
    } // for
  }
  //----------------------------------------------------------------------------------------------------------
  // Для доп разделов установить видимость полей для вершин типа "Сведения о контрагенте"
  /*
  procedure myDRSetVisNodeContr(_sAddr : string; _sCodeVidOp : string = '');
  {
    var sINNUL : string;  sINNUL := GetStrVal(_sAddr+'/СведЮЛ/ИННЮЛ');
    var sKPPUL : string;  sKPPUL := GetStrVal(_sAddr+'/СведЮЛ/КПП'  );
    var sINNIP : string;  sINNIP := GetStrVal(_sAddr+'/СведИП/ИННФЛ');

    if ((sINNUL = '')
    and (sKPPUL = '')
    and (sINNIP = ''))
    or (_sCodeVidOp = '99') // если это Крым
    { // если ничего не задано или это Крым
      SetFldVis(_sAddr, False);
      SetFldVis(_sAddr+'/СведЮЛ'      , False);
      SetFldVis(_sAddr+'/СведЮЛ/ИННЮЛ', False);
      SetFldVis(_sAddr+'/СведЮЛ/КПП'  , False);

      SetFldVis(_sAddr+'/СведИП'      , False);
      SetFldVis(_sAddr+'/СведИП/ИННФЛ', False);
    } // если ничего не задано или это Крым
    else
    { // если это общий случай
      //------------------------------------------------------------------------------------------------------
      // СведЮЛ
      // "Сведения о контрагенте" видимы если:
      // (ИНН задан) and (Россия)
      var isULVis : boolean;  isULVis := (sINNUL != '');
      if (isULVis)
      {
        var cCrt : comp;  cCrt := XMLMap.GetCompAttrValueByName(_sAddr+'/NRec');
        isULVis := CheckError.GetIsRussiaINN(sINNUL, cCrt);
      }
      //------------------------------------------------------------------------------------------------------

      //------------------------------------------------------------------------------------------------------
      // СведИП
      // "Сведения о контрагенте" видимы если:
      // (ИНН задан) and (Россия)
      var isIPVis : boolean;  isIPVis := (sINNIP != '');
      if (isIPVis)
      {
        var cCrt : comp;  cCrt := XMLMap.GetCompAttrValueByName(_sAddr+'/NRec');
        isIPVis := CheckError.GetIsRussiaINN(sINNIP, cCrt);
      }
      //------------------------------------------------------------------------------------------------------

      SetFldVis(_sAddr, (isULVis or isIPVis) );

      SetFldVis(_sAddr+'/СведЮЛ'      , isULVis);
      SetFldVis(_sAddr+'/СведЮЛ/ИННЮЛ', isULVis);
      SetFldVis(_sAddr+'/СведЮЛ/КПП'  , isULVis);

      SetFldVis(_sAddr+'/СведИП'      , isIPVis);
      SetFldVis(_sAddr+'/СведИП/ИННФЛ', isIPVis);
    } // если это общий случай
  } // procedure myDRSetVisNodeContr
*/
  //#endregion СЕРВИС
  //**********************************************************************************************************
@begin
  Result := False;

  ReCalcVisFldR08(_isNeedSp);
  ReCalcVisFldR8D(_isNeedSp);
  ReCalcVisFldR09(_isNeedSp);
  ReCalcVisFldR9D(_isNeedSp);
  ReCalcVisFldR10(_isNeedSp);
  ReCalcVisFldR11(_isNeedSp);
  ReCalcVisFldR12(_isNeedSp);

  Result := True;
@end. // ReCalcVisFldAllDopRazdel
//#endregion ВИДИМОСТЬ ПОЛЕЙ ДОП РАЗДЕЛОВ
//************************************************************************************************************

//============================================================================================================
//#region ВИДИМОСТЬ ПОЛЕЙ ОСНОВНЫХ РАЗДЕЛОВ
//------------------------------------------------------------------------------------------------------------
// Пересчитать признак полей "выгружаемый" для основных разделов
@Script ReCalcVisFldRBR : boolean;
  //==========================================================================================================
  //#region СЕРВИС
  //----------------------------------------------------------------------------------------------------------
  #declare IfVis(adrIfVis)
    SetFldVis(#adrIfVis, not GetStrNull(#adrIfVis));
  #end
  #declare SetVisF(adrIfVis)
    SetFldVis(#adrIfVis, False);
  #end
  #declare SetVisT(adrIfVis)
    SetFldVis(#adrIfVis, True);
  #end

  procedure VisSvedSumNal(pathNode : string);
  begin
    if     not GetStrNull(pathNode + '/НалБаза')
       and not GetStrNull(pathNode + '/СумНал' )
    then #SetVisT(pathNode)
    else #SetVisF(pathNode);
  end;

  procedure VisSvedSumNalZn(pathNode : string);
  begin
    if not GetStrNull(pathNode + '/Значение')
    then { #SetVisT(pathNode) #SetVisT(pathNode + '/Значение') }
    else { #SetVisF(pathNode) #SetVisF(pathNode + '/Значение') }
  end;
  //#endregion СЕРВИС
  //**********************************************************************************************************
@begin
  Result := False;

  //==========================================================================================================
  //#region ВИДИМОСТЬ ПОЛЕЙ В ОСНОВНЫХ РАЗДЕЛАХ
  //----------------------------------------------------------------------------------------------------------
  StartNewVisual(vtRotateVisual, vfTimer+vfBreak+vfConfirm+vfScreenBottom
  , 'Установка видимости полей: "Основные разделы"...', 0);
  do
  {
    //--------------------------------------------------------------------------------------------------------
    //#region ТИТУЛЬНЫЙ ЛИСТ
    //--------------------------------------------------------------------------------------------------------
    {
      #IfVis('Файл/Документ/СвНП/Тлф');

      var fl : boolean;  fl := False;

      if not GetStrNull('Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ/ФормРеорг')
      {
        #SetVisT('Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ');
        fl := True;

        var sFormReorg : string;  sFormReorg := GetStrVal('Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ/ФормРеорг');
        if (sFormReorg = '1')
        or (sFormReorg = '2')
        or (sFormReorg = '3')
        or (sFormReorg = '5')
        or (sFormReorg = '6')
        {
          #SetVisT('Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ/ИННЮЛ');
          #SetVisT('Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ/КПП'  );
        }
        else
        {
          #IfVis('Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ/ИННЮЛ');
          #IfVis('Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ/КПП'  );
        }
      }
      else #SetVisF('Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ');

      if (GetIntVal('Файл/Документ/СвНП/TaxPayerType') = 0)
      { // юридическое лицо
        #SetVisT('Файл/Документ/СвНП/НПЮЛ');
        #SetVisF('Файл/Документ/СвНП/НПФЛ');
      }
      else
      { // физическое лицо, ИП
        #SetVisF('Файл/Документ/СвНП/НПЮЛ'             );
        #SetVisT('Файл/Документ/СвНП/НПФЛ'             );
        #IfVis  ('Файл/Документ/СвНП/НПФЛ/ФИО/Отчество');
      }

      if  (     GetStrVal('Файл/Документ/Подписант/ПрПодп') = '2'
            or (GetStrVal('Файл/Документ/Подписант/ПрПодп') = '1' and fl)
          )
          or
          (     not GetStrNull('Файл/Документ/Подписант/ФИО/Фамилия')
            and not GetStrNull('Файл/Документ/Подписант/ФИО/Имя'    ))
      {
        #SetVisT('Файл/Документ/Подписант/ФИО'         );
        #IfVis  ('Файл/Документ/Подписант/ФИО/Отчество');
      }
      else #SetVisF('Файл/Документ/Подписант/ФИО');

      if        GetStrVal('Файл/Документ/Подписант/ПрПодп') = '2'
         or not GetStrNull('Файл/Документ/Подписант/СвПред/НаимОрг')
      {
        #SetVisT('Файл/Документ/Подписант/СвПред'        );
        #IfVis  ('Файл/Документ/Подписант/СвПред/НаимОрг');
      }
      else #SetVisF('Файл/Документ/Подписант/СвПред');
    }
    //#endregion ТИТУЛЬНЫЙ ЛИСТ
    //--------------------------------------------------------------------------------------------------------

    //--------------------------------------------------------------------------------------------------------
    //#region РАЗДЕЛ 1
    //--------------------------------------------------------------------------------------------------------
    {
      if GetStrVal('Файл/Документ/ПоМесту') = '231'
      {
        #IfVis('Файл/Документ/НДС/СумУплНП/ОКТМО');
        #IfVis('Файл/Документ/НДС/СумУплНП/КБК'  );
      }
      else
      {
        #SetVisT('Файл/Документ/НДС/СумУплНП/ОКТМО');
        #SetVisT('Файл/Документ/НДС/СумУплНП/КБК'  );
      }

      if GetFldVis('Файл/Документ/НДС/СумУплНП/ОКТМО')
      {
        #SetVisT('Файл/Документ/НДС/СумУплНП/КБК');

        if GetStrNull('Файл/Документ/НДС/СумУплНП/СумПУ_173.1')
        then #SetVisT('Файл/Документ/НДС/СумУплНП/СумПУ_173.5');
        else #IfVis  ('Файл/Документ/НДС/СумУплНП/СумПУ_173.5');

        if GetStrNull('Файл/Документ/НДС/СумУплНП/СумПУ_173.5')
        then #SetVisT('Файл/Документ/НДС/СумУплНП/СумПУ_173.1');
        else #IfVis  ('Файл/Документ/НДС/СумУплНП/СумПУ_173.1');
      }
      else
      {
        #SetVisF('Файл/Документ/НДС/СумУплНП/СумПУ_173.5');
        #SetVisF('Файл/Документ/НДС/СумУплНП/СумПУ_173.1');
      }

      if GetStrVal('Файл/Документ/ПоМесту') = '227'
      {
        #SetVisT('Файл/Документ/НДС/СумУплНП/НомДогИТ'    );
        #SetVisT('Файл/Документ/НДС/СумУплНП/ДатаНачДогИТ');
        #IfVis  ('Файл/Документ/НДС/СумУплНП/ДатаКонДогИТ');
      }
      else
      {
        #SetVisF('Файл/Документ/НДС/СумУплНП/НомДогИТ'    );
        #SetVisF('Файл/Документ/НДС/СумУплНП/ДатаНачДогИТ');
        #SetVisF('Файл/Документ/НДС/СумУплНП/ДатаКонДогИТ');
      }
    }
    //#endregion РАЗДЕЛ 1
    //--------------------------------------------------------------------------------------------------------

    //--------------------------------------------------------------------------------------------------------
    //#region РАЗДЕЛ 2
    //--------------------------------------------------------------------------------------------------------
    do
    {
      var i : LongInt;
      var recCount : LongInt;  recCount := XMLMap.GetNodeCountByName('Файл/Документ/НДС/СумУплНА');
      for (i := 0; i < recCount; i++)
      {
        //Файл/Документ/НДС/СумУплНА
        var sPageAddr : string;  sPageAddr := 'Файл/Документ/НДС/СумУплНА'+GetIter(i);

        if     not GetStrNull(sPageAddr+'/КБК'      )
           and not GetStrNull(sPageAddr+'/ОКТМО'    )
           and not GetStrNull(sPageAddr+'/СумИсчисл')
           and not GetStrNull(sPageAddr+'/КодОпер'  )
        {
          #SetVisT(sPageAddr);

          #IfVis(sPageAddr+'/КППИно'       );
          #IfVis(sPageAddr+'/СумИсчислОтгр');
          #IfVis(sPageAddr+'/СумИсчислОпл' );
          #IfVis(sPageAddr+'/СумИсчислНА'  );

          if not GetStrNull(sPageAddr+'/СведПродЮЛ/НаимПрод')
          {
            #SetVisT(sPageAddr+'/СведПродЮЛ');

            if GetStrVal(sPageAddr+'/КодОпер') = '1011703'
            then #SetVisT(sPageAddr+'/СведПродЮЛ/ИННЮЛПрод');
            else #IfVis  (sPageAddr+'/СведПродЮЛ/ИННЮЛПрод');

            #SetVisF(sPageAddr+'/СведПродФЛ');
          }
          else
          {
            #SetVisF(sPageAddr+'/СведПродЮЛ');

            if    not GetStrNull(sPageAddr+'/СведПродФЛ/ФИОПрод/Фамилия')
              and not GetStrNull(sPageAddr+'/СведПродФЛ/ФИОПрод/Имя'    )
            {
              #SetVisT(sPageAddr+'/СведПродФЛ'                 );
              #IfVis  (sPageAddr+'/СведПродФЛ/ИННФЛПрод'       );
              #IfVis  (sPageAddr+'/СведПродФЛ/ФИОПрод/Отчество');
            }
            else #SetVisF(sPageAddr+'/СведПродФЛ');
          }
        }
        else #SetVisF(sPageAddr);
      } // for
    }
    while False;
    //#endregion РАЗДЕЛ 2
    //--------------------------------------------------------------------------------------------------------

    //--------------------------------------------------------------------------------------------------------
    //#region РАЗДЕЛ 3
    //--------------------------------------------------------------------------------------------------------
    do
    {
      //------------------------------------------------------------------------------------------------------
      //#region РАЗДЕЛ 3 ОСНОВНОЙ
      //------------------------------------------------------------------------------------------------------
      if (GetStrNull('Файл/Документ/НДС/СумУпл164/НалПУ164') )
      {
        #SetVisF('Файл/Документ/НДС/СумУпл164');
        Break;
      }
      #SetVisT('Файл/Документ/НДС/СумУпл164');

      if (GetStrNull('Файл/Документ/НДС/СумУпл164/СумНалОб/НалВосстОбщ') )
      {
        #SetVisF('Файл/Документ/НДС/СумУпл164/СумНалОб');
      }
      else
      {
        #SetVisT('Файл/Документ/НДС/СумУпл164/СумНалОб');

        VisSvedSumNal('Файл/Документ/НДС/СумУпл164/СумНалОб/РеалТов20'  );
        VisSvedSumNal('Файл/Документ/НДС/СумУпл164/СумНалОб/РеалТов10'  );
        VisSvedSumNal('Файл/Документ/НДС/СумУпл164/СумНалОб/РеалТов120' );
        VisSvedSumNal('Файл/Документ/НДС/СумУпл164/СумНалОб/РеалТов110' );

        VisSvedSumNal('Файл/Документ/НДС/СумУпл164/СумНалОб/РеалТов18'  );
        VisSvedSumNal('Файл/Документ/НДС/СумУпл164/СумНалОб/РеалТов118' );

        VisSvedSumNal('Файл/Документ/НДС/СумУпл164/СумНалОб/РеалТов7.164'    );
        VisSvedSumNal('Файл/Документ/НДС/СумУпл164/СумНалОб/РеалТовРознЧек'  );
        VisSvedSumNal('Файл/Документ/НДС/СумУпл164/СумНалОб/РеалСрок151.1_20');
        VisSvedSumNal('Файл/Документ/НДС/СумУпл164/СумНалОб/РеалСрок151.1_10');
        // 20117
        VisSvedSumNal('Файл/Документ/НДС/СумУпл164/СумНалОб/РеалПредИК' );
        VisSvedSumNal('Файл/Документ/НДС/СумУпл164/СумНалОб/ВыпСМРСоб'  );
        VisSvedSumNal('Файл/Документ/НДС/СумУпл164/СумНалОб/ОплПредПост');

        if (GetStrNull('Файл/Документ/НДС/СумУпл164/СумНалОб/СумНалВосст/СумНалВс') )
        {
          #SetVisF('Файл/Документ/НДС/СумУпл164/СумНалОб/СумНалВосст');
        }
        else
        {
          #SetVisT('Файл/Документ/НДС/СумУпл164/СумНалОб/СумНалВосст'              );
          #IfVis  ('Файл/Документ/НДС/СумУпл164/СумНалОб/СумНалВосст/СумНал170.3.3');
          #IfVis  ('Файл/Документ/НДС/СумУпл164/СумНалОб/СумНалВосст/СумНалОперСт0');
        }

        VisSvedSumNal('Файл/Документ/НДС/СумУпл164/СумНалОб/КорРеалТов'   );
        VisSvedSumNal('Файл/Документ/НДС/СумУпл164/СумНалОб/КорРеалПредИК');
        // 20117
        VisSvedSumNalZn('Файл/Документ/НДС/СумУпл164/СумНалОб/УплДеклар151.1');
        VisSvedSumNalZn('Файл/Документ/НДС/СумУпл164/СумНалОб/УплДеклар173.6');
      }

      if (GetStrNull('Файл/Документ/НДС/СумУпл164/СумНалВыч/НалВычОбщ') )
      {
        #SetVisF('Файл/Документ/НДС/СумУпл164/СумНалВыч');
      }
      else
      {
        #SetVisT('Файл/Документ/НДС/СумУпл164/СумНалВыч'               );
        #IfVis  ('Файл/Документ/НДС/СумУпл164/СумНалВыч/НалПредНППриоб');

        // 2017
        #IfVis  ('Файл/Документ/НДС/СумУпл164/СумНалВыч/НалПредНПКапСтр');

        #IfVis  ('Файл/Документ/НДС/СумУпл164/СумНалВыч/НалПредНППок'  );
        #IfVis  ('Файл/Документ/НДС/СумУпл164/СумНалВыч/НалИсчРозн'    );
        #IfVis  ('Файл/Документ/НДС/СумУпл164/СумНалВыч/НалИсчСМР'     );
        #IfVis  ('Файл/Документ/НДС/СумУпл164/СумНалВыч/НалУплТамож'   );
        #IfVis  ('Файл/Документ/НДС/СумУпл164/СумНалВыч/НалУплНОТовТС' );
        #IfVis  ('Файл/Документ/НДС/СумУпл164/СумНалВыч/НалИсчПрод'    );
        #IfVis  ('Файл/Документ/НДС/СумУпл164/СумНалВыч/НалУплПокНА'   );

        // 2017
        #IfVis  ('Файл/Документ/НДС/СумУпл164/СумНалВыч/НалВыч171.14'  );
      }
      //#endregion РАЗДЕЛ 3 ОСНОВНОЙ
      //------------------------------------------------------------------------------------------------------

      //------------------------------------------------------------------------------------------------------
      //#region РАЗДЕЛ 3 ПРИЛОЖЕНИЕ 1
      //------------------------------------------------------------------------------------------------------
      do
      {
        var isCanBePage : boolean;
        isCanBePage := (GetStrVal('Файл/Документ/Период') = '24')
                    or (GetStrVal('Файл/Документ/Период') = '56');

        var i : LongInt;
        var recCount1 : LongInt;  recCount1 := XMLMap.GetNodeCountByName('Файл/Документ/НДС/СумУпл164/СумВосУпл');
        for (i := 0; i < recCount1; i++)
        {
          var sPageAddr : string;  sPageAddr := 'Файл/Документ/НДС/СумУпл164/СумВосУпл'+GetIter(i);

          if (not isCanBePage)
          {
            #SetVisF(sPageAddr);
          }
          else
          {
            var isPageVis : boolean;  isPageVis := False;

            var j : LongInt;
            var recCount2 : LongInt;  recCount2 := XMLMap.GetNodeCountByName(sPageAddr+'/СведНалГод');
            for (j := 0; j < recCount2; j++)
            {
              var sSubAddr : string;  sSubAddr := sPageAddr+'/СведНалГод'+GetIter(j);

              if     not GetStrNull(sSubAddr+'/ГодОтч')
                 and not GetStrNull(sSubAddr+'/НалГод')
              {
                #SetVisT(sSubAddr);
                isPageVis := True;
                #IfVis(sSubAddr+'/ДоляНеОбл' );
                #IfVis(sSubAddr+'/ДатаИсп170');
              }
              else #SetVisF(sSubAddr);
            } // for

            if     not GetStrNull(sPageAddr+'/НаимООС'     )
               and not GetStrNull(sPageAddr+'/КодОпООС'    )
               and not GetStrNull(sPageAddr+'/ДатаВводООС' )
               and not GetStrNull(sPageAddr+'/ДатаНачАмОтч')
               and not GetStrNull(sPageAddr+'/СтВводООС'   )
               and not GetStrNull(sPageAddr+'/НалВычООС'   )
               and isPageVis
            {
              #SetVisT(sPageAddr);
            }
            else #SetVisF(sPageAddr);
          }
        }
      }
      while False;
      //#endregion РАЗДЕЛ 3 ПРИЛОЖЕНИЕ 1
      //------------------------------------------------------------------------------------------------------

      //------------------------------------------------------------------------------------------------------
      //#region РАЗДЕЛ 3 ПРИЛОЖЕНИЕ 2
      //------------------------------------------------------------------------------------------------------
      do
      {
        var isPageVis : boolean;  isPageVis := False;

        var i : LongInt;
        var recCount : LongInt;  recCount := XMLMap.GetNodeCountByName('Файл/Документ/НДС/СумУпл164/СумВычИн/СведНалГодИ');
        for (i := 0; i < recCount; i++)
        {
          //Файл/Документ/НДС/СумУпл164/СумВычИн/СведНалГодИ
          var sPageAddr : string;  sPageAddr := 'Файл/Документ/НДС/СумУпл164/СумВычИн/СведНалГодИ'+GetIter(i);

          if (GetStrNull(sPageAddr+'/КППИнУч') )
          {
            #SetVisF(sPageAddr);
          }
          else
          {
            #SetVisT(sPageAddr);

            #IfVis(sPageAddr+'/СумНалВыч');
            #IfVis(sPageAddr+'/СумНалИсч');

            isPageVis := True;
          }
        } // for

        SetFldVis('Файл/Документ/НДС/СумУпл164/СумВычИн', isPageVis);
      }
      while False;
      //#endregion РАЗДЕЛ 3 ПРИЛОЖЕНИЕ 2
      //------------------------------------------------------------------------------------------------------
    }
    while False;
    //#endregion РАЗДЕЛ 3
    //--------------------------------------------------------------------------------------------------------

    //--------------------------------------------------------------------------------------------------------
    //#region РАЗДЕЛ 4
    //--------------------------------------------------------------------------------------------------------
    do
    {
      if (GetStrNull('Файл/Документ/НДС/НалПодтв0/СумИсчислИтог') )
      {
        #SetVisF('Файл/Документ/НДС/НалПодтв0');
        Break;
      }

      #SetVisT('Файл/Документ/НДС/НалПодтв0');

      //------------------------------------------------------------------------------------------------------
      //#region Расчет суммы налога, подлежащей восстановлению, по коду операции
      do
      {
        var i : LongInt;
        var recCount : LongInt;  recCount := XMLMap.GetNodeCountByName('Файл/Документ/НДС/НалПодтв0/СумОпер4');
        for (i := 0; i < recCount; i++)
        {
          var sPageAddr : string;  sPageAddr := 'Файл/Документ/НДС/НалПодтв0/СумОпер4'+GetIter(i);

          if (GetStrNull(sPageAddr+'/КодОпер') )
          or (GetStrNull(sPageAddr+'/НалБаза') )
          {
            #SetVisF(sPageAddr);
          }
          else
          {
            #SetVisT(sPageAddr);
            #IfVis  (sPageAddr+'/НалВычПод');
            #IfVis  (sPageAddr+'/НалНеПод' );
            #IfVis  (sPageAddr+'/НалВосст' );
          }
        } // for
      }
      while False;
      //#endregion Расчет суммы налога, подлежащей восстановлению, по коду операции
      //------------------------------------------------------------------------------------------------------

      //------------------------------------------------------------------------------------------------------
      //#region Корректировка налоговой базы при возврате товаров
      do
      {
        var i : LongInt;
        var recCount : LongInt;  recCount := XMLMap.GetNodeCountByName('Файл/Документ/НДС/НалПодтв0/КорНБВозврТов');
        for (i := 0; i < recCount; i++)
        {
          var sPageAddr : string;  sPageAddr := 'Файл/Документ/НДС/НалПодтв0/КорНБВозврТов'+GetIter(i);

          if (GetStrNull(sPageAddr+'/КодОпер') )
          or (GetStrNull(sPageAddr+'/НалБаза') )
          {
            #SetVisF(sPageAddr);
          }
          else
          {
            #SetVisT(sPageAddr);
            #IfVis  (sPageAddr+'/НалВосст');
          }
        } // for
      }
      while False;
      //#endregion Корректировка налоговой базы при возврате товаров
      //------------------------------------------------------------------------------------------------------

      //------------------------------------------------------------------------------------------------------
      //#region Корректировка налоговой базы при увеличении (уменьшении) цены
      do
      {
        var i : LongInt;
        var recCount : LongInt;  recCount := XMLMap.GetNodeCountByName('Файл/Документ/НДС/НалПодтв0/КорНБИзмЦен');
        for (i := 0; i < recCount; i++)
        {
          var sPageAddr : string;  sPageAddr := 'Файл/Документ/НДС/НалПодтв0/КорНБИзмЦен'+GetIter(i);

          if (GetStrNull(sPageAddr+'/КодОпер') )
          {
            #SetVisF(sPageAddr);
          }
          else
          {
            #SetVisT(sPageAddr);
            #IfVis  (sPageAddr+'/КорНалБазаУв');
            #IfVis  (sPageAddr+'/КорНалБазаУм');
          }
        } // for
      }
      while False;
      //#endregion Корректировка налоговой базы при увеличении (уменьшении) цены
      //------------------------------------------------------------------------------------------------------
    }
    while False;
    //#endregion РАЗДЕЛ 4
    //--------------------------------------------------------------------------------------------------------

    //--------------------------------------------------------------------------------------------------------
    //#region РАЗДЕЛ 5
    //--------------------------------------------------------------------------------------------------------
    do
    {
      var isPageVis    : boolean;  isPageVis    := False;
      var isSubPageVis : boolean;  isSubPageVis := False;

      var i : LongInt;
      var recCount1 : LongInt;  recCount1 := XMLMap.GetNodeCountByName('Файл/Документ/НДС/НалВычПред0/СумПер');
      for (i := 0; i < recCount1; i++)
      {
        //Файл/Документ/НДС/НалВычПред0/СумПер
        var sPageAddr : string;  sPageAddr := 'Файл/Документ/НДС/НалВычПред0/СумПер'+GetIter(i);

        var j : LongInt;
        var recCount2 : LongInt;  recCount2 := XMLMap.GetNodeCountByName(sPageAddr+'/СумОпер5');
        for (j := 0; j < recCount2; j++)
        {
          var sSubAddr : string;  sSubAddr := sPageAddr+'/СумОпер5'+GetIter(j);

          if not GetStrNull(sSubAddr+'/КодОпер')
          {
            #SetVisT(sSubAddr);

            if     not GetStrNull(sSubAddr+'/НалВычПод'   )
               or (    GetStrNull(sSubAddr+'/НалБазаНеПод')
                   and GetStrNull(sSubAddr+'/НалВычНеПод' ))
            then #SetVisT(sSubAddr+'/НалБазаПод');
            else #IfVis  (sSubAddr+'/НалБазаПод');

            if     not GetStrNull(sSubAddr+'/НалБазаПод'  )
               or (    GetStrNull(sSubAddr+'/НалБазаНеПод')
                   and GetStrNull(sSubAddr+'/НалВычНеПод' ))
            then #SetVisT(sSubAddr+'/НалВычПод');
            else #IfVis  (sSubAddr+'/НалВычПод');

            if     not GetStrNull(sSubAddr+'/НалВычНеПод')
               or (    GetStrNull(sSubAddr+'/НалБазаПод' )
                   and GetStrNull(sSubAddr+'/НалВычПод'  ))
            then #SetVisT(sSubAddr+'/НалБазаНеПод');
            else #IfVis  (sSubAddr+'/НалБазаНеПод');

            if     not GetStrNull(sSubAddr+'/НалБазаНеПод')
               or (    GetStrNull(sSubAddr+'/НалБазаПод'  )
                   and GetStrNull(sSubAddr+'/НалВычПод'   ))
            then #SetVisT(sSubAddr+'/НалВычНеПод');
            else #IfVis  (sSubAddr+'/НалВычНеПод');

            isSubPageVis := True;
          }
          else #SetVisF(sSubAddr);
        } // for J

        if     not GetStrNull(sPageAddr+'/ОтчетГод')
           and not GetStrNull(sPageAddr+'/Период'  )
           and isSubPageVis
        {
          #SetVisT(sPageAddr);
          isPageVis := True;
        }
        else #SetVisF(sPageAddr);
      } // for

      if (not isPageVis)
      {
        #SetVisF('Файл/Документ/НДС/НалВычПред0');
      }
      else
      {
        #SetVisT('Файл/Документ/НДС/НалВычПред0');

        if GetStrNull('Файл/Документ/НДС/НалВычПред0/СумВозмНеПдтв')
        then #SetVisT('Файл/Документ/НДС/НалВычПред0/СумВозмПдтв'  );
        else #IfVis  ('Файл/Документ/НДС/НалВычПред0/СумВозмПдтв'  );

        if GetStrNull('Файл/Документ/НДС/НалВычПред0/СумВозмПдтв'  )
        then #SetVisT('Файл/Документ/НДС/НалВычПред0/СумВозмНеПдтв');
        else #IfVis  ('Файл/Документ/НДС/НалВычПред0/СумВозмНеПдтв');
      }

    }
    while False;
    //#endregion РАЗДЕЛ 5
    //--------------------------------------------------------------------------------------------------------

    //--------------------------------------------------------------------------------------------------------
    //#region РАЗДЕЛ 6
    //--------------------------------------------------------------------------------------------------------
    do
    {
      if (GetStrNull('Файл/Документ/НДС/НалНеПодтв0/НалИсчислИт') )
      {
        #SetVisF('Файл/Документ/НДС/НалНеПодтв0');
        Break;
      }

      #SetVisT('Файл/Документ/НДС/НалНеПодтв0');
      #IfVis('Файл/Документ/НДС/НалНеПодтв0/НалВычНеПодИт');

      var isPageVis : boolean;  isPageVis := False;

      //--------------------------------------------------------------------------------------------------------
      //#region Расчет суммы налога по коду операции
      do
      {
        var i : LongInt;
        var recCount : LongInt;  recCount := XMLMap.GetNodeCountByName('Файл/Документ/НДС/НалНеПодтв0/СумОпер6');
        for (i := 0; i < recCount; i++)
        {
          var sPageAddr : string;  sPageAddr := 'Файл/Документ/НДС/НалНеПодтв0/СумОпер6'+GetIter(i);

          if (GetStrNull(sPageAddr+'/КодОпер'  ) )
          or (GetStrNull(sPageAddr+'/НалБаза'  ) )
          or (GetStrNull(sPageAddr+'/СумНал164') )
          {
            #SetVisF(sPageAddr);
          }
          else
          {
            isPageVis := True;

            #SetVisT(sPageAddr               );
            #IfVis  (sPageAddr+'/НалВычНеПод');
          }
        } // for
      }
      while False;
      //#endregion Расчет суммы налога по коду операции
      //--------------------------------------------------------------------------------------------------------

      //--------------------------------------------------------------------------------------------------------
      //#region Корректировка сумм налога при возврате товаров
      do
      {
        var i : LongInt;
        var recCount : LongInt;  recCount := XMLMap.GetNodeCountByName('Файл/Документ/НДС/НалНеПодтв0/КорНалВозврТов');
        for (i := 0; i < recCount; i++)
        {
          var sPageAddr : string;  sPageAddr := 'Файл/Документ/НДС/НалНеПодтв0/КорНалВозврТов'+GetIter(i);

          if (GetStrNull(sPageAddr+'/КодОпер'  ) )
          or (GetStrNull(sPageAddr+'/НалБаза'  ) )
          or (GetStrNull(sPageAddr+'/НалВосст' ) )
          {
            #SetVisF(sPageAddr);
          }
          else
          {
            isPageVis := True;

            #SetVisT(sPageAddr                 );
            #IfVis  (sPageAddr+'/КорИсч.164.23');
          }
        } // for
      }
      while False;
      //#endregion Корректировка сумм налога при возврате товаров
      //--------------------------------------------------------------------------------------------------------

      //--------------------------------------------------------------------------------------------------------
      //#region Корректировка сумм налога при изменении цены реализованных товаров (работ, услуг)
      do
      {
        var i : LongInt;
        var recCount : LongInt;  recCount := XMLMap.GetNodeCountByName('Файл/Документ/НДС/НалНеПодтв0/КорНалИзмЦен');
        for (i := 0; i < recCount; i++)
        {
          var sPageAddr : string;  sPageAddr := 'Файл/Документ/НДС/НалНеПодтв0/КорНалИзмЦен'+GetIter(i);

          if (GetStrNull(sPageAddr+'/КодОпер'  ) )
          {
            #SetVisF(sPageAddr);
          }
          else
          {
            isPageVis := True;

            #SetVisT(sPageAddr                 );
            #IfVis  (sPageAddr+'/КорНалБазаУв');
            #IfVis  (sPageAddr+'/КорИсч.164.23Ув');
            #IfVis  (sPageAddr+'/КорНалБазаУм');
            #IfVis  (sPageAddr+'/КорИсч.164.23Ум');
          }
        } // for
      }
      while False;
      //#endregion Корректировка сумм налога при изменении цены реализованных товаров (работ, услуг)
      //--------------------------------------------------------------------------------------------------------

      if (isPageVis)
      then #SetVisT('Файл/Документ/НДС/НалНеПодтв0/СумНал164Ит');
      else #IfVis  ('Файл/Документ/НДС/НалНеПодтв0/СумНал164Ит');

    }
    while False;
    //#endregion РАЗДЕЛ 6
    //--------------------------------------------------------------------------------------------------------

    //--------------------------------------------------------------------------------------------------------
    //#region РАЗДЕЛ 7
    //--------------------------------------------------------------------------------------------------------
    do
    {
      var isPageVis : boolean;  isPageVis := False;

      var i : LongInt;
      var recCount : LongInt;  recCount := XMLMap.GetNodeCountByName('Файл/Документ/НДС/ОперНеНал/СумОпер7');
      for (i := 0; i < recCount; i++)
      {
        var sPageAddr : string;  sPageAddr := 'Файл/Документ/НДС/ОперНеНал/СумОпер7'+GetIter(i);

        if     not GetStrNull(sPageAddr+'/КодОпер'  )
           and not GetStrNull(sPageAddr+'/СтРеалТов')
        {
          #SetVisT(sPageAddr              );
          #IfVis  (sPageAddr+'/СтПриобТов');
          #IfVis  (sPageAddr+'/НалНеВыч'  );
          isPageVis := True;
        }
        else #SetVisF(sPageAddr);
      }

      if    isPageVis
         or not GetStrNull('Файл/Документ/НДС/ОперНеНал/ОплПостСв6Мес')
      {
        #SetVisT('Файл/Документ/НДС/ОперНеНал');
        #IfVis  ('Файл/Документ/НДС/ОперНеНал/ОплПостСв6Мес');
      }
      else #SetVisF('Файл/Документ/НДС/ОперНеНал');
    }
    while False;
    //#endregion РАЗДЕЛ 7
    //--------------------------------------------------------------------------------------------------------

  }
  while False;
  StopVisual('', 0);
  //#endregion ВИДИМОСТЬ ПОЛЕЙ В ОСНОВНЫХ РАЗДЕЛАХ
  //**********************************************************************************************************

  //==========================================================================================================
  //#region ВИДИМОСТЬ ДОПОЛНИТЕЛЬНЫХ РАЗДЕЛОВ В ОСНОВНОМ ФАЙЛЕ
  SetFldVis('Файл/ПризнНал8-12', True );
  SetFldVis('Файл/ПризнНал8' , (GetIntVal('Файл/ПризнНал8-12') = 1) );
  SetFldVis('Файл/ПризнНал81', (GetIntVal('Файл/ПризнНал8-12') = 1) );
  SetFldVis('Файл/ПризнНал9' , (GetIntVal('Файл/ПризнНал8-12') = 1) );
  SetFldVis('Файл/ПризнНал91', (GetIntVal('Файл/ПризнНал8-12') = 1) );
  SetFldVis('Файл/ПризнНал10', (GetIntVal('Файл/ПризнНал8-12') = 1) );
  SetFldVis('Файл/ПризнНал11', (GetIntVal('Файл/ПризнНал8-12') = 1) );
  SetFldVis('Файл/ПризнНал12', (GetIntVal('Файл/ПризнНал8-12') = 1) );

  SetFldVis('Файл/Документ/НДС/КнигаПокуп'   , (GetIntVal('Файл/ПризнНал8' ) = 1) );
  SetFldVis('Файл/Документ/НДС/КнигаПокупДЛ' , (GetIntVal('Файл/ПризнНал81') = 1) );
  SetFldVis('Файл/Документ/НДС/КнигаПрод'    , (GetIntVal('Файл/ПризнНал9' ) = 1) );
  SetFldVis('Файл/Документ/НДС/КнигаПродДЛ'  , (GetIntVal('Файл/ПризнНал91') = 1) );
  SetFldVis('Файл/Документ/НДС/ЖУчВыстСчФ'   , (GetIntVal('Файл/ПризнНал10') = 1) );
  SetFldVis('Файл/Документ/НДС/ЖУчПолучСчФ'  , (GetIntVal('Файл/ПризнНал11') = 1) );
  SetFldVis('Файл/Документ/НДС/ВыстСчФ_173.5', (GetIntVal('Файл/ПризнНал12') = 1) );
  //#endregion ВИДИМОСТЬ ДОПОЛНИТЕЛЬНЫХ РАЗДЕЛОВ В ОСНОВНОМ ФАЙЛЕ
  //**********************************************************************************************************

  Result := True;
@end. // ReCalcVisFldRBR
//#endregion ВИДИМОСТЬ ПОЛЕЙ ОСНОВНЫХ РАЗДЕЛОВ
//************************************************************************************************************

//============================================================================================================
//#region ВИДИМОСТЬ ПОЛЕЙ ВСЕЙ ДЕКЛАРАЦИИ
//------------------------------------------------------------------------------------------------------------
// Установить видимость полей всей декларации
@Script On_Visable(
  _isNeedDopRazdel : boolean = True  // требуется ли проверять доп разделы
) : boolean;
@begin
  Result := False;

  //----------------------------------------------------------------------------------------------------------
  // видимость полей в основных разделах
  ReCalcVisFldRBR;
  //----------------------------------------------------------------------------------------------------------

  //----------------------------------------------------------------------------------------------------------
  // видимость полей в доп разделах
  if (_isNeedDopRazdel)
  { // если требуется проверять доп разделы
    ReCalcVisFldAllDopRazdel(False);
  }
  //----------------------------------------------------------------------------------------------------------

  Result := True;
@end. // On_Visable
//#endregion ВИДИМОСТЬ ПОЛЕЙ ВСЕЙ ДЕКЛАРАЦИИ
//************************************************************************************************************
//#endregion ДЕЙСТВИЯ ВЫПОЛНЯЕМЫЕ ПРИ УСТАНОВКЕ ВИДИМОСТИ ПОЛЕЙ
//************************************************************************************************************


//============================================================================================================
//#region ДЕЙСТВИЯ ВЫПОЛНЯЕМЫЕ ПРИ ПРОВЕРКЕ
//============================================================================================================
//#region ПРОВЕРКА ДОП РАЗДЕЛОВ
//============================================================================================================
//#region СЕРВИСНЫЕ МЕТОДЫ
//------------------------------------------------------------------------------------------------------------
// Для доп разделов проверить "Порядковый номер"
@Script RXXCheckNodeNpp(
  _cParent    : comp  ;  // ссылка на родителя
  _sPath      : string;  // путь на запись
  _sPage      : string   // наименование раздела
);
@begin
  var sNpp : string;  sNpp := XMLMap.GetAttrValueByPathOnLevel(_cParent, _sPath);
  var wNpp : word  ;  wNpp := word(sNpp);
  if (sNpp = '')
  { // если не задано поле "Порядковый номер"
    MessageErrorStop_ALG(
      XMLMap.GetFullNodeName(_cParent)+'/'+_sPath
    , _sPage
    , 'Порядковый номер'
    , 'Не задано поле "Порядковый номер"'
    );
    Exit;
  } // если не задано поле "Порядковый номер"
  if (wNpp = 0)
  { // если не корректное значение поля
    MessageErrorStop_ALG(
      XMLMap.GetFullNodeName(_cParent)+'/'+_sPath
    , _sPage
    , 'Порядковый номер'
    , 'Поле "Порядковый номер", может принимать значения от 1 и более'
    );
  } // если не корректное значение поля
@end. // RXXCheckNodeNpp

//------------------------------------------------------------------------------------------------------------
// Для доп разделов проверить "Код вида операции"
@Script RXXCheckNodeCodeVidOp(
    _cParent    : comp  ;  // ссылка на родителя
    _sPath      : string;  // путь на запись
    _sPage      : string;  // наименование раздела
var _sCodeVidOp : string;  // строковое значение
var _wCodeVidOp : word     // числовое значение
);
@begin
  _sCodeVidOp := XMLMap.GetAttrValueByPathOnLevel(_cParent, _sPath);
  _wCodeVidOp := word(_sCodeVidOp);
  if (_sCodeVidOp = '')
  { // если не задано поле "Код вида операции"
    MessageErrorStop_ALG(
      XMLMap.GetFullNodeName(_cParent)+'/'+_sPath
    , _sPage
    , 'Код вида операции'
    , 'Не задано поле "Код вида операции"'
    );
  } // если не задано поле "Код вида операции"
  if (Length(_sCodeVidOp) != 2)
  { // если не корректная длина поля
    MessageErrorStop_ALG(
      XMLMap.GetFullNodeName(_cParent)+'/'+_sPath
    , _sPage
    , 'Код вида операции'
    , 'Длина поля "Код вида операции" должна быть равна 2-м'
    );
  } // если не корректная длина поля
@end. // RXXCheckNodeCodeVidOp

//------------------------------------------------------------------------------------------------------------
// Для доп разделов проверить "Регистрационный номер таможенной декларации"
@Script RXXCheckNodeRegNumTD(
  _cParent    : comp  ;  // ссылка на родителя
  _sPage      : string   // наименование раздела
);
@begin
  var NodeNpp   : LongInt;
  var NodeCount : LongInt;  NodeCount := XMLMap.GetNodeCountByNameOnLevel(_cParent, 'РегНомТД');
  for (NodeNpp := 0; NodeNpp < NodeCount; NodeNpp++)
  { // побежали по полям
    var sAddr     : string;  sAddr := 'РегНомТД'+GetIter(NodeNpp)+'/Значение';
    if (not XMLMap.GetAttrVisByPathOnLevel(_cParent, sAddr) )
    { Continue; }
    var sRegNumTD : string;  sRegNumTD := XMLMap.GetAttrValueByPathOnLevel(_cParent, sAddr);
    if (Length(sRegNumTD) < 13)
    or (Length(sRegNumTD) > 27)
    { // если не корректная длина поля
      MessageErrorStop_ALG(
        XMLMap.GetFullNodeName(_cParent)+'/'+sAddr
      , _sPage
      , 'Номер таможенной декларации'
      , 'Длина поля д/б в пределах 13-27 символов'
      );
    } // если не корректная длина поля
  } // побежали по полям
@end. // RXXCheckNodeRegNumTD

//------------------------------------------------------------------------------------------------------------
// Для доп разделов проверить "Код вида товара"
@Script RXXCheckNode_KodVidTovar(
  _cParent    : comp  ;  // ссылка на родителя
  _sPage      : string   // наименование раздела
);
@begin
  var NodeNpp   : LongInt;
  var NodeCount : LongInt;  NodeCount := XMLMap.GetNodeCountByNameOnLevel(_cParent, 'КодВидТовар');
  for (NodeNpp := 0; NodeNpp < NodeCount; NodeNpp++)
  { // побежали по полям
    var sAddr     : string;  sAddr := 'КодВидТовар'+GetIter(NodeNpp)+'/Значение';
    if (not XMLMap.GetAttrVisByPathOnLevel(_cParent, sAddr) )
    { Continue; }
    var sKodVidTovar : string;  sKodVidTovar := XMLMap.GetAttrValueByPathOnLevel(_cParent, sAddr);
    if (Length(sKodVidTovar) < 4)
    or (Length(sKodVidTovar) > 10)
    { // если не корректная длина поля
      MessageErrorStop_ALG(
        XMLMap.GetFullNodeName(_cParent)+'/'+sAddr
      , _sPage
      , 'Код вида товара'
      , 'Длина поля д/б в пределах 4-10 символов'
      );
    } // если не корректная длина поля
  } // побежали по полям
@end. // RXXCheckNode_KodVidTovar

//------------------------------------------------------------------------------------------------------------
// Для доп разделов проверить "Сведения о контрагенте"
@Script RXXCheckNodeContr(
  _cParent    : comp  ;  // ссылка на родителя
  _sPath      : string;  // путь на запись
  _sPage      : string   // наименование раздела
);
@begin
  if (not XMLMap.GetAttrVisByPathOnLevelInTree(_cParent, _sPath) )
  { Exit; }

  var isULVis : boolean;  isULVis := XMLMap.GetAttrVisByPathOnLevel(_cParent, _sPath+'/СведЮЛ');
  var isIPVis : boolean;  isIPVis := XMLMap.GetAttrVisByPathOnLevel(_cParent, _sPath+'/СведИП');
  if (isULVis and isIPVis)
  {
    MessageErrorStop_ALG(
      XMLMap.GetFullNodeName(_cParent)+'/'+_sPath
    , _sPage
    , 'Сведения об организации'
    , 'Одновременно указаны сведения о юридическом лице и индивидуальном предпринимателе'
    );
    Exit;
  }
  //--------------------------------------------------------------------------------------------------------
  if (isULVis)
  {
    var flINN, flKPP : boolean = False;
    var sINN : string;  sINN := XMLMap.GetAttrValueByPathOnLevel(_cParent, _sPath+'/СведЮЛ/ИННЮЛ');
    var cRec : comp  ;  cRec := XMLMap.GetCompAttrValueByPathOnLevel(_cParent, _sPath+'/NRec'+_sPath);
    var sMes : string;  sMes := '';
    if (not (Length(sINN) = 10))
    {
      MessageErrorStop_ALG(
        XMLMap.GetFullNodeName(_cParent)+'/'+_sPath+'/СведЮЛ/ИННЮЛ'
      , _sPage
      , 'ИНН'
      , 'Значение поля не соответствует формату поля. Формат поля: 10 цифр'
      );
      flINN := True;
    }
    if (not CheckError.CheckOrgINN(sINN, cRec, sMes) )
    {
      MessageErrorStop_ALG(
        XMLMap.GetFullNodeName(_cParent)+'/'+_sPath+'/СведЮЛ/ИННЮЛ'
      , _sPage
      , 'ИНН'
      , sMes
      );
      flINN := True;
    }

    var sKPP : string;  sKPP := XMLMap.GetAttrValueByPathOnLevel(_cParent, _sPath+'/СведЮЛ/КПП');
    if (not CheckError.isRegExpr('^(([0-9]{1}[1-9]{1}|[1-9]{1}[0-9]{1})([0-9]{2})([0-9A-Z]{2})([0-9]{3}))$', sKPP) )
    {
      MessageErrorStop_ALG(
        XMLMap.GetFullNodeName(_cParent)+'/'+_sPath+'/СведЮЛ/КПП'
      , _sPage
      , 'КПП'
      , 'Значение поля не соответствует формату. Формат поля: 9 символов'
      );
      flKPP := True;
    }

    if (flINN or flKPP)
      Exit;
  }
  //--------------------------------------------------------------------------------------------------------
  if (isIPVis)
  {
    var flINN : boolean = False;
    var sINN : string;  sINN := XMLMap.GetAttrValueByPathOnLevel(_cParent, _sPath+'/СведИП/ИННФЛ');
    var cRec : comp  ;  cRec := XMLMap.GetCompAttrValueByPathOnLevel(_cParent, _sPath+'/NRec'+_sPath);
    var sMes : string;  sMes := '';
    if (not (Length(sINN) = 12))
    {
      MessageErrorStop_ALG(
        XMLMap.GetFullNodeName(_cParent)+'/'+_sPath+'/СведИП/ИННФЛ'
      , _sPage
      , 'ИНН'
      , 'Значение поля не соответствует формату поля. Формат поля: 12 цифр'
      );
      flINN := True;
    }
    if (not CheckError.CheckOrgINN(sINN, cRec, sMes) )
    {
      MessageErrorStop_ALG(
        XMLMap.GetFullNodeName(_cParent)+'/'+_sPath+'/СведИП/ИННФЛ'
      , _sPage
      , 'ИНН'
      , sMes
      );
      flINN := True;
    }

    if (flINN)
      Exit;
  }
  //--------------------------------------------------------------------------------------------------------
@end. // RXXCheckNodeContr
//#endregion СЕРВИСНЫЕ МЕТОДЫ
//************************************************************************************************************

//============================================================================================================
//#region РАЗДЕЛ 08
//------------------------------------------------------------------------------------------------------------
// Проверить поля "РАЗДЕЛА 08"
@Script CheckFldR08 : boolean;
@begin
  Result := False;

  // видимость полей
  ReCalcVisFldR08(True);

  StartNewVisual(vtNumericVisual, vfTimer+vfBreak+vfConfirm+vfScreenBottom
  , 'Проверка полей: "Раздел 8"...', 0);
  do
  {
    if (GetIntVal('Файл/ПризнНал8' ) = 0)
    { Break; }

    var sAddr : string;  sAddr := 'Файл/Документ/НДС/КнигаПокуп/Файл/Документ/КнигаПокуп';
    if (not GetFldVisInTree(sAddr) )
    { Break; }

    sAddr := sAddr + '/КнПокСтр';
    var BStrNpp   : LongInt;
    var BStrCount : LongInt;  BStrCount := XMLMap.GetNodeCountByName(sAddr);
    for (BStrNpp := 0; BStrNpp < BStrCount; BStrNpp++)
    { // побежали по строкам книги
      if (not NextVisual)
      { Break; }

      var sPageID  : string;  sPageID  := pFH.Func('myGetPageIDR08_0', BStrNpp+1);
      var sStrAddr : string;  sStrAddr := sAddr+GetIter(BStrNpp);
      var cStrNode : comp  ;  cStrNode := XMLMap.GetPositionByName(sStrAddr, True);

      //------------------------------------------------------------------------------------------------------
      // поле "Порядковый номер"
      RXXCheckNodeNpp(cStrNode, 'НомерПор', sPageID)
      //------------------------------------------------------------------------------------------------------

      //------------------------------------------------------------------------------------------------------
      // поле "Код вида операции"
      var sCodeVidOp : string;  sCodeVidOp := '';
      var wCodeVidOp : word  ;  wCodeVidOp := 0;
      RXXCheckNodeCodeVidOp(cStrNode, 'КодВидОпер/Значение', sPageID, sCodeVidOp, wCodeVidOp);
      //------------------------------------------------------------------------------------------------------

      //------------------------------------------------------------------------------------------------------
      // поле "Регистрационный номер таможенной декларации"
      RXXCheckNodeRegNumTD(cStrNode, sPageID);
      //------------------------------------------------------------------------------------------------------

      //------------------------------------------------------------------------------------------------------
      // проверка контрагентов
      do
      {
        //----------------------------------------------------------------------------------------------------
        // Сведения о продавце
        // проверка видимости
        if  (wCodeVidOp  = 01)
        or  (wCodeVidOp  = 02)
        or  (wCodeVidOp  = 13)
        or ((wCodeVidOp >= 15) and (wCodeVidOp <= 18))
        or  (wCodeVidOp  = 22)
        or ((wCodeVidOp >= 24) and (wCodeVidOp <= 26))
        or  (wCodeVidOp  = 32)
        or  (wCodeVidOp  = 34)
        or  (wCodeVidOp  = 36)
        or ((wCodeVidOp >= 41) and (wCodeVidOp <= 44))
        { // Элемент обязателен если элемент <КодВидОпер> принимает хотя бы одно из значений диапазона
          if (not XMLMap.GetAttrVisByPathOnLevel(cStrNode, 'СвПрод') )
          {
            var sMess : string;
            sMess := 'Элемент "Сведения о продавце" обязателен если "Код вида операции" '
                   + 'принимает хотя бы одно из значений диапазона: 01-02 | 13 | 15-20 | 22-26 | 32 | 34 | 36 | 41-44';
            MessageErrorStop_ALG(
              sStrAddr+'/СвПрод/СведЮЛ/ИННЮЛ'
            , sPageID
            , 'Сведения о продавце'
            , sMess
            );
            Break;
          }
        }
        if  (wCodeVidOp  = 19)
        or  (wCodeVidOp  = 20)
        or  (wCodeVidOp  = 23)
        {
            if (XMLMap.GetAttrValueByPathOnLevel(cStrNode, 'СвПрод/СведЮЛ/ИННЮЛ') != '')
            or (XMLMap.GetAttrValueByPathOnLevel(cStrNode, 'СвПрод/СведЮЛ/ИННФЛ') != '')
            {
             if (not XMLMap.GetAttrVisByPathOnLevel(cStrNode, 'СвПрод') )
              {
               var sMess : string;
               sMess := 'Элемент "Сведения о продавце" обязателен если "Код вида операции" '
                   + 'принимает хотя бы одно из значений диапазона: 01-02 | 13 | 15-20 | 22-26 | 32 | 34 | 36 | 41-44';
               MessageErrorStop_ALG(
                sStrAddr+'/СвПрод/СведЮЛ/ИННЮЛ'
              , sPageID
              , 'Сведения о продавце'
              , sMess
              );
              Break;
              }
            }
        }
        // проверка ИНН и КПП
        if (wCodeVidOp != 19) and (wCodeVidOp != 20)
        {
          RXXCheckNodeContr(cStrNode, 'СвПрод', sPageID);
        }
        //----------------------------------------------------------------------------------------------------

        //----------------------------------------------------------------------------------------------------
        // Сведения о посреднике (комиссионере, агенте, экспедиторе, застройщике)
        // проверка ИНН и КПП
        if (wCodeVidOp != 19) and (wCodeVidOp != 20)
        {
          RXXCheckNodeContr(cStrNode, 'СвПос', sPageID);
        }
        //----------------------------------------------------------------------------------------------------
      }
      while False;
      // проверка контрагентов
      //------------------------------------------------------------------------------------------------------

    } // побежали по строкам книги

  }
  while False;
  StopVisual('', 0);
  Result := True;
@end. // CheckFldR08
//#endregion РАЗДЕЛ 08
//************************************************************************************************************

//============================================================================================================
//#region ПРИЛОЖЕНИЕ К РАЗДЕЛУ 08
//------------------------------------------------------------------------------------------------------------
// Проверить поля "ПРИЛОЖЕНИЯ К РАЗДЕЛУ 08"
@Script CheckFldR8D : boolean;
@begin
  Result := False;

  // видимость полей
  ReCalcVisFldR8D(True);

  StartNewVisual(vtNumericVisual, vfTimer+vfBreak+vfConfirm+vfScreenBottom
  , 'Проверка полей: "Раздел 8 Приложение 1"...', 0);
  do
  {
    if (GetIntVal('Файл/ПризнНал81' ) = 0)
    { Break; }

    var sAddr : string;  sAddr := 'Файл/Документ/НДС/КнигаПокупДЛ/Файл/Документ/КнигаПокупДЛ';
    if (not GetFldVisInTree(sAddr) )
    { Break; }

    sAddr := sAddr + '/КнПокДЛСтр';
    var BStrNpp   : LongInt;
    var BStrCount : LongInt;  BStrCount := XMLMap.GetNodeCountByName(sAddr);
    for (BStrNpp := 0; BStrNpp < BStrCount; BStrNpp++)
    { // побежали по строкам книги
      if (not NextVisual)
      { Break; }

      var sPageID  : string;  sPageID  := pFH.Func('myGetPageIDR8D_0', BStrNpp+1);
      var sStrAddr : string;  sStrAddr := sAddr+GetIter(BStrNpp);
      var cStrNode : comp  ;  cStrNode := XMLMap.GetPositionByName(sStrAddr, True);

      //------------------------------------------------------------------------------------------------------
      // поле "Порядковый номер"
      RXXCheckNodeNpp(cStrNode, 'НомерПор', sPageID)
      //------------------------------------------------------------------------------------------------------

      //------------------------------------------------------------------------------------------------------
      // поле "Код вида операции"
      var sCodeVidOp : string;  sCodeVidOp := '';
      var wCodeVidOp : word  ;  wCodeVidOp := 0;
      RXXCheckNodeCodeVidOp(cStrNode, 'КодВидОпер/Значение', sPageID, sCodeVidOp, wCodeVidOp);
      //------------------------------------------------------------------------------------------------------

      //------------------------------------------------------------------------------------------------------
      // поле "Регистрационный номер таможенной декларации"
      RXXCheckNodeRegNumTD(cStrNode, sPageID);
      //------------------------------------------------------------------------------------------------------

      //------------------------------------------------------------------------------------------------------
      // проверка контрагентов
      do
      {
        //----------------------------------------------------------------------------------------------------
        // Сведения о продавце
        // проверка видимости
        if  (wCodeVidOp  = 01)
        or  (wCodeVidOp  = 02)
        or  (wCodeVidOp  = 13)
        or ((wCodeVidOp >= 15) and (wCodeVidOp <= 20))
        or  (wCodeVidOp  = 22)
        or ((wCodeVidOp >= 23) and (wCodeVidOp <= 26))
        or  (wCodeVidOp  = 32)
        or  (wCodeVidOp  = 34)
        or  (wCodeVidOp  = 36)
        or ((wCodeVidOp >= 41) and (wCodeVidOp <= 44))
        { // Элемент обязателен если элемент <КодВидОпер> принимает хотя бы одно из значений диапазона
          if (not XMLMap.GetAttrVisByPathOnLevel(cStrNode, 'СвПрод') )
          {
            var sMess : string;
            sMess := 'Элемент "Сведения о продавце" обязателен если "Код вида операции" '
                   + 'принимает хотя бы одно из значений диапазона: 01-02 | 13 | 15-20 | 22-26 | 32 | 34 | 36 | 41-44';
            if (XMLMap.GetAttrValueByPathOnLevel(cStrNode, 'СвПрод/СведЮЛ/ИННЮЛ') != '')
            or (XMLMap.GetAttrValueByPathOnLevel(cStrNode, 'СвПрод/СведЮЛ/ИННФЛ') != '')
            {
              sMess := sMess + '. Возможно указан не Российский резидент'
            }
            MessageErrorStop_ALG(
              sStrAddr+'/СвПрод/СведЮЛ/ИННЮЛ'
            , sPageID
            , 'Сведения о продавце'
            , sMess
            );
            Break;
          }
        }
        // проверка ИНН и КПП
        if (wCodeVidOp != 19) and (wCodeVidOp != 20)
        {
          RXXCheckNodeContr(cStrNode, 'СвПрод', sPageID);
        }
        //----------------------------------------------------------------------------------------------------

        //----------------------------------------------------------------------------------------------------
        // Сведения о посреднике (комиссионере, агенте, экспедиторе, застройщике)
        // проверка ИНН и КПП
        if (wCodeVidOp != 19) and (wCodeVidOp != 20)
        {
          RXXCheckNodeContr(cStrNode, 'СвПос', sPageID);
        }
        //----------------------------------------------------------------------------------------------------
      }
      while False;
      // проверка контрагентов
      //------------------------------------------------------------------------------------------------------

    } // побежали по строкам книги

  }
  while False;
  StopVisual('', 0);
  Result := True;
@end. // CheckFldR8D
//#endregion ПРИЛОЖЕНИЕ К РАЗДЕЛУ 08
//************************************************************************************************************

//============================================================================================================
//#region РАЗДЕЛ 09
//------------------------------------------------------------------------------------------------------------
// Проверить поля "РАЗДЕЛА 09"
@Script CheckFldR09 : boolean;
@begin
  Result := False;

  // видимость полей
  ReCalcVisFldR09(True);

  StartNewVisual(vtNumericVisual, vfTimer+vfBreak+vfConfirm+vfScreenBottom
  , 'Проверка полей: "Раздел 9"...', 0);
  do
  {
    if (GetIntVal('Файл/ПризнНал9' ) = 0)
    { Break; }

    var sAddr : string;  sAddr := 'Файл/Документ/НДС/КнигаПрод/Файл/Документ/КнигаПрод';
    if (not GetFldVisInTree(sAddr) )
    { Break; }

    sAddr := sAddr + '/КнПродСтр';
    var BStrNpp   : LongInt;
    var BStrCount : LongInt;  BStrCount := XMLMap.GetNodeCountByName(sAddr);
    for (BStrNpp := 0; BStrNpp < BStrCount; BStrNpp++)
    { // побежали по строкам книги
      if (not NextVisual)
      { Break; }

      var sPageID  : string;  sPageID  := pFH.Func('myGetPageIDR09_0', BStrNpp+1);
      var sStrAddr : string;  sStrAddr := sAddr+GetIter(BStrNpp);
      var cStrNode : comp  ;  cStrNode := XMLMap.GetPositionByName(sStrAddr, True);

      //------------------------------------------------------------------------------------------------------
      // поле "Порядковый номер"
      RXXCheckNodeNpp(cStrNode, 'НомерПор', sPageID)
      //------------------------------------------------------------------------------------------------------

      //------------------------------------------------------------------------------------------------------
      // поле "Код вида операции"
      var sCodeVidOp : string;  sCodeVidOp := '';
      var wCodeVidOp : word  ;  wCodeVidOp := 0;
      RXXCheckNodeCodeVidOp(cStrNode, 'КодВидОпер/Значение', sPageID, sCodeVidOp, wCodeVidOp);
      //------------------------------------------------------------------------------------------------------

      //------------------------------------------------------------------------------------------------------
      // поле "Регистрационный номер таможенной декларации"
      RXXCheckNodeRegNumTD(cStrNode, sPageID);
      //------------------------------------------------------------------------------------------------------

      //------------------------------------------------------------------------------------------------------
      // поле "Код вида товара"
      RXXCheckNode_KodVidTovar(cStrNode, sPageID);
      //------------------------------------------------------------------------------------------------------

      //------------------------------------------------------------------------------------------------------
      // проверка ИНН
      if (wCodeVidOp != 19) and (wCodeVidOp != 20)
      {
        // Сведения о покупателе
        RXXCheckNodeContr(cStrNode, 'СвПокуп', sPageID);
        // Сведения о посреднике (комиссионере, агенте, экспедиторе, застройщике)
        RXXCheckNodeContr(cStrNode, 'СвПос', sPageID);
      }
      //------------------------------------------------------------------------------------------------------

    } // побежали по строкам книги

  }
  while False;
  StopVisual('', 0);
  Result := True;
@end. // CheckFldR09
//#endregion РАЗДЕЛ 09
//************************************************************************************************************

//============================================================================================================
//#region ПРИЛОЖЕНИЕ К РАЗДЕЛУ 09
//------------------------------------------------------------------------------------------------------------
// Проверить поля "ПРИЛОЖЕНИЯ К РАЗДЕЛУ 09"
@Script CheckFldR9D : boolean;
@begin
  Result := False;

  // видимость полей
  ReCalcVisFldR9D(True);

  StartNewVisual(vtNumericVisual, vfTimer+vfBreak+vfConfirm+vfScreenBottom
  , 'Проверка полей: "Раздел 9 Приложение 1"...', 0);
  do
  {
    if (GetIntVal('Файл/ПризнНал91' ) = 0)
    { Break; }

    var sAddr : string;  sAddr := 'Файл/Документ/НДС/КнигаПродДЛ/Файл/Документ/КнигаПродДЛ';
    if (not GetFldVisInTree(sAddr) )
    { Break; }

    sAddr := sAddr + '/КнПродДЛСтр';
    var BStrNpp   : LongInt;
    var BStrCount : LongInt;  BStrCount := XMLMap.GetNodeCountByName(sAddr);
    for (BStrNpp := 0; BStrNpp < BStrCount; BStrNpp++)
    { // побежали по строкам книги
      if (not NextVisual)
      { Break; }

      var sPageID  : string;  sPageID  := pFH.Func('myGetPageIDR9D_0', BStrNpp+1);
      var sStrAddr : string;  sStrAddr := sAddr+GetIter(BStrNpp);
      var cStrNode : comp  ;  cStrNode := XMLMap.GetPositionByName(sStrAddr, True);

      //------------------------------------------------------------------------------------------------------
      // поле "Порядковый номер"
      RXXCheckNodeNpp(cStrNode, 'НомерПор', sPageID)
      //------------------------------------------------------------------------------------------------------

      //------------------------------------------------------------------------------------------------------
      // поле "Код вида операции"
      var sCodeVidOp : string;  sCodeVidOp := '';
      var wCodeVidOp : word  ;  wCodeVidOp := 0;
      RXXCheckNodeCodeVidOp(cStrNode, 'КодВидОпер/Значение', sPageID, sCodeVidOp, wCodeVidOp);
      //------------------------------------------------------------------------------------------------------

      //------------------------------------------------------------------------------------------------------
      // поле "Регистрационный номер таможенной декларации"
      RXXCheckNodeRegNumTD(cStrNode, sPageID);
      //------------------------------------------------------------------------------------------------------

      //------------------------------------------------------------------------------------------------------
      // поле "Код вида товара"
      RXXCheckNode_KodVidTovar(cStrNode, sPageID);
      //------------------------------------------------------------------------------------------------------

      //------------------------------------------------------------------------------------------------------
      // проверка ИНН
      if (wCodeVidOp != 19) and (wCodeVidOp != 20)
      {
        // Сведения о покупателе
        RXXCheckNodeContr(cStrNode, 'СвПокуп', sPageID);
        // Сведения о посреднике (комиссионере, агенте, экспедиторе, застройщике)
        RXXCheckNodeContr(cStrNode, 'СвПос', sPageID);
      }
      //------------------------------------------------------------------------------------------------------

    } // побежали по строкам книги

  }
  while False;
  StopVisual('', 0);
  Result := True;
@end. // CheckFldR9D
//#endregion ПРИЛОЖЕНИЕ К РАЗДЕЛУ 09
//************************************************************************************************************

//============================================================================================================
//#region РАЗДЕЛ 10
//------------------------------------------------------------------------------------------------------------
// Проверить поля "РАЗДЕЛА 10"
@Script CheckFldR10 : boolean;
@begin
  Result := False;

  // видимость полей
  ReCalcVisFldR10(True);

  StartNewVisual(vtNumericVisual, vfTimer+vfBreak+vfConfirm+vfScreenBottom
  , 'Проверка полей: "Раздел 10"...', 0);
  do
  {
    if (GetIntVal('Файл/ПризнНал10' ) = 0)
    { Break; }

    var sAddr : string;  sAddr := 'Файл/Документ/НДС/ЖУчВыстСчФ/Файл/Документ/ЖУчВыстСчФ';
    if (not GetFldVisInTree(sAddr) )
    { Break; }

    sAddr := sAddr + '/ЖУчВыстСчФСтр';
    var JStrNpp   : LongInt;
    var JStrCount : LongInt;  JStrCount := XMLMap.GetNodeCountByName(sAddr);
    for (JStrNpp := 0; JStrNpp < JStrCount; JStrNpp++)
    { // побежали по строкам журнала
      if (not NextVisual)
      { Break; }

      var sPageID  : string;  sPageID  := pFH.Func('myGetPageIDR10_0', JStrNpp+1);
      var sStrAddr : string;  sStrAddr := sAddr+GetIter(JStrNpp);
      var cStrNode : comp  ;  cStrNode := XMLMap.GetPositionByName(sStrAddr, True);

      //------------------------------------------------------------------------------------------------------
      // поле "Порядковый номер"
      RXXCheckNodeNpp(cStrNode, 'НомерПор', sPageID)
      //------------------------------------------------------------------------------------------------------

      //------------------------------------------------------------------------------------------------------
      // поле "Код вида операции"
      var sCodeVidOp : string;  sCodeVidOp := '';
      var wCodeVidOp : word  ;  wCodeVidOp := 0;
      RXXCheckNodeCodeVidOp(cStrNode, 'КодВидОпер/Значение', sPageID, sCodeVidOp, wCodeVidOp);
      //------------------------------------------------------------------------------------------------------

      //------------------------------------------------------------------------------------------------------
      // проверка ИНН
      if (wCodeVidOp != 19) and (wCodeVidOp != 20)
      {
        // Сведения о покупателе
        RXXCheckNodeContr(cStrNode, 'СвПокуп', sPageID);
      }
      //------------------------------------------------------------------------------------------------------

      sStrAddr := sStrAddr + '/СвСчФОтПрод';
      var MedNpp   : LongInt;
      var MedCount : LongInt;  MedCount := XMLMap.GetNodeCountByName(sStrAddr);
      for (MedNpp:= 0; MedNpp < MedCount; MedNpp++)
      { // побежали по сведениям из счетов-фактур, полученных от продавцов

        sPageID := pFH.Func('myGetPageIDR10_1', JStrNpp+1, MedNpp+1);
        var sMedAddr : string;  sMedAddr := sStrAddr+GetIter(MedNpp);
        var cMedNode : comp  ;  cMedNode := XMLMap.GetPositionByName(sMedAddr, True);


        //----------------------------------------------------------------------------------------------------
        // проверка ИНН
        if (wCodeVidOp != 19) and (wCodeVidOp != 20)
        {
          // Сведения о продавце
          RXXCheckNodeContr(cMedNode, 'СвПрод', sPageID);
        }
        //----------------------------------------------------------------------------------------------------

      } // побежали по сведениям из счетов-фактур, полученных от продавцов

    } // побежали по строкам журнала

  }
  while False;
  StopVisual('', 0);
  Result := True;
@end. // CheckFldR10
//#endregion РАЗДЕЛ 10
//************************************************************************************************************

//============================================================================================================
//#region РАЗДЕЛ 11
//------------------------------------------------------------------------------------------------------------
// Проверить поля "РАЗДЕЛА 11"
@Script CheckFldR11 : boolean;
@begin
  Result := False;

  // видимость полей
  ReCalcVisFldR11(True);

  StartNewVisual(vtNumericVisual, vfTimer+vfBreak+vfConfirm+vfScreenBottom
  , 'Проверка полей: "Раздел 11"...', 0);
  do
  {
    if (GetIntVal('Файл/ПризнНал11' ) = 0)
    { Break; }

    var sAddr : string;  sAddr := 'Файл/Документ/НДС/ЖУчПолучСчФ/Файл/Документ/ЖУчПолучСчФ';
    if (not GetFldVisInTree(sAddr) )
    { Break; }

    sAddr := sAddr + '/ЖУчПолучСчФСтр';
    var JStrNpp   : LongInt;
    var JStrCount : LongInt;  JStrCount := XMLMap.GetNodeCountByName(sAddr);
    for (JStrNpp := 0; JStrNpp < JStrCount; JStrNpp++)
    { // побежали по строкам журнала
      if (not NextVisual)
      { Break; }

      var sPageID  : string;  sPageID  := pFH.Func('myGetPageIDR11_0', JStrNpp+1);
      var sStrAddr : string;  sStrAddr := sAddr+GetIter(JStrNpp);
      var cStrNode : comp  ;  cStrNode := XMLMap.GetPositionByName(sStrAddr, True);

      //------------------------------------------------------------------------------------------------------
      // поле "Порядковый номер"
      RXXCheckNodeNpp(cStrNode, 'НомерПор', sPageID)
      //------------------------------------------------------------------------------------------------------

      //------------------------------------------------------------------------------------------------------
      // поле "Код вида операции"
      var sCodeVidOp : string;  sCodeVidOp := '';
      var wCodeVidOp : word  ;  wCodeVidOp := 0;
      RXXCheckNodeCodeVidOp(cStrNode, 'КодВидОпер/Значение', sPageID, sCodeVidOp, wCodeVidOp);
      //------------------------------------------------------------------------------------------------------

      //------------------------------------------------------------------------------------------------------
      // проверка ИНН
      if (wCodeVidOp != 19) and (wCodeVidOp != 20)
      {
        // Сведения о продавце
        RXXCheckNodeContr(cStrNode, 'СвПрод', sPageID);
      }
      //------------------------------------------------------------------------------------------------------

      sPageID := pFH.Func('myGetPageIDR11_1', JStrNpp+1);

      //------------------------------------------------------------------------------------------------------
      // проверка ИНН
      if (wCodeVidOp != 19) and (wCodeVidOp != 20)
      {
        // Сведения о субкомиссинере (субагенте)
        RXXCheckNodeContr(cStrNode, 'СвКомис', sPageID);
      }
      //------------------------------------------------------------------------------------------------------

    } // побежали по строкам журнала

  }
  while False;
  StopVisual('', 0);
  Result := True;
@end. // CheckFldR11
//#endregion РАЗДЕЛ 11
//************************************************************************************************************

//============================================================================================================
//#region РАЗДЕЛ 12
//------------------------------------------------------------------------------------------------------------
// Проверить поля "РАЗДЕЛА 12"
@Script CheckFldR12 : boolean;
@begin
  Result := False;

  // видимость полей
  ReCalcVisFldR11(True);

  StartNewVisual(vtNumericVisual, vfTimer+vfBreak+vfConfirm+vfScreenBottom
  , 'Проверка полей: "Раздел 12"...', 0);
  do
  {
    if (GetIntVal('Файл/ПризнНал12' ) = 0)
    { Break; }

    var sAddr : string;  sAddr := 'Файл/Документ/НДС/ВыстСчФ_173.5/Файл/Документ';
    if (not GetFldVisInTree(sAddr) )
    { Break; }

    sAddr := sAddr + '/ВыстСчФ_173.5';
    var SFStrNpp   : LongInt;
    var SFStrCount : LongInt;  SFStrCount := XMLMap.GetNodeCountByName(sAddr);
    for (SFStrNpp := 0; SFStrNpp < SFStrCount; SFStrNpp++)
    { // побежали по строкам счетов-фактур
      if (not NextVisual)
      { Break; }

      var sPageID  : string;  sPageID  := pFH.Func('myGetPageIDR12_0', SFStrNpp+1);
      var sStrAddr : string;  sStrAddr := sAddr+GetIter(SFStrNpp);
      var cStrNode : comp  ;  cStrNode := XMLMap.GetPositionByName(sStrAddr, True);

      // Сведения о покупателе
      RXXCheckNodeContr(cStrNode, 'СвПокуп', sPageID);
    } // побежали по строкам счетов-фактур

  }
  while False;
  StopVisual('', 0);
  Result := True;
@end. // CheckFldR12
//#endregion РАЗДЕЛ 12
//************************************************************************************************************

//#endregion ПРОВЕРКА ДОП РАЗДЕЛОВ
//************************************************************************************************************

//============================================================================================================
//#region ПРОВЕРКА ОСНОВНЫХ РАЗДЕЛОВ
//------------------------------------------------------------------------------------------------------------
// Проверить поля основных разделов
@Script CheckFldRBR : boolean;
  //==========================================================================================================
  //#region СЕРВИС
  //----------------------------------------------------------------------------------------------------------
  #include AllTaxObj.Vih

  function IsValidPeriod(strIn: string; var strGetMes: string) : boolean;
  begin
    //Налоговый период
    //Период
    strGetMes := 'Возможные значения: 01, 02, 03, 04, 05, 06, 07, 08, 09, 10, 11, 12, 21, 22, 23, 24, 51, 54, 55, 56, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82';

    Result := False;
    Result :=
    (
         (strIn = '01') or (strIn = '02') or (strIn = '03') or (strIn = '04') or (strIn = '05') or (strIn = '06') or (strIn = '07') or (strIn = '08')
      or (strIn = '09') or (strIn = '10') or (strIn = '11') or (strIn = '12') or (strIn = '21') or (strIn = '22') or (strIn = '23') or (strIn = '24')
      or (strIn = '51') or (strIn = '54') or (strIn = '55') or (strIn = '56') or (strIn = '71') or (strIn = '72') or (strIn = '73') or (strIn = '74')
      or (strIn = '75') or (strIn = '76') or (strIn = '77') or (strIn = '78') or (strIn = '79') or (strIn = '80') or (strIn = '81') or (strIn = '82')
    );

    if    Result
      and (    (strIn = '01') or (strIn = '02') or (strIn = '03') or (strIn = '04')
            or (strIn = '05') or (strIn = '06') or (strIn = '07') or (strIn = '08')
            or (strIn = '09') or (strIn = '10') or (strIn = '11') or (strIn = '12') )
    {
      strGetMes := 'Значения от 01 до 12 поле "Налоговый период" может принимать только при значении поля "По месту" = 250';

      Result := (GetStrVal('Файл/Документ/ПоМесту') = '250');
    }
  end;

  function IsValidPeriod_2(strIn: string; var strGetMes: string) : boolean;
  begin
    //Налоговый период
    //Период
    strGetMes := 'Возможные значения: 01, 02, 03, 04, 05, 06, 07, 08, 09, 10, 11, 12, 21, 22, 23, 24';

    Result := False;
    Result :=
    (
         (strIn = '01') or (strIn = '02') or (strIn = '03') or (strIn = '04') or (strIn = '05') or (strIn = '06')
      or (strIn = '07') or (strIn = '08') or (strIn = '09') or (strIn = '10') or (strIn = '11') or (strIn = '12')
      or (strIn = '21') or (strIn = '22') or (strIn = '23') or (strIn = '24')
    );
  end;

  function IsValidPoMestu(strIn: string; var strGetMes: string) : boolean;
  begin
    //Код места, по которому представляется документ
    //ПоМесту
    strGetMes := 'Возможные значения: 116, 213, 214, 215, 216, 227, 231, 250, 331';

    Result := False;
    Result :=
    (
         (strIn = '116') or (strIn = '213') or (strIn = '214') or (strIn = '215') or (strIn = '216') or (strIn = '227') or (strIn = '231')
      or (strIn = '250') or (strIn = '331')
    );
  end;

  function IsValidPoMestu_KPP(strIn, strKPP: string; var strGetMes: string) : boolean;
  begin
    //Код места, по которому представляется документ
    //ПоМесту
    strGetMes := 'Значение может зависеть от 5 и 6 знакомест <КПП>: код 213 только при 50, код 227 только при 4T или 5G, код 250 только при 36';

    strKPP := SubStr(strKPP, 5, 2);

    Result := False;
    Result :=
    (
         not
         ((strIn = '213') or (strIn = '227') or (strIn = '250'))
    )
    or
    (
         ((strIn = '213') and (strKPP = '50'))
      or ((strIn = '227') and (strKPP = '4T')) or ((strIn = '227') and (strKPP = '5G'))
      or ((strIn = '250') and (strKPP = '36'))
    );
  end;

  function IsValidKodOper(strIn: string; var strGetMes: string) : boolean;
  begin
    //Код операции
    //КодОпер
    strGetMes := 'Формат поля: 7 цифр (см. Приложение 1 к инструкции по заполнению)';

    Result := False;
    Result := (Length(strIn) = 7);
  end;

  function IsValidKodOper_R2(strIn: string; var strGetMes: string) : boolean;
  begin
    //Код операции
    //КодОпер
    strGetMes := 'Возможные значения: 1011703, 1011705, 1011707, 1011709, 1011711, 1011712, 1011714 и 1011715 ';

    Result := False;

    Result :=
    (
         (strIn = '1011703') or (strIn = '1011705') or (strIn = '1011707') or (strIn = '1011709')
      or (strIn = '1011711') or (strIn = '1011712') or (strIn = '1011714') or (strIn = '1011715')
    );
  end;

  function IsValidKodOper_R4(strIn: string; var strGetMes: string) : boolean;
  begin
    //Код операции
    //КодОпер
    strGetMes := 'Возможные значения: 1010401, 1010402, 1010403, 1010404, 1010405, 1010407, 1010408, 1010409, 1010411, 1010412, 1010413, 1010414, 1010415, 1010416, 1010417, 1010418, 1010419';

    Result := False;

    Result :=
    (
         (strIn = '1010401') or (strIn = '1010402') or (strIn = '1010403') or (strIn = '1010404')
      or (strIn = '1010405') or (strIn = '1010407') or (strIn = '1010408') or (strIn = '1010409')
      or (strIn = '1010411') or (strIn = '1010412') or (strIn = '1010413') or (strIn = '1010414')
      or (strIn = '1010415') or (strIn = '1010416') or (strIn = '1010417') or (strIn = '1010418')
      or (strIn = '1010419')
    );
  end;

  function IsValidObStr(strIn: string; var strGetMes: string) : boolean;
  begin
    //Строка обязательна к заполнению
    strGetMes := 'При текущих данных строка должна быть заполнена';

    Result := False;
    Result := (Length(strIn) > 0);
  end;

  function IsValidOtsStr(strIn: string; var strGetMes: string) : boolean;
  begin
    //Строка обязательна к заполнению
    strGetMes := 'При текущих данных строка не должна быть заполнена';

    Result := False;
    Result := (Length(strIn) = 0);
  end;

  function IsValidINNUL12(strIn: string; var strGetMes: string) : boolean;
  begin
    //Идентификационный номер налогоплательщика - юридического лица
    //ИННЮЛТип
    strGetMes := 'Формат поля: 12 цифр';

    Result := False;
    Result := CheckError.isRegExpr('^([0-9]{1}[1-9]{1}|[1-9]{1}[0-9]{1})[0-9]{10}$', strIn);
  end;


  function _it(_i, _j: integer) : integer;
  begin
    Result := if(_i = 0, -1, 1);
  end;

  #declare _InsMes(_AdrXML, _Pole, _StrMes)
    MessageErrorStop_ALG
    (
      #_AdrXML,
      NameStr,
      #_Pole,
      #_StrMes
    );
  #end

  #declare _InsMesG(_AdrXML, _Pole, _StrMes)
    MessageErrorStop_ALG
    (
      #_AdrXML,
      NameStr,
      #_Pole,
      getMes
    );
  #end

  #declare _NoKor(_AdrXML, _Pole)
    MessageErrorStop_ALG
    (
      #_AdrXML,
      NameStr,
      #_Pole,
      getMes
    );
  #end

  #declare _NoKorVal(_AdrXML, _Pole, _Value)
    if not (GetStrVal(#_AdrXML) = #_Value)
      MessageErrorStop_ALG
      (
        #_AdrXML,
        NameStr,
        #_Pole,
        'Поле не соответствует формату. Возможное значение: ' + #_Value
      );
  #end

  #declare _IsValidNoKor(_Valid, _AdrXML, _Pole)
    if not #_Valid(GetStrVal(#_AdrXML), getMes)
      MessageErrorStop_ALG
      (
        #_AdrXML,
        NameStr,
        #_Pole,
        getMes
      );
  #end

  #declare _IsValidNoKorVis(_Valid, _AdrXML, _Pole)
    if GetFldVisInTree(#_AdrXML)
      if not #_Valid(GetStrVal(#_AdrXML), getMes)
        MessageErrorStop_ALG
        (
          #_AdrXML,
          NameStr,
          #_Pole,
          getMes
        );
  #end

  #declare _IsValidNoKorVis_NotVis(_Valid, _AdrXML, _Pole, _flIter = 0)
    if GetFldVisInTree(#_AdrXML)
    {
      if not #_Valid(GetStrVal(#_AdrXML), getMes)
        MessageErrorStop_ALG
        (
          #_AdrXML,
          NameStr,
          #_Pole,
          getMes,
          #_flIter
        );
    }
    else
    {
      if not IsValidOtsStr(GetStrVal(#_AdrXML), getMes)
        MessageErrorStop_ALG
        (
          #_AdrXML,
          NameStr,
          #_Pole,
          'Не заполняется: ' + getMes,
          #_flIter
        );
    }
  #end

  #declare _IsValidNoValVis(_AdrXML, _Pole, _Value)
    if GetFldVisInTree(#_AdrXML)
    {
      if not (GetStrVal(#_AdrXML) = #_Value)
        MessageErrorStop_ALG
        (
          #_AdrXML,
          NameStr,
          #_Pole,
          'Поле не соответствует формату. Возможное значение: ' + #_Value
        );
    }
  #end

  #declare _IsValidNoKorDecimalVis(_StrMes, _AdrXML, _Pole, _Cel, _Drob, _flMin)
    if GetFldVisInTree(#_AdrXML)
      if not IsValidDecimal(GetStrVal(#_AdrXML), #_Cel, #_Drob, getMes, #_flMin)
        MessageErrorStop_ALG
        (
          #_AdrXML,
          NameStr,
          #_Pole,
          'Поле не соответствует формату. Формат поля '+  #_StrMes + ' ' + getMes
        );
  #end

  #declare _IsValidNoKorDecimalVis_NotVis(_StrMes, _AdrXML, _Pole, _Cel, _Drob, _flMin, _flIter = 0)
    if GetFldVisInTree(#_AdrXML)
    {
      if not IsValidDecimal(GetStrVal(#_AdrXML), #_Cel, #_Drob, getMes, #_flMin)
        MessageErrorStop_ALG
        (
          #_AdrXML,
          NameStr,
          #_Pole,
          'Поле не соответствует формату. Формат поля '+  #_StrMes + getMes  ,
          #_flIter
        );
    }
    else
    {
      if not IsValidOtsStr(GetStrVal(#_AdrXML), getMes)
        MessageErrorStop_ALG
        (
          #_AdrXML,
          NameStr,
          #_Pole,
          'Не заполняется: ' + getMes,
          #_flIter
        );
    }
  #end

  #declare _IsValidNoKorStringVis_NotVis(_AdrXML, _Pole, _Min, _Max)
    if GetFldVisInTree(#_AdrXML)
    {
      if not IsValidLenStr(GetStrVal(#_AdrXML), #_Min, #_Max, getMes)
        MessageErrorStop_ALG
        (
          #_AdrXML,
          NameStr,
          #_Pole,
          getMes
        );
    }
    else
    {
      if not IsValidOtsStr(GetStrVal(#_AdrXML), getMes)
        MessageErrorStop_ALG
        (
          #_AdrXML,
          NameStr,
          #_Pole,
          'Не заполняется: ' + getMes
        );
    }
  #end

  #declare _IsValidNoKorNotVis(_AdrXML, _Pole)
    if not GetFldVisInTree(#_AdrXML)
      if not IsValidOtsStr(GetStrVal(#_AdrXML), getMes)
        MessageErrorStop_ALG
        (
          #_AdrXML,
          NameStr,
          #_Pole,
          'Не заполняется: ' + getMes
        );
  #end

  #declare IfNullOb(_AdrXML, _Pole)
    if GetStrVal(#_AdrXML) = ''
      MessageErrorStop_ALG
      (
        #_AdrXML,
        NameStr,
        #_Pole,
        'Поле обязательно для заполнения'
      );
  #end

  #declare _IfNullOb(_AdrXML, _Pole)
    if GetStrVal(#_AdrXML) <> ''
      MessageErrorStop_ALG
      (
        #_AdrXML,
        NameStr,
        #_Pole,
        'При текущих данных поля должны быть не заполнены. Очистите поля или измените данные'
      );
  #end

  #declare _NoTek(_AdrXML, _Pole)
    if GetStrVal(#_AdrXML) <> ''
      MessageErrorStop_ALG
      (
        #_AdrXML,
        NameStr,
        #_Pole,
        'При текущих данных поля должны быть не заполнены. Очистите поля или измените данные'
      );
  #end

  #declare _InsMes_It(_AdrXML, _Pole, _StrMes, _Iter)
    MessageErrorStop_ALG
    (
      #_AdrXML,
      NameStr,
      #_Pole,
      #_StrMes,
      #_Iter
    );
  #end

  #declare _NoKor_It(_AdrXML, _Pole, _Iter)
    MessageErrorStop_ALG
    (
      #_AdrXML,
      NameStr,
      #_Pole,
      getMes,
      #_Iter
    );
  #end

  #declare IfNullOb_It(_AdrXML, _Pole, _Iter)
    if GetStrVal(#_AdrXML) = ''
      MessageErrorStop_ALG
      (
        #_AdrXML,
        NameStr,
        #_Pole,
        'Поле обязательно для заполнения',
        #_Iter
      );
  #end

  #declare _NoTek_It(_AdrXML, _Pole, _Iter)
    if GetStrVal(#_AdrXML) <> ''
      MessageErrorStop_ALG
      (
        #_AdrXML,
        NameStr,
        #_Pole,
        'При текущих данных поля должны быть не заполнены. Очистите поля или измените данные',
        #_Iter
      );
  #end
  //#endregion СЕРВИС
  //**********************************************************************************************************
@begin
  Result := False;

  // видимость полей в основных разделах
  ReCalcVisFldRBR;

  //----------------------------------------------------------------------------------------------------------
  var NameStr : string;  NameStr := '';
  var getMes  : string;  getMes  := '';
  //----------------------------------------------------------------------------------------------------------

  StartNewVisual(vtRotateVisual, vfTimer+vfBreak+vfConfirm+vfScreenBottom
  , 'Проверка полей: "Основные разделы"...', 0);
  do
  {
    //--------------------------------------------------------------------------------------------------------
    var SumUplNA_count, SumVosUpl_count, i, j: comp;
    var fl: boolean;  fl := False;

    SumUplNA_count     := XMLMap.GetNodeCountByName('Файл/Документ/НДС/СумУплНА/'           );
    SumVosUpl_count    := XMLMap.GetNodeCountByName('Файл/Документ/НДС/СумУпл164/СумВосУпл/');

    //--------------------------------------------------------------------------------------------------------
    //#region ТИТУЛЬНЫЙ ЛИСТ
    {
      NameStr := 'Структура';

      if not IsValidKND(GetStrVal('Файл/Документ/КНД'), '1151001', getMes)
        #_NoKor('Файл/Документ/КНД', 'Код налоговой декларации');

      NameStr := pFH.Func('myGetPageIDTitle');

      #_IsValidNoKor   (IsValidDate   , 'Файл/Документ/ДатаДок'               , 'Дата документа'          );
      #_IsValidNoKor   (IsValidOtchGod, 'Файл/Документ/ОтчетГод'              , 'Отчетный год'            );
      #_IsValidNoKor   (IsValidSONO   , 'Файл/Документ/КодНО'                 , 'Код налогового органа'   );
      #_IsValidNoKor   (IsValidNomKorr, 'Файл/Документ/НомКорр'               , 'Номер корректировки'     );
      #_IsValidNoKorVis(IsValidTlf    , 'Файл/Документ/СвНП/Тлф'              , 'Контактный телефон'      );
      #_IsValidNoKor   (IsValidOKVED  , 'Файл/Документ/СвНП/ОКВЭД'            , 'ОКВЭД'                   );
      #_IsValidNoKor   (IsValidNaimOrg, 'Файл/Документ/СвНП/НПЮЛ/НаимОрг'     , 'Наименование организации');
      #_IsValidNoKor   (IsValidPrPodp , 'Файл/Документ/Подписант/ПрПодп'      , 'Признак подписанта'      );
      #_IsValidNoKor   (IsValidFIO    , 'Файл/Документ/Подписант/ФИО/Фамилия' , 'Фамилия'                 );
      #_IsValidNoKor   (IsValidFIO    , 'Файл/Документ/Подписант/ФИО/Имя'     , 'Имя'                     );
      #_IsValidNoKorVis(IsValidFIO    , 'Файл/Документ/Подписант/ФИО/Отчество', 'Отчество'                );

      if (GetIntVal('Файл/Документ/СвНП/TaxPayerType') = 0)
      { // юридическое лицо
        #_IsValidNoKor   (IsValidINNUL       , 'Файл/Документ/СвНП/НПЮЛ/ИННЮЛ'       , 'ИНН'     );
        #_IsValidNoKor   (CheckError.Prov_INN, 'Файл/Документ/СвНП/НПЮЛ/ИННЮЛ'       , 'ИНН'     );
        #_IsValidNoKor   (IsValidKPP         , 'Файл/Документ/СвНП/НПЮЛ/КПП'         , 'КПП'     );
      }
      else
      { // физическое лицо, ИП
        #_IsValidNoKor   (IsValidINNUL12     , 'Файл/Документ/СвНП/НПФЛ/ИННФЛ'       , 'ИНН'     );
        #_IsValidNoKor   (CheckError.Prov_INN, 'Файл/Документ/СвНП/НПФЛ/ИННФЛ'       , 'ИНН'     );
        #_IsValidNoKor   (IsValidFIO         , 'Файл/Документ/СвНП/НПФЛ/ФИО/Фамилия' , 'Фамилия' );
        #_IsValidNoKor   (IsValidFIO         , 'Файл/Документ/СвНП/НПФЛ/ФИО/Имя'     , 'Имя'     );
        #_IsValidNoKorVis(IsValidFIO         , 'Файл/Документ/СвНП/НПФЛ/ФИО/Отчество', 'Отчество');
      }

      if GetFldVisInTree('Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ')
      {
        #_IsValidNoKor   (IsValidFormReorg, 'Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ/ФормРеорг', 'Форма реоргазации');
        #_IsValidNoKorVis(IsValidINNUL    , 'Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ/ИННЮЛ'    , 'ИНН'              );   #_IsValidNoKorVis(CheckError.Prov_INN, 'Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ/ИННЮЛ', 'ИНН');
        #_IsValidNoKorVis(IsValidKPP      , 'Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ/КПП'      , 'КПП'              );
      }

      if GetFldVisInTree('Файл/Документ/Подписант/СвПред')
      {
        #_IsValidNoKor   (IsValidNaimDok, 'Файл/Документ/Подписант/СвПред/НаимДок', 'Наименование документа');
        #_IsValidNoKorVis(IsValidNaimOrg, 'Файл/Документ/Подписант/СвПред/НаимОрг', 'Наименование организации');
      }

      if (GetStrVal('Файл/Документ/Период') <> myGetDefPeriodCodeValue)
        MessageErrorStop_ALG
        (
          'Файл/Документ/Период',
          NameStr,
          'Налоговый период',
          'При текущих границах периода расчета декларации поле должно иметь значение "'+String(myGetDefPeriodCodeValue)+'"'
        );

      if not IsValidPeriod(GetStrVal('Файл/Документ/Период'), getMes)
      then {#_NoKor('Файл/Документ/Период', 'Налоговый период');}

      { // проверка поля "Код места, по которому представляется документ"
        var sAddr : string;  sAddr := 'Файл/Документ/ПоМесту';
        var sValue: string;  sValue:= GetStrVal(sAddr);
        var sFldID: string;  sFldID:= 'По месту';
        if (not IsValidPoMestu(sValue, getMes) )
        {
          #_NoKor(sAddr, sFldID);
        }
        else
        {
          if not IsValidPoMestu_KPP(sValue, GetStrVal('Файл/Документ/СвНП/НПЮЛ/КПП'), getMes)
            #_NoKor(sAddr, sFldID);
        }
        if (sValue = '231')
        { // если "По месту"=231
          // проверим наличие "Раздел 2"
          if (not GetFldVisInTree('Файл/Документ/НДС/СумУплНА') )
          { // если не заполнен "Раздел 2"
            var sMess : string;  sMess := FormatStr_2('"Раздел 2" должен быть заполнен при "%S"=%S', sFldID, sValue);
            MesError.InsertMesError(
              sAddr      // адрес поля в XML
            , 0          // приоритет страницы
            , NameStr    // идентификатор страницы
            , sFldID     // идентификатор поля
            , sMess      // сообщение
            );
          } // если не заполнен "Раздел 2"
        } // если "По месту"=231
      } // проверка поля "Код места, по которому представляется документ"

      if (GetIntVal('Файл/Документ/НомКорр') = 0)
      {
        if (GetIntVal('Файл/ПризнНал81') <> 0) MessageErrorStop_ALG('Файл/Документ/НомКорр', NameStr, 'Номер корректировки', 'Раздел 8.1 не заполняется если поле "Номер корректировки" равен 0 (нулю)');
        if (GetIntVal('Файл/ПризнНал91') <> 0) MessageErrorStop_ALG('Файл/Документ/НомКорр', NameStr, 'Номер корректировки', 'Раздел 9.1 не заполняется если поле "Номер корректировки" равен 0 (нулю)');
      }
    }
    //#endregion ТИТУЛЬНЫЙ ЛИСТ
    //--------------------------------------------------------------------------------------------------------

    //--------------------------------------------------------------------------------------------------------
    //#region РАЗДЕЛ 1
    {
      NameStr := pFH.Func('myGetPageIDR01_0');

      #_IsValidNoKorVis       (IsValidOKTMO, 'Файл/Документ/НДС/СумУплНП/ОКТМО'       , 'Стр. 010'    );
      #_IsValidNoKorVis       (IsValidKBK  , 'Файл/Документ/НДС/СумУплНП/КБК'         , 'Стр. 020'    );
      #_IsValidNoKorVis_NotVis(IsValidObStr, 'Файл/Документ/НДС/СумУплНП/СумПУ_173.5' , 'Стр. 030'    );
      #_IsValidNoKorVis_NotVis(IsValidObStr, 'Файл/Документ/НДС/СумУплНП/СумПУ_173.1' , 'Стр. 040/050');
      #_IsValidNoKorVis_NotVis(IsValidObStr, 'Файл/Документ/НДС/СумУплНП/НомДогИТ'    , 'Стр. 060'    );
      #_IsValidNoKorVis_NotVis(IsValidDate , 'Файл/Документ/НДС/СумУплНП/ДатаНачДогИТ', 'Стр. 070'    );
      #_IsValidNoKorVis_NotVis(IsValidDate , 'Файл/Документ/НДС/СумУплНП/ДатаКонДогИТ', 'Стр. 080'    );

      if ((GetIntVal('Файл/ПризнНал12') = 0) and (GetDblVal('Файл/Документ/НДС/СумУплНП/СумПУ_173.5') <> 0))
        MessageErrorStop_ALG('Файл/Документ/НДС/СумУплНП/СумПУ_173.5'
                           , NameStr
                           , 'Раздел 12'
                           , 'Значение элемента ПризнНал12 должно быть не равно 0 при значении стр. 030 не равном 0');

      if ((GetIntVal('Файл/ПризнНал12') = 1) and (GetDblVal('Файл/Документ/НДС/СумУплНП/СумПУ_173.5') = 0))
        MessageErrorStop_ALG('Файл/Документ/НДС/СумУплНП/СумПУ_173.5'
                           , NameStr
                           , 'Раздел 12'
                           , 'Значение элемента ПризнНал12 не должно равняться 1 при значении стр. 030 равном 0');
    }
    //#endregion РАЗДЕЛ 1
    //--------------------------------------------------------------------------------------------------------

    //--------------------------------------------------------------------------------------------------------
    //#region РАЗДЕЛ 2
    {
      fl := False;

      for (i := 0; i < SumUplNA_count; i++)
      {
        NameStr := pFH.Func('myGetPageIDR02_0', i+1);

        if GetFldVisInTree('Файл/Документ/НДС/СумУплНА'+GetIter(i))
        {
          fl := True;

          #_IsValidNoKorVis_NotVis       (IsValidKPP         , 'Файл/Документ/НДС/СумУплНА'+GetIter(i)+'/КППИно'                     , 'Стр. 010'                   );
          #_IsValidNoKorVis_NotVis       (IsValidNaimOrg     , 'Файл/Документ/НДС/СумУплНА'+GetIter(i)+'/СведПродЮЛ/НаимПрод'        , 'Стр. 020'                   );
          #_IsValidNoKorVis              (CheckError.Prov_INN, 'Файл/Документ/НДС/СумУплНА'+GetIter(i)+'/СведПродЮЛ/ИННЮЛПрод'       , 'Стр. 030'                   );
          #_IsValidNoKorVis_NotVis       (IsValidINNUL       , 'Файл/Документ/НДС/СумУплНА'+GetIter(i)+'/СведПродЮЛ/ИННЮЛПрод'       , 'Стр. 030'                   );
          #_IsValidNoKorVis              (IsValidKBK         , 'Файл/Документ/НДС/СумУплНА'+GetIter(i)+'/КБК'                        , 'Стр. 040'                   );
          #_IsValidNoKorVis              (IsValidOKTMO       , 'Файл/Документ/НДС/СумУплНА'+GetIter(i)+'/ОКТМО'                      , 'Стр. 050'                   );
          #_IsValidNoKorDecimalVis       ('XXXXXXXXXXXXXX'   , 'Файл/Документ/НДС/СумУплНА'+GetIter(i)+'/СумИсчисл'                  , 'Стр. 060'     , 14, 0, False);
          #_IsValidNoKorVis              (IsValidKodOper_R2  , 'Файл/Документ/НДС/СумУплНА'+GetIter(i)+'/КодОпер'                    , 'Стр. 070'                   );
          #_IsValidNoKorDecimalVis_NotVis('XXXXXXXXXXXXXX'   , 'Файл/Документ/НДС/СумУплНА'+GetIter(i)+'/СумИсчислОтгр'              , 'Стр. 080'     , 14, 0, False);
          #_IsValidNoKorDecimalVis_NotVis('XXXXXXXXXXXXXX'   , 'Файл/Документ/НДС/СумУплНА'+GetIter(i)+'/СумИсчислОпл'               , 'Стр. 090'     , 14, 0, False);
          #_IsValidNoKorDecimalVis_NotVis('XXXXXXXXXXXXXX'   , 'Файл/Документ/НДС/СумУплНА'+GetIter(i)+'/СумИсчислНА'                , 'Стр. 100'     , 14, 0, False);
          #_IsValidNoKorVis_NotVis       (CheckError.Prov_INN, 'Файл/Документ/НДС/СумУплНА'+GetIter(i)+'/СведПродФЛ/ИННФЛПрод'       , 'ФЛ: ИНН прод.'              );
          #_IsValidNoKorVis_NotVis       (IsValidINNFL       , 'Файл/Документ/НДС/СумУплНА'+GetIter(i)+'/СведПродФЛ/ИННФЛПрод'       , 'ФЛ: ИНН прод.'              );
          #_IsValidNoKorVis_NotVis       (IsValidFIO         , 'Файл/Документ/НДС/СумУплНА'+GetIter(i)+'/СведПродФЛ/ФИОПрод/Фамилия' , 'ФЛ: Фамилия'                );
          #_IsValidNoKorVis_NotVis       (IsValidFIO         , 'Файл/Документ/НДС/СумУплНА'+GetIter(i)+'/СведПродФЛ/ФИОПрод/Имя'     , 'ФЛ: Имя'                    );
          #_IsValidNoKorVis_NotVis       (IsValidFIO         , 'Файл/Документ/НДС/СумУплНА'+GetIter(i)+'/СведПродФЛ/ФИОПрод/Отчество', 'ФЛ: Отчество'               );
        }
      }
    }
    //#endregion РАЗДЕЛ 2
    //--------------------------------------------------------------------------------------------------------

    //--------------------------------------------------------------------------------------------------------
    //#region РАЗДЕЛ 3
    //--------------------------------------------------------------------------------------------------------
    do
    {
      //------------------------------------------------------------------------------------------------------
      //#region РАЗДЕЛ 3 ОСНОВНОЙ
      //------------------------------------------------------------------------------------------------------
      {
        NameStr := pFH.Func('myGetPageIDR03_0');
        fl := True;

        #_IsValidNoKorDecimalVis_NotVis('XXXXXXXXXXXXXX', 'Файл/Документ/НДС/СумУпл164/СумНалОб/РеалТов20/НалБаза'        , 'Стр. 010, гр. 3', 14, 0, False);
        #_IsValidNoKorDecimalVis_NotVis('XXXXXXXXXXXXXX', 'Файл/Документ/НДС/СумУпл164/СумНалОб/РеалТов20/СумНал'         , 'Стр. 010, гр. 5', 14, 0, False);
        #_IsValidNoKorDecimalVis_NotVis('XXXXXXXXXXXXXX', 'Файл/Документ/НДС/СумУпл164/СумНалОб/РеалТов10/НалБаза'        , 'Стр. 020, гр. 3', 14, 0, False);
        #_IsValidNoKorDecimalVis_NotVis('XXXXXXXXXXXXXX', 'Файл/Документ/НДС/СумУпл164/СумНалОб/РеалТов10/СумНал'         , 'Стр. 020, гр. 5', 14, 0, False);
        #_IsValidNoKorDecimalVis_NotVis('XXXXXXXXXXXXXX', 'Файл/Документ/НДС/СумУпл164/СумНалОб/РеалТов120/НалБаза'       , 'Стр. 030, гр. 3', 14, 0, False);
        #_IsValidNoKorDecimalVis_NotVis('XXXXXXXXXXXXXX', 'Файл/Документ/НДС/СумУпл164/СумНалОб/РеалТов120/НалБаза'       , 'Стр. 030, гр. 3', 14, 0, False);
        #_IsValidNoKorDecimalVis_NotVis('XXXXXXXXXXXXXX', 'Файл/Документ/НДС/СумУпл164/СумНалОб/РеалТов110/СумНал'        , 'Стр. 040, гр. 5', 14, 0, False);
        #_IsValidNoKorDecimalVis_NotVis('XXXXXXXXXXXXXX', 'Файл/Документ/НДС/СумУпл164/СумНалОб/РеалТов110/СумНал'        , 'Стр. 040, гр. 5', 14, 0, False);
        #_IsValidNoKorDecimalVis_NotVis('XXXXXXXXXXXXXX', 'Файл/Документ/НДС/СумУпл164/СумНалОб/РеалТов18/НалБаза'        , 'Стр. 041, гр. 3', 14, 0, False);
        #_IsValidNoKorDecimalVis_NotVis('XXXXXXXXXXXXXX', 'Файл/Документ/НДС/СумУпл164/СумНалОб/РеалТов18/СумНал'         , 'Стр. 041, гр. 5', 14, 0, False);
        #_IsValidNoKorDecimalVis_NotVis('XXXXXXXXXXXXXX', 'Файл/Документ/НДС/СумУпл164/СумНалОб/РеалТов118/НалБаза'       , 'Стр. 042, гр. 3', 14, 0, False);
        #_IsValidNoKorDecimalVis_NotVis('XXXXXXXXXXXXXX', 'Файл/Документ/НДС/СумУпл164/СумНалОб/РеалТов118/СумНал'        , 'Стр. 042, гр. 5', 14, 0, False);
        #_IsValidNoKorDecimalVis_NotVis('XXXXXXXXXXXXXX', 'Файл/Документ/НДС/СумУпл164/СумНалОб/РеалТов7.164/НалБаза'     , 'Стр. 043, гр. 3', 14, 0, False);
        #_IsValidNoKorDecimalVis_NotVis('XXXXXXXXXXXXXX', 'Файл/Документ/НДС/СумУпл164/СумНалОб/РеалТов7.164/СумНал'      , 'Стр. 043, гр. 5', 14, 0, False);
        #_IsValidNoKorDecimalVis_NotVis('XXXXXXXXXXXXXX', 'Файл/Документ/НДС/СумУпл164/СумНалОб/РеалТовРознЧек/НалБаза'   , 'Стр. 044, гр. 3', 14, 0, False);
        #_IsValidNoKorDecimalVis_NotVis('XXXXXXXXXXXXXX', 'Файл/Документ/НДС/СумУпл164/СумНалОб/РеалТовРознЧек/СумНал'    , 'Стр. 044, гр. 5', 14, 0, False);
        #_IsValidNoKorDecimalVis_NotVis('XXXXXXXXXXXXXX', 'Файл/Документ/НДС/СумУпл164/СумНалОб/РеалСрок151.1_20/НалБаза' , 'Стр. 045, гр. 3', 14, 0, False);
        #_IsValidNoKorDecimalVis_NotVis('XXXXXXXXXXXXXX', 'Файл/Документ/НДС/СумУпл164/СумНалОб/РеалСрок151.1_20/СумНал'  , 'Стр. 045, гр. 5', 14, 0, False);
        #_IsValidNoKorDecimalVis_NotVis('XXXXXXXXXXXXXX', 'Файл/Документ/НДС/СумУпл164/СумНалОб/РеалСрок151.1_10/НалБаза' , 'Стр. 046, гр. 3', 14, 0, False);
        #_IsValidNoKorDecimalVis_NotVis('XXXXXXXXXXXXXX', 'Файл/Документ/НДС/СумУпл164/СумНалОб/РеалСрок151.1_10/СумНал'  , 'Стр. 046, гр. 5', 14, 0, False);

        #_IsValidNoKorDecimalVis_NotVis('XXXXXXXXXXXXXX', 'Файл/Документ/НДС/СумУпл164/СумНалОб/РеалПредИК/НалБаза'       , 'Стр. 050, гр. 3', 14, 0, False);
        #_IsValidNoKorDecimalVis_NotVis('XXXXXXXXXXXXXX', 'Файл/Документ/НДС/СумУпл164/СумНалОб/РеалПредИК/СумНал'        , 'Стр. 050, гр. 5', 14, 0, False);
        #_IsValidNoKorDecimalVis_NotVis('XXXXXXXXXXXXXX', 'Файл/Документ/НДС/СумУпл164/СумНалОб/ВыпСМРСоб/НалБаза'        , 'Стр. 060, гр. 3', 14, 0, False);
        #_IsValidNoKorDecimalVis_NotVis('XXXXXXXXXXXXXX', 'Файл/Документ/НДС/СумУпл164/СумНалОб/ВыпСМРСоб/СумНал'         , 'Стр. 060, гр. 5', 14, 0, False);
        #_IsValidNoKorDecimalVis_NotVis('XXXXXXXXXXXXXX', 'Файл/Документ/НДС/СумУпл164/СумНалОб/ОплПредПост/НалБаза'      , 'Стр. 070, гр. 3', 14, 0, False);
        #_IsValidNoKorDecimalVis_NotVis('XXXXXXXXXXXXXX', 'Файл/Документ/НДС/СумУпл164/СумНалОб/ОплПредПост/СумНал'       , 'Стр. 070, гр. 5', 14, 0, False);
        #_IsValidNoKorDecimalVis_NotVis('XXXXXXXXXXXXXX', 'Файл/Документ/НДС/СумУпл164/СумНалОб/СумНалВосст/СумНалВс'     , 'Стр. 080, гр. 5', 14, 0, False);
        #_IsValidNoKorDecimalVis_NotVis('XXXXXXXXXXXXXX', 'Файл/Документ/НДС/СумУпл164/СумНалОб/СумНалВосст/СумНал170.3.3', 'Стр. 090, гр. 5', 14, 0, False);
        #_IsValidNoKorDecimalVis_NotVis('XXXXXXXXXXXXXX', 'Файл/Документ/НДС/СумУпл164/СумНалОб/СумНалВосст/СумНалОперСт0', 'Стр. 100, гр. 5', 14, 0, False);
        #_IsValidNoKorDecimalVis_NotVis('XXXXXXXXXXXXXX', 'Файл/Документ/НДС/СумУпл164/СумНалОб/КорРеалТов/НалБаза'       , 'Стр. 105, гр. 3', 14, 0, False);
        #_IsValidNoKorDecimalVis_NotVis('XXXXXXXXXXXXXX', 'Файл/Документ/НДС/СумУпл164/СумНалОб/КорРеалТов/СумНал'        , 'Стр. 105, гр. 5', 14, 0, False);
        #_IsValidNoKorDecimalVis_NotVis('XXXXXXXXXXXXXX', 'Файл/Документ/НДС/СумУпл164/СумНалОб/КорРеалПредИК/НалБаза'    , 'Стр. 109, гр. 3', 14, 0, False);
        #_IsValidNoKorDecimalVis_NotVis('XXXXXXXXXXXXXX', 'Файл/Документ/НДС/СумУпл164/СумНалОб/КорРеалПредИК/СумНал'     , 'Стр. 109, гр. 5', 14, 0, False);
        #_IsValidNoKorDecimalVis_NotVis('XXXXXXXXXXXXXX', 'Файл/Документ/НДС/СумУпл164/СумНалОб/УплДеклар151.1/Значение'  , 'Стр. 110, гр. 5', 14, 0, False);
        #_IsValidNoKorDecimalVis_NotVis('XXXXXXXXXXXXXX', 'Файл/Документ/НДС/СумУпл164/СумНалОб/УплДеклар173.6/Значение'  , 'Стр. 115, гр. 5', 14, 0, False);
        #_IsValidNoKorDecimalVis_NotVis('XXXXXXXXXXXXXX', 'Файл/Документ/НДС/СумУпл164/СумНалОб/НалВосстОбщ'              , 'Стр. 118, гр. 5', 14, 0, False);

        #_IsValidNoKorDecimalVis_NotVis('XXXXXXXXXXXXXX', 'Файл/Документ/НДС/СумУпл164/СумНалВыч/НалПредНППриоб'          , 'Стр. 120'       , 14, 0, False);
        //----------------------------------------------------------------------------------------------------
        // 2017
        #_IsValidNoKorDecimalVis_NotVis('XXXXXXXXXXXXXX', 'Файл/Документ/НДС/СумУпл164/СумНалВыч/НалПредНПКапСтр'         , 'Стр. 125'       , 14, 0, False);
        // 2017
        //----------------------------------------------------------------------------------------------------
        #_IsValidNoKorDecimalVis_NotVis('XXXXXXXXXXXXXX', 'Файл/Документ/НДС/СумУпл164/СумНалВыч/НалПредНППок'            , 'Стр. 130'       , 14, 0, False);
        #_IsValidNoKorDecimalVis_NotVis('XXXXXXXXXXXXXX', 'Файл/Документ/НДС/СумУпл164/СумНалВыч/НалИсчРозн'              , 'Стр. 135'       , 14, 0, False);
        #_IsValidNoKorDecimalVis_NotVis('XXXXXXXXXXXXXX', 'Файл/Документ/НДС/СумУпл164/СумНалВыч/НалИсчСМР'               , 'Стр. 140'       , 14, 0, False);
        #_IsValidNoKorDecimalVis_NotVis('XXXXXXXXXXXXXX', 'Файл/Документ/НДС/СумУпл164/СумНалВыч/НалУплТамож'             , 'Стр. 150'       , 14, 0, False);
        #_IsValidNoKorDecimalVis_NotVis('XXXXXXXXXXXXXX', 'Файл/Документ/НДС/СумУпл164/СумНалВыч/НалУплНОТовТС'           , 'Стр. 160'       , 14, 0, False);
        #_IsValidNoKorDecimalVis_NotVis('XXXXXXXXXXXXXX', 'Файл/Документ/НДС/СумУпл164/СумНалВыч/НалИсчПрод'              , 'Стр. 170'       , 14, 0, False);
        #_IsValidNoKorDecimalVis_NotVis('XXXXXXXXXXXXXX', 'Файл/Документ/НДС/СумУпл164/СумНалВыч/НалУплПокНА'             , 'Стр. 180'       , 14, 0, False);
        //----------------------------------------------------------------------------------------------------
        // 2017
        #_IsValidNoKorDecimalVis_NotVis('XXXXXXXXXXXXXX', 'Файл/Документ/НДС/СумУпл164/СумНалВыч/НалВыч171.14'            , 'Стр. 185'       , 14, 0, False);
        // 2017
        //----------------------------------------------------------------------------------------------------
        #_IsValidNoKorDecimalVis_NotVis('XXXXXXXXXXXXXX', 'Файл/Документ/НДС/СумУпл164/СумНалВыч/НалВычОбщ'               , 'Стр. 190'       , 14, 0, False);

        #_IsValidNoKorDecimalVis_NotVis('(-) XXXXXXXXXXXXXX', 'Файл/Документ/НДС/СумУпл164/НалПУ164'                      , 'Стр. 200/210'   , 14, 0, True );
      }
      //#endregion РАЗДЕЛ 3 ОСНОВНОЙ
      //------------------------------------------------------------------------------------------------------

      //------------------------------------------------------------------------------------------------------
      //#region РАЗДЕЛ 3 ПРИЛОЖЕНИЕ 1
      //------------------------------------------------------------------------------------------------------
      do
      {
        for (i := 0; i < SumVosUpl_count; i++)
        {
          NameStr := pFH.Func('myGetPageIDR03_1', i+1);

          if GetFldVisInTree('Файл/Документ/НДС/СумУпл164/СумВосУпл'+GetIter(i))
          {
            #_IsValidNoKorStringVis_NotVis (                'Файл/Документ/НДС/СумУпл164/СумВосУпл'+GetIter(i)+'/НаимООС'      , 'Стр. 010',  1, 100       );
            #_IsValidNoKorVis              (IsValidKodOper, 'Файл/Документ/НДС/СумУпл164/СумВосУпл'+GetIter(i)+'/КодОпООС'     , 'Стр. 030'                );
            #_IsValidNoKorVis              (IsValidDate   , 'Файл/Документ/НДС/СумУпл164/СумВосУпл'+GetIter(i)+'/ДатаВводООС'  , 'Стр. 040'                );
            #_IsValidNoKorVis              (IsValidDate   , 'Файл/Документ/НДС/СумУпл164/СумВосУпл'+GetIter(i)+'/ДатаНачАмОтч' , 'Стр. 050'                );
            #_IsValidNoKorDecimalVis_NotVis('XXXXXXXXXXXXXX', 'Файл/Документ/НДС/СумУпл164/СумВосУпл'+GetIter(i)+'/СтВводООС'  , 'Стр. 060', 14,   0, False);
            #_IsValidNoKorDecimalVis_NotVis('XXXXXXXXXXXXXX', 'Файл/Документ/НДС/СумУпл164/СумВосУпл'+GetIter(i)+'/НалВычООС'  , 'Стр. 070', 14,   0, False);

            var jNodeCount : LongInt;  jNodeCount := XMLMap.GetNodeCountByName('Файл/Документ/НДС/СумУпл164/СумВосУпл'+GetIter(i)+'/СведНалГод');
            for (j := 0; j < jNodeCount; j++)
            {
              #_IsValidNoKorVis_NotVis       (IsValidOtchGod, 'Файл/Документ/НДС/СумУпл164/СумВосУпл'+GetIter(i)+'/СведНалГод'+GetIter(j)+'/ГодОтч'    , 'Стр. '+String(j+1)+': гр. 1'              , if(i=0, -1, if(j=0, 0, 1)));
              #_IsValidNoKorVis_NotVis       (IsValidDate   , 'Файл/Документ/НДС/СумУпл164/СумВосУпл'+GetIter(i)+'/СведНалГод'+GetIter(j)+'/ДатаИсп170', 'Стр. '+String(j+1)+': гр. 2'              , if(i=0, -1, if(j=0, 0, 1)));
              #_IsValidNoKorDecimalVis_NotVis('XXX.X', 'Файл/Документ/НДС/СумУпл164/СумВосУпл'+GetIter(i)+'/СведНалГод'+GetIter(j)+'/ДоляНеОбл' , 'Стр. '+String(j+1)+': гр. 3',  3, 1, False, if(i=0, -1, if(j=0, 0, 1)));
              #_IsValidNoKorDecimalVis_NotVis('XXXXXXXXXXXXXX', 'Файл/Документ/НДС/СумУпл164/СумВосУпл'+GetIter(i)+'/СведНалГод'+GetIter(j)+'/НалГод'    , 'Стр. '+String(j+1)+': гр. 4', 14, 0, False, if(i=0, -1, if(j=0, 0, 1)));
            } // for
          }
        } // for
      }
      while False;
      //#endregion РАЗДЕЛ 3 ПРИЛОЖЕНИЕ 1
      //------------------------------------------------------------------------------------------------------

      //------------------------------------------------------------------------------------------------------
      //#region РАЗДЕЛ 3 ПРИЛОЖЕНИЕ 2
      //------------------------------------------------------------------------------------------------------
      do
      {
        NameStr := pFH.Func('myGetPageIDR03_2');

        if GetFldVisInTree('Файл/Документ/НДС/СумУпл164/СумВычИн')
        {
          var iNodeCount : LongInt;  iNodeCount := XMLMap.GetNodeCountByName('Файл/Документ/НДС/СумУпл164/СумВычИн/СведНалГодИ');
          for (i := 0; i < iNodeCount; i++)
          {
            if GetFldVisInTree('Файл/Документ/НДС/СумУпл164/СумВычИн/СведНалГодИ'+GetIter(i))
            {
              #_IsValidNoKorVis_NotVis       (IsValidKPP      , 'Файл/Документ/НДС/СумУпл164/СумВычИн/СведНалГодИ'+GetIter(i)+'/КППИнУч'  , 'Стр. '+String(i+1)+': гр. 1'              , -1);
              #_IsValidNoKorDecimalVis_NotVis('XXXXXXXXXXXXXX', 'Файл/Документ/НДС/СумУпл164/СумВычИн/СведНалГодИ'+GetIter(i)+'/СумНалИсч', 'Стр. '+String(i+1)+': гр. 2', 14, 0, False, -1);
              #_IsValidNoKorDecimalVis_NotVis('XXXXXXXXXXXXXX', 'Файл/Документ/НДС/СумУпл164/СумВычИн/СведНалГодИ'+GetIter(i)+'/СумНалВыч', 'Стр. '+String(i+1)+': гр. 3', 14, 0, False, -1);

              if ( GetStrNull('Файл/Документ/НДС/СумУпл164/СумВычИн/СведНалГодИ'+GetIter(i)+'/СумНалИсч')
              and  GetStrNull('Файл/Документ/НДС/СумУпл164/СумВычИн/СведНалГодИ'+GetIter(i)+'/СумНалВыч') )
              {
                MessageErrorStop_ALG('Файл/Документ/НДС/СумУпл164/СумВычИн/СведНалГодИ'+GetIter(i)+'/СумНалИсч', NameStr, 'Стр. '+String(i+1)+': гр. 2', 'Значение гр. 2 обязательно для заполнения, если не заполнена гр. 3', -1);
                MessageErrorStop_ALG('Файл/Документ/НДС/СумУпл164/СумВычИн/СведНалГодИ'+GetIter(i)+'/СумНалВыч', NameStr, 'Стр. '+String(i+1)+': гр. 3', 'Значение гр. 3 обязательно для заполнения, если не заполнена гр. 2', -1);
              }
            }
          } // for
        }
      }
      while False;
      //#endregion РАЗДЕЛ 3 ПРИЛОЖЕНИЕ 2
      //------------------------------------------------------------------------------------------------------
    }
    while False;
    //#endregion РАЗДЕЛ 3
    //--------------------------------------------------------------------------------------------------------

    //--------------------------------------------------------------------------------------------------------
    //#region РАЗДЕЛ 4
    //--------------------------------------------------------------------------------------------------------
    do
    {
      //------------------------------------------------------------------------------------------------------
      //#region РАЗДЕЛ 4 ОСНОВНОЙ
      {
        if (not GetFldVisInTree('Файл/Документ/НДС/НалПодтв0') )
        { Break; }

        NameStr := pFH.Func('myGetPageIDR04_0');
        #_IsValidNoKorDecimalVis_NotVis('(-) XXXXXXXXXXXXXX','Файл/Документ/НДС/НалПодтв0/СумИсчислИтог', 'Стр. 120/130', 14, 0, True);
      }
      //#endregion РАЗДЕЛ 4 ОСНОВНОЙ
      //------------------------------------------------------------------------------------------------------

      //------------------------------------------------------------------------------------------------------
      //#region Расчет суммы налога, подлежащей восстановлению, по коду операции
      do
      {
        if (not GetFldVisInTree('Файл/Документ/НДС/НалПодтв0/СумОпер4') )
        { Break; }

        var iNodeCount : LongInt;  iNodeCount := XMLMap.GetNodeCountByName('Файл/Документ/НДС/НалПодтв0/СумОпер4');
        for (i := 0; i < iNodeCount; i++)
        {
          NameStr := pFH.Func('myGetPageIDR04_1', i+1);
          #_IsValidNoKorVis_NotVis       (IsValidKodOper  , 'Файл/Документ/НДС/НалПодтв0/СумОпер4'+GetIter(i)+'/КодОпер'  , String(i+1)+': стр. 010'              , -1);
          #_IsValidNoKorDecimalVis_NotVis('XXXXXXXXXXXXXX', 'Файл/Документ/НДС/НалПодтв0/СумОпер4'+GetIter(i)+'/НалБаза'  , String(i+1)+': стр. 020', 14, 0, False, -1);
          #_IsValidNoKorDecimalVis_NotVis('XXXXXXXXXXXXXX', 'Файл/Документ/НДС/НалПодтв0/СумОпер4'+GetIter(i)+'/НалВычПод', String(i+1)+': стр. 030', 14, 0, False, -1);
          #_IsValidNoKorDecimalVis_NotVis('XXXXXXXXXXXXXX', 'Файл/Документ/НДС/НалПодтв0/СумОпер4'+GetIter(i)+'/НалНеПод' , String(i+1)+': стр. 040', 14, 0, False, -1);
          #_IsValidNoKorDecimalVis_NotVis('XXXXXXXXXXXXXX', 'Файл/Документ/НДС/НалПодтв0/СумОпер4'+GetIter(i)+'/НалВосст' , String(i+1)+': стр. 050', 14, 0, False, -1);
        } // for
      }
      while False;
      //#endregion Расчет суммы налога, подлежащей восстановлению, по коду операции
      //------------------------------------------------------------------------------------------------------

      //------------------------------------------------------------------------------------------------------
      //#region Корректировка налоговой базы при возврате товаров
      do
      {
        if (not GetFldVisInTree('Файл/Документ/НДС/НалПодтв0/КорНБВозврТов') )
        { Break; }

        var iNodeCount : LongInt;  iNodeCount := XMLMap.GetNodeCountByName('Файл/Документ/НДС/НалПодтв0/КорНБВозврТов');
        for (i := 0; i < iNodeCount; i++)
        {
          NameStr := pFH.Func('myGetPageIDR04_2', i+1);
          #_IsValidNoKorVis_NotVis       (IsValidKodOper  , 'Файл/Документ/НДС/НалПодтв0/КорНБВозврТов'+GetIter(i)+'/КодОпер' , String(i+1)+': стр. 060'              , -1);
          #_IsValidNoKorDecimalVis_NotVis('XXXXXXXXXXXXXX', 'Файл/Документ/НДС/НалПодтв0/КорНБВозврТов'+GetIter(i)+'/НалБаза' , String(i+1)+': стр. 070', 14, 0, False, -1);
          #_IsValidNoKorDecimalVis_NotVis('XXXXXXXXXXXXXX', 'Файл/Документ/НДС/НалПодтв0/КорНБВозврТов'+GetIter(i)+'/НалВосст', String(i+1)+': стр. 080', 14, 0, False, -1);
        } // for
      }
      while False;
      //#endregion Корректировка налоговой базы при возврате товаров
      //------------------------------------------------------------------------------------------------------

      //------------------------------------------------------------------------------------------------------
      //#region Корректировка налоговой базы при увеличении (уменьшении) цены
      do
      {
        if (not GetFldVisInTree('Файл/Документ/НДС/НалПодтв0/КорНБИзмЦен') )
        { Break; }

        var iNodeCount : LongInt;  iNodeCount := XMLMap.GetNodeCountByName('Файл/Документ/НДС/НалПодтв0/КорНБИзмЦен');
        for (i := 0; i < iNodeCount; i++)
        {
          NameStr := pFH.Func('myGetPageIDR04_3', i+1);
          #_IsValidNoKorVis_NotVis       (IsValidKodOper  , 'Файл/Документ/НДС/НалПодтв0/КорНБИзмЦен'+GetIter(i)+'/КодОпер'     , String(i+1)+': стр. 090'              , -1);
          #_IsValidNoKorDecimalVis_NotVis('XXXXXXXXXXXXXX', 'Файл/Документ/НДС/НалПодтв0/КорНБИзмЦен'+GetIter(i)+'/КорНалБазаУв', String(i+1)+': стр. 100', 14, 0, False, -1);
          #_IsValidNoKorDecimalVis_NotVis('XXXXXXXXXXXXXX', 'Файл/Документ/НДС/НалПодтв0/КорНБИзмЦен'+GetIter(i)+'/КорНалБазаУм', String(i+1)+': стр. 110', 14, 0, False, -1);

          if ( GetStrNull('Файл/Документ/НДС/НалПодтв0/КорНБИзмЦен'+GetIter(i)+'/КорНалБазаУв')
          and  GetStrNull('Файл/Документ/НДС/НалПодтв0/КорНБИзмЦен'+GetIter(i)+'/КорНалБазаУм') )
          {
            MessageErrorStop_ALG('Файл/Документ/НДС/НалПодтв0/КорНБИзмЦен'+GetIter(i)+'/КорНалБазаУв', NameStr, String(i+1)+': стр. 100', 'Значение стр. 100 обязательно для заполнения, если не заполнена стр. 110');
            MessageErrorStop_ALG('Файл/Документ/НДС/НалПодтв0/КорНБИзмЦен'+GetIter(i)+'/КорНалБазаУм', NameStr, String(i+1)+': стр. 110', 'Значение стр. 110 обязательно для заполнения, если не заполнена стр. 100');
          }
        } // for
      }
      while False;
      //#endregion Корректировка налоговой базы при увеличении (уменьшении) цены
      //------------------------------------------------------------------------------------------------------
    }
    while False;
    //#endregion РАЗДЕЛ 4
    //--------------------------------------------------------------------------------------------------------

    //--------------------------------------------------------------------------------------------------------
    //#region РАЗДЕЛ 5
    do
    {
      if (not GetFldVisInTree('Файл/Документ/НДС/НалВычПред0') )
      { Break; }

      NameStr := pFH.Func('myGetPageIDR05_F', i+1);
      #_IsValidNoKorDecimalVis_NotVis('XXXXXXXXXXXXXX','Файл/Документ/НДС/НалВычПред0/СумВозмПдтв'  , 'Стр. 080', 14, 0, False);
      #_IsValidNoKorDecimalVis_NotVis('XXXXXXXXXXXXXX','Файл/Документ/НДС/НалВычПред0/СумВозмНеПдтв', 'Стр. 090', 14, 0, False);

      var iNodeCount : LongInt;  iNodeCount := XMLMap.GetNodeCountByName('Файл/Документ/НДС/НалВычПред0/СумПер');
      for (i := 0; i < iNodeCount; i++)
      {
        if (not GetFldVisInTree('Файл/Документ/НДС/НалВычПред0/СумПер'+GetIter(i)) )
        { Continue; }

        NameStr := pFH.Func('myGetPageIDR05_0', i+1);
        #_IsValidNoKorVis_NotVis(IsValidOtchGod , 'Файл/Документ/НДС/НалВычПред0/СумПер'+GetIter(i)+'/ОтчетГод', 'Стр. 010', -1);
        #_IsValidNoKorVis_NotVis(IsValidPeriod_2, 'Файл/Документ/НДС/НалВычПред0/СумПер'+GetIter(i)+'/Период'  , 'Стр. 020', -1);

        var jNodeCount : LongInt;  jNodeCount := XMLMap.GetNodeCountByName('Файл/Документ/НДС/НалВычПред0/СумПер'+GetIter(i)+'/СумОпер5');
        for (j := 0; j < jNodeCount; j++)
        {
          #_IsValidNoKorVis_NotVis       (IsValidKodOper  ,'Файл/Документ/НДС/НалВычПред0/СумПер'+GetIter(i)+'/СумОпер5'+GetIter(j)+'/КодОпер'     , String(j+1)+': стр. 030'              , if(i=0, -1, if(j=0, 0, 1)));
          #_IsValidNoKorDecimalVis_NotVis('XXXXXXXXXXXXXX','Файл/Документ/НДС/НалВычПред0/СумПер'+GetIter(i)+'/СумОпер5'+GetIter(j)+'/НалБазаПод'  , String(j+1)+': стр. 040', 14, 0, False, if(i=0, -1, if(j=0, 0, 1)));
          #_IsValidNoKorDecimalVis_NotVis('XXXXXXXXXXXXXX','Файл/Документ/НДС/НалВычПред0/СумПер'+GetIter(i)+'/СумОпер5'+GetIter(j)+'/НалВычПод'   , String(j+1)+': стр. 050', 14, 0, False, if(i=0, -1, if(j=0, 0, 1)));
          #_IsValidNoKorDecimalVis_NotVis('XXXXXXXXXXXXXX','Файл/Документ/НДС/НалВычПред0/СумПер'+GetIter(i)+'/СумОпер5'+GetIter(j)+'/НалБазаНеПод', String(j+1)+': стр. 060', 14, 0, False, if(i=0, -1, if(j=0, 0, 1)));
          #_IsValidNoKorDecimalVis_NotVis('XXXXXXXXXXXXXX','Файл/Документ/НДС/НалВычПред0/СумПер'+GetIter(i)+'/СумОпер5'+GetIter(j)+'/НалВычНеПод' , String(j+1)+': стр. 070', 14, 0, False, if(i=0, -1, if(j=0, 0, 1)));
        }
      } // for
    }
    while False;
    //#endregion РАЗДЕЛ 5
    //--------------------------------------------------------------------------------------------------------

    //--------------------------------------------------------------------------------------------------------
    //#region РАЗДЕЛ 6
    do
    {
      //------------------------------------------------------------------------------------------------------
      //#region РАЗДЕЛ 6 ОСНОВНОЙ
      //------------------------------------------------------------------------------------------------------
      {
        if (not GetFldVisInTree('Файл/Документ/НДС/НалНеПодтв0') )
        { Break; }

        NameStr := pFH.Func('myGetPageIDR06_0');
        #_IsValidNoKorDecimalVis_NotVis(    'XXXXXXXXXXXXXX','Файл/Документ/НДС/НалНеПодтв0/СумНал164Ит'  , 'Стр. 050'    , 14, 0, False);
        #_IsValidNoKorDecimalVis_NotVis(    'XXXXXXXXXXXXXX','Файл/Документ/НДС/НалНеПодтв0/НалВычНеПодИт', 'Стр. 060'    , 14, 0, False);
        #_IsValidNoKorDecimalVis_NotVis('(-) XXXXXXXXXXXXXX','Файл/Документ/НДС/НалНеПодтв0/НалИсчислИт'  , 'Стр. 160/170', 14, 0, True );
      }
      //#endregion РАЗДЕЛ 6 ОСНОВНОЙ
      //------------------------------------------------------------------------------------------------------

      //------------------------------------------------------------------------------------------------------
      //#region Расчет суммы налога по коду операции
      do
      {
        if (not GetFldVisInTree('Файл/Документ/НДС/НалНеПодтв0/СумОпер6') )
        { Break; }

        var iNodeCount : LongInt;  iNodeCount := XMLMap.GetNodeCountByName('Файл/Документ/НДС/НалНеПодтв0/СумОпер6');
        for (i := 0; i < iNodeCount; i++)
        {
          NameStr := pFH.Func('myGetPageIDR06_1', i+1);
          #_IsValidNoKorVis_NotVis       (  IsValidKodOper, 'Файл/Документ/НДС/НалНеПодтв0/СумОпер6'+GetIter(i)+'/КодОпер'    , String(i+1)+': стр. 010'              , -1);
          #_IsValidNoKorDecimalVis_NotVis('XXXXXXXXXXXXXX', 'Файл/Документ/НДС/НалНеПодтв0/СумОпер6'+GetIter(i)+'/НалБаза'    , String(i+1)+': стр. 020', 14, 0, False, -1);
          #_IsValidNoKorDecimalVis_NotVis('XXXXXXXXXXXXXX', 'Файл/Документ/НДС/НалНеПодтв0/СумОпер6'+GetIter(i)+'/СумНал164'  , String(i+1)+': стр. 030', 14, 0, False, -1);
          #_IsValidNoKorDecimalVis_NotVis('XXXXXXXXXXXXXX', 'Файл/Документ/НДС/НалНеПодтв0/СумОпер6'+GetIter(i)+'/НалВычНеПод', String(i+1)+': стр. 040', 14, 0, False, -1);
        } // for
      }
      while False;
      //#endregion Расчет суммы налога по коду операции
      //------------------------------------------------------------------------------------------------------

      //------------------------------------------------------------------------------------------------------
      //#region Корректировка сумм налога при возврате товаров
      do
      {
        if (not GetFldVisInTree('Файл/Документ/НДС/НалНеПодтв0/КорНалВозврТов') )
        { Break; }

        var iNodeCount : LongInt;  iNodeCount := XMLMap.GetNodeCountByName('Файл/Документ/НДС/НалНеПодтв0/КорНалВозврТов');
        for (i := 0; i < iNodeCount; i++)
        {
          NameStr := pFH.Func('myGetPageIDR06_2', i+1);
          #_IsValidNoKorVis_NotVis       (  IsValidKodOper, 'Файл/Документ/НДС/НалНеПодтв0/КорНалВозврТов'+GetIter(i)+'/КодОпер'      , String(i+1)+': стр. 070'              , -1);
          #_IsValidNoKorDecimalVis_NotVis('XXXXXXXXXXXXXX', 'Файл/Документ/НДС/НалНеПодтв0/КорНалВозврТов'+GetIter(i)+'/НалБаза'      , String(i+1)+': стр. 080', 14, 0, False, -1);
          #_IsValidNoKorDecimalVis_NotVis('XXXXXXXXXXXXXX', 'Файл/Документ/НДС/НалНеПодтв0/КорНалВозврТов'+GetIter(i)+'/КорИсч.164.23', String(i+1)+': стр. 090', 14, 0, False, -1);
          #_IsValidNoKorDecimalVis_NotVis('XXXXXXXXXXXXXX', 'Файл/Документ/НДС/НалНеПодтв0/КорНалВозврТов'+GetIter(i)+'/НалВосст'     , String(i+1)+': стр. 100', 14, 0, False, -1);
        } // for
      }
      while False;
      //#endregion Корректировка сумм налога при возврате товаров
      //------------------------------------------------------------------------------------------------------

      //------------------------------------------------------------------------------------------------------
      //#region Корректировка сумм налога при изменении цены реализованных товаров (работ, услуг)
      do
      {
        if (not GetFldVisInTree('Файл/Документ/НДС/НалНеПодтв0/КорНалИзмЦен') )
        { Break; }

        var iNodeCount : LongInt;  iNodeCount := XMLMap.GetNodeCountByName('Файл/Документ/НДС/НалНеПодтв0/КорНалИзмЦен');
        for (i := 0; i < iNodeCount; i++)
        {
          NameStr := pFH.Func('myGetPageIDR06_3', i+1);

          #_IsValidNoKorVis_NotVis       (  IsValidKodOper, 'Файл/Документ/НДС/НалНеПодтв0/КорНалИзмЦен'+GetIter(i)+'/КодОпер'        , String(i+1)+': стр. 110'              , -1);
          #_IsValidNoKorDecimalVis_NotVis('XXXXXXXXXXXXXX', 'Файл/Документ/НДС/НалНеПодтв0/КорНалИзмЦен'+GetIter(i)+'/КорНалБазаУв'   , String(i+1)+': стр. 120', 14, 0, False, -1);
          #_IsValidNoKorDecimalVis_NotVis('XXXXXXXXXXXXXX', 'Файл/Документ/НДС/НалНеПодтв0/КорНалИзмЦен'+GetIter(i)+'/КорИсч.164.23Ув', String(i+1)+': стр. 130', 14, 0, False, -1);
          #_IsValidNoKorDecimalVis_NotVis('XXXXXXXXXXXXXX', 'Файл/Документ/НДС/НалНеПодтв0/КорНалИзмЦен'+GetIter(i)+'/КорНалБазаУм'   , String(i+1)+': стр. 140', 14, 0, False, -1);
          #_IsValidNoKorDecimalVis_NotVis('XXXXXXXXXXXXXX', 'Файл/Документ/НДС/НалНеПодтв0/КорНалИзмЦен'+GetIter(i)+'/КорИсч.164.23Ум', String(i+1)+': стр. 150', 14, 0, False, -1);
        } // for
      }
      while False;
      //#endregion Корректировка сумм налога при изменении цены реализованных товаров (работ, услуг)
      //------------------------------------------------------------------------------------------------------
    }
    while False;
    //#endregion РАЗДЕЛ 6
    //--------------------------------------------------------------------------------------------------------

    //--------------------------------------------------------------------------------------------------------
    //#region РАЗДЕЛ 7
    {
      NameStr := pFH.Func('myGetPageIDR07_0');

      if GetFldVisInTree('Файл/Документ/НДС/ОперНеНал')
      {
        var iNodeCount : LongInt;  iNodeCount := XMLMap.GetNodeCountByName('Файл/Документ/НДС/ОперНеНал/СумОпер7');
        for (i := 0; i < iNodeCount; i++)
        {
          #_IsValidNoKorVis_NotVis       (IsValidKodOper , 'Файл/Документ/НДС/ОперНеНал/СумОпер7'+GetIter(i)+'/КодОпер'   , 'Стр. '+String(i+1)+', гр. 1'              , -1);
          #_IsValidNoKorDecimalVis_NotVis('XXXXXXXXXXXXXX','Файл/Документ/НДС/ОперНеНал/СумОпер7'+GetIter(i)+'/СтРеалТов' , 'Стр. '+String(i+1)+', гр. 2', 14, 0, False, -1);
          #_IsValidNoKorDecimalVis_NotVis('XXXXXXXXXXXXXX','Файл/Документ/НДС/ОперНеНал/СумОпер7'+GetIter(i)+'/СтПриобТов', 'Стр. '+String(i+1)+', гр. 3', 14, 0, False, -1);
          #_IsValidNoKorDecimalVis_NotVis('XXXXXXXXXXXXXX','Файл/Документ/НДС/ОперНеНал/СумОпер7'+GetIter(i)+'/НалНеВыч'  , 'Стр. '+String(i+1)+', гр. 4', 14, 0, False, -1);
        }
      }
    }
    //#endregion РАЗДЕЛ 7
    //--------------------------------------------------------------------------------------------------------
  }
  while False;
  StopVisual('', 0);

  Result := True;
@end. // CheckFldRBR
//#endregion ПРОВЕРКА ОСНОВНЫХ РАЗДЕЛОВ
//************************************************************************************************************

//============================================================================================================
//#region ПРОВЕРКА ВСЕЙ ДЕКЛАРАЦИИ
//------------------------------------------------------------------------------------------------------------
// Проверить всю декларацию
@Script On_Check : boolean;
@begin
  Result := False;

  CheckFldRBR;
  CheckFldR08;
  CheckFldR8D;
  CheckFldR09;
  CheckFldR9D;
  CheckFldR10;
  CheckFldR11;
  CheckFldR12;

  Result := True;
@end. // On_Check
//#endregion ПРОВЕРКА ВСЕЙ ДЕКЛАРАЦИИ
//************************************************************************************************************
//#endregion ДЕЙСТВИЯ ВЫПОЛНЯЕМЫЕ ПРИ ПРОВЕРКЕ
//************************************************************************************************************


//============================================================================================================
//#region ДЕЙСТВИЯ ВЫПОЛНЯЕМЫЕ ПРИ РАСЧЕТЕ
//============================================================================================================
//#region РАСЧЕТ ДОП РАЗДЕЛОВ

//============================================================================================================
//#region СЕРВИСНЫЕ МЕТОДЫ
//------------------------------------------------------------------------------------------------------------
// Получить адрес показателя "Раздела 08"."Всего сумма НДС"
@Script myGetAddr_R08_VsegoSumNDS : string;
@begin
  Result := 'Файл/Документ/НДС/КнигаПокуп/Файл/Документ/КнигаПокуп/СумНДСВсКПк';
@end. // myGetAddr_R08_VsegoSumNDS

//------------------------------------------------------------------------------------------------------------
// Получить адрес показателя "Раздела 09"."Всего сумма без НДС по ставке 20%"
@Script myGetAddr_R09_VsegoSumRub20 : string;
@begin
  Result := 'Файл/Документ/НДС/КнигаПрод/Файл/Документ/КнигаПрод/СтПродБезНДС20';
@end. // myGetAddr_R09_VsegoSumRub20
//------------------------------------------------------------------------------------------------------------
// Получить адрес показателя "Раздела 09"."Всего сумма без НДС по ставке 18%"
@Script myGetAddr_R09_VsegoSumRub18 : string;
@begin
  Result := 'Файл/Документ/НДС/КнигаПрод/Файл/Документ/КнигаПрод/СтПродБезНДС18';
@end. // myGetAddr_R09_VsegoSumRub18
//------------------------------------------------------------------------------------------------------------
// Получить адрес показателя "Раздела 09"."Всего сумма без НДС по ставке 10%"
@Script myGetAddr_R09_VsegoSumRub10 : string;
@begin
  Result := 'Файл/Документ/НДС/КнигаПрод/Файл/Документ/КнигаПрод/СтПродБезНДС10';
@end. // myGetAddr_R09_VsegoSumRub10
//------------------------------------------------------------------------------------------------------------
// Получить адрес показателя "Раздела 09"."Всего сумма без НДС по ставке 00%"
@Script myGetAddr_R09_VsegoSumRub00 : string;
@begin
  Result := 'Файл/Документ/НДС/КнигаПрод/Файл/Документ/КнигаПрод/СтПродБезНДС0';
@end. // myGetAddr_R09_VsegoSumRub00
//------------------------------------------------------------------------------------------------------------
// Получить адрес показателя "Раздела 09"."Всего НДС по ставке 20%"
@Script myGetAddr_R09_VsegoSumNDS20 : string;
@begin
  Result := 'Файл/Документ/НДС/КнигаПрод/Файл/Документ/КнигаПрод/СумНДСВсКПр20';
@end. // myGetAddr_R09_VsegoSumNDS20
//------------------------------------------------------------------------------------------------------------
// Получить адрес показателя "Раздела 09"."Всего НДС по ставке 18%"
@Script myGetAddr_R09_VsegoSumNDS18 : string;
@begin
  Result := 'Файл/Документ/НДС/КнигаПрод/Файл/Документ/КнигаПрод/СумНДСВсКПр18';
@end. // myGetAddr_R09_VsegoSumNDS18
//------------------------------------------------------------------------------------------------------------
// Получить адрес показателя "Раздела 09"."Всего НДС по ставке 10%"
@Script myGetAddr_R09_VsegoSumNDS10 : string;
@begin
  Result := 'Файл/Документ/НДС/КнигаПрод/Файл/Документ/КнигаПрод/СумНДСВсКПр10';
@end. // myGetAddr_R09_VsegoSumNDS10
//------------------------------------------------------------------------------------------------------------
// Получить адрес показателя "Раздела 09"."Всего НДС по ставке 00%"
@Script myGetAddr_R09_VsegoSumNDSNo : string;
@begin
  Result := 'Файл/Документ/НДС/КнигаПрод/Файл/Документ/КнигаПрод/СтПродОсвВсКПр';
@end. // myGetAddr_R09_VsegoSumNDSNo
//#endregion СЕРВИСНЫЕ МЕТОДЫ
//************************************************************************************************************

//============================================================================================================
//#region РАЗДЕЛ 8
//------------------------------------------------------------------------------------------------------------
// Рассчитать поля "РАЗДЕЛА 08"
@Script ReCalcFldR08 : boolean;
@begin
  Result := False;

  //----------------------------------------------------------------------------------------------------------
  // Синхронизация поля "Номер корректировки"
  var sNumCorr : string;  sNumCorr := GetStrVal('Файл/Документ/НомКорр');
  SetFldVal('Файл/Документ/НДС/КнигаПокуп/Файл/Документ/НомКорр'   , sNumCorr);
  //----------------------------------------------------------------------------------------------------------

  StartNewVisual(vtNumericVisual, vfTimer+vfBreak+vfConfirm+vfScreenBottom
  , 'Расчет полей: "Раздел 8"...', 0);
  do
  {
    var sAddr : string;  sAddr := 'Файл/Документ/НДС/КнигаПокуп/Файл/Документ/КнигаПокуп';
    var dR08_VsegoSumNDS : double;  dR08_VsegoSumNDS := 0;

    var BStrNpp   : LongInt;
    var BStrCount : LongInt;  BStrCount := XMLMap.GetNodeCountByName(sAddr+'/КнПокСтр');
    for (BStrNpp := 0; BStrNpp < BStrCount; BStrNpp++)
    { // побежали по строкам книги
      if (not NextVisual)
      { Break; }

      var sStrAddr : string;  sStrAddr := +sAddr+'/КнПокСтр'+GetIter(BStrNpp);

      //0 это не установлен параметр "печать итоговых сумм для лома и шкур"
      If(0 = GetIntVal('Файл/ПечатьИтогЛомШкур'))
      {
        if(    IsKodVidOperLom(GetStrVal(sStrAddr+'/КодВидОпер/Значение'))
            Or IsKodVidOperLom(GetStrVal(sStrAddr+'/КодВидОпер[1]/Значение'))
            Or IsKodVidOperLom(GetStrVal(sStrAddr+'/КодВидОпер[2]/Значение'))
            Or IsKodVidOperLom(GetStrVal(sStrAddr+'/КодВидОпер[3]/Значение'))
          )
        { Continue; }
      }

      dR08_VsegoSumNDS := dR08_VsegoSumNDS + GetDblVal(sStrAddr+'/СумНДСВыч');
    } // побежали по строкам книги

    SetFldVal(myGetAddr_R08_VsegoSumNDS, dR08_VsegoSumNDS);
    MesError.InsertRasch(
      pFH.Func('myGetPageIDR08_F', 1)
    , myGetAddr_R08_VsegoSumNDS
    , 'Стр. 190 = СУММ(Стр. 180)'
    , GD0(myGetAddr_R08_VsegoSumNDS)
    , 0);

  }
  while False;
  StopVisual('', 0);

  //----------------------------------------------------------------------------------------------------------
  // проверка данных
  CheckFldR08;
  //----------------------------------------------------------------------------------------------------------

  Result := True;
@end. // ReCalcFldR08
//#endregion РАЗДЕЛ 8
//************************************************************************************************************

//============================================================================================================
//#region ПРИЛОЖЕНИЕ К РАЗДЕЛУ 08
//------------------------------------------------------------------------------------------------------------
// Рассчитать поля "ПРИЛОЖЕНИЯ К РАЗДЕЛУ 08"
@Script ReCalcFldR8D : boolean;
@begin
  Result := False;

  //----------------------------------------------------------------------------------------------------------
  // Синхронизация поля "Номер корректировки"
  var sNumCorr : string;  sNumCorr := GetStrVal('Файл/Документ/НомКорр');
  SetFldVal('Файл/Документ/НДС/КнигаПокупДЛ/Файл/Документ/НомКорр' , sNumCorr);
  //----------------------------------------------------------------------------------------------------------

  StartNewVisual(vtNumericVisual, vfTimer+vfBreak+vfConfirm+vfScreenBottom
  , 'Расчет полей: "Раздел 8 Приложение 1"...', 0);
  do
  {
    var sAddr   : string;  sAddr   := 'Файл/Документ/НДС/КнигаПокупДЛ/Файл/Документ/КнигаПокупДЛ';
    var sPageID : string;  sPageID := pFH.Func('myGetPageIDR8D_F', 1);

    //--------------------------------------------------------------------------------------------------------
    // ИТОГО по разделу
    var sR8D_ItogoSumNDS : string;  sR8D_ItogoSumNDS := sAddr+'/СумНДСИтКПк';
    var dR8D_ItogoSumNDS : double;  dR8D_ItogoSumNDS := 0;
    if (GetIntVal('Файл/ПризнНал8') = 0)
    or (not GetFldVis('Файл/ПризнНал8'))
    { // если "Раздел 8" НЕ существует
      // не пересчитываем ИТОГО по разделу, а берем сумму как есть
      dR8D_ItogoSumNDS := GetDblVal(sR8D_ItogoSumNDS);
    }
    else
    { // если "Раздел 8" существует
      dR8D_ItogoSumNDS := GetDblVal(myGetAddr_R08_VsegoSumNDS);
      SetFldVal(sR8D_ItogoSumNDS, dR8D_ItogoSumNDS);
      MesError.InsertRasch(
        sPageID
      , sR8D_ItogoSumNDS
      , 'Стр. 005 = Раздел 8(Стр. 190)'
      , GD0(sR8D_ItogoSumNDS)+'='+GD0(myGetAddr_R08_VsegoSumNDS)
      , 0);
    } // если "Раздел 8" существует
    // ИТОГО по разделу
    //--------------------------------------------------------------------------------------------------------

    //--------------------------------------------------------------------------------------------------------
    // расчет по строкам
    var dR8D_VsegoSumNDS : double;  dR8D_VsegoSumNDS := 0;

    var BStrNpp   : LongInt;
    var BStrCount : LongInt;  BStrCount := XMLMap.GetNodeCountByName(sAddr+'/КнПокДЛСтр');
    for (BStrNpp := 0; BStrNpp < BStrCount; BStrNpp++)
    { // побежали по строкам книги
      if (not NextVisual)
      { Break; }

      var sStrAddr : string;  sStrAddr := +sAddr+'/КнПокДЛСтр'+GetIter(BStrNpp);

      //0 это не установлен параметр "печать итоговых сумм для лома и шкур"
      If(0 = GetIntVal('Файл/ПечатьИтогЛомШкур'))
      {
        if(    IsKodVidOperLom(GetStrVal(sStrAddr+'/КодВидОпер/Значение'))
            Or IsKodVidOperLom(GetStrVal(sStrAddr+'/КодВидОпер[1]/Значение'))
            Or IsKodVidOperLom(GetStrVal(sStrAddr+'/КодВидОпер[2]/Значение'))
            Or IsKodVidOperLom(GetStrVal(sStrAddr+'/КодВидОпер[3]/Значение'))
          )
        { Continue; }
      }

      dR8D_VsegoSumNDS += GetDblVal(sStrAddr+'/СумНДС');
    } // побежали по строкам книги
    // расчет по строкам
    //--------------------------------------------------------------------------------------------------------

    //--------------------------------------------------------------------------------------------------------
    // ВСЕГО по разделу
    var sR8D_VsegoSumNDS : string;  sR8D_VsegoSumNDS := sAddr+'/СумНДСИтП1Р8';
    SetFldVal(sR8D_VsegoSumNDS, dR8D_ItogoSumNDS + dR8D_VsegoSumNDS);
    MesError.InsertRasch(
      sPageID
    , sR8D_VsegoSumNDS
    , 'Стр. 190 = Раздел 8 Прил1(Стр. 005) + СУММ(Стр. 180)'
    , GD0(sR8D_VsegoSumNDS)+'='+GD0(sR8D_ItogoSumNDS)+'+'+GDS0(dR8D_VsegoSumNDS)
    , 0);
    dR8D_VsegoSumNDS := dR8D_ItogoSumNDS + dR8D_VsegoSumNDS;
    // ВСЕГО по разделу
    //--------------------------------------------------------------------------------------------------------

  }
  while False;
  StopVisual('', 0);

  //----------------------------------------------------------------------------------------------------------
  // проверка данных
  CheckFldR8D;
  //----------------------------------------------------------------------------------------------------------

  Result := True;
@end. // ReCalcFldR8D
//#endregion ПРИЛОЖЕНИЕ К РАЗДЕЛУ 08
//************************************************************************************************************

//============================================================================================================
//#region РАЗДЕЛ 09
//------------------------------------------------------------------------------------------------------------
// Рассчитать поля "РАЗДЕЛА 09"
@Script ReCalcFldR09 : boolean;
@begin
  Result := False;

  //----------------------------------------------------------------------------------------------------------
  // Синхронизация поля "Номер корректировки"
  var sNumCorr : string;  sNumCorr := GetStrVal('Файл/Документ/НомКорр');
  SetFldVal('Файл/Документ/НДС/КнигаПрод/Файл/Документ/НомКорр'    , sNumCorr);
  //----------------------------------------------------------------------------------------------------------

  StartNewVisual(vtNumericVisual, vfTimer+vfBreak+vfConfirm+vfScreenBottom
  , 'Расчет полей: "Раздел 9"...', 0);
  do
  {
    var sAddr : string;  sAddr := 'Файл/Документ/НДС/КнигаПрод/Файл/Документ/КнигаПрод';

    var dR09_VsegoSumRub20 : double;  dR09_VsegoSumRub20 := 0;
    var dR09_VsegoSumRub18 : double;  dR09_VsegoSumRub18 := 0;
    var dR09_VsegoSumRub10 : double;  dR09_VsegoSumRub10 := 0;
    var dR09_VsegoSumRub00 : double;  dR09_VsegoSumRub00 := 0;
    var dR09_VsegoSumNDS20 : double;  dR09_VsegoSumNDS20 := 0;
    var dR09_VsegoSumNDS18 : double;  dR09_VsegoSumNDS18 := 0;
    var dR09_VsegoSumNDS10 : double;  dR09_VsegoSumNDS10 := 0;
    var dR09_VsegoSumNDSNo : double;  dR09_VsegoSumNDSNo := 0;

    var BStrNpp   : LongInt;
    var BStrCount : LongInt;  BStrCount := XMLMap.GetNodeCountByName(sAddr+'/КнПродСтр');
    for (BStrNpp := 0; BStrNpp < BStrCount; BStrNpp++)
    { // побежали по строкам книги
      if (not NextVisual)
      { Break; }

      var sStrAddr : string;  sStrAddr := +sAddr+'/КнПродСтр'+GetIter(BStrNpp);
      var cStrNode : comp  ;  cStrNode := XMLMap.GetPositionByName(sStrAddr, True);

      //0 это не установлен параметр "печать итоговых сумм для лома и шкур"
      If(0 = GetIntVal('Файл/ПечатьИтогЛомШкур'))
      {
        if(    IsKodVidOperLom(GetStrVal(sStrAddr+'/КодВидОпер/Значение'))
            Or IsKodVidOperLom(GetStrVal(sStrAddr+'/КодВидОпер[1]/Значение'))
            Or IsKodVidOperLom(GetStrVal(sStrAddr+'/КодВидОпер[2]/Значение'))
            Or IsKodVidOperLom(GetStrVal(sStrAddr+'/КодВидОпер[3]/Значение'))
          )
        { Continue; }
      }

      dR09_VsegoSumRub20 += Double(XMLMap.GetAttrValueByPathOnLevel(cStrNode, 'СтоимПродСФ20') );
      dR09_VsegoSumRub18 += Double(XMLMap.GetAttrValueByPathOnLevel(cStrNode, 'СтоимПродСФ18') );
      dR09_VsegoSumRub10 += Double(XMLMap.GetAttrValueByPathOnLevel(cStrNode, 'СтоимПродСФ10') );
      dR09_VsegoSumRub00 += Double(XMLMap.GetAttrValueByPathOnLevel(cStrNode, 'СтоимПродСФ0' ) );
      dR09_VsegoSumNDS20 += Double(XMLMap.GetAttrValueByPathOnLevel(cStrNode, 'СумНДССФ20'   ) );
      dR09_VsegoSumNDS18 += Double(XMLMap.GetAttrValueByPathOnLevel(cStrNode, 'СумНДССФ18'   ) );
      dR09_VsegoSumNDS10 += Double(XMLMap.GetAttrValueByPathOnLevel(cStrNode, 'СумНДССФ10'   ) );
      dR09_VsegoSumNDSNo += Double(XMLMap.GetAttrValueByPathOnLevel(cStrNode, 'СтоимПродОсв' ) );
    } // побежали по строкам книги

    SetFldVal(myGetAddr_R09_VsegoSumRub20, dR09_VsegoSumRub20);
    SetFldVal(myGetAddr_R09_VsegoSumRub18, dR09_VsegoSumRub18);
    SetFldVal(myGetAddr_R09_VsegoSumRub10, dR09_VsegoSumRub10);
    SetFldVal(myGetAddr_R09_VsegoSumRub00, dR09_VsegoSumRub00);
    SetFldVal(myGetAddr_R09_VsegoSumNDS20, dR09_VsegoSumNDS20);
    SetFldVal(myGetAddr_R09_VsegoSumNDS18, dR09_VsegoSumNDS18);
    SetFldVal(myGetAddr_R09_VsegoSumNDS10, dR09_VsegoSumNDS10);
    SetFldVal(myGetAddr_R09_VsegoSumNDSNo, dR09_VsegoSumNDSNo);

    var sPageID : string; sPageID := pFH.Func('myGetPageIDR09_F', 1);
    MesError.InsertRasch(sPageID, myGetAddr_R09_VsegoSumRub20, 'Стр. 230 = СУММ(Стр. 170)', GD0(myGetAddr_R09_VsegoSumRub20), 0);
    MesError.InsertRasch(sPageID, myGetAddr_R09_VsegoSumRub18, 'Стр. 235 = СУММ(Стр. 175)', GD0(myGetAddr_R09_VsegoSumRub18), 0);
    MesError.InsertRasch(sPageID, myGetAddr_R09_VsegoSumRub10, 'Стр. 240 = СУММ(Стр. 180)', GD0(myGetAddr_R09_VsegoSumRub10), 0);
    MesError.InsertRasch(sPageID, myGetAddr_R09_VsegoSumRub00, 'Стр. 250 = СУММ(Стр. 190)', GD0(myGetAddr_R09_VsegoSumRub00), 0);
    MesError.InsertRasch(sPageID, myGetAddr_R09_VsegoSumNDS20, 'Стр. 260 = СУММ(Стр. 200)', GD0(myGetAddr_R09_VsegoSumNDS20), 0);
    MesError.InsertRasch(sPageID, myGetAddr_R09_VsegoSumNDS18, 'Стр. 265 = СУММ(Стр. 205)', GD0(myGetAddr_R09_VsegoSumNDS18), 0);
    MesError.InsertRasch(sPageID, myGetAddr_R09_VsegoSumNDS10, 'Стр. 270 = СУММ(Стр. 210)', GD0(myGetAddr_R09_VsegoSumNDS10), 0);
    MesError.InsertRasch(sPageID, myGetAddr_R09_VsegoSumNDSNo, 'Стр. 280 = СУММ(Стр. 220)', GD0(myGetAddr_R09_VsegoSumNDSNo), 0);

  }
  while False;
  StopVisual('', 0);

  //----------------------------------------------------------------------------------------------------------
  // проверка данных
  CheckFldR09;
  //----------------------------------------------------------------------------------------------------------

  Result := True;
@end. // ReCalcFldR09
//#endregion РАЗДЕЛ 09
//************************************************************************************************************

//============================================================================================================
//#region ПРИЛОЖЕНИЕ К РАЗДЕЛУ 09
//------------------------------------------------------------------------------------------------------------
// Рассчитать поля "ПРИЛОЖЕНИЯ К РАЗДЕЛУ 09"
@Script ReCalcFldR9D : boolean;
@begin
  Result := False;

  //----------------------------------------------------------------------------------------------------------
  // Синхронизация поля "Номер корректировки"
  var sNumCorr : string;  sNumCorr := GetStrVal('Файл/Документ/НомКорр');
  SetFldVal('Файл/Документ/НДС/КнигаПродДЛ/Файл/Документ/НомКорр'  , sNumCorr);
  //----------------------------------------------------------------------------------------------------------

  StartNewVisual(vtNumericVisual, vfTimer+vfBreak+vfConfirm+vfScreenBottom
  , 'Расчет полей: "Раздел 9 Приложение 1"...', 0);
  do
  {
    var sAddr   : string;  sAddr   := 'Файл/Документ/НДС/КнигаПродДЛ/Файл/Документ/КнигаПродДЛ';
    var sPageID : string;  sPageID := pFH.Func('myGetPageIDR9D_F', 1);

    //--------------------------------------------------------------------------------------------------------
    // ИТОГО по разделу
    var sR9D_ItogoSumRub20 : string;  sR9D_ItogoSumRub20 := sAddr+'/ИтСтПродКПр20' ;
    var sR9D_ItogoSumRub18 : string;  sR9D_ItogoSumRub18 := sAddr+'/ИтСтПродКПр18' ;
    var sR9D_ItogoSumRub10 : string;  sR9D_ItogoSumRub10 := sAddr+'/ИтСтПродКПр10' ;
    var sR9D_ItogoSumRub00 : string;  sR9D_ItogoSumRub00 := sAddr+'/ИтСтПродКПр0'  ;
    var sR9D_ItogoSumNDS20 : string;  sR9D_ItogoSumNDS20 := sAddr+'/СумНДСИтКПр20' ;
    var sR9D_ItogoSumNDS18 : string;  sR9D_ItogoSumNDS18 := sAddr+'/СумНДСИтКПр18' ;
    var sR9D_ItogoSumNDS10 : string;  sR9D_ItogoSumNDS10 := sAddr+'/СумНДСИтКПр10' ;
    var sR9D_ItogoSumNDSNo : string;  sR9D_ItogoSumNDSNo := sAddr+'/ИтСтПродОсвКПр';

    var dR9D_ItogoSumRub20 : double;  dR9D_ItogoSumRub20 := 0;
    var dR9D_ItogoSumRub18 : double;  dR9D_ItogoSumRub18 := 0;
    var dR9D_ItogoSumRub10 : double;  dR9D_ItogoSumRub10 := 0;
    var dR9D_ItogoSumRub00 : double;  dR9D_ItogoSumRub00 := 0;
    var dR9D_ItogoSumNDS20 : double;  dR9D_ItogoSumNDS20 := 0;
    var dR9D_ItogoSumNDS18 : double;  dR9D_ItogoSumNDS18 := 0;
    var dR9D_ItogoSumNDS10 : double;  dR9D_ItogoSumNDS10 := 0;
    var dR9D_ItogoSumNDSNo : double;  dR9D_ItogoSumNDSNo := 0;
    if (GetIntVal('Файл/ПризнНал9') = 0)
    or (not GetFldVis('Файл/ПризнНал9'))
    { // если "Раздел 9" НЕ существует
      // не пересчитываем ИТОГО по разделу, а берем сумму как есть
      dR9D_ItogoSumRub20 := GetDblVal(sR9D_ItogoSumRub20);
      dR9D_ItogoSumRub18 := GetDblVal(sR9D_ItogoSumRub18);
      dR9D_ItogoSumRub10 := GetDblVal(sR9D_ItogoSumRub10);
      dR9D_ItogoSumRub00 := GetDblVal(sR9D_ItogoSumRub00);
      dR9D_ItogoSumNDS20 := GetDblVal(sR9D_ItogoSumNDS20);
      dR9D_ItogoSumNDS18 := GetDblVal(sR9D_ItogoSumNDS18);
      dR9D_ItogoSumNDS10 := GetDblVal(sR9D_ItogoSumNDS10);
      dR9D_ItogoSumNDSNo := GetDblVal(sR9D_ItogoSumNDSNo);
    }
    else
    { // если "Раздел 9" существует
      dR9D_ItogoSumRub20 := GetDblVal(myGetAddr_R09_VsegoSumRub20);
      dR9D_ItogoSumRub18 := GetDblVal(myGetAddr_R09_VsegoSumRub18);
      dR9D_ItogoSumRub10 := GetDblVal(myGetAddr_R09_VsegoSumRub10);
      dR9D_ItogoSumRub00 := GetDblVal(myGetAddr_R09_VsegoSumRub00);
      dR9D_ItogoSumNDS20 := GetDblVal(myGetAddr_R09_VsegoSumNDS20);
      dR9D_ItogoSumNDS18 := GetDblVal(myGetAddr_R09_VsegoSumNDS18);
      dR9D_ItogoSumNDS10 := GetDblVal(myGetAddr_R09_VsegoSumNDS10);
      dR9D_ItogoSumNDSNo := GetDblVal(myGetAddr_R09_VsegoSumNDSNo);

      SetFldVal(sR9D_ItogoSumRub20, dR9D_ItogoSumRub20);
      SetFldVal(sR9D_ItogoSumRub18, dR9D_ItogoSumRub18);
      SetFldVal(sR9D_ItogoSumRub10, dR9D_ItogoSumRub10);
      SetFldVal(sR9D_ItogoSumRub00, dR9D_ItogoSumRub00);
      SetFldVal(sR9D_ItogoSumNDS20, dR9D_ItogoSumNDS20);
      SetFldVal(sR9D_ItogoSumNDS18, dR9D_ItogoSumNDS18);
      SetFldVal(sR9D_ItogoSumNDS10, dR9D_ItogoSumNDS10);
      SetFldVal(sR9D_ItogoSumNDSNo, dR9D_ItogoSumNDSNo);

      MesError.InsertRasch(sPageID, sR9D_ItogoSumRub20, 'Стр. 020 = Раздел 9(Стр. 230)', GD0(sR9D_ItogoSumRub20)+'='+GD0(myGetAddr_R09_VsegoSumRub20), 0);
      MesError.InsertRasch(sPageID, sR9D_ItogoSumRub18, 'Стр. 025 = Раздел 9(Стр. 235)', GD0(sR9D_ItogoSumRub18)+'='+GD0(myGetAddr_R09_VsegoSumRub18), 0);
      MesError.InsertRasch(sPageID, sR9D_ItogoSumRub10, 'Стр. 030 = Раздел 9(Стр. 240)', GD0(sR9D_ItogoSumRub10)+'='+GD0(myGetAddr_R09_VsegoSumRub10), 0);
      MesError.InsertRasch(sPageID, sR9D_ItogoSumRub00, 'Стр. 040 = Раздел 9(Стр. 250)', GD0(sR9D_ItogoSumRub00)+'='+GD0(myGetAddr_R09_VsegoSumRub00), 0);
      MesError.InsertRasch(sPageID, sR9D_ItogoSumNDS20, 'Стр. 050 = Раздел 9(Стр. 260)', GD0(sR9D_ItogoSumNDS20)+'='+GD0(myGetAddr_R09_VsegoSumNDS20), 0);
      MesError.InsertRasch(sPageID, sR9D_ItogoSumNDS18, 'Стр. 055 = Раздел 9(Стр. 265)', GD0(sR9D_ItogoSumNDS18)+'='+GD0(myGetAddr_R09_VsegoSumNDS18), 0);
      MesError.InsertRasch(sPageID, sR9D_ItogoSumNDS10, 'Стр. 060 = Раздел 9(Стр. 270)', GD0(sR9D_ItogoSumNDS10)+'='+GD0(myGetAddr_R09_VsegoSumNDS10), 0);
      MesError.InsertRasch(sPageID, sR9D_ItogoSumNDSNo, 'Стр. 070 = Раздел 9(Стр. 280)', GD0(sR9D_ItogoSumNDSNo)+'='+GD0(myGetAddr_R09_VsegoSumNDSNo), 0);
    } // если "Раздел 9" существует
    // ИТОГО по разделу
    //--------------------------------------------------------------------------------------------------------

    //--------------------------------------------------------------------------------------------------------
    // расчет по строкам
    var dR9D_VsegoSumRub20 : double;  dR9D_VsegoSumRub20 := 0;
    var dR9D_VsegoSumRub18 : double;  dR9D_VsegoSumRub18 := 0;
    var dR9D_VsegoSumRub10 : double;  dR9D_VsegoSumRub10 := 0;
    var dR9D_VsegoSumRub00 : double;  dR9D_VsegoSumRub00 := 0;
    var dR9D_VsegoSumNDS20 : double;  dR9D_VsegoSumNDS20 := 0;
    var dR9D_VsegoSumNDS18 : double;  dR9D_VsegoSumNDS18 := 0;
    var dR9D_VsegoSumNDS10 : double;  dR9D_VsegoSumNDS10 := 0;
    var dR9D_VsegoSumNDSNo : double;  dR9D_VsegoSumNDSNo := 0;

    var BStrNpp   : LongInt;
    var BStrCount : LongInt;  BStrCount := XMLMap.GetNodeCountByName(sAddr+'/КнПродДЛСтр');
    for (BStrNpp := 0; BStrNpp < BStrCount; BStrNpp++)
    { // побежали по строкам книги
      if (not NextVisual)
      { Break; }

      var sStrAddr : string;  sStrAddr := +sAddr+'/КнПродДЛСтр'+GetIter(BStrNpp);
      var cStrNode : comp  ;  cStrNode := XMLMap.GetPositionByName(sStrAddr, True);

      //0 это не установлен параметр "печать итоговых сумм для лома и шкур"
      If(0 = GetIntVal('Файл/ПечатьИтогЛомШкур'))
      {
        if(    IsKodVidOperLom(GetStrVal(sStrAddr+'/КодВидОпер/Значение'))
            Or IsKodVidOperLom(GetStrVal(sStrAddr+'/КодВидОпер[1]/Значение'))
            Or IsKodVidOperLom(GetStrVal(sStrAddr+'/КодВидОпер[2]/Значение'))
            Or IsKodVidOperLom(GetStrVal(sStrAddr+'/КодВидОпер[3]/Значение'))
          )
        { Continue; }
      }

      dR9D_VsegoSumRub20 += Double(XMLMap.GetAttrValueByPathOnLevel(cStrNode, 'СтоимПродСФ20') );
      dR9D_VsegoSumRub18 += Double(XMLMap.GetAttrValueByPathOnLevel(cStrNode, 'СтоимПродСФ18') );
      dR9D_VsegoSumRub10 += Double(XMLMap.GetAttrValueByPathOnLevel(cStrNode, 'СтоимПродСФ10') );
      dR9D_VsegoSumRub00 += Double(XMLMap.GetAttrValueByPathOnLevel(cStrNode, 'СтоимПродСФ0' ) );
      dR9D_VsegoSumNDS20 += Double(XMLMap.GetAttrValueByPathOnLevel(cStrNode, 'СумНДССФ20'   ) );
      dR9D_VsegoSumNDS18 += Double(XMLMap.GetAttrValueByPathOnLevel(cStrNode, 'СумНДССФ18'   ) );
      dR9D_VsegoSumNDS10 += Double(XMLMap.GetAttrValueByPathOnLevel(cStrNode, 'СумНДССФ10'   ) );
      dR9D_VsegoSumNDSNo += Double(XMLMap.GetAttrValueByPathOnLevel(cStrNode, 'СтоимПродОсв' ) );
    } // побежали по строкам книги
    // расчет по строкам
    //--------------------------------------------------------------------------------------------------------

    //--------------------------------------------------------------------------------------------------------
    // ВСЕГО по разделу
    var sR9D_VsegoSumRub20 : string;  sR9D_VsegoSumRub20 := sAddr+'/СтПродВсП1Р9_20';
    var sR9D_VsegoSumRub18 : string;  sR9D_VsegoSumRub18 := sAddr+'/СтПродВсП1Р9_18';
    var sR9D_VsegoSumRub10 : string;  sR9D_VsegoSumRub10 := sAddr+'/СтПродВсП1Р9_10';
    var sR9D_VsegoSumRub00 : string;  sR9D_VsegoSumRub00 := sAddr+'/СтПродВсП1Р9_0' ;
    var sR9D_VsegoSumNDS20 : string;  sR9D_VsegoSumNDS20 := sAddr+'/СумНДСВсП1Р9_20';
    var sR9D_VsegoSumNDS18 : string;  sR9D_VsegoSumNDS18 := sAddr+'/СумНДСВсП1Р9_18';
    var sR9D_VsegoSumNDS10 : string;  sR9D_VsegoSumNDS10 := sAddr+'/СумНДСВсП1Р9_10';
    var sR9D_VsegoSumNDSNo : string;  sR9D_VsegoSumNDSNo := sAddr+'/СтПродОсвП1Р9Вс';

    SetFldVal(sR9D_VsegoSumRub20, dR9D_ItogoSumRub20 + dR9D_VsegoSumRub20);
    SetFldVal(sR9D_VsegoSumRub18, dR9D_ItogoSumRub18 + dR9D_VsegoSumRub18);
    SetFldVal(sR9D_VsegoSumRub10, dR9D_ItogoSumRub10 + dR9D_VsegoSumRub10);
    SetFldVal(sR9D_VsegoSumRub00, dR9D_ItogoSumRub00 + dR9D_VsegoSumRub00);
    SetFldVal(sR9D_VsegoSumNDS20, dR9D_ItogoSumNDS20 + dR9D_VsegoSumNDS20);
    SetFldVal(sR9D_VsegoSumNDS18, dR9D_ItogoSumNDS18 + dR9D_VsegoSumNDS18);
    SetFldVal(sR9D_VsegoSumNDS10, dR9D_ItogoSumNDS10 + dR9D_VsegoSumNDS10);
    SetFldVal(sR9D_VsegoSumNDSNo, dR9D_ItogoSumNDSNo + dR9D_VsegoSumNDSNo);

    MesError.InsertRasch(sPageID, sR9D_VsegoSumRub20, 'Стр. 310 = Раздел 9 Прил1(Стр. 020) + СУММ(Стр. 250)', GD0(sR9D_VsegoSumRub20)+'='+GD0(sR9D_ItogoSumRub20)+'+'+GDS0(dR9D_VsegoSumRub20), 0);
    MesError.InsertRasch(sPageID, sR9D_VsegoSumRub18, 'Стр. 315 = Раздел 9 Прил1(Стр. 025) + СУММ(Стр. 255)', GD0(sR9D_VsegoSumRub18)+'='+GD0(sR9D_ItogoSumRub18)+'+'+GDS0(dR9D_VsegoSumRub18), 0);
    MesError.InsertRasch(sPageID, sR9D_VsegoSumRub10, 'Стр. 320 = Раздел 9 Прил1(Стр. 030) + СУММ(Стр. 260)', GD0(sR9D_VsegoSumRub10)+'='+GD0(sR9D_ItogoSumRub10)+'+'+GDS0(dR9D_VsegoSumRub10), 0);
    MesError.InsertRasch(sPageID, sR9D_VsegoSumRub00, 'Стр. 330 = Раздел 9 Прил1(Стр. 040) + СУММ(Стр. 270)', GD0(sR9D_VsegoSumRub00)+'='+GD0(sR9D_ItogoSumRub00)+'+'+GDS0(dR9D_VsegoSumRub00), 0);
    MesError.InsertRasch(sPageID, sR9D_VsegoSumNDS20, 'Стр. 340 = Раздел 9 Прил1(Стр. 050) + СУММ(Стр. 280)', GD0(sR9D_VsegoSumNDS20)+'='+GD0(sR9D_ItogoSumNDS20)+'+'+GDS0(dR9D_VsegoSumNDS20), 0);
    MesError.InsertRasch(sPageID, sR9D_VsegoSumNDS18, 'Стр. 345 = Раздел 9 Прил1(Стр. 055) + СУММ(Стр. 285)', GD0(sR9D_VsegoSumNDS18)+'='+GD0(sR9D_ItogoSumNDS18)+'+'+GDS0(dR9D_VsegoSumNDS18), 0);
    MesError.InsertRasch(sPageID, sR9D_VsegoSumNDS10, 'Стр. 350 = Раздел 9 Прил1(Стр. 060) + СУММ(Стр. 290)', GD0(sR9D_VsegoSumNDS10)+'='+GD0(sR9D_ItogoSumNDS10)+'+'+GDS0(dR9D_VsegoSumNDS10), 0);
    MesError.InsertRasch(sPageID, sR9D_VsegoSumNDSNo, 'Стр. 360 = Раздел 9 Прил1(Стр. 070) + СУММ(Стр. 300)', GD0(sR9D_VsegoSumNDSNo)+'='+GD0(sR9D_ItogoSumNDSNo)+'+'+GDS0(dR9D_VsegoSumNDSNo), 0);

    dR9D_VsegoSumRub20 := dR9D_ItogoSumRub20 + dR9D_VsegoSumRub20;
    dR9D_VsegoSumRub18 := dR9D_ItogoSumRub18 + dR9D_VsegoSumRub18;
    dR9D_VsegoSumRub10 := dR9D_ItogoSumRub10 + dR9D_VsegoSumRub10;
    dR9D_VsegoSumRub00 := dR9D_ItogoSumRub00 + dR9D_VsegoSumRub00;
    dR9D_VsegoSumNDS20 := dR9D_ItogoSumNDS20 + dR9D_VsegoSumNDS20;
    dR9D_VsegoSumNDS18 := dR9D_ItogoSumNDS18 + dR9D_VsegoSumNDS18;
    dR9D_VsegoSumNDS10 := dR9D_ItogoSumNDS10 + dR9D_VsegoSumNDS10;
    dR9D_VsegoSumNDSNo := dR9D_ItogoSumNDSNo + dR9D_VsegoSumNDSNo;

    // ВСЕГО по разделу
    //--------------------------------------------------------------------------------------------------------
  }
  while False;
  StopVisual('', 0);

  //----------------------------------------------------------------------------------------------------------
  // проверка данных
  CheckFldR9D;
  //----------------------------------------------------------------------------------------------------------

  Result := True;
@end. // ReCalcFldR9D
//#endregion ПРИЛОЖЕНИЕ К РАЗДЕЛУ 09
//************************************************************************************************************

//============================================================================================================
//#region РАЗДЕЛ 10
//------------------------------------------------------------------------------------------------------------
// Рассчитать поля "РАЗДЕЛА 10"
@Script ReCalcFldR10 : boolean;
@begin
  Result := False;

  //----------------------------------------------------------------------------------------------------------
  // Синхронизация поля "Номер корректировки"
  var sNumCorr : string;  sNumCorr := GetStrVal('Файл/Документ/НомКорр');
  SetFldVal('Файл/Документ/НДС/ЖУчВыстСчФ/Файл/Документ/НомКорр'   , sNumCorr);
  //----------------------------------------------------------------------------------------------------------

  //----------------------------------------------------------------------------------------------------------
  // проверка данных
  CheckFldR10;
  //----------------------------------------------------------------------------------------------------------

  Result := True;
@end. // ReCalcFldR10
//#endregion РАЗДЕЛ 10
//************************************************************************************************************

//============================================================================================================
//#region РАЗДЕЛ 11
//------------------------------------------------------------------------------------------------------------
// Рассчитать поля "РАЗДЕЛА 11"
@Script ReCalcFldR11 : boolean;
@begin
  Result := False;

  //----------------------------------------------------------------------------------------------------------
  // Синхронизация поля "Номер корректировки"
  var sNumCorr : string;  sNumCorr := GetStrVal('Файл/Документ/НомКорр');
  SetFldVal('Файл/Документ/НДС/ЖУчПолучСчФ/Файл/Документ/НомКорр'  , sNumCorr);
  //----------------------------------------------------------------------------------------------------------

  //----------------------------------------------------------------------------------------------------------
  // проверка данных
  CheckFldR11;
  //----------------------------------------------------------------------------------------------------------

  Result := True;
@end. // ReCalcFldR11
//#endregion РАЗДЕЛ 11
//************************************************************************************************************

//============================================================================================================
//#region РАЗДЕЛ 12
//------------------------------------------------------------------------------------------------------------
// Рассчитать поля "РАЗДЕЛА 12"
@Script ReCalcFldR12 : boolean;
@begin
  Result := False;

  //----------------------------------------------------------------------------------------------------------
  // Синхронизация поля "Номер корректировки"
  var sNumCorr : string;  sNumCorr := GetStrVal('Файл/Документ/НомКорр');
  SetFldVal('Файл/Документ/НДС/ВыстСчФ_173.5/Файл/Документ/НомКорр', sNumCorr);
  //----------------------------------------------------------------------------------------------------------

  //----------------------------------------------------------------------------------------------------------
  // проверка данных
  CheckFldR12;
  //----------------------------------------------------------------------------------------------------------

  Result := True;
@end. // ReCalcFldR12
//#endregion РАЗДЕЛ 12
//************************************************************************************************************

//#endregion РАСЧЕТ ДОП РАЗДЕЛОВ
//************************************************************************************************************

//============================================================================================================
//#region РАСЧЕТ ОСНОВНЫХ РАЗДЕЛОВ
//------------------------------------------------------------------------------------------------------------
// Рассчитать поля основных разделов
@Script ReCalcFldRBR : boolean;
  //==========================================================================================================
  //#region СЕРВИС
  //----------------------------------------------------------------------------------------------------------
  #declare _Log(_strAdr)
    MesError.InsertRasch(NameStr, #_strAdr, mes, val, 0);
  #end

  #declare _LogMV(_strAdr, _strMes, _strVal)
    MesError.InsertRasch(NameStr, #_strAdr, #_strMes, #_strVal, 0);
  #end

  #declare _SetFldGV(_fld, _val)
    SetFldVal(#_fld, #_val);
    #_val := GetDblVal(#_fld);
  #end

  #declare SetSNull(_fld)
    XMLMAP.SetIsNullAttrValueByName_Formula(#_fld, 2);
  #end

  #declare _SetNull(_strAdr)
    SetNull(NameStr, #_strAdr);
  #end

  procedure SetNull(NameStr, adr: string);
  begin
    #SetSNull(adr);
  end;

  //----------------------------------------------------------------------------------------------------------
  // Получить значение по умолчанию для поля "Код места, по которому представляется документ"
  function myGetDefPoMestuValue : string;
  {
    // значение "по умолчанию"=214
    Result := '214';
    //  Возможные значения:
    //  116, 213, 214, 215, 216, 227, 231, 250, 331
    //  Значение может зависеть от 5 и 6 знакомест <КПП>:
    //  код 213 только при 50
    //  код 227 только при 4T или 5G
    //  код 250 только при 36
    var sKPP : string;  sKPP := XMLMAP.GetStringAttrValueByName('Файл/Документ/СвНП/НПЮЛ/КПП');
    sKPP := SubStr(sKPP, 5, 2);
    case sKPP of
      '50' : Result := '213';
      '4T' ,
      '5G' : Result := '227';
      '36' : Result := '250';
    end; //case
  } // function myGetDefPoMestuValue
  //#endregion СЕРВИС
  //**********************************************************************************************************
@begin
  Result := False;

  //------------------------------------------------
  //                   ПЕРЕМЕННЫЕ
  //------------------------------------------------
  var NameStr, mes, val : string;


  //==========================================================================================================
  //#region РАСЧЕТ ПОЛЕЙ В ОСНОВНЫХ РАЗДЕЛАХ
  //----------------------------------------------------------------------------------------------------------
  StartNewVisual(vtRotateVisual, vfTimer+vfBreak+vfConfirm+vfScreenBottom
  , 'Расчет полей: "Основные разделы"...', 0);
  do
  {
    //--------------------------------------------------------------------------------------------------------
    //#region ТИТУЛЬНЫЙ ЛИСТ
    { // Дата документа
      var sAddr : string;  sAddr := 'Файл/Документ/ДатаДок';
      if (GetStrNull(sAddr) )
        SetFldVal(sAddr, DateToStr(Cur_Date, XMLMap.GetAttrVFormatByName(sAddr)) );
    }
    //--------------------------------------------------------------------------------------------------------
    { // Налоговый период
      var sAddr : string;  sAddr := 'Файл/Документ/Период';
      if (GetStrVal(sAddr) <> myGetDefPeriodCodeValue)
        SetFldVal(sAddr, myGetDefPeriodCodeValue);
    }
    //--------------------------------------------------------------------------------------------------------
    { // Налоговый период
      var sAddr : string;  sAddr := 'Файл/Документ/ПоМесту';
      if (GetStrNull(sAddr) )
        SetFldVal(sAddr, myGetDefPoMestuValue);
    }
    //#endregion ТИТУЛЬНЫЙ ЛИСТ
    //--------------------------------------------------------------------------------------------------------

    //--------------------------------------------------------------------------------------------------------
    //#region РАЗДЕЛ 2
    do
    {
      var i : LongInt;
      var SumUplNA_count : LongInt;  SumUplNA_count := XMLMap.GetNodeCountByName('Файл/Документ/НДС/СумУплНА');
      for (i := 0; i < SumUplNA_count; i++)
      {
        NameStr := pFH.Func('myGetPageIDR02_0', i+1);

        var a2_060, a2_080, a2_090, a2_100 : string;
        var r2_060, u2_080, u2_090, u2_100 : double;

        a2_060 := 'Файл/Документ/НДС/СумУплНА'+GetIter(i)+'/СумИсчисл'    ;
        a2_080 := 'Файл/Документ/НДС/СумУплНА'+GetIter(i)+'/СумИсчислОтгр';   u2_080 := GetDblVal(a2_080);
        a2_090 := 'Файл/Документ/НДС/СумУплНА'+GetIter(i)+'/СумИсчислОпл' ;   u2_090 := GetDblVal(a2_090);
        a2_100 := 'Файл/Документ/НДС/СумУплНА'+GetIter(i)+'/СумИсчислНА'  ;   u2_100 := GetDblVal(a2_100);

        if     (not GetStrNull(a2_080)
            or  not GetStrNull(a2_090))
           and  not GetStrNull(a2_100)
        {
          r2_060 := (u2_080 + u2_090) - u2_100;

          #_SetFldGV(a2_060, r2_060);

          mes := 'Стр. 060 = (стр. 080 + стр. 090) - стр. 100';
          val := GD0(a2_060)+' = ('+GDS0(u2_080)+' + '+GDS0(u2_090)+') - '+GDS0(u2_100);
          #_Log(a2_060);
        }
        else
        {
          if     not GetStrNull(a2_080)
             and not GetStrNull(a2_090)
          {
            r2_060 := u2_080 + u2_090;

            #_SetFldGV(a2_060, r2_060);

            mes := 'Стр. 060 = стр. 080 + стр. 090';
            val := GD0(a2_060)+' = '+GDS0(u2_080)+' + '+GDS0(u2_090);
            #_Log(a2_060);
          }
          else
          {
            if     not GetStrNull(a2_080)
               and     GetStrNull(a2_090)
            {
              r2_060 := u2_080;

              #_SetFldGV(a2_060, r2_060);

              mes := 'Стр. 060 = стр. 080';
              val := GD0(a2_060)+' = '+GDS0(u2_080);
              #_Log(a2_060);
            }
            else
              if         GetStrNull(a2_080)
                 and not GetStrNull(a2_090)
              {
                r2_060 := u2_090;

                #_SetFldGV(a2_060, r2_060);

                mes := 'Стр. 060 = стр. 090';
                val := GD0(a2_060)+' = '+GDS0(u2_090);
                #_Log(a2_060);
              }
              else #_SetNull(a2_060);
          }
        }
      } // for
    }
    while False;
    //#endregion РАЗДЕЛ 2
    //--------------------------------------------------------------------------------------------------------

    //--------------------------------------------------------------------------------------------------------
    //#region РАЗДЕЛ 3
    do
    {
      //------------------------------------------------------------------------------------------------------
      //#region РАЗДЕЛ 3 ОСНОВНОЙ
      {
        NameStr := pFH.Func('myGetPageIDR03_0');

        var a3_010__3, a3_020__3, a3_030__3, a3_040__3, a3_041__3, a3_042__3, a3_043__3, a3_044__3, a3_045__3, a3_046__3, a3_050__3, a3_060__3, a3_070__3, a3_105__3, a3_109__3
          , a3_010__5, a3_020__5, a3_030__5, a3_040__5, a3_041__5, a3_042__5, a3_043__5, a3_044__5, a3_045__5, a3_046__5, a3_050__5, a3_060__5, a3_070__5, a3_080__5, a3_105__5
          , a3_109__5, a3_110__5, a3_115__5, a3_118__5 , a3_120, a3_125, a3_130, a3_135, a3_140, a3_150, a3_160, a3_170, a3_180, a3_185, a3_190, a3_200_210 : string;

        a3_010__3  := 'Файл/Документ/НДС/СумУпл164/СумНалОб/РеалТов20/НалБаза'       ;     a3_010__5 := 'Файл/Документ/НДС/СумУпл164/СумНалОб/РеалТов20/СумНал'       ;
        a3_020__3  := 'Файл/Документ/НДС/СумУпл164/СумНалОб/РеалТов10/НалБаза'       ;     a3_020__5 := 'Файл/Документ/НДС/СумУпл164/СумНалОб/РеалТов10/СумНал'       ;
        a3_030__3  := 'Файл/Документ/НДС/СумУпл164/СумНалОб/РеалТов120/НалБаза'      ;     a3_030__5 := 'Файл/Документ/НДС/СумУпл164/СумНалОб/РеалТов120/СумНал'      ;
        a3_040__3  := 'Файл/Документ/НДС/СумУпл164/СумНалОб/РеалТов110/НалБаза'      ;     a3_040__5 := 'Файл/Документ/НДС/СумУпл164/СумНалОб/РеалТов110/СумНал'      ;
        a3_041__3  := 'Файл/Документ/НДС/СумУпл164/СумНалОб/РеалТов18/НалБаза'       ;     a3_041__5 := 'Файл/Документ/НДС/СумУпл164/СумНалОб/РеалТов18/СумНал'       ;
        a3_042__3  := 'Файл/Документ/НДС/СумУпл164/СумНалОб/РеалТов118/НалБаза'      ;     a3_042__5 := 'Файл/Документ/НДС/СумУпл164/СумНалОб/РеалТов118/СумНал'      ;
        a3_043__3  := 'Файл/Документ/НДС/СумУпл164/СумНалОб/РеалТов7.164/НалБаза'    ;     a3_043__5 := 'Файл/Документ/НДС/СумУпл164/СумНалОб/РеалТов7.164/СумНал'    ;
        a3_044__3  := 'Файл/Документ/НДС/СумУпл164/СумНалОб/РеалТовРознЧек/НалБаза'  ;     a3_044__5 := 'Файл/Документ/НДС/СумУпл164/СумНалОб/РеалТовРознЧек/СумНал'  ;
        a3_045__3  := 'Файл/Документ/НДС/СумУпл164/СумНалОб/РеалСрок151.1_20/НалБаза';     a3_045__5 := 'Файл/Документ/НДС/СумУпл164/СумНалОб/РеалСрок151.1_20/СумНал';
        a3_046__3  := 'Файл/Документ/НДС/СумУпл164/СумНалОб/РеалСрок151.1_10/НалБаза';     a3_046__5 := 'Файл/Документ/НДС/СумУпл164/СумНалОб/РеалСрок151.1_10/СумНал';
        a3_050__3  := 'Файл/Документ/НДС/СумУпл164/СумНалОб/РеалПредИК/НалБаза'      ;     a3_050__5 := 'Файл/Документ/НДС/СумУпл164/СумНалОб/РеалПредИК/СумНал'      ;
        a3_060__3  := 'Файл/Документ/НДС/СумУпл164/СумНалОб/ВыпСМРСоб/НалБаза'       ;     a3_060__5 := 'Файл/Документ/НДС/СумУпл164/СумНалОб/ВыпСМРСоб/СумНал'       ;
        a3_070__3  := 'Файл/Документ/НДС/СумУпл164/СумНалОб/ОплПредПост/НалБаза'     ;     a3_070__5 := 'Файл/Документ/НДС/СумУпл164/СумНалОб/ОплПредПост/СумНал'     ;
                                                                                           a3_080__5 := 'Файл/Документ/НДС/СумУпл164/СумНалОб/СумНалВосст/СумНалВс'   ;
        a3_105__3  := 'Файл/Документ/НДС/СумУпл164/СумНалОб/КорРеалТов/НалБаза'      ;     a3_105__5 := 'Файл/Документ/НДС/СумУпл164/СумНалОб/КорРеалТов/СумНал'      ;
        a3_109__3  := 'Файл/Документ/НДС/СумУпл164/СумНалОб/КорРеалПредИК/НалБаза'   ;     a3_109__5 := 'Файл/Документ/НДС/СумУпл164/СумНалОб/КорРеалПредИК/СумНал'   ;
                                                                                           a3_110__5 := 'Файл/Документ/НДС/СумУпл164/СумНалОб/УплДеклар151.1/Значение';
                                                                                           a3_115__5 := 'Файл/Документ/НДС/СумУпл164/СумНалОб/УплДеклар173.6/Значение';
                                                                                           a3_118__5 := 'Файл/Документ/НДС/СумУпл164/СумНалОб/НалВосстОбщ'            ;
        a3_120     := 'Файл/Документ/НДС/СумУпл164/СумНалВыч/НалПредНППриоб'         ;
        a3_125     := 'Файл/Документ/НДС/СумУпл164/СумНалВыч/НалПредНПКапСтр'        ;
        a3_130     := 'Файл/Документ/НДС/СумУпл164/СумНалВыч/НалПредНППок'           ;
        a3_135     := 'Файл/Документ/НДС/СумУпл164/СумНалВыч/НалИсчРозн'             ;
        a3_140     := 'Файл/Документ/НДС/СумУпл164/СумНалВыч/НалИсчСМР'              ;
        a3_150     := 'Файл/Документ/НДС/СумУпл164/СумНалВыч/НалУплТамож'            ;
        a3_160     := 'Файл/Документ/НДС/СумУпл164/СумНалВыч/НалУплНОТовТС'          ;
        a3_170     := 'Файл/Документ/НДС/СумУпл164/СумНалВыч/НалИсчПрод'             ;
        a3_180     := 'Файл/Документ/НДС/СумУпл164/СумНалВыч/НалУплПокНА'            ;
        a3_185     := 'Файл/Документ/НДС/СумУпл164/СумНалВыч/НалВыч171.14'           ;
        a3_190     := 'Файл/Документ/НДС/СумУпл164/СумНалВыч/НалВычОбщ'              ;
        a3_200_210 := 'Файл/Документ/НДС/СумУпл164/НалПУ164'                         ;

        var m3_010__3, m3_020__3, m3_030__3, m3_040__3, m3_041__3, m3_042__3, m3_045__3, m3_046__3, m3_060__3 : string;

        m3_010__3 := 'Стр. 010: гр. 5 = гр. 3 * 20 / 100';
        m3_020__3 := 'Стр. 020: гр. 5 = гр. 3 * 10 / 100';
        m3_030__3 := 'Стр. 030: гр. 5 = гр. 3 * 20 / 120';
        m3_040__3 := 'Стр. 040: гр. 5 = гр. 3 * 10 / 110';
        m3_041__3 := 'Стр. 041: гр. 5 = гр. 3 * 18 / 100';
        m3_042__3 := 'Стр. 042: гр. 5 = гр. 3 * 18 / 118';
        m3_045__3 := 'Стр. 045: гр. 5 = гр. 3 * 20 / 100';
        m3_046__3 := 'Стр. 046: гр. 5 = гр. 3 * 10 / 100';
        m3_060__3 := 'Стр. 060: гр. 5 = гр. 3 * 20 / 100';

        var u3_010__3, u3_020__3, u3_030__3, u3_040__3, u3_041__3, u3_042__3, u3_045__3, u3_046__3, u3_050__5, u3_060__3, u3_070__5, u3_080__5, u3_105__5, u3_109__5, u3_110__5, u3_115__5
          , u3_120, u3_125, u3_130, u3_135, u3_150, u3_160, u3_170, u3_180, u3_185
          , r3_010__5, r3_020__5, r3_030__5, r3_040__5, r3_041__5, r3_042__5, r3_045__5, r3_046__5, r3_060__5, r3_118__5, r3_140, r3_190, r3_200_210 : double;

        u3_010__3 := GetDblVal(a3_010__3);
        u3_020__3 := GetDblVal(a3_020__3);
        u3_030__3 := GetDblVal(a3_030__3);
        u3_040__3 := GetDblVal(a3_040__3);
        u3_041__3 := GetDblVal(a3_041__3);
        u3_042__3 := GetDblVal(a3_042__3);
        u3_045__3 := GetDblVal(a3_045__3);
        u3_046__3 := GetDblVal(a3_046__3);
                                            u3_050__5 := GetDblVal(a3_050__5);
        u3_060__3 := GetDblVal(a3_060__3);
                                            u3_070__5 := GetDblVal(a3_070__5);
                                            u3_080__5 := GetDblVal(a3_080__5);
                                            u3_105__5 := GetDblVal(a3_105__5);
                                            u3_109__5 := GetDblVal(a3_109__5);
                                            u3_110__5 := GetDblVal(a3_110__5);
                                            u3_115__5 := GetDblVal(a3_115__5);
        u3_120    := GetDblVal(a3_120   );
        u3_125    := GetDblVal(a3_125   );
        u3_130    := GetDblVal(a3_130   );
        u3_135    := GetDblVal(a3_135   );
        u3_150    := GetDblVal(a3_150   );
        u3_160    := GetDblVal(a3_160   );
        u3_170    := GetDblVal(a3_170   );
        u3_180    := GetDblVal(a3_180   );
        u3_185    := GetDblVal(a3_185   );

        r3_010__5 := r3_020__5 := r3_030__5 := r3_040__5 := r3_041__5 := r3_042__5 := r3_045__5 := r3_046__5 := r3_060__5 := r3_118__5 := r3_140 := r3_190 := r3_200_210 := 0;

        if GetStrNull(a3_010__3) { #_SetNull(a3_010__5); } else { mes := m3_010__3; r3_010__5 := u3_010__3 * 20 / 100;  #_SetFldGV(a3_010__5, r3_010__5)  val := GD0(a3_010__5)+' = '+GDS0(u3_010__3)+' * 20 / 100'; #_Log(a3_010__5); }
        if GetStrNull(a3_020__3) { #_SetNull(a3_020__5); } else { mes := m3_020__3; r3_020__5 := u3_020__3 * 10 / 100;  #_SetFldGV(a3_020__5, r3_020__5)  val := GD0(a3_020__5)+' = '+GDS0(u3_020__3)+' * 10 / 100'; #_Log(a3_020__5); }
        if GetStrNull(a3_030__3) { #_SetNull(a3_030__5); } else { mes := m3_030__3; r3_030__5 := u3_030__3 * 20 / 120;  #_SetFldGV(a3_030__5, r3_030__5)  val := GD0(a3_030__5)+' = '+GDS0(u3_030__3)+' * 20 / 120'; #_Log(a3_030__5); }
        if GetStrNull(a3_040__3) { #_SetNull(a3_040__5); } else { mes := m3_040__3; r3_040__5 := u3_040__3 * 10 / 110;  #_SetFldGV(a3_040__5, r3_040__5)  val := GD0(a3_040__5)+' = '+GDS0(u3_040__3)+' * 10 / 110'; #_Log(a3_040__5); }
        if GetStrNull(a3_041__3) { #_SetNull(a3_041__5); } else { mes := m3_041__3; r3_041__5 := u3_041__3 * 18 / 100;  #_SetFldGV(a3_041__5, r3_041__5)  val := GD0(a3_041__5)+' = '+GDS0(u3_041__3)+' * 18 / 100'; #_Log(a3_041__5); }
        if GetStrNull(a3_042__3) { #_SetNull(a3_042__5); } else { mes := m3_042__3; r3_042__5 := u3_042__3 * 18 / 118;  #_SetFldGV(a3_042__5, r3_042__5)  val := GD0(a3_042__5)+' = '+GDS0(u3_042__3)+' * 18 / 118'; #_Log(a3_042__5); }
        if GetStrNull(a3_045__3) { #_SetNull(a3_045__5); } else { mes := m3_045__3; r3_045__5 := u3_045__3 * 20 / 100;  #_SetFldGV(a3_045__5, r3_045__5)  val := GD0(a3_045__5)+' = '+GDS0(u3_045__3)+' * 20 / 100'; #_Log(a3_045__5); }
        if GetStrNull(a3_046__3) { #_SetNull(a3_046__5); } else { mes := m3_046__3; r3_046__5 := u3_046__3 * 10 / 100;  #_SetFldGV(a3_046__5, r3_046__5)  val := GD0(a3_046__5)+' = '+GDS0(u3_046__3)+' * 10 / 100'; #_Log(a3_046__5); }
        if GetStrNull(a3_060__3) { #_SetNull(a3_060__5); } else { mes := m3_060__3; r3_060__5 := u3_060__3 * 20 / 100;  #_SetFldGV(a3_060__5, r3_060__5)  val := GD0(a3_060__5)+' = '+GDS0(u3_060__3)+' * 20 / 100'; #_Log(a3_060__5); }

        if (  GetStrNull(a3_010__5) and GetStrNull(a3_020__5) and GetStrNull(a3_030__5) and GetStrNull(a3_040__5)
          and GetStrNull(a3_041__5) and GetStrNull(a3_042__5) and GetStrNull(a3_045__5) and GetStrNull(a3_046__5)
          and GetStrNull(a3_050__5) and GetStrNull(a3_060__5) and GetStrNull(a3_070__5) and GetStrNull(a3_080__5)
          and GetStrNull(a3_105__5) and GetStrNull(a3_109__5) and GetStrNull(a3_110__5) and GetStrNull(a3_115__5) )
        {
          #_SetNull(a3_118__5);
        }
        else {
          r3_118__5 := r3_010__5 + r3_020__5 + r3_030__5 + r3_040__5 + r3_041__5 + r3_042__5 + r3_045__5 + r3_046__5 + u3_050__5 + r3_060__5 + u3_070__5 + u3_080__5 + u3_105__5 + u3_109__5 + u3_110__5 + u3_115__5;
          #_SetFldGV(a3_118__5, r3_118__5)
          mes := 'стр. 118 = сумма стр. 010,  020,  030,  040,  041,  042,  045,  046,  050,  060,  070,  080,  105,  109,  110 и 115';
          val := GD0(a3_118__5)+' = '+GD0(a3_010__5)+' + '+GD0(a3_020__5)+' + '+GD0(a3_030__5)+' + '+GD0(a3_040__5)+' + '+GD0(a3_041__5)
                               +' + '+GD0(a3_042__5)+' + '+GD0(a3_045__5)+' + '+GD0(a3_046__5)+' + '+GD0(a3_050__5)+' + '+GD0(a3_060__5)
                               +' + '+GD0(a3_070__5)+' + '+GD0(a3_080__5)+' + '+GD0(a3_105__5)+' + '+GD0(a3_109__5)+' + '+GD0(a3_110__5)
                               +' + '+GD0(a3_115__5);
          #_Log(a3_118__5);
        }

        if GetStrNull(a3_060__5) {
          #_SetNull(a3_140);
        }
        else  {
          r3_140 := r3_060__5;
          #_SetFldGV(a3_140, r3_140)
          mes := 'Стр. 140 = гр. 5, стр. 060';
          val := GD0(a3_140)+' = '+GDS0(r3_060__5);
          #_Log(a3_140);
        }

        if (    GetStrNull(a3_120)
            and GetStrNull(a3_130)
            and GetStrNull(a3_135)
            and GetStrNull(a3_140)
            and GetStrNull(a3_150)
            and GetStrNull(a3_160)
            and GetStrNull(a3_170)
            and GetStrNull(a3_180)
            and GetStrNull(a3_185) )
        {
          #_SetNull(a3_190);
        }
        else {
          r3_190 := u3_120 + u3_130 + u3_135 + r3_140 + u3_150 + u3_160 + u3_170 + u3_180 + u3_185;
          #_SetFldGV(a3_190, r3_190)
          mes := 'Cтр. 190 = сумма стр. 120, 130, 135, 140, 150, 160, 170, 180 и 185';
          val := GD0(a3_190)+' = '+GD0(a3_120)+' + '+GD0(a3_130)+' + '+GD0(a3_135)+' + '+GD0(a3_140)+' + '+GD0(a3_150)
                            +' + '+GD0(a3_160)+' + '+GD0(a3_170)+' + '+GD0(a3_180)+' + '+GD0(a3_185);
          #_Log(a3_190);
        }

        if (    GetStrNull(a3_118__5)
            and GetStrNull(a3_190   ) )
        {
          #_SetNull(a3_200_210);
        }
        else {
          r3_200_210 := r3_118__5 - r3_190;
          #_SetFldGV(a3_200_210, r3_200_210)
          mes := 'Стр. 200/210 = стр. 118, гр. 5 - стр. 190';
          val := GD0(a3_200_210)+' = '+GDS0(r3_118__5)+' - '+GDS0(r3_190);
          #_Log(a3_200_210);
        }
      }
      //#endregion РАЗДЕЛ 3 ОСНОВНОЙ
      //------------------------------------------------------------------------------------------------------

      //------------------------------------------------------------------------------------------------------
      //#region РАЗДЕЛ 3 ПРИЛОЖЕНИЕ 1
      //------------------------------------------------------------------------------------------------------
      do
      {
        var i : LongInt;
        var SumVosUpl_count : LongInt;  SumVosUpl_count := XMLMap.GetNodeCountByName('Файл/Документ/НДС/СумУпл164/СумВосУпл');
        for (i := 0; i < SumVosUpl_count; i++)
        {
          NameStr := pFH.Func('myGetPageIDR03_1', i+1);

          var a31_060, a31_070__3, a31_070__4 : string;
          var u31_060, u31_070__3, r31_070__4 : double;

          a31_060 := 'Файл/Документ/НДС/СумУпл164/СумВосУпл'+GetIter(i)+'/НалВычООС';   u31_060 := GetDblVal(a31_060);

          var j : LongInt;
          var aSvedNalGod : string;  aSvedNalGod := 'Файл/Документ/НДС/СумУпл164/СумВосУпл'+GetIter(i)+'/СведНалГод';
          var SvedNalGod_count : LongInt;  SvedNalGod_count := XMLMap.GetNodeCountByName(aSvedNalGod);
          for (j := 0; j < SvedNalGod_count; j++)
          {
            a31_070__3 := 'Файл/Документ/НДС/СумУпл164/СумВосУпл'+GetIter(i)+'/СведНалГод'+GetIter(j)+'/ДоляНеОбл';   u31_070__3 := GetDblVal(a31_070__3);
            a31_070__4 := 'Файл/Документ/НДС/СумУпл164/СумВосУпл'+GetIter(i)+'/СведНалГод'+GetIter(j)+'/НалГод'   ;

            if (    not GetStrNull(a31_060   )
                and not GetStrNull(a31_070__3))
            {
              r31_070__4 := (u31_060 / 10) * u31_070__3 / 100;
              #_SetFldGV(a31_070__4, r31_070__4);
              mes := 'Стр. 070 ('+String(j+1)+'): гр. 4 = (стр. 070 / 10) * гр. 3 / 100';
              val := GD0(a31_070__4)+' = ('+GDS0(u31_060)+' / 10) * '+GDS0(u31_070__3)+' / 100';
              #_Log(a31_070__4);
            }
            else {r31_070__4 := 0; #_SetNull(a31_070__4);}
          }
        } // for
      }
      while False;
      //#endregion РАЗДЕЛ 3 ПРИЛОЖЕНИЕ 1
      //------------------------------------------------------------------------------------------------------
    }
    while False;
    //#endregion РАЗДЕЛ 3
    //--------------------------------------------------------------------------------------------------------

    //--------------------------------------------------------------------------------------------------------
    //#region РАЗДЕЛ 4
    do
    {
      //------------------------------------------------------------------------------------------------------
      //#region РАЗДЕЛ 4 ОСНОВНОЙ
      do
      {
        NameStr := pFH.Func('myGetPageIDR04_0');

        var d030 : double;  d030 := 0;  var flUse030 : boolean;  flUse030 := False;
        var d040 : double;  d040 := 0;  var flUse040 : boolean;  flUse040 := False;
        var d050 : double;  d050 := 0;  var flUse050 : boolean;  flUse050 := False;
        var d080 : double;  d080 := 0;  var flUse080 : boolean;  flUse080 := False;

        //----------------------------------------------------------------------------------------------------
        // Расчет суммы налога, подлежащей восстановлению, по коду операции
        do
        {
          var sParentAddr : string;  sParentAddr := 'Файл/Документ/НДС/НалПодтв0/СумОпер4';

          var i : LongInt;
          var recCount : LongInt;  recCount := XMLMap.GetNodeCountByName(sParentAddr);
          for (i := 0; i < recCount; i++)
          {
            var sPageAddr : string;  sPageAddr := sParentAddr+GetIter(i);
            d030 += GetDblVal(sPageAddr+'/НалВычПод');  if (not flUse030) { flUse030 := not GetStrNull(sPageAddr+'/НалВычПод'); }
            d040 += GetDblVal(sPageAddr+'/НалНеПод' );  if (not flUse040) { flUse040 := not GetStrNull(sPageAddr+'/НалНеПод' ); }
            d050 += GetDblVal(sPageAddr+'/НалВосст' );  if (not flUse050) { flUse050 := not GetStrNull(sPageAddr+'/НалВосст' ); }
          } // for
        }
        while False;
        // Расчет суммы налога, подлежащей восстановлению, по коду операции
        //----------------------------------------------------------------------------------------------------

        //----------------------------------------------------------------------------------------------------
        // Корректировка налоговой базы при возврате товаров
        do
        {
          var sParentAddr : string;  sParentAddr := 'Файл/Документ/НДС/НалПодтв0/КорНБВозврТов';

          var i : LongInt;
          var recCount : LongInt;  recCount := XMLMap.GetNodeCountByName(sParentAddr);
          for (i := 0; i < recCount; i++)
          {
            var sPageAddr : string;  sPageAddr := sParentAddr+GetIter(i);
            d080 += GetDblVal(sPageAddr+'/НалВосст');  if (not flUse080) { flUse080 := not GetStrNull(sPageAddr+'/НалВосст'); }
          } // for
        }
        while False;
        // Корректировка налоговой базы при возврате товаров
        //----------------------------------------------------------------------------------------------------

        //----------------------------------------------------------------------------------------------------
        // Итого сумма налога, исчисленная к возмещению по  Разделу 4 / Итого сумма налога, исчисленная к уплат
        d030 := Round(d030);
        d040 := Round(d040);
        d050 := Round(d050);
        d080 := Round(d080);

        var sItogAddr : string;  sItogAddr := 'Файл/Документ/НДС/НалПодтв0/СумИсчислИтог';
        if  (not flUse030)
        and (not flUse040)
        and (not flUse050)
        and (not flUse080)
        { // если НЕ было данных для расчета
          #_SetNull(sItogAddr);
        } // если НЕ было данных для расчета
        else
        { // если были данные для расчета
          var d120_130 : double;  d120_130 := (d030+d040)-(d050+d080);
          #_SetFldGV(sItogAddr, d120_130);
          var sFormula : string;  sFormula := 'Стр. 120/130'
            +' = (cумма(cтр. 030) + cумма(cтр. 040))'
            +' - (cумма(cтр. 050) + cумма(cтр. 080))'
          ;
          var sRaschet : string;  sRaschet := GDS0(d120_130)
            +FormatStr_2(' = (%S+%S)', GDS0(d030), GDS0(d040) )
            +FormatStr_2(' - (%S+%S)', GDS0(d050), GDS0(d080) )
          ;
          MesError.InsertRasch(NameStr, sItogAddr, sFormula, sRaschet, 0);
        } // если были данные для расчета
        // Итого сумма налога, исчисленная к возмещению по  Разделу 4 / Итого сумма налога, исчисленная к уплат
        //----------------------------------------------------------------------------------------------------
      }
      while False;
      //#endregion РАЗДЕЛ 4 ОСНОВНОЙ
      //------------------------------------------------------------------------------------------------------
    }
    while False;
    //#endregion РАЗДЕЛ 4
    //--------------------------------------------------------------------------------------------------------

    //--------------------------------------------------------------------------------------------------------
    //#region РАЗДЕЛ 5
    do
    {
      var dopSum_5_050, dopSum_5_070 : double;
      var dopInf_5_050, dopInf_5_070 : string;

      var i : LongInt;
      var SumPer_count : LongInt;  SumPer_count := XMLMap.GetNodeCountByName('Файл/Документ/НДС/НалВычПред0/СумПер');
      for (i := 0; i < SumPer_count; i++)
      {
        dopSum_5_050 := 0;   dopInf_5_050 := '';
        dopSum_5_070 := 0;   dopInf_5_070 := '';

        var j : LongInt;
        var aSumOper5      : string;  aSumOper5 := 'Файл/Документ/НДС/НалВычПред0/СумПер'+GetIter(i)+'/СумОпер5';
        var SumOper5_count : string;  SumOper5_count := XMLMap.GetNodeCountByName(aSumOper5);
        for (j := 0; j < SumOper5_count; j++)
        {
          if GetStrNull('Файл/Документ/НДС/НалВычПред0/СумПер'+GetIter(i)+'/СумОпер5'+GetIter(j)+'/КодОпер')
          { Continue; }

          var a5_050, a5_070 : string;
          var u5_050, u5_070 : double;
          a5_050 := 'Файл/Документ/НДС/НалВычПред0/СумПер'+GetIter(i)+'/СумОпер5'+GetIter(j)+'/НалВычПод'  ;
          a5_070 := 'Файл/Документ/НДС/НалВычПред0/СумПер'+GetIter(i)+'/СумОпер5'+GetIter(j)+'/НалВычНеПод';

          if (not GetStrNull(a5_050)) {u5_050 := GetDblVal(a5_050);   dopSum_5_050 := dopSum_5_050 + u5_050;   dopInf_5_050 := dopInf_5_050+' + '+GDS0(u5_050);}
          if (not GetStrNull(a5_070)) {u5_070 := GetDblVal(a5_070);   dopSum_5_070 := dopSum_5_070 + u5_070;   dopInf_5_070 := dopInf_5_070+' + '+GDS0(u5_070);}
        } // for J
      } // for I

      NameStr := pFH.Func('myGetPageIDR05_F', i+1);

      if (dopInf_5_050 <> '') dopInf_5_050 := Substr(dopInf_5_050, 4, Length(dopInf_5_050) - 3);
      if (dopInf_5_070 <> '') dopInf_5_070 := Substr(dopInf_5_070, 4, Length(dopInf_5_070) - 3);

      var a5_080, a5_090 : string;
      a5_080  := 'Файл/Документ/НДС/НалВычПред0/СумВозмПдтв'  ;
      a5_090  := 'Файл/Документ/НДС/НалВычПред0/СумВозмНеПдтв';
      var r5_080, r5_090 : double;

      if (dopInf_5_050 <> '')
      then {r5_080 := dopSum_5_050;   #_SetFldGV(a5_080, r5_080);   mes := 'Стр. 080 = cумма(cтр. 050)';   val := GD0(a5_080)+' = ('+dopInf_5_050+')';   #_Log(a5_080);}
      else {r5_080 := 0; #_SetNull(a5_080);}

      if (dopInf_5_070 <> '')
      then {r5_090 := dopSum_5_070;   #_SetFldGV(a5_090, r5_090);   mes := 'Стр. 090 = cумма(cтр. 070)';   val := GD0(a5_090)+' = ('+dopInf_5_070+')';   #_Log(a5_090);}
      else {r5_090 := 0; #_SetNull(a5_090);}
    }
    while False;
    //#endregion РАЗДЕЛ 5
    //--------------------------------------------------------------------------------------------------------

    //--------------------------------------------------------------------------------------------------------
    //#region РАЗДЕЛ 6
    do
    {
      //------------------------------------------------------------------------------------------------------
      //#region РАЗДЕЛ 6 ОСНОВНОЙ
      //------------------------------------------------------------------------------------------------------
      {
        NameStr := pFH.Func('myGetPageIDR06_0');

        //----------------------------------------------------------------------------------------------------
        // Расчет суммы налога по коду операции
        var d030 : double;  d030 := 0;
        var d040 : double;  d040 := 0;
        do
        {
          var sParentAddr : string;  sParentAddr := 'Файл/Документ/НДС/НалНеПодтв0/СумОпер6';

          var i : LongInt;
          var recCount : LongInt;  recCount := XMLMap.GetNodeCountByName(sParentAddr);
          for (i := 0; i < recCount; i++)
          {
            var sPageAddr : string;  sPageAddr := sParentAddr+GetIter(i);
            d030 += GetDblVal(sPageAddr+'/СумНал164'  );
            d040 += GetDblVal(sPageAddr+'/НалВычНеПод');
          } // for
          d030 := Round(d030);
          d040 := Round(d040);
        }
        while False;
        // Расчет суммы налога по коду операции
        //----------------------------------------------------------------------------------------------------

        //----------------------------------------------------------------------------------------------------
        // Корректировка сумм налога при возврате товаров
        var d090 : double;  d090 := 0;
        var d100 : double;  d100 := 0;
        do
        {
          var sParentAddr : string;  sParentAddr := 'Файл/Документ/НДС/НалНеПодтв0/КорНалВозврТов';

          var i : LongInt;
          var recCount : LongInt;  recCount := XMLMap.GetNodeCountByName(sParentAddr);
          for (i := 0; i < recCount; i++)
          {
            var sPageAddr : string;  sPageAddr := sParentAddr+GetIter(i);
            d090 += GetDblVal(sPageAddr+'/КорИсч.164.23');
            d100 += GetDblVal(sPageAddr+'/НалВосст'     );
          } // for
          d090 := Round(d090);
          d100 := Round(d100);
        }
        while False;
        // Корректировка сумм налога при возврате товаров
        //----------------------------------------------------------------------------------------------------

        //----------------------------------------------------------------------------------------------------
        // Корректировка сумм налога при изменении цены реализованных товаров (работ, услуг)
        var d130 : double;  d130 := 0;
        var d150 : double;  d150 := 0;
        do
        {
          var sParentAddr : string;  sParentAddr := 'Файл/Документ/НДС/НалНеПодтв0/КорНалИзмЦен';

          var i : LongInt;
          var recCount : LongInt;  recCount := XMLMap.GetNodeCountByName(sParentAddr);
          for (i := 0; i < recCount; i++)
          {
            var sPageAddr : string;  sPageAddr := sParentAddr+GetIter(i);
            d130 += GetDblVal(sPageAddr+'/КорИсч.164.23Ув');
            d150 += GetDblVal(sPageAddr+'/КорИсч.164.23Ум');
          } // for
          d130 := Round(d130);
          d150 := Round(d150);
        }
        while False;
        // Корректировка сумм налога при изменении цены реализованных товаров (работ, услуг)
        //----------------------------------------------------------------------------------------------------

        //----------------------------------------------------------------------------------------------------
        // Итого суммы налога, исчисленные по налоговым ставкам, предусмотренным пунктами 2, 3 статьи 164 НК РФ
        do
        {
          var sItogAddr : string;  sItogAddr := 'Файл/Документ/НДС/НалНеПодтв0/СумНал164Ит';
          if  (d030 = 0)
          { // если НЕ было данных для расчета
            #_SetNull(sItogAddr);
          } // если НЕ было данных для расчета
          else
          { // если были данные для расчета
            var d050 : double;  d050 := d030;
            #_SetFldGV(sItogAddr, d050);
            var sFormula : string;  sFormula := 'Стр. 050 = cумма(стр. 030)';
            var sRaschet : string;  sRaschet := GDS0(d050)+FormatStr_1(' = %S', GDS0(d030) );
            MesError.InsertRasch(NameStr, sItogAddr, sFormula, sRaschet, 0);
          } // если были данные для расчета
        }
        while False;
        // Итого суммы налога, исчисленные по налоговым ставкам, предусмотренным пунктами 2, 3 статьи 164 НК РФ
        //----------------------------------------------------------------------------------------------------

        //----------------------------------------------------------------------------------------------------
        // Итого сумма налоговых вычетов по операциям по реализации товаров, обоснованность применения налоговой ставки 0 процентов по которым документально не подтверждена
        do
        {
          var sItogAddr : string;  sItogAddr := 'Файл/Документ/НДС/НалНеПодтв0/НалВычНеПодИт';
          if  (d040 = 0)
          { // если НЕ было данных для расчета
            #_SetNull(sItogAddr);
          } // если НЕ было данных для расчета
          else
          { // если были данные для расчета
            var d060 : double;  d060 := d040;
            #_SetFldGV(sItogAddr, d060);
            var sFormula : string;  sFormula := 'Стр. 060 = cумма(стр. 040)';
            var sRaschet : string;  sRaschet := GDS0(d060)+FormatStr_1(' = %S', GDS0(d040) );
            MesError.InsertRasch(NameStr, sItogAddr, sFormula, sRaschet, 0);
          } // если были данные для расчета
        }
        while False;
        // Итого сумма налоговых вычетов по операциям по реализации товаров, обоснованность применения налоговой ставки 0 процентов по которым документально не подтверждена
        //----------------------------------------------------------------------------------------------------

        //----------------------------------------------------------------------------------------------------
        // Итого сумма налога, исчисленная к уплате в бюджет по Разделу 6
        do
        {
          var d050 : double;  d050 := GetDblVal('Файл/Документ/НДС/НалНеПодтв0/СумНал164Ит');
          var d060 : double;  d060 := GetDblVal('Файл/Документ/НДС/НалНеПодтв0/НалВычНеПодИт');

          var sItogAddr : string;  sItogAddr := 'Файл/Документ/НДС/НалНеПодтв0/НалИсчислИт';
          if  (d050 = 0)
          and (d100 = 0)
          and (d130 = 0)
          and (d060 = 0)
          and (d090 = 0)
          and (d150 = 0)
          { // если НЕ было данных для расчета
            #_SetNull(sItogAddr);
          } // если НЕ было данных для расчета
          else
          { // если были данные для расчета
            var d160_170 : double;  d160_170 := (d050+d100+d130)-(d060+d090+d150);
            #_SetFldGV(sItogAddr, d160_170);
            var sFormula : string;  sFormula := 'Стр. 160/170'
              +' = (cтр. 050 + cтр. 100 + cтр. 130)'
              +' - (cтр. 060 + cтр. 090 + cтр. 150)'
            ;
            var sRaschet : string;  sRaschet := GDS0(d160_170)
              +FormatStr_3(' = (%S+%S+%S)', GDS0(d050), GDS0(d100), GDS0(d130) )
              +FormatStr_3(' - (%S+%S+%S)', GDS0(d060), GDS0(d090), GDS0(d150) )
            ;
            MesError.InsertRasch(NameStr, sItogAddr, sFormula, sRaschet, 0);
          } // если были данные для расчета
        }
        while False;
        // Итого сумма налога, исчисленная к уплате в бюджет по Разделу 6
        //----------------------------------------------------------------------------------------------------
      }
      //#endregion РАЗДЕЛ 6 ОСНОВНОЙ
      //------------------------------------------------------------------------------------------------------
    }
    while False;
    //#endregion РАЗДЕЛ 6
    //--------------------------------------------------------------------------------------------------------

    //--------------------------------------------------------------------------------------------------------
    //#region РАЗДЕЛ 7
    //#endregion РАЗДЕЛ 7
    //--------------------------------------------------------------------------------------------------------

    //--------------------------------------------------------------------------------------------------------
    //#region РАЗДЕЛ 1
    {
      NameStr := pFH.Func('myGetPageIDR01_0');

      var a1_040_050 : string;  a1_040_050 := 'Файл/Документ/НДС/СумУплНП/СумПУ_173.1';
      var a3_200_210 : string;  a3_200_210 := 'Файл/Документ/НДС/СумУпл164/НалПУ164';
      var a4_120_130 : string;  a4_120_130 := 'Файл/Документ/НДС/НалПодтв0/СумИсчислИтог';
      var a5_080     : string;  a5_080     := 'Файл/Документ/НДС/НалВычПред0/СумВозмПдтв';
      var a5_090     : string;  a5_090     := 'Файл/Документ/НДС/НалВычПред0/СумВозмНеПдтв';
      var a6_160_170 : string;  a6_160_170 := 'Файл/Документ/НДС/НалНеПодтв0/НалИсчислИт';

      if    not GetStrNull(a3_200_210)
         or not GetStrNull(a4_120_130)
         or not GetStrNull(a6_160_170)
         or not GetStrNull(a5_080)
         or not GetStrNull(a5_090)
      {
        var r3_200_210 : double;  r3_200_210 := GetDblVal(a3_200_210);
        var r4_120_130 : double;  r4_120_130 := GetDblVal(a4_120_130);
        var r6_160_170 : double;  r6_160_170 := GetDblVal(a6_160_170);
        var r5_080     : double;  r5_080     := GetDblVal(a5_080    );
        var r5_090     : double;  r5_090     := GetDblVal(a5_090    );

        var r1_040_050 : double;  r1_040_050 := r3_200_210 + ((-1) * r4_120_130) + r6_160_170 - (r5_080 + r5_090);
        #_SetFldGV(a1_040_050, r1_040_050);
        mes := 'Стр. 040/050 = разд. 3, cтр. 200/210 + ((-1) * разд. 4, cтр. 120/130) + разд. 6, cтр. 160/170 - разд. 5 (cтр. 080 + cтр. 090)';
        val := GD0(a1_040_050)+' = ('+GD0(a3_200_210)+' + ((-1) * '+GD0(a4_120_130)+') + '+GD0(a6_160_170)+') - ('+GD0(a5_080)+' + '+GD0(a5_090)+')';
        #_Log(a1_040_050);
      }
      else
      {
        #_SetNull(a1_040_050);

        mes := 'Стр. 040/050 = 0';
        val := GD0(a1_040_050)+' = 0';
        #_Log(a1_040_050);
      }
    }
    //#endregion РАЗДЕЛ 1
    //--------------------------------------------------------------------------------------------------------

  }
  while False;
  StopVisual('', 0);
  //#endregion РАСЧЕТ ПОЛЕЙ В ОСНОВНЫХ РАЗДЕЛАХ
  //**********************************************************************************************************

  //----------------------------------------------------------------------------------------------------------
  // проверка данных
  CheckFldRBR;
  //----------------------------------------------------------------------------------------------------------

  Result := True;
@end. // ReCalcFldRBR
//#endregion РАСЧЕТ ОСНОВНЫХ РАЗДЕЛОВ
//************************************************************************************************************

//============================================================================================================
//#region РАСЧЕТ ВСЕЙ ДЕКЛАРАЦИИ
//------------------------------------------------------------------------------------------------------------
// Рассчитать поля всей декларации
@Script On_Recalc : boolean;
@begin
  Result := False;

  ReCalcFldRBR;
  ReCalcFldR08;
  ReCalcFldR8D;
  ReCalcFldR09;
  ReCalcFldR9D;
  ReCalcFldR10;
  ReCalcFldR11;
  ReCalcFldR12;

  Result := True;
@end. // On_Recalc
//#endregion РАСЧЕТ ВСЕЙ ДЕКЛАРАЦИИ
//************************************************************************************************************
//#endregion ДЕЙСТВИЯ ВЫПОЛНЯЕМЫЕ ПРИ РАСЧЕТЕ
//************************************************************************************************************


//============================================================================================================
//#region ДЕЙСТВИЯ ВЫПОЛНЯЕМЫЕ ПРИ ЭКСПОРТЕ В XML
//------------------------------------------------------------------------------------------------------------
@Script On_ExportXML : boolean;
@begin
  Result := False;
  pFH.Func('myRunExportToIMNSXML');
  Result := True;
@end. // On_ExportXML
//#endregion ДЕЙСТВИЯ ВЫПОЛНЯЕМЫЕ ПРИ ЭКСПОРТЕ В XML
//************************************************************************************************************

//============================================================================================================
//#region ДЕЙСТВИЯ ВЫПОЛНЯЕМЫЕ ПРИ ПРОВЕРКЕ КОНТРОЛЬНЫХ СООТНОШЕНИЙ
//------------------------------------------------------------------------------------------------------------
@Script On_CheckKS : boolean;                                                                                 
  //==========================================================================================================
  //#region МАКРОСЫ                                                                                           
  //----------------------------------------------------------------------------------------------------------
    // Для работы с текущим отчетом                                                                           
    #undef GDs // Вернуть значение поля типа Double                                                           
    #declare GDs(_XMLAdr)                                                                                     
      if (XMLMap.GetAttrVisByName(#_XMLAdr), Double(XMLMap.GetAttrValueByName(#_XMLAdr)), 0.0);               
    #end                                                                                                      
                                                                                                              
    #undef GDVs // Вернуть значение поля типа Double (с доп. проверкой видимости)                             
    #declare GDVs(_XMLAdr)                                                                                    
      if (XMLMap.GetAttrVisByNameInTree(#_XMLAdr), Double(XMLMap.GetAttrValueByName(#_XMLAdr)), 0.0);         
    #end                                                                                                      
                                                                                                              
    #undef GSs // Вернуть значение поля типа String                                                           
    #declare GSs(_XMLAdr)                                                                                     
      if (XMLMap.GetAttrVisByName(#_XMLAdr), String(XMLMap.GetAttrValueByName(#_XMLAdr)), '');              
    #end                                                                                                      
                                                                                                              
    #undef GCs // Вернусть количество узлов                                                                   
    #declare GCs(_XMLAdr)                                                                                     
      XMLMap.GetNodeCountByName(#_XMLAdr);                                                                    
    #end                                                                                                      
                                                                                                              
    #undef GVs // Вернусть видимость пути в дереве                                                            
    #declare GVs(_XMLAdr)                                                                                     
      XMLMap.GetAttrVisByNameInTree(#_XMLAdr)                                                                 
    #end                                                                                                      
                                                                                                              
    // Для работы с отчетом предыдущего периода                                                               
    #undef GDp // Вернуть значение поля типа Double                                                           
    #declare GDp(_XMLAdr)                                                                                     
      Double(tmpXMLMap.GetAttrValueByName(#_XMLAdr));                                                         
    #end                                                                                                      
                                                                                                              
    #undef GSp // Вернуть значение поля типа String                                                           
    #declare GSp(_XMLAdr)                                                                                     
      String(tmpXMLMap.GetAttrValueByName(#_XMLAdr));                                                         
    #end                                                                                                      
                                                                                                              
    #undef GCp // Вернусть количество узлов                                                                   
    #declare GCp(_XMLAdr)                                                                                     
      tmpXMLMap.GetNodeCountByName(#_XMLAdr);                                                                 
    #end                                                                                                      
                                                                                                              
    // Установка сообщения                                                                                    
    #undef SM                                                                                                 
    #declare SM(_XMLAdr, _mesPole, _mesMes, _mesCountIter = 0)                                                
      MesError.InsertMesError(#_XMLAdr, Comp(0), NameStr, #_mesPole, #_mesMes, #_mesCountIter);               
    #end                                                                                                      
  //----------------------------------------------------------------------------------------------------------
  //#endregion МАКРОСЫ                                                                                        
  //**********************************************************************************************************
                                                                                                              
 function CheckKBK(s:string):boolean;                                                                         
   begin                                                                                                      
     Result := true;                                                                                          
     if ( s = '' ) exit;                                                                                      
     if (length(s) <> 20)                                                                                     
        {                                                                                                     
         Result := false;                                                                                     
         exit;                                                                                                
        }                                                                                                     
     if  (                                                                                                    
             (s <> '18210301000011000110')                                                                    
         and (s <> '18210301000012100110')                                                                    
         and (s <> '18210301000012200110')                                                                    
         and (s <> '18210301000013000110')                                                                    
         and (s <> '18210401000011000110')                                                                    
         and (s <> '18210401000012100110')                                                                    
         and (s <> '18210401000012200110')                                                                    
         and (s <> '18210401000013000110')                                                                    
         and (s <> '15310401000011000110')                                                                    
         and (s <> '15310401000012100110')                                                                    
         and (s <> '15310401000012200110')                                                                    
         and (s <> '15310401000013000110')                                                                    
         )                                                                                                    
        {                                                                                                     
         Result := false;                                                                                     
         exit;                                                                                                
        }                                                                                                     
   end;                                                                                                       
                                                                                                              
 function CheckOKTMO(s:string):boolean;                                                                       
   begin                                                                                                      
     Result := true;                                                                                          
     if ( s = '' ) exit;                                                                                      
     if (length(s) <> 8)                                                                                      
        {                                                                                                     
         Result := false;                                                                                     
         exit;                                                                                                
        }                                                                                                     
   end;                                                                                                       
                                                                                                              
@begin                                                                                                        
  //==========================================================================================================
  //#region ПОЛУЧЕНИЕ ОТЧЕТА ПРЕДЫДУЩЕГО ПЕРИОДА                                                              
  //----------------------------------------------------------------------------------------------------------
  if (pFH.Func('myShowSelectWindow', False, False) = 0)                                                       
  { Exit; }                                                                                                   
                                                                                                              
  var tmpXMLMap : XmlStruct new;                                                                              
  tmpXMLMap := new (XMLStruct);                                                                               
                                                                                                              
  var pathSelectionLatestTaxReport : string;                                                                  
  pathSelectionLatestTaxReport := pFH.Func('myGetPathSelectionLatestTaxReport');                              
                                                                                                              
  if (pathSelectionLatestTaxReport <> '')                                                                     
    tmpXMLMap.ImpXml(pathSelectionLatestTaxReport);                                                           
  //----------------------------------------------------------------------------------------------------------
  //#endregion ПОЛУЧЕНИЕ ОТЧЕТА ПРЕДЫДУЩЕГО ПЕРИОДА                                                           
  //**********************************************************************************************************
                                                                                                              
                                                                                                              
  //==========================================================================================================
  //#region ОБЪЯВЛЕНИЕ ПЕРЕМЕННЫХ                                                                             
  //----------------------------------------------------------------------------------------------------------
  var                                                                                                         
    NameStr,tS,tS1,tS2,ats1,atS2,atS3,atS4,ts3,ts4,sKBK,sOKTMO,aKBK,aOKTMO,OldNameStr,                        
    aOG_TL,                                                                                                   
    aR2, aR3P2_dop, aR4, aR5, aR5_dop, aR6, aR7, aR8, aR8_dop, aR8P1, aR8P1_dop, aR9, aR9_dop, aR9P1, aR9P1_dop, aR12,
    aR1_010, aR1_030, aR1_040_050,                                                                            
    aR2_010, aR2_060, aR2_070, aR2_080, aR2_090, aR2_100,                                                     
    aR3_010_gr3, aR3_020_gr3, aR3_030_gr3, aR3_040_gr3, aR3_041_gr3, aR3_042_gr3,                             
    aR3_010_gr5, aR3_020_gr5, aR3_030_gr5, aR3_040_gr5, aR3_050_gr5, aR3_060_gr5, aR3_070_gr5, aR3_080_gr5,aR3_090_gr5, aR3_100_gr5, aR3_105_gr5, aR3_106_gr5, aR3_107_gr5,
    aR3_108_gr5, aR3_109_gr5, aR3_118_gr5, aR3_120_gr3, aR3_125_gr3, aR3_130_gr3, aR3_135_gr3, aR3_140_gr3, aR3_150_gr3, aR3_160_gr3, aR3_170_gr3, aR3_180_gr3, aR3_185_gr3, aR3_190_gr3, aR3_200_210_gr3,
    aR3_041_gr5, aR3_042_gr5, aR3_045_gr5, aR3_046_gr5, aR3_110_gr5, aR3_115_gr5,                             
    aR3P1, aR3P1_030, aR3P1_dop, aR3P1_070_gr1, aR3P1_070_gr4,                                                
    aR3P2_gr2, aR3P2_gr3,                                                                                     
    aR4_030, aR4_040, aR4_050, aR4_080, aR4_120_130,                                                          
    aR5_050, aR5_070, aR5_080, aR5_090,                                                                       
    aR6_030, aR6_040, aR6_050, aR6_060, aR6_090, aR6_130, aR6_150, aR6_160_170,                               
    aR7_gr1, aR7_gr2, aR7_gr4,                                                                                
    aR8_010, aR8_180, aR8_190,                                                                                
    aR8P1_005, aR8P1_010, aR8P1_180, aR8P1_190,                                                               
    aR9_010, aR9_170, aR9_175, aR9_180, aR9_190, aR9_200, aR9_205, aR9_210, aR9_230, aR9_235, aR9_240, aR9_250, aR9_260, aR9_265, aR9_270, aR9_280,  
    aR9P1_020, aR9P1_025, aR9P1_030, aR9P1_040, aR9P1_050, aR9P1_055, aR9P1_060, aR9P1_070, aR9P1_090, aR9P1_250, aR9P1_255,                         
    aR9P1_260, aR9P1_270, aR9P1_280, aR9P1_285, aR9P1_290, aR9P1_310, aR9P1_315, aR9P1_320, aR9P1_330, aR9P1_340, aR9P1_345, aR9P1_350,              
    aR12_060, aR12_070, aR12_080 : string;                                                                                                           
  var                                                                                                                                                
    i, j,                                                                                                                                            
    cR2, cR2_dop, cR3P1, cR3P1_dop, cR3P2, cR3P2_dop, cR4, cR5, cR5_dop, cR6, cR7, cR8, cR8_dop, cR8P1, cR8P1_dop, cR9, cR9_dop, cR9P1, cR9P1_dop, cR12 : integer;
  var                                                                                                          
    sOG_TL,                                                                                                   
    sR2_010, sR2_070,                                                                                         
    sR3P1_030, sR3P1_070_gr1,                                                                                 
    sR7_gr1, sR8_010, sR8P1_010, sR9_010, sR9P1_090 : string;                                                 
  var                                                                                                         
    dR1_010, dR1_030, dR1_040_050,                                                                            
    dR2_060, dR2_080, dR2_090, dR2_100,                                                                       
    dR3_010_gr3, dR3_020_gr3, dR3_030_gr3, dR3_040_gr3, dR3_041_gr3, dR3_042_gr3,                             
    dR3_010_gr5, dR3_020_gr5, dR3_030_gr5, dR3_040_gr5, dR3_050_gr5, dR3_060_gr5, dR3_070_gr5, dR3_080_gr5, dR3_090_gr5, dR3_100_gr5, dR3_105_gr5, dR3_106_gr5, dR3_107_gr5,
    dR3_108_gr5, dR3_109_gr5, dR3_118_gr5, dR3_120_gr3, dR3_125_gr3, dR3_130_gr3, dR3_135_gr3, dR3_140_gr3, dR3_150_gr3, dR3_160_gr3, dR3_170_gr3, dR3_180_gr3, dR3_185_gr3, dR3_190_gr3, dR3_200_210_gr3,
    dR3_041_gr5, dR3_042_gr5, dR3_045_gr5, dR3_046_gr5, dR3_110_gr5, dR3_115_gr5,                                                                                                                         
    dR3P1_070_gr4,                                                                                                                                                                                        
    dR3P2_gr2, dR3P2_gr3,                                                                                                                                                                                 
    dR4_030, dR4_040, dR4_050, dR4_080, dR4_120_130,                                                                                                                                                      
    dR5_050, dR5_070, dR5_080, dR5_090,                                                                                                                                                                   
    dR6_030, dR6_040, dR6_050, dR6_060, dR6_090, dR6_130, dR6_150, dR6_160_170,                                                                                                                           
    dR7_gr2, dR7_gr4,                                                                                                                                                                                     
    dR8_180, dR8_190,                                                                                                                                                                                     
    dR8P1_005, dR8P1_180, dR8P1_190,                                                                                                                                                                      
    dR9_170, dR9_175, dR9_180, dR9_190, dR9_200, dR9_205, dR9_210, dR9_230, dR9_235, dR9_240, dR9_250, dR9_260, dR9_265, dR9_270, dR9_280,                                                                
    dR9P1_020, dR9P1_025, dR9P1_030, dR9P1_040, dR9P1_050, dR9P1_055, dR9P1_060, dR9P1_070, dR9P1_250, dR9P1_255, dR9P1_260, dR9P1_270, dR9P1_280, dR9P1_285, dR9P1_290, dR9P1_310, dR9P1_315, dR9P1_320, dR9P1_330, dR9P1_340, dR9P1_345, dR9P1_350,
    dR12_060, dR12_070, dR12_080 : double = 0;                                                                
  //----------------------------------------------------------------------------------------------------------
  //#endregion ОБЪЯВЛЕНИЕ ПЕРЕМЕННЫХ                                                                          
  //**********************************************************************************************************
                                                                                                              
                                                                                                              
  //==========================================================================================================
  //#region ИНИЦИАЛИЗАЦИЯ СТАТИЧНЫХ ПЕРЕМЕННЫХ                                                                
  //----------------------------------------------------------------------------------------------------------
  aOG_TL          := 'Файл/Документ/ОтчетГод'                                                 ;     sOG_TL          := #GSs (aOG_TL         );
                                                                                                                                              
  aR1_010         := 'Файл/Документ/НДС/СумУплНП/ОКТМО'                                       ;     dR1_010         := #GDVs(aR1_010        );
  aR1_030         := 'Файл/Документ/НДС/СумУплНП/СумПУ_173.5'                                 ;     dR1_030         := #GDVs(aR1_030        );
  aR1_040_050     := 'Файл/Документ/НДС/СумУплНП/СумПУ_173.1'                                 ;     dR1_040_050     := #GDVs(aR1_040_050    );
                                                                                                                                              
  aR3_010_gr3     := 'Файл/Документ/НДС/СумУпл164/СумНалОб/РеалТов20/НалБаза'                 ;     dR3_010_gr3     := #GDVs(aR3_010_gr3    );
  aR3_020_gr3     := 'Файл/Документ/НДС/СумУпл164/СумНалОб/РеалТов10/НалБаза'                 ;     dR3_020_gr3     := #GDVs(aR3_020_gr3    );
  aR3_030_gr3     := 'Файл/Документ/НДС/СумУпл164/СумНалОб/РеалТов120/НалБаза'                ;     dR3_030_gr3     := #GDVs(aR3_030_gr3    );
  aR3_040_gr3     := 'Файл/Документ/НДС/СумУпл164/СумНалОб/РеалТов110/НалБаза'                ;     dR3_040_gr3     := #GDVs(aR3_040_gr3    );
  aR3_041_gr3     := 'Файл/Документ/НДС/СумУпл164/СумНалОб/РеалТов18/НалБаза'                 ;     dR3_041_gr3     := #GDVs(aR3_041_gr3    );
  aR3_042_gr3     := 'Файл/Документ/НДС/СумУпл164/СумНалОб/РеалТов118/НалБаза'                ;     dR3_042_gr3     := #GDVs(aR3_042_gr3    );
                                                                                                                                              
  aR3_120_gr3     := 'Файл/Документ/НДС/СумУпл164/СумНалВыч/НалПредНППриоб'                   ;     dR3_120_gr3     := #GDVs(aR3_120_gr3    );
  aR3_125_gr3     := 'Файл/Документ/НДС/СумУпл164/СумНалВыч/НалПредНПКапСтр'                  ;     dR3_125_gr3     := #GDVs(aR3_125_gr3    );
  aR3_130_gr3     := 'Файл/Документ/НДС/СумУпл164/СумНалВыч/НалПредНППок'                     ;     dR3_130_gr3     := #GDVs(aR3_130_gr3    );
  aR3_135_gr3     := 'Файл/Документ/НДС/СумУпл164/СумНалВыч/НалИсчРозн'                       ;     dR3_135_gr3     := #GDVs(aR3_135_gr3    );
  aR3_140_gr3     := 'Файл/Документ/НДС/СумУпл164/СумНалВыч/НалИсчСМР'                        ;     dR3_140_gr3     := #GDVs(aR3_140_gr3    );
  aR3_150_gr3     := 'Файл/Документ/НДС/СумУпл164/СумНалВыч/НалУплТамож'                      ;     dR3_150_gr3     := #GDVs(aR3_150_gr3    );
  aR3_160_gr3     := 'Файл/Документ/НДС/СумУпл164/СумНалВыч/НалУплНОТовТС'                    ;     dR3_160_gr3     := #GDVs(aR3_160_gr3    );
  aR3_170_gr3     := 'Файл/Документ/НДС/СумУпл164/СумНалВыч/НалИсчПрод'                       ;     dR3_170_gr3     := #GDVs(aR3_170_gr3    );
  aR3_180_gr3     := 'Файл/Документ/НДС/СумУпл164/СумНалВыч/НалУплПокНА'                      ;     dR3_180_gr3     := #GDVs(aR3_180_gr3    );
  aR3_185_gr3     := 'Файл/Документ/НДС/СумУпл164/СумНалВыч/НалВыч171.14'                     ;     dR3_185_gr3     := #GDVs(aR3_185_gr3    );
  aR3_190_gr3     := 'Файл/Документ/НДС/СумУпл164/СумНалВыч/НалВычОбщ'                        ;     dR3_190_gr3     := #GDVs(aR3_190_gr3    );
  aR3_200_210_gr3 := 'Файл/Документ/НДС/СумУпл164/НалПУ164'                                   ;     dR3_200_210_gr3 := #GDVs(aR3_200_210_gr3);
                                                                                                                                              
  aR3_010_gr5     := 'Файл/Документ/НДС/СумУпл164/СумНалОб/РеалТов20/СумНал'                  ;     dR3_010_gr5     := #GDVs(aR3_010_gr5    );
  aR3_020_gr5     := 'Файл/Документ/НДС/СумУпл164/СумНалОб/РеалТов10/СумНал'                  ;     dR3_020_gr5     := #GDVs(aR3_020_gr5    );
  aR3_030_gr5     := 'Файл/Документ/НДС/СумУпл164/СумНалОб/РеалТов120/СумНал'                 ;     dR3_030_gr5     := #GDVs(aR3_030_gr5    );
  aR3_040_gr5     := 'Файл/Документ/НДС/СумУпл164/СумНалОб/РеалТов110/СумНал'                 ;     dR3_040_gr5     := #GDVs(aR3_040_gr5    );
  aR3_041_gr5     := 'Файл/Документ/НДС/СумУпл164/СумНалОб/РеалТов18/СумНал'                  ;     dR3_041_gr5     := #GDVs(aR3_041_gr5    );
  aR3_042_gr5     := 'Файл/Документ/НДС/СумУпл164/СумНалОб/РеалТов118/СумНал'                 ;     dR3_042_gr5     := #GDVs(aR3_042_gr5    );
  aR3_045_gr5     := 'Файл/Документ/НДС/СумУпл164/СумНалОб/РеалСрок151.1_20/СумНал'           ;     dR3_045_gr5     := #GDVs(aR3_045_gr5    );
  aR3_046_gr5     := 'Файл/Документ/НДС/СумУпл164/СумНалОб/РеалСрок151.1_10/СумНал'           ;     dR3_046_gr5     := #GDVs(aR3_046_gr5    );
                                                                                                                                              
  aR3_050_gr5     := 'Файл/Документ/НДС/СумУпл164/СумНалОб/РеалПредИК/СумНал'                 ;     dR3_050_gr5     := #GDVs(aR3_050_gr5    );
  aR3_060_gr5     := 'Файл/Документ/НДС/СумУпл164/СумНалОб/ВыпСМРСоб/СумНал'                  ;     dR3_060_gr5     := #GDVs(aR3_060_gr5    );
  aR3_070_gr5     := 'Файл/Документ/НДС/СумУпл164/СумНалОб/ОплПредПост/СумНал'                ;     dR3_070_gr5     := #GDVs(aR3_070_gr5    );
  aR3_080_gr5     := 'Файл/Документ/НДС/СумУпл164/СумНалОб/СумНалВосст/СумНалВс'              ;     dR3_080_gr5     := #GDVs(aR3_080_gr5    );
  aR3_090_gr5     := 'Файл/Документ/НДС/СумУпл164/СумНалОб/СумНалВосст/СумНал170.3.3'         ;     dR3_090_gr5     := #GDVs(aR3_090_gr5    );
  aR3_100_gr5     := 'Файл/Документ/НДС/СумУпл164/СумНалОб/СумНалВосст/СумНалОперСт0'         ;     dR3_100_gr5     := #GDVs(aR3_100_gr5    );
  aR3_105_gr5     := 'Файл/Документ/НДС/СумУпл164/СумНалОб/КорРеалТов/СумНал'                 ;     dR3_105_gr5     := #GDVs(aR3_105_gr5    );
  aR3_109_gr5     := 'Файл/Документ/НДС/СумУпл164/СумНалОб/КорРеалПредИК/СумНал'              ;     dR3_109_gr5     := #GDVs(aR3_109_gr5    );
  aR3_110_gr5     := 'Файл/Документ/НДС/СумУпл164/СумНалОб/УплДеклар151.1/СумНал'             ;     dR3_110_gr5     := #GDVs(aR3_110_gr5    );
  aR3_115_gr5     := 'Файл/Документ/НДС/СумУпл164/СумНалОб/УплДеклар173.6/СумНал'             ;     dR3_115_gr5     := #GDVs(aR3_115_gr5    );
                                                                                                                                              
                                                                                                                                              
  aR4_120_130     := 'Файл/Документ/НДС/НалПодтв0/СумИсчислИтог'                              ;     dR4_120_130     := #GDVs(aR4_120_130    );
                                                                                                                                              
  aR5_080         := 'Файл/Документ/НДС/НалВычПред0/СумВозмПдтв'                              ;     dR5_080         := #GDVs(aR5_080        );
  aR5_090         := 'Файл/Документ/НДС/НалВычПред0/СумВозмНеПдтв'                            ;     dR5_090         := #GDVs(aR5_090        );
                                                                                                                                              
  aR6_050         := 'Файл/Документ/НДС/НалНеПодтв0/СумНал164Ит'                              ;     dR6_050         := #GDVs(aR6_050        );
  aR6_060         := 'Файл/Документ/НДС/НалНеПодтв0/НалВычНеПодИт'                            ;     dR6_060         := #GDVs(aR6_060        );
  aR6_090         := 'Файл/Документ/НДС/НалНеПодтв0/КорНалВозврТов/КорИсч.164.23'             ;     dR6_090         := #GDVs(aR6_090        );
  aR6_160_170     := 'Файл/Документ/НДС/НалНеПодтв0/НалИсчислИт'                              ;     dR6_160_170     := #GDVs(aR6_160_170    );
                                                                                                                                              
  aR8_190         := 'Файл/Документ/НДС/КнигаПокуп/Файл/Документ/КнигаПокуп/СумНДСВсКПк'      ;     dR8_190         := #GDs (aR8_190        );
                                                                                                                                              
  aR8P1_005       := 'Файл/Документ/НДС/КнигаПокупДЛ/Файл/Документ/КнигаПокупДЛ/СумНДСИтКПк'  ;     dR8P1_005       := #GDs (aR8P1_005      );
  aR8P1_190       := 'Файл/Документ/НДС/КнигаПокупДЛ/Файл/Документ/КнигаПокупДЛ/СумНДСИтП1Р8' ;     dR8P1_190       := #GDs (aR8P1_190      );
                                                                                                                                              
  aR9_230         := 'Файл/Документ/НДС/КнигаПрод/Файл/Документ/КнигаПрод/СтПродБезНДС20'     ;     dR9_230         := #GDs (aR9_230        );
  aR9_235         := 'Файл/Документ/НДС/КнигаПрод/Файл/Документ/КнигаПрод/СтПродБезНДС18'     ;     dR9_235         := #GDs (aR9_235        );
  aR9_240         := 'Файл/Документ/НДС/КнигаПрод/Файл/Документ/КнигаПрод/СтПродБезНДС10'     ;     dR9_240         := #GDs (aR9_240        );
  aR9_250         := 'Файл/Документ/НДС/КнигаПрод/Файл/Документ/КнигаПрод/СтПродБезНДС0'      ;     dR9_250         := #GDs (aR9_250        );
  aR9_260         := 'Файл/Документ/НДС/КнигаПрод/Файл/Документ/КнигаПрод/СумНДСВсКПр20'      ;     dR9_260         := #GDs (aR9_260        );
  aR9_265         := 'Файл/Документ/НДС/КнигаПрод/Файл/Документ/КнигаПрод/СумНДСВсКПр18'      ;     dR9_265         := #GDs (aR9_265        );
  aR9_270         := 'Файл/Документ/НДС/КнигаПрод/Файл/Документ/КнигаПрод/СумНДСВсКПр10'      ;     dR9_270         := #GDs (aR9_270        );
  aR9_280         := 'Файл/Документ/НДС/КнигаПрод/Файл/Документ/КнигаПрод/СтПродОсвВсКПр'     ;     dR9_280         := #GDs (aR9_280        );
                                                                                                                                              
  aR9P1_020       := 'Файл/Документ/НДС/КнигаПродДЛ/Файл/Документ/КнигаПродДЛ/ИтСтПродКПр20'  ;     dR9P1_020       := #GDs (aR9P1_020      );
  aR9P1_025       := 'Файл/Документ/НДС/КнигаПродДЛ/Файл/Документ/КнигаПродДЛ/ИтСтПродКПр18'  ;     dR9P1_025       := #GDs (aR9P1_025      );
  aR9P1_030       := 'Файл/Документ/НДС/КнигаПродДЛ/Файл/Документ/КнигаПродДЛ/ИтСтПродКПр10'  ;     dR9P1_030       := #GDs (aR9P1_030      );
  aR9P1_040       := 'Файл/Документ/НДС/КнигаПродДЛ/Файл/Документ/КнигаПродДЛ/ИтСтПродКПр0'   ;     dR9P1_040       := #GDs (aR9P1_040      );
  aR9P1_050       := 'Файл/Документ/НДС/КнигаПродДЛ/Файл/Документ/КнигаПродДЛ/СумНДСИтКПр20'  ;     dR9P1_050       := #GDs (aR9P1_050      );
  aR9P1_055       := 'Файл/Документ/НДС/КнигаПродДЛ/Файл/Документ/КнигаПродДЛ/СумНДСИтКПр18'  ;     dR9P1_055       := #GDs (aR9P1_055      );
  aR9P1_060       := 'Файл/Документ/НДС/КнигаПродДЛ/Файл/Документ/КнигаПродДЛ/СумНДСИтКПр10'  ;     dR9P1_060       := #GDs (aR9P1_060      );
  aR9P1_070       := 'Файл/Документ/НДС/КнигаПродДЛ/Файл/Документ/КнигаПродДЛ/ИтСтПродОсвКПр' ;     dR9P1_070       := #GDs (aR9P1_070      );
  aR9P1_310       := 'Файл/Документ/НДС/КнигаПродДЛ/Файл/Документ/КнигаПродДЛ/СтПродВсП1Р9_20';     dR9P1_310       := #GDs (aR9P1_310      );
  aR9P1_315       := 'Файл/Документ/НДС/КнигаПродДЛ/Файл/Документ/КнигаПродДЛ/СтПродВсП1Р9_18';     dR9P1_315       := #GDs (aR9P1_315      );
  aR9P1_320       := 'Файл/Документ/НДС/КнигаПродДЛ/Файл/Документ/КнигаПродДЛ/СтПродВсП1Р9_10';     dR9P1_320       := #GDs (aR9P1_320      );
  aR9P1_330       := 'Файл/Документ/НДС/КнигаПродДЛ/Файл/Документ/КнигаПродДЛ/СтПродВсП1Р9_0' ;     dR9P1_330       := #GDs (aR9P1_330      );
  aR9P1_340       := 'Файл/Документ/НДС/КнигаПродДЛ/Файл/Документ/КнигаПродДЛ/СумНДСВсП1Р9_20';     dR9P1_340       := #GDs (aR9P1_340      );
  aR9P1_345       := 'Файл/Документ/НДС/КнигаПродДЛ/Файл/Документ/КнигаПродДЛ/СумНДСВсП1Р9_18';     dR9P1_345       := #GDs (aR9P1_345      );
  aR9P1_350       := 'Файл/Документ/НДС/КнигаПродДЛ/Файл/Документ/КнигаПродДЛ/СумНДСВсП1Р9_10';     dR9P1_350       := #GDs (aR9P1_350      );
                                                                                                                                              
  //----------------------------------------------------------------------------------------------------------                                
  //#endregion ИНИЦИАЛИЗАЦИЯ СТАТИЧНЫХ ПЕРЕМЕННЫХ                                                                                             
  //**********************************************************************************************************                                
                                                                                                                                              
                                                                                                                                              
  //==========================================================================================================                                
  //#region ДОПОЛНИТЕЛЬНЫЕ ПЕРЕМЕННЫЕ                                                                                                         
  //----------------------------------------------------------------------------------------------------------                                
  var fl_pR2_070_1011705_1011714, fl_pR2_070_1011711_1011703, flUL, flR2_090 : boolean;                                                       
                                                                                                                                              
  var sMes : string;                                                                                                                          
                                                                                                                                              
  var dR2_060_prd : double;                                                                                                                   
  var dR2_060_sum_prd : double;                                                                                                               
                                                                                                                                              
  var dR2_060_sum,                                                                                                                            
      dR3P2_gr2_sum, dR3P2_gr3_sum,                                                                                                           
      dR4_030_sum, dR4_040_sum, dR4_050_sum, dR4_080_sum,                                                                                     
      dR5_050_sum, dR5_070_sum,                                                                                                               
      dR6_030_sum, dR6_040_sum, dR6_130_sum,                                                                                                  
      dR8_180_sum,                                                                                                                            
      dR8P1_180_sum,                                                                                                                          
      dR9_170_sum, dR9_180_sum, dR9_190_sum, dR9_200_sum, dR9_205_sum, dR9_210_sum, dR9_175_sum,                                              
      dR9P1_250_sum, dR9P1_255_sum, dR9P1_260_sum, dR9P1_270_sum, dR9P1_280_sum, dR9P1_285_sum, dR9P1_290_sum,                                
      dR12_070_sum : double = 0;                                                                                                              
                                                                                                                                              
  var dR3P1_070_gr4_dop,                                                                                                                      
      dR7_gr2_dop, dR7_gr4_dop,                                                                                                               
      dR8_180_dop_06,dR8_180_dop_1234, dR8_180_dop_19, dR8_180_dop_20,                                                                        
      dR8P1_180_dop_06,dR8P1_180_dop_1234, dR8P1_180_dop_19, dR8P1_180_dop_20,                                                                
      dR9_200_dop_06, dR9_205_dop_06, dR9_210_dop_06,                                                                                         
      dR9P1_280_dop_06,dR9P1_285_dop_06, dR9P1_290_dop_06,                                                                                    
      dR9_200_dop_41_43_44, dR9_205_dop_41_43_44, dR9_210_dop_41_43_44,                                                                       
      dR9P1_280_dop_41_43_44,dR9P1_285_dop_41_43_44, dR9P1_290_dop_41_43_44 : double;                                                         
                                                                                                                                              
  var dR1_040, dR1_050, dR4_120, dR4_130, dR6_160, dR6_170, dR3_200_gr3, dR3_210_gr3 : double;                                                
                                                                                                                                              
  var              sR2_040    , sR2_050    ,              sR2_020    , sR2_030    , sR2_FlINN    , sR2_FlFam    , sR2_FlImy    , sR2_FlOtch    ,
      sR2_010_prd, sR2_040_prd, sR2_050_prd, sR2_070_prd, sR2_020_prd, sR2_030_prd, sR2_FlINN_prd, sR2_FlFam_prd, sR2_FlImy_prd, sR2_FlOtch_prd: string;
  var                       aR2_040    , aR2_050    ,                           aR2_020    , aR2_030    , aR2_FlINN    , aR2_FlFam    , aR2_FlImy    , aR2_FlOtch    ,
      aR2_prd, aR2_010_prd, aR2_040_prd, aR2_050_prd, aR2_060_prd, aR2_070_prd, aR2_020_prd, aR2_030_prd, aR2_FlINN_prd, aR2_FlFam_prd, aR2_FlImy_prd, aR2_FlOtch_prd, aR2_090_prd: string;
                                                                                                                                              
  var dR2_090_prd : double;                                                                                                                   
                                                                                                                                              
  if(dR1_040_050 >= 0) {                                                                                                                      
    dR1_040 := dR1_040_050;                                                                                                                   
    dR1_050 := 0;                                                                                                                             
  } else {                                                                                                                                    
    dR1_040 := 0;                                                                                                                             
    dR1_050 := (-1) * dR1_040_050;                                                                                                            
  }                                                                                                                                           
                                                                                                                                              
  if(dR3_200_210_gr3 >= 0) {                                                                                                                  
    dR3_200_gr3 := dR3_200_210_gr3;                                                                                                           
    dR3_210_gr3 := 0;                                                                                                                         
  } else {                                                                                                                                    
    dR3_200_gr3 := 0;                                                                                                                         
    dR3_210_gr3 := (-1) * dR3_200_210_gr3;                                                                                                    
  }                                                                                                                                           
                                                                                                                                              
  if(dR4_120_130 >= 0) {                                                                                                                      
    dR4_120 := dR4_120_130;                                                                                                                   
    dR4_130 := 0;                                                                                                                             
  } else {                                                                                                                                    
    dR4_120 := 0;                                                                                                                             
    dR4_130 := (-1) * dR4_120_130;                                                                                                            
  }                                                                                                                                           
                                                                                                                                              
  if(dR6_160_170 >= 0) {                                                                                                                      
    dR6_160 := dR6_160_170;                                                                                                                   
    dR6_170 := 0;                                                                                                                             
  } else {                                                                                                                                    
    dR6_160 := 0;                                                                                                                             
    dR6_170 := (-1) * dR6_160_170;                                                                                                            
  }                                                                                                                                           
  //----------------------------------------------------------------------------------------------------------                                
  //#endregion ДОПОЛНИТЕЛЬНЫЕ ПЕРЕМЕННЫЕ                                                                                                      
  //**********************************************************************************************************                                
                                                                                                                                              
                                                                                                                                              
  //==========================================================================================================                                
  //#region РАЗДЕЛ 8                                                                                                                          
  //----------------------------------------------------------------------------------------------------------                                
  dR8_180_sum := 0;                                                                                                                           
  dR8_180_dop_06 := 0;   dR8_180_dop_19 := 0;   dR8_180_dop_20 := 0;                                                                          
  dR8_180_dop_1234 := 0;                                                                                                                      
                                                                                                                                              
  cR8 := #GCs('Файл/Документ/НДС/КнигаПокуп/Файл/Документ/КнигаПокуп/КнПокСтр');                                                              
  for (i := 0; i < cR8; i++)                                                                                                                  
  {                                                                                                                                           
    aR8 := 'Файл/Документ/НДС/КнигаПокуп/Файл/Документ/КнигаПокуп/КнПокСтр'+GetIter(i);                                                       
                                                                                                                                              
    if (not XMLMap.GetAttrVisByName(aR8)) continue;                                                                                           
                                                                                                                                              
    aR8_180 := aR8+'/СумНДСВыч';     dR8_180 := #GDs(aR8_180);                                                                                
                                                                                                                                              
    dR8_180_sum := dR8_180_sum + dR8_180;                                                                                                     
                                                                                                                                              
    cR8_dop := #GCs(aR8+'/КодВидОпер');                                                                                                       
    for (j := 0; j < cR8_dop; j++)                                                                                                            
    {                                                                                                                                         
      aR8_dop := aR8+'/КодВидОпер'+GetIter(j);                                                                                                
                                                                                                                                              
      if (not XMLMap.GetAttrVisByName(aR8_dop)) continue;                                                                                     
                                                                                                                                              
      aR8_010 := aR8_dop+'/Значение';     sR8_010 := #GSs(aR8_010);                                                                           
                                                                                                                                              
      case (sR8_010) of                                                                                                                       
        '06': { // сумма по R8_180 по тем листам, в которых R8_010 = '06'                                                                     
                dR8_180_dop_06 := dR8_180_dop_06 + dR8_180;                                                                                   
              }                                                                                                                               
        '19': { // сумма по R8_180 по тем листам, в которых R8_010 = '19'                                                                     
                dR8_180_dop_19 := dR8_180_dop_19 + dR8_180;                                                                                   
              }                                                                                                                               
        '20': { // сумма по R8_180 по тем листам, в которых R8_010 = '20'                                                                 
                dR8_180_dop_20 := dR8_180_dop_20 + dR8_180;                                                                                   
              }                                                                                                                               
        '41','42','43','44':                                                                                                          
             { // сумма по R8P1_180 по тем листам, в которых R8_010 = '41' '42' '43' '44'                                             
                dR8_180_dop_1234 := dR8_180_dop_1234 + dR8_180;                                                                               
              }                                                                                                                               
      end;                                                                                                                                    
    }                                                                                                                                         
  }                                                                                                                                           
  NameStr := pFH.Func('myGetPageIDR08_F');                                                                                                  
  if (dR8_180_sum < dR8_190)                                                                                                                  
  { #SM(aR8_190, 'Стр. 190', 'КС :: 1.32: сумма ст. 180 р. 8 = ст. 190 на последней странице р. 8 если левая часть равенства < правой'); }
  //----------------------------------------------------------------------------------------------------------                                
  //#endregion РАЗДЕЛ 8                                                                                                                       
  //**********************************************************************************************************                                
  //==========================================================================================================                                
  //#region РАЗДЕЛ 8. ПРИЛОЖЕНИЕ 1                                                                                                            
  //----------------------------------------------------------------------------------------------------------                                
  dR8P1_180_sum := 0;                                                                                                                         
  dR8P1_180_dop_06 := 0;   dR8P1_180_dop_19 := 0;   dR8P1_180_dop_20 := 0;                                                                    
  dR8P1_180_dop_1234 := 0;                                                                                                                    
  cR8P1 := #GCs('Файл/Документ/НДС/КнигаПокупДЛ/Файл/Документ/КнигаПокупДЛ/КнПокДЛСтр');                                                      
  for (i := 0; i < cR8P1; i++)                                                                                                                
  {                                                                                                                                           
    aR8P1 := 'Файл/Документ/НДС/КнигаПокупДЛ/Файл/Документ/КнигаПокупДЛ/КнПокДЛСтр'+GetIter(i);                                               
                                                                                                                                              
    if (not XMLMap.GetAttrVisByName(aR8P1)) continue;                                                                                         
                                                                                                                                              
    aR8P1_180 := aR8P1+'/СумНДС';     dR8P1_180 := #GDs(aR8P1_180);                                                                           
                                                                                                                                              
    dR8P1_180_sum := dR8P1_180_sum + dR8P1_180;                                                                                               
                                                                                                                                              
    cR8P1_dop := #GCs(aR8P1+'/КодВидОпер');                                                                                                   
    for (j := 0; j < cR8P1_dop; j++)                                                                                                          
    {                                                                                                                                         
      aR8P1_dop := aR8P1+'/КодВидОпер'+GetIter(j);                                                                                            
                                                                                                                                              
      if (not XMLMap.GetAttrVisByName(aR8P1_dop)) continue;                                                                                   
                                                                                                                                              
      aR8P1_010 := aR8P1_dop+'/Значение';     sR8P1_010 := #GSs(aR8P1_010);                                                                   
                                                                                                                                              
      case (sR8P1_010) of                                                                                                                     
        '06': { // сумма по R8P1_180 по тем листам, в которых R8P1_010 = '06'                                                                 
                dR8P1_180_dop_06 := dR8P1_180_dop_06 + dR8P1_180;                                                                             
              }                                                                                                                               
        '19': { // сумма по R8P1_180 по тем листам, в которых R8P1_010 = '19'                                                                 
                dR8P1_180_dop_19 := dR8P1_180_dop_19 + dR8P1_180;                                                                             
              }                                                                                                                               
        '20': { // сумма по R8P1_180 по тем листам, в которых R8P1_010 = '20'                                                                 
                dR8P1_180_dop_20 := dR8P1_180_dop_20 + dR8P1_180;                                                                             
              }                                                                                                                               
        '41','42','43','44':                                                                                                                  
             { // сумма по R8P1_180 по тем листам, в которых R8P1_010 = '41' '42' '43' '44'                                                   
                dR8P1_180_dop_1234 := dR8P1_180_dop_1234 + dR8P1_180;                                                                         
              }                                                                                                                               
      end;                                                                                                                                    
    }                                                                                                                                         
  }                                                                                                                                           
                                                                                                                                              
  NameStr := pFH.Func('myGetPageIDR8D_F');                                                                                                    
                                                                                                                                              
  // 1.22 :: НК РФ ст. 171, 172, п. 2 Раздела IV Приложения 4 к Постановлению N 1137 :: завышение суммы НДС, подлежащей вычету                
  //         ст. 005 прил. 1 к р. 8 дНДС = ст. 190 р. 8 если левая часть равенства > правой                                                   
  if (dR8P1_005 > dR8_190)                                                                                                                    
  { #SM(aR8P1_005, 'Стр. 005', 'КС :: 1.22: ст. 005 прил. 1 к р. 8 дНДС = ст. 190 р. 8 если левая часть равенства > правой'); }               
                                                                                                                                              
  // 1.33 :: НК РФ ст. 171, 172 :: возможно завышение суммы НДС, подлежащей вычету                                                            
  //         стр. 005 прил. 1 к р. 8 дНДС + сумма ст. 180 прил. 1 к р. 8 дНДС = ст. 190 на последней странице прил. 1 к р. 8 дНДС если левая часть равенства < правой 
  if ((dR8P1_005 + dR8P1_180_sum) < dR8P1_190)                                                                                                                        
  { #SM(aR8P1_190, 'Стр. 190', 'КС :: 1.33: стр. 005 прил. 1 к р. 8 дНДС + сумма ст. 180 прил. 1 к р. 8 дНДС = ст. 190 на последней странице прил. 1 к р. 8 дНДС если левая часть равенства < правой'); } 
  //----------------------------------------------------------------------------------------------------------                                                                                            
  //#endregion РАЗДЕЛ 8. ПРИЛОЖЕНИЕ 1                                                                                                                                                                     
  //**********************************************************************************************************                                                                                            
                                                                                                                                                                                                          
                                                                                                                                                                                                          
  //==========================================================================================================                                                                                            
  //#region РАЗДЕЛ 9                                                                                                                                                                                      
  //----------------------------------------------------------------------------------------------------------                                                                                            
  dR9_170_sum := 0;   dR9_180_sum := 0;   dR9_190_sum := 0;   dR9_200_sum := 0;   dR9_205_sum := 0;   dR9_210_sum := 0; dR9_175_sum := 0;                                                                 
  dR9_200_dop_06 := 0; dR9_205_dop_06 := 0;   dR9_210_dop_06 := 0;                                                                                                                                        
  dR9_200_dop_41_43_44 := 0; dR9_205_dop_41_43_44 := 0;   dR9_210_dop_41_43_44 := 0;                                                                                                                      
                                                                                                                                                                                                          
  cR9 := #GCs('Файл/Документ/НДС/КнигаПрод/Файл/Документ/КнигаПрод/КнПродСтр');                                                                                                                           
  for (i := 0; i < cR9; i++)                                                                                                                                                                              
  {                                                                                                                                                                                                       
    aR9 := 'Файл/Документ/НДС/КнигаПрод/Файл/Документ/КнигаПрод/КнПродСтр'+GetIter(i);                                                                                                                    
                                                                                                                                                                                                          
    if (not XMLMap.GetAttrVisByName(aR9)) continue;                                                                                                                                                       
                                                                                                                                                                                                          
    aR9_170 := aR9+'/СтоимПродСФ20';     dR9_170 := #GDs(aR9_170);                                                                                                                                        
    aR9_175 := aR9+'/СтоимПродСФ18';     dR9_175 := #GDs(aR9_175);                                                                                                                                        
    aR9_180 := aR9+'/СтоимПродСФ10';     dR9_180 := #GDs(aR9_180);                                                                                                                                        
    aR9_190 := aR9+'/СтоимПродСФ0' ;     dR9_190 := #GDs(aR9_190);                                                                                                                                        
    aR9_200 := aR9+'/СумНДССФ20'   ;     dR9_200 := #GDs(aR9_200);                                                                                                                                        
    aR9_205 := aR9+'/СумНДССФ18'   ;     dR9_205 := #GDs(aR9_205);                                                                                                                                        
    aR9_210 := aR9+'/СумНДССФ10'   ;     dR9_210 := #GDs(aR9_210);                                                                                                                                        
                                                                                                                                                                                                          
    dR9_170_sum := dR9_170_sum + dR9_170;                                                                                                                                                                 
    dR9_175_sum := dR9_175_sum + dR9_175;                                                                                                                                                                 
    dR9_180_sum := dR9_180_sum + dR9_180;                                                                                                                                                                 
    dR9_190_sum := dR9_190_sum + dR9_190;                                                                                                                                                                 
    dR9_200_sum := dR9_200_sum + dR9_200;                                                                                                                                                                 
    dR9_205_sum := dR9_205_sum + dR9_205;                                                                                                                                                                 
    dR9_210_sum := dR9_210_sum + dR9_210;                                                                                                                                                                 
                                                                                                                                                                                                          
    cR9_dop := #GCs(aR9+'/КодВидОпер');                                                                                                                                                                   
    for (j := 0; j < cR9_dop; j++)                                                                                                                                                                        
    {                                                                                                                                                                                                     
      aR9_dop := aR9+'/КодВидОпер'+GetIter(j);                                                                                                                                                            
                                                                                                                                                                                                          
      if (not XMLMap.GetAttrVisByName(aR9_dop)) continue;                                                                                                                                                 
                                                                                                                                                                                                          
      aR9_010 := aR9_dop+'/Значение';     sR9_010 := #GSs(aR9_010);                                                                                                                                       
                                                                                                                                                                                                          
      if (sR9_010 = '06')                                                                                                                                                                                 
      { // сумма по всем листам R9_200 и R9_210, в которых R9_010 = '06'                                                                                                                                  
        dR9_200_dop_06 := dR9_200_dop_06 + dR9_200;                                                                                                                                                       
        dR9_205_dop_06 := dR9_205_dop_06 + dR9_205;                                                                                                                                                       
        dR9_210_dop_06 := dR9_210_dop_06 + dR9_210;                                                                                                                                                       
                                                                                                                                                                                                          
        break;                                                                                                                                                                                            
      }                                                                                                                                                                                                   
      if ((sR9_010 = '41') or (sR9_010 = '43') or (sR9_010 = '44'))                                                                                                                                       
      { // сумма по всем листам R9_200 и R9_210, в которых R9_010 = 41,43,44                                                                                                                              
        dR9_200_dop_41_43_44 := dR9_200_dop_41_43_44 + dR9_200;                                                                                                                                           
        dR9_205_dop_41_43_44 := dR9_205_dop_41_43_44 + dR9_205;                                                                                                                                           
        dR9_210_dop_41_43_44 := dR9_210_dop_41_43_44 + dR9_210;                                                                                                                                           
                                                                                                                                                                                                          
        break;                                                                                                                                                                                            
      }                                                                                                                                                                                                   
    }                                                                                                                                                                                                     
  }                                                                                                                                                                                                       
                                                                                                                                                                                                          
  NameStr := pFH.Func('myGetPageIDR09_F');                                                                                                                                                                
                                                                                                                                                                                                          
  // 1.34 :: НК РФ ст. 153, 173, п. 8 Раздела II Приложения 5 к Постановлению N 1137 :: возможно занижение суммы НДС, исчисленного к уплате в бюджет                                                      
  //         сумма ст. 170 р. 9 = ст. 230 р. 9 на последней странице если левая часть равенства > правой                                                                                                  
  if (dR9_170_sum > dR9_230)                                                                                                                                                                              
  { #SM(aR9_230, 'Стр. 230', 'КС :: 1.34: сумма ст. 170 р. 9 = ст. 230 р. 9 на последней странице если левая часть равенства > правой'); }                                                                
                                                                                                                                                                                                          
  // 1.35 :: НК РФ ст. 153, 173, п. 8 Раздела II Приложения 5 к Постановлению N 1137 :: возможно занижение суммы НДС, исчисленного к уплате в бюджет (при условии, что соотношение 1.32 и 1.47 выполняется)
  //         сумма ст. 180 р. 9 = ст. 240 р. 9 на последней странице если левая часть равенства > правой                                                                                                  
  if (dR9_180_sum > dR9_240)                                                                                                                                                                              
  { #SM(aR9_240, 'Стр. 240', 'КС :: 1.35: сумма ст. 180 р. 9 = ст. 240 р. 9 на последней странице если левая часть равенства > правой'); }                                                                
                                                                                                                                                                                                          
  // 1.36 :: НК РФ ст. 164, 165, 167, 173 :: возможно занижение исчисленной суммы НДС вследствие неполного отражения НБ либо неверное применение ставки по НДС (при условии, что соотношение 1.37 выполняется)
  //       сумма ст. 190 р. 9 = ст. 250 р. 9 на последней странице если левая часть равенства < правой                                                                                                    
  if (dR9_190_sum < dR9_250)                                                                                                                                                                              
  { #SM(aR9_250, 'Стр. 250', 'КС :: 1.36: сумма ст. 190 р. 9 = ст. 250 р. 9 на последней странице если левая часть равенства < правой'); }                                                                
                                                                                                                                                                                                          
  // 1.37 :: НК РФ ст. 153, 173, п. 8 Раздела II Приложения 5 к Постановлению N 1137 :: возможно занижение суммы НДС, исчисленного к уплате в бюджет                                                      
  //         сумма ст. 200 р. 9 = ст. 260 р. 9 на последней странице если левая часть равенства > правой                                                                                                  
  if (dR9_200_sum > dR9_260)                                                                                                                                                                              
  { #SM(aR9_260, 'Стр. 260', 'КС :: 1.37: сумма ст. 200 р. 9 = ст. 260 р. 9 на последней странице если левая часть равенства > правой'); }                                                                
                                                                                                                                                                                                          
  // 1.38 :: НК РФ ст. 153, 173, п. 8 Раздела II Приложения 5 к Постановлению N 1137 :: возможно занижение суммы НДС, исчисленного к уплате в бюджет (при условии, что соотношение 1.32 выполняется)      
  //         сумма ст. 210 р. 9 = ст. 270 р. 9 на последней странице если левая часть равенства > правой                                                                                                  
  if (dR9_210_sum > dR9_270)                                                                                                                                                                              
  { #SM(aR9_270, 'Стр. 270', 'КС :: 1.38: сумма ст. 210 р. 9 = ст. 270 р. 9 на последней странице если левая часть равенства > правой'); }                                                                
                                                                                                                                                                                                          
  // 1.45 :: НК РФ ст. 153, 173, п. 8 Раздела II Приложения 5 к Постановлению N 113 :: возможно занижение суммы НДС, исчисленного к уплате в бюджет                                                       
  //         сумма ст. 175 р. 9 = ст. 235 р. 9 на последней странице если левая часть равенства > правой                                                                                                  
  if (dR9_175_sum > dR9_235)                                                                                                                                                                              
  { #SM(aR9_235, 'Стр. 235', 'КС :: 1.45: сумма ст. 175 р. 9 = ст. 235 р. 9 на последней странице если левая часть равенства > правой'); }                                                                
                                                                                                                                                                                                          
  // 1.46 :: НК РФ ст. 153, 173, п. 8 Раздела II Приложения 5 к Постановлению N 113 :: возможно занижение суммы НДС, исчисленного к уплате в бюджет                                                       
  //         сумма ст. 205 р. 9 = ст. 265 р. 9 на последней странице если левая часть равенства > правой                                                                                                  
  if (dR9_205_sum > dR9_265)                                                                                                                                                                              
  { #SM(aR9_265, 'Стр. 265', 'КС :: 1.46: сумма ст. 205 р. 9 = ст. 265 р. 9 на последней странице если левая часть равенства > правой'); }                                                                
                                                                                                                                                                                                          
                                                                                                                                                                                                          
  //----------------------------------------------------------------------------------------------------------                                                                                            
  //#endregion РАЗДЕЛ 9                                                                                                                                                                                   
  //**********************************************************************************************************                                                                                            
                                                                                                                                                                                                          
                                                                                                                                                                                                          
  //==========================================================================================================                                                                                            
  //#region РАЗДЕЛ 9. ПРИЛОЖЕНИЕ 1                                                                                                                                                                        
  //----------------------------------------------------------------------------------------------------------                                                                                            
  dR9P1_250_sum := 0;   dR9P1_255_sum := 0;   dR9P1_260_sum := 0;   dR9P1_270_sum := 0;   dR9P1_280_sum := 0;   dR9P1_285_sum := 0;   dR9P1_290_sum := 0;                                                 
  dR9P1_280_dop_06 := 0; dR9P1_285_dop_06 := 0;   dR9P1_290_dop_06 := 0;                                                                                                                                  
  dR9P1_280_dop_41_43_44 := 0; dR9P1_285_dop_41_43_44 := 0;   dR9P1_290_dop_41_43_44 := 0;                                                                                                                
                                                                                                                                                                                                          
  cR9P1 := #GCs('Файл/Документ/НДС/КнигаПродДЛ/Файл/Документ/КнигаПродДЛ/КнПродДЛСтр');                                                                                                                   
  for (i := 0; i < cR9P1; i++)                                                                                                                                                                            
  {                                                                                                                                                                                                       
    aR9P1 := 'Файл/Документ/НДС/КнигаПродДЛ/Файл/Документ/КнигаПродДЛ/КнПродДЛСтр'+GetIter(i);                                                                                                            
                                                                                                                                                                                                          
    if (not XMLMap.GetAttrVisByName(aR9P1)) continue;                                                                                                                                                     
                                                                                                                                                                                                          
    aR9P1_250 := aR9P1+'/СтоимПродСФ20';     dR9P1_250 := #GDs(aR9P1_250);                                                                                                                                
    aR9P1_255 := aR9P1+'/СтоимПродСФ18';     dR9P1_255 := #GDs(aR9P1_255);                                                                                                                                
    aR9P1_260 := aR9P1+'/СтоимПродСФ10';     dR9P1_260 := #GDs(aR9P1_260);                                                                                                                                
    aR9P1_270 := aR9P1+'/СтоимПродСФ0' ;     dR9P1_270 := #GDs(aR9P1_270);                                                                                                                                
    aR9P1_280 := aR9P1+'/СумНДССФ20'   ;     dR9P1_280 := #GDs(aR9P1_280);                                                                                                                                
    aR9P1_285 := aR9P1+'/СумНДССФ18'   ;     dR9P1_285 := #GDs(aR9P1_285);                                                                                                                                
    aR9P1_290 := aR9P1+'/СумНДССФ10'   ;     dR9P1_290 := #GDs(aR9P1_290);                                                                                                                                
                                                                                                                                                                                                          
    dR9P1_250_sum := dR9P1_250_sum + dR9P1_250;                                                                                                                                                           
    dR9P1_255_sum := dR9P1_255_sum + dR9P1_255;                                                                                                                                                           
    dR9P1_260_sum := dR9P1_260_sum + dR9P1_260;                                                                                                                                                           
    dR9P1_270_sum := dR9P1_270_sum + dR9P1_270;                                                                                                                                                           
    dR9P1_280_sum := dR9P1_280_sum + dR9P1_280;                                                                                                                                                           
    dR9P1_285_sum := dR9P1_285_sum + dR9P1_285;                                                                                                                                                           
    dR9P1_290_sum := dR9P1_290_sum + dR9P1_290;                                                                                                                                                           
                                                                                                                                                                                                          
    cR9P1_dop := #GCs(aR9P1+'/КодВидОпер');                                                                                                                                                               
    for (j := 0; j < cR9P1_dop; j++)                                                                                                                                                                      
    {                                                                                                                                                                                                     
      aR9P1_dop := aR9P1+'/КодВидОпер'+GetIter(j);                                                                                                                                                        
                                                                                                                                                                                                          
      if (not XMLMap.GetAttrVisByName(aR9P1_dop)) continue;                                                                                                                                               
                                                                                                                                                                                                          
      aR9P1_090 := aR9P1_dop +'/Значение';     sR9P1_090 := #GSs(aR9P1_090);                                                                                                                              
                                                                                                                                                                                                          
      if (sR9P1_090 = '06')                                                                                                                                                                               
      { // сумма по всем листам dR9P1_280 и dR9P1_290, в которых R9P1_090 = '06'                                                                                                                          
        dR9P1_280_dop_06 := dR9P1_280_dop_06 + dR9P1_280;                                                                                                                                                 
        dR9P1_285_dop_06 := dR9P1_285_dop_06 + dR9P1_285;                                                                                                                                                 
        dR9P1_290_dop_06 := dR9P1_290_dop_06 + dR9P1_290;                                                                                                                                                 
                                                                                                                                                                                                          
        break;                                                                                                                                                                                            
      if ((sR9P1_090 = '41') or (sR9P1_090 = '43') or (sR9P1_090 = '44'))                                                                                                                                 
      { // сумма по всем листам dR9P1_280 и dR9P1_290, в которых R9P1_090 = '06'                                                                                                                          
        dR9P1_280_dop_41_43_44 := dR9P1_280_dop_41_43_44 + dR9P1_280;                                                                                                                                     
        dR9P1_285_dop_41_43_44 := dR9P1_285_dop_41_43_44 + dR9P1_285;                                                                                                                                     
        dR9P1_290_dop_41_43_44 := dR9P1_290_dop_41_43_44 + dR9P1_290;                                                                                                                                     
                                                                                                                                                                                                          
        break;                                                                                                                                                                                            
      }                                                                                                                                                                                                   
      }                                                                                                                                                                                                   
    }                                                                                                                                                                                                     
  }                                                                                                                                                                                                       
                                                                                                                                                                                                          
  NameStr := pFH.Func('myGetPageIDR9D_F');                                                                                                                                                                
                                                                                                                                                                                                          
  // 1.23 :: НК РФ ст. 173 :: занижение суммы НДС, подлежащей уплате в бюджет                                                                                                                             
  //         ст. 020 прил. 1 к р. 9 дНДС = р. 9 ст. 230  ст. 025 прил. 1 к р. 9 дНДС = р. 9 ст. 235  ст. 030 прил. 1 к р. 9 дНДС = р. 9 ст. 240  ст. 040 прил. 1 к р. 9 дНДС = р. 9 ст. 250  ст. 050 прил. 1 к р. 9 дНДС = р. 9 ст. 260
  //         ст. 055 прил. 1 к р. 9 дНДС = р. 9 ст. 265  ст. 060 прил. 1 к р. 9 дНДС = р. 9 ст. 270  ст. 070 прил. 1 к р. 9 дНДС = р. 9 ст. 280  если левая часть равенства < правой
  sMes := 'КС :: 1.23: ст. 020 прил. 1 к р. 9 дНДС = р. 9 ст. 230;ст. 025 прил. 1 к р. 9 дНДС = р. 9 ст. 235; ст. 030 прил. 1 к р. 9 дНДС = р. 9 ст. 240; ст. 040 прил. 1 к р. 9 дНДС = р. 9 ст. 250; ст. 050 прил. 1 к р. 9 дНДС = р. 9 ст. 260;....';
  if (dR9P1_020 < dR9_230) { #SM(aR9P1_020, 'Стр. 020', sMes); }                                                                                                                                         
  if (dR9P1_025 < dR9_235) { #SM(aR9P1_025, 'Стр. 025', sMes); }                                                                                                                                         
  if (dR9P1_030 < dR9_240) { #SM(aR9P1_030, 'Стр. 030', sMes); }                                                                                                                                         
  if (dR9P1_040 < dR9_250) { #SM(aR9P1_040, 'Стр. 040', sMes); }                                                                                                                                         
  if (dR9P1_050 < dR9_260) { #SM(aR9P1_050, 'Стр. 050', sMes); }                                                                                                                                         
  if (dR9P1_055 < dR9_265) { #SM(aR9P1_055, 'Стр. 055', sMes); }                                                                                                                                         
  if (dR9P1_060 < dR9_270) { #SM(aR9P1_060, 'Стр. 060', sMes); }                                                                                                                                         
  if (dR9P1_070 < dR9_280) { #SM(aR9P1_070, 'Стр. 070', sMes); }                                                                                                                                         
                                                                                                                                                                                                         
  // 1.39 :: НК РФ ст. 153, 173, п. 3 Раздела IV Приложения 5 к Постановлению N 1137 :: возможно занижение суммы НДС, исчисленного к уплате в бюджет (при условии, что соотношения 1.32 и 1.49 выполняются)
  //         ст. 020 прил. 9 + сумма ст. 250 прил. 1 к р. 9 = ст. 310 прил. 1 к р. 9 дНДС если левая часть равенства > правой                                                                            
  if ((dR9P1_020 + dR9P1_250_sum) > dR9P1_310)                                                                                                                                                           
  { #SM(aR9P1_310, 'Стр. 310', 'КС :: 1.39: ст. 020 прил. 9 + сумма ст. 250 прил. 1 к р. 9 = ст. 310 прил. 1 к р. 9 дНДС если левая часть равенства > правой'); }                                        
                                                                                                                                                                                                         
  // 1.40 :: НК РФ ст. 153, 173, п. 3 Раздела IV Приложения 5 к Постановлению N 1137 :: возможно занижение суммы НДС, исчисленного к уплате в бюджет                                                     
  //         ст. 030 прил. 1 к р. 9 + сумма ст. 260 прил. 1 к р. 9 дНДС = ст. 320 прил. 1 к р. 9 дНДС если левая часть равенства > правой                                                                
  if ((dR9P1_030 + dR9P1_260_sum) > dR9P1_320)                                                                                                                                                           
  { #SM(aR9P1_320, 'Стр. 320', 'КС :: 1.40: ст. 030 прил. 1 к р. 9 + сумма ст. 260 прил. 1 к р. 9 дНДС = ст. 320 прил. 1 к р. 9 дНДС если левая часть равенства > правой'); }                            
                                                                                                                                                                                                         
  // 1.41 :: НК РФ ст. 164, 165, 167, 173 :: возможно занижение исчисленной суммы НДС вследствие неполного отражения НБ либо неверное применение ставки по НДС                                           
  //        ст. 040 прил. 1 к р. 9 дНДС + сумма ст. 270 прил. 1 к р. 9 дНДС = ст. 330 прил. 1 к р. 9 дНДС если левая часть равенства < правой                                                            
  if ((dR9P1_040 + dR9P1_270_sum) < dR9P1_330)                                                                                                                                                           
  { #SM(aR9P1_330, 'Стр. 330', 'КС :: 1.41: ст. 040 прил. 1 к р. 9 дНДС + сумма ст. 270 прил. 1 к р. 9 дНДС = ст. 330 прил. 1 к р. 9 дНДС если левая часть равенства < правой'); }                       
                                                                                                                                                                                                         
  // 1.42 :: НК РФ ст. 153, 173, п. 3 Раздела IV Приложения 5 к Постановлению N 1137 :: возможно занижение суммы НДС, исчисленного к уплате в бюджет (при условии, что соотношение 1.32 выполняется)     
  //         ст. 050 прил. 1 к р. 9 дНДС + сумма ст. 280 прил. 1 к р. 9 дНДС = ст. 340 прил. 1 к р. 9 дНДС если левая часть равенства > правой                                                           
  if ((dR9P1_050 + dR9P1_280_sum) > dR9P1_340)                                                                                                                                                           
  { #SM(aR9P1_340, 'Стр. 340', 'КС :: 1.42: ст. 050 прил. 1 к р. 9 дНДС + сумма ст. 280 прил. 1 к р. 9 дНДС = ст. 340 прил. 1 к р. 9 дНДС если левая часть равенства > правой'); }                       
                                                                                                                                                                                                         
  // 1.43 :: НК РФ ст. 153, 173, п. 3 Раздела IV Приложения 5 к Постановлению N 1137 :: возможно занижение суммы НДС, исчисленного к уплате в бюджет                                                     
  //         ст. 060 прил. 1 к р. 9 дНДС + сумма ст. 290 прил. 1 к р. 9 дНДС = ст. 350 прил. 1 к р. 9 дНДС если левая часть равенства > правой                                                           
  if ((dR9P1_060 + dR9P1_290_sum) > dR9P1_350)                                                                                                                                                           
  { #SM(aR9P1_350, 'Стр. 350', 'КС :: 1.43: ст. 060 прил. 1 к р. 9 дНДС + сумма ст. 290 прил. 1 к р. 9 дНДС = ст. 350 прил. 1 к р. 9 дНДС если левая часть равенства > правой'); }                       
                                                                                                                                                                                                         
  // 1.47 :: НК РФ ст. 153, 173, п. 8 Раздела II Приложения 5 к Постановлению N 113 :: возможно занижение суммы НДС, исчисленного к уплате в бюджет                                                      
  //         ст. 025 прил. 1 к р. 9 + сумма ст. 255 прил. 1 к р. 9 = ст. 315 прил. 1 к р. 9 дНДС если левая часть равенства > правой                                                                     
  if (dR9P1_025 + dR9P1_255_sum > dR9P1_315)                                                                                                                                                             
  { #SM(aR9P1_315, 'Стр. 315', 'КС :: 1.47: ст. 025 прил. 1 к р. 9 + сумма ст. 255 прил. 1 к р. 9 = ст. 315 прил. 1 к р. 9 дНДС если левая часть равенства > правой'); }                                 
                                                                                                                                                                                                         
  // 1.48 :: НК РФ ст. 153, 173, п. 8 Раздела II Приложения 5 к Постановлению N 113 :: возможно занижение суммы НДС, исчисленного к уплате в бюджет                                                      
  //         ст. 055 прил. 1 к р. 9 дНДС + сумма ст. 285 прил. 1 к р. 9 дНДС = ст. 345 прил. 1 к р. 9 дНДС если левая часть равенства > правой                                                           
  if (dR9P1_055 + dR9P1_285_sum > dR9P1_345)                                                                                                                                                             
  { #SM(aR9P1_345, 'Стр. 345', 'КС :: 1.48: ст. 055 прил. 1 к р. 9 дНДС + сумма ст. 285 прил. 1 к р. 9 дНДС = ст. 345 прил. 1 к р. 9 дНДС если левая часть равенства > правой'); }                       
                                                                                                                                                                                                         
                                                                                                                                                                                                         
                                                                                                                                                                                                         
  //----------------------------------------------------------------------------------------------------------                                                                                           
  //#endregion РАЗДЕЛ 9. ПРИЛОЖЕНИЕ 1                                                                                                                                                                    
  //**********************************************************************************************************                                                                                           
                                                                                                                                                                                                         
                                                                                                                                                                                                         
  //==========================================================================================================                                                                                           
  //#region РАЗДЕЛ 12                                                                                                                                                                                    
  //----------------------------------------------------------------------------------------------------------                                                                                           
  dR12_070_sum := 0;                                                                                                                                                                                     
                                                                                                                                                                                                         
  cR12 := #GCs('Файл/Документ/НДС/ВыстСчФ_173.5/Файл/Документ/ВыстСчФ_173.5');                                                                                                                           
  for (i := 0; i < cR12; i++)                                                                                                                                                                            
  {                                                                                                                                                                                                      
    aR12 := 'Файл/Документ/НДС/ВыстСчФ_173.5/Файл/Документ/ВыстСчФ_173.5'+GetIter(i);                                                                                                                    
                                                                                                                                                                                                         
    if (not XMLMap.GetAttrVisByName(aR12)) continue;                                                                                                                                                     
                                                                                                                                                                                                         
    aR12_060 := aR12+'/СтоимТовБНалВс';     dR12_060 := #GDs(aR12_060);                                                                                                                                  
    aR12_070 := aR12+'/СумНалПокуп'   ;     dR12_070 := #GDs(aR12_070);                                                                                                                                  
    aR12_080 := aR12+'/СтоимТовСНалВс';     dR12_080 := #GDs(aR12_080);                                                                                                                                  
                                                                                                                                                                                                         
    dR12_070_sum := dR12_070_sum + dR12_070;                                                                                                                                                             
                                                                                                                                                                                                         
    NameStr := pFH.Func('myGetPageIDR12_0',i+1);                                                                                                                                                         
                                                                                                                                                                                                         
    // 1.44 :: НК РФ ст. 173 :: занижение суммы НДС, исчисленного к уплате в бюджет                                                                                                                      
    //         ст. 070 р. 12 = ст. 080 р. 12 - ст. 060 р. 12 если левая часть равенства < правой                                                                                                         
    if (dR12_070 < (dR12_080 - dR12_060))                                                                                                                                                                
    { #SM(aR12_070, 'Стр. 070', 'КС :: 1.44: ст. 070 р. 12 = ст. 080 р. 12 - ст. 060 р. 12 если левая часть равенства < правой'); }                                                                      
  }                                                                                                                                                                                                      
  //----------------------------------------------------------------------------------------------------------                                                                                           
  //#endregion РАЗДЕЛ 12                                                                                                                                                                                 
  //**********************************************************************************************************                                                                                           
                                                                                                                                                                                                         
                                                                                                                                                                                                         
  //==========================================================================================================                                                                                           
  //#region РАЗДЕЛ 1                                                                                                                                                                                     
  //----------------------------------------------------------------------------------------------------------                                                                                           
  NameStr := pFH.Func('myGetPageIDR01_0');                                                                                                                                                               
                                                                                                                                                                                                         
  // 1.20 :: НК РФ ст. 173 :: занижение суммы НДС, подлежащей уплате в бюджет за онп                                                                                                                     
  //         если ст. 200 р. 3 + ст. 130 р. 4 + ст. 160 р. 6 >= ст. 210 р. 3 + ст. 120 р. 4 + ст. 080 р. 5 + ст. 090 р. 5 + ст. 170 р. 6, то ст. 040 р. 1 = (ст. 200 р. 3 + ст. 130 р. 4 + ст. 160 р. 6) - (ст. 210 р. 3 + ст. 120 р. 4 + ст. 080 ...
  if ((dR3_200_gr3 + dR4_130 + dR6_160) >= (dR3_210_gr3 + dR4_120 + dR5_080 + dR5_090 + dR6_170))                                                                                                                                                    
    if (dR1_040 < ((dR3_200_gr3 + dR4_130 + dR6_160) - (dR3_210_gr3 + dR4_120 + dR5_080 + dR5_090 + dR6_170)))                                                                                                                                       
      { #SM(aR1_040_050, 'Стр. 040', 'КС :: 1.20: если ст. 200 р. 3 + ст. 130 р. 4 + ст. 160 р. 6 >= ст. 210 р. 3 + ст. 120 р. 4 + ст. 080 р. 5 + ст. 090 р. 5 + ст. 170 р. 6, то ст. 040 р. 1 = (ст. 200 р. 3 +...'); }                             
                                                                                                                                                                                                                                                     
  // 1.21 :: НК РФ ст. 173 :: завышение суммы НДС, подлежащей возмещению за онп                                                                                                                                                                      
  //         если ст. 200 р. 3 + ст. 130 р. 4 + ст. 160 р. 6 < ст. 210 р. 3 + ст. 120 р. 4 + ст. 080 р. 5 + ст. 090 р. 5 + ст. 170 р. 6, то ст. 050 р. 1 = (ст. 210 р. 3 + ст. 120 р. 4 + ст. 080 р. 5 + ст. 090 р. 5 + ст. 170 р. 6) - (ст. 200 ... 
  if ((dR3_200_gr3 + dR4_130 + dR6_160) < (dR3_210_gr3 + dR4_120 + dR5_080 + dR5_090 + dR6_170))                                                                                                                                                     
    if (dR1_050 > ((dR3_210_gr3 + dR4_120 + dR5_080 + dR5_090 + dR6_170) - (dR3_200_gr3 + dR4_130 + dR6_160)))                                                                                                                                       
      { #SM(aR1_040_050, 'Стр. 050', 'КС :: 1.21: если ст. 200 р. 3 + ст. 130 р. 4 + ст. 160 р. 6 < ст. 210 р. 3 + ст. 120 р. 4 + ст. 080 р. 5 + ст. 090 р. 5 + ст. 170 р. 6, то ст. 050 р. 1 = (ст. 210 р. 3 + ...'); }                             
                                                                                                                                                                                                                                                     
  // 1.24 :: НК РФ п. 5 ст. 173 :: занижение суммы НДС, подлежащей уплате в бюджет                                                                                                                                                                   
  //         если ст. 030 р. 1 > 0, то ст. 030 р. 1 = сумма ст. 070 р. 12 если ст. 030 р. 1 < ст. 070 р. 12                                                                                                                                          
  if (dR1_030 > 0)                                                                                                                                                                                                                                   
    if (dR1_030 < dR12_070_sum)                                                                                                                                                                                                                      
    { #SM(aR1_030, 'Стр. 030', 'КС :: 1.24: если ст. 030 р. 1 > 0, то ст. 030 р. 1 = сумма ст. 070 р. 12 если ст. 030 р. 1 < ст. 070 р. 12'); }                                                                                                      
                                                                                                                                                                                                                                                     
  // 1.25 :: НК РФ ст. 173 :: завышение суммы НДС, подлежащей возмещению за онп                                                                                                                                                                      
  //         если ст. 050 р. 1 > 0, то [ст. 190 р. 8 + (ст. 190 прил. 1 к р. 8 дНДС - ст. 005 прил. 1 к р. 8 дНДС) - [ст. 260 р. 9 + ст. 265 р. 9 + ст. 270 р. 9] - [сумма ст. 200 р. 9 + ст. 205 р. 9 + ст. 210 р. 9, в которых ст. 010 = 06] +     
  //    [ст. 340 прил. 1 к р. 9 дНДС + ст. 345 прил. 1 к р. 9 дНДС + ст. 350 прил. 1 к р. 9 дНДС - ст. 050 прил. 1 к р. 9 дНДС - ст. 055 прил. 1 к р. 9 дНДС - ст. 060 прил. 1 к р. 9 дНДС] -                
  //    сумма ст. 280 прил. 1 к р. 9 дНДС + ст. 285 прил. 1 к р. 9 дНДС + ст. 290 прил. 1 к р. 9 дНДС, в которых ст. 090 = 06] > 0                                                                           
                                                                                                                                                                                                             
  if (dR1_050 > 0)                                                                                                                                                                                           
    if ((dR8_190 + (dR8P1_190 - dR8P1_005) - (dR9_260 + dR9_265 + dR9_270) - (dR9_200_dop_06 + dR9_205_dop_06 + dR9_210_dop_06) + (dR9P1_340 + dR9P1_345 + dR9P1_350 - dR9P1_050 - dR9P1_055 - dR9P1_060) -  
     (dR9P1_280_dop_06 + dR9P1_285_dop_06 +dR9P1_290_dop_06)) > 0)                                                                                                                                           
    { #SM(aR1_040_050, 'Стр. 050', 'КС :: 1.25: если ст. 050 р. 1 > 0, то [ст. 190 р. 8 + (ст. 190 прил. 1 к р. 8 дНДС - ст. 005 прил. 1 к р. 8 дНДС) - [ст. 260 р. 9 + ст. 265 р. 9 +ст. 270 р. 9] - [сумма ст. 200 р. 9 +...'); }
                                                                                                                                                                                                             
   aKBK:='Файл/Документ/НДС/СумУплНП/КБК';         sKBK:=#GSs(aKBK);                                                                                                                                         
   aOKTMO:='Файл/Документ/НДС/СумУплНП/ОКТМО';     sOKTMO:=#GSs(aOKTMO);                                                                                                                                     
                                                                                                                                                                                                             
  // 1.53 :: НК РФ ст. 80 :: КБК                                                                                                                                                                             
  // р. 1 ст. 020 и (или) р. 2 ст. 040 = соответствует значению КБК для дНДС, указанному в соответствии с Классификатором кодов классификации доходов бюджетов РФ                                            
    if (not CheckKBK(sKBK))                                                                                                                                                                                  
        #SM(aKBK, 'Стр. 020', 'КС :: 1.53: р. 1 ст. 020 и (или) р. 2 ст. 040 = соответствует значению КБК для дНДС, указанному в соответствии с Классификатором РФ');                                        
                                                                                                                                                                                                             
  // 1.54 :: НК РФ ст. 80 :: ОКТМО                                                                                                                                                                           
  // р. 1 ст. 010 (или) р. 2 ст. 050 = соответствует значению, указанному в ОК 033-2013. Общероссийский классификатор территорий муниципальных образований                                                   
    if (not CheckOKTMO(sOKTMO))                                                                                                                                                                              
        #SM(aOKTMO, 'Стр. 010', 'КС :: 1.54: р. 1 ст. 010 (или) р. 2 ст. 050 = соответствует значению, указанному в ОК 033-2013');                                                                           
                                                                                                                                                                                                             
  //----------------------------------------------------------------------------------------------------------                                                                                               
  //#endregion РАЗДЕЛ 1                                                                                                                                                                                      
  //**********************************************************************************************************                                                                                               
                                                                                                                                                                                                             
                                                                                                                                                                                                             
  //==========================================================================================================                                                                                               
  //#region РАЗДЕЛ 2                                                                                                                                                                                         
  //----------------------------------------------------------------------------------------------------------                                                                                     
  fl_pR2_070_1011705_1011714 := True;   fl_pR2_070_1011711_1011703 := False;                                                                                                                       
  dR2_060_prd := 0;   dR2_060_sum := 0;                                                                                                                                                            
                                                                                                                                                                                                   
  //цикл по предыдущему периоду                                                                                                                                                                    
  flR2_090 := False;                                                                                                                                                                               
                                                                                                                                                                                                   
  cR2_dop := #GCp('Файл/Документ/НДС/СумУплНА');                                                                                                                                                   
  for (i := 0; i < cR2_dop; i++)                                                                                                                                                                   
  {                                                                                                                                                                                                
    aR2_prd := 'Файл/Документ/НДС/СумУплНА'+GetIter(i);                                                                                                                                            
                                                                                                                                                                                                   
    if (not XMLMap.GetAttrVisByName(aR2_prd)) continue;                                                                                                                                            
                                                                                                                                                                                                   
    aR2_070_prd := aR2_prd+'/КодОпер';     sR2_070_prd := #GSp(aR2_070_prd);                                                                                                                       
                                                                                                                                                                                                   
    if (sR2_070_prd = '1011711' or sR2_070_prd = '1011703')                                                                                                                                        
    {                                                                                                                                                                                              
      fl_pR2_070_1011711_1011703 := True;                                                                                                                                                          
      break;                                                                                                                                                                                       
    }                                                                                                                                                                                              
  }                                                                                                                                                                                                
                                                                                                                                                                                                   
  //цикл по текущему периоду                                                                                                                                                                       
  cR2 := #GCs('Файл/Документ/НДС/СумУплНА');                                                                                                                                                       
  for (i := 0; i < cR2; i++)                                                                                                                                                                       
  {                                                                                                                                                                                                
    aR2 := 'Файл/Документ/НДС/СумУплНА'+GetIter(i);                                                                                                                                                
                                                                                                                                                                                                   
    if (not XMLMap.GetAttrVisByName(aR2)) continue;                                                                                                                                                
                                                                                                                                                                                                   
    aR2_060 := aR2+'/СумИсчисл'    ;     dR2_060 := #GDs(aR2_060);                                                                                                                                 
    aR2_070 := aR2+'/КодОпер'      ;     sR2_070 := #GSs(aR2_070);                                                                                                                                 
    aR2_080 := aR2+'/СумИсчислОтгр';     dR2_080 := #GDs(aR2_080);                                                                                                                                 
    aR2_090 := aR2+'/СумИсчислОпл' ;     dR2_090 := #GDs(aR2_090);                                                                                                                                 
    aR2_100 := aR2+'/СумИсчислНА'  ;     dR2_100 := #GDs(aR2_100);                                                                                                                                 
                                                                                                                                                                                                   
    dR2_060_sum := dR2_060_sum + dR2_060;                                                                                                                                                          
                                                                                                                                                                                                   
    if (fl_pR2_070_1011705_1011714)                                                                                                                                                                
      fl_pR2_070_1011705_1011714 := (sR2_070 = '1011705' or sR2_070 = '1011707' or sR2_070 = '1011714');                                                                                           
                                                                                                                                                                                                   
    OldNameStr:=NameStr;                                                                                                                                                                           
    NameStr := pFH.Func('myGetPageIDR02_0',1);                                                                                                                                                     
                                                                                                                                                                                                   
  // 1.49 :: НК РФ ст. 174 п. 1 и 4 :: возможно нарушение срока уплаты суммы НДС                                                                                                                   
  // если в р. 2 ст. 070 онп отражен код 1011700, то ст. 060 онп = 0, если ст. 060 онп > 0, то отражение в ст. 070 р. 2 кода 1011700 некорректно                                                   
    if ('1011700' = sR2_070)                                                                                                                                                                       
     {                                                                                                                                                                                             
       if (dR2_060>0)                                                                                                                                                                              
       { #SM(aR2_060, 'Стр. 060', 'КС :: 1.49: если в р. 2 ст. 070 онп отражен код 1011700, то ст. 060 онп = 0, если ст. 060 онп > 0, то отражение в ст. 070 р. 2 кода 1011700 некорректно'); }    
     }                                                                                                                                                                                             
                                                                                                                                                                                                   
                                                                                                                                                                                                   
  // 1.50 :: НК РФ ст. 161 п. 4, 6, 8 :: возможно указан неверный код                                                                                                                              
  //при условии заполнения в р. 2 онп ст. 040 - 060, в ст. 070 р. 2 указывается код, 1011705, 1011709, 1011715                                                                                     
  // 1.51 :: НК РФ ст. 161 п. 3 :: возможно указан неверный код                                                                                                                                    
  //при условии заполнения в р. 2 онп ст. 020 - 060, в ст. 070 р. 2 указывается код 1011703                                                                                                        
  // 1.52 :: НК РФ ст. 161 п. 3 :: НК РФ ст. 161 п. 1, 5; ст. 174.2 п. 10                                                                                                                          
  //при условии заполнения в р. 2 онп ст. 020, 040 - 060, в ст. 070 р. 2 указывается код 1011707, 1011711, 1011712, 1011714                                                                        
    ats1:=aR2+'/КБК';ts1:=#GSs(ats1);                                                                                                                                                              
    ats2:=aR2+'/ОКТМО';ts2:=#GSs(ats2);                                                                                                                                                            
    ts3:=#GSs(aR2+'/НаимПрод');                                                                                                                                                                    
    ts4:=#GSs(aR2+'/ИННЮЛПрод');                                                                                                                                                                   
    if (dR2_060>0)                                                                                                                                                                                 
    {                                                                                                                                                                                              
        if ( (ts1<>'')  and (ts2<>'')  and (ts3<>'')  and (ts4<>'') and ('1011703' <> sR2_070))                                                                                                    
         {                                                                                                                                                                                         
           #SM(aR2_060, 'Стр. 060', 'КС :: 1.51: при условии заполнения в р. 2 онп ст. 020 - 060, в ст. 070 р. 2 указывается код 1011703');                                                        
         }                                                                                                                                                                                         
         else                                                                                                                                                                                      
          if ( (ts1<>'')  and (ts2<>'')  and (ts3<>'')  and ('1011707' <> sR2_070) and ('1011711' <> sR2_070) and ('1011712' <> sR2_070)and ('1011714' <> sR2_070) )                               
           {                                                                                                                                                                                       
             #SM(aR2_060, 'Стр. 060', 'КС :: 1.52: при условии заполнения в р. 2 онп ст. 020, 040 - 060, в ст. 070 р. 2 указывается код 1011707, 1011711, 1011712, 1011714');                      
           }                                                                                                                                                                                       
           else                                                                                                                                                                                    
            if ( (ts1<>'')  and (ts2<>'') and ('1011705' <> sR2_070) and ('1011709' <> sR2_070) and ('1011715' <> sR2_070))                                                                        
              {                                                                                                                                                                                    
                #SM(aR2_060, 'Стр. 060', 'КС :: 1.50: при условии заполнения в р. 2 онп ст. 040 - 060, в ст. 070 р. 2 указывается код, 1011705, 1011709, 1011715');                                
              }                                                                                                                                                                                    
    }                                                                                                                                                                                              
                                                                                                                                                                                                   
  // 1.53 :: НК РФ ст. 80 :: КБК                                                                                                                                                                   
  // р. 1 ст. 020 и (или) р. 2 ст. 040 = соответствует значению КБК для дНДС, указанному в соответствии с Классификатором кодов классификации доходов бюджетов Российской Федерации                
  if (not CheckKBK(ts1))                                                                                                                                                                           
        #SM(ats1, 'Стр. 040', 'КС :: 1.53: р. 1 ст. 020 и (или) р. 2 ст. 040 = соответствует значению КБК для дНДС, указанному в соответствии с Классификатором');                                 
                                                                                                                                                                                                   
  // 1.54 :: НК РФ ст. 80 :: ОКТМО                                                                                                                                                                 
  // р. 1 ст. 010 (или) р. 2 ст. 050 = соответствует значению, указанному в ОК 033-2013                                                                                                            
  if (not CheckOKTMO(ts2))                                                                                                                                                                         
        #SM(ats2, 'Стр. 050', 'КС :: 1.54: р. 1 ст. 010 (или) р. 2 ст. 050 = соответствует значению, указанному в ОК 033-2013');                                                                   
                                                                                                                                                                                                   
                                                                                                                                                                                                   
    NameStr:=OldNameStr;                                                                                                                                                                           
                                                                                                                                                                                                   
    // 1.3 :: НК РФ ст. 161, 173, 174 :: занижение суммы налога к уплате в бюджет                                                                                                                  
    //        При условии отражения в р. 2 ст. 070 кодов 1011705, 1011707: р. 2 ст. 060 = р. 2 (ст. 080 + ст. 090 - ст. 100) онп или р. 2 ст. 060 = р. 2 ст. 080 - р. 2 ст. 100 при условии если р. 2 ст. 090 пнп либо ппнп > 0; либо р. 2 ст. ...   
    sMes := 'КС :: 1.3: При условии отражения в р. 2 ст. 070 кодов 1011705, 1011707: р. 2 ст. 060 = р. 2 (ст. 080 + ст. 090 - ст. 100) онп или р. 2 ст. 060 = р. 2 ст. 080 - р. 2 ст. 100 при условии если р. 2 ст. 090 пнп либо ппнп > 0; либо...'; 
                                                                                                                                                                                                   
    var flError : boolean;                                                                                                                                                                         
    flError := True;                                                                                                                                                                               
                                                                                                                                                                                                   
    if (sR2_070 = '1011705' or sR2_070 = '011707')                                                                                                                                                
    {                                                                                                                                                                                              
      if (dR2_080 = 0 and dR2_100 = 0)                                                                                                                                                             
        flError := (dR2_060 <> dR2_090);                                                                                                                                                           
                                                                                                                                                                                                   
      if (flError)                                                                                                                                                                                 
      {                                                                                                                                                                                            
        flError := True;                                                                                                                                                                           
                                                                                                                                                                                                   
        if (dR2_090 = 0 and dR2_100 = 0)                                                                                                                                                           
          flError := (dR2_060 <> dR2_080);                                                                                                                                                         
                                                                                                                                                                                                   
        if (flError)                                                                                                                                                                               
        {                                                                                                                                                                                          
          aR2_010 := aR2+'/КППИно';     sR2_010 := #GSs(aR2_010);                                                                                                                                  
          aR2_040 := aR2+'/КБК'   ;     sR2_040 := #GSs(aR2_040);                                                                                                                                  
          aR2_050 := aR2+'/ОКТМО' ;     sR2_050 := #GSs(aR2_050);                                                                                                                                  
                                                                                                                                                                                                   
          if (#GVs(aR2+'/СведПродЮЛ')) {                                                                                                                                                           
            flUL := True;                                                                                                                                                                          
            aR2_020 := aR2+'/СведПродЮЛ/НаимПрод' ;     sR2_020 := #GSs(aR2_020);                                                                                                                  
            aR2_030 := aR2+'/СведПродЮЛ/ИННЮЛПрод';     sR2_030 := #GSs(aR2_030);                                                                                                                  
          } else {                                                                                                                                                                                 
            flUL := False;                                                                                                                                                                         
                                                                                                                                                                                                   
            aR2_FlINN := aR2+'/СведПродФЛ/ИННФЛПрод';     sR2_FlINN  := #GSs(aR2_FlINN );                                                                                                          
                                                                                                                                                                                                   
            if (#GVs(aR2+'/СведПродФЛ/ФИОПрод')) {                                                                                                                                                 
              aR2_FlFam  := aR2+'/СведПродФЛ/ФИОПрод/Фамилия' ;     sR2_FlFam  := #GSs(aR2_FlFam );                                                                                                
              aR2_FlImy  := aR2+'/СведПродФЛ/ФИОПрод/Имя'     ;     sR2_FlImy  := #GSs(aR2_FlImy );                                                                                                
              aR2_FlOtch := aR2+'/СведПродФЛ/ФИОПрод/Отчество';     sR2_FlOtch := #GSs(aR2_FlOtch);                                                                                                
            }                                                                                                                                                                                      
          }                                                                                                                                                                                        
                                                                                                                                                                                                   
          //цикл по предыдущему периоду                                                                                                                                                            
          flR2_090 := False;                                                                                                                                                                       
                                                                                                                                                                                                   
          cR2_dop := #GCp('Файл/Документ/НДС/СумУплНА');                                                                                                                                           
          for (j := 0; j < cR2_dop; j++)                                                                                                                                                           
          {                                                                                                                                                                                        
            aR2_prd := 'Файл/Документ/НДС/СумУплНА'+GetIter(j);                                                                                                                                    
                                                                                                                                                                                                   
            if (not XMLMap.GetAttrVisByName(aR2_prd)) continue;                                                                                                                                    
                                                                                                                                                                                                   
            aR2_010_prd    := aR2_prd+'/КППИно'                     ;     sR2_010_prd    := #GSp(aR2_010_prd   );                                                                                  
            aR2_040_prd    := aR2_prd+'/КБК'                        ;     sR2_040_prd    := #GSp(aR2_040_prd   );                                                                                  
            aR2_050_prd    := aR2_prd+'/ОКТМО'                      ;     sR2_050_prd    := #GSp(aR2_050_prd   );                                                                                  
            aR2_070_prd    := aR2_prd+'/КодОпер'                    ;     sR2_070_prd    := #GSp(aR2_070_prd   );                                                                                  
            aR2_020_prd    := aR2_prd+'/СведПродЮЛ/НаимПрод'        ;     sR2_020_prd    := #GSp(aR2_020_prd   );                                                                                  
            aR2_030_prd    := aR2_prd+'/СведПродЮЛ/ИННЮЛПрод'       ;     sR2_030_prd    := #GSp(aR2_030_prd   );                                                                                  
            aR2_FlINN_prd  := aR2_prd+'/СведПродФЛ/ИННФЛПрод'       ;     sR2_FlINN_prd  := #GSp(aR2_FlINN_prd );                                                                                  
            aR2_FlFam_prd  := aR2_prd+'/СведПродФЛ/ФИОПрод/Фамилия' ;     sR2_FlFam_prd  := #GSp(aR2_FlFam_prd );                                                                                  
            aR2_FlImy_prd  := aR2_prd+'/СведПродФЛ/ФИОПрод/Имя'     ;     sR2_FlImy_prd  := #GSp(aR2_FlImy_prd );                                                                                  
            aR2_FlOtch_prd := aR2_prd+'/СведПродФЛ/ФИОПрод/Отчество';     sR2_FlOtch_prd := #GSp(aR2_FlOtch_prd);                                                                                  
            aR2_090_prd    := aR2_prd+'/СумИсчислОпл'               ;     dR2_090_prd    := #GDp(aR2_090_prd   );                                                                                  
                                                                                                                                                                                                   
            if ((sR2_010_prd = sR2_010) and (sR2_040_prd = sR2_040) and (sR2_050_prd = sR2_050) and (sR2_070_prd = sR2_070))                                                                       
              if ((flUL and (sR2_020_prd = sR2_020) and (sR2_030_prd = sR2_030)) or (not flUL and (sR2_FlINN_prd = sR2_FlINN) and (sR2_FlFam_prd = sR2_FlFam) and (sR2_FlImy_prd = sR2_FlImy) and (sR2_FlOtch_prd = sR2_FlOtch)))
              { flR2_090 := (dR2_090_prd > 0); break; }                                                                                                                                            
          }                                                                                                                                                                                        
                                                                                                                                                                                                   
          NameStr := pFH.Func('myGetPageIDR02_0',i+1);                                                                                                                                             
                                                                                                                                                                                                   
          if (flR2_090) {                                                                                                                                                                          
            if (dR2_060 <> (dR2_080 - dR2_100))                                                                                                                                                    
              if (dR2_060 <> (dR2_080 + dR2_090 - dR2_100))                                                                                                                                        
              { #SM(aR2_060, 'Стр. 060', sMes); }                                                                                                                                                  
          }                                                                                                                                                                                        
          else { #SM(aR2_060, 'Стр. 060', sMes); }                                                                                                                                                 
        }                                                                                                                                                                                          
      }                                                                                                                                                                                            
    }                                                                                                                                                                                              
  }                                                                                                                                                                                                
                                                                                                                                                                                                   
  NameStr := pFH.Func('myGetPageIDR02_0',1);                                                                                                                                                       
  tS := #GSs('Файл/Документ/НДС/СумУплНА/КодОпер')                                                                                                                                                 
                                                                                                                                                                                                   
  // 1.26 :: НК РФ ст. 161, п. 4 ст. 173 :: занижение суммы НДС, подлежащей уплате в бюджет                                                                                                        
  // При условии неотражения в р. 2 ст. 070 кода 1011715: сумма                                                                                                                                    
  //   ст. 060 р. 2 = [сумма ст. 200, 205 и 210 по всем листам р. 9, в которых ст. 010 = 06] + [сумма ст. 280, 285 и 290 по всем листам прил. 1 к р. 9, в которых ст. 090 = 06]                    
  // если левая часть равенства < правой                                                                                                                                                           
  // При условии отражения в р. 2 ст. 070 кода 1011715:                                                                                                                                            
  //   ст. 060 р. 2 = [сумма ст. 200, 205 и 210 по всем листам р. 9, в которых ст. 010 = 41, 43 и 44] + [сумма ст. 280, 285 и 290 по всем листам прил. 1 к р. 9, в которых ст. 090 = 41, 43 и 44]  
  //                      - [сумма ст. 180 р. 8, в которых ст. 010 = 41, 42, 43 и 44] + [сумма ст. 180 прил. 1 к р. 8 дНДС, в которых ст. 010 = 41, 42, 43 и 44]                                   
  // если левая часть равенства < правой, то нарушение п. 4. 1 ст. 173 НК РФ".                                                                                                                     
    if ('1011715' = tS)                                                                                                                                                                            
     {                                                                                                                                                                                             
      if (dR2_060_sum <                                                                                                                                                                            
               ((dR9_200_dop_41_43_44 + dR9_205_dop_41_43_44 + dR9_210_dop_41_43_44) +                                                                                                             
                (dR9P1_280_dop_41_43_44 + dR9P1_285_dop_41_43_44 + dR9P1_290_dop_41_43_44) - dR8_180_dop_1234 + dR8P1_180_dop_1234 ))                                                              
       { #SM('Файл/Документ/НДС/СумУплНА/СумИсчисл', 'Стр. 060', 'КС :: 1.26: сумма ст. 060 по всем листам р. 2 = [сумма ст. 200,205 и 210 по всем листам р. 9, в которых ст. 010 = 41,43,44] + [сумма ст. 280,285 и 290 по ...'); } 
     }                                                                                                                                                                                                                               
     else                                                                                                                                                                                                                            
     {                                                                                                                                                                                                                               
      if (dR2_060_sum < (dR9_200_dop_06 + dR9_205_dop_06 + dR9_210_dop_06) + (dR9P1_280_dop_06 + dR9P1_285_dop_06 + dR9P1_290_dop_06))                                                                                               
       { #SM('Файл/Документ/НДС/СумУплНА/СумИсчисл', 'Стр. 06', 'КС :: 1.26: сумма ст. 060 по всем листам р. 2 = [сумма ст. 200,205 и 210 по всем листам р. 9, в которых ст. 010 = 06] + [сумма ст. 280,285 и 290 по ...'); }       
     }                                                                                                                                                                                             
                                                                                                                                                                                                   
  //----------------------------------------------------------------------------------------------------------                                                                                     
  //#endregion РАЗДЕЛ 2                                                                                                                                                                            
  //**********************************************************************************************************                                                                                     
                                                                                                                                                                                                   
                                                                                                                                                                                                   
  //==========================================================================================================                                                                                     
  //#region РАЗДЕЛ 3. ПРИЛОЖЕНИЕ 1                                                                                                                                                                 
  //----------------------------------------------------------------------------------------------------------                                                                                     
  dR3P1_070_gr4_dop := 0;                                                                                                                                                                          
                                                                                                                                                                                                   
  cR3P1 := #GCs('Файл/Документ/НДС/СумУпл164/СумВосУпл');                                                                                                                                          
  for (i := 0; i < cR3P1; i++)                                                                                                                                                                     
  {                                                                                                                                                                                                
    aR3P1 := 'Файл/Документ/НДС/СумУпл164/СумВосУпл'+GetIter(i);                                                                                                                                   
                                                                                                                                                                                                   
    if (not XMLMap.GetAttrVisByName(aR3P1)) continue;                                                                                                                                              
                                                                                                                                                                                                   
    aR3P1_030 := aR3P1+'/КодОпООС';     sR3P1_030 := #GSs(aR3P1_030);                                                                                                                              
                                                                                                                                                                                                   
    if ((sR3P1_030 = '1011801') or (sR3P1_030 = '1011802') or (sR3P1_030 = '1011803') or (sR3P1_030 = '1011805') or                                                                                
        (sR3P1_030 = '1011806') or (sR3P1_030 = '1011807') or (sR3P1_030 = '1011808'))                                                                                                             
    {                                                                                                                                                                                              
      cR3P1_dop := #GCs(aR3P1 + '/СведНалГод');                                                                                                                                                    
      for (j := 0; j < cR3P1_dop; j++)                                                                                                                                                             
      {                                                                                                                                                                                            
        aR3P1_dop := aR3P1 + '/СведНалГод'+GetIter(j);                                                                                                                                             
                                                                                                                                                                                                   
        if (not XMLMap.GetAttrVisByName(aR3P1_dop)) continue;                                                                                                                                      
                                                                                                                                                                                                   
        aR3P1_070_gr1 := aR3P1_dop+'/ГодОтч';     sR3P1_070_gr1 := #GSs(aR3P1_070_gr1);                                                                                                            
        aR3P1_070_gr4 := aR3P1_dop+'/НалГод';     dR3P1_070_gr4 := #GDs(aR3P1_070_gr4);                                                                                                            
                                                                                                                                                                                                   
        if (sR3P1_070_gr1 = sOG_TL)                                                                                                                                                                
          dR3P1_070_gr4_dop += dR3P1_070_gr4;                                                                                                                                                      
      }                                                                                                                                                                                            
    }                                                                                                                                                                                              
  }                                                                                                                                                                                                
  //----------------------------------------------------------------------------------------------------------                                                                                     
  //#endregion РАЗДЕЛ 3. ПРИЛОЖЕНИЕ 1                                                                                                                                                              
  //**********************************************************************************************************                                                                                     
                                                                                                                                                                                                   
                                                                                                                                                                                                   
  //==========================================================================================================                                                                                     
  //#region РАЗДЕЛ 4                                                                                                                                                                               
  //----------------------------------------------------------------------------------------------------------                                                                                     
  dR4_030_sum := dR4_040_sum := dR4_050_sum := dR4_080_sum := 0;                                                                                                                                   
                                                                                                                                                                                                   
  cR4 := #GCs('Файл/Документ/НДС/НалПодтв0/СумОпер4');                                                                                                                                             
  for (i := 0; i < cR4; i++)                                                                                                                                                                       
  {                                                                                                                                                                                                
    aR4 := 'Файл/Документ/НДС/НалПодтв0/СумОпер4'+GetIter(i);                                                                                                                                      
                                                                                                                                                                                                   
    if (not XMLMap.GetAttrVisByName(aR4)) continue;                                                                                                                                                
                                                                                                                                                                                                   
    aR4_030 := aR4+'/НалВычПод';     dR4_030 := #GDs(aR4_030);                                                                                                                                     
    aR4_040 := aR4+'/НалНеПод' ;     dR4_040 := #GDs(aR4_040);                                                                                                                                     
    aR4_050 := aR4+'/НалВосст' ;     dR4_050 := #GDs(aR4_050);                                                                                                                                     
                                                                                                                                                                                                   
    dR4_030_sum := dR4_030_sum + dR4_030;                                                                                                                                                          
    dR4_040_sum := dR4_040_sum + dR4_040;                                                                                                                                                          
    dR4_050_sum := dR4_050_sum + dR4_050;                                                                                                                                                          
  }                                                                                                                                                                                                
                                                                                                                                                                                                   
  cR4 := #GCs('Файл/Документ/НДС/НалПодтв0/КорНБВозврТов');                                                                                                                                        
  for (i := 0; i < cR4; i++)                                                                                                                                                                       
  {                                                                                                                                                                                                
    aR4 := 'Файл/Документ/НДС/НалПодтв0/КорНБВозврТов'+GetIter(i);                                                                                                                                 
                                                                                                                                                                                                   
    if (not XMLMap.GetAttrVisByName(aR4)) continue;                                                                                                                                                
                                                                                                                                                                                                   
    aR4_080 := aR4+'/НалВосст';     dR4_080 := #GDs(aR4_080);                                                                                                                                      
                                                                                                                                                                                                   
    dR4_080_sum := dR4_080;                                                                                                                                                                        
  }                                                                                                                                                                                                
                                                                                                                                                                                                   
  NameStr := pFH.Func('myGetPageIDR04_0');                                                                                                                                                         
                                                                                                                                                                                                   
  // 1.15 :: НК РФ ст. 171, 172; Протокол, р. II :: завышение суммы НДС, подлежащей вычету                                                                                                         
  //         р. 4 ст. 120 = сумма величин ст. 030 и 040 р. 4 - сумма величин ст. 050 + ст. 080 р. 4 если левая часть > правой                                                                      
  if (dR4_120 > ((dR4_030_sum + dR4_040_sum) - (dR4_050_sum + dR4_080)))                                                                                                                           
  { #SM(aR4_120_130, 'Стр. 120', 'КС :: 1.15: р. 4 ст. 120 = сумма величин ст. 030 и 040 р. 4 - сумма величин ст. 050 + ст. 080 р. 4 если левая часть > правой'); }                                
  //----------------------------------------------------------------------------------------------------------                                                                                     
  //#endregion РАЗДЕЛ 4                                                                                                                                                                            
  //**********************************************************************************************************                                                                                     
                                                                                                                                                                                                   
                                                                                                                                                                                                   
  //==========================================================================================================                                                                                     
  //#region РАЗДЕЛ 7                                                                                                                                                                               
  //----------------------------------------------------------------------------------------------------------                                                                                     
  dR7_gr2_dop := 0;   dR7_gr4_dop := 0;                                                                                                                                                            
                                                                                                                                                                                                   
  cR7 := #GCs('Файл/Документ/НДС/ОперНеНал/СумОпер7');                                                                                                                                             
  for (i := 0; i < cR7; i++)                                                                                                                                                                       
  {                                                                                                                                                                                                
    aR7 := 'Файл/Документ/НДС/ОперНеНал/СумОпер7'+GetIter(i);                                                                                                                                      
                                                                                                                                                                                                   
    if (not XMLMap.GetAttrVisByName(aR7)) continue;                                                                                                                                                
                                                                                                                                                                                                   
    aR7_gr1 := aR7+'/КодОпер'  ;     sR7_gr1 := #GSs(aR7_gr1);                                                                                                                                     
    aR7_gr2 := aR7+'/СтРеалТов';     dR7_gr2 := #GDs(aR7_gr2);                                                                                                                                     
    aR7_gr4 := aR7+'/НалНеВыч' ;     dR7_gr4 := #GDs(aR7_gr4);                                                                                                                                     
                                                                                                                                                                                                   
    // от 1010800 до 1010830                                                                                                                                                                       
    if (   (sR7_gr1 = '1010800') or (sR7_gr1 = '1010801') or (sR7_gr1 = '1010802') or (sR7_gr1 = '1010803') or (sR7_gr1 = '1010804') or (sR7_gr1 = '1010805') or (sR7_gr1 = '1010806') or (sR7_gr1 = '1010807')
        or (sR7_gr1 = '1010808') or (sR7_gr1 = '1010809') or (sR7_gr1 = '1010810') or (sR7_gr1 = '1010811') or (sR7_gr1 = '1010812') or (sR7_gr1 = '1010813') or (sR7_gr1 = '1010814') or (sR7_gr1 = '1010815')
        or (sR7_gr1 = '1010816') or (sR7_gr1 = '1010817') or (sR7_gr1 = '1010818') or (sR7_gr1 = '1010819') or (sR7_gr1 = '1010820') or (sR7_gr1 = '1010821') or (sR7_gr1 = '1010822') or (sR7_gr1 = '1010823')
        or (sR7_gr1 = '1010824') or (sR7_gr1 = '1010825') or (sR7_gr1 = '1010826') or (sR7_gr1 = '1010827') or (sR7_gr1 = '1010828') or (sR7_gr1 = '1010829') or (sR7_gr1 = '1010830'))            
    then {                                                                                                                                                                                         
      dR7_gr2_dop := dR7_gr2_dop + dR7_gr2;                                                                                                                                                        
      dR7_gr4_dop := dR7_gr4_dop + dR7_gr4;                                                                                                                                                        
         }                                                                                                                                                                                         
  }                                                                                                                                                                                                
  //----------------------------------------------------------------------------------------------------------                                                                                     
  //#endregion РАЗДЕЛ 7                                                                                                                                                                            
  //**********************************************************************************************************                                                                                     
                                                                                                                                                                                                   
                                                                                                                                                                                                   
  //==========================================================================================================                                                                                     
  //#region РАЗДЕЛ 3. ПРИЛОЖЕНИЕ 2                                                                                                                                                                 
  //----------------------------------------------------------------------------------------------------------                                                                                     
  dR3P2_gr2_sum := 0;   dR3P2_gr3_sum := 0;                                                                                                                                                        
                                                                                                                                                                                                   
  cR3P2 := #GCs('Файл/Документ/НДС/СумУпл164/СумВычИн/СведНалГодИ');                                                                                                                               
  for (i := 0; i < cR3P2; i++)                                                                                                                                                                     
  {                                                                                                                                                                                                
    aR3P2_dop := 'Файл/Документ/НДС/СумУпл164/СумВычИн/СведНалГодИ'+GetIter(i);                                                                                                                    
                                                                                                                                                                                                   
    if (not XMLMap.GetAttrVisByName(aR3P2_dop)) continue;                                                                                                                                          
                                                                                                                                                                                                   
    aR3P2_gr2 := aR3P2_dop+'/СумНалИсч';     dR3P2_gr2 := #GDs(aR3P2_gr2);                                                                                                                         
    aR3P2_gr3 := aR3P2_dop+'/СумНалВыч';     dR3P2_gr3 := #GDs(aR3P2_gr3);                                                                                                                         
                                                                                                                                                                                                   
    dR3P2_gr2_sum := dR3P2_gr2_sum + dR3P2_gr2;                                                                                                                                                    
    dR3P2_gr3_sum := dR3P2_gr3_sum + dR3P2_gr3;                                                                                                                                                    
  }                                                                                                                                                                                                
                                                                                                                                                                                                   
  NameStr := pFH.Func('myGetPageIDR03_2');                                                                                                                                                         
                                                                                                                                                                                                   
  // 1.13 :: НК РФ ст. 173 :: занижение суммы НДС, исчисленной к уплате в бюджет по р. 3                                                                                                           
  //         гр. 2 прил. N 2 к р. 3 дНДС онп <= р. 3 ст. 118 гр. 5                                                                                                                                 
  if (dR3P2_gr2_sum > dR3_118_gr5)                                                                                                                                                                 
  { #SM('Файл/Документ/НДС/СумУпл164/СумВычИн/СведНалГодИ/СумНалИсч', 'Гр. 2', 'КС :: 1.13: гр. 2 прил. N 2 к р. 3 дНДС онп <= р. 3 ст. 118 гр. 5'); }                                             
                                                                                                                                                                                                   
  // 1.14 :: НК РФ ст. 170, 171, 172 :: занижение суммы налога, подлежащей вычету                                                                                                                  
  //         гр. 3 прил. N 2 к р. 3 дНДС онп <= р. 3 стр. 190 гр. 3                                                                                                                                
  if (dR3P2_gr3_sum > dR3_190_gr3)                                                                                                                                                                 
  { #SM('Файл/Документ/НДС/СумУпл164/СумВычИн/СведНалГодИ/СумНалВыч', 'Гр. 3', 'КС :: 1.14: гр. 3 прил. N 2 к р. 3 дНДС онп <= р. 3 стр. 190 гр. 3'); }                                            
  //----------------------------------------------------------------------------------------------------------                                                                                     
  //#endregion РАЗДЕЛ 3. ПРИЛОЖЕНИЕ 2                                                                                                                                                              
  //**********************************************************************************************************                                                                                     
                                                                                                                                                                                                   
                                                                                                                                                                                                   
  //==========================================================================================================                                                                                     
  //#region РАЗДЕЛ 5                                                                                                                                                                               
  //----------------------------------------------------------------------------------------------------------                                                                                     
  dR5_050_sum := 0;   dR5_070_sum := 0;                                                                                                                                                            
                                                                                                                                                                                                   
  cR5 := #GCs('Файл/Документ/НДС/НалВычПред0/СумПер');                                                                                                                                             
  for (i := 0; i < cR5; i++)                                                                                                                                                                       
  {                                                                                                                                                                                                
    aR5 := 'Файл/Документ/НДС/НалВычПред0/СумПер'+GetIter(i);                                                                                                                                      
                                                                                                                                                                                                   
    if (not XMLMap.GetAttrVisByName(aR5)) continue;                                                                                                                                                
                                                                                                                                                                                                   
    cR5_dop := #GCs('Файл/Документ/НДС/НалВычПред0/СумПер'+GetIter(i)+'/СумОпер5');                                                                                                                
    for (j := 0; j < cR5_dop; j++)                                                                                                                                                                 
    {                                                                                                                                                                                              
      aR5_dop := 'Файл/Документ/НДС/НалВычПред0/СумПер'+GetIter(i)+'/СумОпер5'+GetIter(j);                                                                                                         
                                                                                                                                                                                                   
      if (not XMLMap.GetAttrVisByName(aR5_dop)) continue;                                                                                                                                          
                                                                                                                                                                                                   
      aR5_050 := aR5_dop+'/НалВычПод'  ;     dR5_050 := #GDs(aR5_050);                                                                                                                             
      aR5_070 := aR5_dop+'/НалВычНеПод';     dR5_070 := #GDs(aR5_070);                                                                                                                             
                                                                                                                                                                                                   
      dR5_050_sum := dR5_050_sum + dR5_050;                                                                                                                                                        
      dR5_070_sum := dR5_070_sum + dR5_070;                                                                                                                                                        
    }                                                                                                                                                                                              
  }                                                                                                                                                                                                
                                                                                                                                                                                                   
  NameStr := pFH.Func('myGetPageIDR05_F');                                                                                                                                                         
                                                                                                                                                                                                   
  // 1.16 :: НК РФ ст. 171, 172; Протокол р. II :: завышение суммы НДС, подлежащей вычету                                                                                                          
  //         ст. 080 р. 5 = сумма величин ст. 050 р. 5 если левая часть > правой                                                                                                                   
  if (dR5_080 > dR5_050_sum)                                                                                                                                                                       
  { #SM(aR5_080, 'Стр. 080', 'КС :: 1.16: ст. 080 р. 5 = сумма величин ст. 050 р. 5 если левая часть > правой'); }                                                                                 
                                                                                                                                                                                                   
  // 1.17 :: НК РФ ст. 171, 172; Протокол р. II :: завышение суммы НДС, подлежащей вычету                                                                                                          
  //         ст. 090 р. 5 = сумма величин ст. 070 р. 5 если левая часть > правой                                                                                                                   
  if (dR5_090 > dR5_070_sum)                                                                                                                                                                       
  { #SM(aR5_090, 'Стр. 090', 'КС :: 1.17: ст. 090 р. 5 = сумма величин ст. 070 р. 5 если левая часть > правой'); }                                                                                 
  //----------------------------------------------------------------------------------------------------------                                                                                     
  //#endregion РАЗДЕЛ 5                                                                                                                                                                            
  //**********************************************************************************************************                                                                                     
                                                                                                                                                                                                   
                                                                                                                                                                                                   
  //==========================================================================================================                                                                                     
  //#region РАЗДЕЛ 6                                                                                                                                                                               
  //----------------------------------------------------------------------------------------------------------                                                                                     
  dR6_030_sum := dR6_040_sum := dR6_130_sum := 0;                                                                                                                                                  
                                                                                                                                                                                                   
  cR6 := #GCs('Файл/Документ/НДС/НалНеПодтв0/СумОпер6');                                                                                                                                           
  for (i := 0; i < cR6; i++)                                                                                                                                                                       
  {                                                                                                                                                                                                
    aR6 := 'Файл/Документ/НДС/НалНеПодтв0/СумОпер6'+GetIter(i);                                                                                                                                    
                                                                                                                                                                                                   
    if (not XMLMap.GetAttrVisByName(aR6)) continue;                                                                                                                                                
                                                                                                                                                                                                   
    aR6_030 := aR6+'/СумНал164'  ;     dR6_030 := #GDs(aR6_030);                                                                                                                                   
    aR6_040 := aR6+'/НалВычНеПод';     dR6_040 := #GDs(aR6_040);                                                                                                                                   
                                                                                                                                                                                                   
    dR6_030_sum += dR6_030;                                                                                                                                                                        
    dR6_040_sum += dR6_040;                                                                                                                                                                        
  }                                                                                                                                                                                                
                                                                                                                                                                                                   
  cR6 := #GCs('Файл/Документ/НДС/НалНеПодтв0/КорНалИзмЦен');                                                                                                                                       
  for (i := 0; i < cR6; i++)                                                                                                                                                                       
  {                                                                                                                                                                                                
    aR6 := 'Файл/Документ/НДС/НалНеПодтв0/КорНалИзмЦен'+GetIter(i);                                                                                                                                
                                                                                                                                                                                                   
    if (not XMLMap.GetAttrVisByName(aR6)) continue;                                                                                                                                                
                                                                                                                                                                                                   
    aR6_130 := aR6+'/КорИсч.164.23Ув';     dR6_130 := #GDs(aR6_130);                                                                                                                               
                                                                                                                                                                                                   
    dR6_130_sum += dR6_130;                                                                                                                                                                        
  }                                                                                                                                                                                                
                                                                                                                                                                                                   
  NameStr := pFH.Func('myGetPageIDR06_0');                                                                                                                                                         
                                                                                                                                                                                                   
  // 1.18 :: НК РФ ст. 153, 164, 165, 167, Протокол р. II :: занижение исчисленной суммы НДС, вследствие неполного отражения НБ, либо неверное применение ставки по НДС                            
  //         ст. 050 р. 6 = сумма строк ст. 030 р. 6 если левая часть < правой                                                                                                                     
  if (dR6_050 < dR6_030_sum)                                                                                                                                                                       
  { #SM(aR6_050, 'Стр. 050', 'КС :: 1.18: ст. 050 р. 6 = сумма строк ст. 030 р. 6 если левая часть < правой'); }                                                                                   
                                                                                                                                                                                                   
  // 1.19 :: НК РФ ст. 171, 172, Протокол р. II :: завышение суммы НДС, подлежащей вычету                                                                                                          
  //         ст. 060 р. 6 = сумма строк ст. 040 р. 6 если левая часть > правой                                                                                                                     
  if (dR6_060 > dR6_040_sum)                                                                                                                                                                       
  { #SM(aR6_060, 'Стр. 060', 'КС :: 1.19: ст. 060 р. 6 = сумма строк ст. 040 р. 6 если левая часть > правой'); }                                                                                   
  //----------------------------------------------------------------------------------------------------------                                                                                     
  //#endregion РАЗДЕЛ 6                                                                                                                                                                            
  //**********************************************************************************************************                                                                                     
                                                                                                                                                                                                   
                                                                                                                                                                                                   
  //==========================================================================================================                                                                                     
  //#region РАЗДЕЛ 3                                                                                                                                                                               
  //----------------------------------------------------------------------------------------------------------                                                                                     
/*                                                                                                                                                                                                 
// 1.1    ::   НК РФ ст. 161, 171, 172, 174                                              ::   необоснованное применение вычетов сумм НДС налоговым агентом   ::                                    
//             При условии отражения в р. 2 ст. 070 кодов 1011711 и 1011703: р. 3 ст. 180 гр. 3 онп < = р. 2 ст. 060 пнп (ппнп) в случае если покупка принята к учету                              
                                                                                                                                                                                                   
          Sum_R2_060;                                                                                                                                                                              
                                                                                                                                                                                                   
          if ((R2_070 = '1011711') or (R2_070 = '1011703'))                                                                                                                                        
            if (R2_070 = p_R2_070)                                                                                                                                                                 
            {                                                                                                                                                                                      
              if (Sum_R3_180 > Sum_R2_060)                                                                                                                                                         
                Ошибка                                                                                                                                                                             
            }                                                                                                                                                                                      
                                                                                                                                                                                                   
//        =========================================================================================================================================================================================
// 1.2    ::   НК РФ ст. 161, 171, 172                                                   ::   необоснованное применение вычетов сумм НДС налоговым агентом   ::                                    
//             Если в р. 2 ст. 070 онп (пнп либо ппнп) отражены только коды 1011705 и 1011707, то р. 3 ст. 180 гр. 3 онп = 0, если р. 3 ст. 180 гр. 3 онп > 0, то вычет необоснован                
                                                                                                                                                                                                   
          Если в R2_070 [1] (предыдущий налоговый период либо предыдущие налоговые периоды) отражены только коды 1011705 и 1011707,                                                                
          то R3_180_gr3 [1] = 0, если R3_180_gr3 [1] > 0, то вычет необоснован                                                                                                                     
                                                                                                                                                                                                   
          только коды 1011705 и 1011707                                                                                                                                                            
                                                                                                                                                                                                   
          if ((p_R2_070 = '1011705') or (p_R2_070 = '1011707'))                                                                                                                                    
            if (R2_070 = p_R2_070)                                                                                                                                                                 
            {                                                                                                                                                                                      
              if (Sum_R3_180 > 0)                                                                                                                                                                  
                Ошибка                                                                                                                                                                             
            }                                                                                                                                                                                      
                                                                                                                                                                                                   
                                                                                                                                                                                                   
Выполнение условия ( п. 1.1 Контрольных соотношений) необходимо только при операциях 1011711 и  1011703.                                                                                           
  1. Необходимо проанализировать значение строки 70 разд.2 ( пнп(ппнп)-выбор пользователя) на  равенство вышеприведенным операциям;.                                                               
  2. В случае наличия таких разделов просуммировать данные строк 60 разд.2;                                                                                                                        
  3. Сравнить полученную сумму с суммой строки 180 разд.3;                                                                                                                                         
  4. Если сумма строки 180 раз. 3 <= сумме по разделу 2  контрольное соотношение "прошло" В противном случае сообщение                                                                             
  "необоснованное применение вычетов сумм НДС налоговым агентом"                                                                                                                                   
                                                                                                                                                                                                   
(п. 1.2 Контрольных соотношений) выполнение условий необходимо только при операциях 1011705 и 1011707.                                                                                             
                                                                                                                                                                                                   
  1. Необходимо проанализировать значение строки 70 разд.2 ( пнп(ппнп)-выбор пользователя) на  равенство вышеприведенным операциям;.                                                               
  2. В случае наличия таких разделов просуммировать данные строк 60 разд.2;                                                                                                                        
  3. Сравнить полученную сумму с суммой строки 180 разд.3;                                                                                                                                         
  4. Если строка 180 (графа 3) разд. 3 при этом  равна нулю   контрольное соотношение "прошло" В противном случае сообщение                                                                        
  "необоснованное применение вычетов сумм НДС налоговым агентом"                                                                                                                                   
*/                                                                                                                                                                                                 
  NameStr := pFH.Func('myGetPageIDR03_0');                                                                                                                                                         
                                                                                                                                                                                                   
  // 1.1 :: НК РФ ст. 161, 171, 172, 174 :: необоснованное применение вычетов сумм НДС налоговым агентом                                                                                           
  //        При условии отражения в р. 2 ст. 070 кодов 1011711 и 1011703: р. 3 ст. 180 гр. 3 онп < = р. 2 ст. 060 пнп (ппнп) в случае если покупка принята к учету                                 
  if (fl_pR2_070_1011711_1011703)                                                                                                                                                                  
  {                                                                                                                                                                                                
    dR2_060_sum_prd := 0;                                                                                                                                                                          
                                                                                                                                                                                                   
    cR2 := #GCp('Файл/Документ/НДС/СумУплНА');                                                                                                                                                     
    for (i := 0; i < cR2; i++)                                                                                                                                                                     
    {                                                                                                                                                                                              
      aR2_prd := 'Файл/Документ/НДС/СумУплНА'+GetIter(i);                                                                                                                                          
                                                                                                                                                                                                   
      aR2_060_prd := aR2_prd+'/СумИсчисл';     dR2_060_prd := #GDp(aR2_060_prd);                                                                                                                   
      aR2_070_prd := aR2_prd+'/КодОпер'  ;     sR2_070_prd := #GSp(aR2_070_prd);                                                                                                                   
                                                                                                                                                                                                   
      if (sR2_070_prd = '1011711' or sR2_070_prd = '1011703')                                                                                                                                      
      then dR2_060_sum_prd := dR2_060_sum_prd + dR2_060_prd;                                                                                                                                       
    }                                                                                                                                                                                              
                                                                                                                                                                                                   
    if (dR3_180_gr3 > dR2_060_sum_prd)                                                                                                                                                             
    { #SM(aR3_180_gr3, 'Стр. 180, гр. 3', 'КС :: 1.1: При условии отражения в р. 2 ст. 070 кодов 1011711 и 1011703: р. 3 ст. 180 гр. 3 онп < = р. 2 ст. 060 пнп (ппнп) в случае если покупка принята к учету'); } 
  }                                                                                                                                                                                                               
                                                                                                                                                                                                                  
  // 1.2 :: НК РФ ст. 161, 171, 172 :: не обоснованное применение вычетов сумм НДС налоговым агентом                                                                                                              
  //        Если в р. 2 ст. 070 онп (пнп либо ппнп) отражены только коды 1011705, 1011707, 1011714, то р. 3 ст. 180 гр. 3 онп = 0, если р. 3 ст. 180 гр. 3 онп > 0, то вычет необоснован                          
  if (fl_pR2_070_1011705_1011714)                                                                                                                                                                                 
    if (dR3_180_gr3 > 0)                                                                                                                                                                                          
    { #SM(aR3_180_gr3, 'Стр. 180, гр. 3', 'КС :: 1.2: Если в р. 2 ст. 070 онп (пнп либо ппнп) отражены только коды 1011705, 1011707, 1011714, то р. 3 ст. 180 гр. 3 онп = 0, если р. 3 ст. 180 гр. 3 онп > 0, то вычет необоснован'); }                   
                                                                                                                                                                                                                                                          
  // 1.4 :: НК РФ ст. 149, 170 п. 4 :: возможно необоснованное применение налоговых вычетов                                                                                                                                                               
  //       р. 3. (ст. 010 гр. 3 + 020 гр. 3 + ст. 030 гр. 3 + ст. 040 гр. 3 + ст. 041 гр. 3 + ст. 042 гр. 3) /                                                                                                                                            
  //              [р. 3. (ст. 010 гр. 3 + ст. 020 гр. 3 + ст. 030 гр. 3 + ст. 040 гр. 3 + ст. 041 гр. 3 + ст. 042 гр. 3) +                                                                                                                                
  //              (р. 7 сумма гр. 2 - коды (1010800 - 1010830)] = р. 3. ст. (120 + 150 + 160) гр. 3 / [р. 3. ст. (120 + 150 + 160) гр. 3 + р. 7 гр. 4 - коды (1010800 - 1010830)]                                                                         
   if (((dR3_010_gr3 + dR3_020_gr3 + dR3_030_gr3 + dR3_040_gr3 + dR3_041_gr3 + dR3_042_gr3) / ((dR3_010_gr3 + dR3_020_gr3 + dR3_030_gr3 + dR3_040_gr3+ dR3_041_gr3+ dR3_042_gr3) + dR7_gr2_dop))                                                          
             <> ((dR3_120_gr3 + dR3_150_gr3 + dR3_160_gr3) / ((dR3_120_gr3 + dR3_150_gr3 + dR3_160_gr3) + dR7_gr4_dop)))                                                                                                                                  
       { #SM(aR3_010_gr3, 'Стр. 010 (020, 030, ...), гр. 3', 'КС :: 1.4: р. 3 (ст. 010 гр. 3 + 020 гр. 3 + ст. 030 гр. 3 + ст. 040 гр. 3 + ст. 041 гр. 3 + ст. 042 гр. 3) / [р. 3 (ст. 010 гр. 3 + 020 гр. 3 +...'); }                                    
                                                                                                                                                                                                                                                          
  // 1.5 :: НК РФ ст. 170, 171, 171.1 :: занижение суммы подлежащей восстановлению и уплате в бюджет                                                                                                                                                      
  //        для р. 3 ст. 080 гр. 5 >= р. 3 (ст. 090 гр. 5 + ст. 100 гр. 5) + Прил. N 1 к р. 3 дНДС суммы ст. 070 гр. 4 по кодам 1011801, 1011802, 1011803, 1011805, 1011806, 1011807, 1011808 за отчетный год, указанный по ст. 070 гр. 1                 
  //        и соответствующий отчетному году на ТЛ дНДС                                                                                                                                                                                                   
  if (dR3_080_gr5 < ((dR3_090_gr5 + dR3_100_gr5) + dR3P1_070_gr4_dop))                                                                                                                                                                                    
  { #SM(aR3_080_gr5, 'Стр. 080, гр. 5', 'КС :: 1.5: для р. 3 ст. 080 гр. 5 >= р. 3 (ст. 090 гр. 5 + ст. 100 гр. 5) + Прил. N 1 к р. 3 дНДС суммы ст. 070 гр. 4 по кодам 1011801, 1011802, 1011803, 1011805, 1011806, 1011807, 1011808 за отчетный...'); } 
                                                                                                                                                                                                                                                          
  // 1.6 :: НК РФ ст. 170, 171, 171.1 :: занижение суммы подлежащей восстановлению и уплате в бюджет                                                                                                                                                      
  //        р. 3 ст. (080 - 090 - 100) гр. 5 >= Прил. N 1 к р. 3 дНДС суммы ст. 070 гр. 4 по кодам 1011801, 1011802, 1011803, 1011805, 1011806, 1011807, 1011808 за отчетный год, указанный по ст. 070 гр. 1 и соответствующий отчетному году на ТЛ дНДС  
  if ((dR3_080_gr5 - dR3_090_gr5 - dR3_100_gr5) < dR3P1_070_gr4_dop)                                                                                                                                                                                      
  { #SM(aR3_080_gr5, 'Стр. 080 (090, 100), гр. 5', 'КС :: 1.6: р. 3 ст. (080 - 090 - 100) гр. 5 >= Прил. N 1 к р. 3 дНДС суммы ст. 070 гр. 4 по кодам 1011801, 1011802, 1011803, 1011805, 1011806, 1011807, 1011808 за отчетный год, указанный по...'); } 
                                                                                                                                                                                                                                                          
  // 1.7 :: НК РФ ст. 146, 151, 154, 155, 156, 158, 159, 162, 173 :: занижение суммы НДС вследствие неполного отражения налоговой базы по операциям, указанным в строках 010 - 080 и 105 - 109                                                            
  //        р. 3 ст. (010 + 020 + 030 + 040 + 041 + 042 + 045 + 046 + 050 + 060 + 070 + 080 + 105 + 109 + 110 + 115) гр. 5 = р. 3. ст. 118 гр. 5, если левая часть равенства > правой                                                                     
  if ((dR3_010_gr5 + dR3_020_gr5 + dR3_030_gr5 + dR3_040_gr5 + dR3_041_gr5 + dR3_042_gr5 + dR3_045_gr5 + dR3_046_gr5 + dR3_050_gr5 + dR3_060_gr5 + dR3_070_gr5 + dR3_080_gr5                                                                              
       + dR3_105_gr5 + dR3_109_gr5 + dR3_110_gr5 + dR3_115_gr5) > dR3_118_gr5)                                                                                                                                                                            
  {                                                                                                                                                                                                                                                       
    ats3:='Файл/Документ/НДС/СумУпл164/СумНалОб/НалВосстОбщ';                                                                                                                                                                                             
    #SM(ats3, 'Стр. 118, гр. 5', 'КС :: 1.7: р. 3 ст. (010 + 020 + 030 + 040 + 041 + 042 + 045 + 046 + 050 + 060 + 070 + 080 + 105 + 109 + 110 + 115) гр. 5 = р. 3. ст. 118 гр. 5, если левая часть равенства > правой');                                 
  }                                                                                                                                                                                                                                                       
                                                                                                                                                                                                                                                          
  // 1.8 :: НК РФ ст. 171, 172 :: необоснованные налоговые вычеты                                                                                                                                                                                         
  //        р. 3. ст. 190 гр. 3 = р. 3. ст. (120 + 130 + 135 + 140 + 150 + 160 + 170 + 180 + 185) гр. 3, если левая часть равенства > правой                                                                                                              
  if (dR3_190_gr3 > (dR3_120_gr3 + dR3_130_gr3 + dR3_135_gr3 + dR3_140_gr3 + dR3_150_gr3 + dR3_160_gr3 + dR3_170_gr3 + dR3_180_gr3 + dR3_185_gr3))                                                                                                        
  { #SM(aR3_190_gr3, 'Стр. 190, гр. 3', 'КС :: 1.8: р. 3. ст. 190 гр. 3 = р. 3. ст. (120 + 130 + 135 + 140 + 150 + 160 + 170 + 180 + 185) гр. 3, если левая часть равенства > правой'); }                                                                 
                                                                                                                                                                                                   
  if(dR3_200_210_gr3 >= 0)                                                                                                                                                                         
  { // 1.9 :: НК РФ ст. 173 :: занижение суммы НДС, исчисленной к уплате в бюджет по р. 3                                                                                                          
    //        р. 3. ст. 200 гр. 3 = р. 3. ст. 118 гр. 5 - ст. 190 гр. 3, если левая часть < правой                                                                                                 
    if (dR3_200_gr3 < (dR3_118_gr5 - dR3_190_gr3))                                                                                                                                                 
    { #SM(aR3_200_210_gr3, 'Стр. 200, гр. 3', 'КС :: 1.9: р. 3. ст. 200 гр. 3 = р. 3. ст. 118 гр. 5 - ст. 190 гр. 3, если левая часть < правой'); }                                                
  }                                                                                                                                                                                                
  else                                                                                                                                                                                             
  { // 1.10 :: НК РФ ст. 173 :: занижение суммы НДС, исчисленной к уплате в бюджет по р. 3                                                                                                         
    //         р. 3. ст. 210 гр. 3 = р. 3. ст. 190 гр. 5 - ст. 118 гр. 3, если левая часть > правой                                                                                                
    if (dR3_210_gr3 > (dR3_190_gr3 - dR3_118_gr5))                                                                                                                                                 
    { #SM(aR3_200_210_gr3, 'Стр. 210, гр. 3', 'КС :: 1.10: р. 3. ст. 210 гр. 3 = р. 3. ст. 190 гр. 5 - ст. 118 гр. 3, если левая часть > правой'); }                                               
  }                                                                                                                                                                                                
                                                                                                                                                                                                   
  // 1.11 :: НК РФ ст. 171, п. 8, НК РФ ст. 172, п. 6, либо НК РФ ст. 146, п. 1 :: налоговые вычеты не обоснованы, либо налоговая база занижена, так как суммы отработанных авансов не включены в реализацию 
  //         р. 3 ст. 170 гр. 3 <= р. 3 ст. (010 + 020 + 030 + 040) гр. 5                                                                                                                                    
  if (dR3_170_gr3 > (dR3_010_gr5 + dR3_020_gr5 + dR3_030_gr5 + dR3_040_gr5))                                                                                                                                 
  { #SM(aR3_170_gr3, 'Стр. 170, гр. 3', 'КС :: 1.11: р. 3 ст. 170 гр. 3 <= р. 3 ст. (010 + 020 + 030 + 040) гр. 5'); }                                                                                       
                                                                                                                                                                                                             
  // 1.12 :: НК РФ ст. 171, п. 6, ст. 172, п. 5 :: необоснованное применение налоговых вычетов при выполнении СМР для собственного потребления                                                               
  //         р. 3 ст. 060 гр. 5 онп > = р. 3 ст. 140 гр. 3 онп                                                                                                                                               
  if (dR3_060_gr5 < dR3_140_gr3)                                                                                                                                                                             
  { #SM(aR3_060_gr5, 'Стр. 060, гр. 5', 'КС :: 1.12: р. 3 ст. 060 гр. 5 онп > = р. 3 ст. 140 гр. 3 онп'); }                                                                                                  
                                                                                                                                                                                                             
  // 1.27 :: НК РФ ст. 153, 161, 164, 165, 166, 167, 173 :: занижение суммы НДС, исчисленного к уплате в бюджет                                                                                              
  //         гр. 5 ст. 118 р. 3 + сумма ст. 050 и 130 р. 6 + сумма ст. 060 по всем листам р. 2 + сумма ст. 050 р. 4 + ст. 080 р. 4 =                                                                         
  //              [ст. 260 + ст. 265 + ст. 270] р. 9 + [ст. 340 прил. 1 к р. 9 дНДС + ст. 345 прил. 1 к р. 9 дНДС + ст. 350 прил. 1 к р. 9 дНДС - ст. 050 прил. 1 к р. 9 -                                   
  //              ст. 055 прил. 1 к р. 9 дНДС - ст. 060 прил. 1 к р. 9 дНДС]                                                                                                                                 
  //         если левая часть равенства < правой                                                                                                                                                             
  if ((dR3_118_gr5 + (dR6_050 + dR6_130_sum) + dR2_060_sum + dR4_050_sum + dR4_080_sum) < ((dR9_260 + dR9_265 + dR9_270) + (dR9P1_340 + dR9P1_345 + dR9P1_350 - dR9P1_050 - dR9P1_055 - dR9P1_060)))         
  { #SM(aR3_118_gr5, 'Стр. 118, гр. 5', 'КС :: 1.27: гр. 5 ст. 118 р. 3 + сумма ст. 050 и 130 р. 6 + сумма ст. 060 по всем листам р. 2 + сумма ст. 050 р. 4 + ст. 080 р. 4 = [ст. 260 + ст. 265 + ст. 270] р. 9 + [ст. 340 прил....'); } 
                                                                                                                                                                                                                                         
  // 1.28 :: НК РФ ст. 171, 172 :: завышение суммы НДС, подлежащей вычету                                                                                                                                                                
  // ст. 190 р. 3 + сумма стр. 030 и 040 р. 4 + ст. 080 и 090 р. 5 + ст. 060 р. 6 + ст. 090 р. 6 + ст. 150 р. 6 = ст. 190 р. 8 + [ст. 190 прил. 1 к р. 8 - ст. 005 прил. 1 к р. 8] если левая часть равенства > правой                   
  if ((dR3_190_gr3 + (dR4_030_sum + dR4_040_sum) + dR5_080 + dR5_090 + dR6_060 + dR6_090 + dR6_150) > (dR8_190 + (dR8P1_190 - dR8P1_005)))                                                                                               
  { #SM(aR3_190_gr3, 'Стр. 190, гр. 3', 'КС :: 1.28: ст. 190 р. 3 + сумма стр. 030 и 040 р. 4 + ст. 080 и 090 р. 5 + ст. 060 р. 6 + ст. 090 р. 6 + ст. 150 р. 6 = ст. 190 р. 8 + [ст. 190 прил. 1 к р. 8 - ст. 005...'); }               
                                                                                                                                                                                                                                         
  // 1.29 :: НК РФ ст. 171, 172 :: завышение суммы НДС, подлежащей вычету                                                                                                                                                                
  //         ст. 150 р. 3 = [сумма ст. 180 по тем листам р. 8, в которых ст. 010 = 20] + [сумма по тем листам ст. 180 прил. 1 к р. 8 дНДС, в которых ст. 010 = 20] если левая часть равенства > правой                                   
  if (dR3_150_gr3 > (dR8_180_dop_20 + dR8P1_180_dop_20))                                                                                                                                                                                 
  { #SM(aR3_150_gr3, 'Стр. 150, гр. 3', 'КС :: 1.29: ст. 150 р. 3 = [сумма ст. 180 по тем листам р. 8, в которых ст. 010 = 20] + [сумма по тем листам ст. 180 прил. 1 к р. 8 дНДС, в которых ст. 010 = 20] если...'); }                  
                                                                                                                                                                                                                                         
  // 1.30 :: НК РФ п. 1 ст. 153, ст. 171, 172, Протокол р. III :: завышение суммы НДС, подлежащей вычету в связи с ввозом товаров на таможенную территорию ТС                                                                            
  //         ст. 160 р. 3 = [сумма по ст. 180 по тем листам р. 8, в которых ст. 010 = 19] + [сумма по тем листам ст. 180 прил. 1 к р. 8 дНДС, в которых ст. 010 = 19] если левая часть равенства > правой                                
  if (dR3_160_gr3 > (dR8_180_dop_19 + dR8P1_180_dop_19))                                                                                                                                                                                 
  { #SM(aR3_160_gr3, 'Стр. 160, гр. 3', 'КС :: 1.30: ст. 160 р. 3 = [сумма по ст. 180 по тем листам р. 8, в которых ст. 010 = 19] + [сумма по тем листам ст. 180 прил. 1 к р. 8 дНДС, в которых ст. 010 = 19] если...'); }               
                                                                                                                                                                                                                                         
  // 1.31 :: НК РФ ст. 161, 171, 172 :: завышение суммы НДС, подлежащей вычету                                                                                                                                                           
  //         ст. 180 р. 3 = [сумма по ст. 180 по тем листам р. 8, в которых ст. 010 р. 8 = 06] + [сумма по ст. 180 по тем листам прил. 1 к р. 8 дНДС, в которых ст. 010 = 06] если левая часть равенства > правой                        
  if (dR3_180_gr3 > (dR8_180_dop_06 + dR8P1_180_dop_06))                                                                                                                                                                                 
  { #SM(aR3_180_gr3, 'Стр. 180, гр. 3', 'КС :: 1.31: ст. 180 р. 3 = [сумма по ст. 180 по тем листам р. 8, в которых ст. 010 р. 8 = 06] + [сумма по ст. 180 по тем листам прил. 1 к р. 8 дНДС, в которых ст. 010 = 06]...'); }            
  //----------------------------------------------------------------------------------------------------------                                                                                                                           
  //#endregion РАЗДЕЛ 3                                                                                                                                                                                                                  
  //**********************************************************************************************************                                                                                                                           
@end. // On_CheckKS                                                                                                                                                                                                                      
//************************************************************************************************************                                                                                                                           
//#endregion ДЕЙСТВИЯ ВЫПОЛНЯЕМЫЕ ПРИ ПРОВЕРКЕ КОНТРОЛЬНЫХ СООТНОШЕНИЙ                                                                                                                                                                   
//************************************************************************************************************
                                              
