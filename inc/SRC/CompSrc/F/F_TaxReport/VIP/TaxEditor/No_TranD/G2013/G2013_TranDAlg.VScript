@Script GetStrVal(fld:string):string;
@begin
  Result := Trim(String(XMLMAP.GetAttrValueByName(fld)));
@end.

@Script GetDblVal(fld:string):double;
@begin
  Result := Double(XMLMAP.GetAttrValueByName(fld));
@end.

@Script GetIntVal(fld:string):double;
@begin
  Result := Round(Double(XMLMAP.GetAttrValueByName(fld)));
@end.

@Script GetFldVis(fld:string):boolean;
@begin
  Result := XMLMAP.GetAttrVisByName(fld);
@end.

@Script sGetIntVal(fld:string):string;
@begin
  Result := DoubleToStr(Round(Double(XMLMAP.GetAttrValueByName(fld))), '[|-]3666666666666666666666');
@end.

@Script sGetKofVal(fld:string):string;
@begin
  Result := DoubleToStr(Round(Double(XMLMAP.GetAttrValueByName(fld)), 4), '6~9999');
@end.

@Script SetFldVal(fld:string; val:variant);
@begin
  XMLMAP.SetVariantAttrValueByName(fld,val);
@end.

@Script SetFldVis(fld:string;vis:boolean);
@begin
  XMLMAP.SetAttrVisByName(fld,vis);
@end.

@Script GetIter(iter:longint):string;
@begin
  Result := '';

  if (iter > 0)
    Result := '[' + String(iter) + ']';
@end.

//***************************************************************************************************************************************************

@Script MessageErrorStop_ALG(mesMesAdrXML, mesStr, mesPole, mesMes: string; mesCountIter: integer = 0): boolean;
@begin
  MesError.InsertMesError(mesMesAdrXML, Comp(0), mesStr, mesPole, mesMes, mesCountIter);
  Result := True;
@end.

//***************************************************************************************************************************************************

@Script On_Visable : boolean;
@begin
  var Adr_SumPU_, Adr_RachNalTS_: string;

  SetFldVis('Файл/Документ/СвНП/Тлф', (GetStrVal('Файл/Документ/СвНП/Тлф')<>''));
  if (GetStrVal('Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ/ФормРеорг') <> '')
  {
    SetFldVis('Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ/', True);
    SetFldVis('Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ/ФормРеорг', True);
    if    ((GetIntVal('Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ/ФормРеорг') >= 1)
       and (GetIntVal('Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ/ФормРеорг') <= 6)
       and (GetIntVal('Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ/ФормРеорг') <> 4))
    {
      SetFldVis('Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ/', True);
      SetFldVis('Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ/', True);
    }
    else {
      SetFldVis('Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ/', False);
      SetFldVis('Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ/', False);
    }
  }
  else SetFldVis('Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ/', False);

  SetFldVis('Файл/Документ/Подписант/ФИО/Отчество', (GetStrVal('Файл/Документ/Подписант/ФИО/Отчество') <> ''));
  if (GetIntVal('Файл/Документ/Подписант/ПрПодп') = 2)
  {
    SetFldVis('Файл/Документ/Подписант/СвПред/', True);
    SetFldVis('Файл/Документ/Подписант/СвПред/НаимДок', True);
    SetFldVis('Файл/Документ/Подписант/СвПред/НаимОрг', (GetStrVal('Файл/Документ/Подписант/СвПред/НаимОрг') <> ''));
  }
  else SetFldVis('Файл/Документ/Подписант/СвПред/', False);

  var SumPU_count, RachNalTS_count_, i, j: Comp;

  SumPU_count := XMLMAP.GetNodeCountByName('Файл/Документ/ТрНалНД/СумНалПУ/СумПУ');
  for (i := 0; i < SumPU_count; i++)
  {
    Adr_SumPU_ := 'Файл/Документ/ТрНалНД/СумНалПУ/СумПУ' + getIter(i);
    RachNalTS_count_ := XMLMAP.GetNodeCountByName(Adr_SumPU_ + '/РасчНалТС');

    if (GetStrVal(Adr_SumPU_ + '/АвПУКв1') = '') SetFldVal(Adr_SumPU_ + '/АвПУКв1', 0);
    if (GetStrVal(Adr_SumPU_ + '/АвПУКв2') = '') SetFldVal(Adr_SumPU_ + '/АвПУКв2', 0);
    if (GetStrVal(Adr_SumPU_ + '/АвПУКв3') = '') SetFldVal(Adr_SumPU_ + '/АвПУКв3', 0);

    if  not (GetStrVal(Adr_SumPU_ + '/ОКТМО'  ) = '') and not (GetStrVal(Adr_SumPU_ + '/НалИсчисл') = '') and
        not (GetStrVal(Adr_SumPU_ + '/АвПУКв1') = '') and not (GetStrVal(Adr_SumPU_ + '/АвПУКв2'  ) = '') and
        not (GetStrVal(Adr_SumPU_ + '/АвПУКв3') = '') and not (GetStrVal(Adr_SumPU_ + '/НалПУ'    ) = '')
    {
      SetFldVis(Adr_SumPU_, True);

      for (j := 0; j < RachNalTS_count_; j++)
      {
        Adr_RachNalTS_ := Adr_SumPU_ + '/РасчНалТС' + getIter(j);

        if  not (GetStrVal(Adr_RachNalTS_ + '/КодВидТС'    ) = '') and not (GetStrVal(Adr_RachNalTS_ + '/РегЗнакТС'  ) = '') and
            not (GetStrVal(Adr_RachNalTS_ + '/НалБаза'     ) = '') and not (GetStrVal(Adr_RachNalTS_ + '/ОКЕИНалБаза') = '') and
            not (GetStrVal(Adr_RachNalTS_ + '/ВладенТС'    ) = '') and not (GetStrVal(Adr_RachNalTS_ + '/КоэфКв'     ) = '') and
            not (GetStrVal(Adr_RachNalTS_ + '/НалСтавка'   ) = '') and not (GetStrVal(Adr_RachNalTS_ + '/СумИсчисл'  ) = '') and
            not (GetStrVal(Adr_RachNalTS_ + '/СумИсчислУпл') = '')
        {
          SetFldVis(Adr_RachNalTS_, True);

          SetFldVis(Adr_RachNalTS_ + '/ИдНомТС'   , GetStrVal(Adr_RachNalTS_ + '/ИдНомТС'   ) <> '');
          SetFldVis(Adr_RachNalTS_ + '/МаркаТС'   , GetStrVal(Adr_RachNalTS_ + '/МаркаТС'   ) <> '');
          SetFldVis(Adr_RachNalTS_ + '/ЭкологКл'  , GetStrVal(Adr_RachNalTS_ + '/ЭкологКл'  ) <> '');
          SetFldVis(Adr_RachNalTS_ + '/ВыпускТС'  , GetStrVal(Adr_RachNalTS_ + '/ВыпускТС'  ) <> '');
          SetFldVis(Adr_RachNalTS_ + '/ЛьготМесТС', GetStrVal(Adr_RachNalTS_ + '/ЛьготМесТС') <> '');
          SetFldVis(Adr_RachNalTS_ + '/КоэфКл'    , GetStrVal(Adr_RachNalTS_ + '/КоэфКл'    ) <> '');

          if     (GetStrVal(Adr_RachNalTS_ + '/ЛьготОсвНал/КодОсвНал'    ) =  '')
             and (GetIntVal(Adr_RachNalTS_ + '/ЛьготОсвНал/СумОсвНал'    ) <> 0 ) {SetFldVis(Adr_RachNalTS_ + '/ЛьготОсвНал'  , True );}
          else                                                                    {SetFldVis(Adr_RachNalTS_ + '/ЛьготОсвНал'  , False);}
          if     (GetStrVal(Adr_RachNalTS_ + '/ЛьготУменСум/СумУменСум'  ) =  '')
             and (GetIntVal(Adr_RachNalTS_ + '/ЛьготУменСум/СумУменСум'  ) <> 0 ) {SetFldVis(Adr_RachNalTS_ + '/ЛьготУменСум' , True );}
          else                                                                    {SetFldVis(Adr_RachNalTS_ + '/ЛьготУменСум' , False);}
          if     (GetStrVal(Adr_RachNalTS_ + '/ЛьготСнижСтав/СумСнижСтав') =  '')
             and (GetIntVal(Adr_RachNalTS_ + '/ЛьготСнижСтав/СумСнижСтав') <> 0 ) {SetFldVis(Adr_RachNalTS_ + '/ЛьготСнижСтав', True );}
          else                                                                    {SetFldVis(Adr_RachNalTS_ + '/ЛьготСнижСтав', False);}
        }
        else SetFldVis(Adr_RachNalTS_, False);
      }
    }
    else SetFldVis(Adr_SumPU_, False);
  }
@end.

//***************************************************************************************************************************************************

@Script On_Check : boolean;
  #include AllTaxObj.Vih

  function IsValidKodOsvNal(strIn: string; var strGetMes: string) : boolean;
  begin
    //Код налоговой льготы в виде освобождения от налогообложения
    //КодОсвНал
    strGetMes := 'Возможные значения: 30200 или [20200(или 20210)/XXXXXXXXXXXX]. Формат: 5 или 18 символов';
    Result := False;
    Result :=    CheckError.isRegExpr('^(30200)$', strIn)
              or CheckError.isRegExpr('^((20200|20210)/(............))$', strIn);
  end;

  function IsValidKodUmenNal(strIn: string; var strGetMes: string) : boolean;
  begin
    //Код налоговой льготы в виде уменьшения суммы налога
    //КодУменСум
    strGetMes := 'Возможные значения: 20220/XXXXXXXXXXXX. Формат поля: 18 символов';
    Result := False;
    Result := CheckError.isRegExpr('^(20220/(............))$', strIn);
  end;

  function IsValidKodSnigNal(strIn: string; var strGetMes: string) : boolean;
  begin
    //Код налоговой льготы в виде снижения налоговой ставки
    //КодСнижСтав
    strGetMes := 'Возможные значения: 20230/XXXXXXXXXXXX. Формат поля: 18 символов';
    Result := False;
    Result := CheckError.isRegExpr('^(20230/(............))$', strIn);
  end;

  function IsValidKodVidTS(strIn: string; var strGetMes: string) : boolean;
  begin
    //Код вида транспортного средства
    //КодВидТС
    strGetMes := 'Формат поля: 5 символов';
    Result := False;
    Result := CheckError.isRegExpr('^(.....)$', strIn);
  end;

  function IsValidIDNomTS(strIn: string; var strGetMes: string) : boolean;
  begin
    //Идентификационный номер транспортного средства
    //ИдНомТС
    strGetMes := 'Формат поля: от 1 до 25 символов, либо пусто';
    Result := False;
    Result :=    Length(strIn) =  0
              or Length(strIn) <= 25;
  end;

  function IsValidMarkTS(strIn: string; var strGetMes: string) : boolean;
  begin
    //Марка транспортного средства
    //МаркаТС
    strGetMes := 'Формат поля: от 1 до 120 символов, либо пусто';
    Result := False;
    Result :=    Length(strIn) =  0
              or Length(strIn) <= 120;
  end;

  function IsValidRegZnTS(strIn: string; var strGetMes: string) : boolean;
  begin
    //Регистрационный знак транспортного средства
    //РегЗнакТС
    strGetMes := 'Формат поля: от 1 до 30 символов';
    Result := False;
    Result :=     Length(strIn) >= 1
              and Length(strIn) <= 30;
  end;

  function IsValidNalBaza(strIn: string; var strGetMes: string) : boolean;
  begin
    //Налоговая база
    //НалБаза
    strGetMes := 'Формат поля: XXXXXXXXXXXXXX.XX';
    Result := False;
    Result := CheckError.isRegExpr('^[0-9]{1,14}\.?[0-9]{0,2}$', strIn);
  end;

  function IsValidNalStav(strIn: string; var strGetMes: string) : boolean;
  begin
    //Налоговая ставка
    //НалСтавка
    strGetMes := 'Формат поля: XXXXXXXX.XX';
    Result := False;
    Result :=     Length(strIn) >= 1
              and Length(strIn) <= 11;
  end;

  #declare _InsMes(_AdrXML, _Pole, _StrMes)
    MessageErrorStop_ALG
    (
      #_AdrXML,
      NameStr,
      #_Pole,
      #_StrMes
    );
  #end

  #declare _MesNoKor(_AdrXML, _Pole)
    MessageErrorStop_ALG
    (
      #_AdrXML,
      NameStr,
      #_Pole,
      'Поле не соответствует регулярному выражению. ' + getMes
    );
  #end

  #declare _MesNoRasch(_AdrXML, _Pole)
    MessageErrorStop_ALG
    (
      #_AdrXML,
      NameStr,
      #_Pole,
      'Значение поля не совпадает с расчетным значением значением. Произведите перерасчет'
    );
  #end
@begin
  var getMes: string;
  getMes := '';

  var sNaimOrg     , sINNJUL        , sKPP      , sFormReorg, sINNJUL_2  , sKPP_2     , sKBK       , sOKTMO       , sNalIschisl, sAvPUKv1,
      sIdFajl      , sVersProg      , sVersForm , sKodNO    , sNomKorr   , sPoMestu   , sKolPril   , sKND         , sDataDok   , sPeriod ,
      sAvPUKv2     , sAvPUKv3       , sNalPU    , sFormRasch, sKodVidTS  , sIdNomTS   , sMarkaTS   , sRegZnakTS   , sNalBaza   ,
      sOtchetGod   , sPrPodp        , sFamilija , sImja     , sOtchestvo , sNaimDok   , sNaimOrg_2 , sOKVJED      , sTlf       ,
      sOKEINalBaza , sJEkologKl     , sVipuskTS , sVladenTS , sKojefKv   , sNalStavka , sSumIschisl, sLgotMesTS   ,
      sKojefKl     , sSumIschisl_Upl, sKodOsvNal, sSumOsvNal, sKodUmenSum, sSumUmenSum, sProcUm    , sKodSnizhStav,
      sSumSnizhStav, sPonizhStav    ,
      aNaimOrg     , aINNJUL        , aKPP      , aFormReorg, aINNJUL_2  , aKPP_2     , aKBK       , aOKTMO       , aNalIschisl, aAvPUKv1,
      aIdFajl      , aVersProg      , aVersForm , aKodNO    , aNomKorr   , aPoMestu   , aKolPril   , aKND         , aDataDok   , aPeriod ,
      aAvPUKv2     , aAvPUKv3       , aNalPU    , aFormRasch, aKodVidTS  , aIdNomTS   , aMarkaTS   , aRegZnakTS   , aNalBaza   ,
      aOtchetGod   , aPrPodp        , aFamilija , aImja     , aOtchestvo , aNaimDok   , aNaimOrg_2 , aOKVJED      , aTlf       ,
      aOKEINalBaza , aJEkologKl     , aVipuskTS , aVladenTS , aKojefKv   , aNalStavka , aSumIschisl, aLgotMesTS   ,
      aKojefKl     , aSumIschisl_Upl, aKodOsvNal, aSumOsvNal, aKodUmenSum, aSumUmenSum, aProcUm    , aKodSnizhStav,
      aSumSnizhStav, aPonizhStav    : string;

  var iVladenTS, iLgotMesTS: integer;
  var dNalIschisl, dAvPUKv1, dAvPUKv2   , dAvPUKv3     , dNalPU     , dNalBaza   , dKojefKv   , dNalStavka     , dKojefKl,
      dSumOsvNal , dProcUm , dSumUmenSum, dSumSnizhStav, dPonizhStav, dSumIschisl, dFormRasch , dSumIschisl_Upl: double;

  var _iVladenTS, _iLgotMesTS: integer;
  var _dNalIschisl, _dAvPUKv1, _dAvPUKv2   , _dAvPUKv3     , _dNalPU     , _dNalBaza   , _dKojefKv   , _dNalStavka     , _dKojefKl,
      _dSumOsvNal , _dProcUm , _dSumUmenSum, _dSumSnizhStav, _dPonizhStav, _dSumIschisl, _dFormRasch , _dSumIschisl_Upl: double;

  var NameStr: string;

  var Adr_SumPU_, Adr_RachNalTS_: string;
  var SumPU_count, RachNalTS_count, i, j: longint;
  var bufNumReg, bufStrMes, bufNameStr: string;
  var dopRachNalTS_count, k, z: comp;
  var flFirst, flSumPU: boolean;

  flSumPU := False;

  for (i := 0; i < XMLMAP.GetNodeCountByName('Файл/Документ/ТрНалНД/СумНалПУ/СумПУ'); i++)
  {
    Adr_SumPU_ := 'Файл/Документ/ТрНалНД/СумНалПУ/СумПУ' + getIter(i);

    if GetFldVis(Adr_SumPU_)
    {
      if not flSumPU {
        flSumPU := True;
        break;
      }
    }
  }

  if not flSumPU MessageErrorStop_ALG('', 'Структура', '', 'К заполнению обязателен хотя бы один Раздел 1');

  NameStr := '01 Титульный лист';

  if not IsValidDate(GetStrVal('Файл/Документ/ДатаДок'), getMes)
    MessageErrorStop_ALG('Файл/Документ/ДатаДок', NameStr, '"Дата"', 'Заполните поле или произведите перерасчет для установки текущей даты');
  if not IsValidOKVED(GetStrVal('Файл/Документ/СвНП/ОКВЭД'), getMes) #_MesNoKor('Файл/Документ/СвНП/ОКВЭД', '"ОКВЭД"');


  aKodNO     := 'Файл/Документ/КодНО'                        ;   sKodNO     := GetStrVal(aKodNO    );
  aNomKorr   := 'Файл/Документ/НомКорр'                      ;   sNomKorr   := GetStrVal(aNomKorr  );
  aPoMestu   := 'Файл/Документ/ПоМесту'                      ;   sPoMestu   := GetStrVal(aPoMestu  );
  aKolPril   := 'Файл/Документ/КолПрил'                      ;   sKolPril   := GetStrVal(aKolPril  );
  aKND       := 'Файл/Документ/КНД'                          ;   sKND       := GetStrVal(aKND      );
  aDataDok   := 'Файл/Документ/ДатаДок'                      ;   sDataDok   := GetStrVal(aDataDok  );
  aPeriod    := 'Файл/Документ/Период'                       ;   sPeriod    := GetStrVal(aPeriod   );
  aOtchetGod := 'Файл/Документ/ОтчетГод'                     ;   sOtchetGod := GetStrVal(aOtchetGod);
  aPrPodp    := 'Файл/Документ/Подписант/ПрПодп'             ;   sPrPodp    := GetStrVal(aPrPodp   );
  aFamilija  := 'Файл/Документ/Подписант/ФИО/Фамилия'        ;   sFamilija  := GetStrVal(aFamilija );
  aImja      := 'Файл/Документ/Подписант/ФИО/Имя'            ;   sImja      := GetStrVal(aImja     );
  aOtchestvo := 'Файл/Документ/Подписант/ФИО/Отчество'       ;   sOtchestvo := GetStrVal(aOtchestvo);
  aNaimDok   := 'Файл/Документ/Подписант/СвПред/НаимДок'     ;   sNaimDok   := GetStrVal(aNaimDok  );
  aNaimOrg_2 := 'Файл/Документ/Подписант/СвПред/НаимОрг'     ;   sNaimOrg_2 := GetStrVal(aNaimOrg_2);
  aOKVJED    := 'Файл/Документ/СвНП/ОКВЭД'                   ;   sOKVJED    := GetStrVal(aOKVJED   );
  aTlf       := 'Файл/Документ/СвНП/Тлф'                     ;   sTlf       := GetStrVal(aTlf      );
  aNaimOrg   := 'Файл/Документ/СвНП/НПЮЛ/НаимОрг'            ;   sNaimOrg   := GetStrVal(aNaimOrg  );
  aINNJUL    := 'Файл/Документ/СвНП/НПЮЛ/ИННЮЛ'              ;   sINNJUL    := GetStrVal(aINNJUL   );
  aKPP       := 'Файл/Документ/СвНП/НПЮЛ/КПП'                ;   sKPP       := GetStrVal(aKPP      );
  aFormReorg := 'Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ/ФормРеорг';   sFormReorg := GetStrVal(aFormReorg);
  aINNJUL_2  := 'Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ/ИННЮЛ'    ;   sINNJUL_2  := GetStrVal(aINNJUL_2 );
  aKPP_2     := 'Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ/КПП'      ;   sKPP_2     := GetStrVal(aKPP_2    );
  aKBK       := 'Файл/Документ/ТрНалНД/СумНалПУ/КБК'         ;   sKBK       := GetStrVal(aKBK      );


  if (sFormReorg <> '') {
    if not IsValidFormReorg(sFormReorg, getMes) #_InsMes(aFormReorg, '"Форма реорганизации"', getMes);
    else {
      if sFormReorg <> '0' {
        if not CheckError.Prov_INN(sINNJUL_2, getMes) #_InsMes(aINNJUL_2, '"ИНН реорганизованной организации"', getMes);
        if not IsValidKPP(sKPP_2, getMes) #_InsMes(aKPP_2, '"КПП реорганизованной организации"', getMes);
      }
    else {
        getMes := 'Строка не должна быть заполнена при текущем значении поля "Форма реорганизации"';
        if (Length(sINNJUL_2) > 0) #_InsMes(aINNJUL_2, '"ИНН реорг. орг."', getMes);
        if (Length(sKPP_2   ) > 0) #_InsMes(aINNJUL_2, '"ИНН реорг. орг."', getMes);
    }
  }
  }
  else {
    getMes := 'Строка не должна быть заполнена при текущем значении поля "Форма реорганизации"';
    if (Length(sINNJUL_2) > 0) #_InsMes(aINNJUL_2, '"ИНН реорг. орг."', getMes);
    if (Length(sKPP_2)    > 0) #_InsMes(aKPP_2   , '"КПП реорг. орг."', getMes);
  }

  if not IsValidSONO(sKodNO, getMes) #_MesNoKor(aKodNO, 'Код налогового органа');
  if not CheckError.Prov_INN(sINNJUL, getMes) #_InsMes(aINNJUL, '"ИНН"', getMes);
  if not IsValidKPP(sKPP, getMes) #_MesNoKor(aKPP, '"КПП"');

  if (sNaimOrg = '') MessageErrorStop_ALG(aNaimOrg, NameStr, '"Налогоплательщик"', 'Поле обязательно для заполнения');
  else if not IsValidNaimOrg(sNaimOrg, getMes) #_MesNoKor(aNaimOrg, '"Налогоплательщик"');
  if (sTlf <> '')
    if not IsValidTlf(sTlf, getMes) #_MesNoKor(aTlf, '"Номер контактного телефона"');
  if (sNaimDok <> '')
    if not IsValidNaimDok(sNaimDok, getMes) #_MesNoKor(aNaimDok, '"Форма реорганизации"');

  if not IsValidFIO(sFamilija, getMes) #_MesNoKor(aFamilija, '"Фамилия"');
  if not IsValidFIO(sImja    , getMes) #_MesNoKor(aImja    , '"Имя"'    );
  if sOtchestvo <> ''
    if not IsValidFIO(sOtchestvo, getMes) #_MesNoKor(aOtchestvo, '"Отчество"');

  if not IsValidPrPodp(sPrPodp, getMes) #_InsMes(aPrPodp, '"Признак подписанта"', getMes)
  else
  {
    if (sPrPodp = '2') {
    if not IsValidNaimDok(sNaimDok, getMes) #_InsMes(aNaimDok, '"Наим. док., подтв. полномочия предст."', 'Поле обязательно для заполнения при значении поля "Признак подписанта" равного 2. ' + getMes);
      if sNaimOrg_2 <> ''
        if not IsValidNaimOrg(sNaimOrg_2, getMes) #_InsMes(aNaimOrg_2, '"Наименование организации"', getMes);
    }
    else {
      getMes := 'Поле заполняется только при значении поля "Признак подписанта" равного 2';
      if (Length(sNaimDok  ) > 0) MessageErrorStop_ALG(aNaimDok  , NameStr, '"Наименование документа"'  , getMes);
      if (Length(sNaimOrg_2) > 0) MessageErrorStop_ALG(aNaimOrg_2, NameStr, '"Наименование организации"', getMes);
    }
  }


  //***********************************************************************************************
  //***********************************************************************************************
  //***********************************************************************************************


  SumPU_count := XMLMap.GetNodeCountByName('Файл/Документ/ТрНалНД/СумНалПУ/СумПУ');
  for (i := 0; i < SumPU_count; i++)
  {
    if GetFldVis('Файл/Документ/ТрНалНД/СумНалПУ/СумПУ' + getIter(i))
    {
      NameStr := '02.'+String(i+1)+' Раздел 1';

      RachNalTS_count := XMLMap.GetNodeCountByName('Файл/Документ/ТрНалНД/СумНалПУ/СумПУ' + getIter(i) +'/РасчНалТС');
      for (j := 0; j < RachNalTS_count; j++)
      {
        if GetFldVis('Файл/Документ/ТрНалНД/СумНалПУ/СумПУ' + getIter(i) +'/РасчНалТС' + getIter(j))
        {
          bufStrMes := 'Рег. знак ТС дублируют следующие разделы: ';
          flFirst := True;

          NameStr := '03.'+String(i+1)+'.'+String(j+1)+' Раздел 2';

          bufNumReg := '';

          aRegZnakTS := 'Файл/Документ/ТрНалНД/СумНалПУ/СумПУ' + getIter(i) +'/РасчНалТС' + getIter(j) +'/РегЗнакТС';
          bufNumReg  := GetStrVal(aRegZnakTS);

          for (k := 0; k < SumPU_count; k++)
          {
            dopRachNalTS_count := XMLMap.GetNodeCountByName('Файл/Документ/ТрНалНД/СумНалПУ/СумПУ' + getIter(k) +'/РасчНалТС');
            for (z := 0; z < dopRachNalTS_count; z++)
              if (bufNumReg = GetStrVal('Файл/Документ/ТрНалНД/СумНалПУ/СумПУ' + getIter(k) +'/РасчНалТС' + getIter(z) +'/РегЗнакТС'))
              {
                bufNameStr := String(k+1) + '.' + String(z+1);

                if ((String(i+1) + '.' + String(j+1)) = bufNameStr) continue;

                case flFirst of
                  True : {bufStrMes := bufStrMes        + bufNameStr; flFirst := False;}
                  False: {bufStrMes := bufStrMes + ', ' + bufNameStr;                  }
                end;
              }
          }

          if (not flFirst) MessageErrorStop_ALG(aRegZnakTS, NameStr, 'Стр. 060', bufStrMes);
        }
      }
    }
  }

  //***********************************************************************************************
  //***********************************************************************************************
  //***********************************************************************************************

  SumPU_count := XMLMap.GetNodeCountByName('Файл/Документ/ТрНалНД/СумНалПУ/СумПУ');
  for (i := 0; i < SumPU_count; i++)
  {
    if GetFldVis('Файл/Документ/ТрНалНД/СумНалПУ/СумПУ' + getIter(i))
    {
      _dNalIschisl := 0;

      NameStr := '02.'+String(i+1)+' Раздел 1';

      if i = 0
        if not IsValidKBK(sKBK, getMes) #_MesNoKor(aKBK, 'Стр. 010');

      aOKTMO      := 'Файл/Документ/ТрНалНД/СумНалПУ/СумПУ' + getIter(i) +'/ОКТМО'    ;   sOKTMO      := GetStrVal (aOKTMO     );
      aNalIschisl := 'Файл/Документ/ТрНалНД/СумНалПУ/СумПУ' + getIter(i) +'/НалИсчисл';   sNalIschisl := GetStrVal (aNalIschisl);
      aAvPUKv1    := 'Файл/Документ/ТрНалНД/СумНалПУ/СумПУ' + getIter(i) +'/АвПУКв1'  ;   sAvPUKv1    := GetStrVal (aAvPUKv1   );
      aAvPUKv2    := 'Файл/Документ/ТрНалНД/СумНалПУ/СумПУ' + getIter(i) +'/АвПУКв2'  ;   sAvPUKv2    := GetStrVal (aAvPUKv2   );
      aAvPUKv3    := 'Файл/Документ/ТрНалНД/СумНалПУ/СумПУ' + getIter(i) +'/АвПУКв3'  ;   sAvPUKv3    := GetStrVal (aAvPUKv3   );
      aNalPU      := 'Файл/Документ/ТрНалНД/СумНалПУ/СумПУ' + getIter(i) +'/НалПУ'    ;   sNalPU      := sGetIntVal(aNalPU     );

      if not IsValidOKTMO(sOKTMO, getMes) #_MesNoKor(aOKTMO, 'Стр. 020');

      RachNalTS_count := XMLMap.GetNodeCountByName('Файл/Документ/ТрНалНД/СумНалПУ/СумПУ' + getIter(i) +'/РасчНалТС');
      for (j := 0; j < RachNalTS_count; j++)
      {
        if GetFldVis('Файл/Документ/ТрНалНД/СумНалПУ/СумПУ' + getIter(i) +'/РасчНалТС' + getIter(j))
        {
          _dSumUmenSum   := 0;
          _dSumSnizhStav := 0;

          NameStr := '03.'+String(i+1)+'.'+String(j+1)+' Раздел 2';

          aKodVidTS       := 'Файл/Документ/ТрНалНД/СумНалПУ/СумПУ' + getIter(i) +'/РасчНалТС' + getIter(j) +'/КодВидТС'                 ;   sKodVidTS     := GetStrVal(aKodVidTS    );
          aIdNomTS        := 'Файл/Документ/ТрНалНД/СумНалПУ/СумПУ' + getIter(i) +'/РасчНалТС' + getIter(j) +'/ИдНомТС'                  ;   sIdNomTS      := GetStrVal(aIdNomTS     );
          aMarkaTS        := 'Файл/Документ/ТрНалНД/СумНалПУ/СумПУ' + getIter(i) +'/РасчНалТС' + getIter(j) +'/МаркаТС'                  ;   sMarkaTS      := GetStrVal(aMarkaTS     );
          aRegZnakTS      := 'Файл/Документ/ТрНалНД/СумНалПУ/СумПУ' + getIter(i) +'/РасчНалТС' + getIter(j) +'/РегЗнакТС'                ;   sRegZnakTS    := GetStrVal(aRegZnakTS   );
          aNalBaza        := 'Файл/Документ/ТрНалНД/СумНалПУ/СумПУ' + getIter(i) +'/РасчНалТС' + getIter(j) +'/НалБаза'                  ;   sNalBaza      := GetStrVal(aNalBaza     );
          aOKEINalBaza    := 'Файл/Документ/ТрНалНД/СумНалПУ/СумПУ' + getIter(i) +'/РасчНалТС' + getIter(j) +'/ОКЕИНалБаза'              ;   sOKEINalBaza  := GetStrVal(aOKEINalBaza );
          aJEkologKl      := 'Файл/Документ/ТрНалНД/СумНалПУ/СумПУ' + getIter(i) +'/РасчНалТС' + getIter(j) +'/ЭкологКл'                 ;   sJEkologKl    := GetStrVal(aJEkologKl   );
          aVipuskTS       := 'Файл/Документ/ТрНалНД/СумНалПУ/СумПУ' + getIter(i) +'/РасчНалТС' + getIter(j) +'/ВыпускТС'                 ;   sVipuskTS     := GetStrVal(aVipuskTS    );
          aVladenTS       := 'Файл/Документ/ТрНалНД/СумНалПУ/СумПУ' + getIter(i) +'/РасчНалТС' + getIter(j) +'/ВладенТС'                 ;   sVladenTS     := GetStrVal(aVladenTS    );
          aNalStavka      := 'Файл/Документ/ТрНалНД/СумНалПУ/СумПУ' + getIter(i) +'/РасчНалТС' + getIter(j) +'/НалСтавка'                ;   sNalStavka    := GetStrVal(aNalStavka   );
          aLgotMesTS      := 'Файл/Документ/ТрНалНД/СумНалПУ/СумПУ' + getIter(i) +'/РасчНалТС' + getIter(j) +'/ЛьготМесТС'               ;   sLgotMesTS    := GetStrVal(aLgotMesTS   );
          aKodOsvNal      := 'Файл/Документ/ТрНалНД/СумНалПУ/СумПУ' + getIter(i) +'/РасчНалТС' + getIter(j) +'/ЛьготОсвНал/КодОсвНал'    ;   sKodOsvNal    := GetStrVal(aKodOsvNal   );
          aKodUmenSum     := 'Файл/Документ/ТрНалНД/СумНалПУ/СумПУ' + getIter(i) +'/РасчНалТС' + getIter(j) +'/ЛьготУменСум/КодУменСум'  ;   sKodUmenSum   := GetStrVal(aKodUmenSum  );
          aProcUm         := 'Файл/Документ/ТрНалНД/СумНалПУ/СумПУ' + getIter(i) +'/РасчНалТС' + getIter(j) +'/ЛьготУменСум/ПроцУм'      ;   sProcUm       := GetStrVal(aProcUm      );
          aKodSnizhStav   := 'Файл/Документ/ТрНалНД/СумНалПУ/СумПУ' + getIter(i) +'/РасчНалТС' + getIter(j) +'/ЛьготСнижСтав/КодСнижСтав';   sKodSnizhStav := GetStrVal(aKodSnizhStav);
          aPonizhStav     := 'Файл/Документ/ТрНалНД/СумНалПУ/СумПУ' + getIter(i) +'/РасчНалТС' + getIter(j) +'/ЛьготСнижСтав/ПонижСтав'  ;   sPonizhStav   := GetStrVal(aPonizhStav  );

          aFormRasch      := 'Файл/Документ/ТрНалНД/СумНалПУ/СумПУ' + getIter(i) +'/РасчНалТС' + getIter(j) +'/ФормРасч'                 ;   sFormRasch      := GetStrVal(aFormRasch     );
          aKojefKl        := 'Файл/Документ/ТрНалНД/СумНалПУ/СумПУ' + getIter(i) +'/РасчНалТС' + getIter(j) +'/КоэфКл'                   ;   sKojefKl        := GetStrVal(aKojefKl       );
          aKojefKv        := 'Файл/Документ/ТрНалНД/СумНалПУ/СумПУ' + getIter(i) +'/РасчНалТС' + getIter(j) +'/КоэфКв'                   ;   sKojefKv        := GetStrVal(aKojefKv       );
          aSumIschisl     := 'Файл/Документ/ТрНалНД/СумНалПУ/СумПУ' + getIter(i) +'/РасчНалТС' + getIter(j) +'/СумИсчисл'                ;   sSumIschisl     := GetStrVal(aSumIschisl    );
          aSumIschisl_Upl := 'Файл/Документ/ТрНалНД/СумНалПУ/СумПУ' + getIter(i) +'/РасчНалТС' + getIter(j) +'/СумИсчислУпл'             ;   sSumIschisl_Upl := GetStrVal(aSumIschisl_Upl);
          aSumOsvNal      := 'Файл/Документ/ТрНалНД/СумНалПУ/СумПУ' + getIter(i) +'/РасчНалТС' + getIter(j) +'/ЛьготОсвНал/СумОсвНал'    ;   sSumOsvNal      := GetStrVal(aSumOsvNal     );
          aSumUmenSum     := 'Файл/Документ/ТрНалНД/СумНалПУ/СумПУ' + getIter(i) +'/РасчНалТС' + getIter(j) +'/ЛьготУменСум/СумУменСум'  ;   sSumUmenSum     := GetStrVal(aSumUmenSum    );
          aSumSnizhStav   := 'Файл/Документ/ТрНалНД/СумНалПУ/СумПУ' + getIter(i) +'/РасчНалТС' + getIter(j) +'/ЛьготСнижСтав/СумСнижСтав';   sSumSnizhStav   := GetStrVal(aSumSnizhStav  );

          if not IsValidKodVidTS(sKodVidTS   , getMes) #_MesNoKor(aKodVidTS   , 'Стр. 030');
          if not IsValidIDNomTS (sIdNomTS    , getMes) #_MesNoKor(aIdNomTS    , 'Стр. 040');
          if not IsValidMarkTS  (sMarkaTS    , getMes) #_MesNoKor(aMarkaTS    , 'Стр. 050');
          if not IsValidRegZnTS (sRegZnakTS  , getMes) #_MesNoKor(aRegZnakTS  , 'Стр. 060');
          if not IsValidNalBaza (sNalBaza    , getMes) #_MesNoKor(aNalBaza    , 'Стр. 070');
          if not IsValidOKEI    (sOKEINalBaza, getMes) #_MesNoKor(aOKEINalBaza, 'Стр. 080')
          else
          {
            if (sOKEINalBaza <> '181') and (sOKEINalBaza <> '251') and (sOKEINalBaza <> '796') and (sOKEINalBaza <> '999')
              MessageErrorStop_ALG(aOKEINalBaza, NameStr, 'Стр. 080', 'Поле может принимать только значения 181|251|796|999');
          }
          if not IsValidMes     (sVladenTS   , getMes) #_MesNoKor(aVladenTS   , 'Стр. 110');
          if not IsValidNalStav (sNalStavka  , getMes) #_MesNoKor(aNalStavka  , 'Стр. 130');

          dFormRasch  := Double(sFormRasch );
          iVladenTS   := Integer(sVladenTS );
          iLgotMesTS  := Integer(sLgotMesTS);
          dNalBaza    := Double(sNalBaza   );
          dNalStavka  := Double(sNalStavka );
          dProcUm     := Double(sProcUm    );
          dPonizhStav := Double(sPonizhStav);

          if (sLgotMesTS <> '')
            if not IsValidMes(sLgotMesTS, getMes) #_MesNoKor(aLgotMesTS, 'Стр. 150');

          //Расчет и установка значений
          _dKojefKv    := Round(iVladenTS  / 12.00, 4);
          _dKojefKl    := Round(iLgotMesTS / 12.00, 4);

          _dSumIschisl := Round(dNalBaza * dNalStavka * _dKojefKv);

          _dSumOsvNal    := Round(dNalBaza *  dNalStavka * _dKojefKv);
          if (sProcUm <> '')
            _dSumUmenSum   := Round(dNalBaza *  dNalStavka * (dProcUm / 100.00)  * _dKojefKl);
          if (sPonizhStav <> '')
            _dSumSnizhStav := Round(dNalBaza * (dNalStavka -  dPonizhStav) / 100 * _dKojefKl);

          case dFormRasch of
              1: {
                  _dSumIschisl_Upl := Round(_dSumIschisl);
                  _dSumOsvNal := 0.00; _dSumUmenSum := 0.00; _dSumSnizhStav := 0.00;
                }
              2: {
                  _dSumIschisl_Upl := Round(_dSumIschisl - _dSumOsvNal);
                  _dSumUmenSum := 0.00; _dSumSnizhStav := 0.00;
                }
              3: {
                  _dSumIschisl_Upl := Round(_dSumIschisl - _dSumUmenSum - _dSumSnizhStav);
                  _dSumOsvNal := 0.00;
                }
            else _dSumIschisl_Upl := 0.00;
          end;
          if (_dSumIschisl_Upl < 0) _dSumIschisl_Upl := 0.00;

          _dNalIschisl := Round(_dNalIschisl + _dSumIschisl_Upl);

          if (DoubleToStr(Round(_dKojefKv, 4), '6~9999') <> sKojefKv) #_MesNoRasch(aKojefKv, 'Стр. 120');
          if (_dKojefKl <> 0)
            if (DoubleToStr(Round(_dKojefKl, 4), '6~9999') <> sKojefKl) #_MesNoRasch(aKojefKl, 'Стр. 160');

          if (DoubleToStr(Round(_dSumIschisl       ), '[|-]3666666666666666~99') <> sSumIschisl    ) #_MesNoRasch(aSumIschisl    , 'Стр. 140');
          if (DoubleToStr(Round(_dSumIschisl_Upl   ), '[|-]3666666666666666~99') <> sSumIschisl_Upl) #_MesNoRasch(aSumIschisl_Upl, 'Стр. 230');

          if (Round(_dSumOsvNal   ) <> GetIntVal(aSumOsvNal   )) #_MesNoRasch(aSumOsvNal   , 'Стр. 180');
          if (Round(_dSumUmenSum  ) <> GetIntVal(aSumUmenSum  )) #_MesNoRasch(aSumUmenSum  , 'Стр. 200');
          if (Round(_dSumSnizhStav) <> GetIntVal(aSumSnizhStav)) #_MesNoRasch(aSumSnizhStav, 'Стр. 220');

          if (dFormRasch <> 1 and dFormRasch <> 2 and dFormRasch <> 3)
            MessageErrorStop_ALG(aFormRasch, NameStr, '"Формула расчета"', 'Выберите формулу расчета исчисленной суммы налога')
          else
          {
            if dFormRasch = 1
            {
              if (sKodOsvNal    <> '') #_InsMes(aKodOsvNal   , 'Стр. 170', 'Строка не должна быть заполнена при текущей формуле расчета');
              if (sSumOsvNal    <> '') #_InsMes(aSumOsvNal   , 'Стр. 180', 'Строка не должна быть заполнена при текущей формуле расчета');
              if (sKodUmenSum   <> '') #_InsMes(aKodUmenSum  , 'Стр. 190', 'Строка не должна быть заполнена при текущей формуле расчета');
              if (sSumUmenSum   <> '') #_InsMes(aSumUmenSum  , 'Стр. 200', 'Строка не должна быть заполнена при текущей формуле расчета');
              if (sKodSnizhStav <> '') #_InsMes(aKodSnizhStav, 'Стр. 210', 'Строка не должна быть заполнена при текущей формуле расчета');
              if (sSumSnizhStav <> '') #_InsMes(aSumSnizhStav, 'Стр. 220', 'Строка не должна быть заполнена при текущей формуле расчета');

              if (sProcUm       <> '') #_InsMes(aProcUm     , 'Процент уменьшения налоговой суммы', 'Строка не должна быть заполнена при текущей формуле расчета');
              if (sPonizhStav   <> '') #_InsMes(aPonizhStav  , 'Пониженная налоговая ставка'       , 'Строка не должна быть заполнена при текущей формуле расчета');
            }
            if dFormRasch = 2
            {
              if (sKodOsvNal = '') and (sSumOsvNal <> '' ) #_InsMes(aKodOsvNal, 'Стр. 170', 'Укажите код соответствующей налоговой льготы');
              else
              {
                if (sKodOsvNal <> '') and (sSumOsvNal = '' ) #_InsMes(aKodOsvNal, 'Стр. 180', 'Произведите перерасчет формы для расчета суммы льготы');
                if (sKodOsvNal =  '') and (sSumOsvNal = '' )
                {
                  #_InsMes(aKodOsvNal, 'Стр. 170', 'Укажите код налоговой льготы');
                  #_InsMes(aSumOsvNal, 'Стр. 180', 'Произведите перерасчет формы для расчета суммы льготы');
                }
                else
                {
                  if not IsValidKodOsvNal(sKodOsvNal, getMes) #_MesNoKor(aKodOsvNal, 'Стр. 170');
                }
              }
              if (sKodUmenSum   <> '' ) #_InsMes(aKodUmenSum  , 'Стр. 190', 'Строка не должна быть заполнена при текущей формуле расчета');
              if (sSumUmenSum   <> '' ) #_InsMes(aSumUmenSum  , 'Стр. 200', 'Строка не должна быть заполнена при текущей формуле расчета');
              if (sKodSnizhStav <> '' ) #_InsMes(aKodSnizhStav, 'Стр. 210', 'Строка не должна быть заполнена при текущей формуле расчета');
              if (sSumSnizhStav <> '' ) #_InsMes(aSumSnizhStav, 'Стр. 220', 'Строка не должна быть заполнена при текущей формуле расчета');

              if (sProcUm       <> '') #_InsMes(aProcUm      , 'Процент уменьшения налоговой суммы', 'Строка не должна быть заполнена при текущей формуле расчета');
              if (sPonizhStav   <> '') #_InsMes(aPonizhStav  , 'Пониженная налоговая ставка'       , 'Строка не должна быть заполнена при текущей формуле расчета');
            }
            if dFormRasch = 3
            {
              if (iLgotMesTS = 0) #_InsMes(aLgotMesTS, 'Стр. 150', 'Строка обязательна к заполнению при данной формуле расчета. Заполните ее и произведите перерасчет');

              if (sKodOsvNal <> '') #_InsMes(aKodOsvNal, 'Стр. 170', 'Строка не должна быть заполнена при текущей формуле расчета');
              if (sSumOsvNal <> '') #_InsMes(aSumOsvNal, 'Стр. 180', 'Строка не должна быть заполнена при текущей формуле расчета');

              if (sKodUmenSum = '') and (sSumUmenSum <> '' ) #_InsMes(aKodUmenSum, 'Стр. 190', 'Укажите код соответствующей налоговой льготы');
              else
              {
                if (sKodUmenSum = '') #_InsMes(aKodUmenSum, 'Стр. 190', 'Укажите код налоговой льготы');
                else if not IsValidKodUmenNal(sKodUmenSum, getMes) #_MesNoKor(aKodUmenSum, 'Стр. 190');

                if (sProcUm = '') #_InsMes(aProcUm, 'Процент уменьшения налоговой суммы', 'Укажите процент уменьшения налоговой суммы');
                else if (sSumUmenSum = '') #_InsMes(aSumUmenSum, 'Стр. 200', 'Произведите перерасчет формы для расчета суммы льготы');
              }

              if (sKodSnizhStav = '') and (sPonizhStav <> '') #_InsMes(aKodSnizhStav, 'Стр. 210', 'Укажите код соответствующей налоговой льготы');
              else
              {
                if (sKodSnizhStav = '') #_InsMes(aKodSnizhStav, 'Стр. 210', 'Укажите код налоговой льготы');
                else if not IsValidKodSnigNal(sKodSnizhStav, getMes) #_MesNoKor(aKodSnizhStav, 'Стр. 210');

                if (sPonizhStav = '') #_InsMes(aPonizhStav, 'Пониженная налоговая ставка', 'Укажите пониженную налоговую ставку и произведите перерасчет формы');
                else if (sSumSnizhStav = '' ) #_InsMes(aSumSnizhStav, 'Стр. 220', 'Произведите перерасчет формы для расчета суммы льготы');
              }
            }
          }
        }
      }

      NameStr := '02.'+String(i+1)+' Раздел 1';

      dAvPUKv1 := Double(sAvPUKv1);
      dAvPUKv2 := Double(sAvPUKv2);
      dAvPUKv3 := Double(sAvPUKv3);

      _dNalPU := Round(_dNalIschisl - dAvPUKv1 - dAvPUKv2 - dAvPUKv3);

      if (DoubleToStr(Round(_dNalPU), '[|-]3666666666666666666666') <> sNalPU) #_MesNoRasch(aNalPU, '"Сумма налога (руб.)"');
    }
  }

  //**********************************************************************************************************

@end.

//***************************************************************************************************************************************************

@Script On_Recalc : boolean;
  #declare _Log(_strAdr, _strMes, _strVal)
    MesError.InsertRasch(NameStr, #_strAdr, #_strMes, #_strVal, 0);
  #end

  #declare GD0(_strVal)
    DoubleToStr(Round(#_strVal), '[|-]3666666666666666666666666666666')
  #end

  #declare GD1_4(_strVal)
    DoubleToStr(Round(#_strVal, 4), '6~9999')
  #end
@begin
  //Документ
  if ((GetStrVal('Файл/Документ/ДатаДок') = '') or (GetStrVal('Файл/Документ/ДатаДок') = 'ДД.ММ.ГГГГ'))
    SetFldVal('Файл/Документ/ДатаДок', DateToStr(Cur_Date, 'DD.MM.YYYY'));

  var SumPU_count, RachNalTS_count_, i, j: Comp;
  var Adr_SumPU_, Adr_RachNalTS_, bufRasch, sMKojefKv_, bufStr, sSumIschisl_, sMKojefKl_, sMSumOsvNal_, sMSumUmenSum_, sMSumSnizhStav_,
      sMSumIschisl_Upl_1, sMSumIschisl_Upl_2, sMSumIschisl_Upl_3, sMSumIschisl_Upl_4, sMSumIschisl_Upl_5, sMNalIschisl_, sMNalPU_,
      aKojefKv_, aKojefKl_, aSumIschisl_Upl_, aSumOsvNal_, aSumUmenSum_, aSumSnizhStav_, aNalIschisl_, aNalPU_, NameStr : string;
  var VladenTS_, LgotMesTS_: integer;
  var NalIschisl_, AvPUKv1_, AvPUKv2_, AvPUKv3_, NalPU_,
      NalBaza_, KojefKv_, NalStavka_, KojefKl_, SumOsvNal_, ProcUm_, SumUmenSum_, SumSnizhStav_,
      PonizhStav_, SumIschisl_, FormRasch_, SumIschisl_Upl_: double;

  sMKojefKv_         := 'Стр. 120 = стр. 110 / 12 (результат округлен до 4-х знаков после запятой)'   ;
  sSumIschisl_       := 'Стр. 140 = стр. 070 * стр. 120 * стр. 130'                                   ;
  sMKojefKl_         := 'Стр. 160 = стр. 150 / 12 (результат округлен до 4-х знаков после запятой)'   ;
  sMSumOsvNal_       := 'Стр. 180 = стр. 070 * стр. 130 * стр. 120'                                   ;
  sMSumUmenSum_      := 'Стр. 200 = стр. 070 * стр. 130 * Процент умен. суммы налога / 100 * стр. 160';
  sMSumSnizhStav_    := 'Стр. 220 = стр. 070 * (стр. 130 - Пониженная ставка) / 100 * стр. 160'       ;
  sMSumIschisl_Upl_1 := 'Стр. 230 = стр. 140'                                                         ;
  sMSumIschisl_Upl_2 := 'Стр. 230 = стр. 140 - стр. 180'                                              ;
  sMSumIschisl_Upl_3 := 'Стр. 230 = стр. 140 - стр. 200 - стр. 220'                                   ;
  sMSumIschisl_Upl_4 := 'Стр. 230 = 0 (т.к. не выбрана формула расчета)'                              ;
  sMSumIschisl_Upl_5 := 'Стр. 230 < 0 (нуля), поэтому принимает значение 0'                           ;
  sMNalIschisl_      := 'Стр. 021 = сумма(стр. 230), по всем разделам 2 с соответствующим кодом ОКТМО';
  sMNalPU_           := 'Стр. 030/040 = стр. 021 - стр. 023 - 025 - 027)'                             ;

  NameStr := '01 Титульный лист';

  SumPU_count := XMLMAP.GetNodeCountByName('Файл/Документ/ТрНалНД/СумНалПУ/СумПУ');
  for (i := 0; i < SumPU_count; i++)
  {
    NameStr := '02.'+String(i+1)+' Раздел 1';

    aNalIschisl_ := 'Файл/Документ/ТрНалНД/СумНалПУ/СумПУ' + getIter(i) +'/НалИсчисл';
    aNalPU_      := 'Файл/Документ/ТрНалНД/СумНалПУ/СумПУ' + getIter(i) +'/НалПУ'    ;

    bufRasch    := '';
    NalIschisl_ := 0 ;

    Adr_SumPU_ := 'Файл/Документ/ТрНалНД/СумНалПУ/СумПУ' + getIter(i);

    RachNalTS_count_ := XMLMAP.GetNodeCountByName(Adr_SumPU_ + '/РасчНалТС')
    for (j := 0; j < RachNalTS_count_; j++)
    {
      NameStr := '03.'+String(i+1)+'.'+String(j+1)+' Раздел 2';

      aKojefKv_        := 'Файл/Документ/ТрНалНД/СумНалПУ/СумПУ' + getIter(i) +'/РасчНалТС' + getIter(j) +'/КоэфКв'                   ;
      aKojefKl_        := 'Файл/Документ/ТрНалНД/СумНалПУ/СумПУ' + getIter(i) +'/РасчНалТС' + getIter(j) +'/КоэфКл'                   ;
      aSumIschisl_Upl_ := 'Файл/Документ/ТрНалНД/СумНалПУ/СумПУ' + getIter(i) +'/РасчНалТС' + getIter(j) +'/СумИсчислУпл'             ;
      aSumOsvNal_      := 'Файл/Документ/ТрНалНД/СумНалПУ/СумПУ' + getIter(i) +'/РасчНалТС' + getIter(j) +'/ЛьготОсвНал/СумОсвНал'    ;
      aSumUmenSum_     := 'Файл/Документ/ТрНалНД/СумНалПУ/СумПУ' + getIter(i) +'/РасчНалТС' + getIter(j) +'/ЛьготУменСум/СумУменСум'  ;
      aSumSnizhStav_   := 'Файл/Документ/ТрНалНД/СумНалПУ/СумПУ' + getIter(i) +'/РасчНалТС' + getIter(j) +'/ЛьготСнижСтав/СумСнижСтав';

      SumUmenSum_   := 0;
      SumSnizhStav_ := 0;

      //Получаем значения
      Adr_RachNalTS_ := Adr_SumPU_ + '/РасчНалТС' + getIter(j);

      FormRasch_  := GetIntVal(Adr_RachNalTS_ + '/ФормРасч'               );

      VladenTS_   := GetIntVal(Adr_RachNalTS_ + '/ВладенТС'               );
      LgotMesTS_  := GetIntVal(Adr_RachNalTS_ + '/ЛьготМесТС'             );

      NalBaza_    := GetDblVal(Adr_RachNalTS_ + '/НалБаза'                );
      NalStavka_  := GetDblVal(Adr_RachNalTS_ + '/НалСтавка'              );
      ProcUm_     := GetDblVal(Adr_RachNalTS_ + '/ЛьготУменСум/ПроцУм'    );
      PonizhStav_ := GetDblVal(Adr_RachNalTS_ + '/ЛьготСнижСтав/ПонижСтав');


      //Расчет и установка значений
      KojefKv_    := Round(VladenTS_  / 12.00, 4);
      KojefKl_    := Round(LgotMesTS_ / 12.00, 4);
      SumIschisl_ := Round(NalBaza_ * NalStavka_ * KojefKv_);


      SetFldVal(Adr_RachNalTS_ + '/КоэфКв', #GD1_4(KojefKv_));
      #_Log(aKojefKv_, sMKojefKv_, #GD1_4(KojefKv_)+' = '+String(VladenTS_)+' / 12');

      if (KojefKl_ <> 0) {
        SetFldVal(Adr_RachNalTS_+'/КоэфКл', #GD1_4(KojefKl_));
        #_Log(aKojefKl_, sMKojefKl_, #GD1_4(KojefKl_)+' = '+String(LgotMesTS_)+' / 12');
      }
      else
      {
        SetFldVal(Adr_RachNalTS_ + '/КоэфКл', '');
      }


      SumOsvNal_ := Round(NalBaza_ * NalStavka_ * KojefKl_);
      if (GetStrVal(Adr_RachNalTS_ + '/ЛьготУменСум/ПроцУм') <> '') {
        SumUmenSum_   := Round(NalBaza_ * NalStavka_ * (ProcUm_ / 100.00)  * KojefKl_);
      }
      if (GetStrVal(Adr_RachNalTS_ + '/ЛьготСнижСтав/ПонижСтав') <> '') {
        SumSnizhStav_ := Round(NalBaza_ * (NalStavka_ - PonizhStav_) / 100 * KojefKl_);
      }

      case FormRasch_ of
          1: {  SumIschisl_Upl_ := Round(SumIschisl_);
                SumOsvNal_ := 0.00; SumUmenSum_ := 0.00; SumSnizhStav_ := 0.00;
                #_Log(aSumIschisl_Upl_, sMSumIschisl_Upl_1, #GD0(SumIschisl_Upl_)+' = '+#GD0(SumIschisl_));
             }
          2: {  SumIschisl_Upl_ := Round(SumIschisl_ - SumOsvNal_);
                SumUmenSum_ := 0.00; SumSnizhStav_ := 0.00;

                #_Log(aSumOsvNal_, sMSumOsvNal_, #GD0(SumOsvNal_)+' = '+String(NalBaza_)+' * '+String(NalStavka_)+' * '+#GD1_4(KojefKl_));
                #_Log(aSumIschisl_Upl_, sMSumIschisl_Upl_2, #GD0(SumIschisl_Upl_)+' = '+#GD0(SumIschisl_)+' - '+#GD0(SumOsvNal_));
             }
          3: {  SumIschisl_Upl_ := Round(SumIschisl_ - SumUmenSum_ - SumSnizhStav_);
                SumOsvNal_ := 0.00;

                bufStr := #GD0(SumUmenSum_)+' = '+String(NalBaza_)+' * '+String(NalStavka_)+' * '+String(ProcUm_)+' / 100 * '+#GD1_4(KojefKl_);
                #_Log(aSumUmenSum_, sMSumUmenSum_, bufStr);
                bufStr := #GD0(SumSnizhStav_)+' = '+String(NalBaza_)+' * ('+String(NalStavka_)+' - '+String(PonizhStav_)+') / 100 * '+#GD1_4(KojefKl_);
                #_Log(aSumSnizhStav_, sMSumSnizhStav_, bufStr);
                bufStr := (#GD0(SumIschisl_Upl_)+' = '+#GD0(SumIschisl_)+' - '+#GD0(SumUmenSum_)+' - '+#GD0(SumSnizhStav_));
                #_Log(aSumIschisl_Upl_, sMSumIschisl_Upl_3, bufStr);
             }
        else {  SumIschisl_Upl_ := 0.00;
                #_Log(aSumIschisl_Upl_, sMSumIschisl_Upl_4, #GD0(SumIschisl_Upl_)+' = 0');
             }
      end;
      if (SumIschisl_Upl_ < 0) {
        SumIschisl_Upl_ := 0.00;
        #_Log(aSumIschisl_Upl_, sMSumIschisl_Upl_5, #GD0(SumIschisl_Upl_)+' = 0');
      }

      NalIschisl_ := Round(NalIschisl_ + SumIschisl_Upl_);

      SetFldVal(Adr_RachNalTS_+'/СумИсчисл'   , #GD0(SumIschisl_    ));
      SetFldVal(Adr_RachNalTS_+'/СумИсчислУпл', #GD0(SumIschisl_Upl_));

      #_Log(Adr_RachNalTS_+'/СумИсчисл', sSumIschisl_, #GD0(SumIschisl_)+' = '+String(NalBaza_)+' * '+String(NalStavka_)+' * '+#GD1_4(KojefKv_));


      //Установка значений и видимости полей XML
      if (SumOsvNal_    <> 0.00) SetFldVal(Adr_RachNalTS_ + '/ЛьготОсвНал/СумОсвНал'    , SumOsvNal_   )
      else SetFldVal(Adr_RachNalTS_ + '/ЛьготОсвНал/СумОсвНал', '');

      if (SumUmenSum_   <> 0.00) SetFldVal(Adr_RachNalTS_ + '/ЛьготУменСум/СумУменСум'  , SumUmenSum_  )
      else SetFldVal(Adr_RachNalTS_ + '/ЛьготУменСум/СумУменСум', '');

      if (SumSnizhStav_ <> 0.00) SetFldVal(Adr_RachNalTS_ + '/ЛьготСнижСтав/СумСнижСтав', SumSnizhStav_)
      else SetFldVal(Adr_RachNalTS_ + '/ЛьготСнижСтав/СумСнижСтав', '');


      if (j = 0) bufRasch := String(SumIschisl_Upl_);
      else bufRasch := bufRasch + ' + ' + String(SumIschisl_Upl_);
    }

    NameStr := '02.'+String(i+1)+' Раздел 1';

    AvPUKv1_ := GetDblVal(Adr_SumPU_ + '/АвПУКв1');
    AvPUKv2_ := GetDblVal(Adr_SumPU_ + '/АвПУКв2');
    AvPUKv3_ := GetDblVal(Adr_SumPU_ + '/АвПУКв3');

    NalPU_ := Round(NalIschisl_ - AvPUKv1_ - AvPUKv2_ - AvPUKv3_);

    SetFldVal(Adr_SumPU_ + '/НалИсчисл', NalIschisl_);
    SetFldVal(Adr_SumPU_ + '/НалПУ'    , NalPU_     );

    #_Log(aNalIschisl_, sMNalIschisl_, String(NalIschisl_)+' = '+bufRasch);
    #_Log(aNalPU_, sMNalPU_, String(NalPU_)+' = '+String(NalIschisl_)+' - '+String(AvPUKv1_)+' - '+String(AvPUKv2_)+' - '+String(AvPUKv3_));
  }
@end.

//***************************************************************************************************************************************************

@Script On_ExportXML : boolean;
@begin
  SetFldVal('Файл/ИдФайл', Replace(_IdFail_, '.xml', ''));

  if (not XMLMap.ExpToXml(_XmlFileName_)) {
    Message('On_ExportXML: '+ XMLMap.GetStLastError, cancelButton+Warning);
    Exit;
  }

  message('Выгружен в файл ' + _XmlFileName_);
@end.

