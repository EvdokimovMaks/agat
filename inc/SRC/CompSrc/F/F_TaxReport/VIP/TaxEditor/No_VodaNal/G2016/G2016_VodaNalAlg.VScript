//------------------------------------------------------------------------------------------------------------
//                                                                                    (c) корпорация Галактика
// Галактика 9.1 - модуль "Электронная отчетность"
// Алгоритмы расчета : "Декларация по водному налогу (1151072) (2016 г.)"
//------------------------------------------------------------------------------------------------------------


//============================================================================================================
//#region СЕРВИСНЫЕ МЕТОДЫ
//------------------------------------------------------------------------------------------------------------
@Script GetStrVal(fld:string):string;
@begin
  Result := Trim(String(XMLMAP.GetAttrValueByName(fld)));
@end.

//------------------------------------------------------------------------------------------------------------
@Script GetStrValFormat(fld:string):string;
@begin
  var bufRes: string;

  bufRes := Trim(String(XMLMAP.GetAttrValueByName(fld)));

  if (bufRes = '')
  then Result := '0'
  else if (Double(bufRes) < 0)
       then Result := '('+bufRes+')'
       else Result := bufRes;
@end.

//------------------------------------------------------------------------------------------------------------
@Script GetDblVal(fld:string):double;
@begin
  Result := Double(XMLMAP.GetAttrValueByName(fld));
@end.

//------------------------------------------------------------------------------------------------------------
@Script GetFldVis(fld:string):boolean;
@begin
  Result := False;
  Result := XMLMAP.GetAttrVisByName(fld);
@end.

//------------------------------------------------------------------------------------------------------------
@Script SetNull(fld:string);
@begin
  XMLMAP.SetIsNullAttrValueByName(fld, 2);
@end.

//------------------------------------------------------------------------------------------------------------
@Script GetFldVisInTree(fld:string):boolean;
@begin
  Result := XMLMAP.GetAttrVisByNameInTree(fld);
@end.

//------------------------------------------------------------------------------------------------------------
@Script GetPatVal(expr:string):double;
#include AllTaxObj.Vih
@begin
  Result := Double(ПАТ(expr));
@end.

//------------------------------------------------------------------------------------------------------------
@Script SetDblValRound(fld:string;val:double;col:integer);
@begin
  XMLMAP.SetVariantAttrValueByName_Formula(fld, Round(val, col), 2);
@end.

//------------------------------------------------------------------------------------------------------------
@Script SetFldVal(fld:string; val:string);
@begin
  XMLMAP.SetVariantAttrValueByName_Formula(fld, string(val), 2);
@end.

//------------------------------------------------------------------------------------------------------------
@Script SetFldVis(fld:string;vis:boolean);
@begin
  XMLMAP.SetAttrVisByName(fld,vis);
@end.

//------------------------------------------------------------------------------------------------------------
@Script MesErrStop(mesMesAdrXML, mesPole, mesMes: string; mesCountIter : integer = 0; mesMod : integer = 0): boolean;
@begin
  MesError.InsertMesError(mesMesAdrXML, Comp(0), '', mesPole, mesMes, mesCountIter, mesMod);
  Result := True;
@end.

//------------------------------------------------------------------------------------------------------------
@Script GetIter(iter:longint):string;
@begin
  Result := '';

  if (iter > 0)
    Result := '[' + String(iter) + ']';
@end.

//------------------------------------------------------------------------------------------------------------
@Script DTS_I(zName: string): string;
@begin
  Result := DoubleToStr(Round(Double(zName)), '[|-]366666666666666666666');
@end.

//------------------------------------------------------------------------------------------------------------
@Script NullStr(fld:string):boolean;
@begin
  Result := (GetStrVal(fld) = '');
@end.
//#endregion СЕРВИСНЫЕ МЕТОДЫ
//************************************************************************************************************


//============================================================================================================
//#region ОБЩИЕ МЕТОДЫ
//------------------------------------------------------------------------------------------------------------
@Script IF_21010_22140(fld : string) : boolean;
@begin
  Result :=    (fld = '21010') or (fld = '21020') or (fld = '21030') or (fld = '21040') or (fld = '21050') or (fld = '21060')
            or (fld = '21070') or (fld = '21080') or (fld = '21090') or (fld = '21100') or (fld = '21110') or (fld = '21120')
            or (fld = '22010') or (fld = '22020') or (fld = '22030') or (fld = '22040') or (fld = '22050') or (fld = '22060')
            or (fld = '22070') or (fld = '22080') or (fld = '22090') or (fld = '22100') or (fld = '22110') or (fld = '22120')
            or (fld = '22130') or (fld = '22140');
@end.

//------------------------------------------------------------------------------------------------------------
@Script IF_30100_32100(fld : string) : boolean;
@begin
  Result :=    (fld = '30100') or (fld = '30200') or (fld = '30300') or (fld = '30400') or (fld = '30500') or (fld = '30600')
            or (fld = '30700') or (fld = '30800') or (fld = '30900') or (fld = '31000') or (fld = '31100') or (fld = '31200')
            or (fld = '31300') or (fld = '31400') or (fld = '31500') or (fld = '31600') or (fld = '31700') or (fld = '31800')
            or (fld = '31900') or (fld = '32000') or (fld = '32100');
@end.

//------------------------------------------------------------------------------------------------------------
@Script IF_40100_41200(fld : string) : boolean;
@begin
  Result :=    (fld = '40100') or (fld = '40200') or (fld = '40300') or (fld = '40400') or (fld = '40500') or (fld = '40600')
            or (fld = '40700') or (fld = '40800') or (fld = '40900') or (fld = '41000') or (fld = '41100') or (fld = '41200');
@end.
//#endregion ОБЩИЕ МЕТОДЫ
//************************************************************************************************************


//============================================================================================================
//#region ДЕЙСТВИЯ ВЫПОЛНЯЕМЫЕ ПРИ УСТАНОВКЕ ВИДИМОСТИ ПОЛЕЙ
//------------------------------------------------------------------------------------------------------------
@Script On_Visable : boolean;
  //==========================================================================================================
  //#region СЕРВИС On_Visable
  //----------------------------------------------------------------------------------------------------------
  #declare IfVis(adrIfVis)
    SetFldVis(#adrIfVis, not NullStr(#adrIfVis));
  #end

  #declare SetVisF(adrIfVis)
    SetFldVis(#adrIfVis, False);
  #end

  #declare SetVisT(adrIfVis)
    SetFldVis(#adrIfVis, True);
  #end
  //#endregion СЕРВИС On_Visable
  //**********************************************************************************************************
@begin
  //#region Файл/Документ/СвНП
  #IfVis('Файл/Документ/СвНП/Тлф')

  if     not NullStr('Файл/Документ/СвНП/НПЮЛ/НаимОрг')
     and not NullStr('Файл/Документ/СвНП/НПЮЛ/ИННЮЛ'  )
     and not NullStr('Файл/Документ/СвНП/НПЮЛ/КПП'    )
  {
    #SetVisT('Файл/Документ/СвНП/НПЮЛ')
    #SetVisF('Файл/Документ/СвНП/НПФЛ')

    var buf : string;
    buf := GetStrVal('Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ/ФормРеорг');

    if (buf = '0')
    {
      #SetVisT('Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ'      )
      #SetVisF('Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ/ИННЮЛ')
      #SetVisF('Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ/КПП'  )
    }
    else
    {
      if    (buf = '1')
         or (buf = '2')
         or (buf = '3')
         or (buf = '5')
         or (buf = '6')
      {
        #SetVisT('Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ'      )
        #SetVisT('Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ/ИННЮЛ')
        #SetVisT('Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ/КПП'  )
      }
      else #SetVisF('Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ');
    }
  }
  else
  {
    #SetVisT('Файл/Документ/СвНП/НПФЛ')
    #SetVisF('Файл/Документ/СвНП/НПЮЛ')

    #IfVis('Файл/Документ/СвНП/НПФЛ/ФИО/Отчество')

    if not NullStr('Файл/Документ/СвНП/НПФЛ/СведФЛ1/ИННФЛ')
    {
      #SetVisT('Файл/Документ/СвНП/НПФЛ/СведФЛ1')
      #SetVisF('Файл/Документ/СвНП/НПФЛ/СведФЛ2')

      #IfVis('Файл/Документ/СвНП/НПФЛ/СведФЛ1/ДатаРожд')
      #IfVis('Файл/Документ/СвНП/НПФЛ/СведФЛ1/ОКСМ'    )
      #IfVis('Файл/Документ/СвНП/НПФЛ/СведФЛ1/СтатусНП')

      if     not NullStr('Файл/Документ/СвНП/НПФЛ/СведФЛ1/УдЛичн/КодВидДок')
         and not NullStr('Файл/Документ/СвНП/НПФЛ/СведФЛ1/УдЛичн/СерНомДок')
         and not NullStr('Файл/Документ/СвНП/НПФЛ/СведФЛ1/УдЛичн/ДатаДок'  )
         and not NullStr('Файл/Документ/СвНП/НПФЛ/СведФЛ1/УдЛичн/ВыдДок'   )
      then #SetVisT('Файл/Документ/СвНП/НПФЛ/СведФЛ1/УдЛичн')
      else #SetVisF('Файл/Документ/СвНП/НПФЛ/СведФЛ1/УдЛичн')

      if not NullStr('Файл/Документ/СвНП/НПФЛ/СведФЛ1/АдрМЖРФ/КодРегион')
      {
        #SetVisT('Файл/Документ/СвНП/НПФЛ/СведФЛ1/УдЛичн')

        #IfVis('Файл/Документ/СвНП/НПФЛ/СведФЛ1/АдрМЖРФ/Индекс'    )
        #IfVis('Файл/Документ/СвНП/НПФЛ/СведФЛ1/АдрМЖРФ/Район'     )
        #IfVis('Файл/Документ/СвНП/НПФЛ/СведФЛ1/АдрМЖРФ/Город'     )
        #IfVis('Файл/Документ/СвНП/НПФЛ/СведФЛ1/АдрМЖРФ/НаселПункт')
        #IfVis('Файл/Документ/СвНП/НПФЛ/СведФЛ1/АдрМЖРФ/Улица'     )
        #IfVis('Файл/Документ/СвНП/НПФЛ/СведФЛ1/АдрМЖРФ/Дом'       )
        #IfVis('Файл/Документ/СвНП/НПФЛ/СведФЛ1/АдрМЖРФ/Корпус'    )
        #IfVis('Файл/Документ/СвНП/НПФЛ/СведФЛ1/АдрМЖРФ/Кварт'     )
      }
      else #SetVisF('Файл/Документ/СвНП/НПФЛ/СведФЛ1/УдЛичн')
    }
    else
    {
      #SetVisF('Файл/Документ/СвНП/НПФЛ/СведФЛ1')
      #SetVisT('Файл/Документ/СвНП/НПФЛ/СведФЛ2')

      #IfVis('Файл/Документ/СвНП/НПФЛ/СведФЛ2/АдрМЖРФ/Индекс'    )
      #IfVis('Файл/Документ/СвНП/НПФЛ/СведФЛ2/АдрМЖРФ/Район'     )
      #IfVis('Файл/Документ/СвНП/НПФЛ/СведФЛ2/АдрМЖРФ/Город'     )
      #IfVis('Файл/Документ/СвНП/НПФЛ/СведФЛ2/АдрМЖРФ/НаселПункт')
      #IfVis('Файл/Документ/СвНП/НПФЛ/СведФЛ2/АдрМЖРФ/Улица'     )
      #IfVis('Файл/Документ/СвНП/НПФЛ/СведФЛ2/АдрМЖРФ/Дом'       )
      #IfVis('Файл/Документ/СвНП/НПФЛ/СведФЛ2/АдрМЖРФ/Корпус'    )
      #IfVis('Файл/Документ/СвНП/НПФЛ/СведФЛ2/АдрМЖРФ/Кварт'     )
    }
  }
  //#endregion Файл/Документ/СвНП

  //#region Файл/Документ/Подписант
  if    (GetStrVal('Файл/Документ/Подписант/ПрПодп') = '2')
     or (GetStrVal('Файл/Документ/Подписант/ПрПодп') = '1' and GetFldVis('Файл/Документ/СвНП/НПЮЛ'))
     or (     not NullStr('Файл/Документ/Подписант/ФИО/Фамилия')
          and not NullStr('Файл/Документ/Подписант/ФИО/Имя'    ))
  {
    #SetVisT('Файл/Документ/Подписант/ФИО'         )
    #IfVis  ('Файл/Документ/Подписант/ФИО/Отчество')
  }
  else #SetVisF('Файл/Документ/Подписант/ФИО')

  if    (GetStrVal('Файл/Документ/Подписант/ПрПодп') = '2')
     or (not NullStr('Файл/Документ/Подписант/СвПред/НаимДок'))
  {
    #SetVisT('Файл/Документ/Подписант/СвПред'        )
    #IfVis  ('Файл/Документ/Подписант/СвПред/НаимОрг')
  }
  else #SetVisF('Файл/Документ/Подписант/СвПред')
  //#endregion Файл/Документ/Подписант

  var CountI, CountJ, I, J : integer;
  var XMLAdrI, XMLAdrJ : string;
  var fl : boolean;

  //#region Файл/Документ/ВоднНалог/СумНалПУ
  CountI := XMLMap.GetNodeCountByName('Файл/Документ/ВоднНалог/СумНалПУ');
  for (i := 0; i < CountI; i++)
  {
    XMLAdrI := 'Файл/Документ/ВоднНалог/СумНалПУ' + getIter(i);

    fl := False;

    //#region Файл/Документ/ВоднНалог/СумНалПУ/СумПУ
    CountJ := XMLMap.GetNodeCountByName(XMLAdrI + '/СумПУ');
    for (j := 0; j < CountJ; j++)
    {
      XMLAdrJ := XMLAdrI + '/СумПУ' + getIter(j);

      if     not NullStr(XMLAdrJ + '/ОКТМО')
         and not NullStr(XMLAdrJ + '/НалПУ')
      {
        #SetVisT(XMLAdrJ)
        fl := True;
      }
      else #SetVisF(XMLAdrJ)
    } //#endregion Файл/Документ/ВоднНалог/СумНалПУ/СумПУ

    SetFldVis(XMLAdrI, fl);
  } //#endregion Файл/Документ/ВоднНалог/СумНалПУ

  //#region Файл/Документ/ВоднНалог/РасчНалБаза/РасчНБЗабВод
  CountI := XMLMap.GetNodeCountByName('Файл/Документ/ВоднНалог/РасчНалБаза/РасчНБЗабВод');
  for (i := 0; i < CountI; i++)
  {
    XMLAdrI := 'Файл/Документ/ВоднНалог/РасчНалБаза/РасчНБЗабВод' + getIter(i);

    fl := False;

    //#region Файл/Документ/ВоднНалог/РасчНалБаза/РасчНБЗабВод/РасчНБКод
    CountJ := XMLMap.GetNodeCountByName(XMLAdrI + '/РасчНБКод');
    for (j := 0; j < CountJ; j++)
    {
      XMLAdrJ := XMLAdrI + '/РасчНБКод' + getIter(j);

      if     not NullStr(XMLAdrJ + '/КодВодПольз'   )
         and not NullStr(XMLAdrJ + '/ОбъемЗабрПер'  )
         and not NullStr(XMLAdrJ + '/ОбъемЗабрНеНал')
         and not NullStr(XMLAdrJ + '/КодЦЗВ'        )
         and not NullStr(XMLAdrJ + '/ЛимитВодПол'   )
         and not NullStr(XMLAdrJ + '/ОбъемЗабрНал'  )
         and not NullStr(XMLAdrJ + '/ОбЗабрЛим'     )
         and not NullStr(XMLAdrJ + '/ОбЗабрСвЛим'   )
         and not NullStr(XMLAdrJ + '/НалСтавЛим'    )
         and not NullStr(XMLAdrJ + '/НалСтавСвЛим'  )
         and not NullStr(XMLAdrJ + '/ПодлУпл'       )
      {
        #SetVisT(XMLAdrJ)
        fl := True;

        #IfVis(XMLAdrJ + '/Коэф_п.1.1')
        #IfVis(XMLAdrJ + '/Коэф_п.4'  )
        #IfVis(XMLAdrJ + '/Коэф_п.5'  )
      }
      else #SetVisF(XMLAdrJ)
    } //#endregion Файл/Документ/ВоднНалог/СумНалПУ/СумПУ

    if     not NullStr(XMLAdrI + '/КБК'        )
       and not NullStr(XMLAdrI + '/ОКТМО'      )
       and not NullStr(XMLAdrI + '/НаимВодОб'  )
       and not NullStr(XMLAdrI + '/ЛицВодПольз')
       and fl
    then #SetVisT(XMLAdrI)
    else #SetVisF(XMLAdrI)
  } //#endregion Файл/Документ/ВоднНалог/РасчНалБаза/РасчНБЗабВод

  //#region Файл/Документ/ВоднНалог/РасчНалБаза/РасчНБИсклЗабВод
  var buf : string;

  CountI := XMLMap.GetNodeCountByName('Файл/Документ/ВоднНалог/РасчНалБаза/РасчНБИсклЗабВод');
  for (i := 0; i < CountI; i++)
  {
    XMLAdrI := 'Файл/Документ/ВоднНалог/РасчНалБаза/РасчНБИсклЗабВод' + getIter(i);

    fl := False;

    if     not NullStr(XMLAdrI + '/КБК'        )
       and not NullStr(XMLAdrI + '/ОКТМО'      )
       and not NullStr(XMLAdrI + '/НаимВодОб'  )
       and not NullStr(XMLAdrI + '/КодВодПольз')
       and not NullStr(XMLAdrI + '/НалСтав'    )
       and not NullStr(XMLAdrI + '/ПодлУпл'    )
    {
      #SetVisT(XMLAdrI)

      #IfVis(XMLAdrI + '/Коэф_п.1.1' )

      if NullStr(XMLAdrI + '/ДогВодПольз')
      then #SetVisT(XMLAdrI + '/ЛицВодПольз')
      else #IfVis  (XMLAdrI + '/ЛицВодПольз')

      if NullStr(XMLAdrI + '/ЛицВодПольз')
      then #SetVisT(XMLAdrI + '/ДогВодПольз')
      else #IfVis  (XMLAdrI + '/ДогВодПольз')

      buf := GetStrVal(XMLAdrI + '/КодВодПольз');

      if (IF_21010_22140(buf))
      then #SetVisT(XMLAdrI + '/ПлощВодПр')
      else #SetVisF(XMLAdrI + '/ПлощВодПр')

      if (IF_30100_32100(buf))
      then #SetVisT(XMLAdrI + '/КолПроизвЭл')
      else #SetVisF(XMLAdrI + '/КолПроизвЭл')

      if (IF_40100_41200(buf)) {
        #SetVisT(XMLAdrI + '/ОбъемДрев' )
        #SetVisT(XMLAdrI + '/РасстСплав')
      } else {
        #SetVisF(XMLAdrI + '/ОбъемДрев' )
        #SetVisF(XMLAdrI + '/РасстСплав')
      }
    }
    else #SetVisF(XMLAdrI)
  } //#endregion Файл/Документ/ВоднНалог/РасчНалБаза/РасчНБИсклЗабВод
@end.
//#endregion ДЕЙСТВИЯ ВЫПОЛНЯЕМЫЕ ПРИ УСТАНОВКЕ ВИДИМОСТИ ПОЛЕЙ
//************************************************************************************************************


//============================================================================================================
//#region ДЕЙСТВИЯ ВЫПОЛНЯЕМЫЕ ПРИ ПРОВЕРКЕ
//------------------------------------------------------------------------------------------------------------
@Script On_Check : boolean;
  //==========================================================================================================
  //#region СЕРВИС On_Check
  //----------------------------------------------------------------------------------------------------------
  #include AllTaxObj.Vih

  //----------------------------------------------------------------------------------------------------------
  function IsValidPeriod(strIn: string; var strGetMes: string) : boolean;
  begin
    //Налоговый период
    //Период
    strGetMes := 'Возможные значения: 21, 22, 23, 24, 51, 54, 55 или 56';

    Result := False;
    Result := CheckError.isRegExpr('^(21|22|23|24|51|54|55|56)$', strIn);
  end;

  //----------------------------------------------------------------------------------------------------------
  function IsValidPoMestu(strIn: string; var strGetMes: string) : boolean;
  begin
    //По месту нахождения (учета)
    //ПоМесту
    strGetMes := 'Возможные значения: 213, 250 или 255';

    Result := False;
    Result := CheckError.isRegExpr('^(213|250|255)$', strIn);
  end;


  //----------------------------------------------------------------------------------------------------------
  function IsValidPoMestu_KPP(strPoMestu, strKPP: string; var strGetMes: string) : boolean;
  begin
    strGetMes := 'При значении кода 250 значение 5 и 6 знакомест в значении элемента <КПП> может быть только 36 или 76';

    Result := False;

    if (strPoMestu <> '250')
    then Result := True;
    else Result := (SubStr(strKPP, 5, 2) = '36') or (SubStr(strKPP, 5, 2) = '76');
  end;

  //----------------------------------------------------------------------------------------------------------
  function IsValidStatusNP(strIn: string; var strGetMes: string) : boolean;
  begin
    //Статус налогоплательщика
    //СтатусНП
    strGetMes := 'Возможные значения: 1 или 2';

    Result := False;
    Result := CheckError.isRegExpr('^(1|2)$', strIn);
  end;

  //----------------------------------------------------------------------------------------------------------
  function IsValidKodCZV(strIn: string; var strGetMes: string) : boolean;
  begin
    //Код цели забора воды
    //КодЦЗВ
    strGetMes := 'Возможные значения: 1, 2 или 3';

    Result := False;
    Result := CheckError.isRegExpr('^(1|2|3)$', strIn);
  end;

  //----------------------------------------------------------------------------------------------------------
  function IsValidKodVodPolz(strIn: string; var strGetMes: string) : boolean;
  begin
    //Код водопользования
    //КодВодПольз
    strGetMes := 'Возможные значения: приведенны в Приложении N4 к Порядку заполнения декларации';

    Result := False;
    Result :=    CheckError.isRegExpr('^(11011|11012|11013|11014|11015|11021)$', strIn)
              or CheckError.isRegExpr('^(11022|11023|11024|11031|11032|11033)$', strIn)
              or CheckError.isRegExpr('^(11034|11035|11036|11041|11042|11043)$', strIn)
              or CheckError.isRegExpr('^(11051|11052|11053|11054|11061|11062)$', strIn)
              or CheckError.isRegExpr('^(11063|11071|11072|11073|11074|11075)$', strIn)
              or CheckError.isRegExpr('^(11076|11081|11082|11083|11084|11091)$', strIn)
              or CheckError.isRegExpr('^(11092|11101|11102|11103|11104|11105)$', strIn)
              or CheckError.isRegExpr('^(11106|11111|11112|11113|11120|11121)$', strIn)
              or CheckError.isRegExpr('^(11122|12011|12012|12013|12014|12015)$', strIn)
              or CheckError.isRegExpr('^(12021|12022|12023|12024|12031|12032)$', strIn)
              or CheckError.isRegExpr('^(12033|12034|12035|12036|12041|12042)$', strIn)
              or CheckError.isRegExpr('^(12043|12051|12052|12053|12054|12061)$', strIn)
              or CheckError.isRegExpr('^(12062|12063|12071|12072|12073|12074)$', strIn)
              or CheckError.isRegExpr('^(12075|12076|12081|12082|12083|12084)$', strIn)
              or CheckError.isRegExpr('^(12091|12092|12101|12102|12103|12104)$', strIn)
              or CheckError.isRegExpr('^(12105|12106|12111|12112|12113|12121)$', strIn)
              or CheckError.isRegExpr('^(12122|13010|13020|13030|13040|13050)$', strIn)
              or CheckError.isRegExpr('^(13060|13070|13080|13090|13100|13110)$', strIn)
              or CheckError.isRegExpr('^(13120|13130|13140|21010|21020|21030)$', strIn)
              or CheckError.isRegExpr('^(21040|21050|21060|21070|21080|21090)$', strIn)
              or CheckError.isRegExpr('^(21100|21110|21120|22010|22020|22030)$', strIn)
              or CheckError.isRegExpr('^(22040|22050|22060|22070|22080|22090)$', strIn)
              or CheckError.isRegExpr('^(22100|22110|22120|22130|22140|30100)$', strIn)
              or CheckError.isRegExpr('^(30200|30300|30400|30500|30600|30700)$', strIn)
              or CheckError.isRegExpr('^(30800|30900|31000|31100|31200|31300)$', strIn)
              or CheckError.isRegExpr('^(31400|31500|31600|31700|31800|31900)$', strIn)
              or CheckError.isRegExpr('^(32000|32100|40100|40200|40300|40400)$', strIn)
              or CheckError.isRegExpr('^(40500|40600|40700|40800|40900|41000)$', strIn)
              or CheckError.isRegExpr('^(41100|41200|50091|50092)$'                , strIn);
  end;

  //----------------------------------------------------------------------------------------------------------
  #declare _IsValid(_Valid, _AdrXML, _Pole, _Iter=0, _Mod=0)
    if not #_Valid(GetStrVal(#_AdrXML), getMes)
      MesErrStop
      (
        #_AdrXML
      , #_Pole
      , 'Поле не соответствует формату. ' + getMes
      , #_Iter
      , #_Mod
      );
  #end

  //----------------------------------------------------------------------------------------------------------
  #declare _IsValid_Vis(_Valid, _AdrXML, _Pole, _Iter=0, _Mod=0)
    if GetFldVis(#_AdrXML)
      if not #_Valid(GetStrVal(#_AdrXML), getMes)
        MesErrStop
        (
          #_AdrXML
        , #_Pole
        , 'Поле не соответствует формату. ' + getMes
        , #_Iter
        , #_Mod
        );
  #end

  //----------------------------------------------------------------------------------------------------------
  #declare _IsValid_Dec(_StrMes, _AdrXML, _Pole, _Cel, _Drob, _flMin, _Iter=0, _Mod=0)
    if not IsValidDecimal(GetStrVal(#_AdrXML), #_Cel, #_Drob, getMes, #_flMin)
      MesErrStop
      (
        #_AdrXML
      , #_Pole
      , 'Поле не соответствует формату. Формат поля '+ #_StrMes + getMes
      , #_Iter
      , #_Mod
      );
  #end

  //----------------------------------------------------------------------------------------------------------
  #declare _IsValid_Dec_Vis(_StrMes, _AdrXML, _Pole, _Cel, _Drob, _flMin, _Iter=0, _Mod=0)
    if GetFldVis(#_AdrXML)
      if not IsValidDecimal(GetStrVal(#_AdrXML), #_Cel, #_Drob, getMes, #_flMin)
        MesErrStop
        (
          #_AdrXML
        , #_Pole
        , 'Поле не соответствует формату. Формат поля '+ #_StrMes + getMes
        , #_Iter
      , #_Mod
        );
  #end

  //----------------------------------------------------------------------------------------------------------
  #declare _IsValidPoMestu_KPP(_AdrXML1, _AdrXML2, _Pole)
    if not IsValidPoMestu_KPP(GetStrVal(#_AdrXML1), GetStrVal(#_AdrXML2), getMes)
      MesErrStop
      (
        #_AdrXML2
      , #_Pole
      , 'Поле не соответствует формату. ' + getMes
      );
  #end

  //----------------------------------------------------------------------------------------------------------
  #declare _IsValid_Str(_AdrXML, _Min, _Max, _Pole)
    if not IsValidLenStr(GetStrVal(#_AdrXML), #_Min, #_Max, getMes)
      MesErrStop
      (
        #_AdrXML,
        #_Pole,
        'Поле не соответствует формату. ' + getMes
      );
  #end

  //----------------------------------------------------------------------------------------------------------
  #declare _IsValid_Str_Vis(_AdrXML, _Min, _Max, _Pole)
    if GetFldVis(#_AdrXML)
      if not IsValidLenStr(GetStrVal(#_AdrXML), #_Min, #_Max, getMes)
        MesErrStop
        (
          #_AdrXML,
          #_Pole,
          'Поле не соответствует формату. ' + getMes
        );
  #end
  //#endregion СЕРВИС On_Check
  //**********************************************************************************************************
@begin
  var getMes, XMLAdrI, XMLAdrJ : string = '';
  var CountI, CountJ, I, J : integer;
  var flI, flJ : boolean;

  if not IsValidKND(GetStrVal('Файл/Документ/КНД'), '1151072', getMes)
    MesErrStop('Файл/Документ/КНД', 'Код налоговой декларации', 'Поле не соответствует формату. ' + getMes);

  //#region ТИТУЛЬНЫЙ ЛИСТ
  #_IsValid    (IsValidDate   , 'Файл/Документ/ДатаДок'   , 'Дата документа'             )
  #_IsValid    (IsValidPeriod , 'Файл/Документ/Период'    , 'Налоговый период'           )
  #_IsValid    (IsValidOtchGod, 'Файл/Документ/ОтчетГод'  , 'Отчетный год'               )
  #_IsValid    (IsValidSONO   , 'Файл/Документ/КодНО'     , 'Код налогового органа'      )
  #_IsValid    (IsValidNomKorr, 'Файл/Документ/НомКорр'   , 'Номер корректировки'        )
  #_IsValid    (IsValidPoMestu, 'Файл/Документ/ПоМесту'   , 'По месту нахождения (учета)')
  #_IsValid    (IsValidOKVED  , 'Файл/Документ/СвНП/ОКВЭД', 'Код ОКВЭД'                  )
  #_IsValid_Vis(IsValidTlf    , 'Файл/Документ/СвНП/Тлф'  , 'Контактный телефон'         )

  if GetFldVis('Файл/Документ/СвНП/НПЮЛ')
  {
    #_IsValid(IsValidNaimOrg, 'Файл/Документ/СвНП/НПЮЛ/НаимОрг', 'Наименование организации')
    #_IsValid(IsValidINNUL  , 'Файл/Документ/СвНП/НПЮЛ/ИННЮЛ'  , 'ИНН'                     )   #_IsValid(CheckError.Prov_INN, 'Файл/Документ/СвНП/НПЮЛ/ИННЮЛ', 'ИНН')
    #_IsValid(IsValidKPP    , 'Файл/Документ/СвНП/НПЮЛ/КПП'    , 'КПП'                     )

    #_IsValidPoMestu_KPP('Файл/Документ/ПоМесту', 'Файл/Документ/СвНП/НПЮЛ/КПП', 'КПП');

    if GetFldVis('Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ')
    {
      #_IsValid    (IsValidFormReorg, 'Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ/ФормРеорг', 'Форма реоргазации')
      #_IsValid_Vis(IsValidINNUL    , 'Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ/ИННЮЛ'    , 'ИНН'              )   #_IsValid_Vis(CheckError.Prov_INN, 'Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ/ИННЮЛ', 'ИНН')
      #_IsValid_Vis(IsValidKPP      , 'Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ/КПП'      , 'КПП'              )
    }
  }

  if GetFldVis('Файл/Документ/СвНП/НПФЛ')
  {
    #_IsValid    (IsValidFIO, 'Файл/Документ/СвНП/НПФЛ/ФИО/Фамилия' , 'Фамилия' )
    #_IsValid    (IsValidFIO, 'Файл/Документ/СвНП/НПФЛ/ФИО/Имя'     , 'Имя'     )
    #_IsValid_Vis(IsValidFIO, 'Файл/Документ/СвНП/НПФЛ/ФИО/Отчество', 'Отчество')

    //#region СВЕДЕНИЯ О ФЛ (ИНН)
    if GetFldVis('Файл/Документ/СвНП/НПФЛ/СведФЛ1')
    {
      #_IsValid    (IsValidINNFL   , 'Файл/Документ/СвНП/НПФЛ/СведФЛ1/ИННФЛ'   , 'ИНН'                     )   #_IsValid_Vis(CheckError.Prov_INN, 'Файл/Документ/СвНП/НПФЛ/СведФЛ1/ИННФЛ', 'ИНН')
      #_IsValid_Vis(IsValidDate    , 'Файл/Документ/СвНП/НПФЛ/СведФЛ1/ДатаРожд', 'Дата рождения'           )
      #_IsValid_Vis(IsValidOKSM    , 'Файл/Документ/СвНП/НПФЛ/СведФЛ1/ОКСМ'    , 'Код страны гражданства'  )
      #_IsValid_Vis(IsValidStatusNP, 'Файл/Документ/СвНП/НПФЛ/СведФЛ1/СтатусНП', 'Статус налогоплательщика')

      if GetFldVis('Файл/Документ/СвНП/НПФЛ/СведФЛ1/УдЛичн')
      {
        #_IsValid_Str('Файл/Документ/СвНП/НПФЛ/СведФЛ1/УдЛичн/КодВидДок', 2,   2, 'Свед. о док. удостов. личность: Код вида документа'     )
        #_IsValid_Str('Файл/Документ/СвНП/НПФЛ/СведФЛ1/УдЛичн/СерНомДок', 1,  25, 'Свед. о док. удостов. личность: Серия и номер документа')
        #_IsValid_Str('Файл/Документ/СвНП/НПФЛ/СведФЛ1/УдЛичн/ВыдДок'   , 1, 255, 'Свед. о док. удостов. личность: Кем выдан'              )

        #_IsValid(IsValidDate, 'Файл/Документ/СвНП/НПФЛ/СведФЛ1/УдЛичн/ДатаДок', 'Дата выдачи')
      }

      if GetFldVis('Файл/Документ/СвНП/НПФЛ/СведФЛ1/АдрМЖРФ')
      {
        #_IsValid_Vis(IsValidIndex, 'Файл/Документ/СвНП/НПФЛ/СведФЛ1/АдрМЖРФ/Индекс'   , 'Адрес места жит. в РФ: Почтовый индекс')
        #_IsValid    (IsValidSSRF , 'Файл/Документ/СвНП/НПФЛ/СведФЛ1/АдрМЖРФ/КодРегион', 'Адрес места жит. в РФ: Код региона'    )

        #_IsValid_Str_Vis('Файл/Документ/СвНП/НПФЛ/СведФЛ1/АдрМЖРФ/Район'     , 1, 50, 'Адрес места жит. в РФ: Район'           )
        #_IsValid_Str_Vis('Файл/Документ/СвНП/НПФЛ/СведФЛ1/АдрМЖРФ/Город'     , 1, 50, 'Адрес места жит. в РФ: Город'           )
        #_IsValid_Str_Vis('Файл/Документ/СвНП/НПФЛ/СведФЛ1/АдрМЖРФ/НаселПункт', 1, 50, 'Адрес места жит. в РФ: Населённый пункт')
        #_IsValid_Str_Vis('Файл/Документ/СвНП/НПФЛ/СведФЛ1/АдрМЖРФ/Улица'     , 1, 50, 'Адрес места жит. в РФ: Улица'           )
        #_IsValid_Str_Vis('Файл/Документ/СвНП/НПФЛ/СведФЛ1/АдрМЖРФ/Дом'       , 1,  8, 'Адрес места жит. в РФ: Дом'             )
        #_IsValid_Str_Vis('Файл/Документ/СвНП/НПФЛ/СведФЛ1/АдрМЖРФ/Корпус'    , 1,  8, 'Адрес места жит. в РФ: Корпус'          )
        #_IsValid_Str_Vis('Файл/Документ/СвНП/НПФЛ/СведФЛ1/АдрМЖРФ/Кварт'     , 1,  8, 'Адрес места жит. в РФ: Кварт'           )
      }
    }
    //#endregion СВЕДЕНИЯ О ФЛ (ИНН)

    //#region СВЕДЕНИЯ О ФЛ
    if GetFldVis('Файл/Документ/СвНП/НПФЛ/СведФЛ2')
    {
      #_IsValid(IsValidDate    , 'Файл/Документ/СвНП/НПФЛ/СведФЛ2/ДатаРожд', 'Дата рождения'           )
      #_IsValid(IsValidOKSM    , 'Файл/Документ/СвНП/НПФЛ/СведФЛ2/ОКСМ'    , 'Код страны гражданства'  )
      #_IsValid(IsValidStatusNP, 'Файл/Документ/СвНП/НПФЛ/СведФЛ2/СтатусНП', 'Статус налогоплательщика')

      #_IsValid_Str('Файл/Документ/СвНП/НПФЛ/СведФЛ2/УдЛичн/КодВидДок', 2,   2, 'Свед. о док. удостов. личность: Код вида документа'     )
      #_IsValid_Str('Файл/Документ/СвНП/НПФЛ/СведФЛ2/УдЛичн/СерНомДок', 1,  25, 'Свед. о док. удостов. личность: Серия и номер документа')
      #_IsValid_Str('Файл/Документ/СвНП/НПФЛ/СведФЛ2/УдЛичн/ВыдДок'   , 1, 255, 'Свед. о док. удостов. личность: Кем выдан'              )

      #_IsValid(IsValidDate, 'Файл/Документ/СвНП/НПФЛ/СведФЛ2/УдЛичн/ДатаДок', 'Дата выдачи')

      #_IsValid_Vis(IsValidIndex, 'Файл/Документ/СвНП/НПФЛ/СведФЛ2/АдрМЖРФ/Индекс'   , 'Адрес места жит. в РФ: Почтовый индекс')
      #_IsValid    (IsValidSSRF , 'Файл/Документ/СвНП/НПФЛ/СведФЛ2/АдрМЖРФ/КодРегион', 'Адрес места жит. в РФ: Код региона'    )

      #_IsValid_Str_Vis('Файл/Документ/СвНП/НПФЛ/СведФЛ2/АдрМЖРФ/Район'     , 1, 50, 'Адрес места жит. в РФ: Район'           )
      #_IsValid_Str_Vis('Файл/Документ/СвНП/НПФЛ/СведФЛ2/АдрМЖРФ/Город'     , 1, 50, 'Адрес места жит. в РФ: Город'           )
      #_IsValid_Str_Vis('Файл/Документ/СвНП/НПФЛ/СведФЛ2/АдрМЖРФ/НаселПункт', 1, 50, 'Адрес места жит. в РФ: Населённый пункт')
      #_IsValid_Str_Vis('Файл/Документ/СвНП/НПФЛ/СведФЛ2/АдрМЖРФ/Улица'     , 1, 50, 'Адрес места жит. в РФ: Улица'           )
      #_IsValid_Str_Vis('Файл/Документ/СвНП/НПФЛ/СведФЛ2/АдрМЖРФ/Дом'       , 1,  8, 'Адрес места жит. в РФ: Дом'             )
      #_IsValid_Str_Vis('Файл/Документ/СвНП/НПФЛ/СведФЛ2/АдрМЖРФ/Корпус'    , 1,  8, 'Адрес места жит. в РФ: Корпус'          )
      #_IsValid_Str_Vis('Файл/Документ/СвНП/НПФЛ/СведФЛ2/АдрМЖРФ/Кварт'     , 1,  8, 'Адрес места жит. в РФ: Кварт'           )
    }
    //#endregion СВЕДЕНИЯ О ФЛ

    if     GetFldVis('Файл/Документ/СвНП/НПФЛ/СведФЛ1')
       and GetFldVis('Файл/Документ/СвНП/НПФЛ/СведФЛ2')
    then MesErrStop('Файл/Документ/СвНП/НПФЛ/СведФЛ1', 'Декларация', 'Должна быть заполнена страница с информацией о ФЛ с ИНН или без него. Сейчас заполнены оба варианта');
  }

  if     GetFldVis('Файл/Документ/СвНП/НПЮЛ')
     and GetFldVis('Файл/Документ/СвНП/НПФЛ')
  then MesErrStop('Файл/Документ/СвНП/НПЮЛ', 'Декларация', 'Должна быть заполнена информация или о ЮЛ или о ФЛ. Сейчас заполнена информация и о ЮЛ и о ФЛ');

  #_IsValid(IsValidPrPodp , 'Файл/Документ/Подписант/ПрПодп' , 'Признак подписанта'      )

  if GetFldVis('Файл/Документ/Подписант/ФИО')
  {
    #_IsValid    (IsValidFIO, 'Файл/Документ/Подписант/ФИО/Фамилия' , 'Фамилия' )
    #_IsValid    (IsValidFIO, 'Файл/Документ/Подписант/ФИО/Имя'     , 'Имя'     )
    #_IsValid_Vis(IsValidFIO, 'Файл/Документ/Подписант/ФИО/Отчество', 'Отчество')
  }

  if GetFldVis('Файл/Документ/Подписант/СвПред')
  {
    #_IsValid    (IsValidNaimDok, 'Файл/Документ/Подписант/СвПред/НаимДок', 'Наименование документа'  )
    #_IsValid_Vis(IsValidNaimOrg, 'Файл/Документ/Подписант/СвПред/НаимОрг', 'Наименование организации')
  }
  //#endregion ТИТУЛЬНЫЙ ЛИСТ

  //#region РАЗДЕЛ 1
  flI := false;

  CountI := XMLMap.GetNodeCountByName('Файл/Документ/ВоднНалог/СумНалПУ');
  for (i := 0; i < CountI; i++)
  {
    XMLAdrI := 'Файл/Документ/ВоднНалог/СумНалПУ' + getIter(i);
    if (not GetFldVis(XMLAdrI)) continue;

    flI := true;

    #_IsValid(IsValidKBK, XMLAdrI + '/КБК', 'Стр. 010')

    CountJ := XMLMap.GetNodeCountByName(XMLAdrI + '/СумПУ');
    for (j := 0; j < CountJ; j++)
    {
      XMLAdrJ := XMLAdrI + '/СумПУ' + getIter(j);
      if (not GetFldVis(XMLAdrJ)) continue;

      #_IsValid    (IsValidOKTMO     , XMLAdrJ + '/ОКТМО', 'Стр. 020'                                                               , if(i=0, -1, 1), 10)
      #_IsValid_Dec('XXXXXXXXXXXXXXX', XMLAdrJ + '/НалПУ', 'Стр. 030 (' + LPadCh(String((j mod 10) + 1), '0', 2) + ')', 15, 0, False, if(i=0, -1, 1), 10)
    }
  }

  if (not flI)
  then MesErrStop('Файл/Документ/ВоднНалог/СумНалПУ/КБК', 'Раздел 1', 'Должен быть заполнен хотя-бы один раздел 1');
  //#endregion РАЗДЕЛ 1

  //#region РАЗДЕЛ 2
    //#region РАЗДЕЛ 2.1
    CountI := XMLMap.GetNodeCountByName('Файл/Документ/ВоднНалог/РасчНалБаза/РасчНБЗабВод');
    for (i := 0; i < CountI; i++)
    {
      XMLAdrI := 'Файл/Документ/ВоднНалог/РасчНалБаза/РасчНБЗабВод' + getIter(i);
      if (not GetFldVis(XMLAdrI)) continue;

      #_IsValid(IsValidKBK  , XMLAdrI + '/КБК'  , 'Стр. 010')
      #_IsValid(IsValidOKTMO, XMLAdrI + '/ОКТМО', 'Стр. 020')

      #_IsValid_Str(XMLAdrI + '/НаимВодОб'  , 1, 100, 'Стр. 030')
      #_IsValid_Str(XMLAdrI + '/ЛицВодПольз', 1,  14, 'Стр. 040')

      CountJ := XMLMap.GetNodeCountByName(XMLAdrI + '/РасчНБКод');
      for (j := 0; j < CountJ; j++)
      {
        XMLAdrJ := XMLAdrI + '/РасчНБКод' + getIter(j);
        if (not GetFldVis(XMLAdrJ)) continue;

        #_IsValid        (IsValidKodVodPolz, XMLAdrJ + '/КодВодПольз'   , 'Стр. 050'              )
        #_IsValid_Dec    ('XXXXXXXX.XXX'   , XMLAdrJ + '/ОбъемЗабрПер'  , 'Стр. 060',  8, 3, False)
        #_IsValid_Dec    ('XXXXXXXX.XXX'   , XMLAdrJ + '/ОбъемЗабрНеНал', 'Стр. 070',  8, 3, False)
        #_IsValid        (IsValidKodCZV    , XMLAdrJ + '/КодЦЗВ'        , 'Стр. 080'              )
        #_IsValid_Dec    ('XXXXXXXX.XXX'   , XMLAdrJ + '/ЛимитВодПол'   , 'Стр. 090',  8, 3, False)
        #_IsValid_Dec    ('XXXXXXXX.XXX'   , XMLAdrJ + '/ОбъемЗабрНал'  , 'Стр. 100',  8, 3, False)
        #_IsValid_Dec    ('XXXXXXXX.XXX'   , XMLAdrJ + '/ОбЗабрЛим'     , 'Стр. 101',  8, 3, False)
        #_IsValid_Dec    ('XXXXXXXX.XXX'   , XMLAdrJ + '/ОбЗабрСвЛим'   , 'Стр. 102',  8, 3, False)
        #_IsValid_Dec    ('XXX.XX'         , XMLAdrJ + '/НалСтавЛим'    , 'Стр. 110',  3, 2, False)
        #_IsValid_Dec    ('XXXX.XX'        , XMLAdrJ + '/НалСтавСвЛим'  , 'Стр. 120',  4, 2, False)
        #_IsValid_Dec_Vis('X.XX'           , XMLAdrJ + '/Коэф_п.1.1'    , 'Стр. 130',  1, 2, False)
        #_IsValid_Dec_Vis('X.X'            , XMLAdrJ + '/Коэф_п.4'      , 'Стр. 140',  1, 1, False)
        #_IsValid_Dec_Vis('XX'             , XMLAdrJ + '/Коэф_п.5'      , 'Стр. 150',  2, 0, False)
        #_IsValid_Dec    ('XXXXXXXXXXXXXXX', XMLAdrJ + '/ПодлУпл'       , 'Стр. 160', 15, 0, False)
      }
    } //#endregion РАЗДЕЛ 2.1

    //#region РАЗДЕЛ 2.2
    CountI := XMLMap.GetNodeCountByName('Файл/Документ/ВоднНалог/РасчНалБаза/РасчНБИсклЗабВод');
    for (i := 0; i < CountI; i++)
    {
      XMLAdrI := 'Файл/Документ/ВоднНалог/РасчНалБаза/РасчНБИсклЗабВод' + getIter(i);
      if (not GetFldVis(XMLAdrI)) continue;

      #_IsValid        (IsValidKBK       , XMLAdrI + '/КБК'                , 'Стр. 010'              )
      #_IsValid        (IsValidOKTMO     , XMLAdrI + '/ОКТМО'              , 'Стр. 020'              )
      #_IsValid_Str    (                   XMLAdrI + '/НаимВодОб'  , 1, 100, 'Стр. 030'              )
      #_IsValid_Str_Vis(                   XMLAdrI + '/ЛицВодПольз', 1,  14, 'Стр. 040'              )
      #_IsValid_Str_Vis(                   XMLAdrI + '/ДогВодПольз', 1,  80, 'Стр. 050'              )
      #_IsValid        (IsValidKodVodPolz, XMLAdrI + '/КодВодПольз'        , 'Стр. 060'              )
      #_IsValid_Dec_Vis('XXXXXX.XXX'     , XMLAdrI + '/ПлощВодПр'          , 'Стр. 070',  6, 3, False)
      #_IsValid_Dec_Vis('XXXXXXXXXX.XXX' , XMLAdrI + '/КолПроизвЭл'        , 'Стр. 080', 10, 3, False)
      #_IsValid_Dec_Vis('XXXXXXX.XXX'    , XMLAdrI + '/ОбъемДрев'          , 'Стр. 090',  7, 3, False)
      #_IsValid_Dec_Vis('XXXXXXX.XXX'    , XMLAdrI + '/РасстСплав'         , 'Стр. 100',  7, 3, False)
      #_IsValid_Dec    ('XXXXX.XX'       , XMLAdrI + '/НалСтав'            , 'Стр. 110',  5, 2, False)
      #_IsValid_Dec_Vis('X.XX'           , XMLAdrI + '/Коэф_п.1.1'         , 'Стр. 120',  1, 2, False)
      #_IsValid_Dec    ('XXXXXXXXXXXXXXX', XMLAdrI + '/ПодлУпл'            , 'Стр. 130', 15, 0, False)
    } //#endregion РАЗДЕЛ 2.2
  //#endregion РАЗДЕЛ 2
@end.
//#endregion ДЕЙСТВИЯ ВЫПОЛНЯЕМЫЕ ПРИ ПРОВЕРКЕ
//************************************************************************************************************


//============================================================================================================
//#region ДЕЙСТВИЯ ВЫПОЛНЯЕМЫЕ ПРИ РАСЧЕТЕ
//------------------------------------------------------------------------------------------------------------
@Script On_Recalc : boolean;
  //==========================================================================================================
  //#region СЕРВИС On_Recalc
  //----------------------------------------------------------------------------------------------------------
  procedure Log(_strAdr, _strMes, _strVal : string;_iMode : integer = 0; _iModeNum  : integer = 1);
  {
    MesError.InsertRasch('', _strAdr, _strMes, _strVal, _iMode, _iModeNum);
  }

  function GV(_strAdr : string) : string;
  {
    Result := GetStrValFormat(_strAdr);
  }

  procedure SV(_adr : string; var _val : double; _col : integer);
  {
    SetDblValRound(_adr, _val, _col);
    _val := GetDblVal(_adr);
  }
  //#endregion СЕРВИС On_Recalc
  //**********************************************************************************************************
@begin
  if ((GetStrVal('Файл/Документ/ДатаДок') = '') or (GetStrVal('Файл/Документ/ДатаДок') = 'ДД.ММ.ГГГГ'))
    SetFldVal('Файл/Документ/ДатаДок', DateToStr(Cur_Date, XMLMap.GetAttrVFormatByName('Файл/Документ/ДатаДок')));

  var Mes, Val : string;
  var CountI, CountJ, CountK, CountN, I, J, K, N : integer;
  var XMLAdrI, XMLAdrJ, XMLAdrK, XMLAdrN : string;

  //#region РАЗДЕЛ 2
  var r22v060
    , r21a060, r21a070, r21a100, r21a101, r21a102, r21a110, r21a120, r21a130, r21a140, r21a150, r21a160
    , r22a060, r22a070, r22a080, r22a090, r22a100, r22a110, r22a120, r22a130                            : string = '';
  var r21v060, r21v070, r21v100, r21v101, r21v102, r21v110, r21v120, r21v130, r21v140, r21v150, r21v160
    , r22v070, r22v080, r22v090, r22v100, r22v110, r22v120, r22v130                                     : double = 0 ;

  //#region РАЗДЕЛ 2.1
  CountI := XMLMap.GetNodeCountByName('Файл/Документ/ВоднНалог/РасчНалБаза/РасчНБЗабВод');
  for (i := 0; i < CountI; i++)
  {
    XMLAdrI := 'Файл/Документ/ВоднНалог/РасчНалБаза/РасчНБЗабВод' + getIter(i);

    CountJ := XMLMap.GetNodeCountByName(XMLAdrI + '/РасчНБКод');
    for (j := 0; j < CountJ; j++)
    {
      XMLAdrJ := XMLAdrI + '/РасчНБКод' + getIter(j);

      r21a060 := XMLAdrJ + '/ОбъемЗабрПер'  ;
      r21a070 := XMLAdrJ + '/ОбъемЗабрНеНал';   r21v070 := GetDblVal(r21a070);
      r21a100 := XMLAdrJ + '/ОбъемЗабрНал'  ;
      r21a101 := XMLAdrJ + '/ОбЗабрЛим'     ;   r21v101 := GetDblVal(r21a101);
      r21a102 := XMLAdrJ + '/ОбЗабрСвЛим'   ;   r21v102 := GetDblVal(r21a102);
      r21a110 := XMLAdrJ + '/НалСтавЛим'    ;   r21v110 := GetDblVal(r21a110);
      r21a120 := XMLAdrJ + '/НалСтавСвЛим'  ;   r21v120 := GetDblVal(r21a120);
      r21a130 := XMLAdrJ + '/Коэф_п.1.1'    ;   r21v130 := if (NullStr(r21a130), 1, GetDblVal(r21a130));
      r21a140 := XMLAdrJ + '/Коэф_п.4'      ;   r21v140 := if (NullStr(r21a140), 1, GetDblVal(r21a140));
      r21a150 := XMLAdrJ + '/Коэф_п.5'      ;   r21v150 := if (NullStr(r21a150), 1, GetDblVal(r21a150));
      r21a160 := XMLAdrJ + '/ПодлУпл'       ;

      r21v100 := r21v101 + r21v102;                                                                                                     SV(r21a100, r21v100, 3);
      r21v060 := r21v070 + r21v100;                                                                                                     SV(r21a060, r21v060, 3);
      r21v160 := (r21v101 * Round(r21v110 * r21v130 * r21v140 * r21v150)) + (r21v102 * Round(r21v120 * r21v130 * r21v140 * r21v150));   SV(r21a160, r21v160, 0);

      Log(r21a100, 'Стр. 100 = стр. 101 + стр. 102', GV(r21a100)+' = '+GV(r21a101)+' + '+GV(r21a102));
      Log(r21a060, 'Стр. 060 = стр. 070 + стр. 100', GV(r21a060)+' = '+GV(r21a070)+' + '+GV(r21a100));

      Log(r21a160, 'Стр. 160 = (стр. 101 * ОКР(стр. 110 * стр. 130 * стр. 140 * стр. 150)) + (стр. 102 * ОКР(стр. 120 * стр. 130 * стр. 140 * стр. 150))'
                 , GV(r21a160)+' = ('+GV(r21a101)+' * ОКР('+GV(r21a110)+' * '+GV(r21a130)+' * '+GV(r21a140)+' * '+GV(r21a150)+'))'
                              +' + ('+GV(r21a102)+' * ОКР('+GV(r21a120)+' * '+GV(r21a130)+' * '+GV(r21a140)+' * '+GV(r21a150)+'))');
    }
  } //#endregion РАЗДЕЛ 2.1

  //#region РАЗДЕЛ 2.2
  CountI := XMLMap.GetNodeCountByName('Файл/Документ/ВоднНалог/РасчНалБаза/РасчНБИсклЗабВод');
  for (i := 0; i < CountI; i++)
  {
    XMLAdrI := 'Файл/Документ/ВоднНалог/РасчНалБаза/РасчНБИсклЗабВод' + getIter(i);

    r22a060 := XMLAdrI + '/КодВодПольз';   r22v060 := GetStrVal(r22a060);
    r22a070 := XMLAdrI + '/ПлощВодПр'  ;   r22v070 := GetDblVal(r22a070);
    r22a080 := XMLAdrI + '/КолПроизвЭл';   r22v080 := GetDblVal(r22a080);
    r22a090 := XMLAdrI + '/ОбъемДрев'  ;   r22v090 := GetDblVal(r22a090);
    r22a100 := XMLAdrI + '/РасстСплав' ;   r22v100 := GetDblVal(r22a100);
    r22a110 := XMLAdrI + '/НалСтав'    ;   r22v110 := GetDblVal(r22a110);
    r22a120 := XMLAdrI + '/Коэф_п.1.1' ;   r22v120 := if (NullStr(r22a120), 1, GetDblVal(r22a120));
    r22a130 := XMLAdrI + '/ПодлУпл'    ;   r22v130 := 0;

    Mes := 'Рассчет возможен только при значении стр. 060 от 21010 до 41200'; Val := '0';

    if (IF_21010_22140(r22v060))
    {
      r22v130 := r22v070 * Round(r22v110 * r22v120) / 4;
      Mes := 'Стр. 130 = стр. 070 * ОКР(стр. 110 * стр. 120) / 4';
      Val := GV(r22a070) +' * ОКР('+GV(r22a110)+' * '+GV(r22a120)+') / 4';
    }

    if (IF_30100_32100(r22v060))
    {
      r22v130 := r22v080 * Round(r22v110 * r22v120);
      Mes := 'Стр. 130 = стр. 080 * ОКР(стр. 110 * стр. 120)';
      Val := GV(r22a080) +' * ОКР('+GV(r22a110)+' * '+GV(r22a120)+')';
    }

    if (IF_40100_41200(r22v060))
    {
      r22v130 := r22v090 * r22v100 * Round(r22v110 * r22v120) / 100;
      Mes := 'Стр. 130 = стр. 090 * стр. 100 * ОКР(стр. 110 * стр. 120) / 100';
      Val := GV(r22a090)+' * '+GV(r22a100)+' * ОКР('+GV(r22a110)+' * '+GV(r22a120)+') / 100';
    }

    SV(r22a130, r22v130, 0);   Log(r22a130, Mes, GV(r22a130)+' = '+Val);
  } //#endregion РАЗДЕЛ 2.2
  //#endregion РАЗДЕЛ 2

  On_Visable;

  //#region РАЗДЕЛ 1
  pFH.Func('CalcRazdel1');

  // Расчет на основании введенных КБК и ОКТМО в разделе 1
  /*
  var r1a010, r1a020, r1a030
    , r1v010, r1v020
    , mesR21, mesR22         : string ;
  var r1v030                 : double ;
  var fl                     : boolean;

  CountI := XMLMap.GetNodeCountByName('Файл/Документ/ВоднНалог/СумНалПУ');
  for (i := 0; i < CountI; i++)
  {
    XMLAdrI := 'Файл/Документ/ВоднНалог/СумНалПУ' + getIter(i);

    r1a010 := XMLAdrI + '/КБК';   if NullStr(r1a010) continue;   r1v010 := GetStrVal(r1a010);

    CountJ := XMLMap.GetNodeCountByName(XMLAdrI + '/СумПУ');
    for (j := 0; j < CountJ; j++)
    {
      XMLAdrJ := XMLAdrI + '/СумПУ' + getIter(j);

      r1a020 := XMLAdrJ + '/ОКТМО';   if NullStr(r1a020) continue;   r1v020 := GetStrVal(r1a020);
      r1a030 := XMLAdrJ + '/НалПУ';                                  r1v030 := 0;

      mesR21 := mesR22 := '';
      fl := False;

      //#region РАЗДЕЛ 2.1
      CountK := XMLMap.GetNodeCountByName('Файл/Документ/ВоднНалог/РасчНалБаза/РасчНБЗабВод');
      for (k := 0; k < CountK; k++)
      {
        XMLAdrK := 'Файл/Документ/ВоднНалог/РасчНалБаза/РасчНБЗабВод' + getIter(k);
        if (not GetFldVis(XMLAdrK)) continue;

        if    (r1v010 <> GetStrVal(XMLAdrK + '/КБК'  ))
           or (r1v020 <> GetStrVal(XMLAdrK + '/ОКТМО'))
        then continue;

        CountN := XMLMap.GetNodeCountByName(XMLAdrK + '/РасчНБКод');
        for (n := 0; n < CountN; n++)
        {
          XMLAdrN := XMLAdrK + '/РасчНБКод' + getIter(n);
          if (not GetFldVis(XMLAdrN)) continue;

          fl := True;

          r1v030 += GetDblVal (XMLAdrN + '/ПодлУпл');
          mesR21 += ' + ' + GV(XMLAdrN + '/ПодлУпл');
        }
      } //#endregion РАЗДЕЛ 2.1

      //#region РАЗДЕЛ 2.2
      CountK := XMLMap.GetNodeCountByName('Файл/Документ/ВоднНалог/РасчНалБаза/РасчНБИсклЗабВод');
      for (k := 0; k < CountK; k++)
      {
        XMLAdrK := 'Файл/Документ/ВоднНалог/РасчНалБаза/РасчНБИсклЗабВод' + getIter(k);
        if (not GetFldVis(XMLAdrK)) continue;

        if    (r1v010 <> GetStrVal(XMLAdrK + '/КБК'  ))
           or (r1v020 <> GetStrVal(XMLAdrK + '/ОКТМО'))
        then continue;

        fl := True;

        r1v030 += GetDblVal (XMLAdrK + '/ПодлУпл');
        mesR22 += ' + ' + GV(XMLAdrK + '/ПодлУпл');
      } //#endregion РАЗДЕЛ 2.2

      if fl
      {
        mesR21 := SubStr(mesR21, 4, Length(mesR21) - 3);   if (mesR21 = '') mesR21 := '0';
        mesR22 := SubStr(mesR22, 4, Length(mesR22) - 3);   if (mesR22 = '') mesR22 := '0';

        SV(r1a030, r1v030, 0);

        Log(r1a030
          , 'Стр. 030 (' + LPadCh(String((j mod 10) + 1), '0', 2) + ') = сумме стр. 160 Р.2.1 и стр. 130 Р.2.2 (с соответствующими КБК и кодом по ОКТМО)'
          , GV(r1a030)+' = ('+mesR21+') + ('+mesR22+')'
          , if (i = 0, -1, 1)
          , 10
        );
      } else {
        SetNull(r1a030);

        Log(r1a030
          , 'Стр. 030 (' + LPadCh(String((j mod 10) + 1), '0', 2) + ') = сумме стр. 160 Р.2.1 и стр. 130 Р.2.2 (с соответствующими КБК и кодом по ОКТМО)'
          , 'Не рассчитано, т.к. отсутствуют разделы 2.1 и 2.2 с соответствующими КБК и ОКТМО'
          , if (i = 0, -1, 1)
          , 10
        );
      }
    }
  }
  */
  //#endregion РАЗДЕЛ 1
@end.
//#endregion ДЕЙСТВИЯ ВЫПОЛНЯЕМЫЕ ПРИ РАСЧЕТЕ
//************************************************************************************************************


//============================================================================================================
//#region ДЕЙСТВИЯ ВЫПОЛНЯЕМЫЕ ПРИ ПРОВЕРКЕ КОНТРОЛЬНЫХ СООТНОШЕНИЙ
//------------------------------------------------------------------------------------------------------------
@Script On_CheckKS : boolean;
  //==========================================================================================================
  //#region СЕРВИС
  //----------------------------------------------------------------------------------------------------------
  //#region DECLARE
  #undef SGd
  #declare SGd(_Name, _Adr)
    a#_Name := #_Adr;
    d#_Name := GetDblVal(a#_Name);
  #end

  //----------------------------------------------------------------------------------------------------------
  #undef SGs
  #declare SGs(_Name, _Adr)
    a#_Name := #_Adr;
    s#_Name := GetStrVal(a#_Name);
  #end

  //----------------------------------------------------------------------------------------------------------
  #undef SGa
  #declare SGa(_Name, _Adr)
    a#_Name := #_Adr;
  #end

  //----------------------------------------------------------------------------------------------------------
  #undef KS
  #declare KS(_if, _XMLAdr, _Field)
    if (not (#_if))
    { MesErrStop(#_XMLAdr, #_Field, getMes); }
  #end

  //----------------------------------------------------------------------------------------------------------
  #undef KSnull
  #declare KSnull(_XMLAdr, _Field)
    if (not NullStr(#_XMLAdr))
    { MesErrStop(#_XMLAdr, #_Field, getMes); }
  #end
  //#endregion DECLARE

  function GetMes_D (_dbl : double; _nStr, _str : string) : string;
  { Result := FormatStr_1(_str, ' !Ошибка возможна из-за окр. зн. стр. '+_nStr+' в формуле КС (рез.:'+DoubleToStr(_dbl, '[|-]3666666666666666')+')! '); }

  //#region Проверка усовий КС
  //----------------------------------------------------------------------------------------------------------
  // Проверка усовия для кодов, для КС 2.03
  function CheckForKS_2_03 (strAdr : string) : Boolean;
  {
    Result := False;

    var strIn : string;
    strIn := GetStrVal(strAdr);

    Result :=    CheckError.isRegExpr('^(11011|11012|11013|11014|11015|11021)$', strIn)
              or CheckError.isRegExpr('^(11022|11023|11024|11031|11032|11033)$', strIn)
              or CheckError.isRegExpr('^(11034|11035|11036|11041|11042|11043)$', strIn)
              or CheckError.isRegExpr('^(11051|11052|11053|11054|11061|11062)$', strIn)
              or CheckError.isRegExpr('^(11063|11071|11072|11073|11074|11075)$', strIn)
              or CheckError.isRegExpr('^(11076|11081|11082|11083|11084|11091)$', strIn)
              or CheckError.isRegExpr('^(11092|11101|11102|11103|11104|11105)$', strIn)
              or CheckError.isRegExpr('^(11106|11111|11112|11113|11120|11121)$', strIn)
              or CheckError.isRegExpr('^(11122|12011|12012|12013|12014|12015)$', strIn)
              or CheckError.isRegExpr('^(12021|12022|12023|12024|12031|12032)$', strIn)
              or CheckError.isRegExpr('^(12033|12034|12035|12036|12041|12042)$', strIn)
              or CheckError.isRegExpr('^(12043|12051|12052|12053|12054|12061)$', strIn)
              or CheckError.isRegExpr('^(12062|12063|12071|12072|12073|12074)$', strIn)
              or CheckError.isRegExpr('^(12075|12076|12081|12082|12083|12084)$', strIn)
              or CheckError.isRegExpr('^(12091|12092|12101|12102|12103|12104)$', strIn)
              or CheckError.isRegExpr('^(12105|12106|12111|12112|12113|12121)$', strIn)
              or CheckError.isRegExpr('^(12122|13010|13020|13030|13040|13050)$', strIn)
              or CheckError.isRegExpr('^(13060|13070|13080|13090|13100|13110)$', strIn)
              or CheckError.isRegExpr('^(13120|13130|13140|50091|50092)$'      , strIn);
  }

  //----------------------------------------------------------------------------------------------------------
  // Проверка усовия для кодов, для КС 2.13
  function CheckForKS_2_13 (strAdr : string) : Boolean;
  {
    Result := False;

    var strIn : string;
    strIn := GetStrVal(strAdr);

    Result :=    CheckError.isRegExpr('^(21010|21020|21030|21040|21050|21060)$', strIn)
              or CheckError.isRegExpr('^(21070|21080|21090|21100|21110|21120)$', strIn)
              or CheckError.isRegExpr('^(22010|22020|22030|22040|22050|22060)$', strIn)
              or CheckError.isRegExpr('^(22070|22080|22090|22100|22110|22120)$', strIn)
              or CheckError.isRegExpr('^(22130|22140|30100|30200|30300|30400)$', strIn)
              or CheckError.isRegExpr('^(30500|30600|30700|30800|30900|31000)$', strIn)
              or CheckError.isRegExpr('^(31100|31200|31300|31400|31500|31600)$', strIn)
              or CheckError.isRegExpr('^(31700|31800|31900|32000|32100|40100)$', strIn)
              or CheckError.isRegExpr('^(41200|50091|50092)$'                  , strIn);
  }

  //----------------------------------------------------------------------------------------------------------
  // Проверка усовия для кодов, для КС 2.14, 2.17 и 2.21
  function CheckForKS_2_14_17_21 (strAdr : string) : Boolean;
  {
    Result := False;

    var strIn : string;
    strIn := GetStrVal(strAdr);

    Result :=    CheckError.isRegExpr('^(21010|21020|21030|21040|21050|21060)$', strIn)
              or CheckError.isRegExpr('^(21070|21080|21090|21100|21110|21120)$', strIn)
              or CheckError.isRegExpr('^(22010|22020|22030|22040|22050|22060)$', strIn)
              or CheckError.isRegExpr('^(22070|22080|22090|22100|22110|22120)$', strIn)
              or CheckError.isRegExpr('^(22130|22140|50091|50092)$'            , strIn);
  }

  //----------------------------------------------------------------------------------------------------------
  // Проверка усовия для кодов, для КС 2.15, 2.18 и 2.22
  function CheckForKS_2_15_18_22 (strAdr : string) : Boolean;
  {
    Result := False;

    var strIn : string;
    strIn := GetStrVal(strAdr);

    Result :=    CheckError.isRegExpr('^(30100|30200|30300|30400|30500|30600)$', strIn)
              or CheckError.isRegExpr('^(30700|30800|30900|31000|31100|31200)$', strIn)
              or CheckError.isRegExpr('^(31300|31400|31500|31600|31700|31800)$', strIn)
              or CheckError.isRegExpr('^(31900|32000|32100|50091|50092)$'      , strIn);
  }

  //----------------------------------------------------------------------------------------------------------
  // Проверка усовия для кодов, для КС 2.16, 2.19, 2.20 и 2.23
  function CheckForKS_2_16_19_20_23 (strAdr : string) : Boolean;
  {
    Result := False;

    var strIn : string;
    strIn := GetStrVal(strAdr);

    Result :=    CheckError.isRegExpr('^(40100|40200|40300|40400|40500|40600)$', strIn)
              or CheckError.isRegExpr('^(40700|40800|40900|41000|41100|41200)$', strIn)
              or CheckError.isRegExpr('^(50091|50092)$'                        , strIn);
  }

  //----------------------------------------------------------------------------------------------------------
  // Проверка усовия для КС 2.06
  function CheckForKS_2_06 (strAdr : string) : Boolean;
  {
    Result := False;

    var strIn : string;
    strIn := GetStrVal(strAdr);

    Result := CheckError.isRegExpr('^(1|2|3)$', strIn);
  }

  //----------------------------------------------------------------------------------------------------------
  // Проверка усовия для КС 2.08
  function CheckForKS_2_08 (strAdr : string) : Boolean;
  {
    Result := False;

    var strIn : string;
    strIn := GetStrVal(strAdr);

    Result := ((Length(strIn) = 0) or (strIn = '1.1'));
  }

  //----------------------------------------------------------------------------------------------------------
  // Проверка усовия для КС 2.09
  function CheckForKS_2_09 (strAdr : string) : Boolean;
  {
    Result := False;

    var strIn : string;
    strIn := GetStrVal(strAdr);

    Result := ((Length(strIn) = 0) or (strIn = '10'));
  }
  //#endregion Проверка усовий КС
  //#endregion СЕРВИС
  //**********************************************************************************************************
@begin
  Result := False;

  var getMes
    , XMLAdrI, XMLAdrJ, XMLAdrK, XMLAdrN : string;
  var CountI, CountJ, CountK, CountN, i, j, k, n : longint;
  var fl1, fl2 : boolean;
  var Buf : Double;

  var aR1_010, aR1_020, aR21_010, aR21_020, aR22_010, aR22_020
    , sR1_010, sR1_020, sR21_010, sR21_020, sR22_010, sR22_020: string;

  // Раздел 1 #region
  CountI := XMLMap.GetNodeCountByName('Файл/Документ/ВоднНалог/СумНалПУ');
  for (i := 0; i < CountI; i++)
  {
    XMLAdrI := 'Файл/Документ/ВоднНалог/СумНалПУ' + getIter(i);
    if not GetFldVis(XMLAdrI) Continue;

    #SGs(R1_010, XMLAdrI + '/КБК')

    // КС 1.01 #region
    {
      fl1 := false;

      // Раздел 2.1
      CountK := XMLMap.GetNodeCountByName('Файл/Документ/ВоднНалог/РасчНалБаза/РасчНБЗабВод');
      for (k := 0; k < CountK; k++)
      {
        XMLAdrK := 'Файл/Документ/ВоднНалог/РасчНалБаза/РасчНБЗабВод' + getIter(k);
        if not GetFldVis(XMLAdrK) Continue;

        #SGs(R21_010, XMLAdrK + '/КБК')

        if (sR1_010 = sR21_010) fl1 := True;
      }

      // Раздел 2.2
      if (not fl1) {
        CountK := XMLMap.GetNodeCountByName('Файл/Документ/ВоднНалог/РасчНалБаза/РасчНБИсклЗабВод');
        for (k := 0; k < CountK; k++)
        {
          XMLAdrK := 'Файл/Документ/ВоднНалог/РасчНалБаза/РасчНБИсклЗабВод' + getIter(k);
          if not GetFldVis(XMLAdrK) Continue;

          #SGs(R22_010, XMLAdrK + '/КБК')

          if (sR1_010 = sR22_010) fl1 := True;
        }
      }

      // КС 1.01
      getMes := 'КС 1.01 :: Р. 1 ст. 010 = р. 2 пр. 2.1 ст. 010 или р. 1 ст. 010 = р. 2 пр. 2.2 ст. 010';
      #KS(fl1, aR1_010, 'Стр. 010')
    } //#endregion КС 1.01

    // КС 1.02 #region
    CountJ := XMLMap.GetNodeCountByName(XMLAdrI + '/СумПУ');
    for (j := 0; j < CountJ; j++)
    {
      XMLAdrJ := XMLAdrI + '/СумПУ' + getIter(j);
      if not GetFldVis(XMLAdrJ) Continue;

      #SGs(R1_020, XMLAdrJ + '/ОКТМО')

      fl1 := false;

      // Раздел 2.1
      CountK := XMLMap.GetNodeCountByName('Файл/Документ/ВоднНалог/РасчНалБаза/РасчНБЗабВод');
      for (k := 0; k < CountK; k++)
      {
        XMLAdrK := 'Файл/Документ/ВоднНалог/РасчНалБаза/РасчНБЗабВод' + getIter(k);
        if not GetFldVis(XMLAdrK) Continue;

        #SGs(R21_020, XMLAdrK + '/ОКТМО')

        if (sR1_020 = sR21_020) fl1 := True;
      }

      // Раздел 2.2
      if (not fl1) {
        CountK := XMLMap.GetNodeCountByName('Файл/Документ/ВоднНалог/РасчНалБаза/РасчНБИсклЗабВод');
        for (k := 0; k < CountK; k++)
        {
          XMLAdrK := 'Файл/Документ/ВоднНалог/РасчНалБаза/РасчНБИсклЗабВод' + getIter(k);
          if not GetFldVis(XMLAdrK) Continue;

          #SGs(R22_020, XMLAdrK + '/ОКТМО')

          if (sR1_020 = sR22_020) fl1 := True;
        }
      }

      // КС 1.02
      getMes := 'КС 1.02 :: Р. 1 ст. 020 = р. 2 пр. 2.1 ст. 020 или р. 1 ст. 020 = р. 2 пр. 2.2 ст. 020';
      #KS(fl1, aR1_020, 'Стр. 020')
    } //#endregion КС 1.02
  } //#endregion Раздел 1

  // Раздел 2.1 #region
  var aR21_050, aR21_060, aR21_070, aR21_080, aR21_100, aR21_101, aR21_102, aR21_110, aR21_120, aR21_130, aR21_140, aR21_150, aR21_160 : String;
  var           dR21_060, dR21_070,           dR21_100, dR21_101, dR21_102, dR21_110, dR21_120, dR21_130, dR21_140, dR21_150, dR21_160 : Double;

  CountI := XMLMap.GetNodeCountByName('Файл/Документ/ВоднНалог/РасчНалБаза/РасчНБЗабВод');
  for (i := 0; i < CountI; i++)
  {
    XMLAdrI := 'Файл/Документ/ВоднНалог/РасчНалБаза/РасчНБЗабВод' + getIter(i);
    if not GetFldVis(XMLAdrI) Continue;

    #SGs(R21_010, XMLAdrI + '/КБК'  )
    #SGs(R21_020, XMLAdrI + '/ОКТМО')

    //#region КС 2.01 и 2.02
    {
      fl1 := fl2 := false;

      // Раздел 1
      CountK := XMLMap.GetNodeCountByName('Файл/Документ/ВоднНалог/СумНалПУ');
      for (k := 0; k < CountK; k++)
      {
        XMLAdrK := 'Файл/Документ/ВоднНалог/СумНалПУ' + getIter(k);
        if not GetFldVis(XMLAdrK) Continue;

        #SGs(R1_010, XMLAdrK + '/КБК')

        if (sR1_010 = sR21_010) fl1 := True;

        CountN := XMLMap.GetNodeCountByName(XMLAdrK + '/СумПУ');
        for (n := 0; n < CountN; n++)
        {
          XMLAdrN := XMLAdrK + '/СумПУ' + getIter(n);
          if not GetFldVis(XMLAdrN) Continue;

          #SGs(R1_020, XMLAdrN + '/ОКТМО')

          if (sR1_020 = sR21_020) fl2 := True;
        }
      }

      // КС 2.01
      getMes := 'КС 2.01 :: Р. 2 пр. 2.1 ст. 010 = р. 1 ст. 010';
      #KS(fl1, aR21_010, 'Стр. 010')

      // КС 2.02
      getMes := 'КС 2.02 :: Р. 2 пр. 2.1 ст. 020 = р. 1 ст. 020';
      #KS(fl2, aR21_020, 'Стр. 020')
    }
    //#endregion КС 2.01 и 2.02

    CountJ := XMLMap.GetNodeCountByName(XMLAdrI + '/РасчНБКод');
    for (j := 0; j < CountJ; j++)
    {
      XMLAdrJ := XMLAdrI + '/РасчНБКод' + getIter(j);
      if not GetFldVis(XMLAdrJ) Continue;

      #SGa(R21_050, XMLAdrJ + '/КодВодПольз'   )
      #SGd(R21_060, XMLAdrJ + '/ОбъемЗабрПер'  )
      #SGd(R21_070, XMLAdrJ + '/ОбъемЗабрНеНал')
      #SGa(R21_080, XMLAdrJ + '/КодЦЗВ'        )
      #SGd(R21_100, XMLAdrJ + '/ОбъемЗабрНал'  )
      #SGd(R21_101, XMLAdrJ + '/ОбЗабрЛим'     )
      #SGd(R21_102, XMLAdrJ + '/ОбЗабрСвЛим'   )
      #SGd(R21_110, XMLAdrJ + '/НалСтавЛим'    )
      #SGd(R21_120, XMLAdrJ + '/НалСтавСвЛим'  )
      #SGd(R21_160, XMLAdrJ + '/ПодлУпл'       )

      aR21_130 := XMLAdrJ + '/Коэф_п.1.1';   dR21_130 := if (NullStr(aR21_130), 1, GetDblVal(aR21_130));
      aR21_140 := XMLAdrJ + '/Коэф_п.4'  ;   dR21_140 := if (NullStr(aR21_140), 1, GetDblVal(aR21_140));
      aR21_150 := XMLAdrJ + '/Коэф_п.5'  ;   dR21_150 := if (NullStr(aR21_150), 1, GetDblVal(aR21_150));

      // КС 2.03
      getMes := 'КС 2.03 :: Р. 2 пр. 2.1 ст. 050 = 11011-11015 или 11021-11024 или 11031-11036 или 11041-11043 или 11051-11054 или 11061-11063 или 11071-11076 или 11081-11084 или 11091-11092 или...';
      #KS(CheckForKS_2_03(aR21_050), aR21_050, 'Стр. 050')

      // КС 2.04
      getMes := 'КС 2.04 :: Р. 2 пр. 2.1 ст. 060 => р. 2 пр. 2.1 ст. 070 или р. 2 пр. 2.1 ст. 060 => р. 2 пр. 2.1 ст. 100';
      #KS(((dR21_060 >= dR21_070) and (dR21_060 >= dR21_100)), aR21_060, 'Стр. 060')

      // КС 2.05
      getMes := 'КС 2.05 :: Р. 2 пр. 2.1 ст. 060 = р. 2 пр. 2.1 ст. 070 + р. 2 пр. 2.1 ст. 100';
      #KS(dR21_060 = dR21_070 + dR21_100, aR21_060, 'Стр. 060')

      // КС 2.06
      getMes := 'КС 2.06 :: Р. 2 пр. 2.1 ст. 080 = 1-3';
      #KS(CheckForKS_2_06(aR21_080), aR21_080, 'Стр. 080')

      // КС 2.07
      getMes := 'КС 2.07 :: Р. 2 пр. 2.1 ст. 100 = р. 2 пр. 2.1 ст. 101 + р. 2 пр. 2.1 ст. 102';
      #KS(dR21_100 = dR21_101 + dR21_102, aR21_100, 'Стр. 100')

      // КС 2.08
      getMes := 'КС 2.08 :: Р. 2 пр. 2.1 ст. 140 = "-" или "1.1"';
      #KS(CheckForKS_2_08(aR21_140), aR21_140, 'Стр. 140')

      // КС 2.09
      getMes := 'КС 2.09 :: Р. 2 пр. 2.1 ст. 150 = "-" или "10"';
      #KS(CheckForKS_2_09(aR21_150), aR21_150, 'Стр. 150')

      // КС 2.10
      Buf := Round(dR21_101 * Round(dR21_110) * dR21_130 * dR21_140 * dR21_150 + dR21_102 * Round(dR21_120) * dR21_130 * dR21_140 * dR21_150);
      getMes := GetMes_D(Buf, '110 и 120', 'КС 2.10 ::%SР. 2 пр. 2.1 ст. 160 = р. 2 пр. 2.1 (ст. 101 * окр. зн. ст. 110 * ст. 130 * ст. 140 * стр. 150 + ст. 102 * окр. зн. ст. 120 * ст. 130 * ст. 140 * ст. 150)');
      #KS(dR21_160 = Buf, aR21_160, 'Стр. 160')
    }
  } //#endregion Раздел 2.1

  // Раздел 2.2 #region
  var aR22_060, aR22_070, aR22_080, aR22_090, aR22_100, aR22_110, aR22_120, aR22_130 : String;
  var           dR22_070, dR22_080, dR22_090, dR22_100, dR22_110, dR22_120, dR22_130 : Double;

  CountI := XMLMap.GetNodeCountByName('Файл/Документ/ВоднНалог/РасчНалБаза/РасчНБИсклЗабВод');
  for (i := 0; i < CountI; i++)
  {
    XMLAdrI := 'Файл/Документ/ВоднНалог/РасчНалБаза/РасчНБИсклЗабВод' + getIter(i);
    if not GetFldVis(XMLAdrI) Continue;

    #SGs(R22_010, XMLAdrI + '/КБК'        )
    #SGs(R22_020, XMLAdrI + '/ОКТМО'      )
    #SGa(R22_060, XMLAdrI + '/КодВодПольз')
    #SGd(R22_070, XMLAdrI + '/ПлощВодПр'  )
    #SGd(R22_080, XMLAdrI + '/КолПроизвЭл')
    #SGd(R22_090, XMLAdrI + '/ОбъемДрев'  )
    #SGd(R22_100, XMLAdrI + '/РасстСплав' )
    #SGd(R22_110, XMLAdrI + '/НалСтав'    )
    #SGd(R22_130, XMLAdrI + '/ПодлУпл'    )

    aR22_120 := XMLAdrI + '/Коэф_п.1.1';   dR22_120 := if (NullStr(aR22_120), 1, GetDblVal(aR22_120));

    //#region КС 2.11 и 2.12
    {
      fl1 := fl2 := false;

      // Раздел 1
      CountK := XMLMap.GetNodeCountByName('Файл/Документ/ВоднНалог/СумНалПУ');
      for (k := 0; k < CountK; k++)
      {
        XMLAdrK := 'Файл/Документ/ВоднНалог/СумНалПУ' + getIter(k);
        if not GetFldVis(XMLAdrK) Continue;

        #SGs(R1_010, XMLAdrK + '/КБК')

        if (sR1_010 = sR22_010) fl1 := True;

        CountN := XMLMap.GetNodeCountByName(XMLAdrK + '/СумПУ');
        for (n := 0; n < CountN; n++)
        {
          XMLAdrN := XMLAdrK + '/СумПУ' + getIter(n);
          if not GetFldVis(XMLAdrN) Continue;

          #SGs(R1_020, XMLAdrN + '/ОКТМО')

          if (sR1_020 = sR22_020) fl2 := True;
        }
      }

      // КС 2.11
      getMes := 'КС 2.11 :: Р. 2 пр. 2.2 ст. 010 = р. 1 ст. 010';
      #KS(fl1, aR22_010, 'Стр. 010')

      // КС 2.12
      getMes := 'КС 2.12 :: Р. 2 пр. 2.2 ст. 020 = р. 1 ст. 020';
      #KS(fl2, aR22_020, 'Стр. 020')
    }
    //#endregion КС 2.11 и 2.12

    // КС 2.13
    getMes := 'КС 2.13 :: Р. 2 пр. 2.2 ст. 060 = 21010-21120 или 22010-22140 или 30100-32100 или 40100 или 41200 или 50091-50092';
    #KS(CheckForKS_2_13(aR22_060), aR22_060, 'Стр. 060')

    // КС 2.14, 2.17 и 2.21 #region
    if (CheckForKS_2_14_17_21(aR22_060))
    {
      // КС 2.14
      getMes := 'КС 2.14 :: Если р. 2 пр. 2.2 ст. 060 = 21010-22140 или 50091-50092, то р. 2 пр. 2.2 ст. 080 - 100 = -';
      #KSnull(aR22_080, 'Стр. 080')
      #KSnull(aR22_090, 'Стр. 090')
      #KSnull(aR22_100, 'Стр. 100')

      // КС 2.17
      getMes := 'КС 2.17 :: Если р. 2 пр. 2.2 ст. 060 = 21010-22140 или 50091-50092, то р. 2 пр. 2.2 ст. 070 => 0';
      #KS((dR22_070 >= 0) and not NullStr(aR22_070), aR22_070, 'Стр. 070')

      // КС 2.21
      Buf := Round((dR22_070 * Round(dR22_110) * dR22_120) / 4);
      getMes := GetMes_D(Buf, '110', 'КС 2.21 ::%SЕсли р. 2 пр. 2.2 ст. 060 = 21010-22140 или 50091-50092, то р. 2 пр. 2.2 ст. 130 = р. 2 пр. 2.2 (ст. 070 * окр. зн. ст. 110 * ст. 120) / 4');
      #KS(dR22_130 = Buf, aR22_130, 'Стр. 130')
    } //#endregion КС 2.14, 2.17 и 2.21

    // КС 2.15, 2.18 и 2.22 #region
    if (CheckForKS_2_15_18_22(aR22_060))
    {
      // КС 2.15
      getMes := 'КС 2.15 :: Если р. 2 пр. 2.2 ст. 060 = 30100-32100 или 50091-50092, то р. 2 пр. 2.2 ст. 070 и ст. 090 - 100 = -';
      #KSnull(aR22_070, 'Стр. 070')
      #KSnull(aR22_090, 'Стр. 090')
      #KSnull(aR22_100, 'Стр. 100')

      // КС 2.18
      getMes := 'КС 2.18 :: Если р. 2 пр. 2.2 ст. 060 = 30100-32100 или 50091-50092, то р. 2 пр. 2.2 ст. 080 => 0';
      #KS((dR22_080 >= 0) and not NullStr(aR22_080), aR22_080, 'Стр. 080')

      // КС 2.22
      Buf := Round(dR22_080 * Round(dR22_110) * dR22_120);
      getMes := GetMes_D(Buf, '110', 'КС 2.22 ::%SЕсли р. 2 пр. 2.2 ст. 060 = 30100-32100 или 50091-50092, то р. 2 пр. 2.2 ст. 130 = р. 2 пр. 2.2 (ст. 080 * окр. зн. ст. 110 * ст. 120)');
      #KS(dR22_130 = Buf, aR22_130, 'Стр. 130')
    } //#endregion КС 2.15, 2.18 и 2.22

    // КС 2.16, 2.19, 2.20 и 2.23 #region
    if (CheckForKS_2_16_19_20_23(aR22_060))
    {
      // КС 2.16
      getMes := 'КС 2.16 :: Если р. 2 пр. 2.2 ст. 060 = 40100-41200 или 50091-50092, то р. 2 пр. 2.2 ст. 070 - 080 = -';
      #KSnull(aR22_070, 'Стр. 070')
      #KSnull(aR22_080, 'Стр. 080')

      // КС 2.19
      getMes := 'КС 2.19 :: Если р. 2 пр. 2.2 ст. 060 = 40100-41200 или 50091-50092, то р. 2 пр. 2.2 ст. 090 => 0';
      #KS((dR22_090 >= 0) and not NullStr(aR22_090), aR22_090, 'Стр. 090')

      // КС 2.20
      getMes := 'КС 2.20 :: Если р. 2 пр. 2.2 ст. 060 = 40100-41200 или 50091-50092, то р. 2 пр. 2.2 ст. 100 => 0';
      #KS((dR22_100 >= 0) and not NullStr(aR22_100), aR22_100, 'Стр. 100')

      // КС 2.23
      Buf := Round((dR22_090 * dR22_100 * Round(dR22_110) * dR22_120) / 100);
      getMes := GetMes_D(Buf, '110', 'КС 2.23 ::%SЕсли р. 2 пр. 2.2 ст. 060 = 40100-41200 или 50091-50092, то р. 2 пр. 2.2 ст. 130 = р. 2 пр. 2.2 (ст. 090 * ст. 100 * окр. зн. ст. 110 * ст. 120) / 100');
      #KS(dR22_130 = Buf, aR22_130, 'Стр. 130')
    } //#endregion КС 2.16, 2.19, 2.20 и 2.23
  } //#endregion Раздел 2.2

  Result := True;
@end. // On_CheckKS
//#endregion ДЕЙСТВИЯ ВЫПОЛНЯЕМЫЕ ПРИ ПРОВЕРКЕ КОНТРОЛЬНЫХ СООТНОШЕНИЙ
//************************************************************************************************************


//============================================================================================================
//#region ДЕЙСТВИЯ ВЫПОЛНЯЕМЫЕ ПРИ ЭКСПОРТЕ В XML
//------------------------------------------------------------------------------------------------------------
@Script On_ExportXML : boolean;
@begin
  SetFldVal('Файл/ИдФайл', Replace(_IdFail_, '.xml', ''));

  if (not XMLMap.ExpToXml(_XmlFileName_)) {
    Message('On_ExportXML: '+ XMLMap.GetStLastError, cancelButton+Warning);
    Exit;
  }

  message('Выгружен в файл ' + _XmlFileName_);
@end.
//#endregion ДЕЙСТВИЯ ВЫПОЛНЯЕМЫЕ ПРИ ЭКСПОРТЕ В XML
//************************************************************************************************************
