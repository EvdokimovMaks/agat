//------------------------------------------------------------------------------------------------------------
//                                                                                    (c) корпорация Галактика
// Галактика 9.1 - модуль "Электронная отчетность"
// Интерфейс редактирования : "Декларация по акцизам на этиловый спирт (1151090)"
//------------------------------------------------------------------------------------------------------------


//============================================================================================================
// #region СЕРВИСНЫЕ МЕТОДЫ
//------------------------------------------------------------------------------------------------------------
@Script GetStrVal(fld:string):string;
@begin
  Result := Trim(String(XMLMAP.GetAttrValueByName(fld)));
@end.

//------------------------------------------------------------------------------------------------------------
@Script GV(fld:string):string;
@begin
  var bufRes: string;

  bufRes := Trim(String(XMLMAP.GetAttrValueByName(fld)));

  if (bufRes = '')
  then Result := '0'
  else if (Double(bufRes) < 0)
       then Result := '('+bufRes+')'
       else Result := bufRes;
@end.

//------------------------------------------------------------------------------------------------------------
@Script GetDblVal(fld:string):double;
@begin
  Result := Double(XMLMAP.GetAttrValueByName(fld));
@end.

//------------------------------------------------------------------------------------------------------------
@Script GetFldVis(fld:string):boolean;
@begin
  Result := False;
  Result := XMLMAP.GetAttrVisByName(fld);
@end.

//------------------------------------------------------------------------------------------------------------
@Script GetFldVisInTree(fld:string):boolean;
@begin
  Result := XMLMAP.GetAttrVisByNameInTree(fld);
@end.

//------------------------------------------------------------------------------------------------------------
@Script GetPatVal(expr:string):double;
#include AllTaxObj.Vih
@begin
  Result := Double(ПАТ(expr));
@end.

//------------------------------------------------------------------------------------------------------------
@Script SetDblVal(fld:string;val:double);
@begin
  XMLMAP.SetVariantAttrValueByName_Formula(fld, val, 2);
@end.

//------------------------------------------------------------------------------------------------------------
@Script SetFldVal(fld:string; val:string);
@begin
  XMLMAP.SetVariantAttrValueByName_Formula(fld, string(val), 2);
@end.

//------------------------------------------------------------------------------------------------------------
@Script SetNulVal(fld:string);
@begin
  XMLMAP.SetIsNullAttrValueByName(fld, 2);
@end.

//------------------------------------------------------------------------------------------------------------
@Script SetFldVis(fld:string;vis:boolean);
@begin
  XMLMAP.SetAttrVisByName(fld,vis);
@end.

//------------------------------------------------------------------------------------------------------------
@Script MesErrStop(mesMesAdrXML, mesPole, mesMes: string; mesCountIter : integer = 0; mesMod : integer = 0): boolean;
@begin
  MesError.InsertMesError(mesMesAdrXML, Comp(0), '', mesPole, mesMes, mesCountIter, mesMod);
  Result := True;
@end.

//------------------------------------------------------------------------------------------------------------
@Script GetIter(iter:longint):string;
@begin
  Result := '';

  if (iter > 0)
    Result := '[' + String(iter) + ']';
@end.

//------------------------------------------------------------------------------------------------------------
@Script DTS_I(zName: string): string;
@begin
  Result := DoubleToStr(Round(Double(zName)), '[|-]366666666666666666666');
@end.

//------------------------------------------------------------------------------------------------------------
@Script GetStrNull(fld:string):boolean;
@begin
  Result := XMLMAP.GetIsNullAttrValueByName(fld);
@end.
// #endregion СЕРВИСНЫЕ МЕТОДЫ
//************************************************************************************************************


//============================================================================================================
// #region ДЕЙСТВИЯ ВЫПОЛНЯЕМЫЕ ПРИ УСТАНОВКЕ ВИДИМОСТИ ПОЛЕЙ
//------------------------------------------------------------------------------------------------------------
@Script On_Visable : boolean;
  //==========================================================================================================
  // #region СЕРВИС On_Visable
  //----------------------------------------------------------------------------------------------------------
  #declare IfVis(adrIfVis)
    SetFldVis(#adrIfVis, not GetStrNull(#adrIfVis));
  #end

  #declare SetVisF(adrIfVis)
    SetFldVis(#adrIfVis, False);
  #end

  #declare SetVisT(adrIfVis)
    SetFldVis(#adrIfVis, True);
  #end
  // #endregion СЕРВИС On_Visable
  //**********************************************************************************************************
@begin
  // #region Файл/Документ/СвНП
  #IfVis('Файл/Документ/СвНП/Тлф')

  var buf : string;
  buf := GetStrVal('Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ/ФормРеорг');

  if (buf = '0')
  {
    #SetVisT('Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ'      )
    #SetVisF('Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ/ИННЮЛ')
    #SetVisF('Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ/КПП'  )
  }
  else
  {
    if    (buf = '1')
       or (buf = '2')
       or (buf = '3')
       or (buf = '5')
       or (buf = '6')
    {
      #SetVisT('Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ'      )
      #SetVisT('Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ/ИННЮЛ')
      #SetVisT('Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ/КПП'  )
    }
    else #SetVisF('Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ');
  }
  // #endregion

  // #region Файл/Документ/СвНП
  if     not GetStrNull('Файл/Документ/Подписант/ФИО/Фамилия')
     and not GetStrNull('Файл/Документ/Подписант/ФИО/Имя'    )
  {
    #SetVisT('Файл/Документ/Подписант/ФИО'         )
    #IfVis  ('Файл/Документ/Подписант/ФИО/Отчество')
  }
  else #SetVisF('Файл/Документ/Подписант/ФИО')

  if    (GetStrVal('Файл/Документ/Подписант/ПрПодп') = '2')
     or not GetStrNull('Файл/Документ/Подписант/СвПред/НаимДок')
  {
    #SetVisT('Файл/Документ/Подписант/СвПред'        )
    #IfVis  ('Файл/Документ/Подписант/СвПред/НаимОрг')
  }
  else #SetVisF('Файл/Документ/Подписант/СвПред')
  // #endregion Файл/Документ/Подписант

  var CountI, CountJ, CountZ, I, J, Z : integer;
  var XMLAdrI, XMLAdrJ , XMLAdrZ: string;
  var fl : boolean;

  // Раздел 1 #region Файл/Документ/АкцСпиртАлк/СумНалПУ
  if not GetStrNull('Файл/Документ/АкцСпиртАлк/СумНалПУ/ОКТМО')
  {
    #SetVisT('Файл/Документ/АкцСпиртАлк/СумНалПУ')
    CountI := XMLMap.GetNodeCountByName('Файл/Документ/АкцСпиртАлк/СумНалПУ/СумНалПУ_МО');
    for (i := 0; i < CountI; i++)
    {
      XMLAdrI := 'Файл/Документ/АкцСпиртАлк/СумНалПУ/СумНалПУ_МО' + getIter(i);
      if not GetStrNull(XMLAdrI + '/КБК')
      {
        #SetVisT(XMLAdrI)
        #IfVis  (XMLAdrI + '/АкцизУмен')
        #IfVis  (XMLAdrI + '/АкцизЗачЛикв')

        CountJ := XMLMap.GetNodeCountByName(XMLAdrI +'/СумНалПУ_КБК');
        for (j := 0; j < CountJ; j++)
        {
          XMLAdrJ :=XMLAdrI + '/СумНалПУ_КБК' + getIter(j);
          if  (not GetStrNull(XMLAdrJ + '/ПризнСрокУпл')) or (not GetStrNull(XMLAdrJ + '/АкцизПУ'))
          {
             #SetVisT(XMLAdrJ)
             #IfVis  (XMLAdrJ + '/ПризнСрокУпл' )
             #IfVis  (XMLAdrJ + '/АкцизПУкв' )
          }
          else
         #SetVisF(XMLAdrJ)
        }
      }
      else #SetVisF(XMLAdrI)
    }
  }
  else #SetVisF('Файл/Документ/АкцСпиртАлк/СумНалПУ')
  // #endregion #region Файл/Документ/АкцСпиртАлк/СумНалПУ

  // Раздел 2 #region Файл/Документ/АкцСпиртАлк/РасчАкц
  CountI := XMLMap.GetNodeCountByName('Файл/Документ/АкцСпиртАлк/РасчАкц');
  for (i := 0; i < CountI; i++)
  {
    XMLAdrI := 'Файл/Документ/АкцСпиртАлк/РасчАкц' + getIter(i);

    if not GetStrNull(XMLAdrI + '/КодПТ'  )
    {
      #SetVisT(XMLAdrI)

      //2.1 #region Файл/Документ/АкцСпиртАлк/РасчАкц/ОперПТРФ
      fl := false;
      CountJ := XMLMap.GetNodeCountByName(XMLAdrI + '/ОперПТРФ/ОперПТРФКод');
      for (j := 0; j < CountJ; j++)
      {
        XMLAdrJ := XMLAdrI + '/ОперПТРФ/ОперПТРФКод' + getIter(j);

        if     not GetStrNull(XMLAdrJ + '/КодПок')
           and not GetStrNull(XMLAdrJ + '/ПризнСтав')
           and not GetStrNull(XMLAdrJ + '/НалБаза')
           and not GetStrNull(XMLAdrJ + '/СумАкциз')
        {
          #SetVisT(XMLAdrJ)
          fl := true
        }
        else
          #SetVisF(XMLAdrJ)
      }
      if fl
        #SetVisT(XMLAdrI + '/ОперПТРФ')
      else
        #SetVisF(XMLAdrI + '/ОперПТРФ')
      //2.1 #endregion Файл/Документ/АкцСпиртАлк/РасчАкц/ОперПТРФ

      //2.2 #region Файл/Документ/АкцСпиртАлк/РасчАкц/ОперПТнеРФ
      fl := false;
      CountJ := XMLMap.GetNodeCountByName(XMLAdrI + '/ОперПТнеРФ/ОперПТнеРФКод');
      for (j := 0; j < CountJ; j++)
      {
        XMLAdrJ := XMLAdrI + '/ОперПТнеРФ/ОперПТнеРФКод' + getIter(j);

        if     not GetStrNull(XMLAdrJ + '/КодПок')
           and not GetStrNull(XMLAdrJ + '/ПризнСтав')
           and not GetStrNull(XMLAdrJ + '/НалБаза')
           and not GetStrNull(XMLAdrJ + '/СумАкциз')
        {
          #SetVisT(XMLAdrJ)
          fl := true
        }
        else
          #SetVisF(XMLAdrJ)
      }
      if fl
        #SetVisT(XMLAdrI + '/ОперПТнеРФ')
      else
        #SetVisF(XMLAdrI + '/ОперПТнеРФ')
      //2.2 #endregion Файл/Документ/АкцСпиртАлк/РасчАкц/ОперПТнеРФ


      //2.3 #region Файл/Документ/АкцСпиртАлк/РасчАкц/АкцизВыч
      fl := false;
      CountJ := XMLMap.GetNodeCountByName(XMLAdrI + '/АкцизВыч/АкцизВычКод');
      for (j := 0; j < CountJ; j++)
      {
        XMLAdrJ := XMLAdrI + '/АкцизВыч/АкцизВычКод' + getIter(j);

        if     not GetStrNull(XMLAdrJ + '/КодПок')
           and not GetStrNull(XMLAdrJ + '/ОбъемПТ')
           and not GetStrNull(XMLAdrJ + '/СумВычет')
        {
          #SetVisT(XMLAdrJ)
          fl := true
        }
        else
          #SetVisF(XMLAdrJ)
      }
      if fl
        #SetVisT(XMLAdrI + '/АкцизВыч')
      else
        #SetVisF(XMLAdrI + '/АкцизВыч')
      //2.3 #endregion Файл/Документ/АкцСпиртАлк/РасчАкц/АкцизВыч

      //2.4 #region Файл/Документ/АкцСпиртАлк/РасчАкц/АкцизПУ
      if    not GetStrNull(XMLAdrI + '/АкцизПУ/КодПок')
        and not GetStrNull(XMLAdrI + '/АкцизПУ/СумАкциз')
      {
        #SetVisT(XMLAdrI + '/АкцизПУ' )
      }
      else
        #SetVisF(XMLAdrI + '/АкцизПУ' )
      //2.4 #endregion Файл/Документ/АкцСпиртАлк/РасчАкц/АкцизПУ

      //2.4.1 #region Файл/Документ/АкцСпиртАлк/РасчАкц/Акциз203.6
      fl := false;
      CountJ := XMLMap.GetNodeCountByName(XMLAdrI + '/Акциз203.6/Акциз203.6Код');
      for (j := 0; j < CountJ; j++)
      {
        XMLAdrJ := XMLAdrI + '/Акциз203.6/Акциз203.6Код' + getIter(j);

        if     not GetStrNull(XMLAdrJ + '/КодПок')
           and not GetStrNull(XMLAdrJ + '/СумАкциз')
        {
          #SetVisT(XMLAdrJ)
          fl := true
        }
        else
          #SetVisF(XMLAdrJ)
      }
      if fl
        #SetVisT(XMLAdrI + '/Акциз203.6')
      else
        #SetVisF(XMLAdrI + '/Акциз203.6')
      //2.4.1 #endregion Файл/Документ/АкцСпиртАлк/РасчАкц/Акциз203.6/Акциз203.6Код

      //2.5 #region Файл/Документ/АкцСпиртАлк/РасчАкц/ДокЭкспПТ
      fl := false;
      CountJ := XMLMap.GetNodeCountByName(XMLAdrI + '/ДокЭкспПТ/ДокЭкспПТКод');
      for (j := 0; j < CountJ; j++)
      {
        XMLAdrJ := XMLAdrI + '/ДокЭкспПТ/ДокЭкспПТКод' + getIter(j);

        if     not GetStrNull(XMLAdrJ + '/КодПок')
           and not GetStrNull(XMLAdrJ + '/НалБаза')
           and not GetStrNull(XMLAdrJ + '/СумАкциз')
           and not GetStrNull(XMLAdrJ + '/НалПер')
           and not GetStrNull(XMLAdrJ + '/Год')
        {
          #SetVisT(XMLAdrJ     )
          fl := true;
        }
        #SetVisF(XMLAdrJ)
      }
      if fl
        #SetVisT(XMLAdrI + '/ДокЭкспПТ')
      else
        #SetVisF(XMLAdrI + '/ДокЭкспПТ')
      //2.5 #endregion Файл/Документ/АкцСпиртАлк/РасчАкц/ДокЭкспПТ
    }
    else #SetVisF(XMLAdrI)
  } // #endregion Файл/Документ/АкцСпиртАлк/РасчАкц

  // Приложение 1 #region Файл/Документ/АкцСпиртАлк/РасчНБВидПТ
  CountI := XMLMap.GetNodeCountByName('Файл/Документ/АкцСпиртАлк/РасчНБВидПТ');
  for (i := 0; i < CountI; i++)
  {
    XMLAdrI := 'Файл/Документ/АкцСпиртАлк/РасчНБВидПТ' + getIter(i);

    if not GetStrNull(XMLAdrI + '/КодПТ'  )
    {
      #SetVisT(XMLAdrI)
      CountJ := XMLMap.GetNodeCountByName(XMLAdrI + '/РасчНБКод');
      for (j := 0; j < CountJ; j++)
      {
        XMLAdrJ := XMLAdrI + '/РасчНБКод' + getIter(j);

        if     not GetStrNull(XMLAdrJ + '/КодПок')
           and not GetStrNull(XMLAdrJ + '/ПризнСтав')
           and not GetStrNull(XMLAdrJ + '/СодСпирт')
           and not GetStrNull(XMLAdrJ + '/ОбъемПТ')
        {
          #SetVisT(XMLAdrJ)
          #IfVis  (XMLAdrJ + '/НалПер')
          #IfVis  (XMLAdrJ + '/Год')
          #IfVis  (XMLAdrJ + '/НалБаза')
        }
        else
          #SetVisF(XMLAdrJ)
      }
    }
    else
     #SetVisF(XMLAdrI)
  }
  // #endregion Файл/Документ/АкцСпиртАлк/РасчНБВидПТ

  // Приложение 2 #region Файл/Документ/АкцСпиртАлк/РеалПТЭкспБГ184
  CountI := XMLMap.GetNodeCountByName('Файл/Документ/АкцСпиртАлк/РеалПТЭкспБГ184');
  for (i := 0; i < CountI; i++)
  {
    XMLAdrI := 'Файл/Документ/АкцСпиртАлк/РеалПТЭкспБГ184' + getIter(i);

    if    not GetStrNull(XMLAdrI + '/ПризнакДок')
      and not GetStrNull(XMLAdrI + '/НомерБГ')
      and not GetStrNull(XMLAdrI + '/ДатаВыдБГ')
      and not GetStrNull(XMLAdrI + '/ДатаНачБГ')
      and not GetStrNull(XMLAdrI + '/ДатаКонБГ')
      and not GetStrNull(XMLAdrI + '/СуммаБГ')
    {
      #SetVisT(XMLAdrI)
      #IfVis  (XMLAdrI + '/ПревАкОсвПдтвВс')
      CountJ := XMLMap.GetNodeCountByName(XMLAdrI + '/СвРеалПТЭксп');
      for (j := 0; j < CountJ; j++)
      {
        XMLAdrJ := XMLAdrI + '/СвРеалПТЭксп' + getIter(j);
        if not GetStrNull(XMLAdrJ + '/КодПТ')
        {
          #SetVisT(XMLAdrJ)
          CountZ := XMLMap.GetNodeCountByName(XMLAdrJ + '/АкОсвЭксп');
          for (z := 0; z < CountZ; z++)
          {
            XMLAdrZ := XMLAdrJ + '/АкОсвЭксп' + getIter(z);
            if    not GetStrNull(XMLAdrZ + '/КодПок')
              and not GetStrNull(XMLAdrZ + '/ОбъемПТ')

            {
               #SetVisT(XMLAdrZ)
               #IfVis  (XMLAdrZ + '/СумАкциз')
            }
            else
              #SetVisF(XMLAdrZ)
          }
          CountZ := XMLMap.GetNodeCountByName(XMLAdrJ + '/РеалПТЭкПдтвПер');
          for (z := 0; z < CountZ; z++)
          {
            XMLAdrZ := XMLAdrJ + '/РеалПТЭкПдтвПер' + getIter(z);
            if    not GetStrNull(XMLAdrZ + '/КодПок')
              and not GetStrNull(XMLAdrZ + '/ОбъемПТ')
              and not GetStrNull(XMLAdrZ + '/НалПер')
              and not GetStrNull(XMLAdrZ + '/Год')
            {
               #SetVisT(XMLAdrZ)
               #IfVis  (XMLAdrZ + '/СумАкциз')
            }
            else
              #SetVisF(XMLAdrZ)
          }
          CountZ := XMLMap.GetNodeCountByName(XMLAdrJ + '/РеалПТЭкПдтвПред');
          for (z := 0; z < CountZ; z++)
          {
            XMLAdrZ := XMLAdrJ + '/РеалПТЭкПдтвПред' + getIter(z);
            if    not GetStrNull(XMLAdrZ + '/КодПок')
              and not GetStrNull(XMLAdrZ + '/ОбъемПТ')
              and not GetStrNull(XMLAdrZ + '/НалПер')
              and not GetStrNull(XMLAdrZ + '/Год')

            {
               #SetVisT(XMLAdrZ)
               #IfVis  (XMLAdrZ + '/СумАкциз')
            }
            else
              #SetVisF(XMLAdrZ)
          }
          if not GetStrNull(XMLAdrJ + '/ПревАкОсвПдтв/СумАкциз')
            #SetVisT(XMLAdrJ + '/ПревАкОсвПдтв')
           else
            #SetVisF(XMLAdrJ + '/ПревАкОсвПдтв')
        }
        else
         #SetVisF(XMLAdrJ)
      }
    }
    else
    {
      #SetVisF(XMLAdrI)
      #SetVisF(XMLAdrI + '/СвРеалПТЭксп')
    }
  }
  // #endregion Файл/Документ/АкцСпиртАлк/РеалПТЭкспБГ184

  // Приложение 3 #region Файл/Документ/АкцСпиртАлк/СпРеалПер/СпРеалПокуп
  CountI := XMLMap.GetNodeCountByName('Файл/Документ/АкцСпиртАлк/СпРеалПер/СпРеалПокуп');
  fl := false;
  for (i := 0; i < CountI; i++)
  {
    XMLAdrI := 'Файл/Документ/АкцСпиртАлк/СпРеалПер/СпРеалПокуп' + getIter(i);

    if    not GetStrNull(XMLAdrI + '/ИННЮЛ')
      and not GetStrNull(XMLAdrI + '/КПП')
      and not GetStrNull(XMLAdrI + '/РегНомИзв')
      and not GetStrNull(XMLAdrI + '/ДатаРегИзв')
    {

      #SetVisT(XMLAdrI)
      CountJ := XMLMap.GetNodeCountByName(XMLAdrI + '/СпРеалПерКод');
      for (j := 0; j < CountJ; j++)
      {
        fl := true;
        XMLAdrJ := XMLAdrI + '/СпРеалПерКод' + getIter(j);
        if    not GetStrNull(XMLAdrJ + '/КодПок')
          and not GetStrNull(XMLAdrJ + '/КодСпирт')
          and not GetStrNull(XMLAdrJ + '/ОбъемСпирт')
          and not GetStrNull(XMLAdrJ + '/КодПП')
          and not GetStrNull(XMLAdrJ + '/АвИзвещ')
        {
          #SetVisT(XMLAdrJ)
        }
        else
          #SetVisF(XMLAdrJ)
      }
    }
    else
      #SetVisF(XMLAdrI)
  }
  if fl
    #SetVisT('Файл/Документ/АкцСпиртАлк/СпРеалПер')
  else
    #SetVisF('Файл/Документ/АкцСпиртАлк/СпРеалПер')
  // #endregion Файл/Документ/АкцСпиртАлк/СпРеалПер/СпРеалПокуп

  // Приложение 4 #region Файл/Документ/АкцСпиртАлк/СпПолучОрг
  CountI := XMLMap.GetNodeCountByName('Файл/Документ/АкцСпиртАлк/СпПолучОрг');
  for (i := 0; i < CountI; i++)
  {
    XMLAdrI := 'Файл/Документ/АкцСпиртАлк/СпПолучОрг' + getIter(i);
    if    not GetStrNull(XMLAdrI + '/ПризнОрг')
      and not GetStrNull(XMLAdrI + '/ИННЮЛ')
      and not GetStrNull(XMLAdrI + '/КПП')
      and not GetStrNull(XMLAdrI + '/СерСвид')
      and not GetStrNull(XMLAdrI + '/НомСвид')
    {
      #SetVisT(XMLAdrI)
      CountJ := XMLMap.GetNodeCountByName(XMLAdrI + '/СвДенСпирт');
      for (j := 0; j < CountJ; j++)
      {
        XMLAdrJ := XMLAdrI + '/СвДенСпирт' + getIter(j);
        if not GetStrNull(XMLAdrJ + '/КодСпирт')
        {
          #SetVisT(XMLAdrJ)
          CountZ := XMLMap.GetNodeCountByName(XMLAdrJ + '/СвОбСпСчФ');
          for (z := 0; z < CountJ; z++)
          {
            XMLAdrZ := XMLAdrJ + '/СвОбСпСчФ' + getIter(z);
            if    not GetStrNull(XMLAdrZ + '/НомСчФ')
              and not GetStrNull(XMLAdrZ + '/ДатаСчФ')
              and not GetStrNull(XMLAdrZ + '/ОбСпСчФ')
            {
               #SetVisT(XMLAdrZ)
               #IfVis  (XMLAdrZ + '/НомКСчФ')
               #IfVis  (XMLAdrZ + '/ДатаКСчФ')
               #IfVis  (XMLAdrZ + '/ОбСпКСчФ')
            }
            else
              #SetVisF(XMLAdrZ)
          }
        }
        else
          #SetVisF(XMLAdrJ)
      }
    }
    else
    {
      #SetVisF(XMLAdrI)
      #SetVisF(XMLAdrI + '/СвДенСпирт')
      #SetVisF(XMLAdrI + '/СвДенСпирт/СвОбСпСчФ')
    }
  }
  // #endregion Файл/Документ/АкцСпиртАлк/СпПолучОрг

  // Приложение 3 #region Файл/Документ/АкцСпиртАлк/СпПриобИзвУп
  CountI := XMLMap.GetNodeCountByName('Файл/Документ/АкцСпиртАлк/СпПриобИзвУп');
  for (i := 0; i < CountI; i++)
  {
    XMLAdrI := 'Файл/Документ/АкцСпиртАлк/СпПриобИзвУп' + getIter(i);
    if    not GetStrNull(XMLAdrI + '/РегНомИзв')
      and not GetStrNull(XMLAdrI + '/ДатаРегИзв')
      and not GetStrNull(XMLAdrI + '/ИННЮЛ_Прод')
      and not GetStrNull(XMLAdrI + '/КПП_Прод')
      and not GetStrNull(XMLAdrI + '/КодСпирт')
      and not GetStrNull(XMLAdrI + '/АвСпИзвещВс')
      and not GetStrNull(XMLAdrI + '/СпФактЗак')
      and not GetStrNull(XMLAdrI + '/АкСпФактЗак')
    {
      #IfVis  (XMLAdrI + '/ОбСпИзвещВс')
      #IfVis  (XMLAdrI + '/ОстНеРеалППКонВс')
      #IfVis  (XMLAdrI + '/АвНеРеалППКонВс')
      #SetVisT(XMLAdrI)
      if    not GetStrNull(XMLAdrI + '/СвКорИзвещ/РегНомИзв')
        and not GetStrNull(XMLAdrI + '/СвКорИзвещ/ДатаРегИзв')
        and not GetStrNull(XMLAdrI + '/СвКорИзвещ/ИННЮЛ_Пост')
        and not GetStrNull(XMLAdrI + '/СвКорИзвещ/КПП_Пост')
        and not GetStrNull(XMLAdrI + '/СвКорИзвещ/КодСпирт')
        and not GetStrNull(XMLAdrI + '/СвКорИзвещ/ОбСпИзвещВс')
        and not GetStrNull(XMLAdrI + '/СвКорИзвещ/АвСпИзвещВс')
      {
       #SetVisT(XMLAdrI+ '/СвКорИзвещ')
      }
      else
       #SetVisF(XMLAdrI+ '/СвКорИзвещ')

      CountJ := XMLMap.GetNodeCountByName(XMLAdrI + '/СвИспСпВид');
      for (j := 0; j < CountJ; j++)
      {
        XMLAdrJ := XMLAdrI + '/СвИспСпВид' + getIter(j);
        if    not GetStrNull(XMLAdrJ + '/КодПП')
          and not GetStrNull(XMLAdrJ + '/СпЗакупПрзвдПП')
        {
          #SetVisT(XMLAdrJ)
          #IfVis  (XMLAdrJ + '/СпПотерНормНач')
          #IfVis  (XMLAdrJ + '/АкОбПотерНорм')
          #IfVis  (XMLAdrJ + '/СпПотерСвНормНач')
          #IfVis  (XMLAdrJ + '/СпИспПрзвдПред')
          #IfVis  (XMLAdrJ + '/АкИсчПродРеалПред')
          #IfVis  (XMLAdrJ + '/ОстСпНеРеалНач')
          #IfVis  (XMLAdrJ + '/СпПотерНормПер')
          #IfVis  (XMLAdrJ + '/АвПотерНормПер')
          #IfVis  (XMLAdrJ + '/СпПотерСвНормПер')
          #IfVis  (XMLAdrJ + '/СпИспПерВс')
          #IfVis  (XMLAdrJ + '/СпИспПерРеалРФ')
          #IfVis  (XMLAdrJ + '/СпИспПерРеалЕЭС')
          #IfVis  (XMLAdrJ + '/СпИспПерРеалНеЕЭС')
          #IfVis  (XMLAdrJ + '/АкИсчРеалПер')
          #IfVis  (XMLAdrJ + '/АкИсчРеалПерРФ')
          #IfVis  (XMLAdrJ + '/АкИсчРеалПерЕЭС')
          #IfVis  (XMLAdrJ + '/АкИсчРеалПерНеЕЭС')
          #IfVis  (XMLAdrJ + '/ОстСпНеРеалКон')
          #IfVis  (XMLAdrJ + '/АвСпНеРеалППКон')
          #IfVis  (XMLAdrJ + '/АвУплДистПодлВыч')
        }
        else
          #SetVisF(XMLAdrJ)
      }
    }
    else
    {
      #SetVisF(XMLAdrI)
      #SetVisF(XMLAdrI + '/СвИспСпВид')
    }
  }
  // #endregion Файл/Документ/АкцСпиртАлк/СпПриобИзвУп

  // Приложение 6 #region Файл/Документ/АкцСпиртАлк/СпПриобИзвОсвУп
  CountI := XMLMap.GetNodeCountByName('Файл/Документ/АкцСпиртАлк/СпПриобИзвОсвУп');
  for (i := 0; i < CountI; i++)
  {
    XMLAdrI := 'Файл/Документ/АкцСпиртАлк/СпПриобИзвОсвУп' + getIter(i);
    if    not GetStrNull(XMLAdrI + '/ПризнакБГ')
      and not GetStrNull(XMLAdrI + '/НомерБГ')
      and not GetStrNull(XMLAdrI + '/ДатаВыдБГ')
      and not GetStrNull(XMLAdrI + '/ДатаНачБГ')
      and not GetStrNull(XMLAdrI + '/ДатаКонБГ')
      and not GetStrNull(XMLAdrI + '/СуммаБГ')
      and not GetStrNull(XMLAdrI + '/РегНомИзв')
      and not GetStrNull(XMLAdrI + '/ДатаРегИзв')
      and not GetStrNull(XMLAdrI + '/ИННЮЛ_Пост')
      and not GetStrNull(XMLAdrI + '/КПП_Пост')
      and not GetStrNull(XMLAdrI + '/КодСпирт')
      and not GetStrNull(XMLAdrI + '/ОбСпиртИзвВс')
      and not GetStrNull(XMLAdrI + '/АвСпИзвещВс')
      and not GetStrNull(XMLAdrI + '/СпФактЗак')
      and not GetStrNull(XMLAdrI + '/АкСпФактЗак')
      and not GetStrNull(XMLAdrI + '/НалНачПер100')
    {
      #SetVisT(XMLAdrI)
      if    not GetStrNull(XMLAdrI + '/СведИзвещКор/РегНомИзв')
        and not GetStrNull(XMLAdrI + '/СведИзвещКор/ДатаРегИзв')
        and not GetStrNull(XMLAdrI + '/СведИзвещКор/ИННЮЛ_Пост')
        and not GetStrNull(XMLAdrI + '/СведИзвещКор/КПП_Пост')
        and not GetStrNull(XMLAdrI + '/СведИзвещКор/КодСпирт')
        and not GetStrNull(XMLAdrI + '/СведИзвещКор/ОбСпИзвещВс')
        and not GetStrNull(XMLAdrI + '/СведИзвещКор/АвСпИзвещВс')
      {
       #SetVisT(XMLAdrI+ '/СведИзвещКор')
      }
      else
       #SetVisF(XMLAdrI+ '/СведИзвещКор')

      CountJ := XMLMap.GetNodeCountByName(XMLAdrI + '/СведИспСпВидПП');
      for (j := 0; j < CountJ; j++)
      {
        XMLAdrJ := XMLAdrI + '/СведИспСпВидПП' + getIter(j);
        if    not GetStrNull(XMLAdrJ + '/КодВидПП')
          and not GetStrNull(XMLAdrJ + '/ОбСпПриобПроизв')
          and not GetStrNull(XMLAdrJ + '/ОстСпНереалППНач')
          and not GetStrNull(XMLAdrJ + '/ОбППРеалПерРФ')
          and not GetStrNull(XMLAdrJ + '/АкППРеалПерРФ')
          and not GetStrNull(XMLAdrJ + '/ОбППРеалПерИн')
          and not GetStrNull(XMLAdrJ + '/АкППРеалПерИн')
          and not GetStrNull(XMLAdrJ + '/ОбППРеалИнПдтвПер')
          and not GetStrNull(XMLAdrJ + '/АкППРеалИнПдтвПер')
          and not GetStrNull(XMLAdrJ + '/ОбППРеалПерЕЭС')
          and not GetStrNull(XMLAdrJ + '/АкППРеалПерЕЭС')
          and not GetStrNull(XMLAdrJ + '/ОбППРеалЕЭСПдтвПер')
          and not GetStrNull(XMLAdrJ + '/АкППРеалЕЭСПдтвПер')
          and not GetStrNull(XMLAdrJ + '/ОбППРеалПредРФ')
          and not GetStrNull(XMLAdrJ + '/АкППРеалПредРФ')
          and not GetStrNull(XMLAdrJ + '/ОбППРеалПредИнЕЭС')
          and not GetStrNull(XMLAdrJ + '/АкППРеалПредИнЕЭС')
          and not GetStrNull(XMLAdrJ + '/ОбФПотНормКон')
          and not GetStrNull(XMLAdrJ + '/АвФПотНормКон')
          and not GetStrNull(XMLAdrJ + '/ОбФПотСвНормКон')
          and not GetStrNull(XMLAdrJ + '/АвФПотСвНормКон')
        {
          #SetVisT(XMLAdrJ)
        }
        else
          #SetVisF(XMLAdrJ)
      }
      CountJ := XMLMap.GetNodeCountByName(XMLAdrI + '/СведФИспОбязБГ');
      for (j := 0; j < CountJ; j++)
      {
        XMLAdrJ := XMLAdrI + '/СведФИспОбязБГ' + getIter(j);
        if    not GetStrNull(XMLAdrJ + '/КодВидПП')
          and not GetStrNull(XMLAdrJ + '/АкИсчПерРасч')
          and not GetStrNull(XMLAdrJ + '/АкОсвПдтвКНП')
          and not GetStrNull(XMLAdrJ + '/АкОсвНеПдтвКНП')
          and not GetStrNull(XMLAdrJ + '/АвФПотСпНорм')
        {
          #SetVisT(XMLAdrJ)
        }
        else
          #SetVisF(XMLAdrJ)
      }
      CountJ := XMLMap.GetNodeCountByName(XMLAdrI + '/СвАвКонРасчВыч');
      for (j := 0; j < CountJ; j++)
      {
        XMLAdrJ := XMLAdrI + '/СвАвКонРасчВыч' + getIter(j);
        if    not GetStrNull(XMLAdrJ + '/КодВидПП')

          and not GetStrNull(XMLAdrJ + '/АвУплКонРасч')
          and not GetStrNull(XMLAdrJ + '/АвНеВычНачПер')

          and not GetStrNull(XMLAdrJ + '/ОстСпНеРеалППНач')
          and not GetStrNull(XMLAdrJ + '/ОбППРеалПерРФ')

          and not GetStrNull(XMLAdrJ + '/ОбППРеалПерИн')
          and not GetStrNull(XMLAdrJ + '/ОбППРеалПерЕЭС')

          and not GetStrNull(XMLAdrJ + '/ОбФПотНормПер')
          and not GetStrNull(XMLAdrJ + '/ОбФПотСвНормПер')
          and not GetStrNull(XMLAdrJ + '/АвДистПодлВыч')

        {
          #SetVisT(XMLAdrJ)
        }
        else
          #SetVisF(XMLAdrJ)
      }
    }
    else
    {
      #SetVisF(XMLAdrI)
      #SetVisF(XMLAdrI + '/СведИспСпВидПП')
      #SetVisF(XMLAdrI + '/СведФИспОбязБГ')
      #SetVisF(XMLAdrI + '/СвАвКонРасчВыч')
    }
  }
  // #endregion Файл/Документ/АкцСпиртАлк/СпПриобИзвОсвУп
@end.
// #endregion ДЕЙСТВИЯ ВЫПОЛНЯЕМЫЕ ПРИ УСТАНОВКЕ ВИДИМОСТИ ПОЛЕЙ
//************************************************************************************************************


//============================================================================================================
// #region ДЕЙСТВИЯ ВЫПОЛНЯЕМЫЕ ПРИ ПРОВЕРКЕ
//------------------------------------------------------------------------------------------------------------
@Script On_Check : boolean;
  //==========================================================================================================
  // #region СЕРВИС On_Check
  //----------------------------------------------------------------------------------------------------------
  #include AllTaxObj.Vih

  // #region ISVALID
  function IsValidPeriod(strIn: string; var strGetMes: string) : boolean;
  begin
    //Налоговый период
    //Период
    strGetMes := 'Возможные значения: 01, 02, 03, 04, 05, 06, 07, 08, 09, 10, 11, 12, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81 или 82';

    Result := False;
    Result :=    CheckError.isRegExpr('^(01|02|03|04|05|06|07|08|09|10|11|12)$', strIn)
              or CheckError.isRegExpr('^(71|72|73|74|75|76|77|78|79|80|81|82)$', strIn);
  end;

  //----------------------------------------------------------------------------------------------------------
  function IsValidPoMestu(strIn: string; var strGetMes: string) : boolean;
  begin
    //По месту нахождения (учета)
    //ПоМесту
    strGetMes := 'Возможные значения: 120, 213, 214, 215, 216, 220 или 331';

    Result := False;
    Result := CheckError.isRegExpr('^(120|213|214|215|216|220|331)$', strIn);
  end;

  //----------------------------------------------------------------------------------------------------------
  function IsValidNalSvid(strIn: string; var strGetMes: string) : boolean;
  begin
    //Наличие свидетельства (свидетельств)
    //НалСвид
    strGetMes := 'Возможные значения: 0 или 1';

    Result := False;
    Result := CheckError.isRegExpr('^(0|1)$', strIn);
  end;

  //----------------------------------------------------------------------------------------------------------
  function IsValidKodPT(strIn: string; var strGetMes: string) : boolean;
  begin
    //Коды видов подакцизных товаров
    //КодПТ
    strGetMes := 'Возможные значения: 100, 111, 121, 130, 140, 150, 160-165, 170, 200, 224, 231, 232, 271, 272, 284, 285, 291-293, 300, 310, 320 или 330';

    Result := False;
    Result :=    CheckError.isRegExpr('^(100|111|121|140|150|160|161|162|163|130|164|165|170|200)$', strIn)
              or CheckError.isRegExpr('^(231|224|232|284|285|271|272|291|292|293|300|310|320|330)$', strIn);
  end;

  //----------------------------------------------------------------------------------------------------------
  function IsValidKodPT_111_121(strIn: string; var strGetMes: string) : boolean;
  begin
    //Коды видов подакцизных товаров
    //КодПТ
    strGetMes := 'Возможные значения: 111 или 121';

    Result := False;
    Result :=    CheckError.isRegExpr('^(111|121)$', strIn);
  end;

  //----------------------------------------------------------------------------------------------------------
  function IsValidKodPT_111(strIn: string; var strGetMes: string) : boolean;
  begin
    //Коды видов подакцизных товаров
    //КодПТ
    strGetMes := 'Возможное значение: 111';

    Result := False;
    Result := CheckError.isRegExpr('^(111)$', strIn);
  end;

  //----------------------------------------------------------------------------------------------------------
  function IsValidKodPT_121(strIn: string; var strGetMes: string) : boolean;
  begin
    //Коды видов подакцизных товаров
    //КодПТ
    strGetMes := 'Возможное значение: 121';

    Result := False;
    Result := CheckError.isRegExpr('^(121)$', strIn);
  end;

  //----------------------------------------------------------------------------------------------------------
  function IsValidKodPok(strIn: string; var strGetMes: string) : boolean;
  begin
    //Код показателя
    //КодПок
    strGetMes := 'Возможные значения: 10001, 10006, 10007, 10008, 10009, 10010, 10011, 10012, 10020 или 10022';

    Result := False;
    Result := CheckError.isRegExpr('^(10001|10006|10007|10008|10009|10010|10011|10012|10020|10022)$', strIn);
  end;

  //----------------------------------------------------------------------------------------------------------
  function IsValidKodSrUplat(strIn: string; var strGetMes: string) : boolean;
  begin
    //Код срока уплаты
    //ПризнСтав
    strGetMes := 'Возможные значения: 01, 02, 03 или 04';

    Result := False;
    Result := CheckError.isRegExpr('^(01|02|03|04)$', strIn);
  end;
  //----------------------------------------------------------------------------------------------------------
  function IsValidPriznStav(strIn: string; var strGetMes: string) : boolean;
  begin
    //Признак применения ставки акциза на этиловый спирт
    //ПризнСтав
    strGetMes := 'Возможные значения: 0, 1, 2, 3 или 4';

    Result := False;
    Result := CheckError.isRegExpr('^(0|1|2|3|4)$', strIn);
  end;
  //----------------------------------------------------------------------------------------------------------
  function IsValidPriznDoc(strIn: string; var strGetMes: string) : boolean;
  begin
    //Признак применения ставки акциза на этиловый спирт
    //ПризнСтав
    strGetMes := 'Возможные значения:  1 или 2';

    Result := False;
    Result := CheckError.isRegExpr('^(1|2)$', strIn);
  end;
  //----------------------------------------------------------------------------------------------------------
  function IsValidKodPok_2(strIn: string; var strGetMes: string) : boolean;
  begin
    //Код показателя
    //КодПок
    strGetMes := 'Возможные значения: 20001, 20002, 20003, 20004, 20005, 20006, 20007, 20008, 20009, 20010, 20011, 20012, 20013, 20014 или 20015';

    Result := False;
    Result := CheckError.isRegExpr('^(20001|20002|20003|20004|20005|20006|20007|20008|20009|20010|20011|20012|20013|20014|20015)$', strIn);
  end;

  //----------------------------------------------------------------------------------------------------------
  function IsValidKodPok_3(strIn: string; var strGetMes: string) : boolean;
  begin
    //Код показателя
    //КодПок
    strGetMes := 'Возможные значения: 30001, 30002, 30003, 30004, 30005, 30008б 30009, 30010 или 30012';

    Result := False;
    Result := CheckError.isRegExpr('^(30001|30002|30003|30004|30005|30008|30009|30010|30012)$', strIn);
  end;


  //----------------------------------------------------------------------------------------------------------
  function IsValidKodPok_4(strIn: string; var strGetMes: string) : boolean;
  begin
    //Код показателя
    //КодПок
    strGetMes := 'Возможное значение: 40001 или 40002';

    Result := False;
    Result := CheckError.isRegExpr('^(40001|40002)$', strIn);
  end;

  //----------------------------------------------------------------------------------------------------------
  function IsValidKodPok_5(strIn: string; var strGetMes: string) : boolean;
  begin
    //Код показателя
    //КодПок
    strGetMes := 'Возможное значение: 60005, 60006, 60007, 60008 или 60009';

    Result := False;
    Result := CheckError.isRegExpr('^(60005|60006|60007|60008|60009)$', strIn);
  end;

  //----------------------------------------------------------------------------------------------------------
  function IsValidKodPok_6(strIn: string; var strGetMes: string) : boolean;
  begin
    //Код показателя
    //КодПок
    strGetMes := 'Возможные значения: 50001, 50002, 50003, 50004, 50005, 50006, 50007, 50008, 50009, 50010 или 50011';

    Result := False;
    Result := CheckError.isRegExpr('^(50001|50002|50003|50004|50005|50006|50007|50008|50009|50010|50011)$', strIn);
  end;

  //----------------------------------------------------------------------------------------------------------
  function IsValidKodPok_7(strIn: string; var strGetMes: string) : boolean;
  begin
    //Код показателя
    //КодПок
    strGetMes := 'Возможные значения: 10001, 10006-10011, 10012, 10020, 10022, 20001-20015, 30001-30005, 30008, 30009, 30010, 30012 или 50001-50011';

    Result := False;
    Result := CheckError.isRegExpr('^(10001|10006|10007|10008|10009|10010|10011|10012|10020|10022|20001|20002|20003|20004|20005|20006|20007|20008|20009|20010|20011|20012|20013|20014|20015)$'      , strIn)
           or CheckError.isRegExpr('^(30001|30002|30004|30005|30008|30009|30010|30012|50001|50002|50003|50004|50005|50006|50007|50008|50009|50010|50011)$', strIn);
  end;

  //----------------------------------------------------------------------------------------------------------
  function IsValidNalichBG(strIn: string; var strGetMes: string) : boolean;
  begin
    //Признак наличия банковской гарантии
    //НаличБГ
    strGetMes := 'Возможные значения: 0 или 1';

    Result := False;
    Result := (strIn = '0' or strIn = '1');
  end;

  //----------------------------------------------------------------------------------------------------------
  function IsValidKodPok_8(strIn: string; var strGetMes: string) : boolean;
  begin
    //Код показателя
    //КодПок
    strGetMes := 'Возможные значения: 20001, 20008 или 20012';

    Result := False;
    Result := CheckError.isRegExpr('^(20001|20008|20012)$', strIn);
  end;

  //----------------------------------------------------------------------------------------------------------
  function IsValidKodPok_9(strIn: string; var strGetMes: string) : boolean;
  begin
    //Код показателя
    //КодПок
    strGetMes := 'Возможные значения:  50003, 50008 50009';

    Result := False;
    Result :=    CheckError.isRegExpr('^(500037|50008|50009)$', strIn);
  end;
  //----------------------------------------------------------------------------------------------------------
  function IsValidDateMM(strIn: string; var strGetMes: string) : boolean;
  begin
    //Дата в формате ММ.ГГГГ (01.1800 - 31.12.2099)
    //ДатаТип
    strGetMes := 'Формат поля: ММ.ГГГГ';
    Result := False;
    Result := CheckError.isRegExpr('^[0]{1}[1-9]{1}[.][1-2]{1}[0-9]{3}$', strIn)
             or  CheckError.isRegExpr('^[1]{1}[0-2]{1}[.][1-2]{1}[0-9]{3}$', strIn) ;
  end;
  //----------------------------------------------------------------------------------------------------------
  function IsValidNomerBG_22(strIn: string; var strGetMes: string) : boolean;
  begin
    //Номер банковской гарантии
    //НомерБГ
    strGetMes := 'Формат поля: от 1 до 22 символов';

    result := false;
    result := (Length(strIn) >= 1) and (Length(strIn) <= 22);
  end;
  //----------------------------------------------------------------------------------------------------------
  function IsValidNomerBG(strIn: string; var strGetMes: string) : boolean;
  begin
    //Номер банковской гарантии
    //НомерБГ
    strGetMes := 'Формат поля: от 1 до 20 символов';

    result := false;
    result := (Length(strIn) >= 1) and (Length(strIn) <= 20);
  end;

  //----------------------------------------------------------------------------------------------------------
  function IsValidText_256(strIn: string; var strGetMes: string) : boolean;
  begin
    strGetMes := 'Формат поля: от 1 до 256 символов';

    result := false;
    result := (Length(strIn) >= 1) and (Length(strIn) <= 256);
  end;

  //----------------------------------------------------------------------------------------------------------
  function IsValidSerSvidPost(strIn: string; var strGetMes: string) : boolean;
  begin
    //Серия свидетельства поставщика
    //СерСвидПост
    strGetMes := 'Формат поля: от 1 до 2 символов';

    result := false;
    result := (Length(strIn) >= 1) and (Length(strIn) <= 2);
  end;

  //----------------------------------------------------------------------------------------------------------
  function IsValidNomSvidPost(strIn: string; var strGetMes: string) : boolean;
  begin
    //Номер свидетельства поставщика
    //НомСвидПост
    strGetMes := 'Формат поля: от 1 до 9 символов';

    result := false;
    result := (Length(strIn) >= 1) and (Length(strIn) <= 9);
  end;

  //----------------------------------------------------------------------------------------------------------
  function IsValidRegNomIzv(strIn: string; var strGetMes: string) : boolean;
  begin
    //Регистрационный номер извещения
    //РегНомИзв
    strGetMes := 'Формат поля: от 1 до 13 символов';

    result := false;
    result := (Length(strIn) >= 1) and (Length(strIn) <= 13);
  end;

  //----------------------------------------------------------------------------------------------------------
  function IsValidKodPok_10(strIn: string; var strGetMes: string) : boolean;
  begin
    //Код показателя
    //КодПок
    strGetMes := 'Возможные значения: 60001, 60002, 60003 или 60004';

    Result := False;
    Result := CheckError.isRegExpr('^(60001|60002|60003|60004)$', strIn);
  end;

  //----------------------------------------------------------------------------------------------------------
  function KPT_P1(_adr: string) : boolean;
  begin
    Result := true;
    case GetStrVal(_adr) of
      '232' : Result := false;
      '271' : Result := false;
      '272' : Result := false;
      '284' : Result := false;
      '285' : Result := false;
      '310' : Result := false;
      '320' : Result := false;
      '330' : Result := false;
    end;
  end;
  // #endregion ISVALID

  // #region DECLARE
  #declare _IsValid(_Valid, _AdrXML, _Pole, _Iter=0, _Mod=0)
    if not #_Valid(GetStrVal(#_AdrXML), getMes)
      MesErrStop
      (
        #_AdrXML
      , #_Pole
      , 'Поле не соответствует формату. ' + getMes
      , #_Iter
      , #_Mod
      );
  #end

  //----------------------------------------------------------------------------------------------------------
  #declare _IsValid_Vis(_Valid, _AdrXML, _Pole, _Iter=0, _Mod=0)
    if GetFldVis(#_AdrXML)
      if not #_Valid(GetStrVal(#_AdrXML), getMes)
        MesErrStop
        (
          #_AdrXML
        , #_Pole
        , 'Поле не соответствует формату. ' + getMes
        , #_Iter
        , #_Mod
        );
  #end

  //----------------------------------------------------------------------------------------------------------
  #declare _IsValid_Dec(_StrMes, _AdrXML, _Pole, _Cel, _Drob, _flMin, _Iter=0, _Mod=0)
    if not IsValidDecimal(GetStrVal(#_AdrXML), #_Cel, #_Drob, getMes, #_flMin)
      MesErrStop
      (
        #_AdrXML
      , #_Pole
      , 'Поле не соответствует формату. Формат поля '+ #_StrMes + ' ' + getMes
      , #_Iter
      , #_Mod
      );
  #end

  //----------------------------------------------------------------------------------------------------------
  #declare _IsValid_Dec_Vis(_StrMes, _AdrXML, _Pole, _Cel, _Drob, _flMin, _Iter=0, _Mod=0)
    if GetFldVis(#_AdrXML)
      if not IsValidDecimal(GetStrVal(#_AdrXML), #_Cel, #_Drob, getMes, #_flMin)
        MesErrStop
        (
          #_AdrXML
        , #_Pole
        , 'Поле не соответствует формату. Формат поля '+ #_StrMes + getMes
        , #_Iter
      , #_Mod
        );
  #end
  // #endregion DECLARE
  // #endregion СЕРВИС On_Check
  //**********************************************************************************************************
@begin
  var getMes, XMLAdrI, XMLAdrJ, XMLAdrZ : string = '';
  var flI, flJ, flZ : boolean;
  var CountI, CountJ, CountZ, I, J, Z : longint;

  if not IsValidKND(GetStrVal('Файл/Документ/КНД'), '1151090', getMes)
    MesErrStop('Файл/Документ/КНД', 'Код налоговой декларации', 'Поле не соответствует формату. ' + getMes);

  // #region ТИТУЛЬНЫЙ ЛИСТ
  #_IsValid    (IsValidDate   , 'Файл/Документ/ДатаДок'          , 'Дата документа'             )
  #_IsValid    (IsValidOtchGod, 'Файл/Документ/ОтчетГод'         , 'Отчетный год'               )
  #_IsValid    (IsValidSONO   , 'Файл/Документ/КодНО'            , 'Код налогового органа'      )
  #_IsValid    (IsValidNaimOrg, 'Файл/Документ/СвНП/НПЮЛ/НаимОрг', 'Наименование организации'   )
  #_IsValid    (IsValidINNUL  , 'Файл/Документ/СвНП/НПЮЛ/ИННЮЛ'  , 'ИНН'                        )   #_IsValid(CheckError.Prov_INN, 'Файл/Документ/СвНП/НПЮЛ/ИННЮЛ', 'ИНН')
  #_IsValid    (IsValidKPP    , 'Файл/Документ/СвНП/НПЮЛ/КПП'    , 'КПП'                        )
  #_IsValid    (IsValidPrPodp , 'Файл/Документ/Подписант/ПрПодп' , 'Признак подписанта'         )
  #_IsValid_Vis(IsValidTlf    , 'Файл/Документ/СвНП/Тлф'         , 'Контактный телефон'         )
  #_IsValid_Vis(IsValidPeriod , 'Файл/Документ/Период'           , 'Налоговый период'           )
  #_IsValid_Vis(IsValidPoMestu, 'Файл/Документ/ПоМесту'          , 'По месту нахождения (учета)')

  if GetFldVis('Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ')
  {
    #_IsValid    (IsValidFormReorg, 'Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ/ФормРеорг', 'Форма реоргазации')
    #_IsValid_Vis(IsValidINNUL    , 'Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ/ИННЮЛ'    , 'ИНН'              )   #_IsValid_Vis(CheckError.Prov_INN, 'Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ/ИННЮЛ', 'ИНН')
    #_IsValid_Vis(IsValidKPP      , 'Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ/КПП'      , 'КПП'              )
  }

  #_IsValid    (IsValidFIO, 'Файл/Документ/Подписант/ФИО/Фамилия' , 'Фамилия' )
  #_IsValid    (IsValidFIO, 'Файл/Документ/Подписант/ФИО/Имя'     , 'Имя'     )
  #_IsValid_Vis(IsValidFIO, 'Файл/Документ/Подписант/ФИО/Отчество', 'Отчество')

  if GetFldVis('Файл/Документ/Подписант/СвПред')
  {
    #_IsValid    (IsValidNaimDok, 'Файл/Документ/Подписант/СвПред/НаимДок', 'Наименование документа'  )
    #_IsValid_Vis(IsValidNaimOrg, 'Файл/Документ/Подписант/СвПред/НаимОрг', 'Наименование организации')
  }
  // #endregion ТИТУЛЬНЫЙ ЛИСТ

  // #region РАЗДЕЛ 1
  if GetFldVis('Файл/Документ/АкцСпиртАлк/СумНалПУ')
  {
    #_IsValid(IsValidOKTMO, 'Файл/Документ/АкцСпиртАлк/СумНалПУ/ОКТМО', 'стр. 010')
    CountI := XMLMap.GetNodeCountByName('Файл/Документ/АкцСпиртАлк/СумНалПУ/СумНалПУ_МО');   flI := false;
    for (i := 0; i < CountI; i++)
    {
      XMLAdrI := 'Файл/Документ/АкцСпиртАлк/СумНалПУ/СумНалПУ_МО' + getIter(i);
      if not GetFldVis(XMLAdrI)continue ;
      flI := true;
      #_IsValid        (IsValidKBK   , XMLAdrI + '/КБК'     ,     ' стр. 020'              , -1, 4)
      #_IsValid_Dec_Vis('XXXXXXXXXXX', XMLAdrI + '/АкцизУмен',    ' стр. 050', 11, 0, False, -1, 4)
      #_IsValid_Dec_Vis('XXXXXXXXXXX', XMLAdrI + '/АкцизЗачЛикв', ' стр. 060', 11, 0, False, -1, 4)
      CountJ := XMLMap.GetNodeCountByName(XMLAdrI + '/СумНалПУ_КБК');   flJ := false;
      for (j := 0; j < CountJ; j++)
      {
        XMLAdrJ := XMLAdrI + '/СумНалПУ_КБК' + getIter(j);
        if not GetFldVis(XMLAdrJ) continue;
        flJ := true;

        #_IsValid_Vis(IsValidKodSrUplat, XMLAdrJ + '/ПризнСрокУпл'    , 'стр. 030 ', if(i=0, -1, 1)  , 4)
        #_IsValid_Dec_Vis('XXXXXXXXXXX'    , XMLAdrJ + '/АкцизПУ'     , ' стр. 040', 11, 0, False, -1, 4)
      }
      if (not flJ) MesErrStop( XMLAdrI + '/СумНалПУ_КБК/ПризнСрокУпл', 'стр. 030', 'Необходимо заполнить хотя бы одну связку строк 030 - 040');
    }
    if (not flI) MesErrStop('Файл/Документ/АкцСпиртАлк/СумНалПУ/СумНалПУ_МО/КБК', 'стр. 020', 'Необходимо заполнить хотя бы одну связку строк 020 - 040');
  }
  else MesErrStop('Файл/Документ/АкцСпиртАлк/СумНалПУ/ОКТМО', 'Раздел 1', 'Раздел 1 обязательный к заполнению');
  // #endregion РАЗДЕЛ 1

  // #region РАЗДЕЛ 2
  CountI := XMLMap.GetNodeCountByName('Файл/Документ/АкцСпиртАлк/РасчАкц');
  for (i := 0; i < CountI; i++)
  {
    XMLAdrI := 'Файл/Документ/АкцСпиртАлк/РасчАкц' + getIter(i);
    if not GetFldVis(XMLAdrI) continue;

    #_IsValid(IsValidKodPT, XMLAdrI + '/КодПТ', 'Стр. 010')
    flI := false;

    // #region РАЗДЕЛ 2.1
    CountJ := XMLMap.GetNodeCountByName(XMLAdrI + '/ОперПТРФ/ОперПТРФКод');   flJ := false;
    for (j := 0; j < CountJ; j++)
    {
      XMLAdrJ := XMLAdrI + '/ОперПТРФ/ОперПТРФКод' + getIter(j);
      if not GetFldVis(XMLAdrJ) continue;
      flJ := true;
      flI := true;
      #_IsValid    (IsValidKodPok   , XMLAdrJ + '/КодПок'   , 'Разд.2.1: стр. ' + String((j mod 5) + 1) + ', гр. 1'              , if(i=0, -1, 1), 8)
      #_IsValid_Vis(IsValidPriznStav, XMLAdrJ + '/ПризнСтав', 'Разд.2.1: стр. ' + String((j mod 5) + 1) + ', гр. 2'              , if(i=0, -1, 1), 8)
      #_IsValid_Dec('XXXXXXXXXX.XXX', XMLAdrJ + '/НалБаза'  , 'Разд.2.1: стр. ' + String((j mod 5) + 1) + ', гр. 3', 13, 3, False, if(i=0, -1, 1), 8)
      #_IsValid_Dec('XXXXXXXXXXX'   , XMLAdrJ + '/СумАкциз' , 'Разд.2.1: стр. ' + String((j mod 5) + 1) + ', гр. 4', 11, 0, False, if(i=0, -1, 1), 8)
    }
    // #endregion РАЗДЕЛ 2.1

    // #region РАЗДЕЛ 2.2
    CountJ := XMLMap.GetNodeCountByName(XMLAdrI + '/ОперПТнеРФ/ОперПТнеРФКод');   flJ := false;
    for (j := 0; j < CountJ; j++)
    {
      XMLAdrJ := XMLAdrI + '/ОперПТнеРФ/ОперПТнеРФКод' + getIter(j);
      if not GetFldVis(XMLAdrJ) continue;
      flI := true;
      #_IsValid    (IsValidKodPok_2 , XMLAdrJ + '/КодПок'   , 'Разд.2.2: стр. ' + String((j mod 5) + 1) + ', гр. 1'              , if(i=0, -1, 1), 8)
      #_IsValid_Vis(IsValidPriznStav, XMLAdrJ + '/ПризнСтав', 'Разд.2.2: стр. ' + String((j mod 5) + 1) + ', гр. 2'              , if(i=0, -1, 1), 8)
      #_IsValid_Dec('XXXXXXXXXX.XXX', XMLAdrJ + '/НалБаза'  , 'Разд.2.2: стр. ' + String((j mod 5) + 1) + ', гр. 3', 13, 3, False, if(i=0, -1, 1), 8)
      #_IsValid_Dec('XXXXXXXXXXX'   , XMLAdrJ + '/СумАкциз' , 'Разд.2.2: стр. ' + String((j mod 5) + 1) + ', гр. 4', 11, 0, False, if(i=0, -1, 1), 8)
    }
    // #endregion РАЗДЕЛ 2.2

    // #region РАЗДЕЛ 2.3
    if GetFldVis(XMLAdrI + '/АкцизВыч')
    {
      CountJ := XMLMap.GetNodeCountByName(XMLAdrI + '/АкцизВыч/АкцизВычКод');   flJ := false;
      for (j := 0; j < CountJ; j++)
      {
        XMLAdrJ := XMLAdrI + '/АкцизВыч/АкцизВычКод' + getIter(j);
        if not GetFldVis(XMLAdrJ) continue;
        flI := true;

        #_IsValid    (IsValidKodPok_3 , XMLAdrJ + '/КодПок'   , 'Разд.2.3: стр. ' + String((j mod 8) + 1) + ', гр. 1'              , if(i=0, -1, 1), 8)
        #_IsValid_Dec('XXXXXXXXXX.XXX', XMLAdrJ + '/ОбъемПТ'  , 'Разд.2.3: стр. ' + String((j mod 8) + 1) + ', гр. 2', 13, 3, False, if(i=0, -1, 1), 8)
        #_IsValid_Dec('XXXXXXXXXXX'   , XMLAdrJ + '/СумВычет' , 'Разд.2.3: стр. ' + String((j mod 8) + 1) + ', гр. 3', 11, 0, False, if(i=0, -1, 1), 8)
      }
    } // #endregion РАЗДЕЛ 2.3

    // #region РАЗДЕЛ 2.4
    if GetFldVis(XMLAdrI + '/АкцизВыч')
    {
      flI := true;
      #_IsValid    (IsValidKodPok_4, XMLAdrI + '/АкцизПУ/КодПок'  , 'Разд.2.4: стр. 1, гр. 1'              )
      #_IsValid_Dec('XXXXXXXXXXX'  , XMLAdrI + '/АкцизПУ/СумАкциз', 'Разд.2.4: стр. 1, гр. 2', 11, 0, False)

    }
    // #endregion РАЗДЕЛ 2.4

    // #region РАЗДЕЛ 2.4.1
    if GetFldVis(XMLAdrI + '/Акциз203.6')
    {
      CountJ := XMLMap.GetNodeCountByName(XMLAdrI + '/Акциз203.6/Акциз203.6Код');   flJ := false;
      for (j := 0; j < CountJ; j++)
      {
        XMLAdrJ := XMLAdrI + '/Акциз203.6/Акциз203.6Код' + getIter(j);
        if not GetFldVis(XMLAdrJ) continue;
        flI := true;
        #_IsValid    (IsValidKodPok_5, XMLAdrJ + '/КодПок'  , 'Разд.2.4.1: стр. ' + String((j mod 5) + 1) + ', гр. 1'              , if(i=0, -1, 1), 2)
        #_IsValid_Dec('XXXXXXXXXXX'  , XMLAdrJ + '/СумАкциз', 'Разд.2.4.1: стр. ' + String((j mod 5) + 1) + ', гр. 2', 11, 0, False, if(i=0, -1, 1), 2)
      }
    }
    // #endregion РАЗДЕЛ 2.4.1

    // #region РАЗДЕЛ 2.5
    if GetFldVis(XMLAdrI + '/ДокЭкспПТ')
    {
      CountJ := XMLMap.GetNodeCountByName(XMLAdrI + '/ДокЭкспПТ/ДокЭкспПТКод');   flJ := false;
      for (j := 0; j < CountJ; j++)
      {
        XMLAdrJ := XMLAdrI + '/ДокЭкспПТ/ДокЭкспПТКод' + getIter(j);
        if not GetFldVis(XMLAdrJ) continue;
        flI := true;

        #_IsValid    (IsValidKodPok_6 , XMLAdrJ + '/КодПок'    , 'Разд.2.5: стр. ' + String((j mod 5) + 1) + ', гр. 1'              , if(i=0, -1, 1), 4)
        #_IsValid_Dec('XXXXXXXXXX.XXX', XMLAdrJ + '/НалБаза'   , 'Разд.2.5: стр. ' + String((j mod 5) + 1) + ', гр. 2', 13, 3, False, if(i=0, -1, 1), 4)
        #_IsValid_Dec('XXXXXXXXXXX'   , XMLAdrJ + '/СумАкциз'  , 'Разд.2.5: стр. ' + String((j mod 5) + 1) + ', гр. 3', 11, 0, False, if(i=0, -1, 1), 4)
        #_IsValid    (IsValidPeriod   , XMLAdrJ + '/НалПер'    , 'Разд.2.5: стр. ' + String((j mod 5) + 1) + ', гр. 4'              , if(i=0, -1, 1), 4)
        #_IsValid    (IsValidOtchGod  , XMLAdrJ + '/Год'       , 'Разд.2.5: стр. ' + String((j mod 5) + 1) + ', гр. 5'              , if(i=0, -1, 1), 4)
      }
    } // #endregion РАЗДЕЛ 2.5

    if (not flI) MesErrStop(XMLAdrI + '/ОперПТРФ/ОперПТРФКод/КодПок', 'Раздел 2', 'Необходимо заполнить хотя бы один из подразделов Раздела 2');
  }
  // #endregion РАЗДЕЛ 2


  // #region ПРИЛОЖЕНИЕ 1
  CountI := XMLMap.GetNodeCountByName('Файл/Документ/АкцСпиртАлк/РасчНБВидПТ');
  for (i := 0; i < CountI; i++)
  {
    XMLAdrI := 'Файл/Документ/АкцСпиртАлк/РасчНБВидПТ' + getIter(i);
    if not GetFldVis(XMLAdrI) continue;

    #_IsValid(IsValidKodPT, XMLAdrI + '/КодПТ', 'Стр. 010')
    CountJ := XMLMap.GetNodeCountByName(XMLAdrI + '/РасчНБКод');   flJ := false;
    for (j := 0; j < CountJ; j++)
    {
      XMLAdrJ := XMLAdrI + '/РасчНБКод' + getIter(j);
      if not GetFldVis(XMLAdrJ) continue;
      flJ := true;
      #_IsValid    (IsValidKodPok_7 , XMLAdrJ + '/КодПок'   , 'Стр. '+LPadCh(String((j mod 20) + 1), '0', 2)+', гр. 1'              , if(i=0, -1, 1), 20)
      #_IsValid    (IsValidPriznStav, XMLAdrJ + '/ПризнСтав', 'Стр. '+LPadCh(String((j mod 20) + 1), '0', 2)+', гр. 2'              , if(i=0, -1, 1), 20)
      #_IsValid_Dec('XXX'           , XMLAdrJ + '/СодСпирт' , 'Стр. '+LPadCh(String((j mod 20) + 1), '0', 2)+', гр. 3',  3, 0, False, if(i=0, -1, 1), 20)
      #_IsValid_Dec('XXXXXXXXXX.XXX', XMLAdrJ + '/ОбъемПТ'  , 'Стр. '+LPadCh(String((j mod 20) + 1), '0', 2)+', гр. 4', 13, 3, False, if(i=0, -1, 1), 20)
      #_IsValid_Dec_Vis('XXXXXXXXXX.XXX', XMLAdrJ + '/НалБаза'  , 'Стр. '+LPadCh(String((j mod 20) + 1), '0', 2)+', гр. 5', 13, 3, False, if(i=0, -1, 1), 20)
      #_IsValid_Vis(IsValidPeriod   , XMLAdrJ + '/НалПер'   , 'Cтр. '+LPadCh(String((j mod 20) + 1), '0', 2)+', гр. 6'              , if(i=0, -1, 1), 20)
      #_IsValid_Vis(IsValidOtchGod  , XMLAdrJ + '/Год'      , 'Cтр. '+LPadCh(String((j mod 20) + 1), '0', 2)+', гр. 7'              , if(i=0, -1, 1), 20)

      if IsValidKodPok_6(GetStrVal(XMLAdrJ + '/КодПок'),'') and GetStrNull(XMLAdrJ + '/НалПер')
        MesErrStop(XMLAdrJ + '/НалПер', 'Cтр. '+LPadCh(String((j mod 20) + 1), '0', 2)+', гр. 6' , 'Поле обязательно заполнению, если гр.1 = 50001-50011');
      if IsValidKodPok_6(GetStrVal(XMLAdrJ + '/КодПок'),'') and GetStrNull(XMLAdrJ + '/Год')
        MesErrStop(XMLAdrJ + '/Год', 'Cтр. '+LPadCh(String((j mod 20) + 1), '0', 2)+', гр. 6' , 'Поле обязательно заполнению, если гр.1 = 50001-50011');
      if not GetStrNull(XMLAdrJ + '/НалБаза') and not KPT_P1(XMLAdrI + '/КодПТ')
        MesErrStop(XMLAdrJ + '/НалБаза', 'Стр. '+LPadCh(String((j mod 20) + 1), '0', 2)+', гр. 5', 'Графа 5 должна быть пуста, если Стр. 010 равна (232|271|272|284|285|310|320|330)');
      if  GetStrNull(XMLAdrJ + '/НалБаза') and KPT_P1(XMLAdrI + '/КодПТ')
        MesErrStop(XMLAdrJ + '/НалБаза', 'Стр. '+LPadCh(String((j mod 20) + 1), '0', 2)+', гр. 5', 'Графа 5 должна быть заполнена, если Стр. 010 не равна (232|271|272|284|285|310|320|330)');

   }
    if (not flJ) MesErrStop(XMLAdrI + '/РасчНБКод/КодПок', 'Приложение 1', 'Необходимо заполнить хотя бы одну строку раздела');
  }
  // #endregion ПРИЛОЖЕНИЕ 1

  // #region ПРИЛОЖЕНИЕ 2
  CountI := XMLMap.GetNodeCountByName('Файл/Документ/АкцСпиртАлк/РеалПТЭкспБГ184');
  for (i := 0; i < CountI; i++)
  {
    XMLAdrI := 'Файл/Документ/АкцСпиртАлк/РеалПТЭкспБГ184' + getIter(i);
    if not GetFldVis(XMLAdrI) continue;

    #_IsValid        (IsValidPriznDoc , XMLAdrI + '/ПризнакДок'      , 'Стр. 001'              )
    #_IsValid        (IsValidNomerBG  , XMLAdrI + '/НомерБГ'         , 'Стр. 010'              )
    #_IsValid        (IsValidDate     , XMLAdrI + '/ДатаВыдБГ'       , 'Стр. 020'              )
    #_IsValid        (IsValidDate     , XMLAdrI + '/ДатаНачБГ'       , 'Стр. 030'              )
    #_IsValid        (IsValidDate     , XMLAdrI + '/ДатаКонБГ'       , 'Стр. 040'              )
    #_IsValid_Dec    ('XXXXXXXXXXX'   , XMLAdrI + '/СуммаБГ'         , 'Стр. 050', 11, 0, False)
    #_IsValid_Dec_Vis('XXXXXXXXXXX'   , XMLAdrI + '/ПревАкОсвПдтвВс' , 'Стр. 055', 11, 0, False)
    flI :=  false;
    CountJ := XMLMap.GetNodeCountByName(XMLAdrI + '/СвРеалПТЭксп');
    for (j := 0; j < CountJ; j++)
    {
      XMLAdrJ := XMLAdrI + '/СвРеалПТЭксп' + getIter(j);
      if not GetFldVis(XMLAdrJ) continue;
      flI :=  true;
      flJ :=  false;
      #_IsValid(IsValidKodPT, XMLAdrJ + '/КодПТ', 'Стр. 060')
      CountZ := XMLMap.GetNodeCountByName(XMLAdrJ + '/АкОсвЭксп');
      for (z := 0; z < CountZ; z++)
      {
        XMLAdrZ := XMLAdrJ + '/АкОсвЭксп' + getIter(j);
        if not GetFldVis(XMLAdrZ) continue;
        flJ :=  true;
        #_IsValid    (IsValidKodPok_8 , XMLAdrZ + '/КодПок'   , 'Стр. 070, гр. 3'              )
        #_IsValid_Dec('XXXXXXXXXX.XXX', XMLAdrZ + '/ОбъемПТ'  , 'Стр. 070, гр. 4', 13, 3, False)
        #_IsValid_Dec('XXXXXXXXXXX'   , XMLAdrZ + '/СумАкциз' , 'Стр. 070, гр. 5', 11, 0, False)
      }
      if (not flJ) MesErrStop(XMLAdrJ + '/АкОсвЭксп/КодПок', 'Приложение 2', 'Необходимо заполнить хотя бы одну строку раздела');
      flJ :=  false;
      CountZ := XMLMap.GetNodeCountByName(XMLAdrJ + '/РеалПТЭкПдтвПер');
      for (z := 0; z < CountZ; z++)
      {
        XMLAdrZ := XMLAdrJ + '/РеалПТЭкПдтвПер' + getIter(j);
        if not GetFldVis(XMLAdrZ) continue;
        flJ :=  true;
        #_IsValid    (IsValidKodPok_9 , XMLAdrZ + '/КодПок'  , 'Стр. 080, гр. 3'              )
        #_IsValid_Dec('XXXXXXXXXX.XXX', XMLAdrZ + '/ОбъемПТ' , 'Стр. 080, гр. 4', 13, 3, False)
        #_IsValid_Dec('XXXXXXXXXXX'   , XMLAdrZ + '/СумАкциз', 'Стр. 080, гр. 5', 11, 0, False)
        #_IsValid    (IsValidPeriod   , XMLAdrZ + '/НалПер'  , 'Стр. 080, гр. 6'              )
        #_IsValid    (IsValidOtchGod  , XMLAdrZ + '/Год'     , 'Стр. 080, гр. 7'              )
      }
      if (not flJ) MesErrStop(XMLAdrJ + '/РеалПТЭкПдтвПер/КодПок', 'Приложение 2', 'Необходимо заполнить хотя бы одну строку раздела');
      flJ :=  false;
      CountZ := XMLMap.GetNodeCountByName(XMLAdrJ + '/РеалПТЭкПдтвПред');
      for (z := 0; z < CountZ; z++)
      {
        XMLAdrZ := XMLAdrJ + '/РеалПТЭкПдтвПред' + getIter(j);
        if not GetFldVis(XMLAdrZ) continue;
        flJ :=  true;
        #_IsValid    (IsValidKodPok_9 , XMLAdrZ + '/КодПок'  , 'Стр. 090, гр. 3'              )
        #_IsValid_Dec('XXXXXXXXXX.XXX', XMLAdrZ + '/ОбъемПТ' , 'Стр. 090, гр. 4', 13, 3, False)
        #_IsValid_Dec('XXXXXXXXXXX'   , XMLAdrZ + '/СумАкциз', 'Стр. 090, гр. 5', 11, 0, False)
        #_IsValid    (IsValidPeriod   , XMLAdrZ + '/НалПер'  , 'Стр. 090, гр. 6'              )
        #_IsValid    (IsValidOtchGod  , XMLAdrZ + '/Год'     , 'Стр. 090, гр. 7'              )
      }
      if (not flJ) MesErrStop(XMLAdrJ + '/РеалПТЭкПдтвПред/КодПок', 'Приложение 2', 'Необходимо заполнить хотя бы одну строку раздела');
      if not GetFldVis(XMLAdrJ+'/ПревАкОсвПдтв') continue;
      #_IsValid_Dec('XXXXXXXXXXX'   , XMLAdrJ+'/ПревАкОсвПдтв/СумАкциз', 'Стр. 100, гр. 5', 11, 0, False)
    }
    if (not flI) MesErrStop(XMLAdrI + '/СвРеалПТЭксп/КодПП', 'Приложение 2', 'Необходимо заполнить хотя бы одну строку раздела');
  } // #endregion ПРИЛОЖЕНИЕ 2

  // #region ПРИЛОЖЕНИЕ 3
  CountI := XMLMap.GetNodeCountByName('Файл/Документ/АкцСпиртАлк/СпРеалПер/СпРеалПокуп');
  for (i := 0; i < CountI; i++)
  {
    XMLAdrI := 'Файл/Документ/АкцСпиртАлк/СпРеалПер/СпРеалПокуп' + getIter(i);
    if not GetFldVis(XMLAdrI) continue;

    #_IsValid(IsValidINNUL       , XMLAdrI + '/ИННЮЛ'     , 'Стр. 010')
    #_IsValid(CheckError.Prov_INN, XMLAdrI + '/ИННЮЛ'     , 'Стр. 010')
    #_IsValid(IsValidKPP         , XMLAdrI + '/КПП'       , 'Стр. 020')
    #_IsValid(IsValidRegNomIzv   , XMLAdrI + '/РегНомИзв' , 'Стр. 030')
    #_IsValid(IsValidDate        , XMLAdrI + '/ДатаРегИзв', 'Стр. 040')

    CountJ := XMLMap.GetNodeCountByName(XMLAdrI + '/СпРеалПерКод');   flJ := false;
    for (j := 0; j < CountJ; j++)
    {
      XMLAdrJ := XMLAdrI + '/СпРеалПерКод' + getIter(j);
      if not GetFldVis(XMLAdrJ) continue;
      flJ := true;

      #_IsValid    (IsValidKodPok_10, XMLAdrJ + '/КодПок'    , 'Стр. '+LPadCh(String((j mod 20) + 1), '0', 2)+', гр. 1'              , if(i=0, -1, 1), 20)
      #_IsValid    (IsValidKodPT    , XMLAdrJ + '/КодСпирт'  , 'Стр. '+LPadCh(String((j mod 20) + 1), '0', 2)+', гр. 2'              , if(i=0, -1, 1), 20)
      #_IsValid_Dec('XXXXXXXXXX.XXX', XMLAdrJ + '/ОбъемСпирт', 'Стр. '+LPadCh(String((j mod 20) + 1), '0', 2)+', гр. 3', 13, 3, False, if(i=0, -1, 1), 20)
      #_IsValid    (IsValidKodPT    , XMLAdrJ + '/КодПП'     , 'Стр. '+LPadCh(String((j mod 20) + 1), '0', 2)+', гр. 4'              , if(i=0, -1, 1), 20)
      #_IsValid_Dec('XXXXXXXXXXX'   , XMLAdrJ + '/АвИзвещ'   , 'Стр. '+LPadCh(String((j mod 20) + 1), '0', 2)+', гр. 5', 11, 0, False, if(i=0, -1, 1), 20)
    }

    if (not flJ) MesErrStop(XMLAdrI + '/ОбРеалСпПок/КодПок', 'Приложение 3', 'Необходимо заполнить хотя бы одну строку раздела');
  } // #endregion ПРИЛОЖЕНИЕ 3

  // #region ПРИЛОЖЕНИЕ 4
  CountI := XMLMap.GetNodeCountByName('Файл/Документ/АкцСпиртАлк/СпПолучОрг');
  for (i := 0; i < CountI; i++)
  {
    XMLAdrI := 'Файл/Документ/АкцСпиртАлк/СпПолучОрг' + getIter(i);
    if not GetFldVis(XMLAdrI) continue;

    #_IsValid(IsValidPriznDoc    , XMLAdrI + '/ПризнОрг', 'Стр. 010'        )
    #_IsValid(IsValidINNUL       , XMLAdrI + '/ИННЮЛ'   , 'Стр. 010'        )
    #_IsValid(CheckError.Prov_INN, XMLAdrI + '/ИННЮЛ'   , 'Стр. 010'        )
    #_IsValid(IsValidKPP         , XMLAdrI + '/КПП'     , 'Стр. 020'        )
    #_IsValid(IsValidSerSvidPost , XMLAdrI + '/СерСвид' , 'Стр. 030 (серия)')
    #_IsValid(IsValidNomSvidPost , XMLAdrI + '/НомСвид' , 'Стр. 030 (номер)')
    flI := false;
    CountJ := XMLMap.GetNodeCountByName(XMLAdrI + '/СвДенСпирт');   flJ := false;
    for (j := 0; j < CountJ; j++)
    {
      XMLAdrJ := XMLAdrI + '/СвДенСпирт' + getIter(j);
      if not GetFldVis(XMLAdrJ) continue;
      flI := true;
      #_IsValid    (IsValidKodPT_111_121, XMLAdrJ + '/КодСпирт'    , 'Стр. 040'              )
      CountZ := XMLMap.GetNodeCountByName(XMLAdrJ + '/СвОбСпСчФ');   flJ := false;
      for (z := 0; z < CountZ; z++)
      {
        XMLAdrZ := XMLAdrJ + '/СвОбСпСчФ' + getIter(j);
        if not GetFldVis(XMLAdrZ) continue;
        flJ := true;

        #_IsValid        (IsValidText_256     , XMLAdrZ + '/НомСчФ'  , 'Стр. 050 (' + String((j mod 2) + 1) + ')'              , if(i=0, -1, 1), 2)
        #_IsValid        (IsValidDate         , XMLAdrZ + '/ДатаСчФ' , 'Стр. 060 (' + String((j mod 2) + 1) + ')'              , if(i=0, -1, 1), 2)
        #_IsValid_Dec    ('XXXXXXXXXX.XXX'    , XMLAdrZ + '/ОбСпСчФ' , 'Стр. 070 (' + String((j mod 2) + 1) + ')', 13, 3, False, if(i=0, -1, 1), 2)
        #_IsValid_Vis    (IsValidText_256     , XMLAdrZ + '/НомКСчФ' , 'Стр. 080 (' + String((j mod 2) + 1) + ')'              , if(i=0, -1, 1), 2)
        #_IsValid_Vis    (IsValidDate         , XMLAdrZ + '/ДатаКСчФ', 'Стр. 090 (' + String((j mod 2) + 1) + ')'              , if(i=0, -1, 1), 2)
        #_IsValid_Dec_Vis('XXXXXXXXXX.XXX'    , XMLAdrZ + '/ОбСпКСчФ', 'Стр. 100 (' + String((j mod 2) + 1) + ')', 13, 3, False, if(i=0, -1, 1), 2)
      }
      if (not flJ) MesErrStop(XMLAdrZ + '/НомСчФ', 'Приложение 4', 'Необходимо заполнить хотя бы одну строку раздела');
    }
    if (not flI) MesErrStop(XMLAdrJ + '/КодСпирт', 'Приложение 4', 'Необходимо заполнить хотя бы одну строку раздела');
  } // #endregion ПРИЛОЖЕНИЕ 4

  // #region ПРИЛОЖЕНИЕ 5
  CountI := XMLMap.GetNodeCountByName('Файл/Документ/АкцСпиртАлк/СпПриобИзвУп');
  for (i := 0; i < CountI; i++)
  {
    XMLAdrI := 'Файл/Документ/АкцСпиртАлк/СпПриобИзвУп' + getIter(i);
    if not GetFldVis(XMLAdrI) continue;


    #_IsValid    (IsValidRegNomIzv   , XMLAdrI + '/РегНомИзв'       , 'Стр. 010')
    #_IsValid    (IsValidDate        , XMLAdrI + '/ДатаРегИзв'      , 'Стр. 020')
    #_IsValid    (IsValidINNUL       , XMLAdrI + '/ИННЮЛ_Прод'      , 'Стр. 030')
    #_IsValid    (CheckError.Prov_INN, XMLAdrI + '/ИННЮЛ_Прод'      , 'Стр. 030')
    #_IsValid    (IsValidKPP         , XMLAdrI + '/КПП_Прод'        , 'Стр. 040')
    #_IsValid    (IsValidKodPT       , XMLAdrI + '/КодСпирт'        , 'Стр. 050')
    #_IsValid_Dec('XXXXXXXXXX.XXX'   , XMLAdrI + '/ОбСпИзвещВс'     , 'Стр. 060', 13, 3, False)
    #_IsValid_Dec('XXXXXXXXXXX'      , XMLAdrI + '/АвСпИзвещВс'     , 'Стр. 070', 11, 0, False)
    #_IsValid_Dec('XXXXXXXXXX.XXX'   , XMLAdrI + '/СпФактЗак'       , 'Стр. 080', 13, 3, False)
    #_IsValid_Dec('XXXXXXXXXXX'      , XMLAdrI + '/АкСпФактЗак'     , 'Стр. 090', 11, 0, False)
    #_IsValid_Dec('XXXXXXXXXX.XXX'   , XMLAdrI + '/ОстНеРеалППКонВс', 'Стр. 100', 13, 3, False)
    #_IsValid_Dec('XXXXXXXXXXX'      , XMLAdrI + '/АвНеРеалППКонВс' , 'Стр. 110', 11, 0, False)

    if GetFldVis(XMLAdrI + '/СвКорИзвещ')
    {
      #_IsValid    (IsValidRegNomIzv   , XMLAdrI + '/СвКорИзвещ/РегНомИзв'  , 'Стр. 120')
      #_IsValid    (IsValidDate        , XMLAdrI + '/СвКорИзвещ/ДатаРегИзв' , 'Стр. 130')
      #_IsValid    (IsValidINNUL       , XMLAdrI + '/СвКорИзвещ/ИННЮЛ_Пост' , 'Стр. 140')
      #_IsValid    (CheckError.Prov_INN, XMLAdrI + '/СвКорИзвещ/ИННЮЛ_Пост' , 'Стр. 140')
      #_IsValid    (IsValidKPP         , XMLAdrI + '/СвКорИзвещ/КПП'        , 'Стр. 150')
      #_IsValid    (IsValidKodPT       , XMLAdrI + '/СвКорИзвещ/КодСпирт'   , 'Стр. 160')
      #_IsValid_Dec('XXXXXXXXXX.XXX'   , XMLAdrI + '/СвКорИзвещ/ОбСпИзвещВс', 'Стр. 170', 13, 3, False)
      #_IsValid_Dec('XXXXXXXXXXX'      , XMLAdrI + '/СвКорИзвещ/АвСпИзвещВс', 'Стр. 180', 11, 0, False)
    }
    CountJ := XMLMap.GetNodeCountByName(XMLAdrI + '/СвИспСпВид');   flJ := false;
    for (j := 0; j < CountJ; j++)
    {
      XMLAdrJ := XMLAdrI + '/СвИспСпВид' + getIter(j);
      if not GetFldVis(XMLAdrJ) continue;
      flJ := true;

      #_IsValid        (IsValidKodPT     , XMLAdrJ + '/КодПП'             , 'Стр. 190'              )
      #_IsValid_Dec    ('XXXXXXXXXX.XXX' , XMLAdrJ + '/СпЗакупПрзвдПП'    , 'Стр. 200', 13, 3, False)
      #_IsValid_Dec_Vis('XXXXXXXXXX.XXX' , XMLAdrJ + '/СпПотерНормНач'    , 'Стр. 210', 13, 3, False)
      #_IsValid_Dec_Vis('XXXXXXXXXXX   ' , XMLAdrJ + '/АкОбПотерНорм'     , 'Стр. 220', 13, 0, False)
      #_IsValid_Dec_Vis('XXXXXXXXXX.XXX' , XMLAdrJ + '/СпПотерСвНормНач'  , 'Стр. 230', 13, 3, False)
      #_IsValid_Dec_Vis('XXXXXXXXXX.XXX' , XMLAdrJ + '/СпИспПрзвдПред'    , 'Стр. 240', 13, 3, False)
      #_IsValid_Dec_Vis('XXXXXXXXXXX   ' , XMLAdrJ + '/АкИсчПродРеалПред' , 'Стр. 250', 13, 0, False)
      #_IsValid_Dec_Vis('XXXXXXXXXX.XXX' , XMLAdrJ + '/ОстСпНеРеалНач'    , 'Стр. 260', 13, 3, False)
      #_IsValid_Dec_Vis('XXXXXXXXXX.XXX' , XMLAdrJ + '/СпПотерНормПер'    , 'Стр. 270', 13, 3, False)
      #_IsValid_Dec_Vis('XXXXXXXXXXX   ' , XMLAdrJ + '/АвПотерНормПер'    , 'Стр. 280', 13, 0, False)
      #_IsValid_Dec_Vis('XXXXXXXXXX.XXX' , XMLAdrJ + '/СпПотерСвНормПер'  , 'Стр. 290', 13, 3, False)
      #_IsValid_Dec_Vis('XXXXXXXXXX.XXX' , XMLAdrJ + '/СпИспПерВс'        , 'Стр. 300', 13, 3, False)
      #_IsValid_Dec_Vis('XXXXXXXXXX.XXX' , XMLAdrJ + '/СпИспПерРеалРФ'    , 'Стр. 301', 13, 3, False)
      #_IsValid_Dec_Vis('XXXXXXXXXX.XXX' , XMLAdrJ + '/СпИспПерРеалЕЭС'   , 'Стр. 302', 13, 3, False)
      #_IsValid_Dec_Vis('XXXXXXXXXX.XXX' , XMLAdrJ + '/СпИспПерРеалНеЕЭС' , 'Стр. 303', 13, 3, False)
      #_IsValid_Dec_Vis('XXXXXXXXXXX   ' , XMLAdrJ + '/АкИсчРеалПер'      , 'Стр. 310', 13, 0, False)
      #_IsValid_Dec_Vis('XXXXXXXXXXX   ' , XMLAdrJ + '/АкИсчРеалПерРФ'    , 'Стр. 311', 13, 0, False)
      #_IsValid_Dec_Vis('XXXXXXXXXXX   ' , XMLAdrJ + '/АкИсчРеалПерЕЭС'   , 'Стр. 312', 13, 0, False)
      #_IsValid_Dec_Vis('XXXXXXXXXXX   ' , XMLAdrJ + '/АкИсчРеалПерНеЕЭС' , 'Стр. 313', 13, 0, False)
      #_IsValid_Dec_Vis('XXXXXXXXXX.XXX' , XMLAdrJ + '/ОстСпНеРеалКон'    , 'Стр. 320', 13, 3, False)
      #_IsValid_Dec_Vis('XXXXXXXXXXX   ' , XMLAdrJ + '/АвСпНеРеалППКон'   , 'Стр. 330', 13, 0, False)
      #_IsValid_Dec_Vis('XXXXXXXXXXX   ' , XMLAdrJ + '/АвУплДистПодлВыч'  , 'Стр. 340', 13, 0, False)
    }
    if (not flJ) MesErrStop(XMLAdrI + '/СвИспСпВид/КодПП', 'Приложение 5 1.2', 'Необходимо заполнить хотя бы одну строку раздела');
  } // #endregion ПРИЛОЖЕНИЕ 5

  // #region ПРИЛОЖЕНИЕ 6

  CountI := XMLMap.GetNodeCountByName('Файл/Документ/АкцСпиртАлк/СпПриобИзвОсвУп');
  for (i := 0; i < CountI; i++)
  {
    XMLAdrI := 'Файл/Документ/АкцСпиртАлк/СпПриобИзвОсвУп' + getIter(i);
    if not GetFldVis(XMLAdrI) continue;
    #_IsValid        (IsValidPriznDoc    , XMLAdrI + '/ПризнакБГ'   , 'Стр. 001'              )
    #_IsValid        (IsValidNomerBG     , XMLAdrI + '/НомерБГ'     , 'Стр. 010'              )
    #_IsValid        (IsValidDate        , XMLAdrI + '/ДатаВыдБГ'   , 'Стр. 015'              )
    #_IsValid        (IsValidDate        , XMLAdrI + '/ДатаНачБГ'   , 'Стр. 020'              )
    #_IsValid        (IsValidDate        , XMLAdrI + '/ДатаКонБГ'   , 'Стр. 030'              )
    #_IsValid_Dec    ('XXXXXXXXXXX'      , XMLAdrI + '/СуммаБГ'     , 'Стр. 040', 11, 0, False)
    #_IsValid        (IsValidRegNomIzv   , XMLAdrI + '/РегНомИзв'   , 'Стр. 050'              )
    #_IsValid        (IsValidDate        , XMLAdrI + '/ДатаРегИзв'  , 'Стр. 060'              )
    #_IsValid        (IsValidINNUL       , XMLAdrI + '/ИННЮЛ_Пост'  , 'Стр. 070'              )
    #_IsValid        (CheckError.Prov_INN, XMLAdrI + '/ИННЮЛ_Пост'  , 'Стр. 070'              )
    #_IsValid        (IsValidKPP         , XMLAdrI + '/КПП_Пост'    , 'Стр. 080'              )
    #_IsValid        (IsValidKodPT       , XMLAdrI + '/КодСпирт'    , 'Стр. 090'              )
    #_IsValid_Dec    ('XXXXXXXXXX.XXX'   , XMLAdrI + '/ОбСпиртИзвВс', 'Стр. 100', 13, 3, False)
    #_IsValid_Dec    ('XXXXXXXXXXX'      , XMLAdrI + '/АвСпИзвещВс' , 'Стр. 110', 11, 0, False)
    #_IsValid_Dec    ('XXXXXXXXXX.XXX'   , XMLAdrI + '/СпФактЗак'   , 'Стр. 120', 13, 3, False)
    #_IsValid_Dec    ('XXXXXXXXXXX'      , XMLAdrI + '/АкСпФактЗак' , 'Стр. 130', 11, 0, False)
    #_IsValid        (IsValidDateMM      , XMLAdrI + '/НалНачПер100', 'Стр. 135'              )

    if GetFldVis(XMLAdrI + '/СведИзвещКор')
    {
      #_IsValid        (IsValidRegNomIzv   , XMLAdrI + '/СведИзвещКор/РегНомИзв'   , 'Стр. 140'              )
      #_IsValid        (IsValidDate        , XMLAdrI + '/СведИзвещКор/ДатаРегИзв'  , 'Стр. 150'              )
      #_IsValid        (IsValidINNUL       , XMLAdrI + '/СведИзвещКор/ИННЮЛ_Пост'  , 'Стр. 160'              )
      #_IsValid        (CheckError.Prov_INN, XMLAdrI + '/СведИзвещКор/ИННЮЛ_Пост'  , 'Стр. 160'              )
      #_IsValid        (IsValidKPP         , XMLAdrI + '/СведИзвещКор/КПП_Пост'    , 'Стр. 170'              )
      #_IsValid        (IsValidKodPT       , XMLAdrI + '/СведИзвещКор/КодСпирт'    , 'Стр. 180'              )
      #_IsValid_Dec    ('XXXXXXXXXX.XXX'   , XMLAdrI + '/СведИзвещКор/ОбСпиртИзв'  , 'Стр. 190', 13, 3, False)
      #_IsValid_Dec    ('XXXXXXXXXXX'      , XMLAdrI + '/СведИзвещКор/АвСпИзвещВс' , 'Стр. 200', 11, 0, False)
    }
    CountJ := XMLMap.GetNodeCountByName(XMLAdrI + '/СведИспСпВидПП');
    for (j := 0; j < CountJ; j++)
    {
      XMLAdrJ := XMLAdrI + '/СведИспСпВидПП' + getIter(j);
      if not GetFldVis(XMLAdrJ) continue;
      #_IsValid    (IsValidKodPT    , XMLAdrJ + '/КодВидПП'          , 'Стр. 210'              )
      #_IsValid_Dec('XXXXXXXXXX.XXX', XMLAdrJ + '/ОбСпПриобПроизв'   , 'Стр. 220', 13, 3, False)
      #_IsValid_Dec('XXXXXXXXXXX'   , XMLAdrJ + '/АвСпПриобПроизв'   , 'Стр. 230', 11, 0, False)
      #_IsValid_Dec('XXXXXXXXXX.XXX', XMLAdrJ + '/ОстСпНереалППНач'  , 'Стр. 240', 13, 3, False)
      #_IsValid_Dec('XXXXXXXXXX.XXX', XMLAdrJ + '/ОбППРеалПерРФ'     , 'Стр. 250', 13, 3, False)
      #_IsValid_Dec('XXXXXXXXXXX'   , XMLAdrJ + '/АкППРеалПерРФ'     , 'Стр. 255', 11, 0, False)
      #_IsValid_Dec('XXXXXXXXXX.XXX', XMLAdrJ + '/ОбППРеалПерИн'     , 'Стр. 260', 13, 3, False)
      #_IsValid_Dec('XXXXXXXXXXX'   , XMLAdrJ + '/АкППРеалПерИн'     , 'Стр. 265', 11, 0, False)
      #_IsValid_Dec('XXXXXXXXXX.XXX', XMLAdrJ + '/ОбППРеалИнПдтвПер' , 'Стр. 266', 13, 3, False)
      #_IsValid_Dec('XXXXXXXXXXX'   , XMLAdrJ + '/АкППРеалИнПдтвПер' , 'Стр. 267', 11, 0, False)
      #_IsValid_Dec('XXXXXXXXXX.XXX', XMLAdrJ + '/ОбППРеалПерЕЭС'    , 'Стр. 270', 13, 3, False)
      #_IsValid_Dec('XXXXXXXXXXX'   , XMLAdrJ + '/АкППРеалПерЕЭС'    , 'Стр. 275', 11, 0, False)
      #_IsValid_Dec('XXXXXXXXXX.XXX', XMLAdrJ + '/ОбППРеалЕЭСПдтвПер', 'Стр. 276', 13, 3, False)
      #_IsValid_Dec('XXXXXXXXXXX'   , XMLAdrJ + '/АкППРеалЕЭСПдтвПер', 'Стр. 277', 11, 0, False)
      #_IsValid_Dec('XXXXXXXXXX.XXX', XMLAdrJ + '/ОбППРеалПредРФ'    , 'Стр. 280', 13, 3, False)
      #_IsValid_Dec('XXXXXXXXXXX'   , XMLAdrJ + '/АкППРеалПредРФ'    , 'Стр. 285', 11, 0, False)
      #_IsValid_Dec('XXXXXXXXXX.XXX', XMLAdrJ + '/ОбППРеалПредИнЕЭС' , 'Стр. 290', 13, 3, False)
      #_IsValid_Dec('XXXXXXXXXXX'   , XMLAdrJ + '/АкППРеалПредИнЕЭС' , 'Стр. 295', 11, 0, False)
      #_IsValid_Dec('XXXXXXXXXX.XXX', XMLAdrJ + '/ОбФПотНормКон'     , 'Стр. 300', 13, 3, False)
      #_IsValid_Dec('XXXXXXXXXXX'   , XMLAdrJ + '/АвФПотНормКон'     , 'Стр. 305', 11, 0, False)
      #_IsValid_Dec('XXXXXXXXXX.XXX', XMLAdrJ + '/ОбФПотСвНормКон'   , 'Стр. 310', 13, 3, False)
      #_IsValid_Dec('XXXXXXXXXXX'   , XMLAdrJ + '/АвФПотСвНормКон'   , 'Стр. 315', 11, 0, False)
      #_IsValid_Dec('XXXXXXXXXX.XXX', XMLAdrJ + '/ОстСпНереалППКон'  , 'Стр. 320', 13, 3, False)
    }
    CountJ := XMLMap.GetNodeCountByName(XMLAdrI + '/СведФИспОбязБГ');
    for (j := 0; j < CountJ; j++)
    {
      XMLAdrJ := XMLAdrI + '/СведФИспОбязБГ' + getIter(j);
      if not GetFldVis(XMLAdrJ) continue;
      #_IsValid    (IsValidKodPT    , XMLAdrJ + '/КодВидПП'        , 'Стр. 325'              )
      #_IsValid_Dec('XXXXXXXXXXX'   , XMLAdrJ + '/АкИсчПерРасч'    , 'Стр. 330', 11, 0, False)
      #_IsValid_Dec('XXXXXXXXXXX'   , XMLAdrJ + '/АкОсвПдтвКНП'    , 'Стр. 340', 11, 0, False)
      #_IsValid_Dec('XXXXXXXXXXX'   , XMLAdrJ + '/АкОсвНеПдтвКНП'  , 'Стр. 350', 11, 0, False)
      #_IsValid_Dec('XXXXXXXXXXX'   , XMLAdrJ + '/АвФПотСпНорм'    , 'Стр. 360', 11, 0, False)
      #_IsValid_Dec('XXXXXXXXXXX'   , XMLAdrJ + '/АвУплКонРасчСрок', 'Стр. 370', 11, 0, False)
      #_IsValid_Dec('XXXXXXXXXX.XXX', XMLAdrJ + '/ОстСпНереалППКон', 'Стр. 380', 13, 3, False)
    }
    CountJ := XMLMap.GetNodeCountByName(XMLAdrI + '/СвАвКонРасчВыч');
    for (j := 0; j < CountJ; j++)
    {
      XMLAdrJ := XMLAdrI + '/СвАвКонРасчВыч' + getIter(j);
      if not GetFldVis(XMLAdrJ) continue;
      #_IsValid    (IsValidKodPT    , XMLAdrJ + '/КодВидПП'         , 'Стр. 385'              )
      #_IsValid_Dec('XXXXXXXXXXX'   , XMLAdrJ + '/АвУплКонРасч'     , 'Стр. 390', 11, 0, False)
      #_IsValid_Dec('XXXXXXXXXXX'   , XMLAdrJ + '/АвНеВычНачПер'    , 'Стр. 400', 11, 0, False)
      #_IsValid_Dec('XXXXXXXXXX.XXX', XMLAdrJ + '/ОстСпНеРеалППНач' , 'Стр. 405', 13, 3, False)
      #_IsValid_Dec('XXXXXXXXXX.XXX', XMLAdrJ + '/ОбППРеалПерРФ'    , 'Стр. 410', 13, 3, False)
      #_IsValid_Dec('XXXXXXXXXXX'   , XMLAdrJ + '/АкППРеалПерРФ'    , 'Стр. 415', 11, 0, False)
      #_IsValid_Dec('XXXXXXXXXX.XXX', XMLAdrJ + '/ОбППРеалПерИн'    , 'Стр. 420', 13, 3, False)
      #_IsValid_Dec('XXXXXXXXXXX'   , XMLAdrJ + '/АкППРеалПерИн'    , 'Стр. 425', 11, 0, False)
      #_IsValid_Dec('XXXXXXXXXX.XXX', XMLAdrJ + '/ОбППРеалПерЕЭС'   , 'Стр. 430', 13, 3, False)
      #_IsValid_Dec('XXXXXXXXXXX'   , XMLAdrJ + '/АкППРеалПерЕЭС'   , 'Стр. 435', 11, 0, False)
      #_IsValid_Dec('XXXXXXXXXX.XXX', XMLAdrJ + '/ОбФПотНормПер'    , 'Стр. 440', 13, 3, False)
      #_IsValid_Dec('XXXXXXXXXXX'   , XMLAdrJ + '/АкФПотНормПер'    , 'Стр. 445', 11, 0, False)
      #_IsValid_Dec('XXXXXXXXXX.XXX', XMLAdrJ + '/ОбФПотСвНормПер'  , 'Стр. 450', 13, 3, False)
      #_IsValid_Dec('XXXXXXXXXXX'   , XMLAdrJ + '/ОбФПотСвНормПер'  , 'Стр. 455', 11, 0, False)
      #_IsValid_Dec('XXXXXXXXXXX'   , XMLAdrJ + '/АкФПотСвНормПер'  , 'Стр. 460', 11, 0, False)
      #_IsValid_Dec('XXXXXXXXXXX'   , XMLAdrJ + '/АвДистПодлВыч'    , 'Стр. 470', 11, 0, False)
      #_IsValid_Dec('XXXXXXXXXXX'   , XMLAdrJ + '/АвНеВычКонПер'    , 'Стр. 480', 11, 0, False)
      #_IsValid_Dec('XXXXXXXXXX.XXX', XMLAdrJ + '/АвНеВычКонПер'    , 'Стр. 490', 13, 3, False)
    }

  }
  // #endregion ПРИЛОЖЕНИЕ 6

@end.
// #endregion ДЕЙСТВИЯ ВЫПОЛНЯЕМЫЕ ПРИ ПРОВЕРКЕ
//************************************************************************************************************


//============================================================================================================
// #region ДЕЙСТВИЯ ВЫПОЛНЯЕМЫЕ ПРИ РАСЧЕТЕ
//------------------------------------------------------------------------------------------------------------
@Script On_Recalc : boolean;
  //==========================================================================================================
  // #region СЕРВИС On_Recalc
  //----------------------------------------------------------------------------------------------------------
  procedure Log(_strAdr, _strMes, _strVal : string);
  {
    MesError.InsertRasch('', _strAdr, _strMes, _strVal);
  }

  procedure LogIter(_strAdr, _strMes, _strVal : string; _iter, _mod : integer);
  {
    MesError.InsertRasch('', _strAdr, _strMes, _strVal, _iter, _mod);
  }

  procedure LogProc(_strAdr, _strMes, _strVal : string; fl : boolean);
  {
    if fl
    then MesError.InsertRasch('', _strAdr, _strMes + ' / 100', _strVal + ' / 100')
    else MesError.InsertRasch('', _strAdr, _strMes, _strVal);
  }

  procedure SV(_adr : string; var _val : double);
  {
    SetDblVal(_adr, _val);
    _val := GetDblVal(_adr);
  }

  procedure SV_S(_adr : string; var _val : string);
  {
    SetDblVal(_adr, _val);
    _val := GetStrVal(_adr);
  }
  procedure SetNulVal_Get(_adr : string; var _val : double);
  {
    SetNulVal(_adr);
    _val := GetDblVal(_adr);
  }

  procedure GetCutStr (var inputStr : string);
  {
    inputStr := SubStr(inputStr, 1, Length(inputStr) - 3);
    if (inputStr = '') inputStr := '0';
  }

  function GetNStr (_Num, _Count : longint) : string;
  { Result := if (Length(String(_Count)) > 1, LPadCh(String((_Num mod _Count) + 1), '0', Length(String(_Count))), String((_Num mod _Count) + 1)); }

  function KPT_P1(_adr: string) : boolean;
  { Result := true;
    case GetStrVal(_adr) of
      '232', '271', '272', '284','285', '310', '320', '330' : Result := false;
    end;
  }
  // #endregion СЕРВИС On_Recalc
  //**********************************************************************************************************
@begin
  On_Visable;
  //------------------------------------------------------------------------------------------------------------

  if ((GetStrVal('Файл/Документ/ДатаДок') = '') or (GetStrVal('Файл/Документ/ДатаДок') = 'ДД.ММ.ГГГГ'))
    SetFldVal('Файл/Документ/ДатаДок', DateToStr(Cur_Date, XMLMap.GetAttrVFormatByName('Файл/Документ/ДатаДок')));

  var KodOKEI_EdIzm_744 : double;
  KodOKEI_EdIzm_744 := 1;
  var XMLAdrI, XMLAdrJ, XMLAdrZ : string;
  var CountI, CountJ, CountZ
    , I, J, Z : integer;
  var fl, flProc : boolean;

  var aStAkc : string;
  var valStAkc : double;


  var aR1_020   , aR1_030   , aR1_040   , aR1_050   , aR1_060
    , aR2_010   , aR21_Gr1  , aR21_Gr3  , aR21_Gr4  , aR22_Gr1, aR22_Gr3, aR22_Gr4
    , aR23_Gr1  , aR23_Gr2  , aR23_Gr3  , aR24_Gr1  , aR24_Gr2, aR241_Gr1, aR241_Gr2
    , aR25_Gr1  , aR25_Gr2  , aR25_Gr3
    , aP1_010   , aP1_Gr1   , aP1_Gr3   , aP1_Gr4   , aP1_Gr5
    , aP2_050   , aP2_055   , aP6_060   , aP2_70_Gr3, aP2_70_Gr4, aP2_70_Gr5
    , aP2_80_Gr3, aP2_80_Gr4, aP2_80_Gr5, aP2_90_Gr3, aP2_90_Gr4, aP2_90_Gr5, aP2_100
    , aP3__Gr1  , aP3__Gr2  , aP3__Gr3  , aP3__Gr4  , aP3__Gr5
    , aP5_060   , aP5_100   , aP5_110   , aP5_190   , aP5_200   , aP5_210   , aP5_220   , aP5_230   , aP5_240
    , aP5_270   , aP5_280   , aP5_300   , aP5_301   , aP5_302   , aP5_303   , aP5_310   , aP5_311   , aP5_312
    , aP5_313   , aP5_320   , aP5_330
    , aP6_090   , aP6_210   , aP6_220   , aP6_230   , aP6_240   , aP6_250   , aP6_255   , aP6_260   , aP6_265
    , aP6_267   , aP6_270   , aP6_275   , aP6_276   , aP6_277   , aP6_280   , aP6_285   , aP6_290   , aP6_295
    , aP6_300   , aP6_305   , aP6_310   , aP6_315   , aP6_320   , aP6_325   , aP6_330   , aP6_340   , aP6_350
    , aP6_360   , aP6_370   , aP6_380   , aP6_385   , aP6_390   , aP6_400   , aP6_405   , aP6_410   , aP6_415
    , aP6_420   , aP6_425   , aP6_430   , aP6_435   , aP6_440   , aP6_445   , aP6_450   , aP6_455   , aP6_460
    , aP6_470   , aP6_480   , aP6_490   , aP6_266
    , sR1_020   , sR1_030   , sR2_010   , sR21_Gr1  , sR22_Gr1 ,  sR23_Gr1  , sR24_Gr1  , sR241_Gr1 , sR25_Gr1
    , sP1_010   , sP1_Gr1   , sP2_060   , sP2_70_Gr3, sP2_80_Gr3, sP2_90_Gr3, sP3__Gr1  , sP3__Gr2
    , sP5_190   , sP6_090   , sP6_210   , sP6_325   , sP6_385
    , vR21_Gr4  , mR21_Gr4  , vR22_Gr4  , mR22_Gr4  , vR23_Gr3  , mR23_Gr3  , vR25_Gr3  , mR25_Gr3  , vR24_Gr2  , mR24_Gr2
    , vP1_Gr5   , mP1_Gr5   , vP2_055   , mP2_055   , vP2_100   , mP2_100
    , vP2_70_Gr5, mP2_70_Gr5, vP2_80_Gr5, mP2_80_Gr5, vP2_90_Gr5, mP2_90_Gr5
    , vP5_060   , vP5_100   , vP5_110   , vP5_220   , vP5_280   , vP5_300   , vP5_310   , vP5_320   , vP5_330
    , mP5_060   , mP5_100   , mP5_110   , mP5_220   , mP5_280   , mP5_300   , mP5_310   , mP5_320   , mP5_330
    , vP6_230   , vP6_320   , vP6_370   , vP6_380   , vP6_415   , vP6_420   , vP6_425   , vP6_435   , vP6_445
    , vP6_455   , vP6_460   , vP6_480   , vP6_490   , mP6_230   , mP6_320   , mP6_370   , mP6_380   , mP6_415
    , mP6_420   , mP6_425   , mP6_435   , mP6_445   , mP6_455   , mP6_460   , mP6_480   , mP6_490
    , buf_vR21_Gr4, buf_vR22_Gr4, buf_vR23_Gr3 : string = '';



  var dR1_040   , dR1_050   , dR1_060
    , dR21_Gr3  , dR21_Gr4  , dR22_Gr3  , dR22_Gr4  , dR23_Gr2  , dR23_Gr3  , dR24_Gr2, dR241_Gr2  , dR25_Gr2  , dR25_Gr3
    , dP1_Gr3   , dP1_Gr4   , dP1_Gr5
    , dP2_050   , dP2_055   , dP2_70_Gr4, dP2_70_Gr5, dP2_80_Gr4, dP2_80_Gr5, dP2_90_Gr4, dP2_90_Gr5, dP2_100
    , dP3__Gr3  , dP3__Gr4  , dP3__Gr5
    , dP5_060   , dP5_100   , dP5_110   , dP5_200   , dP5_210   , dP5_220    , dP5_230  , dP5_240  , dP5_270
    , dP5_280   , dP5_300   , dP5_301   , dP5_302   , dP5_303   , dP5_310    , dP5_311  , dP5_312  , dP5_313
    , dP5_320   , dP5_330   , dP5_340
    , dP6_220   , dP6_230   , dP6_240   , dP6_250   , dP6_255   , dP6_260    , dP6_265  , dP6_266
    , dP6_267   , dP6_270   , dP6_275   , dP6_276   , dP6_277   , dP6_280    , dP6_285  , dP6_290   , dP6_295
    , dP6_300   , dP6_305   , dP6_310   , dP6_315   , dP6_320   , dP6_330    , dP6_340  , dP6_350
    , dP6_360   , dP6_370   , dP6_380   , dP6_390   , dP6_400   , dP6_405    , dP6_410  , dP6_415
    , dP6_420   , dP6_425   , dP6_430   , dP6_435   , dP6_440   , dP6_445    , dP6_450  , dP6_455   , dP6_460
    , dP6_470   , dP6_480   , dP6_490
    , buf_dR21_Gr4, buf_dR22_Gr4, buf_dR23_Gr3: double;

  // #region РАЗДЕЛ 2
  CountI := XMLMap.GetNodeCountByName('Файл/Документ/АкцСпиртАлк/РасчАкц');
  for (i := 0; i < CountI; i++)
  {

    XMLAdrI := 'Файл/Документ/АкцСпиртАлк/РасчАкц' + getIter(i);
    if GetStrNull(XMLAdrI + '/КодПТ') continue;

    aStAkc := XMLAdrI + '/СтАкц';
    valStAkc := GetDblVal(aStAkc);

    flProc := (GetDblVal(XMLAdrI + '/ЕдИзм') = KodOKEI_EdIzm_744);
    if (flProc) valStAkc := valStAkc / 100;

    // #region РАЗДЕЛ 2.1
    CountJ := XMLMap.GetNodeCountByName(XMLAdrI + '/ОперПТРФ/ОперПТРФКод');
    buf_dR21_Gr4 := 0;
    buf_vR21_Gr4 := '';
    for (j := 0; j < CountJ; j++)
    {

      XMLAdrJ := XMLAdrI + '/ОперПТРФ/ОперПТРФКод' + getIter(j);
      aR21_Gr1 := XMLAdrJ + '/КодПок'  ;
      aR21_Gr3 := XMLAdrJ + '/НалБаза' ;  dR21_Gr3 := GetDblVal(aR21_Gr3);
      aR21_Gr4 := XMLAdrJ + '/СумАкциз';

      if     not GetStrNull(aR21_Gr1)
         and not GetStrNull(aR21_Gr3)
      {
        dR21_Gr4 := dR21_Gr3 * valStAkc;   SV(aR21_Gr4, dR21_Gr4);
        buf_dR21_Gr4 += dR21_Gr4;   buf_vR21_Gr4 += GV(aR21_Gr4) + ' + ';
        if (flProc)
        {
          vR21_Gr4 := GV(aR21_Gr4)+' = '+GV(aR21_Gr3)+' * '+GV(aStAkc)+' / 100';
          mR21_Gr4 := 'Раздел 2.1 (' + GetNStr(j,5) + '): Гр. 4 = гр. 3 * Ставку акциза / 100';
        } else {
          vR21_Gr4 := GV(aR21_Gr4)+' = '+GV(aR21_Gr3)+' * '+GV(aStAkc);
          mR21_Gr4 := 'Раздел 2.1 (' + GetNStr(j,5) + '): Гр. 4 = гр. 3 * Ставку акциза';
        }

        LogIter(aR21_Gr4, mR21_Gr4, vR21_Gr4, if(i=0, -1, 1), 8);
      }
      else SetNulVal_Get(aR21_Gr4, dR21_Gr3);
    }
    // #endregion РАЗДЕЛ 2.1

    // #region РАЗДЕЛ 2.2
    buf_dR22_Gr4 := 0;
    buf_vR22_Gr4 := '';
    CountJ := XMLMap.GetNodeCountByName(XMLAdrI + '/ОперПТнеРФ/ОперПТнеРФКод');
    for (j := 0; j < CountJ; j++)
    {
      XMLAdrJ := XMLAdrI + '/ОперПТнеРФ/ОперПТнеРФКод' + getIter(j);
      aR22_Gr1 := XMLAdrJ + '/КодПок'  ;  sR22_Gr1 := GetStrVal(aR22_Gr1);
      aR22_Gr3 := XMLAdrJ + '/НалБаза' ;  dR22_Gr3 := GetDblVal(aR22_Gr3);
      aR22_Gr4 := XMLAdrJ + '/СумАкциз';
      if     not GetStrNull(aR22_Gr1)
         and not GetStrNull(aR22_Gr3)
      {
        dR22_Gr4 := dR22_Gr3 * valStAkc;   SV(aR22_Gr4, dR22_Gr4);
        if (sR22_Gr1 = '20003') or (sR22_Gr1 = '20004') or (sR22_Gr1 = '20005') or (sR22_Gr1 = '20007') or
           (sR22_Gr1 = '20009') or (sR22_Gr1 = '20011') or (sR22_Gr1 = '20013') or (sR22_Gr1 = '20015')
        {
          buf_dR22_Gr4 += dR22_Gr4;
          buf_vR22_Gr4 += GV(aR22_Gr4) + ' + ';
        }
        if (flProc)
        {
          vR22_Gr4 := GV(aR22_Gr4)+' = '+GV(aR22_Gr3)+' * '+GV(aStAkc)+' / 100';
          mR22_Gr4 := 'Раздел 2.2 (' + GetNStr(j,5) + '): Гр. 4 = гр. 3 * Ставку акциза / 100';
        } else {
          vR22_Gr4 := GV(aR22_Gr4)+' = '+GV(aR22_Gr3)+' * '+GV(aStAkc);
          mR22_Gr4 := 'Раздел 2.2 (' + GetNStr(j,5) + '): Гр. 4 = гр. 3 * Ставку акциза';
        }

        LogIter(aR22_Gr4, mR22_Gr4, vR22_Gr4, if(i=0, -1, 1), 5);
      }
      else SetNulVal_Get(aR22_Gr4, dR22_Gr3);
    }
    // #endregion РАЗДЕЛ 2.2

    // #region РАЗДЕЛ 2.3
    buf_dR23_Gr3 := 0;
    buf_vR23_Gr3 := '';
    CountJ := XMLMap.GetNodeCountByName(XMLAdrI + '/АкцизВыч/АкцизВычКод');
    for (j := 0; j < CountJ; j++)
    {
      XMLAdrJ := XMLAdrI + '/АкцизВыч/АкцизВычКод' + getIter(j);
      aR23_Gr1 := XMLAdrJ + '/КодПок'  ;
      aR23_Gr2 := XMLAdrJ + '/ОбъемПТ' ;  dR23_Gr2 := GetDblVal(aR23_Gr2);
      aR23_Gr3 := XMLAdrJ + '/СумВычет';
      if     not GetStrNull(aR23_Gr1)
         and not GetStrNull(aR23_Gr2)
      {

        dR23_Gr3 := dR23_Gr2 * valStAkc;   SV(aR23_Gr3, dR23_Gr3);
        buf_dR23_Gr3 += dR23_Gr3;   buf_vR23_Gr3 += GV(aR23_Gr3) + ' + ';
        if (flProc)
        {
          vR23_Gr3 := GV(aR23_Gr3)+' = '+GV(aR23_Gr2)+' * '+GV(aStAkc)+' / 100';
          mR23_Gr3 := 'Раздел 2.3 (' + GetNStr(j,5) + '): Гр. 3 = гр. 2 * Ставку акциза / 100';
        } else {
          vR23_Gr3 := GV(aR23_Gr3)+' = '+GV(aR23_Gr2)+' * '+GV(aStAkc);
          mR23_Gr3 := 'Раздел 2.3 (' + GetNStr(j,5) + '): Гр. 3 = гр. 2 * Ставку акциза';
        }

        LogIter(aR23_Gr3, mR23_Gr3, vR23_Gr3, if(i=0, -1, 1), 5);
      }
      else SetNulVal_Get(aR23_Gr3, dR23_Gr2);
    }
    // #endregion РАЗДЕЛ 2.3

    // #region РАЗДЕЛ 2.4

    dR24_Gr2 := buf_dR21_Gr4 +buf_dR22_Gr4 -buf_dR23_Gr3;

    aR24_Gr1 := XMLAdrI + '/АкцизПУ/КодПок';
    aR24_Gr2 := XMLAdrI + '/АкцизПУ/СумАкциз';

    GetCutStr(buf_vR21_Gr4);
    GetCutStr(buf_vR22_Gr4);
    GetCutStr(buf_vR23_Gr3);

    if (dR24_Gr2 >= 0)
    {
      SV(aR24_Gr2, dR24_Gr2);
      SV_S(aR24_Gr1, '40001');

      vR24_Gr2 := GV(aR24_Gr2)+' = ('+buf_vR21_Gr4+') + ('+buf_vR22_Gr4+') - ('+buf_vR23_Gr3+')';
      mR24_Gr2 := 'Раздел 2.4 Гр. 2 = сумма(Разд.2.1, гр.4) + сумма(Разд.2.2, гр.4 (гр.2 = 20003, 20004, 20005, 20007, 20009, 20011, 20013, 20015))- сумма(Разд.2.3, гр.3)';

      Log(aR24_Gr2, mR24_Gr2, vR24_Gr2);
    } else {
      SV(aR24_Gr2, ABS(dR24_Gr2));
      SV_S(aR24_Gr1, '40002');

      vR24_Gr2 := GV(aR24_Gr2)+' = ('+buf_vR21_Gr4+') + ('+buf_vR22_Gr4+') - ('+buf_vR23_Gr3+')';
      mR24_Gr2 := 'Раздел 2.4 Гр. 2 = сумма(Разд.2.1, гр.4) + сумма(Разд.2.2, гр.4 (гр.2 = 20003, 20004, 20005, 20007, 20009, 20011, 20013, 20015))- сумма(Разд.2.3, гр.3';

      Log(aR24_Gr2, mR24_Gr2, vR24_Gr2);
    }

    // #endregion РАЗДЕЛ 2.4

    // #region РАЗДЕЛ 2.4.1
    CountJ := XMLMap.GetNodeCountByName(XMLAdrI + '/Акциз203.6/Акциз203.6Код');
    for (j := 0; j < CountJ; j++)
    {
      XMLAdrJ := XMLAdrI + '/Акциз203.6/Акциз203.6Код' + getIter(j);
      aR241_Gr1 := XMLAdrJ + '/КодПок'  ;
      aR241_Gr2 := XMLAdrJ + '/СумАкциз';  dR241_Gr2 := GetDblVal(aR241_Gr2);
    }
    // #endregion РАЗДЕЛ 2.4.1
    // #region РАЗДЕЛ 2.5
    CountJ := XMLMap.GetNodeCountByName(XMLAdrI + '/ДокЭкспПТ/ДокЭкспПТКод');
    for (j := 0; j < CountJ; j++)
    {
      XMLAdrJ := XMLAdrI + '/ДокЭкспПТ/ДокЭкспПТКод' + getIter(j);
      aR25_Gr1 := XMLAdrJ + '/КодПок'  ;
      aR25_Gr2 := XMLAdrJ + '/НалБаза' ;  dR25_Gr2 := GetDblVal(aR25_Gr2);
      aR25_Gr3 := XMLAdrJ + '/СумАкциз';
      if     not GetStrNull(aR25_Gr1)
         and not GetStrNull(aR25_Gr2)
      {
        dR25_Gr3 := dR25_Gr2 * valStAkc;   SV(aR25_Gr3, dR25_Gr3);
        if (flProc)
        {
          vR25_Gr3 := GV(aR25_Gr3)+' = '+GV(aR25_Gr2)+' * '+GV(aStAkc)+' / 100';
          mR25_Gr3 := 'Раздел 2.5 (' + GetNStr(j,5) + '): Гр. 3 = гр. 2 * Ставку акциза / 100';
        } else {
          vR25_Gr3 := GV(aR25_Gr3)+' = '+GV(aR25_Gr2)+' * '+GV(aStAkc);
          mR25_Gr3 := 'Раздел 2.5 (' + GetNStr(j,5) + '): Гр. 3 = гр. 2 * Ставку акциза';
        }

        LogIter(aR25_Gr3, mR25_Gr3, vR25_Gr3, if(i=0, -1, 1), 5);
      }
      else SetNulVal_Get(aR25_Gr3, dR25_Gr2);
    }
    // #endregion РАЗДЕЛ 2.5
  }

  // #endregion РАЗДЕЛ 2

  // #region ПРИЛОЖЕНИЕ 1
  CountI := XMLMap.GetNodeCountByName('Файл/Документ/АкцСпиртАлк/РасчНБВидПТ');
  for (i := 0; i < CountI; i++)
  {
    XMLAdrI := 'Файл/Документ/АкцСпиртАлк/РасчНБВидПТ' + getIter(i);
    if GetStrNull(XMLAdrI + '/КодПТ') continue;
    CountJ := XMLMap.GetNodeCountByName(XMLAdrI + '/РасчНБКод');
    for (j := 0; j < CountJ; j++)
    {
      XMLAdrJ := XMLAdrI + '/РасчНБКод' + getIter(j);
      aP1_Gr1 := XMLAdrJ + '/КодПок'  ;
      aP1_Gr3 := XMLAdrJ + '/СодСпирт';  dP1_Gr3 := GetDblVal(aP1_Gr3);
      aP1_Gr4 := XMLAdrJ + '/ОбъемПТ' ;  dP1_Gr4 := GetDblVal(aP1_Gr4);
      aP1_Gr5 := XMLAdrJ + '/НалБаза' ;

      if     not GetStrNull(aP1_Gr1)
         and not GetStrNull(aP1_Gr3)
         and not GetStrNull(aP1_Gr4) and KPT_P1(XMLAdrI + '/КодПТ')
      {
        dP1_Gr5 := dP1_Gr3 * dP1_Gr4/100;   SV(aP1_Gr5, dP1_Gr5);

        vP1_Gr5 := GV(aP1_Gr5)+' = '+GV(aP1_Gr3)+' * '+GV(aP1_Gr4)+' / 100';
        mP1_Gr5 := 'Приложение 1 (' + GetNStr(j,20) + '): Гр. 5 = гр. 3 * гр. 5 / 100';

        LogIter(aP1_Gr5, mP1_Gr5, vP1_Gr5, if(i=0, -1, 1), 20);
      }
      else SetNulVal_Get(aP1_Gr5, dP1_Gr4);
    }
  }
  // #endregion ПРИЛОЖЕНИЕ 1

  // #region ПРИЛОЖЕНИЕ 2
  CountI := XMLMap.GetNodeCountByName('Файл/Документ/АкцСпиртАлк/РеалПТЭкспБГ184');
  for (i := 0; i < CountI; i++)
  {
    XMLAdrI := 'Файл/Документ/АкцСпиртАлк/РеалПТЭкспБГ184' + getIter(i);
    if not GetFldVis(XMLAdrI)continue ;

    aP2_055 := XMLAdrI + '/ПревАкОсвПдтвВс'; dP2_055 := 0;
    CountJ := XMLMap.GetNodeCountByName(XMLAdrI + '/СвРеалПТЭксп');
    for (j := 0; j < CountJ; j++)
    {
      XMLAdrJ := XMLAdrI + '/СвРеалПТЭксп' + getIter(j);
      if GetStrNull(XMLAdrJ + '/КодПТ') continue;

      aP2_100 := XMLAdrJ + '/ПревАкОсвПдтв/СумАкциз'
      aStAkc := XMLAdrJ + '/СтАкц';
      valStAkc := GetDblVal(aStAkc);
      flProc := (GetDblVal(XMLAdrJ + '/ЕдИзм') = KodOKEI_EdIzm_744);
      if (flProc) valStAkc := valStAkc / 100;

      var bufP2_70_Gr5 : double = 0;
      var bufvP2_70_Gr5 : string = '';
      CountZ := XMLMap.GetNodeCountByName(XMLAdrJ + '/АкОсвЭксп');
      for (z := 0; z < CountZ; z++)
      {
        XMLAdrZ := XMLAdrJ + '/АкОсвЭксп' + getIter(z);
        aP2_70_Gr3 := XMLAdrZ + '/КодПок'  ;
        aP2_70_Gr4 := XMLAdrZ + '/ОбъемПТ';  dP2_70_Gr4 := GetDblVal(aP2_70_Gr4);
        aP2_70_Gr5 := XMLAdrZ + '/СумАкциз' ;
        if   not GetStrNull(aP2_70_Gr3)
         and not GetStrNull(aP2_70_Gr4)
        {
          dP2_70_Gr5 := dP2_70_Gr4 * valStAkc;
          SV(aP2_70_Gr5, dP2_70_Gr5);
          if flProc
          {
            vP2_70_Gr5 := GV(aP2_70_Gr5)+' = '+GV(aP2_70_Gr4)+' * '+GV(aStAkc)+' / 100';
            mP2_70_Gr5 := 'Приложение 2 Стр 070 гр. 5 = гр. 4 * Ставку акциза / 100';
          }
          else
          {
            vP2_70_Gr5 := GV(aP2_70_Gr5)+' = '+GV(aP2_70_Gr4)+' * '+GV(aStAkc);
            mP2_70_Gr5 := 'Приложение 2 Стр 070 гр. 5 = гр. 4 * Ставку акциза';
          }
          Log(aP2_70_Gr5, mP2_70_Gr5, vP2_70_Gr5);
        }
        else SetNulVal_Get(aP2_70_Gr5, dP2_70_Gr4);
        bufP2_70_Gr5 += + dP2_70_Gr5;
        bufvP2_70_Gr5 += GV(aP2_70_Gr5) + ' + ';
      }

      var bufP2_80_Gr5 : double = 0;
      var bufvP2_80_Gr5 : string = '';
      CountZ := XMLMap.GetNodeCountByName(XMLAdrJ + '/РеалПТЭкПдтвПер');
      for (z := 0; z < CountZ; z++)
      {
        XMLAdrZ := XMLAdrJ + '/РеалПТЭкПдтвПер' + getIter(z);
        aP2_80_Gr3 := XMLAdrZ + '/КодПок'  ;
        aP2_80_Gr4 := XMLAdrZ + '/ОбъемПТ';  dP2_80_Gr4 := GetDblVal(aP2_80_Gr4);
        aP2_80_Gr5 := XMLAdrZ + '/СумАкциз' ;
        if   not GetStrNull(aP2_80_Gr3)
         and not GetStrNull(aP2_80_Gr4)
        {
          dP2_80_Gr5 := dP2_80_Gr4 * valStAkc;
          SV(aP2_80_Gr5, dP2_80_Gr5);
          if flProc
          {
            vP2_80_Gr5 := GV(aP2_80_Gr5)+' = '+GV(aP2_80_Gr4)+' * '+GV(aStAkc)+' / 100';
            mP2_80_Gr5 := 'Приложение 2 Стр 080 гр. 5 = гр. 4 * Ставку акциза / 100';
          }
          else
          {
            vP2_80_Gr5 := GV(aP2_80_Gr5)+' = '+GV(aP2_80_Gr4)+' * '+GV(aStAkc);
            mP2_80_Gr5 := 'Приложение 2 Стр 080 гр. 5 = гр. 4 * Ставку акциза';
          }
          Log(aP2_80_Gr5, mP2_80_Gr5, vP2_80_Gr5);
        }
        else SetNulVal_Get(aP2_80_Gr5, dP2_80_Gr4);
        bufP2_80_Gr5 := bufP2_80_Gr5 + dP2_80_Gr5;
        bufvP2_80_Gr5 += GV(aP2_80_Gr5) + ' + ';
      }
      var bufP2_90_Gr5 : double = 0;
      var bufvP2_90_Gr5 : string = '';
      CountZ := XMLMap.GetNodeCountByName(XMLAdrJ + '/РеалПТЭкПдтвПред');
      for (z := 0; z < CountZ; z++)
      {
        XMLAdrZ := XMLAdrJ + '/РеалПТЭкПдтвПред' + getIter(z);
        aP2_90_Gr3 := XMLAdrZ + '/КодПок'  ;
        aP2_90_Gr4 := XMLAdrZ + '/ОбъемПТ';  dP2_90_Gr4 := GetDblVal(aP2_90_Gr4 );
        aP2_90_Gr5 := XMLAdrZ + '/СумАкциз' ;
        if   not GetStrNull(aP2_90_Gr3)
         and not GetStrNull(aP2_90_Gr4)
        {
          dP2_90_Gr5 := dP2_90_Gr4 * valStAkc;
          SV(aP2_90_Gr5, dP2_90_Gr5);
          if flProc
          {
            vP2_90_Gr5 := GV(aP2_90_Gr5)+' = '+GV(aP2_90_Gr4)+' * '+GV(aStAkc)+' / 100';
            mP2_90_Gr5 := 'Приложение 2 Стр 090 гр. 5 = гр. 4 * Ставку акциза / 100';
          }
          else
          {
            vP2_90_Gr5 := GV(aP2_90_Gr5)+' = '+GV(aP2_90_Gr4)+' * '+GV(aStAkc);
            mP2_90_Gr5 := 'Приложение 2 Стр 090 гр. 5 = гр. 4 * Ставку акциза';
          }
          Log(aP2_90_Gr5, mP2_90_Gr5, vP2_90_Gr5);
        }
        else SetNulVal_Get(aP2_90_Gr5, dP2_90_Gr4);
        bufP2_90_Gr5 := bufP2_90_Gr5 + dP2_90_Gr5;
        bufvP2_90_Gr5 += GV(aP2_90_Gr5) + ' + ';
      }
      dP2_100 := bufP2_70_Gr5 -bufP2_80_Gr5 - bufP2_90_Gr5;
      SV(aP2_100, dP2_100);
      GetCutStr(bufvP2_70_Gr5);
      GetCutStr(bufvP2_80_Gr5);
      GetCutStr(bufvP2_90_Gr5);
      vP2_100 := GV(aP2_100)+' = ('+(bufvP2_70_Gr5)+') - ('+(bufvP2_80_Gr5)+') - ('+(bufvP2_90_Gr5) + ')';
      mP2_100 := 'Приложение 2 Стр 100 = Стр 070 гр. 5 - Стр 080 гр. 5 - Стр 090 гр. 5';
      Log(aP2_100, mP2_100, vP2_100);

      dP2_055 += dP2_100;  SV(aP2_055, dP2_055);  vP2_055 += GV(aP2_100) + ' + ';

    }
    GetCutStr(vP2_055);

    vP2_055 := GV(aP2_055)+' = '+vP2_055;
    mP2_055 := 'Приложение 2 Стр 055 = Сумма Стр 100';
    Log(aP2_055, mP2_055, vP2_055);
  }
  // #endregion ПРИЛОЖЕНИЕ 2

  // region ПРИЛОЖЕНИЕ 5
  CountI := XMLMap.GetNodeCountByName('Файл/Документ/АкцСпиртАлк/СпПриобИзвУп');
  for (i := 0; i < CountI; i++)
  {
    XMLAdrI := 'Файл/Документ/АкцСпиртАлк/СпПриобИзвУп' + getIter(i);
    if not GetFldVis(XMLAdrI)continue ;

    aP5_060 := XMLAdrI + '/ОбСпИзвещВс';      dP5_060 := 0;
    aP5_100 := XMLAdrI + '/ОстНеРеалППКонВс'; dP5_100 := 0;
    aP5_110 := XMLAdrI + '/АвНеРеалППКонВс';  dP5_110 := 0;
    CountJ := XMLMap.GetNodeCountByName(XMLAdrI + '/СвИспСпВид');
    for (j := 0; j < CountJ; j++)
    {
      XMLAdrJ := XMLAdrI + '/СвИспСпВид' + getIter(j);
      if not GetFldVis(XMLAdrJ)continue ;
      aP5_200 := XMLAdrJ + '/СпЗакупПрзвдПП';    dP5_200 := GetDblVal(aP5_200);
      aP5_210 := XMLAdrJ + '/СпПотерНормНач';    dP5_210 := GetDblVal(aP5_210);
      aP5_220 := XMLAdrJ + '/АкОбПотерНорм';     dP5_220 := 0;
      aP5_230 := XMLAdrJ + '/СпПотерСвНормНач';  dP5_230 := GetDblVal(aP5_230);
      aP5_240 := XMLAdrJ + '/СпИспПрзвдПред';    dP5_240 := GetDblVal(aP5_240);
      aP5_270 := XMLAdrJ + '/СпПотерНормПер';    dP5_270 := GetDblVal(aP5_270);
      aP5_280 := XMLAdrJ + '/АвПотерНормПер';    dP5_280 := 0;
      aP5_300 := XMLAdrJ + '/СпИспПерВс';        dP5_300 := 0;
      aP5_301 := XMLAdrJ + '/СпИспПерРеалРФ';    dP5_301 := GetDblVal(aP5_301);
      aP5_302 := XMLAdrJ + '/СпИспПерРеалЕЭС';   dP5_302 := GetDblVal(aP5_302);
      aP5_303 := XMLAdrJ + '/СпИспПерРеалНеЕЭС'; dP5_303 := GetDblVal(aP5_303);
      aP5_310 := XMLAdrJ + '/АкИсчРеалПер';      dP5_310 := 0;
      aP5_311 := XMLAdrJ + '/АкИсчРеалПерРФ';    dP5_311 := GetDblVal(aP5_311);
      aP5_312 := XMLAdrJ + '/АкИсчРеалПерЕЭС';   dP5_312 := GetDblVal(aP5_312);
      aP5_313 := XMLAdrJ + '/АкИсчРеалПерНеЕЭС'; dP5_313 := GetDblVal(aP5_313);
      aP5_320 := XMLAdrJ + '/ОстСпНеРеалКон';    dP5_320 := 0;
      aP5_330 := XMLAdrJ + '/АвСпНеРеалППКон';   dP5_330 := 0;

      aStAkc := XMLAdrJ + '/СтАкц';
      valStAkc := GetDblVal(aStAkc);
      flProc := (GetDblVal(XMLAdrJ + '/ЕдИзм') = KodOKEI_EdIzm_744);
      if (flProc) valStAkc := valStAkc / 100;

      dP5_220 := dP5_210 * valStAkc; SV(aP5_220, dP5_220);
      if flProc
      {
        vP5_220 := GV(aP5_220)+' = '+GV(aP5_210)+' * '+GV(aStAkc)+' / 100';
        mP5_220 := 'Приложение 5 1.2 Стр 220  = Стр 210* Ставку акциза / 100';
      }
      else
      {
        vP5_220 := GV(aP5_220)+' = '+GV(aP5_210)+' * '+GV(aStAkc);
        mP5_220 := 'Приложение 5 1.2 Стр 220 = Стр 210 * Ставку акциза';
      }
      Log(aP5_220, mP5_220, vP5_220);

      dP5_280 := dP5_270 * valStAkc; SV(aP5_280, dP5_280);
      if flProc
      {
        vP5_280 := GV(aP5_280)+' = '+GV(aP5_270)+' * '+GV(aStAkc)+' / 100';
        mP5_280 := 'Приложение 5 1.2 Стр 280  = Стр 270* Ставку акциза / 100';
      }
      else
      {
        vP5_280 := GV(aP5_280)+' = '+GV(aP5_270)+' * '+GV(aStAkc);
        mP5_280 := 'Приложение 5 1.2 Стр 280 = Стр 270 * Ставку акциза';
      }
      Log(aP5_280, mP5_280, vP5_280);

      dP5_300 := dP5_301 + dP5_302 + dP5_303; SV(aP5_300, dP5_300);
      vP5_300 := GV(aP5_300)+' = '+GV(aP5_301)+' + '+GV(aP5_302)+' + '+GV(aP5_303);
      mP5_300 := 'Приложение 5 1.2 Стр 300 = Стр 301 +Стр 302 + Стр 303';
      Log(aP5_300, mP5_300, vP5_300);

      dP5_310 := dP5_311 + dP5_312 + dP5_313; SV(aP5_310, dP5_310);
      vP5_310 := GV(aP5_310)+' = '+GV(aP5_311)+' + '+GV(aP5_312)+' + '+GV(aP5_313);
      mP5_310 := 'Приложение 5 1.2 Стр 310 = Стр 311 +Стр 312 + Стр 313';
      Log(aP5_310, mP5_310, vP5_310);

      dP5_320 := dP5_200 - dP5_210 - dP5_230 - dP5_240 - dP5_270; SV(aP5_320, dP5_320);
      vP5_320 := GV(aP5_320)+' = '+GV(aP5_200)+' - '+GV(aP5_210)+' - '+GV(aP5_230)+' - '+GV(aP5_240)+' - '+GV(aP5_270);
      mP5_320 := 'Приложение 5 1.2 Стр 320 = Стр 200 - Стр 210 - Стр 230 - Стр 240 - Стр 270';
      Log(aP5_320, mP5_320, vP5_320);

      dP5_330 := dP5_320 * valStAkc; SV(aP5_330, dP5_330);
      if flProc
      {
        vP5_330 := GV(aP5_330)+' = '+GV(aP5_320)+' * '+GV(aStAkc)+' / 100';
        mP5_330 := 'Приложение 5 1.2 Стр 330  = Стр 320* Ставку акциза / 100';
      }
      else
      {
        vP5_330 := GV(aP5_330)+' = '+GV(aP5_320)+' * '+GV(aStAkc);
        mP5_330 := 'Приложение 5 1.2 Стр 330 = Стр 320 * Ставку акциза';
      }
      Log(aP5_330, mP5_330, vP5_330);

      dP5_060 += dP5_200;
      vP5_060 += GV(aP5_200) + ' + ';
      dP5_100 += dP5_320;
      vP5_100 += GV(aP5_320) + ' + ';
      dP5_110 += dP5_330;
      vP5_110 += GV(aP5_330) + ' + ';
    }
    GetCutStr(vP5_060);
    GetCutStr(vP5_100);
    GetCutStr(vP5_110);
    SV(aP5_060, dP5_060);
    SV(aP5_100, dP5_100);
    SV(aP5_110, dP5_110);
    vP5_060 :=  GV(aP5_060)+' = '+ vP5_060;
    mP5_060 := 'Приложение 5 Стр 060 = Сумма Стр. 200 Приложения 5 1.2 ';
    Log(aP5_060, mP5_060, vP5_060);

    vP5_100 :=  GV(aP5_100)+' = '+ vP5_100;
    mP5_100 := 'Приложение 5 Стр 100 = Сумма Стр. 320 Приложения 5 1.2 ';
    Log(aP5_100, mP5_100, vP5_100);

    vP5_110 :=  GV(aP5_110)+' = '+ vP5_110;
    mP5_110 := 'Приложение 5 Стр 110 = Сумма Стр. 330 Приложения 5 1.2 ';
    Log(aP5_110, mP5_110, vP5_110);

  }
  // #endregion ПРИЛОЖЕНИЕ 5

  // #region ПРИЛОЖЕНИЕ 6
   CountI := XMLMap.GetNodeCountByName('Файл/Документ/АкцСпиртАлк/СпПриобИзвОсвУп');
  for (i := 0; i < CountI; i++)
  {
    XMLAdrI := 'Файл/Документ/АкцСпиртАлк/СпПриобИзвОсвУп' + getIter(i);
    if not GetFldVis(XMLAdrI) continue;

    CountJ := XMLMap.GetNodeCountByName(XMLAdrI + '/СведИспСпВидПП');
    for (j := 0; j < CountJ; j++)
    {
      XMLAdrJ := XMLAdrI + '/СведИспСпВидПП' + getIter(j);
      if not GetFldVis(XMLAdrJ) continue;
      aP6_210 := XMLAdrJ + '/КодВидПП'         ;
      aP6_220 := XMLAdrJ + '/ОбСпПриобПроизв'  ;   dP6_220 := GetDblVal(aP6_220);
      aP6_230 := XMLAdrJ + '/АвСпПриобПроизв'  ;   dP6_230 := 0;
      aP6_250 := XMLAdrJ + '/ОбППРеалПерРФ'    ;   dP6_250 := GetDblVal(aP6_250);
      aP6_260 := XMLAdrJ + '/ОбППРеалПерИн'    ;   dP6_260 := GetDblVal(aP6_260);
      aP6_270 := XMLAdrJ + '/ОбППРеалПерЕЭС'   ;   dP6_270 := GetDblVal(aP6_270);
      aP6_280 := XMLAdrJ + '/ОбППРеалПредРФ'   ;   dP6_280 := GetDblVal(aP6_280);
      aP6_290 := XMLAdrJ + '/ОбППРеалПредИнЕЭС';   dP6_290 := GetDblVal(aP6_290);
      aP6_300 := XMLAdrJ + '/ОбФПотНормКон'    ;   dP6_300 := GetDblVal(aP6_300);
      aP6_310 := XMLAdrJ + '/ОбФПотСвНормКон'  ;   dP6_310 := GetDblVal(aP6_310);
      aP6_320 := XMLAdrJ + '/ОстСпНереалППКон' ;   dP6_320 := 0;

      aStAkc := XMLAdrJ + '/СтАкц';
      valStAkc := GetDblVal(aStAkc);
      flProc := (GetDblVal(XMLAdrJ + '/ЕдИзм') = KodOKEI_EdIzm_744);
      if (flProc) valStAkc := valStAkc / 100;
      dP6_230 := dP6_220 * valStAkc;
      SV(aP6_230, dP6_230);
      if flProc
      {
        vP6_230 := GV(aP6_230)+' = '+GV(aP6_220)+' * '+GV(aStAkc)+' / 100';
        mP6_230 := 'Приложение 6 1.2 Стр 230 = Стр 220 * Ставку акциза / 100';
      }
      else
      {
        vP6_230 := GV(aP6_230)+' = '+GV(aP6_220)+' * '+GV(aStAkc);
        mP6_230 := 'Приложение 6 1.2 Стр 230 = Стр 220 * Ставку акциза ';
      }
      Log(aP6_230, mP6_230, vP6_230);
      dP6_320 := dP6_220 - dP6_250 - dP6_260 - dP6_270 - dP6_280 - dP6_290 - dP6_300 - dP6_310;
      SV(aP6_320, dP6_320);
      vP6_320 := GV(aP6_320)+' = '+GV(aP6_220)+' - '+GV(aP6_250)+' - '+GV(aP6_260)+' - '+GV(aP6_270)+' - '+GV(aP6_280)+' - '+GV(aP6_290)+' - ' +GV(aP6_300)+' - '+GV(aP6_310);
      mP6_320 := 'Приложение 6 1.2 Стр 320 = Стр 220 - Стр 250 - Стр 260 - Стр 270 - Стр 280 - Стр 290 - Стр 300 - Стр 310';
      Log(aP6_320, mP6_320, vP6_320);

    }
    CountJ := XMLMap.GetNodeCountByName(XMLAdrI + '/СведФИспОбязБГ');
    for (j := 0; j < CountJ; j++)
    {
      XMLAdrJ := XMLAdrI + '/СведФИспОбязБГ' + getIter(j);
      if not GetFldVis(XMLAdrJ) continue;
      aP6_325 := XMLAdrJ + '/КодВидПП'        ; sP6_325 := GetStrVal(aP6_325);
      aP6_330 := XMLAdrJ + '/АкИсчПерРасч'    ; dP6_330 := GetDblVal(aP6_330);
      aP6_340 := XMLAdrJ + '/АкОсвПдтвКНП'    ; dP6_340 := GetDblVal(aP6_340);
      aP6_360 := XMLAdrJ + '/АвФПотСпНорм'    ; dP6_360 := GetDblVal(aP6_360);
      aP6_370 := XMLAdrJ + '/АвУплКонРасчСрок'; dP6_370 := 0;
      aP6_380 := XMLAdrJ + '/ОстСпНереалППКон'; dP6_380 := 0;

      var buf_P2_230, buf_P2_320   : double;   buf_P2_230  := buf_P2_320  := 0;
      var buf_vP2_230, buf_vP2_320 : string;   buf_vP2_230 := buf_vP2_320 := '';
      CountZ := XMLMap.GetNodeCountByName(XMLAdrI + '/СведИспСпВидПП');
       for (z := 0; z < CountZ; z++)
       {
         XMLAdrZ := XMLAdrI + '/СведИспСпВидПП' + getIter(z);
         if not GetFldVis(XMLAdrZ) continue;
         aP6_210 := XMLAdrZ + '/КодВидПП' ;           sP6_210 := GetStrVal(aP6_210);
         aP6_230 := XMLAdrZ + '/АвСпПриобПроизв'  ;   dP6_230 := GetStrVal(aP6_230);
         aP6_320 := XMLAdrZ + '/ОстСпНереалППКон' ;   dP6_320 := GetDblVal(aP6_320);

         if sP6_210 = sP6_325
         {
           buf_P2_230  += dP6_230;
           buf_vP2_230 := GV(aP6_220)+' + ';
           buf_P2_320  += dP6_320;
           buf_vP2_320 := GV(aP6_320)+' + ';
         }
       }
       GetCutStr(buf_vP2_230);
       GetCutStr(buf_vP2_320);
       dP6_370 := buf_P2_230 - dP6_330 - dP6_340 - dP6_360;
       SV(aP6_370, dP6_370);
       vP6_370 := GV(aP6_370)+' = ('+buf_vP2_230+') - '+GV(aP6_330)+' - '+GV(aP6_340)+' - '+GV(aP6_360);
       mP6_370 := 'Приложение 6 1.3 Стр 370 = Сумма (Стр 230) - Стр 330 - Стр 340 - Стр 360';
       Log(aP6_370, mP6_370, vP6_370);
       dP6_380 := buf_P2_320;
       SV(aP6_380, dP6_380);
       vP6_380 := GV(aP6_380)+' = '+buf_vP2_320;
       mP6_380 := 'Приложение 6 1.3 Стр 370 = Сумма (Стр 320)';
       Log(aP6_380, mP6_380, vP6_380);

    }
    CountJ := XMLMap.GetNodeCountByName(XMLAdrI + '/СвАвКонРасчВыч');
    for (j := 0; j < CountJ; j++)
    {
      XMLAdrJ := XMLAdrI + '/СвАвКонРасчВыч' + getIter(j);
      if not GetFldVis(XMLAdrJ) continue;
      aP6_400 := XMLAdrJ + '/АвНеВычНачПер'    ;  dP6_400 := GetDblVal(aP6_400);
      aP6_405 := XMLAdrJ + '/ОстСпНеРеалППНач' ;  dP6_405 := GetDblVal(aP6_405);
      aP6_410 := XMLAdrJ + '/ОбППРеалПерРФ'    ;  dP6_410 := GetDblVal(aP6_410);
      aP6_415 := XMLAdrJ + '/АкППРеалПерРФ'    ;  dP6_415 := 0;
      aP6_420 := XMLAdrJ + '/ОбППРеалПерИн'    ;  dP6_420 := GetDblVal(aP6_420);
      aP6_425 := XMLAdrJ + '/АкППРеалПерИн'    ;  dP6_425 := 0;
      aP6_430 := XMLAdrJ + '/ОбППРеалПерЕЭС'   ;  dP6_430 := GetDblVal(aP6_430);
      aP6_435 := XMLAdrJ + '/АкППРеалПерЕЭС'   ;  dP6_435 := 0;
      aP6_440 := XMLAdrJ + '/ОбФПотНормПер'    ;  dP6_440 := GetDblVal(aP6_440);
      aP6_445 := XMLAdrJ + '/АкФПотНормПер'    ;  dP6_445 := 0;
      aP6_450 := XMLAdrJ + '/ОбФПотСвНормПер'  ;  dP6_450 := GetDblVal(aP6_450);
      aP6_455 := XMLAdrJ + '/АкФПотСвНормПер'  ;  dP6_455 := 0;
      aP6_460 := XMLAdrJ + '/АвПодлВыч'        ;  dP6_460 := 0;
      aP6_480 := XMLAdrJ + '/АвНеВычКонПер'    ;  dP6_480 := 0;
      aP6_490 := XMLAdrJ + '/ОстНеРеалППКон'   ;  dP6_490 := 0;

      aStAkc := XMLAdrJ + '/СтАкц';
      valStAkc := GetDblVal(aStAkc);
      flProc := (GetDblVal(XMLAdrJ + '/ЕдИзм') = KodOKEI_EdIzm_744);
      if (flProc) valStAkc := valStAkc / 100;

      dP6_415 := dP6_410 * valStAkc;
      SV(aP6_415, dP6_415);
      if flProc       {
        vP6_415 := GV(aP6_415)+' = '+GV(aP6_410)+' * '+GV(aStAkc)+' / 100';
        mP6_415 := 'Приложение 6 1.4 Стр 415 = Стр 410 * Ставку акциза / 100';
      }
      else       {
        vP6_415 := GV(aP6_415)+' = '+GV(aP6_410)+' * '+GV(aStAkc);
        mP6_415 := 'Приложение 6 1.4 Стр 415 = Стр 410 * Ставку акциза ';
      }
      Log(aP6_415, mP6_415, vP6_415);

      dP6_425 := dP6_420 * valStAkc;
      SV(aP6_425, dP6_425);
      if flProc      {
        vP6_425 := GV(aP6_425)+' = '+GV(aP6_420)+' * '+GV(aStAkc)+' / 100';
        mP6_425 := 'Приложение 6 1.4 Стр 425 = Стр 420 * Ставку акциза / 100';
      }
      else       {
        vP6_425 := GV(aP6_425)+' = '+GV(aP6_420)+' * '+GV(aStAkc);
        mP6_425 := 'Приложение 6 1.4 Стр 425 = Стр 420 * Ставку акциза ';
      }
      Log(aP6_425, mP6_425, vP6_425);

      dP6_435 := dP6_430 * valStAkc;
      SV(aP6_435, dP6_435);
      if flProc      {
        vP6_435 := GV(aP6_435)+' = '+GV(aP6_430)+' * '+GV(aStAkc)+' / 100';
        mP6_435 := 'Приложение 6 1.4 Стр 435 = Стр 430 * Ставку акциза / 100';
      }
      else      {
        vP6_435 := GV(aP6_435)+' = '+GV(aP6_430)+' * '+GV(aStAkc);
        mP6_435 := 'Приложение 6 1.4 Стр 435 = Стр 430 * Ставку акциза ';
      }
      Log(aP6_435, mP6_435, vP6_435);

      dP6_445 := dP6_440 * valStAkc;
      SV(aP6_445, dP6_445);
      if flProc      {
        vP6_445 := GV(aP6_445)+' = '+GV(aP6_440)+' * '+GV(aStAkc)+' / 100';
        mP6_445 := 'Приложение 6 1.4 Стр 445 = Стр 440 * Ставку акциза / 100';
      }
      else      {
        vP6_445 := GV(aP6_445)+' = '+GV(aP6_440)+' * '+GV(aStAkc);
        mP6_445 := 'Приложение 6 1.4 Стр 445 = Стр 440 * Ставку акциза ';
      }
      Log(aP6_445, mP6_445, vP6_445);

      dP6_455 := dP6_450 * valStAkc;
      SV(aP6_455, dP6_455);
      if flProc      {
        vP6_455 := GV(aP6_455)+' = '+GV(aP6_450)+' * '+GV(aStAkc)+' / 100';
        mP6_455 := 'Приложение 6 1.4 Стр 455 = Стр 450 * Ставку акциза / 100';
      }
      else       {
        vP6_455 := GV(aP6_455)+' = '+GV(aP6_450)+' * '+GV(aStAkc);
        mP6_455 := 'Приложение 6 1.4 Стр 455 = Стр 450 * Ставку акциза ';
      }
      Log(aP6_455, mP6_455, vP6_455);

      dP6_460 := dP6_415 + dP6_425 + dP6_435 + dP6_445 ;
      SV(aP6_460, dP6_460);
      vP6_460 := GV(aP6_460)+' = '+GV(aP6_415)+' + '+GV(aP6_425)+' + '+GV(aP6_435)+' + '+GV(aP6_445);
      mP6_460 := 'Приложение 6 1.4 Стр 460 = Стр 415 - Стр 425 - Стр 434 - Стр 445 ';
      Log(aP6_460, mP6_460, vP6_460);

      dP6_480 := dP6_400 - dP6_460;
      SV(aP6_480, dP6_480);
      vP6_480 := GV(aP6_480)+' = '+GV(aP6_400)+' - '+GV(aP6_460);
      mP6_480 := 'Приложение 6 1.4 Стр 480 = Стр 400 - Стр 460';
      Log(aP6_480, mP6_480, vP6_480);

      dP6_490 := dP6_405 - dP6_410 - dP6_420 - dP6_430 - dP6_440 - dP6_450;
      SV(aP6_490, dP6_490);
      vP6_490 := GV(aP6_490)+' = '+GV(aP6_405)+' - '+GV(aP6_410)+' - '+GV(aP6_420)+' - '+GV(aP6_430)+' - '+GV(aP6_440)+' - '+GV(aP6_450);
      mP6_490 := 'Приложение 6 1.4 Стр 490 = Стр 405 - Стр 410 - Стр 420 - Стр 430 - Стр 440 - Стр 450';
      Log(aP6_490, mP6_490, vP6_490);

    }

  }
  // #endregion ПРИЛОЖЕНИЕ 6

@end.
// #endregion ДЕЙСТВИЯ ВЫПОЛНЯЕМЫЕ ПРИ РАСЧЕТЕ
//************************************************************************************************************


//============================================================================================================
// #region ДЕЙСТВИЯ ВЫПОЛНЯЕМЫЕ ПРИ ЭКСПОРТЕ В XML
//------------------------------------------------------------------------------------------------------------
@Script On_ExportXML : boolean;
@begin
  SetFldVal('Файл/ИдФайл', Replace(_IdFail_, '.xml', ''));

  if (not XMLMap.ExpToXml(_XmlFileName_)) {
    Message('On_ExportXML: '+ XMLMap.GetStLastError, cancelButton+Warning);
    Exit;
  }

  message('Выгружен в файл ' + _XmlFileName_);
@end.
// #endregion ДЕЙСТВИЯ ВЫПОЛНЯЕМЫЕ ПРИ ЭКСПОРТЕ В XML
//************************************************************************************************************
