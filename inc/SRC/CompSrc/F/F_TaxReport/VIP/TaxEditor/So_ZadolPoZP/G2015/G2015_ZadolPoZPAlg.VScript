//------------------------------------------------------------------------------------------------------------
//                                                                                    (c) корпорация Галактика
// Галактика 9.1 - модуль "Электронная отчетность"
// Алгоритмы расчета : "Сведения о просроченной задолженности по заработной плате (3-Ф)"
//------------------------------------------------------------------------------------------------------------


//============================================================================================================
//#region СЕРВИСНЫЕ МЕТОДЫ
//------------------------------------------------------------------------------------------------------------
@Script SetFldVal(fld:string; val:variant);
@begin
  XMLMAP.SetVariantAttrValueByName(fld,val);
@end.

//------------------------------------------------------------------------------------------------------------
@Script GetStrVal(fld:string):string;
@begin
  Result := Trim(String(XMLMAP.GetAttrValueByName(fld)));
@end.

//------------------------------------------------------------------------------------------------------------
@Script GetDblVal(fld:string):double;
@begin
  Result := Double(XMLMAP.GetAttrValueByName(fld));
@end.

//------------------------------------------------------------------------------------------------------------
@Script MessageErrorStop_ALG(mesMesAdrXML, mesStr, mesPole, mesMes: string; mesCountIter: integer = 0): boolean;
@begin
  MesError.InsertMesError(mesMesAdrXML, Comp(0), mesStr, mesPole, mesMes, mesCountIter);
  Result := True;
@end.
//#endregion СЕРВИСНЫЕ МЕТОДЫ
//************************************************************************************************************


//============================================================================================================
//#region On_ExportXML ДЕЙСТВИЯ ВЫПОЛНЯЕМЫЕ ПРИ ЭКСПОРТЕ XML
//------------------------------------------------------------------------------------------------------------
@Script On_ExportXML : boolean;
@begin
  if (not XMLMap.ExpToXml(_XmlFileName_)) {
    Message('On_ExportXML: '+ XMLMap.GetStLastError, cancelButton+Warning);
    Exit;
  }

  Message('Выгружен в файл ' + _XmlFileName_);
@end.
//#endregion On_ExportXML ДЕЙСТВИЯ ВЫПОЛНЯЕМЫЕ ПРИ ЭКСПОРТЕ В XML
//************************************************************************************************************


//============================================================================================================
//#region On_Check ДЕЙСТВИЯ ВЫПОЛНЯЕМЫЕ ПРИ ПРОВЕРКЕ ПОЛЕЙ
//------------------------------------------------------------------------------------------------------------
@Script On_Check : boolean;
  //==========================================================================================================
  //#region СЕРВИС On_Check
  //----------------------------------------------------------------------------------------------------------
  #declare _InsMes(_AdrXML, _Pole, _StrMes)
    MessageErrorStop_ALG
    (
      #_AdrXML,
      NameStr,
      #_Pole,
      #_StrMes
    );
  #end
  //#endregion СЕРВИС On_Check
  //**********************************************************************************************************
@begin
  //==========================================================================================================
  //#region ОБЪЯВЛЕНИЕ ПЕРЕМЕННЫХ
  //----------------------------------------------------------------------------------------------------------
  var Str01_3, Str02_3, Str03_3, Str03_4, Str04_3, Str04_4, Str05_3, Str05_4, Str06_3, Str06_4, Str07_3, Str08_3, Str09_3, Str10_3, Str11_3: double;
  var NameStr, aStr01_3, aStr02_3, aStr03_3, aStr03_4, aStr04_3, aStr04_4, aStr05_3, aStr05_4, aStr06_3, aStr06_4, aStr07_3, aStr08_3, aStr09_3, aStr10_3, aStr11_3: String;
  //#endregion ОБЪЯВЛЕНИЕ ПЕРЕМЕННЫХ
  //**********************************************************************************************************


  //==========================================================================================================
  //#region ИНИЦИАЛИЗАЦИЯ ПЕРЕМЕННЫХ
  //----------------------------------------------------------------------------------------------------------
  aStr01_3 := 'Документ/Разд1/ЗадПоЗП/Всего'                   ;   Str01_3 := GetDblVal(aStr01_3);
  aStr02_3 := 'Документ/Разд1/ЗадПоЗП/ПослЗП/Всего'            ;   Str02_3 := GetDblVal(aStr02_3);
  aStr03_3 := 'Документ/Разд1/ИзСтр01_Бюд/Всего'               ;   Str03_3 := GetDblVal(aStr03_3);
  aStr04_3 := 'Документ/Разд1/ИзСтр01_Бюд/ФедБюд/Всего'        ;   Str04_3 := GetDblVal(aStr04_3);
  aStr05_3 := 'Документ/Разд1/ИзСтр01_Бюд/БудСубРФ/Всего'      ;   Str05_3 := GetDblVal(aStr05_3);
  aStr06_3 := 'Документ/Разд1/ИзСтр01_Бюд/МестБюд/Всего'       ;   Str06_3 := GetDblVal(aStr06_3);
  aStr07_3 := 'Документ/Разд1/ФондПослЗП/Всего'                ;   Str07_3 := GetDblVal(aStr07_3);
  aStr08_3 := 'Документ/Разд1/ЧислРаб/Всего'                   ;   Str08_3 := GetDblVal(aStr08_3);
  aStr09_3 := 'Документ/Разд1/ИзСтр01_Зад/ЗаМес2014/Всего'     ;   Str09_3 := GetDblVal(aStr09_3);
  aStr10_3 := 'Документ/Разд1/ИзСтр01_Зад/ЗаМес2013Ран/Всего'  ;   Str10_3 := GetDblVal(aStr10_3);
  aStr11_3 := 'Документ/Разд1/ИзСтр01_Увол/Всего'              ;   Str11_3 := GetDblVal(aStr11_3);

  aStr03_4 := 'Документ/Разд1/ИзСтр01_Бюд/ЗаВыпГосЗак'         ;   Str03_4 := GetDblVal(aStr03_4);
  aStr04_4 := 'Документ/Разд1/ИзСтр01_Бюд/ФедБюд/ЗаВыпГосЗак'  ;   Str04_4 := GetDblVal(aStr04_4);
  aStr05_4 := 'Документ/Разд1/ИзСтр01_Бюд/БудСубРФ/ЗаВыпГосЗак';   Str05_4 := GetDblVal(aStr05_4);
  aStr06_4 := 'Документ/Разд1/ИзСтр01_Бюд/МестБюд/ЗаВыпГосЗак' ;   Str06_4 := GetDblVal(aStr06_4);
  //#endregion ИНИЦИАЛИЗАЦИЯ ПЕРЕМЕННЫХ
  //**********************************************************************************************************


  //==========================================================================================================
  //#region ТИТУЛЬНЫЙ ЛИСТ
  //----------------------------------------------------------------------------------------------------------
  {
    NameStr := '01 Титульный лист';

    if (GetStrVal('Документ/НаимОрг') = '') #_InsMes('Документ/НаимОрг', '"Наименование организации"', 'Поле обязательно к заполнению');
    if (GetStrVal('Документ/Адрес'  ) = '') #_InsMes('Документ/Адрес'  , '"Адрес организации"'       , 'Поле обязательно к заполнению');
    if (GetStrVal('Документ/ОКПО'   ) = '') #_InsMes('Документ/ОКПО'   , '"Код ОКПО"'                , 'Поле обязательно к заполнению');
  }
  //#endregion ТИТУЛЬНЫЙ ЛИСТ
  //**********************************************************************************************************


  //==========================================================================================================
  //#region ИНФОРМАЦИОННЫЙ РАЗДЕЛ
  //----------------------------------------------------------------------------------------------------------
  {
    NameStr := '02 Информационный раздел';

    if (Str01_3 <= 0) #_InsMes(aStr01_3, 'Стр. 1, гр. 3', 'Значение поля должно быть больше 0 (нуля)');

    if (Str02_3 > Str01_3) #_InsMes(aStr02_3, 'Стр. 02, гр. 3', 'Значение поля должно быть меньше либо равно строке 01 гр. 3');
    if (Str03_3 > Str01_3) #_InsMes(aStr03_3, 'Стр. 03, гр. 3', 'Значение поля должно быть меньше либо равно строке 01 гр. 3');

    if (Str03_3 <> (Str04_3 + Str05_3 + Str06_3)) #_InsMes(aStr03_3, 'Стр. 03, гр. 3', 'Значение поля должно быть равно сумме строк 04, 05, 06 по соответствующей графе');
    if (Str03_4 <> (Str04_4 + Str05_4 + Str06_4)) #_InsMes(aStr03_4, 'Стр. 03, гр. 4', 'Значение поля должно быть равно сумме строк 04, 05, 06 по соответствующей графе');

    if (Str03_4 > Str03_3) #_InsMes(aStr03_4, 'Стр. 03, гр. 3', 'Значение поля должно быть больше либо равно Стр. 03, гр. 4');
    if (Str04_4 > Str04_3) #_InsMes(aStr04_4, 'Стр. 04, гр. 3', 'Значение поля должно быть больше либо равно Стр. 04, гр. 4');
    if (Str05_4 > Str05_3) #_InsMes(aStr05_4, 'Стр. 05, гр. 3', 'Значение поля должно быть больше либо равно Стр. 05, гр. 4');
    if (Str06_4 > Str06_3) #_InsMes(aStr06_4, 'Стр. 06, гр. 3', 'Значение поля должно быть больше либо равно Стр. 06, гр. 4');

    if (Str07_3 <= 0) #_InsMes(aStr07_3, 'Стр. 07, гр. 3', 'Значение поля должно быть больше 0 (нуля)');

    if (Str07_3 < Str02_3) #_InsMes(aStr07_3, 'Стр. 07, гр. 3', 'Значение поля должно быть больше либо равно строке 02 гр. 3');

    if (Str01_3 > 0)
    {
      if (Str07_3 <= 0) #_InsMes(aStr08_3, 'Стр. 07, гр. 3', 'Значение поля должно быть больше 0 (нуля), если стр. 01 гр. 3 больше 0 (нуля)');
      if (Str08_3 <= 0) #_InsMes(aStr08_3, 'Стр. 08, гр. 3', 'Значение поля должно быть больше 0 (нуля), если стр. 01 гр. 3 больше 0 (нуля)');
    }

    if (Str09_3 > Str01_3) #_InsMes(aStr09_3, 'Стр. 09, гр. 3', 'Значение поля должно быть меньше либо равно строке 01 гр. 3');
    if (Str10_3 > Str01_3) #_InsMes(aStr10_3, 'Стр. 10, гр. 3', 'Значение поля должно быть меньше либо равно строке 01 гр. 3');
    if (Str11_3 > Str01_3) #_InsMes(aStr11_3, 'Стр. 11, гр. 3', 'Значение поля должно быть меньше либо равно строке 01 гр. 3');

    if (Str11_3 > Str09_3 + Str10_3) #_InsMes(aStr11_3, 'Стр. 11, гр. 3', 'Значение поля должно быть меньше либо равно сумме строк 09, 10 гр.3');
    if (Str09_3 + Str10_3 > Str01_3) #_InsMes(aStr01_3, 'Стр. 01, гр. 3', 'Значение поля должно быть больше либо равно сумме строк 09, 10 гр.3');



    if (GetStrVal('Документ/Тел'                ) = '') #_InsMes('Документ/Тел'                , '"Телефон"'  , 'Поле обязательно к заполнению');
    if (GetStrVal('Документ/Подписант/Должность') = '') #_InsMes('Документ/Подписант/Должность', '"Должность"', 'Поле обязательно к заполнению');
    if (GetStrVal('Документ/Подписант/ФИО'      ) = '') #_InsMes('Документ/Подписант/ФИО'      , '"ФИО"'      , 'Поле обязательно к заполнению');

    if (GetStrVal('Документ/ДатаДок') = '' or GetStrVal('Документ/ДатаДок') = 'ДД мес ГГГГ')
      #_InsMes('Документ/ДатаДок', '"Дата документа"', 'Поле обязательно к заполнению');
  }
  //#endregion ИНФОРМАЦИОННЫЙ РАЗДЕЛ
  //**********************************************************************************************************
@end.
//#endregion On_Check ДЕЙСТВИЯ ВЫПОЛНЯЕМЫЕ ПРИ ПРОВЕРКЕ ПОЛЕЙ
//**********************************************************************************************************


//============================================================================================================
//#region On_Recalc ДЕЙСТВИЯ ВЫПОЛНЯЕМЫЕ ПРИ РАСЧЁТЕ ПОЛЕЙ
//------------------------------------------------------------------------------------------------------------
@Script On_Recalc : boolean;
  //==========================================================================================================
  //#region СЕРВИС On_Recalc
  //----------------------------------------------------------------------------------------------------------
  #declare _Log(_strAdr, _strMes, _strVal)
    MesError.InsertRasch(NameStr, #_strAdr, #_strMes, #_strVal, 0);
  #end

  #declare GDS0(_val)
    IF(#_val < 0, '('+DoubleToStr(Round(#_val), '[|-]36666666666666666666666666')+')', DoubleToStr(Round(#_val), '[|-]36666666666666666666666666'))
  #end

  #declare _SetFldGV(_fld, _val)
    SetFldVal(#_fld, #_val);
    #_val := GetDblVal(#_fld);
  #end
  //#endregion СЕРВИС On_Recalc
  //**********************************************************************************************************
@begin
  //==========================================================================================================
  //#region ЗНАЧЕНИЯ ПО УМОЛЧАНИЮ
  //----------------------------------------------------------------------------------------------------------
  if ((GetStrVal('Документ/ДатаДок') = '') or (GetStrVal('Документ/ДатаДок') = 'ДД мес ГГГГ'))
    SetFldVal('Документ/ДатаДок', DateToStr(Cur_Date, 'DD mon YYYY'));
  //#endregion ЗНАЧЕНИЯ ПО УМОЛЧАНИЮ
  //**********************************************************************************************************


  //==========================================================================================================
  //#region ОБЪЯВЛЕНИЕ ПЕРЕМЕННЫХ
  //----------------------------------------------------------------------------------------------------------
  var Str01_3, Str02_3, Str03_3, Str03_4, Str04_3, Str04_4, Str05_3, Str05_4, Str06_3, Str06_4: Double;
  var aStr03_3, aStr03_4, aStr04_3, aStr04_4, aStr05_3, aStr05_4, aStr06_3, aStr06_4, Mes03_3, Mes03_4, Val03_3, Val03_4, NameStr: String;
  //#endregion ОБЪЯВЛЕНИЕ ПЕРЕМЕННЫХ
  //**********************************************************************************************************


  //==========================================================================================================
  //#region ИНИЦИАЛИЗАЦИЯ ПЕРЕМЕННЫХ
  //----------------------------------------------------------------------------------------------------------
  aStr04_3 := 'Документ/Разд1/ИзСтр01_Бюд/ФедБюд/Всего'        ;   Str04_3 := GetDblVal(aStr04_3);
  aStr05_3 := 'Документ/Разд1/ИзСтр01_Бюд/БудСубРФ/Всего'      ;   Str05_3 := GetDblVal(aStr05_3);
  aStr06_3 := 'Документ/Разд1/ИзСтр01_Бюд/МестБюд/Всего'       ;   Str06_3 := GetDblVal(aStr06_3);

  aStr04_4 := 'Документ/Разд1/ИзСтр01_Бюд/ФедБюд/ЗаВыпГосЗак'  ;   Str04_4 := GetDblVal(aStr04_4);
  aStr05_4 := 'Документ/Разд1/ИзСтр01_Бюд/БудСубРФ/ЗаВыпГосЗак';   Str05_4 := GetDblVal(aStr05_4);
  aStr06_4 := 'Документ/Разд1/ИзСтр01_Бюд/МестБюд/ЗаВыпГосЗак' ;   Str06_4 := GetDblVal(aStr06_4);

  aStr03_3 := 'Документ/Разд1/ИзСтр01_Бюд/Всего'      ;
  aStr03_4 := 'Документ/Разд1/ИзСтр01_Бюд/ЗаВыпГосЗак';
  //#endregion ИНИЦИАЛИЗАЦИЯ ПЕРЕМЕННЫХ
  //**********************************************************************************************************

  //==========================================================================================================
  //#region ИНФОРМАЦИОННЫЙ РАЗДЕЛ
  //----------------------------------------------------------------------------------------------------------
  {
    NameStr := '02 Информационный раздел';

    Str03_3 := Str04_3 + Str05_3 + Str06_3;   #_SetFldGV(aStr03_3, Str03_3);
    Str03_4 := Str04_4 + Str05_4 + Str06_4;   #_SetFldGV(aStr03_4, Str03_4);

    Mes03_3 := 'Стр. 03 (гр. 3) = стр. 04 (гр. 3) + стр. 05 (гр. 3) + стр. 06 (гр. 3)';
    Mes03_4 := 'Стр. 03 (гр. 4) = стр. 04 (гр. 4) + стр. 05 (гр. 4) + стр. 06 (гр. 4)';

    Val03_3 := #GDS0(Str03_3)+' = '+#GDS0(Str04_3)+' + '+#GDS0(Str05_3)+' + '+#GDS0(Str06_3);
    Val03_4 := #GDS0(Str03_4)+' = '+#GDS0(Str04_4)+' + '+#GDS0(Str05_4)+' + '+#GDS0(Str06_4);

    #_Log(aStr03_3, Mes03_3, Val03_3);
    #_Log(aStr03_4, Mes03_4, Val03_4);
  }
  //#endregion ИНФОРМАЦИОННЫЙ РАЗДЕЛ
  //**********************************************************************************************************
@end.
//#endregion On_Recalc ДЕЙСТВИЯ ВЫПОЛНЯЕМЫЕ ПРИ РАСЧЁТЕ ПОЛЕЙ
//**********************************************************************************************************
