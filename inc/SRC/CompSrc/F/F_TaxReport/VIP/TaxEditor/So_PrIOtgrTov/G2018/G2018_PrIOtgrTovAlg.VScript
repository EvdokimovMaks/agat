//------------------------------------------------------------------------------------------------------------
//                                                                                    (c) корпорация Галактика
// Галактика 9.1 - модуль "Электронная отчетность"
// Интерфейс редактирования : "Сведения о производстве и отгрузке товаров и услуг (П-1) (2018)"
//------------------------------------------------------------------------------------------------------------


//============================================================================================================
// #region СЕРВИСНЫЕ МЕТОДЫ
//------------------------------------------------------------------------------------------------------------
@Script GetStrVal(fld:string):string;
@begin
  Result := Trim(XMLMAP.GetAttrValueByName(fld));
@end.

//------------------------------------------------------------------------------------------------------------
@Script GetDblVal(fld:string):double;
@begin
  Result := Double(XMLMAP.GetAttrValueByName(fld));
@end.

//------------------------------------------------------------------------------------------------------------
@Script SetFldVal(fld:string; val:variant);
@begin
  XMLMAP.SetVariantAttrValueByName_Formula(fld, val, 2);
@end.

//------------------------------------------------------------------------------------------------------------
@Script MessageErrorStop_ALG(mesMesAdrXML, mesPole, mesMes: string): boolean;
@begin
  MesError.InsertMesError(mesMesAdrXML, Comp(0), '', mesPole, mesMes);
  Result := True;
@end.

//------------------------------------------------------------------------------------------------------------
@Script NullStr(fld:string):Boolean;
@begin
  Result := (GetStrVal(fld) = '');
@end.

//------------------------------------------------------------------------------------------------------------
@Script GetIter(iter:longint):string;
@begin
  Result := '';

  if (iter > 0)
    Result := '[' + String(iter) + ']';
@end.

// #endregion СЕРВИСНЫЕ МЕТОДЫ
//************************************************************************************************************


//============================================================================================================
// #region On_Check ДЕЙСТВИЯ ВЫПОЛНЯЕМЫЕ ПРИ ПРОВЕРКЕ ПОЛЕЙ
//------------------------------------------------------------------------------------------------------------
@Script On_Check : boolean;
  //==========================================================================================================
  // #region СЕРВИС On_Check
  //----------------------------------------------------------------------------------------------------------
  #include AllTaxObj.Vih

  //----------------------------------------------------------------------------------------------------------
  #undef _IsValid
  #declare _IsValid(_Valid, _AdrXML, _Pole)
    if not #_Valid(#_AdrXML, getMes)
      MessageErrorStop_ALG
      (
        #_AdrXML
      , #_Pole
      , 'Поле не соответствует формату. ' + getMes
      );
  #end

  //----------------------------------------------------------------------------------------------------------
  #undef _IsValidOKVED
  #declare _IsValidOKVED(_Valid, _AdrXML, _Pole)
    if not NullStr(#_AdrXML)
      if not #_Valid(GetStrVal(#_AdrXML), getMes)
        MessageErrorStop_ALG
        (
          #_AdrXML
        , #_Pole
        , 'Поле не соответствует формату. ' + getMes
        );
  #end

  //----------------------------------------------------------------------------------------------------------
  #undef _IsValidNull
  #declare _IsValidNull(_Valid, _AdrXML, _Pole)
    if not #_Valid(#_AdrXML, getMes)
      MessageErrorStop_ALG
      (
        #_AdrXML
      , #_Pole
      , 'Поле не соответствует формату. Поле обязательно к заполнению'
      );
  #end

  //----------------------------------------------------------------------------------------------------------
  #declare _IfNot(_If, _Name, _XMLAdr, _Mes)
    if not (#_If)
      MessageErrorStop_ALG (#_XMLAdr, #_Name, #_Mes);
  #end

  //----------------------------------------------------------------------------------------------------------
  #declare _IfnotNeed(_adrXML, _Pole)
    if not NullStr(#_adrXML)
      MessageErrorStop_ALG
      (
        #_adrXML
      , #_Pole
      , getMes + ' поле НЕ должно быть заполнено'
      );
  #end

  //----------------------------------------------------------------------------------------------------------
  #declare _IfNeed(_adrXML, _Pole)
    if NullStr(#_adrXML)
      MessageErrorStop_ALG
      (
        #_adrXML
      , #_Pole
      , getMes + ' поле должно быть заполнено'
      );
  #end

  //----------------------------------------------------------------------------------------------------------
  function IsValidNull(_adr: string; var _mes: string) : boolean;
  begin // Обязательные поля
    _mes := 'Поле обязательно к заполнению';

    Result := False;
    Result := not NullStr(_adr);
  end;

  //----------------------------------------------------------------------------------------------------------
  function localIsValidDate(_adr: string; var _mes: string) : boolean;
  begin //Дата
    _mes := 'Поле обязательно к заполнению';

    Result := False;
    Result := ((not NullStr(_adr)) and (GetStrVal(_adr) <> 'ДД мес ГГГГ'));
  end;

  // #endregion СЕРВИС On_Check
  //**********************************************************************************************************
@begin

  //----------------------------------------------------------------------------------------------------------
  // #region ОБЪЯВЛЕНИЕ ПЕРЕМЕННЫХ

  var getMes: string;
  var a01_1, a01_2, a01_3, a11_1, a11_2, a11_3, a12_1, a12_2, a12_3, a13_1, a14_1
    , a22_1, a22_2, a22_3, a23_1, a23_2, a23_3, a24_1, a24_2, a24_3, a25_1, a25_2, a25_3, a26_1
    , a29_1, a29_2, a29_3, a30_1, a30_2, a30_3, a31_1, a31_2, a31_3, a32_1, a32_2, a32_3
    , aR5_Str_4, aR5_Str_5, aR5_Str_B

    , dR5_Str_B

    , mes01, mes02, mes03, mes06, mes07, mes08, mes09, mes10, mes11, mes12, mes13, mes14, mes15, mes16: string;

  var d01_1, d01_2, d01_3, d11_1, d11_2, d11_3, d12_1, d12_2, d12_3, d13_1, d14_1
    , d22_1, d22_2, d22_3, d23_1, d23_2, d23_3, d24_1, d24_2, d24_3, d25_1, d25_2, d25_3, d26_1
    , d29_1, d29_2, d29_3, d30_1, d30_2, d30_3, d31_1, d31_2, d31_3, d32_1, d32_2, d32_3
    , dR5_Str_4, dR5_Str_5: double;

  // #endregion ОБЪЯВЛЕНИЕ ПЕРЕМЕННЫХ


  #_IsValid(localIsValidDate, 'Файл/Документ/ДатаДок', 'Дата документа')

  #_IsValidNull(IsValidNull, 'Файл/Документ/Орг/НаимОрг'     , 'Наименование организации')
  #_IsValidNull(IsValidNull, 'Файл/Документ/Орг/Адр'         , 'Адрес'                   )
  #_IsValidNull(IsValidNull, 'Файл/Документ/Орг/ОКПО'        , 'ОКПО'                    )
  #_IsValidNull(IsValidNull, 'Файл/Документ/Подписант/Должн' , 'Должность'               )
  #_IsValidNull(IsValidNull, 'Файл/Документ/Подписант/ФИО'   , 'ФИО'                     )
  #_IsValidNull(IsValidNull, 'Файл/Документ/Подписант/Тел'   , 'Телефон'                 )
  #_IsValidNull(IsValidNull, 'Файл/Документ/Подписант/E_mail', 'E-mail'                  )

  #_IsValidOKVED(IsValidOKVED, 'Файл/Документ/Раздел2/Стр21/Стр21ГрВ'      , 'Стр. 21, гр. В')
  #_IsValidOKVED(IsValidOKVED, 'Файл/Документ/Раздел2/Стр21_01/Стр21ГрВ_01', 'Гр. В (01)'    )
  #_IsValidOKVED(IsValidOKVED, 'Файл/Документ/Раздел2/Стр21_02/Стр21ГрВ_02', 'Гр. В (02)'    )
  #_IsValidOKVED(IsValidOKVED, 'Файл/Документ/Раздел2/Стр21_03/Стр21ГрВ_03', 'Гр. В (03)'    )
  #_IsValidOKVED(IsValidOKVED, 'Файл/Документ/Раздел2/Стр21_04/Стр21ГрВ_04', 'Гр. В (04)'    )
  #_IsValidOKVED(IsValidOKVED, 'Файл/Документ/Раздел2/Стр21_05/Стр21ГрВ_05', 'Гр. В (05)'    )
  #_IsValidOKVED(IsValidOKVED, 'Файл/Документ/Раздел2/Стр21_06/Стр21ГрВ_06', 'Гр. В (06)'    )
  #_IsValidOKVED(IsValidOKVED, 'Файл/Документ/Раздел2/Стр21_07/Стр21ГрВ_07', 'Гр. В (07)'    )
  #_IsValidOKVED(IsValidOKVED, 'Файл/Документ/Раздел2/Стр21_08/Стр21ГрВ_08', 'Гр. В (08)'    )
  #_IsValidOKVED(IsValidOKVED, 'Файл/Документ/Раздел2/Стр21_09/Стр21ГрВ_09', 'Гр. В (09)'    )
  #_IsValidOKVED(IsValidOKVED, 'Файл/Документ/Раздел2/Стр21_10/Стр21ГрВ_10', 'Гр. В (10)'    )
  #_IsValidOKVED(IsValidOKVED, 'Файл/Документ/Раздел2/Стр21_11/Стр21ГрВ_11', 'Гр. В (11)'    )


  getMes := 'При текущем периоде отчета';

  var MonthNpp : byte;  MonthNpp := Month(TaxDat.dEnd);
  if  (MonthNpp <> 03)
  and (MonthNpp <> 06)
  and (MonthNpp <> 09)
  and (MonthNpp <> 12)
  {
    #_IfnotNeed('Файл/Документ/Раздел5/Стр90'         , 'Стр. 90'       )
    #_IfnotNeed('Файл/Документ/Раздел1/Стр03/Стр03Гр1', 'Стр. 03, гр. 1')
    #_IfnotNeed('Файл/Документ/Раздел1/Стр03/Стр03Гр2', 'Стр. 03, гр. 2')
    #_IfnotNeed('Файл/Документ/Раздел1/Стр03/Стр03Гр3', 'Стр. 03, гр. 3')
    #_IfnotNeed('Файл/Документ/Раздел1/Стр04/Стр04Гр1', 'Стр. 04, гр. 1')
    #_IfnotNeed('Файл/Документ/Раздел1/Стр04/Стр04Гр2', 'Стр. 04, гр. 2')
    #_IfnotNeed('Файл/Документ/Раздел1/Стр04/Стр04Гр3', 'Стр. 04, гр. 3')
    #_IfnotNeed('Файл/Документ/Раздел1/Стр05/Стр05Гр1', 'Стр. 05, гр. 1')
    #_IfnotNeed('Файл/Документ/Раздел1/Стр05/Стр05Гр2', 'Стр. 05, гр. 2')
    #_IfnotNeed('Файл/Документ/Раздел1/Стр05/Стр05Гр3', 'Стр. 05, гр. 3')
  }


  //----------------------------------------------------------------------------------------------------------
  // #region ИНИЦИЛИЗАЦИЯ ПЕРЕМЕННЫХ СОДЕРЖАЩИХ СООБЩЕНИЯ

  mes01 := '01: Строка 11 <= строки 01 по соответствующим графам'                  ;
  mes02 := '02: Строка 12 <= строки 01 по соответствующим графам'                  ;
  mes03 := '03: Строка 14 <= строки 13 по соответствующим графам'                  ;
  mes06 := '06: Строка 23 <= строки 22 по соответствующим графам'                  ;
  mes07 := '07: Строка 24 <= строки 22 по соответствующим графам'                  ;
  mes08 := '08: Строка 25 <= строки 24 по соответствующим графам'                  ;
  mes09 := '09: Строка 30 <= строки 29 по соответствующим графам'                  ;
  mes10 := '10: Строка 32 <= строки 31 по соответствующим графам'                  ;
  mes11 := '11: Если строка 29 <> 0, то строка 31 <> 0 по соответствующим графам'  ;
  mes12 := '12: Если строка 30 <> 0, то строка 32 <> 0 по соответствующим графам'  ;
  mes13 := '13: Если строка с кодом 70 (графа 4) <> 0, то строка 22 (графа 1) <> 0';
  mes14 := '14: Если строка с кодом 80 (графа 4) <> 0, то строка 26 (графа 1) <> 0';
  mes15 := '15: Если строка с кодом 50 (графа 4) <> 0, то строка 01 (графа 1) <> 0';
  mes16 := '16: По строке с кодом 50 графа 4 >= графы 5'                           ;

  // #endregion ИНИЦИЛИЗАЦИЯ ПЕРЕМЕННЫХ СОДЕРЖАЩИХ СООБЩЕНИЯ

  //----------------------------------------------------------------------------------------------------------
  // #region ИНИЦИЛИЗАЦИЯ ПЕРЕМЕННЫХ

  a01_1 := 'Файл/Документ/Раздел1/Стр01/Стр01Гр1';  d01_1 := GetDblVal(a01_1);
  a01_2 := 'Файл/Документ/Раздел1/Стр01/Стр01Гр2';  d01_2 := GetDblVal(a01_2);
  a01_3 := 'Файл/Документ/Раздел1/Стр01/Стр01Гр3';  d01_3 := GetDblVal(a01_3);
  a11_1 := 'Файл/Документ/Раздел1/Стр11/Стр11Гр1';  d11_1 := GetDblVal(a11_1);
  a11_2 := 'Файл/Документ/Раздел1/Стр11/Стр11Гр2';  d11_2 := GetDblVal(a11_2);
  a11_3 := 'Файл/Документ/Раздел1/Стр11/Стр11Гр3';  d11_3 := GetDblVal(a11_3);
  a12_1 := 'Файл/Документ/Раздел1/Стр12/Стр12Гр1';  d12_1 := GetDblVal(a12_1);
  a12_2 := 'Файл/Документ/Раздел1/Стр12/Стр12Гр2';  d12_2 := GetDblVal(a12_2);
  a12_3 := 'Файл/Документ/Раздел1/Стр12/Стр12Гр3';  d12_3 := GetDblVal(a12_3);
  a13_1 := 'Файл/Документ/Раздел1/Стр13/Стр13Гр1';  d13_1 := GetDblVal(a13_1);
  a14_1 := 'Файл/Документ/Раздел1/Стр14/Стр14Гр1';  d14_1 := GetDblVal(a14_1);

  a22_1 := 'Файл/Документ/Раздел3/Стр22/Стр22Гр1';  d22_1 := GetDblVal(a22_1);
  a22_2 := 'Файл/Документ/Раздел3/Стр22/Стр22Гр2';  d22_2 := GetDblVal(a22_2);
  a22_3 := 'Файл/Документ/Раздел3/Стр22/Стр22Гр3';  d22_3 := GetDblVal(a22_3);
  a23_1 := 'Файл/Документ/Раздел3/Стр23/Стр23Гр1';  d23_1 := GetDblVal(a23_1);
  a23_2 := 'Файл/Документ/Раздел3/Стр23/Стр23Гр2';  d23_2 := GetDblVal(a23_2);
  a23_3 := 'Файл/Документ/Раздел3/Стр23/Стр23Гр3';  d23_3 := GetDblVal(a23_3);
  a24_1 := 'Файл/Документ/Раздел3/Стр24/Стр24Гр1';  d24_1 := GetDblVal(a24_1);
  a24_2 := 'Файл/Документ/Раздел3/Стр24/Стр24Гр2';  d24_2 := GetDblVal(a24_2);
  a24_3 := 'Файл/Документ/Раздел3/Стр24/Стр24Гр3';  d24_3 := GetDblVal(a24_3);
  a25_1 := 'Файл/Документ/Раздел3/Стр25/Стр25Гр1';  d25_1 := GetDblVal(a25_1);
  a25_2 := 'Файл/Документ/Раздел3/Стр25/Стр25Гр2';  d25_2 := GetDblVal(a25_2);
  a25_3 := 'Файл/Документ/Раздел3/Стр25/Стр25Гр3';  d25_3 := GetDblVal(a25_3);
  a26_1 := 'Файл/Документ/Раздел3/Стр26/Стр26Гр1';  d26_1 := GetDblVal(a26_1);

  a29_1 := 'Файл/Документ/Раздел4/Стр29/Стр29Гр1';  d29_1 := GetDblVal(a29_1);
  a29_2 := 'Файл/Документ/Раздел4/Стр29/Стр29Гр2';  d29_2 := GetDblVal(a29_2);
  a29_3 := 'Файл/Документ/Раздел4/Стр29/Стр29Гр3';  d29_3 := GetDblVal(a29_3);

  a30_1 := 'Файл/Документ/Раздел4/Стр30/Стр30Гр1';  d30_1 := GetDblVal(a30_1);
  a30_2 := 'Файл/Документ/Раздел4/Стр30/Стр30Гр2';  d30_2 := GetDblVal(a30_2);
  a30_3 := 'Файл/Документ/Раздел4/Стр30/Стр30Гр3';  d30_3 := GetDblVal(a30_3);

  a31_1 := 'Файл/Документ/Раздел4/Стр31/Стр31Гр1';  d31_1 := GetDblVal(a31_1);
  a31_2 := 'Файл/Документ/Раздел4/Стр31/Стр31Гр2';  d31_2 := GetDblVal(a31_2);
  a31_3 := 'Файл/Документ/Раздел4/Стр31/Стр31Гр3';  d31_3 := GetDblVal(a31_3);

  a32_1 := 'Файл/Документ/Раздел4/Стр32/Стр32Гр1';  d32_1 := GetDblVal(a32_1);
  a32_2 := 'Файл/Документ/Раздел4/Стр32/Стр32Гр2';  d32_2 := GetDblVal(a32_2);
  a32_3 := 'Файл/Документ/Раздел4/Стр32/Стр32Гр3';  d32_3 := GetDblVal(a32_3);

  // #endregion ИНИЦИЛИЗАЦИЯ ПЕРЕМЕННЫХ

  //----------------------------------------------------------------------------------------------------------
  // #region 01: Строка 11 <= строки 01 по соответствующим графам

  #_IfNot(d11_1 <= d01_1, 'Стр. 11, гр. 1', a11_1, mes01)
  #_IfNot(d11_2 <= d01_2, 'Стр. 11, гр. 2', a11_2, mes01)
  #_IfNot(d11_3 <= d01_3, 'Стр. 11, гр. 3', a11_3, mes01)

  // #endregion 01: Строка 11 <= строки 01 по соответствующим графам

  //----------------------------------------------------------------------------------------------------------
  // #region 02: Строка 12 <= строки 01 по соответствующим графам

  #_IfNot(d12_1 <= d01_1, 'Стр. 12, гр. 1', a12_1, mes02)
  #_IfNot(d12_2 <= d01_2, 'Стр. 12, гр. 2', a12_2, mes02)
  #_IfNot(d12_3 <= d01_3, 'Стр. 12, гр. 3', a12_3, mes02)

  // #endregion 02: Строка 12 <= строки 01 по соответствующим графам

  //----------------------------------------------------------------------------------------------------------
  // #region 03: Строка 14 <= строки 13 по соответствующим графам

  #_IfNot(d14_1 <= d13_1, 'Стр. 14, гр. 1', a14_1, mes03)

  // #endregion 03: Строка 14 <= строки 13 по соответствующим графам

  //----------------------------------------------------------------------------------------------------------
  // #region 06: Строка 23 <= строки 22 по соответствующим графам

  #_IfNot(d23_1 <= d22_1, 'Стр. 23, гр. 1', a23_1, mes06)
  #_IfNot(d23_2 <= d22_2, 'Стр. 23, гр. 2', a23_2, mes06)
  #_IfNot(d23_3 <= d22_3, 'Стр. 23, гр. 3', a23_3, mes06)

  // #endregion 06: Строка 23 <= строки 22 по соответствующим графам

  //----------------------------------------------------------------------------------------------------------
  // #region 07: Строка 24 <= строки 22 по соответствующим графам

  #_IfNot(d24_1 <= d22_1, 'Стр. 24, гр. 1', a24_1, mes07)
  #_IfNot(d24_2 <= d22_2, 'Стр. 24, гр. 2', a24_2, mes07)
  #_IfNot(d24_3 <= d22_3, 'Стр. 24, гр. 3', a24_3, mes07)

  // #endregion 07: Строка 24 <= строки 22 по соответствующим графам

  //----------------------------------------------------------------------------------------------------------
  // #region 08: Строка 25 <= строки 24 по соответствующим графам

  #_IfNot(d25_1 <= d24_1, 'Стр. 25, гр. 1', a25_1, mes08)
  #_IfNot(d25_2 <= d24_2, 'Стр. 25, гр. 2', a25_2, mes08)
  #_IfNot(d25_3 <= d24_3, 'Стр. 25, гр. 3', a25_3, mes08)

  // #endregion 08: Строка 25 <= строки 24 по соответствующим графам

  //----------------------------------------------------------------------------------------------------------
  // #region 09: Строка 30 <= строки 29 по соответствующим графам

  #_IfNot(d30_1 <= d29_1, 'Стр. 30, гр. 1', a30_1, mes09)
  #_IfNot(d30_2 <= d29_2, 'Стр. 30, гр. 2', a30_2, mes09)
  #_IfNot(d30_3 <= d29_3, 'Стр. 30, гр. 3', a30_3, mes09)

  // #endregion 09: Строка 30 <= строки 29 по соответствующим графам

  //----------------------------------------------------------------------------------------------------------
  // #region 10: Строка 32 <= строки 31 по соответствующим графам

  #_IfNot(d32_1 <= d31_1, 'Стр. 32, гр. 1', a32_1, mes10)
  #_IfNot(d32_2 <= d31_2, 'Стр. 32, гр. 2', a32_2, mes10)
  #_IfNot(d32_3 <= d31_3, 'Стр. 32, гр. 3', a32_3, mes10)

  // #endregion 10: Строка 32 <= строки 31 по соответствующим графам

  //----------------------------------------------------------------------------------------------------------
  // #region 11: Если строка 29 <> 0, то строка 31 <> 0 по соответствующим графам

  if (d29_1 <> 0) { #_IfNot(d31_1 <> 0, 'Стр. 31, гр. 1', a31_1, mes11) }
  if (d29_2 <> 0) { #_IfNot(d31_2 <> 0, 'Стр. 31, гр. 2', a31_2, mes11) }
  if (d29_3 <> 0) { #_IfNot(d31_3 <> 0, 'Стр. 31, гр. 3', a31_3, mes11) }

  // #endregion 11: Если строка 29 <> 0, то строка 31 <> 0 по соответствующим графам

  //----------------------------------------------------------------------------------------------------------
  // #region 12: Если строка 30 <> 0, то строка 32 <> 0 по соответствующим графам

  if (d30_1 <> 0) { #_IfNot(d32_1 <> 0, 'Стр. 32, гр. 1', a32_1, mes12) }
  if (d30_2 <> 0) { #_IfNot(d32_2 <> 0, 'Стр. 32, гр. 2', a32_2, mes12) }
  if (d30_3 <> 0) { #_IfNot(d32_3 <> 0, 'Стр. 32, гр. 3', a32_3, mes12) }

  // #endregion 12: Если строка 30 <> 0, то строка 32 <> 0 по соответствующим графам

  var i, CountI : longint = 0;
  var XMLAdrI : string = '';
  var fl13, fl14, fl15: boolean;

  fl13 := fl14 := fl15 := False;
  getMes := 'При текущем значении графы Б';

  CountI := XMLMap.GetNodeCountByName('Файл/Документ/Раздел5/Стр');
  for (i := 0; i < CountI; i++)
  {
    //--------------------------------------------------------------------------------------------------------
    // #region ИНИЦИЛИЗАЦИЯ ПЕРЕМЕННЫХ СТРАНИЦЫ

    XMLAdrI := 'Файл/Документ/Раздел5/Стр' + getIter(i);

    aR5_Str_B := XMLAdrI + '/ГрБ';  dR5_Str_B := GetStrVal(aR5_Str_B);
    aR5_Str_4 := XMLAdrI + '/Гр4';  dR5_Str_4 := GetDblVal(aR5_Str_4);
    aR5_Str_5 := XMLAdrI + '/Гр5';  dR5_Str_5 := GetDblVal(aR5_Str_5);

    // #endregion ИНИЦИЛИЗАЦИЯ ПЕРЕМЕННЫХ СТРАНИЦЫ

    case dR5_Str_B of
      '50': { //----------------------------------------------------------------------------------------------------------
              // #region 15: Если строка с кодом 50 (графа 4) <> 0, то строка 01 (графа 1) <> 0

              if (dR5_Str_4 <> 0)
              {
                if not fl15
                {
                  fl15 := not (d01_1 <> 0);
                  #_IfNot(d01_1 <> 0, 'Стр. 01, гр. 1', a01_1, mes15)
                }
              }

              // #endregion 15: Если строка с кодом 50 (графа 4) <> 0, то строка 01 (графа 1) <> 0

              #_IfNeed(XMLAdrI + '/ГрА', 'Гр. А')
              #_IfNeed(XMLAdrI + '/ГрВ', 'Гр. В')
              #_IfNeed(XMLAdrI + '/ГрГ', 'Гр. Г')
              #_IfNeed(XMLAdrI + '/ГрД', 'Гр. Д')
              #_IfNeed(XMLAdrI + '/Гр1', 'Гр. 1')
              #_IfNeed(XMLAdrI + '/Гр2', 'Гр. 2')
              #_IfNeed(XMLAdrI + '/Гр3', 'Гр. 3')
              #_IfNeed(XMLAdrI + '/Гр4', 'Гр. 4')
              #_IfNeed(XMLAdrI + '/Гр5', 'Гр. 5')
              #_IfNeed(XMLAdrI + '/Гр6', 'Гр. 6')
              #_IfNeed(XMLAdrI + '/Гр7', 'Гр. 7')
            }
      '70': { //----------------------------------------------------------------------------------------------------------
              // #region 13: Если строка с кодом 70 (графа 4) <> 0, то строка 22 (графа 1) <> 0

              if (dR5_Str_4 <> 0)
              {
                if not fl13
                {
                  fl13 := not (d22_1 <> 0);
                  #_IfNot(d22_1 <> 0, 'Стр. 22, гр. 1', a22_1, mes13)
                }
              }

              // #endregion 13: Если строка с кодом 70 (графа 4) <> 0, то строка 22 (графа 1) <> 0

              #_IfNeed   (XMLAdrI + '/ГрА', 'Гр. А')
              #_IfNeed   (XMLAdrI + '/ГрВ', 'Гр. В')
              #_IfNeed   (XMLAdrI + '/ГрГ', 'Гр. Г')
              #_IfnotNeed(XMLAdrI + '/ГрД', 'Гр. Д')
              #_IfnotNeed(XMLAdrI + '/Гр1', 'Гр. 1')
              #_IfnotNeed(XMLAdrI + '/Гр2', 'Гр. 2')
              #_IfnotNeed(XMLAdrI + '/Гр3', 'Гр. 3')
              #_IfNeed   (XMLAdrI + '/Гр4', 'Гр. 4')
              #_IfnotNeed(XMLAdrI + '/Гр5', 'Гр. 5')
              #_IfnotNeed(XMLAdrI + '/Гр6', 'Гр. 6')
              #_IfNeed   (XMLAdrI + '/Гр7', 'Гр. 7')
            }
      '80': { //----------------------------------------------------------------------------------------------------------
              // #region 14: Если строка с кодом 80 (графа 4) <> 0, то строка 26 (графа 1) <> 0

              if (dR5_Str_4 <> 0)
              {
                if not fl14
                {
                  fl14 := not (d26_1 <> 0);
                  #_IfNot(d26_1 <> 0, 'Стр. 26, гр. 1', a26_1, mes14)
                }
              }

              // #endregion 14: Если строка с кодом 80 (графа 4) <> 0, то строка 26 (графа 1) <> 0

              #_IfNeed   (XMLAdrI + '/ГрА', 'Гр. А')
              #_IfNeed   (XMLAdrI + '/ГрВ', 'Гр. В')
              #_IfNeed   (XMLAdrI + '/ГрГ', 'Гр. Г')
              #_IfnotNeed(XMLAdrI + '/ГрД', 'Гр. Д')
              #_IfnotNeed(XMLAdrI + '/Гр1', 'Гр. 1')
              #_IfnotNeed(XMLAdrI + '/Гр2', 'Гр. 2')
              #_IfnotNeed(XMLAdrI + '/Гр3', 'Гр. 3')
              #_IfNeed   (XMLAdrI + '/Гр4', 'Гр. 4')
              #_IfnotNeed(XMLAdrI + '/Гр5', 'Гр. 5')
              #_IfnotNeed(XMLAdrI + '/Гр6', 'Гр. 6')
              #_IfNeed   (XMLAdrI + '/Гр7', 'Гр. 7')
            }
    end;

    //----------------------------------------------------------------------------------------------------------
    // #region 16: По строке с кодом 50 графа 4 >= графы 5

    #_IfNot(dR5_Str_4 >= dR5_Str_5, 'Гр. 4', aR5_Str_4, mes16)

    // #endregion 16: По строке с кодом 50 графа 4 >= графы 5
  }
@end.
// #endregion On_Check ДЕЙСТВИЯ ВЫПОЛНЯЕМЫЕ ПРИ ПРОВЕРКЕ ПОЛЕЙ
//************************************************************************************************************


//============================================================================================================
// #region On_Recalc ДЕЙСТВИЯ ВЫПОЛНЯЕМЫЕ ПРИ РАСЧЕТЕ
//------------------------------------------------------------------------------------------------------------
@Script On_Recalc : boolean;
@begin

  //----------------------------------------------------------------------------------------------------------
  // #region ТИТУЛЬНЫЙ ЛИСТ

  if ((GetStrVal('Файл/Документ/ДатаДок') = '') or (GetStrVal('Файл/Документ/ДатаДок') = 'ДД.ММ.ГГГГ'))
    SetFldVal('Файл/Документ/ДатаДок', DateToStr(Cur_Date, XMLMap.GetAttrVFormatByName('Файл/Документ/ДатаДок')));

  // #endregion ТИТУЛЬНЫЙ ЛИСТ

@end.
// #endregion On_Recalc ДЕЙСТВИЯ ВЫПОЛНЯЕМЫЕ ПРИ РАСЧЕТЕ
//************************************************************************************************************
