//------------------------------------------------------------------------------------------------------------
//                                                                                    (c) корпорация Галактика
// Галактика 9.1 - модуль "Электронная отчетность"
// Алгоритмы расчета : "Декларация по ЕНВД"
//------------------------------------------------------------------------------------------------------------


//------------------------------------------------------------------------------------------------------------
@Script GetStrValFormat(fld:string):string;
@begin
  var bufRes: string;

  bufRes := Trim(String(XMLMAP.GetAttrValueByName(fld)));

  if (bufRes = '')
  then Result := '0'
  else if (Double(bufRes) < 0)
       then Result := '('+bufRes+')'
       else Result := bufRes;
@end.

//------------------------------------------------------------------------------------------------------------
@Script GetStrVal(fld:string):string;
@begin
  Result := Trim(XMLMAP.GetAttrValueByName(fld));
@end.

//------------------------------------------------------------------------------------------------------------
@Script GetDblVal(fld:string):double;
@begin
  Result := Double(XMLMAP.GetAttrValueByName(fld));
@end.

//------------------------------------------------------------------------------------------------------------
@Script GetFldVis(fld:string):boolean;
@begin
  Result := XMLMAP.GetAttrVisByName(fld);
@end.

//------------------------------------------------------------------------------------------------------------
@Script SetFldVal(fld:string; val:variant);
@begin
  XMLMAP.SetVariantAttrValueByName(fld, val, 2);
@end.

//------------------------------------------------------------------------------------------------------------
@Script SetFldVis(fld:string;vis:boolean);
@begin
  XMLMAP.SetAttrVisByName(fld,vis);
@end.

@Script GetCountFld(fld:string):longint;
@begin
  Result := XMLMap.GetNodeCountByName(fld);
@end.
//------------------------------------------------------------------------------------------------------------
@Script GetIter(iter:longint):string;
@begin
  Result := '';
  if (iter > 0)
    Result := '[' + String(iter) + ']';
@end.

//------------------------------------------------------------------------------------------------------------
@Script MessageErrorStop_ALG(mesMesAdrXML, mesStr, mesPole, mesMes: string; mesCountIter: integer = 0): boolean;
@begin
  MesError.InsertMesError(mesMesAdrXML, Comp(0), mesStr, mesPole, mesMes, mesCountIter);
  Result := True;
@end.

//------------------------------------------------------------------------------------------------------------
@Script GetPatVal(expr:string):String;
#include AllTaxObj.Vih
@begin
  Result := String(ПАТ(expr));
@end.

//------------------------------------------------------------------------------------------------------------
@Script GetStrNull(fld:string):boolean;
@begin
  Result := XMLMAP.GetIsNullAttrValueByName(fld);
@end.


//------------------------------------------------------------------------------------------------------------
// Действия выполняемые при проверке видимости элементов документа
@Script On_Visable : boolean;
  #declare IfVis(adrIfVis)
    SetFldVis(#adrIfVis, not GetStrNull(#adrIfVis));
  #end

  #declare SetVisF(adrIfVis)
    SetFldVis(#adrIfVis, False);
  #end

  #declare SetVisT(adrIfVis)
    SetFldVis(#adrIfVis, True);
  #end
@begin
  var fl_1, fl_2 : boolean;
  var i, j,
      bufCount_1, bufCount_2 : integer = 0;
  var NameStr, bufXMLAdr_1, bufXMLAdr_2, bufXMLAdr_3 : string = '';

  #IfVis('Файл/Документ/СвНП/Тлф')

  if not GetStrNull('Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ/ФормРеорг')
  {
    #SetVisT('Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ')
    case Byte(XMLMAP.GetAttrValueByName('Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ/ФормРеорг')) of
      1
    , 2
    , 3
    , 5
    , 6: {
           #SetVisT('Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ/ИННЮЛ')
           #SetVisT('Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ/КПП'  )
         }
      else
         {
           #IfVis('Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ/ИННЮЛ')
           #IfVis('Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ/КПП'  )
         }
    end;
  }
  else #SetVisF('Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ')

  #IfVis('Файл/Документ/Подписант/ФИО/Отчество')

  if Byte(XMLMAP.GetAttrValueByName('Файл/Документ/Подписант/ПрПодп')) = 2
  {
    #SetVisT('Файл/Документ/Подписант/СвПред'        )
    #IfVis  ('Файл/Документ/Подписант/СвПред/НаимОрг')
  }
  else
  {
    if not GetStrNull('Файл/Документ/Подписант/СвПред/НаимДок')
    {
      #SetVisT('Файл/Документ/Подписант/СвПред'        )
      #IfVis  ('Файл/Документ/Подписант/СвПред/НаимОрг')
    }
    else #SetVisF('Файл/Документ/Подписант/СвПред')
  }

  bufCount_1 := GetCountFld('Файл/Документ/ЕНВД/СумНалПУВД/СумПУВД');
  fl_1 := false;

  for (i := 0; i < bufCount_1; i++)
  {
    bufXMLAdr_1 := 'Файл/Документ/ЕНВД/СумНалПУВД/СумПУВД' + getIter(i);
    bufCount_2 := GetCountFld(bufXMLAdr_1 + '/РасчНалВД');
    fl_2 := false;

    for (j := 0; j < bufCount_2; j++)
    {
      bufXMLAdr_2 := bufXMLAdr_1 + '/РасчНалВД' + getIter(j);

      if (    (GetStrVal(bufXMLAdr_2 + '/КодВД'                    ) <> '')
          and (GetStrVal(bufXMLAdr_2 + '/АдрПредДеят/КодРегион'    ) <> '')
          and (GetStrVal(bufXMLAdr_2 + '/РасчНалВДАдр/БазДоход'    ) <> '')
          and (GetStrVal(bufXMLAdr_2 + '/РасчНалВДАдр/К1'          ) <> '')
          and (GetStrVal(bufXMLAdr_2 + '/РасчНалВДАдр/К2'          ) <> '')
          and (GetStrVal(bufXMLAdr_2 + '/РасчНалВДАдр/НалБаза'     ) <> '')
          and (GetStrVal(bufXMLAdr_2 + '/РасчНалВДАдр/Ставка'      ) <> '')
          and (GetStrVal(bufXMLAdr_2 + '/РасчНалВДАдр/СумНалИсчисл') <> ''))
      {
        #SetVisT(bufXMLAdr_2);
        fl_2 := true;

        #IfVis(bufXMLAdr_2 + '/АдрПредДеят/Индекс'      );
        #IfVis(bufXMLAdr_2 + '/АдрПредДеят/Район'       );
        #IfVis(bufXMLAdr_2 + '/АдрПредДеят/Город'       );
        #IfVis(bufXMLAdr_2 + '/АдрПредДеят/НаселПункт'  );
        #IfVis(bufXMLAdr_2 + '/АдрПредДеят/Улица'       );
        #IfVis(bufXMLAdr_2 + '/АдрПредДеят/Дом'         );
        #IfVis(bufXMLAdr_2 + '/АдрПредДеят/Корпус'      );
        #IfVis(bufXMLAdr_2 + '/АдрПредДеят/Кварт'       );

        #IfVis(bufXMLAdr_2 + '/РасчНалВДАдр/ФизПокМес1' );
        #IfVis(bufXMLAdr_2 + '/РасчНалВДАдр/КолДнейМес1');
        #IfVis(bufXMLAdr_2 + '/РасчНалВДАдр/НалБазаМес1');
        #IfVis(bufXMLAdr_2 + '/РасчНалВДАдр/ФизПокМес2' );
        #IfVis(bufXMLAdr_2 + '/РасчНалВДАдр/КолДнейМес2');
        #IfVis(bufXMLAdr_2 + '/РасчНалВДАдр/НалБазаМес2');
        #IfVis(bufXMLAdr_2 + '/РасчНалВДАдр/ФизПокМес3' );
        #IfVis(bufXMLAdr_2 + '/РасчНалВДАдр/КолДнейМес3');
        #IfVis(bufXMLAdr_2 + '/РасчНалВДАдр/НалБазаМес3');
      }
      else #SetVisF(bufXMLAdr_2);
    }

    if (    (fl_2)
        and (GetStrVal(bufXMLAdr_1 + '/ОКТМО') <> '')
        and (GetStrVal(bufXMLAdr_1 + '/НалПУ') <> ''))
    then { #SetVisT(bufXMLAdr_1); fl_1 := true; }
    else   #SetVisF(bufXMLAdr_1);
  }

  if (not fl_1)
  then MessageErrorStop_ALG('', pFH.Func('myGetPage_R1', 1), '', 'К заполнению обязателен хотя бы один Раздела 1 и его подраздел 2');

  #IfVis('Файл/Документ/ЕНВД/СумНалПУ/СумСВУм346.32.2');
  #IfVis('Файл/Документ/ЕНВД/СумНалПУ/СумСВ_ИП'       );
@end. // On_Visable

//------------------------------------------------------------------------------------------------------------
// Действия выполняемые при проверке корректности документа
@Script On_Check : boolean;
  #include AllTaxObj.Vih

  function IsValidKPP_dop(strIn: string; var strGetMes: string) : boolean;
  begin
    //КПП
    strGetMes := 'В значении элемента КПП 5 и 6 знаки должны быть равны 35 или 77';

    Result := False;
    Result := ((SubStr(strIn, 5, 2) = '35') or (SubStr(strIn, 5, 2) = '77'));
  end;

  function IsValidPeriod(strIn: string; var strGetMes: string) : boolean;
  begin
    //Налоговый период
    //Период
    strGetMes := 'Возможные значения:  21, 22, 23, 24, 51, 52, 53, 54';

    Result := False;
    Result :=
    (
         (strIn = '21') or (strIn = '22') or (strIn = '23') or (strIn = '24')
      or (strIn = '51') or (strIn = '52') or (strIn = '53') or (strIn = '54')
    );
  end;

  function IsValidKof(strIn: string; var strGetMes: string) : boolean;
  begin
    //Коэффициент
    strGetMes := 'Формат поля: X.XXX';
    Result := False;
    Result := CheckError.isRegExpr('^[1-9]{1}$', strIn)
              or CheckError.isRegExpr('^[0-9]{1}\.[0-9]{0,3}$', strIn);
  end;

  function IsValidStav(strIn: string; var strGetMes: string) : boolean;
  begin
    //Ставка
    strGetMes := 'Формат поля: XX.X';
    Result := False;
    Result := CheckError.isRegExpr('^[1-9]{2}$', strIn)
              or CheckError.isRegExpr('^[0-9]{2}\.[0-9]{0,1}$', strIn);
  end;

  function IsValidKod(strIn: string; var strGetMes: string) : boolean;
  begin
    strGetMes := 'Формат поля: 2 символа';
    Result := False;
    Result :=    Length(strIn) =  0
              or Length(strIn) =  2;
  end;

  function Visok : boolean;
  begin
    var _Year : integer;
    _Year := Year(StrToDate(GetPatVal('&НачРасч'),'DD.MM.YYYY'));

    if (_Year Mod 4) = 0
      if (_Year Mod 100) = 0
        if (_Year Mod 400) = 0
        then Result := true;
        else Result := false;
      else Result := true;
    else Result := false;
  end;

  function IsValidDay(strIn: double; var strGetMes: string; inpMonth: byte) : boolean;
  begin
    var _Month, _Max : byte;
    _Month := Month(StrToDate(GetPatVal('&НачРасч'),'DD.MM.YYYY'));

    _Max := 31;
    inpMonth--;

    case _Month + inpMonth of
      2  : _Max := if (Visok, 29, 28); // Февраль

      4                // Апрель
    , 6                // Июнь
    , 7                // Июль
    , 9                // Сентябрь
    , 11 : _Max := 30; // Ноябрь

      1                // Январь
    , 3                // Март
    , 5                // Май
    , 8                // Август
    , 10               // Октябрь
    , 12 : _Max := 31; // Декабрь
    end;

    strGetMes := 'Поле не может быть меньше 1 и больше ' + String(_Max);
    Result := False;
    Result :=     strIn >=  1
              and strIn <= _Max;
  end;

 #declare _InsMes(_AdrXML, _Pole, _StrMes)
    MessageErrorStop_ALG
    (
      #_AdrXML,
      NameStr,
      #_Pole,
      #_StrMes
    );
  #end

  #declare _NoKor(_AdrXML, _Pole)
    MessageErrorStop_ALG
    (
      #_AdrXML,
      NameStr,
      #_Pole,
      'Поле не соответствует формату. ' + getMes
    );
  #end

  #declare _NoTek(_AdrXML, _Pole)
    if GetStrVal(#_AdrXML) <> ''
      MessageErrorStop_ALG
      (
        #_AdrXML,
        NameStr,
        #_Pole,
        'При текущих данных поле НЕ должно быть заполнено. Очистите поле или измените данные'
      );
  #end

  #declare _YesTek(_AdrXML, _Pole)
  if GetStrNull(#_AdrXML)
    MessageErrorStop_ALG
    (
      #_AdrXML,
      NameStr,
      #_Pole,
      'Поле обязательно к заполнению'
    );
  #end

  #declare _AlwNeed(_AdrXML, _Pole)
  if GetStrNull(#_AdrXML)
    MessageErrorStop_ALG
    (
      #_AdrXML,
      NameStr,
      #_Pole,
      'Обязательное поле (обязательное расчетное поле будет рассчитано в алгоритме, при наличии необходимых данных)'
    );
 #end

@begin
  var i, j, CountI, CountJ : longint = 0;
  var NameStr, getMes, bufArdI, bufArdJ,
      aSumNalIschOb, aPriznakNP, sPriznakNP, aSumSVYm, aSumCV_IP, aNalPYRasch, aKolDnMes1, aKolDnMes2, aKolDnMes3 : string = '';
  var dSumNalIschOb, dSumSVYm, dSumCV_IP, dNalPYRasch : double;

  //------------------------------------------------------------------------------
  // #region ТИТУЛЬНЫЙ ЛИСТ
  //------------------------------------------------------------------------------
  NameStr := pFH.Func('myGetPage_Title');

  if not IsValidKND(GetStrVal('Файл/Документ/КНД'), '1152016', getMes)
    #_NoKor('Файл/Документ/КНД', 'Код налоговой декларации');

  if not GetStrNull('Файл/Документ/ДатаДок')
  {
    if not IsValidDate(GetStrVal('Файл/Документ/ДатаДок'), getMes)
      #_NoKor('Файл/Документ/ДатаДок', 'Дата документа')
  }
  else  #_YesTek('Файл/Документ/ДатаДок', 'Дата документа')

                                                            if not IsValidPeriod      (GetStrVal('Файл/Документ/Период'                ), getMes) #_NoKor('Файл/Документ/Период'                , 'Налоговый период'        );
                                                            if not IsValidOtchGod     (GetStrVal('Файл/Документ/ОтчетГод'              ), getMes) #_NoKor('Файл/Документ/ОтчетГод'              , 'Отчетный год'            );
                                                            if not IsValidSONO        (GetStrVal('Файл/Документ/КодНО'                 ), getMes) #_NoKor('Файл/Документ/КодНО'                 , 'Код налогового органа'   );
                                                            if not IsValidNomKorr     (GetStrVal('Файл/Документ/НомКорр'               ), getMes) #_NoKor('Файл/Документ/НомКорр'               , 'Номер корректировки'     );
                                                            if not IsValidOKVED       (GetStrVal('Файл/Документ/СвНП/ОКВЭД'            ), getMes) #_NoKor('Файл/Документ/СвНП/ОКВЭД'            , 'ОКВЭД'                   );
  if not GetStrNull('Файл/Документ/СвНП/Тлф'              ) if not IsValidTlf         (GetStrVal('Файл/Документ/СвНП/Тлф'              ), getMes) #_NoKor('Файл/Документ/СвНП/Тлф'              , 'Контактный телефон'      );
                                                            if not IsValidNaimOrg     (GetStrVal('Файл/Документ/СвНП/НПЮЛ/НаимОрг'     ), getMes) #_NoKor('Файл/Документ/СвНП/НПЮЛ/НаимОрг'     , 'Наименование организации');
                                                            if not IsValidINNUL       (GetStrVal('Файл/Документ/СвНП/НПЮЛ/ИННЮЛ'       ), getMes) #_NoKor('Файл/Документ/СвНП/НПЮЛ/ИННЮЛ'       , 'ИНН'                     );
                                                            if not CheckError.Prov_INN(GetStrVal('Файл/Документ/СвНП/НПЮЛ/ИННЮЛ'       ), getMes) #_NoKor('Файл/Документ/СвНП/НПЮЛ/ИННЮЛ'       , 'ИНН'                     );
                                                            if not IsValidKPP         (GetStrVal('Файл/Документ/СвНП/НПЮЛ/КПП'         ), getMes) #_NoKor('Файл/Документ/СвНП/НПЮЛ/КПП'         , 'КПП'                     );
                                                            if not IsValidKPP_dop     (GetStrVal('Файл/Документ/СвНП/НПЮЛ/КПП'         ), getMes) #_NoKor('Файл/Документ/СвНП/НПЮЛ/КПП'         , 'КПП'                     );
                                                            if not IsValidPrPodp      (GetStrVal('Файл/Документ/Подписант/ПрПодп'      ), getMes) #_NoKor('Файл/Документ/Подписант/ПрПодп'      , 'Признак подписанта'      );
                                                            if not IsValidFIO         (GetStrVal('Файл/Документ/Подписант/ФИО/Фамилия' ), getMes) #_NoKor('Файл/Документ/Подписант/ФИО/Фамилия' , 'Фамилия'                 );
                                                            if not IsValidFIO         (GetStrVal('Файл/Документ/Подписант/ФИО/Имя'     ), getMes) #_NoKor('Файл/Документ/Подписант/ФИО/Имя'     , 'Имя'                     );
  if not GetStrNull('Файл/Документ/Подписант/ФИО/Отчество') if not IsValidFIO         (GetStrVal('Файл/Документ/Подписант/ФИО/Отчество'), getMes) #_NoKor('Файл/Документ/Подписант/ФИО/Отчество', 'Отчество'                );

  if GetStrVal('Файл/Документ/Подписант/ПрПодп') = '2'
  {
    #_AlwNeed('Файл/Документ/Подписант/СвПред/НаимДок', 'Наименование документа');
    if not GetStrNull('Файл/Документ/Подписант/СвПред/НаимОрг')
      if not IsValidNaimOrg(GetStrVal('Файл/Документ/Подписант/СвПред/НаимОрг'), getMes)
        #_NoKor('Файл/Документ/Подписант/СвПред/НаимОрг', 'Наименование организации');
  }
  else
  {
    #_NoTek('Файл/Документ/Подписант/СвПред/НаимДок', 'Наименование документов');
    #_NoTek('Файл/Документ/Подписант/СвПред/НаимОрг', 'Наименование организации');
  }
  //------------------------------------------------------------------------------
  // #endregion ТИТУЛЬНЫЙ ЛИСТ
  //------------------------------------------------------------------------------


  //------------------------------------------------------------------------------
  // #region РАЗДЕЛ 1
  //------------------------------------------------------------------------------
  CountI := GetCountFld('Файл/Документ/ЕНВД/СумНалПУВД/СумПУВД');

  for (i := 0; i < CountI; i++)
  {
    bufArdI := 'Файл/Документ/ЕНВД/СумНалПУВД/СумПУВД' + GetIter(i);

    if (GetFldVis(bufArdI))
    {
      NameStr := pFH.Func('myGetPage_R1', i+1);

      if not GetStrNull(bufArdI + '/ОКТМО')
      {
        if  not IsValidOKTMO (GetStrVal(bufArdI + '/ОКТМО'), getMes)
          #_NoKor(bufArdI + '/ОКТМО', 'Стр. 010')
      }
      else
        #_YesTek(bufArdI + '/ОКТМО', 'Стр. 010')

      //------------------------------------------------------------------------------
      // #region РАЗДЕЛ 2
      //------------------------------------------------------------------------------
      CountJ := GetCountFld(bufArdI + '/РасчНалВД');

      for (j := 0; j < CountJ; j++)
      {
        bufArdJ := bufArdI + '/РасчНалВД' + GetIter(j);

        if (GetFldVis(bufArdJ))
        {
          NameStr := pFH.Func('myGetPage_R2', i+1, j+1);

          aKolDnMes1 := bufArdJ + '/РасчНалВДАдр/КолДнейМес1';   if not GetStrNull(aKolDnMes1) if not IsValidDay(GetDblVal(aKolDnMes1), getMes, 1) #_NoKor(aKolDnMes1, 'Стр. 070 гр.3')
          aKolDnMes2 := bufArdJ + '/РасчНалВДАдр/КолДнейМес2';   if not GetStrNull(aKolDnMes2) if not IsValidDay(GetDblVal(aKolDnMes2), getMes, 2) #_NoKor(aKolDnMes2, 'Стр. 080 гр.3')
          aKolDnMes3 := bufArdJ + '/РасчНалВДАдр/КолДнейМес3';   if not GetStrNull(aKolDnMes3) if not IsValidDay(GetDblVal(aKolDnMes3), getMes, 3) #_NoKor(aKolDnMes3, 'Стр. 090 гр.3')

          if GetStrNull(bufArdJ + '/КодВД'                ) #_YesTek(bufArdJ + '/КодВД'                , 'Стр. 010'   )
          if GetStrNull(bufArdJ + '/АдрПредДеят/КодРегион') #_YesTek(bufArdJ + '/АдрПредДеят/КодРегион', 'Код региона')
          if GetStrNull(bufArdJ + '/РасчНалВДАдр/БазДоход') #_YesTek(bufArdJ + '/РасчНалВДАдр/БазДоход', 'Стр. 040'   )

          if not GetStrNull(bufArdJ + '/РасчНалВДАдр/К1')
          {
            if  not IsValidKof(GetStrVal(bufArdJ + '/РасчНалВДАдр/К1'), getMes)
              #_NoKor(bufArdJ + '/РасчНалВДАдр/К1', 'Стр. 050')
          }
          else
            #_YesTek(bufArdJ + '/РасчНалВДАдр/К1', 'Стр. 050')

          if not GetStrNull(bufArdJ + '/РасчНалВДАдр/К2')
          {
            if  not IsValidKof(GetStrVal(bufArdJ + '/РасчНалВДАдр/К2'), getMes)
              #_NoKor(bufArdJ + '/РасчНалВДАдр/К2', 'Стр. 060')
          }
          else
            #_YesTek(bufArdJ + '/РасчНалВДАдр/К2', 'Стр. 060')

          if GetStrNull(bufArdJ + '/РасчНалВДАдр/НалБаза'     ) #_YesTek(bufArdJ + '/РасчНалВДАдр/НалБаза'     , 'Стр. 100')
          if GetStrNull(bufArdJ + '/РасчНалВДАдр/Ставка'      ) #_YesTek(bufArdJ + '/РасчНалВДАдр/Ставка'      , 'Стр. 105')
          if GetStrNull(bufArdJ + '/РасчНалВДАдр/СумНалИсчисл') #_YesTek(bufArdJ + '/РасчНалВДАдр/СумНалИсчисл', 'Стр. 110')
        }
      }
      //------------------------------------------------------------------------------
      // #endregion РАЗДЕЛ 2
      //------------------------------------------------------------------------------
    }
  }
  //------------------------------------------------------------------------------
  // #endregion РАЗДЕЛ 1
  //------------------------------------------------------------------------------


  //------------------------------------------------------------------------------
  // #region РАЗДЕЛ 3
  //------------------------------------------------------------------------------
  NameStr := pFH.Func('myGetPage_R3');

  aSumNalIschOb := 'Файл/Документ/ЕНВД/СумНалПУ/СумНалИсчислОбщ';  dSumNalIschOb:= GetDblVal(aSumNalIschOb);
  aPriznakNP    := 'Файл/Документ/ЕНВД/СумНалПУ/ПризнакНП';        sPriznakNP   := GetStrVal(aPriznakNP);
  aSumSVYm      := 'Файл/Документ/ЕНВД/СумНалПУ/СумСВУм346.32.2';  dSumSVYm     := GetDblVal(aSumSVYm);
  aSumCV_IP     := 'Файл/Документ/ЕНВД/СумНалПУ/СумСВ_ИП';         dSumCV_IP    := GetDblVal(aSumCV_IP );
  aNalPYRasch   := 'Файл/Документ/ЕНВД/СумНалПУ/НалПУРасч';        dNalPYRasch  := GetDblVal(aNalPYRasch);

  if sPriznakNP = '1'
  {
    if (dSumCV_IP <> 0)
      #_NoTek(aSumCV_IP, 'Стр. 030');

    if dNalPYRasch < (dSumNalIschOb * 50 / 100)
      #_InsMes(aNalPYRasch, 'Стр. 040', 'Строка должна быть больше или равно 50% стр. 010');
  }
  else
  {
    if (dSumSVYm <> 0)
      #_NoTek(aSumSVYm , 'Стр. 020');

    if (dNalPYRasch < 0)
      #_InsMes(aNalPYRasch,'Стр. 040','Строка должна быть больше или равно 0');
  }
  //------------------------------------------------------------------------------
  // #endregion РАЗДЕЛ 3
  //------------------------------------------------------------------------------
@end. // On_Check

//------------------------------------------------------------------------------------------------------------
// Действия выполняемые при расчете документа
@Script On_Recalc : boolean;
  #declare _Log(_strAdr, _strMes, _strVal)
    MesError.InsertRasch(NameStr, #_strAdr, #_strMes, #_strVal, 0);
  #end

  #declare _GV(_strAdr)
    GetStrValFormat(#_strAdr)
  #end

  #declare SetDbl(_fld, _val)
    SetFldVal(#_fld, #_val);
    #_val := GetDblVal(#_fld);
  #end

@begin
  var i, j, CountI, CountJ : longint = 0;
  var NameStr, getMes, bufArdI, bufArdJ,
      mNalBaza, mSumNalIsch, vNalBaza, vSumNalIsch, vSumNalIschOb, mSumNalIschOb, mNalPYRasch, vNalPYRasch, mNalPY,
      vNalPY, aNalBazaMes1, aNalBazaMes2, aNalBazaMes3, aNalBaza, aStavka, aSumNalIsch, aSumNalIschOb, aPriznakNP, sPriznakNP, aNalPY,
      aSumSVYm, aSumCV_IP, aNalPYRasch, vNalBazaMes1, vNalBazaMes2, vNalBazaMes3, mNalBazaMes1, mNalBazaMes2, mNalBazaMes3,
      aBazDox, aK1, aK2, aFizPokMes1, aFizPokMes2, aFizPokMes3, aKolDnMes1, aKolDnMes2, aKolDnMes3 : string = '';
  var dNalBazaMes1, dNalBazaMes2, dNalBazaMes3, dNalBaza, dStavka, dSumNalIsch, dSumNalIschOb, dSumSVYm, dSumCV_IP,
      dNalPYRasch, dNalPY, dBazDox, dK1, dK2, dFizPokMes1, dFizPokMes2, dFizPokMes3, dKolDnMes1, dKolDnMes2, dKolDnMes3 : double = 0;

  aSumNalIschOb := 'Файл/Документ/ЕНВД/СумНалПУ/СумНалИсчислОбщ';
  aPriznakNP    := 'Файл/Документ/ЕНВД/СумНалПУ/ПризнакНП'      ;   sPriznakNP := GetStrVal(aPriznakNP);
  aSumSVYm      := 'Файл/Документ/ЕНВД/СумНалПУ/СумСВУм346.32.2';   dSumSVYm   := GetDblVal(aSumSVYm);
  aSumCV_IP     := 'Файл/Документ/ЕНВД/СумНалПУ/СумСВ_ИП'       ;   dSumCV_IP  := GetDblVal(aSumCV_IP );
  aNalPYRasch   := 'Файл/Документ/ЕНВД/СумНалПУ/НалПУРасч'      ;

  if ((GetStrVal('Файл/Документ/ДатаДок') = '') or (GetStrVal('Файл/Документ/ДатаДок') = 'ДД.ММ.ГГГГ'))
   SetFldVal('Файл/Документ/ДатаДок', DateToStr(Cur_Date, XMLMap.GetAttrVFormatByName('Файл/Документ/ДатаДок')));

  mNalBaza      := 'Стр. 100 = (стр. 070 + стр. 080 + стр. 090) гр. 4'                                                     ;
  mSumNalIsch   := 'Стр. 110 = стр. 100 * стр. 105 / 100'                                                                  ;
  mSumNalIschOb := 'Стр. 010 = сумма стр. 110 всех Разделов 2'                                                             ;
  mNalPY        := 'Стр. 020 = стр. 040 Раздела 3 * (сумма стр. 110 всех Разделов 2 по данному ОКТМО / стр. 010 Раздела 3)';
  mNalBazaMes1  := 'Стр. 070 гр. 4 = стр. 070 гр. 2 * стр. 070 гр. 3 * (стр. 040 * стр. 050 * стр. 060)'                   ;
  mNalBazaMes2  := 'Стр. 080 гр. 4 = стр. 080 гр. 2 * стр. 080 гр. 3 * (стр. 040 * стр. 050 * стр. 060)'                   ;
  mNalBazaMes3  := 'Стр. 090 гр. 4 = стр. 090 гр. 2 * стр. 090 гр. 3 * (стр. 040 * стр. 050 * стр. 060)'                   ;

  CountI := GetCountFld('Файл/Документ/ЕНВД/СумНалПУВД/СумПУВД');

  for (i := 0; i < CountI; i++)
  {
    bufArdI := 'Файл/Документ/ЕНВД/СумНалПУВД/СумПУВД' + GetIter(i);
    CountJ  := GetCountFld(bufArdI+'/РасчНалВД');

    for (j := 0; j < CountJ; j++)
    {
      bufArdJ := bufArdI + '/РасчНалВД' + GetIter(j);
      NameStr := pFH.Func('myGetPage_R2', i+1, j+1);

      aBazDox      := bufArdJ + '/РасчНалВДАдр/БазДоход'    ; dBazDox     := GetDblVal(aBazDox    );
      aK1          := bufArdJ + '/РасчНалВДАдр/К1'          ; dK1         := GetDblVal(aK1        );
      aK2          := bufArdJ + '/РасчНалВДАдр/К2'          ; dK2         := GetDblVal(aK2        );
      aFizPokMes1  := bufArdJ + '/РасчНалВДАдр/ФизПокМес1'  ; dFizPokMes1 := GetDblVal(aFizPokMes1);
      aFizPokMes2  := bufArdJ + '/РасчНалВДАдр/ФизПокМес2'  ; dFizPokMes2 := GetDblVal(aFizPokMes2);
      aFizPokMes3  := bufArdJ + '/РасчНалВДАдр/ФизПокМес3'  ; dFizPokMes3 := GetDblVal(aFizPokMes3);
      aKolDnMes1   := bufArdJ + '/РасчНалВДАдр/КолДнейМес1' ; dKolDnMes1  := GetDblVal(aKolDnMes1 );
      aKolDnMes2   := bufArdJ + '/РасчНалВДАдр/КолДнейМес2' ; dKolDnMes2  := GetDblVal(aKolDnMes2 );
      aKolDnMes3   := bufArdJ + '/РасчНалВДАдр/КолДнейМес3' ; dKolDnMes3  := GetDblVal(aKolDnMes3 );
      aNalBazaMes1 := bufArdJ + '/РасчНалВДАдр/НалБазаМес1' ;
      aNalBazaMes2 := bufArdJ + '/РасчНалВДАдр/НалБазаМес2' ;
      aNalBazaMes3 := bufArdJ + '/РасчНалВДАдр/НалБазаМес3' ;
      aNalBaza     := bufArdJ + '/РасчНалВДАдр/НалБаза'     ;
      aStavka      := bufArdJ + '/РасчНалВДАдр/Ставка'      ; dStavka     := GetDblVal(aStavka );
      aSumNalIsch  := bufArdJ + '/РасчНалВДАдр/СумНалИсчисл';

      dNalBazaMes1 := dFizPokMes1 * dKolDnMes1 * (dBazDox * dK1 * dK2);   #SetDbl(aNalBazaMes1, dNalBazaMes1);
      dNalBazaMes2 := dFizPokMes2 * dKolDnMes2 * (dBazDox * dK1 * dK2);   #SetDbl(aNalBazaMes2, dNalBazaMes2);
      dNalBazaMes3 := dFizPokMes3 * dKolDnMes3 * (dBazDox * dK1 * dK2);   #SetDbl(aNalBazaMes3, dNalBazaMes3);
      dNalBaza     := dNalBazaMes1 + dNalBazaMes2 + dNalBazaMes3      ;   #SetDbl(aNalBaza    , dNalBaza    );
      dSumNalIsch  := dNalBaza * dStavka / 100                        ;   #SetDbl(aSumNalIsch , dSumNalIsch );

      dSumNalIschOb := dSumNalIschOb + Round(dSumNalIsch);
      vSumNalIschOb := vSumNalIschOb + ' + ' + #_GV(aSumNalIsch)

      vNalBazaMes1 := #_GV(aNalBazaMes1)+' = '+#_GV(aFizPokMes1 )+' * '+#_GV(aKolDnMes1  )+' * ('+#_GV(aBazDox     )+' * '+#_GV(aK1)+' * '+#_GV(aK2)+')';
      vNalBazaMes2 := #_GV(aNalBazaMes2)+' = '+#_GV(aFizPokMes2 )+' * '+#_GV(aKolDnMes2  )+' * ('+#_GV(aBazDox     )+' * '+#_GV(aK1)+' * '+#_GV(aK2)+')';
      vNalBazaMes3 := #_GV(aNalBazaMes3)+' = '+#_GV(aFizPokMes3 )+' * '+#_GV(aKolDnMes3  )+' * ('+#_GV(aBazDox     )+' * '+#_GV(aK1)+' * '+#_GV(aK2)+')';
      vNalBaza     := #_GV(aNalBaza    )+' = '+#_GV(aNalBazaMes1)+' + '+#_GV(aNalBazaMes2)+' + ' +#_GV(aNalBazaMes3)                                    ;
      vSumNalIsch  := #_GV(aSumNalIsch )+' = '+#_GV(aNalBaza    )+' * '+#_GV(aStavka     )+' / 100 '                                                                        ;

      #_Log(aNalBazaMes1, mNalBazaMes1, vNalBazaMes1)
      #_Log(aNalBazaMes2, mNalBazaMes2, vNalBazaMes2)
      #_Log(aNalBazaMes3, mNalBazaMes3, vNalBazaMes3)
      #_Log(aNalBaza    , mNalBaza    , vNalBaza    )
      #_Log(aSumNalIsch , mSumNalIsch , vSumNalIsch )
    }
  }



  NameStr := pFH.Func('myGetPage_R3');

  vSumNalIschOb := SubStr(vSumNalIschOb, 4, Length(vSumNalIschOb) - 3);
  if (vSumNalIschOb = '') vSumNalIschOb := '0';

  #SetDbl(aSumNalIschOb, dSumNalIschOb);
  vSumNalIschOb := #_GV(aSumNalIschOb)+' = ' + vSumNalIschOb;
  #_Log(aSumNalIschOb, mSumNalIschOb, vSumNalIschOb);

  if sPriznakNP = '1'
  {
    dNalPYRasch := dSumNalIschOb - dSumSVYm;
    #SetDbl(aNalPYRasch, dNalPYRasch);

    vNalPYRasch := #_GV(aNalPYRasch) +' = '+#_GV(aSumNalIschOb)+' - '+ #_GV(aSumSVYm);
    mNalPYRasch := 'Стр. 040 = стр. 010 - стр. 020'
  }
  else
  {
    dNalPYRasch := dSumNalIschOb - dSumCV_IP;
    #SetDbl(aNalPYRasch, dNalPYRasch);

    vNalPYRasch := #_GV(aNalPYRasch) +' = '+#_GV(aSumNalIschOb)+' - '+ #_GV(aSumCV_IP);
    mNalPYRasch := 'Стр. 040 = стр. 010 - стр. 030'
  }
  #_Log(aNalPYRasch, mNalPYRasch, vNalPYRasch);


  var bufVal : double = 0;

  CountI := GetCountFld('Файл/Документ/ЕНВД/СумНалПУВД/СумПУВД');

  for (i := 0; i < CountI; i++)
  {
    bufArdI := 'Файл/Документ/ЕНВД/СумНалПУВД/СумПУВД' + GetIter(i);
    NameStr := pFH.Func('myGetPage_R1', i+1);

    aNalPY := bufArdI + '/НалПУ';
    dNalPY := 0 ;
    vNalPY := '';

    CountJ := GetCountFld(bufArdI+'/РасчНалВД');

    for (j := 0; j < CountJ; j++)
    {
      bufArdJ := bufArdI + '/РасчНалВД' + GetIter(j);

      aSumNalIsch := bufArdJ + '/РасчНалВДАдр/СумНалИсчисл';
      dNalPY      := dNalPY + GetDblVal(aSumNalIsch);
      vNalPY      := vNalPY + ' + ' + #_GV(aSumNalIsch);
    }

    vNalPY := SubStr(vNalPY, 4, Length(vNalPY) - 3);
    if (vNalPY = '') vNalPY := '0';

    if (i <> CountI - 1)
    {
      dNalPY := dNalPYRasch * (dNalPY / dSumNalIschOb);
      bufVal := bufVal + dNalPY;
    }
    else
    {
      dNalPY := dNalPYRasch - bufVal;
    }

    #SetDbl(aNalPY, dNalPY);
    vNalPY := #_GV(aNalPY)+' = '+#_GV(aNalPYRasch)+' * (('+vNalPY+') / '+#_GV(aSumNalIschOb)+')';
    #_Log(aNalPY, mNalPY, vNalPY);
  }
@end. // On_Recalc

//------------------------------------------------------------------------------------------------------------
// Действия выполняемые при экспорте документа
@Script On_ExportXML : boolean;
@begin
  SetFldVal('Файл/ИдФайл', Replace(_IdFail_, '.xml', ''));

  if (not XMLMap.ExpToXml(_XmlFileName_)) {
    Message('On_ExportXML: '+ XMLMap.GetStLastError, cancelButton+Warning);
    Exit;
  }

  message('Выгружен в файл ' + _XmlFileName_);
@end. // On_ExportXML
