//------------------------------------------------------------------------------------------------------------
//                                                                                    (c) корпорация Галактика
// Галактика 9.1 - модуль "Электронная отчетность"
// Алгоритмы расчета : "Сведения о финансовых вложениях и обязательствах (П-6) (2017)"
//------------------------------------------------------------------------------------------------------------

//============================================================================================================
// #region СЕРВИСНЫЕ МЕТОДЫ
//------------------------------------------------------------------------------------------------------------
@Script GetStrVal(fld: string) : string;
@begin
  Result := Trim(XMLMAP.GetAttrValueByName(fld));
@end.

//------------------------------------------------------------------------------------------------------------
@Script GetDblVal(fld: string) : double;
@begin
  Result := Round(Double(XMLMAP.GetAttrValueByName(fld)), 2);
@end.

//------------------------------------------------------------------------------------------------------------
@Script GetStrValFormat(fld:string):string;
@begin
  var bufRes: string;

  bufRes := Trim(String(XMLMAP.GetAttrValueByName(fld)));

  if (bufRes = '')
  then Result := '0'
  else if (Double(bufRes) < 0)
       then Result := '('+bufRes+')'
       else Result := bufRes;
@end.

//------------------------------------------------------------------------------------------------------------
@Script SetFldVal(fld:string;val:string);
@begin
  XMLMAP.SetAttrValueByName(fld,val,2);
@end.

//------------------------------------------------------------------------------------------------------------
@Script SetFldNull(fld:string);
@begin
  XMLMAP.SetIsNullAttrValueByName(fld);
@end.

//------------------------------------------------------------------------------------------------------------
@Script MesErrStop(mesMesAdrXML, mesPole, mesMes: string): Boolean;
@begin
  MesError.InsertMesError(mesMesAdrXML, Comp(0), '', mesPole, mesMes, 0, 0);
  Result := True;
@end.

//------------------------------------------------------------------------------------------------------------
@Script NullStr(fld:string):Boolean;
@begin
  Result := (GetStrVal(fld) = '');
@end.
// #endregion СЕРВИСНЫЕ МЕТОДЫ
//************************************************************************************************************


//============================================================================================================
//#region ДЕЙСТВИЯ ВЫПОЛНЯЕМЫЕ ПРИ ПРОВЕРКЕ
//------------------------------------------------------------------------------------------------------------
@Script On_Check : boolean;
  //==========================================================================================================
  //#region СЕРВИС
  //----------------------------------------------------------------------------------------------------------
  #undef SG_R1
  #declare SG_R1(_Name, _Num, _Gr)
    a#_Name := 'Файл/Документ/Разд1/Стр#_Num/Гр#_Gr';
    d#_Name := GetDblVal(a#_Name);
  #end

  //----------------------------------------------------------------------------------------------------------
  #undef SG_R2
  #declare SG_R2(_Name, _Num, _Gr)
    a#_Name := 'Файл/Документ/Разд2/Стр#_Num/Гр#_Gr';
    d#_Name := GetDblVal(a#_Name);
  #end

  //----------------------------------------------------------------------------------------------------------
  #undef SG_R3
  #declare SG_R3(_Name, _Num, _Gr)
    a#_Name := 'Файл/Документ/Разд3/Стр#_Num/Гр#_Gr';
    d#_Name := GetDblVal(a#_Name);
  #end

  //----------------------------------------------------------------------------------------------------------
  #undef _IsValid
  #declare _IsValid(_Valid, _AdrXML, _Pole)
    if not #_Valid(#_AdrXML, getMes)
      MesErrStop
      (
        #_AdrXML
      , #_Pole
      , 'Поле не соответствует формату. ' + getMes
      );
  #end

  //----------------------------------------------------------------------------------------------------------
  #undef KS
  #declare KS(_if, _XMLAdr, _NStr, _Gr)
    if (not (#_if))
    { MesErrStop(#_XMLAdr, 'Стр.#_NStr, гр.#_Gr', getMes); }
  #end

  //----------------------------------------------------------------------------------------------------------
  #undef KSgr
  #declare KSgr(_if, _XMLAdr, _NStr, _Gr)
    if (not (#_if))
    { MesErrStop(#_XMLAdr, 'Стр.#_NStr, гр.#_Gr', FormatStr_1(getMes, Trim('#_Gr'))); }
  #end

  //----------------------------------------------------------------------------------------------------------
  #undef KSgr2
  #declare KSgr2(_if, _XMLAdr, _NStr, _Gr)
    if (not (#_if))
    { MesErrStop(#_XMLAdr, 'Стр.#_NStr, гр.#_Gr', FormatStr_2(getMes, Trim('#_Gr'), Trim('#_Gr'))); }
  #end

  //----------------------------------------------------------------------------------------------------------
  #undef   _KSm
  #declare _KSm(_XMLAdr, _Field)
    if (not NullStr(#_XMLAdr))
      if (GetDblVal(#_XMLAdr) <> 0.0)
      { MesErrStop(#_XMLAdr, #_Field, getMes); }
  #end

  //----------------------------------------------------------------------------------------------------------
  function IsValidDate(_adr: string; var _mes: string) : boolean;
  begin //Дата
    _mes := 'Поле обязательно к заполнению';

    Result := False;
    Result := ((not NullStr(_adr)) and (GetStrVal(_adr) <> 'ДД мес ГГГГ'));
  end;

  //----------------------------------------------------------------------------------------------------------
  function IsValidNull(_adr: string; var _mes: string) : boolean;
  begin // Обязательные поля
    _mes := 'Поле обязательно к заполнению';

    Result := False;
    Result := not NullStr(_adr);
  end;
  //#endregion СЕРВИС
  //**********************************************************************************************************
@begin
  //----------------------------------------------------------------------------------------------------------
  // #region ОБЪЯВЛЕНИЕ И ИНИЦИАЛИЗАЦИЯ ПЕРЕМЕННЫХ
  //----------------------------------------------------------------------------------------------------------
  var getMes : String;

  var is6Month : Boolean;
  is6Month := (Month(TaxDat.dEnd) = 6);

  var a010_1, a010_2, a010_3, a010_4, a010_5, a010_6, a010_7, a020_1, a020_2, a020_3, a020_4, a020_5, a020_6, a020_7, a030_1, a030_2, a030_3, a030_4, a030_5, a030_6, a030_7, a040_1
    , a040_2, a040_3, a040_4, a040_5, a040_6, a040_7, a050_1, a050_2, a050_3, a050_4, a050_5, a050_6, a050_7, a060_1, a060_2, a060_3, a060_4, a060_5, a060_6, a060_7, a070_1, a070_2
    , a070_3, a070_4, a070_5, a070_6, a070_7, a080_1, a080_2, a080_3, a080_4, a080_5, a080_6, a080_7, a090_1, a090_2, a090_3, a090_4, a090_5, a090_6, a090_7, a100_1, a100_2, a100_3
    , a100_4, a100_5, a100_6, a100_7, a110_1, a110_2, a110_3, a110_4, a110_5, a110_6, a110_7, a120_1, a120_2, a120_3, a120_4, a120_5, a120_6, a120_7, a130_1, a130_2, a130_3, a130_4
    , a130_5, a130_6, a130_7, a140_1, a140_2, a140_3, a140_4, a140_5, a140_6, a140_7, a150_1, a150_2, a150_3, a150_4, a150_5, a150_6, a150_7, a160_1, a160_2, a160_3, a160_4, a160_5
    , a160_6, a160_7, a170_1, a170_2, a170_3, a170_4, a170_5, a170_6, a170_7, a180_1, a180_2, a180_3, a180_4, a180_5, a180_6, a180_7, a190_1, a190_2, a190_3, a190_4, a190_5, a190_6
    , a190_7, a200_1, a200_2, a200_3, a200_4, a200_5, a200_6, a200_7, a210_1, a210_2, a210_3, a210_4, a210_5, a210_6, a210_7, a220_1, a220_2, a220_3, a220_4, a220_5, a220_6, a220_7
    , a230_1, a230_2, a230_3, a230_4, a230_5, a230_6, a230_7, a240_1, a240_2, a240_3, a240_4, a240_5, a240_6, a240_7, a245_1, a245_2, a245_3, a245_4, a245_5, a245_6, a245_7, a250_1
    , a250_2, a250_3, a250_4, a250_5, a250_6, a250_7, a260_1, a260_2, a260_3, a260_4, a260_5, a260_6, a260_7, a270_1, a270_2, a270_3, a270_4, a270_5, a270_6, a270_7, a280_1, a280_2
    , a280_3, a280_4, a280_5, a280_6, a280_7, a290_1, a290_2, a290_3, a290_4, a290_5, a290_6, a290_7, a300_1, a300_2, a300_3, a300_4, a300_5, a300_6, a300_7, a301_1, a301_2, a301_3
    , a301_4, a301_5, a301_6, a301_7, a310_1, a310_2, a310_3, a310_4, a310_5, a310_6, a310_7, a320_1, a320_2, a320_3, a320_4, a320_5, a320_6, a320_7, a321_1, a321_2, a321_3, a321_4
    , a321_5, a321_6, a321_7, a325_1, a325_2, a325_3, a325_4, a325_5, a325_6, a325_7, a326_1, a326_2, a326_3, a326_4, a326_5, a326_6, a326_7, a327_1, a327_2, a327_3, a327_4, a327_5
    , a327_6, a327_7, a328_1, a328_2, a328_3, a328_4, a328_5, a328_6, a328_7, a329_1, a329_2, a329_3, a329_4, a329_5, a329_6, a329_7, a330_1, a330_2, a330_3, a330_4, a330_5, a330_6
    , a330_7, a340_1, a340_2, a340_3, a340_4, a340_5, a340_6, a340_7, a350_1, a350_2, a350_3, a350_4, a350_5, a350_6, a350_7, a360_1, a360_2, a360_3, a360_4, a360_5, a360_6, a360_7
    , a370_1, a370_2, a370_3, a370_4, a370_5, a370_6, a370_7, a380_1, a380_2, a380_3, a380_4, a380_5, a380_6, a380_7, a390_1, a390_2, a390_3, a390_4, a390_5, a390_6, a390_7, a400_1
    , a400_2, a400_3, a400_4, a400_5, a400_6, a400_7, a410_1, a410_2, a410_3, a410_4, a410_5, a410_6, a410_7, a420_1, a420_2, a420_3, a420_4, a420_5, a420_6, a420_7, a435_1, a435_2
    , a435_3, a435_4, a435_5, a435_6, a435_7, a440_1, a440_2, a440_3, a440_4, a440_5, a440_6, a441_1, a441_2, a441_3, a441_4, a441_5, a441_6, a450_1, a450_2, a450_3, a450_4, a450_5
    , a450_6, a460_1, a460_2, a460_3, a460_4, a460_5, a460_6, a461_1, a461_2, a461_3, a461_4, a461_5, a461_6, a500_1, a500_2, a500_3, a500_4, a500_5, a500_6, a510_1, a510_2, a510_3
    , a510_4, a510_5, a510_6, a520_1, a520_2, a520_3, a520_4, a520_5, a520_6, a530_1, a530_2, a530_3, a530_5, a530_6, a540_1, a540_2, a540_3, a540_4, a540_5, a540_6, a550_1, a550_2
    , a550_3, a550_4, a550_5, a550_6, a560_1, a560_2, a560_3, a560_4, a560_5, a560_6, a570_1, a570_2, a570_3, a570_4, a570_5, a570_6, a580_1, a580_2, a580_3, a580_4, a580_5, a580_6
    , a585_1, a585_2, a585_3, a585_4, a585_5, a585_6, a590_1, a590_2, a590_3, a590_4, a590_5, a590_6, a600_1, a600_2, a600_3, a600_4, a600_5, a600_6, a700_1, a700_2, a710_1, a710_2
    , a720_1, a720_2, a730_1, a730_2, a740_1, a740_2, a750_1, a750_2, a760_1, a760_2, a770_1, a770_2, a780_1, a780_2, a790_1, a790_2, a800_1, a800_2 : String;

  var d010_1, d010_2, d010_3, d010_4, d010_5, d010_6, d010_7, d020_1, d020_2, d020_3, d020_4, d020_5, d020_6, d020_7, d030_1, d030_2, d030_3, d030_4, d030_5, d030_6, d030_7, d040_1
    , d040_2, d040_3, d040_4, d040_5, d040_6, d040_7, d050_1, d050_2, d050_3, d050_4, d050_5, d050_6, d050_7, d060_1, d060_2, d060_3, d060_4, d060_5, d060_6, d060_7, d070_1, d070_2
    , d070_3, d070_4, d070_5, d070_6, d070_7, d080_1, d080_2, d080_3, d080_4, d080_5, d080_6, d080_7, d090_1, d090_2, d090_3, d090_4, d090_5, d090_6, d090_7, d100_1, d100_2, d100_3
    , d100_4, d100_5, d100_6, d100_7, d110_1, d110_2, d110_3, d110_4, d110_5, d110_6, d110_7, d120_1, d120_2, d120_3, d120_4, d120_5, d120_6, d120_7, d130_1, d130_2, d130_3, d130_4
    , d130_5, d130_6, d130_7, d140_1, d140_2, d140_3, d140_4, d140_5, d140_6, d140_7, d150_1, d150_2, d150_3, d150_4, d150_5, d150_6, d150_7, d160_1, d160_2, d160_3, d160_4, d160_5
    , d160_6, d160_7, d170_1, d170_2, d170_3, d170_4, d170_5, d170_6, d170_7, d180_1, d180_2, d180_3, d180_4, d180_5, d180_6, d180_7, d190_1, d190_2, d190_3, d190_4, d190_5, d190_6
    , d190_7, d200_1, d200_2, d200_3, d200_4, d200_5, d200_6, d200_7, d210_1, d210_2, d210_3, d210_4, d210_5, d210_6, d210_7, d220_1, d220_2, d220_3, d220_4, d220_5, d220_6, d220_7
    , d230_1, d230_2, d230_3, d230_4, d230_5, d230_6, d230_7, d240_1, d240_2, d240_3, d240_4, d240_5, d240_6, d240_7, d245_1, d245_2, d245_3, d245_4, d245_5, d245_6, d245_7, d250_1
    , d250_2, d250_3, d250_4, d250_5, d250_6, d250_7, d260_1, d260_2, d260_3, d260_4, d260_5, d260_6, d260_7, d270_1, d270_2, d270_3, d270_4, d270_5, d270_6, d270_7, d280_1, d280_2
    , d280_3, d280_4, d280_5, d280_6, d280_7, d290_1, d290_2, d290_3, d290_4, d290_5, d290_6, d290_7, d300_1, d300_2, d300_3, d300_4, d300_5, d300_6, d300_7, d301_1, d301_2, d301_3
    , d301_4, d301_5, d301_6, d301_7, d310_1, d310_2, d310_3, d310_4, d310_5, d310_6, d310_7, d320_1, d320_2, d320_3, d320_4, d320_5, d320_6, d320_7, d321_1, d321_2, d321_3, d321_4
    , d321_5, d321_6, d321_7, d325_1, d325_2, d325_3, d325_4, d325_5, d325_6, d325_7, d326_1, d326_2, d326_3, d326_4, d326_5, d326_6, d326_7, d327_1, d327_2, d327_3, d327_4, d327_5
    , d327_6, d327_7, d328_1, d328_2, d328_3, d328_4, d328_5, d328_6, d328_7, d329_1, d329_2, d329_3, d329_4, d329_5, d329_6, d329_7, d330_1, d330_2, d330_3, d330_4, d330_5, d330_6
    , d330_7, d340_1, d340_2, d340_3, d340_4, d340_5, d340_6, d340_7, d350_1, d350_2, d350_3, d350_4, d350_5, d350_6, d350_7, d360_1, d360_2, d360_3, d360_4, d360_5, d360_6, d360_7
    , d370_1, d370_2, d370_3, d370_4, d370_5, d370_6, d370_7, d380_1, d380_2, d380_3, d380_4, d380_5, d380_6, d380_7, d390_1, d390_2, d390_3, d390_4, d390_5, d390_6, d390_7, d400_1
    , d400_2, d400_3, d400_4, d400_5, d400_6, d400_7, d410_1, d410_2, d410_3, d410_4, d410_5, d410_6, d410_7, d420_1, d420_2, d420_3, d420_4, d420_5, d420_6, d420_7, d435_1, d435_2
    , d435_3, d435_4, d435_5, d435_6, d435_7, d440_1, d440_2, d440_3, d440_4, d440_5, d440_6, d441_1, d441_2, d441_3, d441_4, d441_5, d441_6, d450_1, d450_2, d450_3, d450_4, d450_5
    , d450_6, d460_1, d460_2, d460_3, d460_4, d460_5, d460_6, d461_1, d461_2, d461_3, d461_4, d461_5, d461_6, d500_1, d500_2, d500_3, d500_4, d500_5, d500_6, d510_1, d510_2, d510_3
    , d510_4, d510_5, d510_6, d520_1, d520_2, d520_3, d520_4, d520_5, d520_6, d530_1, d530_2, d530_3, d530_5, d530_6, d540_1, d540_2, d540_3, d540_4, d540_5, d540_6, d550_1, d550_2
    , d550_3, d550_4, d550_5, d550_6, d560_1, d560_2, d560_3, d560_4, d560_5, d560_6, d570_1, d570_2, d570_3, d570_4, d570_5, d570_6, d580_1, d580_2, d580_3, d580_4, d580_5, d580_6
    , d585_1, d585_2, d585_3, d585_4, d585_5, d585_6, d590_1, d590_2, d590_3, d590_4, d590_5, d590_6, d600_1, d600_2, d600_3, d600_4, d600_5, d600_6, d700_1, d700_2, d710_1, d710_2
    , d720_1, d720_2, d730_1, d730_2, d740_1, d740_2, d750_1, d750_2, d760_1, d760_2, d770_1, d770_2, d780_1, d780_2, d790_1, d790_2, d800_1, d800_2 : Double;

  //Раздел 1
  #SG_R1(010_1,010,1)  #SG_R1(010_2,010,2)  #SG_R1(010_3,010,3)  #SG_R1(010_4,010,4)  #SG_R1(010_5,010,5)  #SG_R1(010_6,010,6)  #SG_R1(010_7,010,7)
  #SG_R1(020_1,020,1)  #SG_R1(020_2,020,2)  #SG_R1(020_3,020,3)  #SG_R1(020_4,020,4)  #SG_R1(020_5,020,5)  #SG_R1(020_6,020,6)  #SG_R1(020_7,020,7)
  #SG_R1(030_1,030,1)  #SG_R1(030_2,030,2)  #SG_R1(030_3,030,3)  #SG_R1(030_4,030,4)  #SG_R1(030_5,030,5)  #SG_R1(030_6,030,6)  #SG_R1(030_7,030,7)
  #SG_R1(040_1,040,1)  #SG_R1(040_2,040,2)  #SG_R1(040_3,040,3)  #SG_R1(040_4,040,4)  #SG_R1(040_5,040,5)  #SG_R1(040_6,040,6)  #SG_R1(040_7,040,7)
  #SG_R1(050_1,050,1)  #SG_R1(050_2,050,2)  #SG_R1(050_3,050,3)  #SG_R1(050_4,050,4)  #SG_R1(050_5,050,5)  #SG_R1(050_6,050,6)  #SG_R1(050_7,050,7)
  #SG_R1(060_1,060,1)  #SG_R1(060_2,060,2)  #SG_R1(060_3,060,3)  #SG_R1(060_4,060,4)  #SG_R1(060_5,060,5)  #SG_R1(060_6,060,6)  #SG_R1(060_7,060,7)
  #SG_R1(070_1,070,1)  #SG_R1(070_2,070,2)  #SG_R1(070_3,070,3)  #SG_R1(070_4,070,4)  #SG_R1(070_5,070,5)  #SG_R1(070_6,070,6)  #SG_R1(070_7,070,7)
  #SG_R1(080_1,080,1)  #SG_R1(080_2,080,2)  #SG_R1(080_3,080,3)  #SG_R1(080_4,080,4)  #SG_R1(080_5,080,5)  #SG_R1(080_6,080,6)  #SG_R1(080_7,080,7)
  #SG_R1(090_1,090,1)  #SG_R1(090_2,090,2)  #SG_R1(090_3,090,3)  #SG_R1(090_4,090,4)  #SG_R1(090_5,090,5)  #SG_R1(090_6,090,6)  #SG_R1(090_7,090,7)
  #SG_R1(100_1,100,1)  #SG_R1(100_2,100,2)  #SG_R1(100_3,100,3)  #SG_R1(100_4,100,4)  #SG_R1(100_5,100,5)  #SG_R1(100_6,100,6)  #SG_R1(100_7,100,7)
  #SG_R1(110_1,110,1)  #SG_R1(110_2,110,2)  #SG_R1(110_3,110,3)  #SG_R1(110_4,110,4)  #SG_R1(110_5,110,5)  #SG_R1(110_6,110,6)  #SG_R1(110_7,110,7)
  #SG_R1(120_1,120,1)  #SG_R1(120_2,120,2)  #SG_R1(120_3,120,3)  #SG_R1(120_4,120,4)  #SG_R1(120_5,120,5)  #SG_R1(120_6,120,6)  #SG_R1(120_7,120,7)
  #SG_R1(130_1,130,1)  #SG_R1(130_2,130,2)  #SG_R1(130_3,130,3)  #SG_R1(130_4,130,4)  #SG_R1(130_5,130,5)  #SG_R1(130_6,130,6)  #SG_R1(130_7,130,7)
  #SG_R1(140_1,140,1)  #SG_R1(140_2,140,2)  #SG_R1(140_3,140,3)  #SG_R1(140_4,140,4)  #SG_R1(140_5,140,5)  #SG_R1(140_6,140,6)  #SG_R1(140_7,140,7)
  #SG_R1(150_1,150,1)  #SG_R1(150_2,150,2)  #SG_R1(150_3,150,3)  #SG_R1(150_4,150,4)  #SG_R1(150_5,150,5)  #SG_R1(150_6,150,6)  #SG_R1(150_7,150,7)
  #SG_R1(160_1,160,1)  #SG_R1(160_2,160,2)  #SG_R1(160_3,160,3)  #SG_R1(160_4,160,4)  #SG_R1(160_5,160,5)  #SG_R1(160_6,160,6)  #SG_R1(160_7,160,7)
  #SG_R1(170_1,170,1)  #SG_R1(170_2,170,2)  #SG_R1(170_3,170,3)  #SG_R1(170_4,170,4)  #SG_R1(170_5,170,5)  #SG_R1(170_6,170,6)  #SG_R1(170_7,170,7)
  #SG_R1(180_1,180,1)  #SG_R1(180_2,180,2)  #SG_R1(180_3,180,3)  #SG_R1(180_4,180,4)  #SG_R1(180_5,180,5)  #SG_R1(180_6,180,6)  #SG_R1(180_7,180,7)
  #SG_R1(190_1,190,1)  #SG_R1(190_2,190,2)  #SG_R1(190_3,190,3)  #SG_R1(190_4,190,4)  #SG_R1(190_5,190,5)  #SG_R1(190_6,190,6)  #SG_R1(190_7,190,7)
  #SG_R1(200_1,200,1)  #SG_R1(200_2,200,2)  #SG_R1(200_3,200,3)  #SG_R1(200_4,200,4)  #SG_R1(200_5,200,5)  #SG_R1(200_6,200,6)  #SG_R1(200_7,200,7)
  #SG_R1(210_1,210,1)  #SG_R1(210_2,210,2)  #SG_R1(210_3,210,3)  #SG_R1(210_4,210,4)  #SG_R1(210_5,210,5)  #SG_R1(210_6,210,6)  #SG_R1(210_7,210,7)
  #SG_R1(220_1,220,1)  #SG_R1(220_2,220,2)  #SG_R1(220_3,220,3)  #SG_R1(220_4,220,4)  #SG_R1(220_5,220,5)  #SG_R1(220_6,220,6)  #SG_R1(220_7,220,7)
  #SG_R1(230_1,230,1)  #SG_R1(230_2,230,2)  #SG_R1(230_3,230,3)  #SG_R1(230_4,230,4)  #SG_R1(230_5,230,5)  #SG_R1(230_6,230,6)  #SG_R1(230_7,230,7)
  #SG_R1(240_1,240,1)  #SG_R1(240_2,240,2)  #SG_R1(240_3,240,3)  #SG_R1(240_4,240,4)  #SG_R1(240_5,240,5)  #SG_R1(240_6,240,6)  #SG_R1(240_7,240,7)
  #SG_R1(245_1,245,1)  #SG_R1(245_2,245,2)  #SG_R1(245_3,245,3)  #SG_R1(245_4,245,4)  #SG_R1(245_5,245,5)  #SG_R1(245_6,245,6)  #SG_R1(245_7,245,7)
  #SG_R1(250_1,250,1)  #SG_R1(250_2,250,2)  #SG_R1(250_3,250,3)  #SG_R1(250_4,250,4)  #SG_R1(250_5,250,5)  #SG_R1(250_6,250,6)  #SG_R1(250_7,250,7)
  #SG_R1(260_1,260,1)  #SG_R1(260_2,260,2)  #SG_R1(260_3,260,3)  #SG_R1(260_4,260,4)  #SG_R1(260_5,260,5)  #SG_R1(260_6,260,6)  #SG_R1(260_7,260,7)
  #SG_R1(270_1,270,1)  #SG_R1(270_2,270,2)  #SG_R1(270_3,270,3)  #SG_R1(270_4,270,4)  #SG_R1(270_5,270,5)  #SG_R1(270_6,270,6)  #SG_R1(270_7,270,7)
  #SG_R1(280_1,280,1)  #SG_R1(280_2,280,2)  #SG_R1(280_3,280,3)  #SG_R1(280_4,280,4)  #SG_R1(280_5,280,5)  #SG_R1(280_6,280,6)  #SG_R1(280_7,280,7)
  #SG_R1(290_1,290,1)  #SG_R1(290_2,290,2)  #SG_R1(290_3,290,3)  #SG_R1(290_4,290,4)  #SG_R1(290_5,290,5)  #SG_R1(290_6,290,6)  #SG_R1(290_7,290,7)
  #SG_R1(300_1,300,1)  #SG_R1(300_2,300,2)  #SG_R1(300_3,300,3)  #SG_R1(300_4,300,4)  #SG_R1(300_5,300,5)  #SG_R1(300_6,300,6)  #SG_R1(300_7,300,7)
  #SG_R1(301_1,301,1)  #SG_R1(301_2,301,2)  #SG_R1(301_3,301,3)  #SG_R1(301_4,301,4)  #SG_R1(301_5,301,5)  #SG_R1(301_6,301,6)  #SG_R1(301_7,301,7)
  #SG_R1(310_1,310,1)  #SG_R1(310_2,310,2)  #SG_R1(310_3,310,3)  #SG_R1(310_4,310,4)  #SG_R1(310_5,310,5)  #SG_R1(310_6,310,6)  #SG_R1(310_7,310,7)
  #SG_R1(320_1,320,1)  #SG_R1(320_2,320,2)  #SG_R1(320_3,320,3)  #SG_R1(320_4,320,4)  #SG_R1(320_5,320,5)  #SG_R1(320_6,320,6)  #SG_R1(320_7,320,7)
  #SG_R1(321_1,321,1)  #SG_R1(321_2,321,2)  #SG_R1(321_3,321,3)  #SG_R1(321_4,321,4)  #SG_R1(321_5,321,5)  #SG_R1(321_6,321,6)  #SG_R1(321_7,321,7)
  #SG_R1(325_1,325,1)  #SG_R1(325_2,325,2)  #SG_R1(325_3,325,3)  #SG_R1(325_4,325,4)  #SG_R1(325_5,325,5)  #SG_R1(325_6,325,6)  #SG_R1(325_7,325,7)
  #SG_R1(326_1,326,1)  #SG_R1(326_2,326,2)  #SG_R1(326_3,326,3)  #SG_R1(326_4,326,4)  #SG_R1(326_5,326,5)  #SG_R1(326_6,326,6)  #SG_R1(326_7,326,7)
  #SG_R1(327_1,327,1)  #SG_R1(327_2,327,2)  #SG_R1(327_3,327,3)  #SG_R1(327_4,327,4)  #SG_R1(327_5,327,5)  #SG_R1(327_6,327,6)  #SG_R1(327_7,327,7)
  #SG_R1(328_1,328,1)  #SG_R1(328_2,328,2)  #SG_R1(328_3,328,3)  #SG_R1(328_4,328,4)  #SG_R1(328_5,328,5)  #SG_R1(328_6,328,6)  #SG_R1(328_7,328,7)
  #SG_R1(329_1,329,1)  #SG_R1(329_2,329,2)  #SG_R1(329_3,329,3)  #SG_R1(329_4,329,4)  #SG_R1(329_5,329,5)  #SG_R1(329_6,329,6)  #SG_R1(329_7,329,7)
  #SG_R1(330_1,330,1)  #SG_R1(330_2,330,2)  #SG_R1(330_3,330,3)  #SG_R1(330_4,330,4)  #SG_R1(330_5,330,5)  #SG_R1(330_6,330,6)  #SG_R1(330_7,330,7)
  #SG_R1(340_1,340,1)  #SG_R1(340_2,340,2)  #SG_R1(340_3,340,3)  #SG_R1(340_4,340,4)  #SG_R1(340_5,340,5)  #SG_R1(340_6,340,6)  #SG_R1(340_7,340,7)
  #SG_R1(350_1,350,1)  #SG_R1(350_2,350,2)  #SG_R1(350_3,350,3)  #SG_R1(350_4,350,4)  #SG_R1(350_5,350,5)  #SG_R1(350_6,350,6)  #SG_R1(350_7,350,7)
  #SG_R1(360_1,360,1)  #SG_R1(360_2,360,2)  #SG_R1(360_3,360,3)  #SG_R1(360_4,360,4)  #SG_R1(360_5,360,5)  #SG_R1(360_6,360,6)  #SG_R1(360_7,360,7)
  #SG_R1(370_1,370,1)  #SG_R1(370_2,370,2)  #SG_R1(370_3,370,3)  #SG_R1(370_4,370,4)  #SG_R1(370_5,370,5)  #SG_R1(370_6,370,6)  #SG_R1(370_7,370,7)
  #SG_R1(380_1,380,1)  #SG_R1(380_2,380,2)  #SG_R1(380_3,380,3)  #SG_R1(380_4,380,4)  #SG_R1(380_5,380,5)  #SG_R1(380_6,380,6)  #SG_R1(380_7,380,7)
  #SG_R1(390_1,390,1)  #SG_R1(390_2,390,2)  #SG_R1(390_3,390,3)  #SG_R1(390_4,390,4)  #SG_R1(390_5,390,5)  #SG_R1(390_6,390,6)  #SG_R1(390_7,390,7)
  #SG_R1(400_1,400,1)  #SG_R1(400_2,400,2)  #SG_R1(400_3,400,3)  #SG_R1(400_4,400,4)  #SG_R1(400_5,400,5)  #SG_R1(400_6,400,6)  #SG_R1(400_7,400,7)
  #SG_R1(410_1,410,1)  #SG_R1(410_2,410,2)  #SG_R1(410_3,410,3)  #SG_R1(410_4,410,4)  #SG_R1(410_5,410,5)  #SG_R1(410_6,410,6)  #SG_R1(410_7,410,7)
  #SG_R1(420_1,420,1)  #SG_R1(420_2,420,2)  #SG_R1(420_3,420,3)  #SG_R1(420_4,420,4)  #SG_R1(420_5,420,5)  #SG_R1(420_6,420,6)  #SG_R1(420_7,420,7)
  #SG_R1(435_1,435,1)  #SG_R1(435_2,435,2)  #SG_R1(435_3,435,3)  #SG_R1(435_4,435,4)  #SG_R1(435_5,435,5)  #SG_R1(435_6,435,6)  #SG_R1(435_7,435,7)
  #SG_R1(440_1,440,1)  #SG_R1(440_2,440,2)  #SG_R1(440_3,440,3)  #SG_R1(440_4,440,4)  #SG_R1(440_5,440,5)  #SG_R1(440_6,440,6)
  #SG_R1(441_1,441,1)  #SG_R1(441_2,441,2)  #SG_R1(441_3,441,3)  #SG_R1(441_4,441,4)  #SG_R1(441_5,441,5)  #SG_R1(441_6,441,6)
  #SG_R1(450_1,450,1)  #SG_R1(450_2,450,2)  #SG_R1(450_3,450,3)  #SG_R1(450_4,450,4)  #SG_R1(450_5,450,5)  #SG_R1(450_6,450,6)
  #SG_R1(460_1,460,1)  #SG_R1(460_2,460,2)  #SG_R1(460_3,460,3)  #SG_R1(460_4,460,4)  #SG_R1(460_5,460,5)  #SG_R1(460_6,460,6)
  #SG_R1(461_1,461,1)  #SG_R1(461_2,461,2)  #SG_R1(461_3,461,3)  #SG_R1(461_4,461,4)  #SG_R1(461_5,461,5)  #SG_R1(461_6,461,6)

  //Раздел 2
  #SG_R2(500_1,500,1)  #SG_R2(500_2,500,2)  #SG_R2(500_3,500,3)  #SG_R2(500_4,500,4)  #SG_R2(500_5,500,5)  #SG_R2(500_6,500,6)
  #SG_R2(510_1,510,1)  #SG_R2(510_2,510,2)  #SG_R2(510_3,510,3)  #SG_R2(510_4,510,4)  #SG_R2(510_5,510,5)  #SG_R2(510_6,510,6)
  #SG_R2(520_1,520,1)  #SG_R2(520_2,520,2)  #SG_R2(520_3,520,3)  #SG_R2(520_4,520,4)  #SG_R2(520_5,520,5)  #SG_R2(520_6,520,6)
  #SG_R2(530_1,530,1)  #SG_R2(530_2,530,2)  #SG_R2(530_3,530,3)                       #SG_R2(530_5,530,5)  #SG_R2(530_6,530,6)
  #SG_R2(540_1,540,1)  #SG_R2(540_2,540,2)  #SG_R2(540_3,540,3)  #SG_R2(540_4,540,4)  #SG_R2(540_5,540,5)  #SG_R2(540_6,540,6)
  #SG_R2(550_1,550,1)  #SG_R2(550_2,550,2)  #SG_R2(550_3,550,3)  #SG_R2(550_4,550,4)  #SG_R2(550_5,550,5)  #SG_R2(550_6,550,6)
  #SG_R2(560_1,560,1)  #SG_R2(560_2,560,2)  #SG_R2(560_3,560,3)  #SG_R2(560_4,560,4)  #SG_R2(560_5,560,5)  #SG_R2(560_6,560,6)
  #SG_R2(570_1,570,1)  #SG_R2(570_2,570,2)  #SG_R2(570_3,570,3)  #SG_R2(570_4,570,4)  #SG_R2(570_5,570,5)  #SG_R2(570_6,570,6)
  #SG_R2(580_1,580,1)  #SG_R2(580_2,580,2)  #SG_R2(580_3,580,3)  #SG_R2(580_4,580,4)  #SG_R2(580_5,580,5)  #SG_R2(580_6,580,6)
  #SG_R2(585_1,585,1)  #SG_R2(585_2,585,2)  #SG_R2(585_3,585,3)  #SG_R2(585_4,585,4)  #SG_R2(585_5,585,5)  #SG_R2(585_6,585,6)
  #SG_R2(590_1,590,1)  #SG_R2(590_2,590,2)  #SG_R2(590_3,590,3)  #SG_R2(590_4,590,4)  #SG_R2(590_5,590,5)  #SG_R2(590_6,590,6)
  #SG_R2(600_1,600,1)  #SG_R2(600_2,600,2)  #SG_R2(600_3,600,3)  #SG_R2(600_4,600,4)  #SG_R2(600_5,600,5)  #SG_R2(600_6,600,6)

  //Раздел 3
  #SG_R3(700_1,700,1)  #SG_R3(700_2,700,2)
  #SG_R3(710_1,710,1)  #SG_R3(710_2,710,2)
  #SG_R3(720_1,720,1)  #SG_R3(720_2,720,2)
  #SG_R3(730_1,730,1)  #SG_R3(730_2,730,2)
  #SG_R3(740_1,740,1)  #SG_R3(740_2,740,2)
  #SG_R3(750_1,750,1)  #SG_R3(750_2,750,2)
  #SG_R3(760_1,760,1)  #SG_R3(760_2,760,2)
  #SG_R3(770_1,770,1)  #SG_R3(770_2,770,2)
  #SG_R3(780_1,780,1)  #SG_R3(780_2,780,2)
  #SG_R3(790_1,790,1)  #SG_R3(790_2,790,2)
  #SG_R3(800_1,800,1)  #SG_R3(800_2,800,2)
  //----------------------------------------------------------------------------------------------------------
  // #endregion ОБЪЯВЛЕНИЕ И ИНИЦИАЛИЗАЦИЯ ПЕРЕМЕННЫХ
  //----------------------------------------------------------------------------------------------------------


  #_IsValid(IsValidNull, 'Файл/Документ/НаимОрг'            , 'Наименование организации')
  #_IsValid(IsValidNull, 'Файл/Документ/Адрес'              , 'Адрес'                   )
  #_IsValid(IsValidNull, 'Файл/Документ/ОКПО'               , 'ОКПО'                    )
  #_IsValid(IsValidDate, 'Файл/Документ/ДатаДок'            , 'Дата документа'          )
  #_IsValid(IsValidNull, 'Файл/Документ/Подписант/Должность', 'Должность'               )
  #_IsValid(IsValidNull, 'Файл/Документ/Подписант/ФИО'      , 'ФИО'                     )
  #_IsValid(IsValidNull, 'Файл/Документ/Подписант/Тел'      , 'Телефон'                 )
  #_IsValid(IsValidNull, 'Файл/Документ/Подписант/E_Mail'   , 'E-mail'                  )


  //----------------------------------------------------------------------------------------------------------
  // #region КОНТРОЛЬНЫЕ ПАРАМЕТРЫ
  //----------------------------------------------------------------------------------------------------------
  //КП 01 Строки с 010 по 600 (гр. 1, 2, 3, 6) >= 0 #region
  getMes := 'КП01: Строки с 010 по 600 (гр. %S) >= 0';
  #KSgr(d010_1 >= 0, a010_1, 010, 1)  #KSgr(d010_2 >= 0, a010_2, 010, 2)  #KSgr(d010_3 >= 0, a010_3, 010, 3)  #KSgr(d010_6 >= 0, a010_6, 010, 6)
  #KSgr(d020_1 >= 0, a020_1, 020, 1)  #KSgr(d020_2 >= 0, a020_2, 020, 2)  #KSgr(d020_3 >= 0, a020_3, 020, 3)  #KSgr(d020_6 >= 0, a020_6, 020, 6)
  #KSgr(d030_1 >= 0, a030_1, 030, 1)  #KSgr(d030_2 >= 0, a030_2, 030, 2)  #KSgr(d030_3 >= 0, a030_3, 030, 3)  #KSgr(d030_6 >= 0, a030_6, 030, 6)
  #KSgr(d040_1 >= 0, a040_1, 040, 1)  #KSgr(d040_2 >= 0, a040_2, 040, 2)  #KSgr(d040_3 >= 0, a040_3, 040, 3)  #KSgr(d040_6 >= 0, a040_6, 040, 6)
  #KSgr(d050_1 >= 0, a050_1, 050, 1)  #KSgr(d050_2 >= 0, a050_2, 050, 2)  #KSgr(d050_3 >= 0, a050_3, 050, 3)  #KSgr(d050_6 >= 0, a050_6, 050, 6)
  #KSgr(d060_1 >= 0, a060_1, 060, 1)  #KSgr(d060_2 >= 0, a060_2, 060, 2)  #KSgr(d060_3 >= 0, a060_3, 060, 3)  #KSgr(d060_6 >= 0, a060_6, 060, 6)
  #KSgr(d070_1 >= 0, a070_1, 070, 1)  #KSgr(d070_2 >= 0, a070_2, 070, 2)  #KSgr(d070_3 >= 0, a070_3, 070, 3)  #KSgr(d070_6 >= 0, a070_6, 070, 6)
  #KSgr(d080_1 >= 0, a080_1, 080, 1)  #KSgr(d080_2 >= 0, a080_2, 080, 2)  #KSgr(d080_3 >= 0, a080_3, 080, 3)  #KSgr(d080_6 >= 0, a080_6, 080, 6)
  #KSgr(d090_1 >= 0, a090_1, 090, 1)  #KSgr(d090_2 >= 0, a090_2, 090, 2)  #KSgr(d090_3 >= 0, a090_3, 090, 3)  #KSgr(d090_6 >= 0, a090_6, 090, 6)
  #KSgr(d100_1 >= 0, a100_1, 100, 1)  #KSgr(d100_2 >= 0, a100_2, 100, 2)  #KSgr(d100_3 >= 0, a100_3, 100, 3)  #KSgr(d100_6 >= 0, a100_6, 100, 6)
  #KSgr(d110_1 >= 0, a110_1, 110, 1)  #KSgr(d110_2 >= 0, a110_2, 110, 2)  #KSgr(d110_3 >= 0, a110_3, 110, 3)  #KSgr(d110_6 >= 0, a110_6, 110, 6)
  #KSgr(d120_1 >= 0, a120_1, 120, 1)  #KSgr(d120_2 >= 0, a120_2, 120, 2)  #KSgr(d120_3 >= 0, a120_3, 120, 3)  #KSgr(d120_6 >= 0, a120_6, 120, 6)
  #KSgr(d130_1 >= 0, a130_1, 130, 1)  #KSgr(d130_2 >= 0, a130_2, 130, 2)  #KSgr(d130_3 >= 0, a130_3, 130, 3)  #KSgr(d130_6 >= 0, a130_6, 130, 6)
  #KSgr(d140_1 >= 0, a140_1, 140, 1)  #KSgr(d140_2 >= 0, a140_2, 140, 2)  #KSgr(d140_3 >= 0, a140_3, 140, 3)  #KSgr(d140_6 >= 0, a140_6, 140, 6)
  #KSgr(d150_1 >= 0, a150_1, 150, 1)  #KSgr(d150_2 >= 0, a150_2, 150, 2)  #KSgr(d150_3 >= 0, a150_3, 150, 3)  #KSgr(d150_6 >= 0, a150_6, 150, 6)
  #KSgr(d160_1 >= 0, a160_1, 160, 1)  #KSgr(d160_2 >= 0, a160_2, 160, 2)  #KSgr(d160_3 >= 0, a160_3, 160, 3)  #KSgr(d160_6 >= 0, a160_6, 160, 6)
  #KSgr(d170_1 >= 0, a170_1, 170, 1)  #KSgr(d170_2 >= 0, a170_2, 170, 2)  #KSgr(d170_3 >= 0, a170_3, 170, 3)  #KSgr(d170_6 >= 0, a170_6, 170, 6)
  #KSgr(d180_1 >= 0, a180_1, 180, 1)  #KSgr(d180_2 >= 0, a180_2, 180, 2)  #KSgr(d180_3 >= 0, a180_3, 180, 3)  #KSgr(d180_6 >= 0, a180_6, 180, 6)
  #KSgr(d190_1 >= 0, a190_1, 190, 1)  #KSgr(d190_2 >= 0, a190_2, 190, 2)  #KSgr(d190_3 >= 0, a190_3, 190, 3)  #KSgr(d190_6 >= 0, a190_6, 190, 6)
  #KSgr(d200_1 >= 0, a200_1, 200, 1)  #KSgr(d200_2 >= 0, a200_2, 200, 2)  #KSgr(d200_3 >= 0, a200_3, 200, 3)  #KSgr(d200_6 >= 0, a200_6, 200, 6)
  #KSgr(d210_1 >= 0, a210_1, 210, 1)  #KSgr(d210_2 >= 0, a210_2, 210, 2)  #KSgr(d210_3 >= 0, a210_3, 210, 3)  #KSgr(d210_6 >= 0, a210_6, 210, 6)
  #KSgr(d220_1 >= 0, a220_1, 220, 1)  #KSgr(d220_2 >= 0, a220_2, 220, 2)  #KSgr(d220_3 >= 0, a220_3, 220, 3)  #KSgr(d220_6 >= 0, a220_6, 220, 6)
  #KSgr(d230_1 >= 0, a230_1, 230, 1)  #KSgr(d230_2 >= 0, a230_2, 230, 2)  #KSgr(d230_3 >= 0, a230_3, 230, 3)  #KSgr(d230_6 >= 0, a230_6, 230, 6)
  #KSgr(d240_1 >= 0, a240_1, 240, 1)  #KSgr(d240_2 >= 0, a240_2, 240, 2)  #KSgr(d240_3 >= 0, a240_3, 240, 3)  #KSgr(d240_6 >= 0, a240_6, 240, 6)
  #KSgr(d245_1 >= 0, a245_1, 245, 1)  #KSgr(d245_2 >= 0, a245_2, 245, 2)  #KSgr(d245_3 >= 0, a245_3, 245, 3)  #KSgr(d245_6 >= 0, a245_6, 245, 6)
  #KSgr(d250_1 >= 0, a250_1, 250, 1)  #KSgr(d250_2 >= 0, a250_2, 250, 2)  #KSgr(d250_3 >= 0, a250_3, 250, 3)  #KSgr(d250_6 >= 0, a250_6, 250, 6)
  #KSgr(d260_1 >= 0, a260_1, 260, 1)  #KSgr(d260_2 >= 0, a260_2, 260, 2)  #KSgr(d260_3 >= 0, a260_3, 260, 3)  #KSgr(d260_6 >= 0, a260_6, 260, 6)
  #KSgr(d270_1 >= 0, a270_1, 270, 1)  #KSgr(d270_2 >= 0, a270_2, 270, 2)  #KSgr(d270_3 >= 0, a270_3, 270, 3)  #KSgr(d270_6 >= 0, a270_6, 270, 6)
  #KSgr(d280_1 >= 0, a280_1, 280, 1)  #KSgr(d280_2 >= 0, a280_2, 280, 2)  #KSgr(d280_3 >= 0, a280_3, 280, 3)  #KSgr(d280_6 >= 0, a280_6, 280, 6)
  #KSgr(d290_1 >= 0, a290_1, 290, 1)  #KSgr(d290_2 >= 0, a290_2, 290, 2)  #KSgr(d290_3 >= 0, a290_3, 290, 3)  #KSgr(d290_6 >= 0, a290_6, 290, 6)
  #KSgr(d300_1 >= 0, a300_1, 300, 1)  #KSgr(d300_2 >= 0, a300_2, 300, 2)  #KSgr(d300_3 >= 0, a300_3, 300, 3)  #KSgr(d300_6 >= 0, a300_6, 300, 6)
  #KSgr(d301_1 >= 0, a301_1, 301, 1)  #KSgr(d301_2 >= 0, a301_2, 301, 2)  #KSgr(d301_3 >= 0, a301_3, 301, 3)  #KSgr(d301_6 >= 0, a301_6, 301, 6)
  #KSgr(d310_1 >= 0, a310_1, 310, 1)  #KSgr(d310_2 >= 0, a310_2, 310, 2)  #KSgr(d310_3 >= 0, a310_3, 310, 3)  #KSgr(d310_6 >= 0, a310_6, 310, 6)
  #KSgr(d320_1 >= 0, a320_1, 320, 1)  #KSgr(d320_2 >= 0, a320_2, 320, 2)  #KSgr(d320_3 >= 0, a320_3, 320, 3)  #KSgr(d320_6 >= 0, a320_6, 320, 6)
  #KSgr(d321_1 >= 0, a321_1, 321, 1)  #KSgr(d321_2 >= 0, a321_2, 321, 2)  #KSgr(d321_3 >= 0, a321_3, 321, 3)  #KSgr(d321_6 >= 0, a321_6, 321, 6)
  #KSgr(d325_1 >= 0, a325_1, 325, 1)  #KSgr(d325_2 >= 0, a325_2, 325, 2)  #KSgr(d325_3 >= 0, a325_3, 325, 3)  #KSgr(d325_6 >= 0, a325_6, 325, 6)
  #KSgr(d326_1 >= 0, a326_1, 326, 1)  #KSgr(d326_2 >= 0, a326_2, 326, 2)  #KSgr(d326_3 >= 0, a326_3, 326, 3)  #KSgr(d326_6 >= 0, a326_6, 326, 6)
  #KSgr(d327_1 >= 0, a327_1, 327, 1)  #KSgr(d327_2 >= 0, a327_2, 327, 2)  #KSgr(d327_3 >= 0, a327_3, 327, 3)  #KSgr(d327_6 >= 0, a327_6, 327, 6)
  #KSgr(d328_1 >= 0, a328_1, 328, 1)  #KSgr(d328_2 >= 0, a328_2, 328, 2)  #KSgr(d328_3 >= 0, a328_3, 328, 3)  #KSgr(d328_6 >= 0, a328_6, 328, 6)
  #KSgr(d329_1 >= 0, a329_1, 329, 1)  #KSgr(d329_2 >= 0, a329_2, 329, 2)  #KSgr(d329_3 >= 0, a329_3, 329, 3)  #KSgr(d329_6 >= 0, a329_6, 329, 6)
  #KSgr(d330_1 >= 0, a330_1, 330, 1)  #KSgr(d330_2 >= 0, a330_2, 330, 2)  #KSgr(d330_3 >= 0, a330_3, 330, 3)  #KSgr(d330_6 >= 0, a330_6, 330, 6)
  #KSgr(d340_1 >= 0, a340_1, 340, 1)  #KSgr(d340_2 >= 0, a340_2, 340, 2)  #KSgr(d340_3 >= 0, a340_3, 340, 3)  #KSgr(d340_6 >= 0, a340_6, 340, 6)
  #KSgr(d350_1 >= 0, a350_1, 350, 1)  #KSgr(d350_2 >= 0, a350_2, 350, 2)  #KSgr(d350_3 >= 0, a350_3, 350, 3)  #KSgr(d350_6 >= 0, a350_6, 350, 6)
  #KSgr(d360_1 >= 0, a360_1, 360, 1)  #KSgr(d360_2 >= 0, a360_2, 360, 2)  #KSgr(d360_3 >= 0, a360_3, 360, 3)  #KSgr(d360_6 >= 0, a360_6, 360, 6)
  #KSgr(d370_1 >= 0, a370_1, 370, 1)  #KSgr(d370_2 >= 0, a370_2, 370, 2)  #KSgr(d370_3 >= 0, a370_3, 370, 3)  #KSgr(d370_6 >= 0, a370_6, 370, 6)
  #KSgr(d380_1 >= 0, a380_1, 380, 1)  #KSgr(d380_2 >= 0, a380_2, 380, 2)  #KSgr(d380_3 >= 0, a380_3, 380, 3)  #KSgr(d380_6 >= 0, a380_6, 380, 6)
  #KSgr(d390_1 >= 0, a390_1, 390, 1)  #KSgr(d390_2 >= 0, a390_2, 390, 2)  #KSgr(d390_3 >= 0, a390_3, 390, 3)  #KSgr(d390_6 >= 0, a390_6, 390, 6)
  #KSgr(d400_1 >= 0, a400_1, 400, 1)  #KSgr(d400_2 >= 0, a400_2, 400, 2)  #KSgr(d400_3 >= 0, a400_3, 400, 3)  #KSgr(d400_6 >= 0, a400_6, 400, 6)
  #KSgr(d410_1 >= 0, a410_1, 410, 1)  #KSgr(d410_2 >= 0, a410_2, 410, 2)  #KSgr(d410_3 >= 0, a410_3, 410, 3)  #KSgr(d410_6 >= 0, a410_6, 410, 6)
  #KSgr(d420_1 >= 0, a420_1, 420, 1)  #KSgr(d420_2 >= 0, a420_2, 420, 2)  #KSgr(d420_3 >= 0, a420_3, 420, 3)  #KSgr(d420_6 >= 0, a420_6, 420, 6)
  #KSgr(d435_1 >= 0, a435_1, 435, 1)  #KSgr(d435_2 >= 0, a435_2, 435, 2)  #KSgr(d435_3 >= 0, a435_3, 435, 3)  #KSgr(d435_6 >= 0, a435_6, 435, 6)
  #KSgr(d440_1 >= 0, a440_1, 440, 1)  #KSgr(d440_2 >= 0, a440_2, 440, 2)  #KSgr(d440_3 >= 0, a440_3, 440, 3)  #KSgr(d440_6 >= 0, a440_6, 440, 6)
  #KSgr(d441_1 >= 0, a441_1, 441, 1)  #KSgr(d441_2 >= 0, a441_2, 441, 2)  #KSgr(d441_3 >= 0, a441_3, 441, 3)  #KSgr(d441_6 >= 0, a441_6, 441, 6)
  #KSgr(d450_1 >= 0, a450_1, 450, 1)  #KSgr(d450_2 >= 0, a450_2, 450, 2)  #KSgr(d450_3 >= 0, a450_3, 450, 3)  #KSgr(d450_6 >= 0, a450_6, 450, 6)
  #KSgr(d460_1 >= 0, a460_1, 460, 1)  #KSgr(d460_2 >= 0, a460_2, 460, 2)  #KSgr(d460_3 >= 0, a460_3, 460, 3)  #KSgr(d460_6 >= 0, a460_6, 460, 6)
  #KSgr(d461_1 >= 0, a461_1, 461, 1)  #KSgr(d461_2 >= 0, a461_2, 461, 2)  #KSgr(d461_3 >= 0, a461_3, 461, 3)  #KSgr(d461_6 >= 0, a461_6, 461, 6)
  #KSgr(d500_1 >= 0, a500_1, 500, 1)  #KSgr(d500_2 >= 0, a500_2, 500, 2)  #KSgr(d500_3 >= 0, a500_3, 500, 3)  #KSgr(d500_6 >= 0, a500_6, 500, 6)
  #KSgr(d510_1 >= 0, a510_1, 510, 1)  #KSgr(d510_2 >= 0, a510_2, 510, 2)  #KSgr(d510_3 >= 0, a510_3, 510, 3)  #KSgr(d510_6 >= 0, a510_6, 510, 6)
  #KSgr(d520_1 >= 0, a520_1, 520, 1)  #KSgr(d520_2 >= 0, a520_2, 520, 2)  #KSgr(d520_3 >= 0, a520_3, 520, 3)  #KSgr(d520_6 >= 0, a520_6, 520, 6)
  #KSgr(d530_1 >= 0, a530_1, 530, 1)  #KSgr(d530_2 >= 0, a530_2, 530, 2)  #KSgr(d530_3 >= 0, a530_3, 530, 3)  #KSgr(d530_6 >= 0, a530_6, 530, 6)
  #KSgr(d540_1 >= 0, a540_1, 540, 1)  #KSgr(d540_2 >= 0, a540_2, 540, 2)  #KSgr(d540_3 >= 0, a540_3, 540, 3)  #KSgr(d540_6 >= 0, a540_6, 540, 6)
  #KSgr(d550_1 >= 0, a550_1, 550, 1)  #KSgr(d550_2 >= 0, a550_2, 550, 2)  #KSgr(d550_3 >= 0, a550_3, 550, 3)  #KSgr(d550_6 >= 0, a550_6, 550, 6)
  #KSgr(d560_1 >= 0, a560_1, 560, 1)  #KSgr(d560_2 >= 0, a560_2, 560, 2)  #KSgr(d560_3 >= 0, a560_3, 560, 3)  #KSgr(d560_6 >= 0, a560_6, 560, 6)
  #KSgr(d570_1 >= 0, a570_1, 570, 1)  #KSgr(d570_2 >= 0, a570_2, 570, 2)  #KSgr(d570_3 >= 0, a570_3, 570, 3)  #KSgr(d570_6 >= 0, a570_6, 570, 6)
  #KSgr(d580_1 >= 0, a580_1, 580, 1)  #KSgr(d580_2 >= 0, a580_2, 580, 2)  #KSgr(d580_3 >= 0, a580_3, 580, 3)  #KSgr(d580_6 >= 0, a580_6, 580, 6)
  #KSgr(d585_1 >= 0, a585_1, 585, 1)  #KSgr(d585_2 >= 0, a585_2, 585, 2)  #KSgr(d585_3 >= 0, a585_3, 585, 3)  #KSgr(d585_6 >= 0, a585_6, 585, 6)
  #KSgr(d590_1 >= 0, a590_1, 590, 1)  #KSgr(d590_2 >= 0, a590_2, 590, 2)  #KSgr(d590_3 >= 0, a590_3, 590, 3)  #KSgr(d590_6 >= 0, a590_6, 590, 6)
  #KSgr(d600_1 >= 0, a600_1, 600, 1)  #KSgr(d600_2 >= 0, a600_2, 600, 2)  #KSgr(d600_3 >= 0, a600_3, 600, 3)  #KSgr(d600_6 >= 0, a600_6, 600, 6)
  // #endregion КП 01

  //КП 04 Гр. 1 + гр. 2 - гр. 3 + гр. 4 + гр. 5 = гр. 6 по строкам с 010 по 600 #region
  getMes := 'КП04: Гр. 1 + гр. 2 - гр. 3 + гр. 4 + гр. 5 = гр. 6 по строкам с 010 по 600';
  #KS(d010_1 + d010_2 - d010_3 + d010_4 + d010_5 = d010_6, a010_6, 010, 6)
  #KS(d020_1 + d020_2 - d020_3 + d020_4 + d020_5 = d020_6, a020_6, 020, 6)
  #KS(d030_1 + d030_2 - d030_3 + d030_4 + d030_5 = d030_6, a030_6, 030, 6)
  #KS(d040_1 + d040_2 - d040_3 + d040_4 + d040_5 = d040_6, a040_6, 040, 6)
  #KS(d050_1 + d050_2 - d050_3 + d050_4 + d050_5 = d050_6, a050_6, 050, 6)
  #KS(d060_1 + d060_2 - d060_3 + d060_4 + d060_5 = d060_6, a060_6, 060, 6)
  #KS(d070_1 + d070_2 - d070_3 + d070_4 + d070_5 = d070_6, a070_6, 070, 6)
  #KS(d080_1 + d080_2 - d080_3 + d080_4 + d080_5 = d080_6, a080_6, 080, 6)
  #KS(d090_1 + d090_2 - d090_3 + d090_4 + d090_5 = d090_6, a090_6, 090, 6)
  #KS(d100_1 + d100_2 - d100_3 + d100_4 + d100_5 = d100_6, a100_6, 100, 6)
  #KS(d110_1 + d110_2 - d110_3 + d110_4 + d110_5 = d110_6, a110_6, 110, 6)
  #KS(d120_1 + d120_2 - d120_3 + d120_4 + d120_5 = d120_6, a120_6, 120, 6)
  #KS(d130_1 + d130_2 - d130_3 + d130_4 + d130_5 = d130_6, a130_6, 130, 6)
  #KS(d140_1 + d140_2 - d140_3 + d140_4 + d140_5 = d140_6, a140_6, 140, 6)
  #KS(d150_1 + d150_2 - d150_3 + d150_4 + d150_5 = d150_6, a150_6, 150, 6)
  #KS(d160_1 + d160_2 - d160_3 + d160_4 + d160_5 = d160_6, a160_6, 160, 6)
  #KS(d170_1 + d170_2 - d170_3 + d170_4 + d170_5 = d170_6, a170_6, 170, 6)
  #KS(d180_1 + d180_2 - d180_3 + d180_4 + d180_5 = d180_6, a180_6, 180, 6)
  #KS(d190_1 + d190_2 - d190_3 + d190_4 + d190_5 = d190_6, a190_6, 190, 6)
  #KS(d200_1 + d200_2 - d200_3 + d200_4 + d200_5 = d200_6, a200_6, 200, 6)
  #KS(d210_1 + d210_2 - d210_3 + d210_4 + d210_5 = d210_6, a210_6, 210, 6)
  #KS(d220_1 + d220_2 - d220_3 + d220_4 + d220_5 = d220_6, a220_6, 220, 6)
  #KS(d230_1 + d230_2 - d230_3 + d230_4 + d230_5 = d230_6, a230_6, 230, 6)
  #KS(d240_1 + d240_2 - d240_3 + d240_4 + d240_5 = d240_6, a240_6, 240, 6)
  #KS(d245_1 + d245_2 - d245_3 + d245_4 + d245_5 = d245_6, a245_6, 245, 6)
  #KS(d250_1 + d250_2 - d250_3 + d250_4 + d250_5 = d250_6, a250_6, 250, 6)
  #KS(d260_1 + d260_2 - d260_3 + d260_4 + d260_5 = d260_6, a260_6, 260, 6)
  #KS(d270_1 + d270_2 - d270_3 + d270_4 + d270_5 = d270_6, a270_6, 270, 6)
  #KS(d280_1 + d280_2 - d280_3 + d280_4 + d280_5 = d280_6, a280_6, 280, 6)
  #KS(d290_1 + d290_2 - d290_3 + d290_4 + d290_5 = d290_6, a290_6, 290, 6)
  #KS(d300_1 + d300_2 - d300_3 + d300_4 + d300_5 = d300_6, a300_6, 300, 6)
  #KS(d301_1 + d301_2 - d301_3 + d301_4 + d301_5 = d301_6, a301_6, 301, 6)
  #KS(d310_1 + d310_2 - d310_3 + d310_4 + d310_5 = d310_6, a310_6, 310, 6)
  #KS(d320_1 + d320_2 - d320_3 + d320_4 + d320_5 = d320_6, a320_6, 320, 6)
  #KS(d321_1 + d321_2 - d321_3 + d321_4 + d321_5 = d321_6, a321_6, 321, 6)
  #KS(d325_1 + d325_2 - d325_3 + d325_4 + d325_5 = d325_6, a325_6, 325, 6)
  #KS(d326_1 + d326_2 - d326_3 + d326_4 + d326_5 = d326_6, a326_6, 326, 6)
  #KS(d327_1 + d327_2 - d327_3 + d327_4 + d327_5 = d327_6, a327_6, 327, 6)
  #KS(d328_1 + d328_2 - d328_3 + d328_4 + d328_5 = d328_6, a328_6, 328, 6)
  #KS(d329_1 + d329_2 - d329_3 + d329_4 + d329_5 = d329_6, a329_6, 329, 6)
  #KS(d330_1 + d330_2 - d330_3 + d330_4 + d330_5 = d330_6, a330_6, 330, 6)
  #KS(d340_1 + d340_2 - d340_3 + d340_4 + d340_5 = d340_6, a340_6, 340, 6)
  #KS(d350_1 + d350_2 - d350_3 + d350_4 + d350_5 = d350_6, a350_6, 350, 6)
  #KS(d360_1 + d360_2 - d360_3 + d360_4 + d360_5 = d360_6, a360_6, 360, 6)
  #KS(d370_1 + d370_2 - d370_3 + d370_4 + d370_5 = d370_6, a370_6, 370, 6)
  #KS(d380_1 + d380_2 - d380_3 + d380_4 + d380_5 = d380_6, a380_6, 380, 6)
  #KS(d390_1 + d390_2 - d390_3 + d390_4 + d390_5 = d390_6, a390_6, 390, 6)
  #KS(d400_1 + d400_2 - d400_3 + d400_4 + d400_5 = d400_6, a400_6, 400, 6)
  #KS(d410_1 + d410_2 - d410_3 + d410_4 + d410_5 = d410_6, a410_6, 410, 6)
  #KS(d420_1 + d420_2 - d420_3 + d420_4 + d420_5 = d420_6, a420_6, 420, 6)
  #KS(d435_1 + d435_2 - d435_3 + d435_4 + d435_5 = d435_6, a435_6, 435, 6)
  #KS(d440_1 + d440_2 - d440_3 + d440_4 + d440_5 = d440_6, a440_6, 440, 6)
  #KS(d441_1 + d441_2 - d441_3 + d441_4 + d441_5 = d441_6, a441_6, 441, 6)
  #KS(d450_1 + d450_2 - d450_3 + d450_4 + d450_5 = d450_6, a450_6, 450, 6)
  #KS(d460_1 + d460_2 - d460_3 + d460_4 + d460_5 = d460_6, a460_6, 460, 6)
  #KS(d461_1 + d461_2 - d461_3 + d461_4 + d461_5 = d461_6, a461_6, 461, 6)
  #KS(d500_1 + d500_2 - d500_3 + d500_4 + d500_5 = d500_6, a500_6, 500, 6)
  #KS(d510_1 + d510_2 - d510_3 + d510_4 + d510_5 = d510_6, a510_6, 510, 6)
  #KS(d520_1 + d520_2 - d520_3 + d520_4 + d520_5 = d520_6, a520_6, 520, 6)
  #KS(d530_1 + d530_2 - d530_3          + d530_5 = d530_6, a530_6, 530, 6)
  #KS(d540_1 + d540_2 - d540_3 + d540_4 + d540_5 = d540_6, a540_6, 540, 6)
  #KS(d550_1 + d550_2 - d550_3 + d550_4 + d550_5 = d550_6, a550_6, 550, 6)
  #KS(d560_1 + d560_2 - d560_3 + d560_4 + d560_5 = d560_6, a560_6, 560, 6)
  #KS(d570_1 + d570_2 - d570_3 + d570_4 + d570_5 = d570_6, a570_6, 570, 6)
  #KS(d580_1 + d580_2 - d580_3 + d580_4 + d580_5 = d580_6, a580_6, 580, 6)
  #KS(d585_1 + d585_2 - d585_3 + d585_4 + d585_5 = d585_6, a585_6, 585, 6)
  #KS(d590_1 + d590_2 - d590_3 + d590_4 + d590_5 = d590_6, a590_6, 590, 6)
  #KS(d600_1 + d600_2 - d600_3 + d600_4 + d600_5 = d600_6, a600_6, 600, 6)
  // #endregion КП 04

  //КП 06 Строка 800 (гр. 1, 2) <= 0
  getMes := 'КП06: Строка 800 (гр. %S) <= 0';
  #KSgr(d800_1 <= 0, a800_1, 800, 1)
  #KSgr(d800_2 <= 0, a800_2, 800, 2)

  //КП 07 Строка 010 (по гр. 1, 2, 3, 4, 5, 6, 7) = сумме строк 020 + 030 (по гр. 1, 2, 3, 4, 5, 6, 7)
  getMes := 'КП07: Строка 010 (гр. %S) = сумме строк 020 + 030 (гр. %S)';
  #KSgr2(d010_1 = d020_1 + d030_1, a010_1, 010, 1)
  #KSgr2(d010_2 = d020_2 + d030_2, a010_2, 010, 2)
  #KSgr2(d010_3 = d020_3 + d030_3, a010_3, 010, 3)
  #KSgr2(d010_4 = d020_4 + d030_4, a010_4, 010, 4)
  #KSgr2(d010_5 = d020_5 + d030_5, a010_5, 010, 5)
  #KSgr2(d010_6 = d020_6 + d030_6, a010_6, 010, 6)
  #KSgr2(d010_7 = d020_7 + d030_7, a010_7, 010, 7)

  //КП 08 Строка 010 (по гр. 1, 2, 3, 4, 5, 6, 7) = сумме строк 040 + 140 + 250 + 325 + 330 (по гр. 1, 2, 3, 4, 5, 6, 7)
  getMes := 'КП08: Строка 010 (гр. %S) = сумме строк 040 + 140 + 250 + 325 + 330 (гр. %S)';
  #KSgr2(d010_1 = d040_1 + d140_1 + d250_1 + d325_1 + d330_1, a010_1, 010, 1)
  #KSgr2(d010_2 = d040_2 + d140_2 + d250_2 + d325_2 + d330_2, a010_2, 010, 2)
  #KSgr2(d010_3 = d040_3 + d140_3 + d250_3 + d325_3 + d330_3, a010_3, 010, 3)
  #KSgr2(d010_4 = d040_4 + d140_4 + d250_4 + d325_4 + d330_4, a010_4, 010, 4)
  #KSgr2(d010_5 = d040_5 + d140_5 + d250_5 + d325_5 + d330_5, a010_5, 010, 5)
  #KSgr2(d010_6 = d040_6 + d140_6 + d250_6 + d325_6 + d330_6, a010_6, 010, 6)
  #KSgr2(d010_7 = d040_7 + d140_7 + d250_7 + d325_7 + d330_7, a010_7, 010, 7)

  //КП 09 Строка 020 (по гр. 1, 2, 3, 4, 5, 6, 7) = сумме строк 050 + 150 + 260 + 328 + 340 (по гр. 1, 2, 3, 4, 5, 6, 7)
  getMes := 'КП09: Строка 020 (гр. %S) = сумме строк 050 + 150 + 260 + 328 + 340 (гр. %S)';
  #KSgr2(d020_1 = d050_1 + d150_1 + d260_1 + d328_1 + d340_1, a020_1, 020, 1)
  #KSgr2(d020_2 = d050_2 + d150_2 + d260_2 + d328_2 + d340_2, a020_2, 020, 2)
  #KSgr2(d020_3 = d050_3 + d150_3 + d260_3 + d328_3 + d340_3, a020_3, 020, 3)
  #KSgr2(d020_4 = d050_4 + d150_4 + d260_4 + d328_4 + d340_4, a020_4, 020, 4)
  #KSgr2(d020_5 = d050_5 + d150_5 + d260_5 + d328_5 + d340_5, a020_5, 020, 5)
  #KSgr2(d020_6 = d050_6 + d150_6 + d260_6 + d328_6 + d340_6, a020_6, 020, 6)
  #KSgr2(d020_7 = d050_7 + d150_7 + d260_7 + d328_7 + d340_7, a020_7, 020, 7)

  //КП 10 Строка 030 (по гр. 1, 2, 3, 4, 5, 6, 7) = сумме строк 060 + 160 + 270 + 326 + 350 (по гр. 1, 2, 3, 4, 5, 6, 7)
  getMes := 'КП10: Строка 030 (гр. %S) = сумме строк 060 + 160 + 270 + 326 + 350 (гр. %S)';
  #KSgr2(d030_1 = d060_1 + d160_1 + d270_1 + d326_1 + d350_1, a030_1, 030, 1)
  #KSgr2(d030_2 = d060_2 + d160_2 + d270_2 + d326_2 + d350_2, a030_2, 030, 2)
  #KSgr2(d030_3 = d060_3 + d160_3 + d270_3 + d326_3 + d350_3, a030_3, 030, 3)
  #KSgr2(d030_4 = d060_4 + d160_4 + d270_4 + d326_4 + d350_4, a030_4, 030, 4)
  #KSgr2(d030_5 = d060_5 + d160_5 + d270_5 + d326_5 + d350_5, a030_5, 030, 5)
  #KSgr2(d030_6 = d060_6 + d160_6 + d270_6 + d326_6 + d350_6, a030_6, 030, 6)
  #KSgr2(d030_7 = d060_7 + d160_7 + d270_7 + d326_7 + d350_7, a030_7, 030, 7)

  //КП 11 Строка 040 (по гр. 1, 2, 3, 4, 5, 6, 7) = сумме строк 050 + 060 (по гр. 1, 2, 3, 4, 5, 6, 7)
  getMes := 'КП11: Строка 040 (гр. %S) = сумме строк 050 + 060 (гр. %S)';
  #KSgr2(d040_1 = d050_1 + d060_1, a040_1, 040, 1)
  #KSgr2(d040_2 = d050_2 + d060_2, a040_2, 040, 2)
  #KSgr2(d040_3 = d050_3 + d060_3, a040_3, 040, 3)
  #KSgr2(d040_4 = d050_4 + d060_4, a040_4, 040, 4)
  #KSgr2(d040_5 = d050_5 + d060_5, a040_5, 040, 5)
  #KSgr2(d040_6 = d050_6 + d060_6, a040_6, 040, 6)
  #KSgr2(d040_7 = d050_7 + d060_7, a040_7, 040, 7)

  //КП 12 Строка 040 (по гр. 1, 2, 3, 4, 5, 6, 7) = сумме строк 070 + 080 (по гр. 1, 2, 3, 4, 5, 6, 7)
  getMes := 'КП12: Строка 040 (гр. %S) = сумме строк 070 + 080 (гр. %S)';
  #KSgr2(d040_1 = d070_1 + d080_1, a040_1, 040, 1)
  #KSgr2(d040_2 = d070_2 + d080_2, a040_2, 040, 2)
  #KSgr2(d040_3 = d070_3 + d080_3, a040_3, 040, 3)
  #KSgr2(d040_4 = d070_4 + d080_4, a040_4, 040, 4)
  #KSgr2(d040_5 = d070_5 + d080_5, a040_5, 040, 5)
  #KSgr2(d040_6 = d070_6 + d080_6, a040_6, 040, 6)
  #KSgr2(d040_7 = d070_7 + d080_7, a040_7, 040, 7)

  //КП 13 Строка 080 (по гр. 1, 2, 3, 4, 5, 6, 7) = сумме строк 090 + 100 + 110 + 120 + 130 (по гр. 1, 2, 3, 4, 5, 6, 7)
  getMes := 'КП13: Строка 080 (гр. %S) = сумме строк 090 + 100 + 110 + 120 + 130 (гр. %S)';
  #KSgr2(d080_1 = d090_1 + d100_1 + d110_1 + d120_1 + d130_1, a080_1, 080, 1)
  #KSgr2(d080_2 = d090_2 + d100_2 + d110_2 + d120_2 + d130_2, a080_2, 080, 2)
  #KSgr2(d080_3 = d090_3 + d100_3 + d110_3 + d120_3 + d130_3, a080_3, 080, 3)
  #KSgr2(d080_4 = d090_4 + d100_4 + d110_4 + d120_4 + d130_4, a080_4, 080, 4)
  #KSgr2(d080_5 = d090_5 + d100_5 + d110_5 + d120_5 + d130_5, a080_5, 080, 5)
  #KSgr2(d080_6 = d090_6 + d100_6 + d110_6 + d120_6 + d130_6, a080_6, 080, 6)
  #KSgr2(d080_7 = d090_7 + d100_7 + d110_7 + d120_7 + d130_7, a080_7, 080, 7)

  //КП 14 Строка 140 (по гр. 1, 2, 3, 4, 5, 6, 7) = сумме строк 150 + 160 (по гр. 1, 2, 3, 4, 5, 6, 7)
  getMes := 'КП14: Строка 140 (гр. %S) = сумме строк 150 + 160 (гр. %S)';
  #KSgr2(d140_1 = d150_1 + d160_1, a140_1, 140, 1)
  #KSgr2(d140_2 = d150_2 + d160_2, a140_2, 140, 2)
  #KSgr2(d140_3 = d150_3 + d160_3, a140_3, 140, 3)
  #KSgr2(d140_4 = d150_4 + d160_4, a140_4, 140, 4)
  #KSgr2(d140_5 = d150_5 + d160_5, a140_5, 140, 5)
  #KSgr2(d140_6 = d150_6 + d160_6, a140_6, 140, 6)
  #KSgr2(d140_7 = d150_7 + d160_7, a140_7, 140, 7)

  //КП 15 Строка 140 (по гр. 1, 2, 3, 4, 5, 6, 7) = сумме строк 170 + 180 (по гр. 1, 2, 3, 4, 5, 6, 7)
  getMes := 'КП15: Строка 140 (гр. %S) = сумме строк 170 + 180 (гр. %S)';
  #KSgr2(d140_1 = d170_1 + d180_1, a140_1, 140, 1)
  #KSgr2(d140_2 = d170_2 + d180_2, a140_2, 140, 2)
  #KSgr2(d140_3 = d170_3 + d180_3, a140_3, 140, 3)
  #KSgr2(d140_4 = d170_4 + d180_4, a140_4, 140, 4)
  #KSgr2(d140_5 = d170_5 + d180_5, a140_5, 140, 5)
  #KSgr2(d140_6 = d170_6 + d180_6, a140_6, 140, 6)
  #KSgr2(d140_7 = d170_7 + d180_7, a140_7, 140, 7)

  //КП 16 Строка 180 (по гр. 1, 2, 3, 4, 5, 6, 7) = сумме строк 190 + 200 + 210 + 220 + 230 + 240 + 245 (по гр. 1, 2, 3, 4, 5, 6, 7)
  getMes := 'КП16: Строка 180 (гр. %S) = сумме строк 190 + 200 + 210 + 220 + 230 + 240 + 245 (гр. %S)';
  #KSgr2(d180_1 = d190_1 + d200_1 + d210_1 + d220_1 + d230_1 + d240_1 + d245_1, a180_1, 180, 1)
  #KSgr2(d180_2 = d190_2 + d200_2 + d210_2 + d220_2 + d230_2 + d240_2 + d245_2, a180_2, 180, 2)
  #KSgr2(d180_3 = d190_3 + d200_3 + d210_3 + d220_3 + d230_3 + d240_3 + d245_3, a180_3, 180, 3)
  #KSgr2(d180_4 = d190_4 + d200_4 + d210_4 + d220_4 + d230_4 + d240_4 + d245_4, a180_4, 180, 4)
  #KSgr2(d180_5 = d190_5 + d200_5 + d210_5 + d220_5 + d230_5 + d240_5 + d245_5, a180_5, 180, 5)
  #KSgr2(d180_6 = d190_6 + d200_6 + d210_6 + d220_6 + d230_6 + d240_6 + d245_6, a180_6, 180, 6)
  #KSgr2(d180_7 = d190_7 + d200_7 + d210_7 + d220_7 + d230_7 + d240_7 + d245_7, a180_7, 180, 7)

  //КП 17 Строка 250 (по гр. 1, 2, 3, 4, 5, 6, 7) = сумме строк 260 + 270 (по гр. 1, 2, 3, 4, 5, 6, 7)
  getMes := 'КП17: Строка 250 (гр. %S) = сумме строк 260 + 270 (гр. %S)';
  #KSgr2(d250_1 = d260_1 + d270_1, a250_1, 250, 1)
  #KSgr2(d250_2 = d260_2 + d270_2, a250_2, 250, 2)
  #KSgr2(d250_3 = d260_3 + d270_3, a250_3, 250, 3)
  #KSgr2(d250_4 = d260_4 + d270_4, a250_4, 250, 4)
  #KSgr2(d250_5 = d260_5 + d270_5, a250_5, 250, 5)
  #KSgr2(d250_6 = d260_6 + d270_6, a250_6, 250, 6)
  #KSgr2(d250_7 = d260_7 + d270_7, a250_7, 250, 7)

  //КП 18 Строка 250 (по гр. 1, 2, 3, 4, 5, 6, 7) = сумме строк 280 + 290 (по гр. 1, 2, 3, 4, 5, 6, 7)
  getMes := 'КП18: Строка 250 (гр. %S) = сумме строк 280 + 290 (гр. %S)';
  #KSgr2(d250_1 = d280_1 + d290_1, a250_1, 250, 1)
  #KSgr2(d250_2 = d280_2 + d290_2, a250_2, 250, 2)
  #KSgr2(d250_3 = d280_3 + d290_3, a250_3, 250, 3)
  #KSgr2(d250_4 = d280_4 + d290_4, a250_4, 250, 4)
  #KSgr2(d250_5 = d280_5 + d290_5, a250_5, 250, 5)
  #KSgr2(d250_6 = d280_6 + d290_6, a250_6, 250, 6)
  #KSgr2(d250_7 = d280_7 + d290_7, a250_7, 250, 7)

  //КП 19 Строка 290 (по гр. 1, 2, 3, 4, 5, 6, 7) = сумме строк 300 + 301 + 310 + 320 + 321 (по гр. 1, 2, 3, 4, 5, 6, 7)
  getMes := 'КП19: Строка 290 (гр. %S) = сумме строк 300 + 301 + 310 + 320 + 321 (гр. %S)';
  #KSgr2(d290_1 = d300_1 + d301_1 + d310_1 + d320_1 + d321_1, a290_1, 290, 1)
  #KSgr2(d290_2 = d300_2 + d301_2 + d310_2 + d320_2 + d321_2, a290_2, 290, 2)
  #KSgr2(d290_3 = d300_3 + d301_3 + d310_3 + d320_3 + d321_3, a290_3, 290, 3)
  #KSgr2(d290_4 = d300_4 + d301_4 + d310_4 + d320_4 + d321_4, a290_4, 290, 4)
  #KSgr2(d290_5 = d300_5 + d301_5 + d310_5 + d320_5 + d321_5, a290_5, 290, 5)
  #KSgr2(d290_6 = d300_6 + d301_6 + d310_6 + d320_6 + d321_6, a290_6, 290, 6)
  #KSgr2(d290_7 = d300_7 + d301_7 + d310_7 + d320_7 + d321_7, a290_7, 290, 7)

  //КП 20 Строка 325 (по гр. 1, 2, 3, 4, 5, 6, 7) = сумме строк 326 + 328 (по гр. 1, 2, 3, 4, 5, 6, 7)
  getMes := 'КП20: Строка 325 (гр. %S) = сумме строк 326 + 328 (гр. %S)';
  #KSgr2(d325_1 = d326_1 + d328_1, a325_1, 325, 1)
  #KSgr2(d325_2 = d326_2 + d328_2, a325_2, 325, 2)
  #KSgr2(d325_3 = d326_3 + d328_3, a325_3, 325, 3)
  #KSgr2(d325_4 = d326_4 + d328_4, a325_4, 325, 4)
  #KSgr2(d325_5 = d326_5 + d328_5, a325_5, 325, 5)
  #KSgr2(d325_6 = d326_6 + d328_6, a325_6, 325, 6)
  #KSgr2(d325_7 = d326_7 + d328_7, a325_7, 325, 7)

  //КП 21 Строка 326 (по гр. 1, 2, 3, 6, 7) >= строки 327 (по гр. 1, 2, 3, 6, 7)
  getMes := 'КП21: Строка 326 (гр. %S) >= строки 327 (гр. %S)';
  #KSgr2(d326_1 >= d327_1, a326_1, 326, 1)
  #KSgr2(d326_2 >= d327_2, a326_2, 326, 2)
  #KSgr2(d326_3 >= d327_3, a326_3, 326, 3)
  #KSgr2(d326_6 >= d327_6, a326_6, 326, 6)
  #KSgr2(d326_7 >= d327_7, a326_7, 326, 7)

  //КП 22 Строка 328 (по гр. 1, 2, 3, 6, 7) >= строки 329 (по гр. 1, 2, 3, 6, 7)
  getMes := 'КП22: Строка 328 (гр. %S) >= строки 329 (гр. %S)';
  #KSgr2(d328_1 >= d329_1, a328_1, 328, 1)
  #KSgr2(d328_2 >= d329_2, a328_2, 328, 2)
  #KSgr2(d328_3 >= d329_3, a328_3, 328, 3)
  #KSgr2(d328_6 >= d329_6, a328_6, 328, 6)
  #KSgr2(d328_7 >= d329_7, a328_7, 328, 7)

  //КП 23 Строка 330 (по гр. 1, 2, 3, 4, 5, 6, 7) = сумме строк 340 + 350 (по гр. 1, 2, 3, 4, 5, 6, 7)
  getMes := 'КП23: Строка 330 (гр. %S) = сумме строк 340 + 350 (гр. %S)';
  #KSgr2(d330_1 = d340_1 + d350_1, a330_1, 330, 1)
  #KSgr2(d330_2 = d340_2 + d350_2, a330_2, 330, 2)
  #KSgr2(d330_3 = d340_3 + d350_3, a330_3, 330, 3)
  #KSgr2(d330_4 = d340_4 + d350_4, a330_4, 330, 4)
  #KSgr2(d330_5 = d340_5 + d350_5, a330_5, 330, 5)
  #KSgr2(d330_6 = d340_6 + d350_6, a330_6, 330, 6)
  #KSgr2(d330_7 = d340_7 + d350_7, a330_7, 330, 7)

  //КП 24 Строка 330 (по гр. 1, 2, 3, 4, 5, 6, 7) = сумме строк 360 + 370 (по гр. 1, 2, 3, 4, 5, 6, 7)
  getMes := 'КП24: Строка 330 (гр. %S) = сумме строк 360 + 370 (гр. %S)';
  #KSgr2(d330_1 = d360_1 + d370_1, a330_1, 330, 1)
  #KSgr2(d330_2 = d360_2 + d370_2, a330_2, 330, 2)
  #KSgr2(d330_3 = d360_3 + d370_3, a330_3, 330, 3)
  #KSgr2(d330_4 = d360_4 + d370_4, a330_4, 330, 4)
  #KSgr2(d330_5 = d360_5 + d370_5, a330_5, 330, 5)
  #KSgr2(d330_6 = d360_6 + d370_6, a330_6, 330, 6)
  #KSgr2(d330_7 = d360_7 + d370_7, a330_7, 330, 7)

  //КП 25 Строка 370 (по гр. 1, 2, 3, 4, 5, 6, 7) = сумме строк 380 + 390 + 400 + 410 + 420 + 435 (по гр. 1, 2, 3, 4, 5, 6, 7)
  getMes := 'КП25: Строка 370 (гр. %S) = сумме строк 380 + 390 + 400 + 410 + 420 + 435 (гр. %S)';
  #KSgr2(d370_1 = d380_1 + d390_1 + d400_1 + d410_1 + d420_1 + d435_1, a370_1, 370, 1)
  #KSgr2(d370_2 = d380_2 + d390_2 + d400_2 + d410_2 + d420_2 + d435_2, a370_2, 370, 2)
  #KSgr2(d370_3 = d380_3 + d390_3 + d400_3 + d410_3 + d420_3 + d435_3, a370_3, 370, 3)
  #KSgr2(d370_4 = d380_4 + d390_4 + d400_4 + d410_4 + d420_4 + d435_4, a370_4, 370, 4)
  #KSgr2(d370_5 = d380_5 + d390_5 + d400_5 + d410_5 + d420_5 + d435_5, a370_5, 370, 5)
  #KSgr2(d370_6 = d380_6 + d390_6 + d400_6 + d410_6 + d420_6 + d435_6, a370_6, 370, 6)
  #KSgr2(d370_7 = d380_7 + d390_7 + d400_7 + d410_7 + d420_7 + d435_7, a370_7, 370, 7)

  //КП 26 Строка 440 (по гр. 1, 2, 3, 6) >= строки 441 (по гр. 1, 2, 3, 6)
  getMes := 'КП26: Строка 440 (гр. %S) >= строки 441 (гр. %S)';
  #KSgr2(d440_1 >= d441_1, a440_1, 440, 1)
  #KSgr2(d440_2 >= d441_2, a440_2, 440, 2)
  #KSgr2(d440_3 >= d441_3, a440_3, 440, 3)
  #KSgr2(d440_6 >= d441_6, a440_6, 440, 6)

  //КП 27 Строка 460 (по гр. 1, 2, 3, 6) >= строки 461 (по гр. 1, 2, 3, 6)
  getMes := 'КП27: Строка 460 (гр. %S) >= строки 461 (гр. %S)';
  #KSgr2(d460_1 >= d461_1, a460_1, 460, 1)
  #KSgr2(d460_2 >= d461_2, a460_2, 460, 2)
  #KSgr2(d460_3 >= d461_3, a460_3, 460, 3)
  #KSgr2(d460_6 >= d461_6, a460_6, 460, 6)

  //КП 28 Строка 500 (по гр. 1, 2, 3, 4, 5, 6) = сумме строк 510 + 530 + 540 + 600 (по гр. 1, 2, 3, 4, 5, 6)
  getMes := 'КП28: Строка 500 (гр. %S) = сумме строк 510 + 530 + 540 + 600 (гр. %S)';
  #KSgr2(d500_1 = d510_1 + d530_1 + d540_1 + d600_1, a500_1, 500, 1)
  #KSgr2(d500_2 = d510_2 + d530_2 + d540_2 + d600_2, a500_2, 500, 2)
  #KSgr2(d500_3 = d510_3 + d530_3 + d540_3 + d600_3, a500_3, 500, 3)
  #KSgr2(d500_4 = d510_4          + d540_4 + d600_4, a500_4, 500, 4)
  #KSgr2(d500_5 = d510_5 + d530_5 + d540_5 + d600_5, a500_5, 500, 5)
  #KSgr2(d500_6 = d510_6 + d530_6 + d540_6 + d600_6, a500_6, 500, 6)

  //КП 29 Строка 510 (по гр. 1, 2, 3, 6) >= строке 520 (по гр. 1, 2, 3, 6)
  getMes := 'КП29: Строка 510 (гр. %S) >= строке 520 (гр. %S)';
  #KSgr2(d510_1 >= d520_1, a510_1, 510, 1)
  #KSgr2(d510_2 >= d520_2, a510_2, 510, 2)
  #KSgr2(d510_3 >= d520_3, a510_3, 510, 3)
  #KSgr2(d510_6 >= d520_6, a510_6, 510, 6)

  //КП 30 Строка 540 (по гр. 1, 2, 3, 4, 5, 6) = сумме строк 550 + 560 (по гр. 1, 2, 3, 4, 5, 6)
  getMes := 'КП30: Строка 540 (гр. %S) = сумме строк 550 + 560 (гр. %S)';
  #KSgr2(d540_1 = d550_1 + d560_1, a540_1, 540, 1)
  #KSgr2(d540_2 = d550_2 + d560_2, a540_2, 540, 2)
  #KSgr2(d540_3 = d550_3 + d560_3, a540_3, 540, 3)
  #KSgr2(d540_4 = d550_4 + d560_4, a540_4, 540, 4)
  #KSgr2(d540_5 = d550_5 + d560_5, a540_5, 540, 5)
  #KSgr2(d540_6 = d550_6 + d560_6, a540_6, 540, 6)

  //КП 31 Строка 560 (по гр. 1, 2, 3, 4, 5, 6) = сумме строк 570 + 580 + 585 + 590 (по гр. 1, 2, 3, 4, 5, 6)
  getMes := 'КП31: Строка 560 (гр. %S) = сумме строк 570 + 580 + 585 + 590 (гр. %S)';
  #KSgr2(d560_1 = d570_1 + d580_1 + d585_1 + d590_1, a560_1, 560, 1)
  #KSgr2(d560_2 = d570_2 + d580_2 + d585_2 + d590_2, a560_2, 560, 2)
  #KSgr2(d560_3 = d570_3 + d580_3 + d585_3 + d590_3, a560_3, 560, 3)
  #KSgr2(d560_4 = d570_4 + d580_4 + d585_4 + d590_4, a560_4, 560, 4)
  #KSgr2(d560_5 = d570_5 + d580_5 + d585_5 + d590_5, a560_5, 560, 5)
  #KSgr2(d560_6 = d570_6 + d580_6 + d585_6 + d590_6, a560_6, 560, 6)

  if is6Month // Если июнь месяц
  {
    //КП 02 Строки с 710 по 790 (гр. 1, 2) >= 0
    getMes := 'КП02: Строки с 710 по 790 (гр. %S) >= 0';
    #KSgr(d710_1 >= 0, a710_1, 710, 1)   #KSgr(d710_2 >= 0, a710_2, 710, 2)
    #KSgr(d720_1 >= 0, a720_1, 720, 1)   #KSgr(d720_2 >= 0, a720_2, 720, 2)
    #KSgr(d730_1 >= 0, a730_1, 730, 1)   #KSgr(d730_2 >= 0, a730_2, 730, 2)
    #KSgr(d740_1 >= 0, a740_1, 740, 1)   #KSgr(d740_2 >= 0, a740_2, 740, 2)
    #KSgr(d750_1 >= 0, a750_1, 750, 1)   #KSgr(d750_2 >= 0, a750_2, 750, 2)
    #KSgr(d760_1 >= 0, a760_1, 760, 1)   #KSgr(d760_2 >= 0, a760_2, 760, 2)
    #KSgr(d770_1 >= 0, a770_1, 770, 1)   #KSgr(d770_2 >= 0, a770_2, 770, 2)
    #KSgr(d780_1 >= 0, a780_1, 780, 1)   #KSgr(d780_2 >= 0, a780_2, 780, 2)
    #KSgr(d790_1 >= 0, a790_1, 790, 1)   #KSgr(d790_2 >= 0, a790_2, 790, 2)

    //КП 32 Строка 710 (по гр. 1, 2) = сумме строк 720 + 730 (по гр. 1, 2)
    getMes := 'КП32: Строка 710 (гр. %S) = сумме строк 720 + 730 (гр. %S)';
    #KSgr2(d710_1 = d720_1 + d730_1, a710_1, 710, 1)
    #KSgr2(d710_2 = d720_2 + d730_2, a710_2, 710, 2)

    //КП 33 Строка 730 (по гр. 1, 2) = сумме строк 740 + 750 + 760 + 770 + 780 + 790 (по гр. 1, 2)
    getMes := 'КП33: Строка 730 (гр. %S) = сумме строк 740 + 750 + 760 + 770 + 780 + 790 (гр. %S)';
    #KSgr2(d730_1 = d740_1 + d750_1 + d760_1 + d770_1 + d780_1 + d790_1, a730_1, 730, 1)
    #KSgr2(d730_2 = d740_2 + d750_2 + d760_2 + d770_2 + d780_2 + d790_2, a730_2, 730, 2)
  }
  else
  { // Если это не июнь месяц -> рекомендация обнулить поле
    getMes := 'Поле заполняется только во 2м квартале. Обнулите поле';

    #_KSm(a700_1, 'Стр. 700, гр. 1')  #_KSm(a700_2, 'Стр. 700, гр. 2')
    #_KSm(a710_1, 'Стр. 710, гр. 1')  #_KSm(a710_2, 'Стр. 710, гр. 2')
    #_KSm(a720_1, 'Стр. 720, гр. 1')  #_KSm(a720_2, 'Стр. 720, гр. 2')
    #_KSm(a730_1, 'Стр. 730, гр. 1')  #_KSm(a730_2, 'Стр. 730, гр. 2')
    #_KSm(a740_1, 'Стр. 740, гр. 1')  #_KSm(a740_2, 'Стр. 740, гр. 2')
    #_KSm(a750_1, 'Стр. 750, гр. 1')  #_KSm(a750_2, 'Стр. 750, гр. 2')
    #_KSm(a760_1, 'Стр. 760, гр. 1')  #_KSm(a760_2, 'Стр. 760, гр. 2')
    #_KSm(a770_1, 'Стр. 770, гр. 1')  #_KSm(a770_2, 'Стр. 770, гр. 2')
    #_KSm(a780_1, 'Стр. 780, гр. 1')  #_KSm(a780_2, 'Стр. 780, гр. 2')
    #_KSm(a790_1, 'Стр. 790, гр. 1')  #_KSm(a790_2, 'Стр. 790, гр. 2')
    #_KSm(a800_1, 'Стр. 800, гр. 1')  #_KSm(a800_2, 'Стр. 800, гр. 2')
  }
  //----------------------------------------------------------------------------------------------------------
  // #endregion КОНТРОЛЬНЫЕ ПАРАМЕТРЫ
  //----------------------------------------------------------------------------------------------------------
@end.
//#endregion ДЕЙСТВИЯ ВЫПОЛНЯЕМЫЕ ПРИ ПРОВЕРКЕ
//************************************************************************************************************


//============================================================================================================
//#region ДЕЙСТВИЯ ВЫПОЛНЯЕМЫЕ ПРИ РАСЧЕТЕ
//------------------------------------------------------------------------------------------------------------
@Script On_Recalc : boolean;
  //==========================================================================================================
  //#region СЕРВИС
  //----------------------------------------------------------------------------------------------------------
  #undef SG_R1
  #declare SG_R1(_Name, _Num, _Gr)
    a#_Name := 'Файл/Документ/Разд1/Стр#_Num/Гр#_Gr';
    d#_Name := GetDblVal(a#_Name);
  #end

  //----------------------------------------------------------------------------------------------------------
  #undef SG_R2
  #declare SG_R2(_Name, _Num, _Gr)
    a#_Name := 'Файл/Документ/Разд2/Стр#_Num/Гр#_Gr';
    d#_Name := GetDblVal(a#_Name);
  #end

  //----------------------------------------------------------------------------------------------------------
  #undef SG_R3
  #declare SG_R3(_Name, _Num, _Gr)
    a#_Name := 'Файл/Документ/Разд3/Стр#_Num/Гр#_Gr';
    d#_Name := GetDblVal(a#_Name);
  #end

  //----------------------------------------------------------------------------------------------------------
  #undef Log
  #define Log(_strAdr, _strMes, _Num, _strVal) MesError.InsertRasch('', #_strAdr, FormatStr_1(#_strMes, Trim('#_Num')), #_strVal);

  //----------------------------------------------------------------------------------------------------------
  function GV(_strAdr : string) : string;
  { Result := GetStrValFormat(_strAdr); }

  //----------------------------------------------------------------------------------------------------------
  #undef SV
  #declare SV(_Name)
    XMLMAP.SetVariantAttrValueByName_Formula(a#_Name, Round(d#_Name), 2);
    d#_Name := GetDblVal(a#_Name);
  #end
  //#endregion СЕРВИС
  //**********************************************************************************************************
@begin
  Result := False;

  if ((GetStrVal('Файл/Документ/ДатаДок') = '') or (GetStrVal('Файл/Документ/ДатаДок') = 'DD mon YYYY'))
     SetFldVal('Файл/Документ/ДатаДок', DateToStr(Cur_Date, 'DD mon YYYY'));

  //----------------------------------------------------------------------------------------------------------
  // #region ОБЪЯВЛЕНИЕ И ИНИЦИАЛИЗАЦИЯ ПЕРЕМЕННЫХ
  //----------------------------------------------------------------------------------------------------------
  var is6Month : Boolean;
  is6Month := (Month(TaxDat.dEnd) = 6);

  var mes, mes_, m010, m020, m030, m040, m080, m140, m180, m250, m290, m325, m330, m370, m500, m500_4, m540, m560, m710, m730 : String;

  var a010_1, a010_2, a010_3, a010_4, a010_5, a010_6, a010_7, a020_1, a020_2, a020_3, a020_4, a020_5, a020_6, a020_7, a030_1, a030_2, a030_3, a030_4, a030_5, a030_6, a030_7, a040_1
    , a040_2, a040_3, a040_4, a040_5, a040_6, a040_7, a050_1, a050_2, a050_3, a050_4, a050_5, a050_6, a050_7, a060_1, a060_2, a060_3, a060_4, a060_5, a060_6, a060_7, a070_1, a070_2
    , a070_3, a070_4, a070_5, a070_6, a070_7, a080_1, a080_2, a080_3, a080_4, a080_5, a080_6, a080_7, a090_1, a090_2, a090_3, a090_4, a090_5, a090_6, a090_7, a100_1, a100_2, a100_3
    , a100_4, a100_5, a100_6, a100_7, a110_1, a110_2, a110_3, a110_4, a110_5, a110_6, a110_7, a120_1, a120_2, a120_3, a120_4, a120_5, a120_6, a120_7, a130_1, a130_2, a130_3, a130_4
    , a130_5, a130_6, a130_7, a140_1, a140_2, a140_3, a140_4, a140_5, a140_6, a140_7, a150_1, a150_2, a150_3, a150_4, a150_5, a150_6, a150_7, a160_1, a160_2, a160_3, a160_4, a160_5
    , a160_6, a160_7, a170_1, a170_2, a170_3, a170_4, a170_5, a170_6, a170_7, a180_1, a180_2, a180_3, a180_4, a180_5, a180_6, a180_7, a190_1, a190_2, a190_3, a190_4, a190_5, a190_6
    , a190_7, a200_1, a200_2, a200_3, a200_4, a200_5, a200_6, a200_7, a210_1, a210_2, a210_3, a210_4, a210_5, a210_6, a210_7, a220_1, a220_2, a220_3, a220_4, a220_5, a220_6, a220_7
    , a230_1, a230_2, a230_3, a230_4, a230_5, a230_6, a230_7, a240_1, a240_2, a240_3, a240_4, a240_5, a240_6, a240_7, a245_1, a245_2, a245_3, a245_4, a245_5, a245_6, a245_7, a250_1
    , a250_2, a250_3, a250_4, a250_5, a250_6, a250_7, a260_1, a260_2, a260_3, a260_4, a260_5, a260_6, a260_7, a270_1, a270_2, a270_3, a270_4, a270_5, a270_6, a270_7, a280_1, a280_2
    , a280_3, a280_4, a280_5, a280_6, a280_7, a290_1, a290_2, a290_3, a290_4, a290_5, a290_6, a290_7, a300_1, a300_2, a300_3, a300_4, a300_5, a300_6, a300_7, a301_1, a301_2, a301_3
    , a301_4, a301_5, a301_6, a301_7, a310_1, a310_2, a310_3, a310_4, a310_5, a310_6, a310_7, a320_1, a320_2, a320_3, a320_4, a320_5, a320_6, a320_7, a321_1, a321_2, a321_3, a321_4
    , a321_5, a321_6, a321_7, a325_1, a325_2, a325_3, a325_4, a325_5, a325_6, a325_7, a326_1, a326_2, a326_3, a326_4, a326_5, a326_6, a326_7, a327_1, a327_2, a327_3, a327_4, a327_5
    , a327_6, a327_7, a328_1, a328_2, a328_3, a328_4, a328_5, a328_6, a328_7, a329_1, a329_2, a329_3, a329_4, a329_5, a329_6, a329_7, a330_1, a330_2, a330_3, a330_4, a330_5, a330_6
    , a330_7, a340_1, a340_2, a340_3, a340_4, a340_5, a340_6, a340_7, a350_1, a350_2, a350_3, a350_4, a350_5, a350_6, a350_7, a360_1, a360_2, a360_3, a360_4, a360_5, a360_6, a360_7
    , a370_1, a370_2, a370_3, a370_4, a370_5, a370_6, a370_7, a380_1, a380_2, a380_3, a380_4, a380_5, a380_6, a380_7, a390_1, a390_2, a390_3, a390_4, a390_5, a390_6, a390_7, a400_1
    , a400_2, a400_3, a400_4, a400_5, a400_6, a400_7, a410_1, a410_2, a410_3, a410_4, a410_5, a410_6, a410_7, a420_1, a420_2, a420_3, a420_4, a420_5, a420_6, a420_7, a435_1, a435_2
    , a435_3, a435_4, a435_5, a435_6, a435_7, a440_1, a440_2, a440_3, a440_4, a440_5, a440_6, a441_1, a441_2, a441_3, a441_4, a441_5, a441_6, a450_1, a450_2, a450_3, a450_4, a450_5
    , a450_6, a460_1, a460_2, a460_3, a460_4, a460_5, a460_6, a461_1, a461_2, a461_3, a461_4, a461_5, a461_6, a500_1, a500_2, a500_3, a500_4, a500_5, a500_6, a510_1, a510_2, a510_3
    , a510_4, a510_5, a510_6, a520_1, a520_2, a520_3, a520_4, a520_5, a520_6, a530_1, a530_2, a530_3, a530_5, a530_6, a540_1, a540_2, a540_3, a540_4, a540_5, a540_6, a550_1, a550_2
    , a550_3, a550_4, a550_5, a550_6, a560_1, a560_2, a560_3, a560_4, a560_5, a560_6, a570_1, a570_2, a570_3, a570_4, a570_5, a570_6, a580_1, a580_2, a580_3, a580_4, a580_5, a580_6
    , a585_1, a585_2, a585_3, a585_4, a585_5, a585_6, a590_1, a590_2, a590_3, a590_4, a590_5, a590_6, a600_1, a600_2, a600_3, a600_4, a600_5, a600_6, a700_1, a700_2, a710_1, a710_2
    , a720_1, a720_2, a730_1, a730_2, a740_1, a740_2, a750_1, a750_2, a760_1, a760_2, a770_1, a770_2, a780_1, a780_2, a790_1, a790_2, a800_1, a800_2 : String;

  var d010_1, d010_2, d010_3, d010_4, d010_5, d010_6, d010_7, d020_1, d020_2, d020_3, d020_4, d020_5, d020_6, d020_7, d030_1, d030_2, d030_3, d030_4, d030_5, d030_6, d030_7, d040_1
    , d040_2, d040_3, d040_4, d040_5, d040_6, d040_7, d050_1, d050_2, d050_3, d050_4, d050_5, d050_6, d050_7, d060_1, d060_2, d060_3, d060_4, d060_5, d060_6, d060_7, d070_1, d070_2
    , d070_3, d070_4, d070_5, d070_6, d070_7, d080_1, d080_2, d080_3, d080_4, d080_5, d080_6, d080_7, d090_1, d090_2, d090_3, d090_4, d090_5, d090_6, d090_7, d100_1, d100_2, d100_3
    , d100_4, d100_5, d100_6, d100_7, d110_1, d110_2, d110_3, d110_4, d110_5, d110_6, d110_7, d120_1, d120_2, d120_3, d120_4, d120_5, d120_6, d120_7, d130_1, d130_2, d130_3, d130_4
    , d130_5, d130_6, d130_7, d140_1, d140_2, d140_3, d140_4, d140_5, d140_6, d140_7, d150_1, d150_2, d150_3, d150_4, d150_5, d150_6, d150_7, d160_1, d160_2, d160_3, d160_4, d160_5
    , d160_6, d160_7, d170_1, d170_2, d170_3, d170_4, d170_5, d170_6, d170_7, d180_1, d180_2, d180_3, d180_4, d180_5, d180_6, d180_7, d190_1, d190_2, d190_3, d190_4, d190_5, d190_6
    , d190_7, d200_1, d200_2, d200_3, d200_4, d200_5, d200_6, d200_7, d210_1, d210_2, d210_3, d210_4, d210_5, d210_6, d210_7, d220_1, d220_2, d220_3, d220_4, d220_5, d220_6, d220_7
    , d230_1, d230_2, d230_3, d230_4, d230_5, d230_6, d230_7, d240_1, d240_2, d240_3, d240_4, d240_5, d240_6, d240_7, d245_1, d245_2, d245_3, d245_4, d245_5, d245_6, d245_7, d250_1
    , d250_2, d250_3, d250_4, d250_5, d250_6, d250_7, d260_1, d260_2, d260_3, d260_4, d260_5, d260_6, d260_7, d270_1, d270_2, d270_3, d270_4, d270_5, d270_6, d270_7, d280_1, d280_2
    , d280_3, d280_4, d280_5, d280_6, d280_7, d290_1, d290_2, d290_3, d290_4, d290_5, d290_6, d290_7, d300_1, d300_2, d300_3, d300_4, d300_5, d300_6, d300_7, d301_1, d301_2, d301_3
    , d301_4, d301_5, d301_6, d301_7, d310_1, d310_2, d310_3, d310_4, d310_5, d310_6, d310_7, d320_1, d320_2, d320_3, d320_4, d320_5, d320_6, d320_7, d321_1, d321_2, d321_3, d321_4
    , d321_5, d321_6, d321_7, d325_1, d325_2, d325_3, d325_4, d325_5, d325_6, d325_7, d326_1, d326_2, d326_3, d326_4, d326_5, d326_6, d326_7, d327_1, d327_2, d327_3, d327_4, d327_5
    , d327_6, d327_7, d328_1, d328_2, d328_3, d328_4, d328_5, d328_6, d328_7, d329_1, d329_2, d329_3, d329_4, d329_5, d329_6, d329_7, d330_1, d330_2, d330_3, d330_4, d330_5, d330_6
    , d330_7, d340_1, d340_2, d340_3, d340_4, d340_5, d340_6, d340_7, d350_1, d350_2, d350_3, d350_4, d350_5, d350_6, d350_7, d360_1, d360_2, d360_3, d360_4, d360_5, d360_6, d360_7
    , d370_1, d370_2, d370_3, d370_4, d370_5, d370_6, d370_7, d380_1, d380_2, d380_3, d380_4, d380_5, d380_6, d380_7, d390_1, d390_2, d390_3, d390_4, d390_5, d390_6, d390_7, d400_1
    , d400_2, d400_3, d400_4, d400_5, d400_6, d400_7, d410_1, d410_2, d410_3, d410_4, d410_5, d410_6, d410_7, d420_1, d420_2, d420_3, d420_4, d420_5, d420_6, d420_7, d435_1, d435_2
    , d435_3, d435_4, d435_5, d435_6, d435_7, d440_1, d440_2, d440_3, d440_4, d440_5, d440_6, d441_1, d441_2, d441_3, d441_4, d441_5, d441_6, d450_1, d450_2, d450_3, d450_4, d450_5
    , d450_6, d460_1, d460_2, d460_3, d460_4, d460_5, d460_6, d461_1, d461_2, d461_3, d461_4, d461_5, d461_6, d500_1, d500_2, d500_3, d500_4, d500_5, d500_6, d510_1, d510_2, d510_3
    , d510_4, d510_5, d510_6, d520_1, d520_2, d520_3, d520_4, d520_5, d520_6, d530_1, d530_2, d530_3, d530_5, d530_6, d540_1, d540_2, d540_3, d540_4, d540_5, d540_6, d550_1, d550_2
    , d550_3, d550_4, d550_5, d550_6, d560_1, d560_2, d560_3, d560_4, d560_5, d560_6, d570_1, d570_2, d570_3, d570_4, d570_5, d570_6, d580_1, d580_2, d580_3, d580_4, d580_5, d580_6
    , d585_1, d585_2, d585_3, d585_4, d585_5, d585_6, d590_1, d590_2, d590_3, d590_4, d590_5, d590_6, d600_1, d600_2, d600_3, d600_4, d600_5, d600_6, d700_1, d700_2, d710_1, d710_2
    , d720_1, d720_2, d730_1, d730_2, d740_1, d740_2, d750_1, d750_2, d760_1, d760_2, d770_1, d770_2, d780_1, d780_2, d790_1, d790_2, d800_1, d800_2 : Double;

  //Раздел 1
  #SG_R1(010_1,010,1)  #SG_R1(010_2,010,2)  #SG_R1(010_3,010,3)  #SG_R1(010_4,010,4)  #SG_R1(010_5,010,5)  #SG_R1(010_6,010,6)  #SG_R1(010_7,010,7)
  #SG_R1(020_1,020,1)  #SG_R1(020_2,020,2)  #SG_R1(020_3,020,3)  #SG_R1(020_4,020,4)  #SG_R1(020_5,020,5)  #SG_R1(020_6,020,6)  #SG_R1(020_7,020,7)
  #SG_R1(030_1,030,1)  #SG_R1(030_2,030,2)  #SG_R1(030_3,030,3)  #SG_R1(030_4,030,4)  #SG_R1(030_5,030,5)  #SG_R1(030_6,030,6)  #SG_R1(030_7,030,7)
  #SG_R1(040_1,040,1)  #SG_R1(040_2,040,2)  #SG_R1(040_3,040,3)  #SG_R1(040_4,040,4)  #SG_R1(040_5,040,5)  #SG_R1(040_6,040,6)  #SG_R1(040_7,040,7)
  #SG_R1(050_1,050,1)  #SG_R1(050_2,050,2)  #SG_R1(050_3,050,3)  #SG_R1(050_4,050,4)  #SG_R1(050_5,050,5)  #SG_R1(050_6,050,6)  #SG_R1(050_7,050,7)
  #SG_R1(060_1,060,1)  #SG_R1(060_2,060,2)  #SG_R1(060_3,060,3)  #SG_R1(060_4,060,4)  #SG_R1(060_5,060,5)  #SG_R1(060_6,060,6)  #SG_R1(060_7,060,7)
  #SG_R1(070_1,070,1)  #SG_R1(070_2,070,2)  #SG_R1(070_3,070,3)  #SG_R1(070_4,070,4)  #SG_R1(070_5,070,5)  #SG_R1(070_6,070,6)  #SG_R1(070_7,070,7)
  #SG_R1(080_1,080,1)  #SG_R1(080_2,080,2)  #SG_R1(080_3,080,3)  #SG_R1(080_4,080,4)  #SG_R1(080_5,080,5)  #SG_R1(080_6,080,6)  #SG_R1(080_7,080,7)
  #SG_R1(090_1,090,1)  #SG_R1(090_2,090,2)  #SG_R1(090_3,090,3)  #SG_R1(090_4,090,4)  #SG_R1(090_5,090,5)  #SG_R1(090_6,090,6)  #SG_R1(090_7,090,7)
  #SG_R1(100_1,100,1)  #SG_R1(100_2,100,2)  #SG_R1(100_3,100,3)  #SG_R1(100_4,100,4)  #SG_R1(100_5,100,5)  #SG_R1(100_6,100,6)  #SG_R1(100_7,100,7)
  #SG_R1(110_1,110,1)  #SG_R1(110_2,110,2)  #SG_R1(110_3,110,3)  #SG_R1(110_4,110,4)  #SG_R1(110_5,110,5)  #SG_R1(110_6,110,6)  #SG_R1(110_7,110,7)
  #SG_R1(120_1,120,1)  #SG_R1(120_2,120,2)  #SG_R1(120_3,120,3)  #SG_R1(120_4,120,4)  #SG_R1(120_5,120,5)  #SG_R1(120_6,120,6)  #SG_R1(120_7,120,7)
  #SG_R1(130_1,130,1)  #SG_R1(130_2,130,2)  #SG_R1(130_3,130,3)  #SG_R1(130_4,130,4)  #SG_R1(130_5,130,5)  #SG_R1(130_6,130,6)  #SG_R1(130_7,130,7)
  #SG_R1(140_1,140,1)  #SG_R1(140_2,140,2)  #SG_R1(140_3,140,3)  #SG_R1(140_4,140,4)  #SG_R1(140_5,140,5)  #SG_R1(140_6,140,6)  #SG_R1(140_7,140,7)
  #SG_R1(150_1,150,1)  #SG_R1(150_2,150,2)  #SG_R1(150_3,150,3)  #SG_R1(150_4,150,4)  #SG_R1(150_5,150,5)  #SG_R1(150_6,150,6)  #SG_R1(150_7,150,7)
  #SG_R1(160_1,160,1)  #SG_R1(160_2,160,2)  #SG_R1(160_3,160,3)  #SG_R1(160_4,160,4)  #SG_R1(160_5,160,5)  #SG_R1(160_6,160,6)  #SG_R1(160_7,160,7)
  #SG_R1(170_1,170,1)  #SG_R1(170_2,170,2)  #SG_R1(170_3,170,3)  #SG_R1(170_4,170,4)  #SG_R1(170_5,170,5)  #SG_R1(170_6,170,6)  #SG_R1(170_7,170,7)
  #SG_R1(180_1,180,1)  #SG_R1(180_2,180,2)  #SG_R1(180_3,180,3)  #SG_R1(180_4,180,4)  #SG_R1(180_5,180,5)  #SG_R1(180_6,180,6)  #SG_R1(180_7,180,7)
  #SG_R1(190_1,190,1)  #SG_R1(190_2,190,2)  #SG_R1(190_3,190,3)  #SG_R1(190_4,190,4)  #SG_R1(190_5,190,5)  #SG_R1(190_6,190,6)  #SG_R1(190_7,190,7)
  #SG_R1(200_1,200,1)  #SG_R1(200_2,200,2)  #SG_R1(200_3,200,3)  #SG_R1(200_4,200,4)  #SG_R1(200_5,200,5)  #SG_R1(200_6,200,6)  #SG_R1(200_7,200,7)
  #SG_R1(210_1,210,1)  #SG_R1(210_2,210,2)  #SG_R1(210_3,210,3)  #SG_R1(210_4,210,4)  #SG_R1(210_5,210,5)  #SG_R1(210_6,210,6)  #SG_R1(210_7,210,7)
  #SG_R1(220_1,220,1)  #SG_R1(220_2,220,2)  #SG_R1(220_3,220,3)  #SG_R1(220_4,220,4)  #SG_R1(220_5,220,5)  #SG_R1(220_6,220,6)  #SG_R1(220_7,220,7)
  #SG_R1(230_1,230,1)  #SG_R1(230_2,230,2)  #SG_R1(230_3,230,3)  #SG_R1(230_4,230,4)  #SG_R1(230_5,230,5)  #SG_R1(230_6,230,6)  #SG_R1(230_7,230,7)
  #SG_R1(240_1,240,1)  #SG_R1(240_2,240,2)  #SG_R1(240_3,240,3)  #SG_R1(240_4,240,4)  #SG_R1(240_5,240,5)  #SG_R1(240_6,240,6)  #SG_R1(240_7,240,7)
  #SG_R1(245_1,245,1)  #SG_R1(245_2,245,2)  #SG_R1(245_3,245,3)  #SG_R1(245_4,245,4)  #SG_R1(245_5,245,5)  #SG_R1(245_6,245,6)  #SG_R1(245_7,245,7)
  #SG_R1(250_1,250,1)  #SG_R1(250_2,250,2)  #SG_R1(250_3,250,3)  #SG_R1(250_4,250,4)  #SG_R1(250_5,250,5)  #SG_R1(250_6,250,6)  #SG_R1(250_7,250,7)
  #SG_R1(260_1,260,1)  #SG_R1(260_2,260,2)  #SG_R1(260_3,260,3)  #SG_R1(260_4,260,4)  #SG_R1(260_5,260,5)  #SG_R1(260_6,260,6)  #SG_R1(260_7,260,7)
  #SG_R1(270_1,270,1)  #SG_R1(270_2,270,2)  #SG_R1(270_3,270,3)  #SG_R1(270_4,270,4)  #SG_R1(270_5,270,5)  #SG_R1(270_6,270,6)  #SG_R1(270_7,270,7)
  #SG_R1(280_1,280,1)  #SG_R1(280_2,280,2)  #SG_R1(280_3,280,3)  #SG_R1(280_4,280,4)  #SG_R1(280_5,280,5)  #SG_R1(280_6,280,6)  #SG_R1(280_7,280,7)
  #SG_R1(290_1,290,1)  #SG_R1(290_2,290,2)  #SG_R1(290_3,290,3)  #SG_R1(290_4,290,4)  #SG_R1(290_5,290,5)  #SG_R1(290_6,290,6)  #SG_R1(290_7,290,7)
  #SG_R1(300_1,300,1)  #SG_R1(300_2,300,2)  #SG_R1(300_3,300,3)  #SG_R1(300_4,300,4)  #SG_R1(300_5,300,5)  #SG_R1(300_6,300,6)  #SG_R1(300_7,300,7)
  #SG_R1(301_1,301,1)  #SG_R1(301_2,301,2)  #SG_R1(301_3,301,3)  #SG_R1(301_4,301,4)  #SG_R1(301_5,301,5)  #SG_R1(301_6,301,6)  #SG_R1(301_7,301,7)
  #SG_R1(310_1,310,1)  #SG_R1(310_2,310,2)  #SG_R1(310_3,310,3)  #SG_R1(310_4,310,4)  #SG_R1(310_5,310,5)  #SG_R1(310_6,310,6)  #SG_R1(310_7,310,7)
  #SG_R1(320_1,320,1)  #SG_R1(320_2,320,2)  #SG_R1(320_3,320,3)  #SG_R1(320_4,320,4)  #SG_R1(320_5,320,5)  #SG_R1(320_6,320,6)  #SG_R1(320_7,320,7)
  #SG_R1(321_1,321,1)  #SG_R1(321_2,321,2)  #SG_R1(321_3,321,3)  #SG_R1(321_4,321,4)  #SG_R1(321_5,321,5)  #SG_R1(321_6,321,6)  #SG_R1(321_7,321,7)
  #SG_R1(325_1,325,1)  #SG_R1(325_2,325,2)  #SG_R1(325_3,325,3)  #SG_R1(325_4,325,4)  #SG_R1(325_5,325,5)  #SG_R1(325_6,325,6)  #SG_R1(325_7,325,7)
  #SG_R1(326_1,326,1)  #SG_R1(326_2,326,2)  #SG_R1(326_3,326,3)  #SG_R1(326_4,326,4)  #SG_R1(326_5,326,5)  #SG_R1(326_6,326,6)  #SG_R1(326_7,326,7)
  #SG_R1(327_1,327,1)  #SG_R1(327_2,327,2)  #SG_R1(327_3,327,3)  #SG_R1(327_4,327,4)  #SG_R1(327_5,327,5)  #SG_R1(327_6,327,6)  #SG_R1(327_7,327,7)
  #SG_R1(328_1,328,1)  #SG_R1(328_2,328,2)  #SG_R1(328_3,328,3)  #SG_R1(328_4,328,4)  #SG_R1(328_5,328,5)  #SG_R1(328_6,328,6)  #SG_R1(328_7,328,7)
  #SG_R1(329_1,329,1)  #SG_R1(329_2,329,2)  #SG_R1(329_3,329,3)  #SG_R1(329_4,329,4)  #SG_R1(329_5,329,5)  #SG_R1(329_6,329,6)  #SG_R1(329_7,329,7)
  #SG_R1(330_1,330,1)  #SG_R1(330_2,330,2)  #SG_R1(330_3,330,3)  #SG_R1(330_4,330,4)  #SG_R1(330_5,330,5)  #SG_R1(330_6,330,6)  #SG_R1(330_7,330,7)
  #SG_R1(340_1,340,1)  #SG_R1(340_2,340,2)  #SG_R1(340_3,340,3)  #SG_R1(340_4,340,4)  #SG_R1(340_5,340,5)  #SG_R1(340_6,340,6)  #SG_R1(340_7,340,7)
  #SG_R1(350_1,350,1)  #SG_R1(350_2,350,2)  #SG_R1(350_3,350,3)  #SG_R1(350_4,350,4)  #SG_R1(350_5,350,5)  #SG_R1(350_6,350,6)  #SG_R1(350_7,350,7)
  #SG_R1(360_1,360,1)  #SG_R1(360_2,360,2)  #SG_R1(360_3,360,3)  #SG_R1(360_4,360,4)  #SG_R1(360_5,360,5)  #SG_R1(360_6,360,6)  #SG_R1(360_7,360,7)
  #SG_R1(370_1,370,1)  #SG_R1(370_2,370,2)  #SG_R1(370_3,370,3)  #SG_R1(370_4,370,4)  #SG_R1(370_5,370,5)  #SG_R1(370_6,370,6)  #SG_R1(370_7,370,7)
  #SG_R1(380_1,380,1)  #SG_R1(380_2,380,2)  #SG_R1(380_3,380,3)  #SG_R1(380_4,380,4)  #SG_R1(380_5,380,5)  #SG_R1(380_6,380,6)  #SG_R1(380_7,380,7)
  #SG_R1(390_1,390,1)  #SG_R1(390_2,390,2)  #SG_R1(390_3,390,3)  #SG_R1(390_4,390,4)  #SG_R1(390_5,390,5)  #SG_R1(390_6,390,6)  #SG_R1(390_7,390,7)
  #SG_R1(400_1,400,1)  #SG_R1(400_2,400,2)  #SG_R1(400_3,400,3)  #SG_R1(400_4,400,4)  #SG_R1(400_5,400,5)  #SG_R1(400_6,400,6)  #SG_R1(400_7,400,7)
  #SG_R1(410_1,410,1)  #SG_R1(410_2,410,2)  #SG_R1(410_3,410,3)  #SG_R1(410_4,410,4)  #SG_R1(410_5,410,5)  #SG_R1(410_6,410,6)  #SG_R1(410_7,410,7)
  #SG_R1(420_1,420,1)  #SG_R1(420_2,420,2)  #SG_R1(420_3,420,3)  #SG_R1(420_4,420,4)  #SG_R1(420_5,420,5)  #SG_R1(420_6,420,6)  #SG_R1(420_7,420,7)
  #SG_R1(435_1,435,1)  #SG_R1(435_2,435,2)  #SG_R1(435_3,435,3)  #SG_R1(435_4,435,4)  #SG_R1(435_5,435,5)  #SG_R1(435_6,435,6)  #SG_R1(435_7,435,7)
  #SG_R1(440_1,440,1)  #SG_R1(440_2,440,2)  #SG_R1(440_3,440,3)  #SG_R1(440_4,440,4)  #SG_R1(440_5,440,5)  #SG_R1(440_6,440,6)
  #SG_R1(441_1,441,1)  #SG_R1(441_2,441,2)  #SG_R1(441_3,441,3)  #SG_R1(441_4,441,4)  #SG_R1(441_5,441,5)  #SG_R1(441_6,441,6)
  #SG_R1(450_1,450,1)  #SG_R1(450_2,450,2)  #SG_R1(450_3,450,3)  #SG_R1(450_4,450,4)  #SG_R1(450_5,450,5)  #SG_R1(450_6,450,6)
  #SG_R1(460_1,460,1)  #SG_R1(460_2,460,2)  #SG_R1(460_3,460,3)  #SG_R1(460_4,460,4)  #SG_R1(460_5,460,5)  #SG_R1(460_6,460,6)
  #SG_R1(461_1,461,1)  #SG_R1(461_2,461,2)  #SG_R1(461_3,461,3)  #SG_R1(461_4,461,4)  #SG_R1(461_5,461,5)  #SG_R1(461_6,461,6)

  //Раздел 2
  #SG_R2(500_1,500,1)  #SG_R2(500_2,500,2)  #SG_R2(500_3,500,3)  #SG_R2(500_4,500,4)  #SG_R2(500_5,500,5)  #SG_R2(500_6,500,6)
  #SG_R2(510_1,510,1)  #SG_R2(510_2,510,2)  #SG_R2(510_3,510,3)  #SG_R2(510_4,510,4)  #SG_R2(510_5,510,5)  #SG_R2(510_6,510,6)
  #SG_R2(520_1,520,1)  #SG_R2(520_2,520,2)  #SG_R2(520_3,520,3)  #SG_R2(520_4,520,4)  #SG_R2(520_5,520,5)  #SG_R2(520_6,520,6)
  #SG_R2(530_1,530,1)  #SG_R2(530_2,530,2)  #SG_R2(530_3,530,3)                       #SG_R2(530_5,530,5)  #SG_R2(530_6,530,6)
  #SG_R2(540_1,540,1)  #SG_R2(540_2,540,2)  #SG_R2(540_3,540,3)  #SG_R2(540_4,540,4)  #SG_R2(540_5,540,5)  #SG_R2(540_6,540,6)
  #SG_R2(550_1,550,1)  #SG_R2(550_2,550,2)  #SG_R2(550_3,550,3)  #SG_R2(550_4,550,4)  #SG_R2(550_5,550,5)  #SG_R2(550_6,550,6)
  #SG_R2(560_1,560,1)  #SG_R2(560_2,560,2)  #SG_R2(560_3,560,3)  #SG_R2(560_4,560,4)  #SG_R2(560_5,560,5)  #SG_R2(560_6,560,6)
  #SG_R2(570_1,570,1)  #SG_R2(570_2,570,2)  #SG_R2(570_3,570,3)  #SG_R2(570_4,570,4)  #SG_R2(570_5,570,5)  #SG_R2(570_6,570,6)
  #SG_R2(580_1,580,1)  #SG_R2(580_2,580,2)  #SG_R2(580_3,580,3)  #SG_R2(580_4,580,4)  #SG_R2(580_5,580,5)  #SG_R2(580_6,580,6)
  #SG_R2(585_1,585,1)  #SG_R2(585_2,585,2)  #SG_R2(585_3,585,3)  #SG_R2(585_4,585,4)  #SG_R2(585_5,585,5)  #SG_R2(585_6,585,6)
  #SG_R2(590_1,590,1)  #SG_R2(590_2,590,2)  #SG_R2(590_3,590,3)  #SG_R2(590_4,590,4)  #SG_R2(590_5,590,5)  #SG_R2(590_6,590,6)
  #SG_R2(600_1,600,1)  #SG_R2(600_2,600,2)  #SG_R2(600_3,600,3)  #SG_R2(600_4,600,4)  #SG_R2(600_5,600,5)  #SG_R2(600_6,600,6)

  //Раздел 3
  #SG_R3(700_1,700,1)  #SG_R3(700_2,700,2)
  #SG_R3(710_1,710,1)  #SG_R3(710_2,710,2)
  #SG_R3(720_1,720,1)  #SG_R3(720_2,720,2)
  #SG_R3(730_1,730,1)  #SG_R3(730_2,730,2)
  #SG_R3(740_1,740,1)  #SG_R3(740_2,740,2)
  #SG_R3(750_1,750,1)  #SG_R3(750_2,750,2)
  #SG_R3(760_1,760,1)  #SG_R3(760_2,760,2)
  #SG_R3(770_1,770,1)  #SG_R3(770_2,770,2)
  #SG_R3(780_1,780,1)  #SG_R3(780_2,780,2)
  #SG_R3(790_1,790,1)  #SG_R3(790_2,790,2)
  #SG_R3(800_1,800,1)  #SG_R3(800_2,800,2)
  //----------------------------------------------------------------------------------------------------------
  // #endregion ОБЪЯВЛЕНИЕ И ИНИЦИАЛИЗАЦИЯ ПЕРЕМЕННЫХ
  //----------------------------------------------------------------------------------------------------------

  // Описание формулы расчета значения
  m010   := 'Стр. 010 (гр. %S) = стр. 020 + стр. 030'                                                       ;
  m020   := 'Стр. 020 (гр. %S) = стр. 050 + стр. 150 + стр. 260 + стр. 328 + стр. 340'                      ;
  m030   := 'Стр. 030 (гр. %S) = стр. 060 + стр. 160 + стр. 270 + стр. 326 + стр. 350'                      ;
  m040   := 'Стр. 040 (гр. %S) = стр. 050 + стр. 060'                                                       ;
  m080   := 'Стр. 080 (гр. %S) = стр. 090 + стр. 100 + стр. 110 + стр. 120 + стр. 130'                      ;
  m140   := 'Стр. 140 (гр. %S) = стр. 150 + стр. 160'                                                       ;
  m180   := 'Стр. 180 (гр. %S) = стр. 190 + стр. 200 + стр. 210 + стр. 220 + стр. 230 + стр. 240 + стр. 245';
  m250   := 'Стр. 250 (гр. %S) = стр. 260 + стр. 270'                                                       ;
  m290   := 'Стр. 290 (гр. %S) = стр. 300 + стр. 301 + стр. 310 + стр. 320 + стр. 321'                      ;
  m325   := 'Стр. 325 (гр. %S) = стр. 326 + стр. 328'                                                       ;
  m330   := 'Стр. 330 (гр. %S) = стр. 340 + стр. 350'                                                       ;
  m370   := 'Стр. 370 (гр. %S) = стр. 380 + стр. 390 + стр. 400 + стр. 410 + стр. 420 + стр. 435'           ;
  m500   := 'Стр. 500 (гр. %S) = стр. 510 + стр. 530 + стр. 540 + стр. 600'                                 ;
  m500_4 := 'Стр. 500 (гр. %S) = стр. 510 + стр. 540 + стр. 600'                                            ;
  m540   := 'Стр. 540 (гр. %S) = стр. 550 + стр. 560'                                                       ;
  m560   := 'Стр. 560 (гр. %S) = стр. 570 + стр. 580 + стр. 585 + стр. 590'                                 ;
  m710   := 'Стр. 710 (гр. %S) = стр. 720 + стр. 730'                                                       ;
  m730   := 'Стр. 730 (гр. %S) = стр. 740 + стр. 750 + стр. 760 + стр. 770 + стр. 780 + стр. 790'           ;
  mes    := 'Стр. %S (гр. 6) = гр. 1 + гр. 2 - гр. 3 + гр. 4 + гр. 5'                                       ;
  mes_   := 'Стр. %S (гр. 6) = гр. 1 + гр. 2 - гр. 3 + гр. 5'                                               ;

  //----------------------------------------------------------------------------------------------------------
  // #region РАЗДЕЛ 1
  //----------------------------------------------------------------------------------------------------------
  // 020 = 050 + 150 + 260 + 328 + 340
  d020_1 := d050_1 + d150_1 + d260_1 + d328_1 + d340_1;  #SV(020_1)  #Log(a020_1, m020, 1, GV(a020_1)+' = '+GV(a050_1)+' + '+GV(a150_1)+' + '+GV(a260_1)+' + '+GV(a328_1)+' + '+GV(a340_1));
  d020_2 := d050_2 + d150_2 + d260_2 + d328_2 + d340_2;  #SV(020_2)  #Log(a020_2, m020, 2, GV(a020_2)+' = '+GV(a050_2)+' + '+GV(a150_2)+' + '+GV(a260_2)+' + '+GV(a328_2)+' + '+GV(a340_2));
  d020_3 := d050_3 + d150_3 + d260_3 + d328_3 + d340_3;  #SV(020_3)  #Log(a020_3, m020, 3, GV(a020_3)+' = '+GV(a050_3)+' + '+GV(a150_3)+' + '+GV(a260_3)+' + '+GV(a328_3)+' + '+GV(a340_3));
  d020_4 := d050_4 + d150_4 + d260_4 + d328_4 + d340_4;  #SV(020_4)  #Log(a020_4, m020, 4, GV(a020_4)+' = '+GV(a050_4)+' + '+GV(a150_4)+' + '+GV(a260_4)+' + '+GV(a328_4)+' + '+GV(a340_4));
  d020_5 := d050_5 + d150_5 + d260_5 + d328_5 + d340_5;  #SV(020_5)  #Log(a020_5, m020, 5, GV(a020_5)+' = '+GV(a050_5)+' + '+GV(a150_5)+' + '+GV(a260_5)+' + '+GV(a328_5)+' + '+GV(a340_5));
  d020_7 := d050_7 + d150_7 + d260_7 + d328_7 + d340_7;  #SV(020_7)  #Log(a020_7, m020, 7, GV(a020_7)+' = '+GV(a050_7)+' + '+GV(a150_7)+' + '+GV(a260_7)+' + '+GV(a328_7)+' + '+GV(a340_7));

  // 030 = 060 + 160 + 270 + 326 + 350
  d030_1 := d060_1 + d160_1 + d270_1 + d326_1 + d350_1;  #SV(030_1)  #Log(a030_1, m030, 1, GV(a030_1)+' = '+GV(a060_1)+' + '+GV(a160_1)+' + '+GV(a270_1)+' + '+GV(a326_1)+' + '+GV(a350_1));
  d030_2 := d060_2 + d160_2 + d270_2 + d326_2 + d350_2;  #SV(030_2)  #Log(a030_2, m030, 2, GV(a030_2)+' = '+GV(a060_2)+' + '+GV(a160_2)+' + '+GV(a270_2)+' + '+GV(a326_2)+' + '+GV(a350_2));
  d030_3 := d060_3 + d160_3 + d270_3 + d326_3 + d350_3;  #SV(030_3)  #Log(a030_3, m030, 3, GV(a030_3)+' = '+GV(a060_3)+' + '+GV(a160_3)+' + '+GV(a270_3)+' + '+GV(a326_3)+' + '+GV(a350_3));
  d030_4 := d060_4 + d160_4 + d270_4 + d326_4 + d350_4;  #SV(030_4)  #Log(a030_4, m030, 4, GV(a030_4)+' = '+GV(a060_4)+' + '+GV(a160_4)+' + '+GV(a270_4)+' + '+GV(a326_4)+' + '+GV(a350_4));
  d030_5 := d060_5 + d160_5 + d270_5 + d326_5 + d350_5;  #SV(030_5)  #Log(a030_5, m030, 5, GV(a030_5)+' = '+GV(a060_5)+' + '+GV(a160_5)+' + '+GV(a270_5)+' + '+GV(a326_5)+' + '+GV(a350_5));
  d030_7 := d060_7 + d160_7 + d270_7 + d326_7 + d350_7;  #SV(030_7)  #Log(a030_7, m030, 7, GV(a030_7)+' = '+GV(a060_7)+' + '+GV(a160_7)+' + '+GV(a270_7)+' + '+GV(a326_7)+' + '+GV(a350_7));

  // 010 = 020 + 030
  d010_1 := d020_1 + d030_1;  #SV(010_1)  #Log(a010_1, m010, 1, GV(a010_1)+' = '+GV(a020_1)+' + '+GV(a030_1));
  d010_2 := d020_2 + d030_2;  #SV(010_2)  #Log(a010_2, m010, 2, GV(a010_2)+' = '+GV(a020_2)+' + '+GV(a030_2));
  d010_3 := d020_3 + d030_3;  #SV(010_3)  #Log(a010_3, m010, 3, GV(a010_3)+' = '+GV(a020_3)+' + '+GV(a030_3));
  d010_4 := d020_4 + d030_4;  #SV(010_4)  #Log(a010_4, m010, 4, GV(a010_4)+' = '+GV(a020_4)+' + '+GV(a030_4));
  d010_5 := d020_5 + d030_5;  #SV(010_5)  #Log(a010_5, m010, 5, GV(a010_5)+' = '+GV(a020_5)+' + '+GV(a030_5));
  d010_7 := d020_7 + d030_7;  #SV(010_7)  #Log(a010_7, m010, 7, GV(a010_7)+' = '+GV(a020_7)+' + '+GV(a030_7));

  // 040 = 050 + 060
  d040_1 := d050_1 + d060_1;  #SV(040_1)  #Log(a040_1, m040, 1, GV(a040_1)+' = '+GV(a050_1)+' + '+GV(a060_1));
  d040_2 := d050_2 + d060_2;  #SV(040_2)  #Log(a040_2, m040, 2, GV(a040_2)+' = '+GV(a050_2)+' + '+GV(a060_2));
  d040_3 := d050_3 + d060_3;  #SV(040_3)  #Log(a040_3, m040, 3, GV(a040_3)+' = '+GV(a050_3)+' + '+GV(a060_3));
  d040_4 := d050_4 + d060_4;  #SV(040_4)  #Log(a040_4, m040, 4, GV(a040_4)+' = '+GV(a050_4)+' + '+GV(a060_4));
  d040_5 := d050_5 + d060_5;  #SV(040_5)  #Log(a040_5, m040, 5, GV(a040_5)+' = '+GV(a050_5)+' + '+GV(a060_5));
  d040_7 := d050_7 + d060_7;  #SV(040_7)  #Log(a040_7, m040, 7, GV(a040_7)+' = '+GV(a050_7)+' + '+GV(a060_7));

  // 080 = 090 + 100 + 110 + 120 + 130
  d080_1 := d090_1 + d100_1 + d110_1 + d120_1 + d130_1;  #SV(080_1)  #Log(a080_1, m080, 1, GV(a080_1)+' = '+GV(a090_1)+' + '+GV(a100_1)+' + '+GV(a110_1)+' + '+GV(a120_1)+' + '+GV(a130_1));
  d080_2 := d090_2 + d100_2 + d110_2 + d120_2 + d130_2;  #SV(080_2)  #Log(a080_2, m080, 2, GV(a080_2)+' = '+GV(a090_2)+' + '+GV(a100_2)+' + '+GV(a110_2)+' + '+GV(a120_2)+' + '+GV(a130_2));
  d080_3 := d090_3 + d100_3 + d110_3 + d120_3 + d130_3;  #SV(080_3)  #Log(a080_3, m080, 3, GV(a080_3)+' = '+GV(a090_3)+' + '+GV(a100_3)+' + '+GV(a110_3)+' + '+GV(a120_3)+' + '+GV(a130_3));
  d080_4 := d090_4 + d100_4 + d110_4 + d120_4 + d130_4;  #SV(080_4)  #Log(a080_4, m080, 4, GV(a080_4)+' = '+GV(a090_4)+' + '+GV(a100_4)+' + '+GV(a110_4)+' + '+GV(a120_4)+' + '+GV(a130_4));
  d080_5 := d090_5 + d100_5 + d110_5 + d120_5 + d130_5;  #SV(080_5)  #Log(a080_5, m080, 5, GV(a080_5)+' = '+GV(a090_5)+' + '+GV(a100_5)+' + '+GV(a110_5)+' + '+GV(a120_5)+' + '+GV(a130_5));
  d080_7 := d090_7 + d100_7 + d110_7 + d120_7 + d130_7;  #SV(080_7)  #Log(a080_7, m080, 7, GV(a080_7)+' = '+GV(a090_7)+' + '+GV(a100_7)+' + '+GV(a110_7)+' + '+GV(a120_7)+' + '+GV(a130_7));

  // 140 = 150 + 160
  d140_1 := d150_1 + d160_1;  #SV(140_1)  #Log(a140_1, m140, 1, GV(a140_1)+' = '+GV(a150_1)+' + '+GV(a160_1));
  d140_2 := d150_2 + d160_2;  #SV(140_2)  #Log(a140_2, m140, 2, GV(a140_2)+' = '+GV(a150_2)+' + '+GV(a160_2));
  d140_3 := d150_3 + d160_3;  #SV(140_3)  #Log(a140_3, m140, 3, GV(a140_3)+' = '+GV(a150_3)+' + '+GV(a160_3));
  d140_4 := d150_4 + d160_4;  #SV(140_4)  #Log(a140_4, m140, 4, GV(a140_4)+' = '+GV(a150_4)+' + '+GV(a160_4));
  d140_5 := d150_5 + d160_5;  #SV(140_5)  #Log(a140_5, m140, 5, GV(a140_5)+' = '+GV(a150_5)+' + '+GV(a160_5));
  d140_7 := d150_7 + d160_7;  #SV(140_7)  #Log(a140_7, m140, 7, GV(a140_7)+' = '+GV(a150_7)+' + '+GV(a160_7));

  // 180 = 190 + 200 + 210 + 220 + 230 + 240 + 245
  d180_1 := d190_1 + d200_1 + d210_1 + d220_1 + d230_1 + d240_1 + d245_1;  #SV(180_1)  #Log(a180_1, m180, 1, GV(a180_1)+' = '+GV(a190_1)+' + '+GV(a200_1)+' + '+GV(a210_1)+' + '+GV(a220_1)+' + '+GV(a230_1)+' + '+GV(a240_1)+' + '+GV(a245_1));
  d180_2 := d190_2 + d200_2 + d210_2 + d220_2 + d230_2 + d240_2 + d245_2;  #SV(180_2)  #Log(a180_2, m180, 2, GV(a180_2)+' = '+GV(a190_2)+' + '+GV(a200_2)+' + '+GV(a210_2)+' + '+GV(a220_2)+' + '+GV(a230_2)+' + '+GV(a240_2)+' + '+GV(a245_2));
  d180_3 := d190_3 + d200_3 + d210_3 + d220_3 + d230_3 + d240_3 + d245_3;  #SV(180_3)  #Log(a180_3, m180, 3, GV(a180_3)+' = '+GV(a190_3)+' + '+GV(a200_3)+' + '+GV(a210_3)+' + '+GV(a220_3)+' + '+GV(a230_3)+' + '+GV(a240_3)+' + '+GV(a245_3));
  d180_4 := d190_4 + d200_4 + d210_4 + d220_4 + d230_4 + d240_4 + d245_4;  #SV(180_4)  #Log(a180_4, m180, 4, GV(a180_4)+' = '+GV(a190_4)+' + '+GV(a200_4)+' + '+GV(a210_4)+' + '+GV(a220_4)+' + '+GV(a230_4)+' + '+GV(a240_4)+' + '+GV(a245_4));
  d180_5 := d190_5 + d200_5 + d210_5 + d220_5 + d230_5 + d240_5 + d245_5;  #SV(180_5)  #Log(a180_5, m180, 5, GV(a180_5)+' = '+GV(a190_5)+' + '+GV(a200_5)+' + '+GV(a210_5)+' + '+GV(a220_5)+' + '+GV(a230_5)+' + '+GV(a240_5)+' + '+GV(a245_5));
  d180_7 := d190_7 + d200_7 + d210_7 + d220_7 + d230_7 + d240_7 + d245_7;  #SV(180_7)  #Log(a180_7, m180, 7, GV(a180_7)+' = '+GV(a190_7)+' + '+GV(a200_7)+' + '+GV(a210_7)+' + '+GV(a220_7)+' + '+GV(a230_7)+' + '+GV(a240_7)+' + '+GV(a245_7));

  // 250 = 260 + 270
  d250_1 := d260_1 + d270_1;  #SV(250_1)  #Log(a250_1, m250, 1, GV(a250_1)+' = '+GV(a260_1)+' + '+GV(a270_1));
  d250_2 := d260_2 + d270_2;  #SV(250_2)  #Log(a250_2, m250, 2, GV(a250_2)+' = '+GV(a260_2)+' + '+GV(a270_2));
  d250_3 := d260_3 + d270_3;  #SV(250_3)  #Log(a250_3, m250, 3, GV(a250_3)+' = '+GV(a260_3)+' + '+GV(a270_3));
  d250_4 := d260_4 + d270_4;  #SV(250_4)  #Log(a250_4, m250, 4, GV(a250_4)+' = '+GV(a260_4)+' + '+GV(a270_4));
  d250_5 := d260_5 + d270_5;  #SV(250_5)  #Log(a250_5, m250, 5, GV(a250_5)+' = '+GV(a260_5)+' + '+GV(a270_5));
  d250_7 := d260_7 + d270_7;  #SV(250_7)  #Log(a250_7, m250, 7, GV(a250_7)+' = '+GV(a260_7)+' + '+GV(a270_7));

  // 290 = 300 + 301 + 310 + 320 + 321
  d290_1 := d300_1 + d301_1 + d310_1 + d320_1 + d321_1;  #SV(290_1)  #Log(a290_1, m290, 1, GV(a290_1)+' = '+GV(a300_1)+' + '+GV(a301_1)+' + '+GV(a310_1)+' + '+GV(a320_1)+' + '+GV(a321_1));
  d290_2 := d300_2 + d301_2 + d310_2 + d320_2 + d321_2;  #SV(290_2)  #Log(a290_2, m290, 2, GV(a290_2)+' = '+GV(a300_2)+' + '+GV(a301_2)+' + '+GV(a310_2)+' + '+GV(a320_2)+' + '+GV(a321_2));
  d290_3 := d300_3 + d301_3 + d310_3 + d320_3 + d321_3;  #SV(290_3)  #Log(a290_3, m290, 3, GV(a290_3)+' = '+GV(a300_3)+' + '+GV(a301_3)+' + '+GV(a310_3)+' + '+GV(a320_3)+' + '+GV(a321_3));
  d290_4 := d300_4 + d301_4 + d310_4 + d320_4 + d321_4;  #SV(290_4)  #Log(a290_4, m290, 4, GV(a290_4)+' = '+GV(a300_4)+' + '+GV(a301_4)+' + '+GV(a310_4)+' + '+GV(a320_4)+' + '+GV(a321_4));
  d290_5 := d300_5 + d301_5 + d310_5 + d320_5 + d321_5;  #SV(290_5)  #Log(a290_5, m290, 5, GV(a290_5)+' = '+GV(a300_5)+' + '+GV(a301_5)+' + '+GV(a310_5)+' + '+GV(a320_5)+' + '+GV(a321_5));
  d290_7 := d300_7 + d301_7 + d310_7 + d320_7 + d321_7;  #SV(290_7)  #Log(a290_7, m290, 7, GV(a290_7)+' = '+GV(a300_7)+' + '+GV(a301_7)+' + '+GV(a310_7)+' + '+GV(a320_7)+' + '+GV(a321_7));

  // 325 = 326 + 328
  d325_1 := d326_1 + d328_1;  #SV(325_1)  #Log(a325_1, m325, 1, GV(a325_1)+' = '+GV(a326_1)+' + '+GV(a328_1));
  d325_2 := d326_2 + d328_2;  #SV(325_2)  #Log(a325_2, m325, 2, GV(a325_2)+' = '+GV(a326_2)+' + '+GV(a328_2));
  d325_3 := d326_3 + d328_3;  #SV(325_3)  #Log(a325_3, m325, 3, GV(a325_3)+' = '+GV(a326_3)+' + '+GV(a328_3));
  d325_4 := d326_4 + d328_4;  #SV(325_4)  #Log(a325_4, m325, 4, GV(a325_4)+' = '+GV(a326_4)+' + '+GV(a328_4));
  d325_5 := d326_5 + d328_5;  #SV(325_5)  #Log(a325_5, m325, 5, GV(a325_5)+' = '+GV(a326_5)+' + '+GV(a328_5));
  d325_7 := d326_7 + d328_7;  #SV(325_7)  #Log(a325_7, m325, 7, GV(a325_7)+' = '+GV(a326_7)+' + '+GV(a328_7));

  // 330 = 340 + 350
  d330_1 := d340_1 + d350_1;  #SV(330_1)  #Log(a330_1, m330, 1, GV(a330_1)+' = '+GV(a340_1)+' + '+GV(a350_1));
  d330_2 := d340_2 + d350_2;  #SV(330_2)  #Log(a330_2, m330, 2, GV(a330_2)+' = '+GV(a340_2)+' + '+GV(a350_2));
  d330_3 := d340_3 + d350_3;  #SV(330_3)  #Log(a330_3, m330, 3, GV(a330_3)+' = '+GV(a340_3)+' + '+GV(a350_3));
  d330_4 := d340_4 + d350_4;  #SV(330_4)  #Log(a330_4, m330, 4, GV(a330_4)+' = '+GV(a340_4)+' + '+GV(a350_4));
  d330_5 := d340_5 + d350_5;  #SV(330_5)  #Log(a330_5, m330, 5, GV(a330_5)+' = '+GV(a340_5)+' + '+GV(a350_5));
  d330_7 := d340_7 + d350_7;  #SV(330_7)  #Log(a330_7, m330, 7, GV(a330_7)+' = '+GV(a340_7)+' + '+GV(a350_7));

  // 370 = 380 + 390 + 400 + 410 + 420 + 435
  d370_1 := d380_1 + d390_1 + d400_1 + d410_1 + d420_1 + d435_1;  #SV(370_1)  #Log(a370_1, m370, 1, GV(a370_1)+' = '+GV(a380_1)+' + '+GV(a390_1)+' + '+GV(a400_1)+' + '+GV(a410_1)+' + '+GV(a420_1)+' + '+GV(a435_1));
  d370_2 := d380_2 + d390_2 + d400_2 + d410_2 + d420_2 + d435_2;  #SV(370_2)  #Log(a370_2, m370, 2, GV(a370_2)+' = '+GV(a380_2)+' + '+GV(a390_2)+' + '+GV(a400_2)+' + '+GV(a410_2)+' + '+GV(a420_2)+' + '+GV(a435_2));
  d370_3 := d380_3 + d390_3 + d400_3 + d410_3 + d420_3 + d435_3;  #SV(370_3)  #Log(a370_3, m370, 3, GV(a370_3)+' = '+GV(a380_3)+' + '+GV(a390_3)+' + '+GV(a400_3)+' + '+GV(a410_3)+' + '+GV(a420_3)+' + '+GV(a435_3));
  d370_4 := d380_4 + d390_4 + d400_4 + d410_4 + d420_4 + d435_4;  #SV(370_4)  #Log(a370_4, m370, 4, GV(a370_4)+' = '+GV(a380_4)+' + '+GV(a390_4)+' + '+GV(a400_4)+' + '+GV(a410_4)+' + '+GV(a420_4)+' + '+GV(a435_4));
  d370_5 := d380_5 + d390_5 + d400_5 + d410_5 + d420_5 + d435_5;  #SV(370_5)  #Log(a370_5, m370, 5, GV(a370_5)+' = '+GV(a380_5)+' + '+GV(a390_5)+' + '+GV(a400_5)+' + '+GV(a410_5)+' + '+GV(a420_5)+' + '+GV(a435_5));
  d370_7 := d380_7 + d390_7 + d400_7 + d410_7 + d420_7 + d435_7;  #SV(370_7)  #Log(a370_7, m370, 7, GV(a370_7)+' = '+GV(a380_7)+' + '+GV(a390_7)+' + '+GV(a400_7)+' + '+GV(a410_7)+' + '+GV(a420_7)+' + '+GV(a435_7));
  //----------------------------------------------------------------------------------------------------------
  // #endregion РАЗДЕЛ 1
  //----------------------------------------------------------------------------------------------------------


  //----------------------------------------------------------------------------------------------------------
  // #region РАЗДЕЛ 2
  //----------------------------------------------------------------------------------------------------------
  // 560 = 570 + 580 + 585 + 590
  d560_1 := d570_1 + d580_1 + d585_1 + d590_1;  #SV(560_1)  #Log(a560_1, m560, 1, GV(a560_1)+' = '+GV(a570_1)+' + '+GV(a580_1)+' + '+GV(a585_1)+' + '+GV(a590_1));
  d560_2 := d570_2 + d580_2 + d585_2 + d590_2;  #SV(560_2)  #Log(a560_2, m560, 2, GV(a560_2)+' = '+GV(a570_2)+' + '+GV(a580_2)+' + '+GV(a585_2)+' + '+GV(a590_2));
  d560_3 := d570_3 + d580_3 + d585_3 + d590_3;  #SV(560_3)  #Log(a560_3, m560, 3, GV(a560_3)+' = '+GV(a570_3)+' + '+GV(a580_3)+' + '+GV(a585_3)+' + '+GV(a590_3));
  d560_4 := d570_4 + d580_4 + d585_4 + d590_4;  #SV(560_4)  #Log(a560_4, m560, 4, GV(a560_4)+' = '+GV(a570_4)+' + '+GV(a580_4)+' + '+GV(a585_4)+' + '+GV(a590_4));
  d560_5 := d570_5 + d580_5 + d585_5 + d590_5;  #SV(560_5)  #Log(a560_5, m560, 5, GV(a560_5)+' = '+GV(a570_5)+' + '+GV(a580_5)+' + '+GV(a585_5)+' + '+GV(a590_5));

  // 540 = 550 + 560
  d540_1 := d550_1 + d560_1;  #SV(540_1)  #Log(a540_1, m540, 1, GV(a540_1)+' = '+GV(a550_1)+' + '+GV(a560_1));
  d540_2 := d550_2 + d560_2;  #SV(540_2)  #Log(a540_2, m540, 2, GV(a540_2)+' = '+GV(a550_2)+' + '+GV(a560_2));
  d540_3 := d550_3 + d560_3;  #SV(540_3)  #Log(a540_3, m540, 3, GV(a540_3)+' = '+GV(a550_3)+' + '+GV(a560_3));
  d540_4 := d550_4 + d560_4;  #SV(540_4)  #Log(a540_4, m540, 4, GV(a540_4)+' = '+GV(a550_4)+' + '+GV(a560_4));
  d540_5 := d550_5 + d560_5;  #SV(540_5)  #Log(a540_5, m540, 5, GV(a540_5)+' = '+GV(a550_5)+' + '+GV(a560_5));

  // 500 = 510 + 530 + 540 + 600
  d500_1 := d510_1 + d530_1 + d540_1 + d600_1;  #SV(500_1)  #Log(a500_1, m500  , 1, GV(a500_1)+' = '+GV(a510_1)+' + '+GV(a530_1)+' + '+GV(a540_1)+' + '+GV(a600_1));
  d500_2 := d510_2 + d530_2 + d540_2 + d600_2;  #SV(500_2)  #Log(a500_2, m500  , 2, GV(a500_2)+' = '+GV(a510_2)+' + '+GV(a530_2)+' + '+GV(a540_2)+' + '+GV(a600_2));
  d500_3 := d510_3 + d530_3 + d540_3 + d600_3;  #SV(500_3)  #Log(a500_3, m500  , 3, GV(a500_3)+' = '+GV(a510_3)+' + '+GV(a530_3)+' + '+GV(a540_3)+' + '+GV(a600_3));
  d500_4 := d510_4 +          d540_4 + d600_4;  #SV(500_4)  #Log(a500_4, m500_4, 4, GV(a500_4)+' = '+GV(a510_4)                 +' + '+GV(a540_4)+' + '+GV(a600_4));
  d500_5 := d510_5 + d530_5 + d540_5 + d600_5;  #SV(500_5)  #Log(a500_5, m500  , 5, GV(a500_5)+' = '+GV(a510_5)+' + '+GV(a530_5)+' + '+GV(a540_5)+' + '+GV(a600_5));
  //----------------------------------------------------------------------------------------------------------
  // #endregion РАЗДЕЛ 2
  //----------------------------------------------------------------------------------------------------------


  //----------------------------------------------------------------------------------------------------------
  // #region РАЗДЕЛ 3
  //----------------------------------------------------------------------------------------------------------
  if is6Month
  {
    // 730 = 740 + 750 + 760 + 770 + 780 + 790
    d730_1 := d740_1 + d750_1 + d760_1 + d770_1 + d780_1 + d790_1;  #SV(730_1)  #Log(a730_1, m730, 1, GV(a730_1)+' = '+GV(a740_1)+' + '+GV(a750_1)+' + '+GV(a760_1)+' + '+GV(a770_1)+' + '+GV(a780_1)+' + '+GV(a790_1));
    d730_2 := d740_2 + d750_2 + d760_2 + d770_2 + d780_2 + d790_2;  #SV(730_2)  #Log(a730_2, m730, 2, GV(a730_2)+' = '+GV(a740_2)+' + '+GV(a750_2)+' + '+GV(a760_2)+' + '+GV(a770_2)+' + '+GV(a780_2)+' + '+GV(a790_2));

    // 710 = 720 + 730
    d710_1 := d720_1 + d730_1;  #SV(710_1)  #Log(a710_1, m710, 1, GV(a710_1)+' = '+GV(a720_1)+' + '+GV(a730_1));
    d710_2 := d720_2 + d730_2;  #SV(710_2)  #Log(a710_2, m710, 2, GV(a710_2)+' = '+GV(a720_2)+' + '+GV(a730_2));
  }
  else
  {
    SetFldNull(a710_1);  SetFldNull(a710_2);
    SetFldNull(a730_1);  SetFldNull(a730_2);
  }
  //----------------------------------------------------------------------------------------------------------
  // #endregion РАЗДЕЛ 3
  //----------------------------------------------------------------------------------------------------------

  // Гр. 1 + гр. 2 - гр. 3 + гр. 4 + гр. 5 = гр. 6 #region
  d010_6 := d010_1 + d010_2 - d010_3 + d010_4 + d010_5;  #SV(010_6)  #Log(a010_6, mes , 010, GV(a010_6)+' = '+GV(a010_1)+' + '+GV(a010_2)+' - '+GV(a010_3)+' + '+GV(a010_4)+' + '+GV(a010_5));
  d020_6 := d020_1 + d020_2 - d020_3 + d020_4 + d020_5;  #SV(020_6)  #Log(a020_6, mes , 020, GV(a020_6)+' = '+GV(a020_1)+' + '+GV(a020_2)+' - '+GV(a020_3)+' + '+GV(a020_4)+' + '+GV(a020_5));
  d030_6 := d030_1 + d030_2 - d030_3 + d030_4 + d030_5;  #SV(030_6)  #Log(a030_6, mes , 030, GV(a030_6)+' = '+GV(a030_1)+' + '+GV(a030_2)+' - '+GV(a030_3)+' + '+GV(a030_4)+' + '+GV(a030_5));
  d040_6 := d040_1 + d040_2 - d040_3 + d040_4 + d040_5;  #SV(040_6)  #Log(a040_6, mes , 040, GV(a040_6)+' = '+GV(a040_1)+' + '+GV(a040_2)+' - '+GV(a040_3)+' + '+GV(a040_4)+' + '+GV(a040_5));
  d050_6 := d050_1 + d050_2 - d050_3 + d050_4 + d050_5;  #SV(050_6)  #Log(a050_6, mes , 050, GV(a050_6)+' = '+GV(a050_1)+' + '+GV(a050_2)+' - '+GV(a050_3)+' + '+GV(a050_4)+' + '+GV(a050_5));
  d060_6 := d060_1 + d060_2 - d060_3 + d060_4 + d060_5;  #SV(060_6)  #Log(a060_6, mes , 060, GV(a060_6)+' = '+GV(a060_1)+' + '+GV(a060_2)+' - '+GV(a060_3)+' + '+GV(a060_4)+' + '+GV(a060_5));
  d070_6 := d070_1 + d070_2 - d070_3 + d070_4 + d070_5;  #SV(070_6)  #Log(a070_6, mes , 070, GV(a070_6)+' = '+GV(a070_1)+' + '+GV(a070_2)+' - '+GV(a070_3)+' + '+GV(a070_4)+' + '+GV(a070_5));
  d080_6 := d080_1 + d080_2 - d080_3 + d080_4 + d080_5;  #SV(080_6)  #Log(a080_6, mes , 080, GV(a080_6)+' = '+GV(a080_1)+' + '+GV(a080_2)+' - '+GV(a080_3)+' + '+GV(a080_4)+' + '+GV(a080_5));
  d090_6 := d090_1 + d090_2 - d090_3 + d090_4 + d090_5;  #SV(090_6)  #Log(a090_6, mes , 090, GV(a090_6)+' = '+GV(a090_1)+' + '+GV(a090_2)+' - '+GV(a090_3)+' + '+GV(a090_4)+' + '+GV(a090_5));
  d100_6 := d100_1 + d100_2 - d100_3 + d100_4 + d100_5;  #SV(100_6)  #Log(a100_6, mes , 100, GV(a100_6)+' = '+GV(a100_1)+' + '+GV(a100_2)+' - '+GV(a100_3)+' + '+GV(a100_4)+' + '+GV(a100_5));
  d110_6 := d110_1 + d110_2 - d110_3 + d110_4 + d110_5;  #SV(110_6)  #Log(a110_6, mes , 110, GV(a110_6)+' = '+GV(a110_1)+' + '+GV(a110_2)+' - '+GV(a110_3)+' + '+GV(a110_4)+' + '+GV(a110_5));
  d120_6 := d120_1 + d120_2 - d120_3 + d120_4 + d120_5;  #SV(120_6)  #Log(a120_6, mes , 120, GV(a120_6)+' = '+GV(a120_1)+' + '+GV(a120_2)+' - '+GV(a120_3)+' + '+GV(a120_4)+' + '+GV(a120_5));
  d130_6 := d130_1 + d130_2 - d130_3 + d130_4 + d130_5;  #SV(130_6)  #Log(a130_6, mes , 130, GV(a130_6)+' = '+GV(a130_1)+' + '+GV(a130_2)+' - '+GV(a130_3)+' + '+GV(a130_4)+' + '+GV(a130_5));
  d140_6 := d140_1 + d140_2 - d140_3 + d140_4 + d140_5;  #SV(140_6)  #Log(a140_6, mes , 140, GV(a140_6)+' = '+GV(a140_1)+' + '+GV(a140_2)+' - '+GV(a140_3)+' + '+GV(a140_4)+' + '+GV(a140_5));
  d150_6 := d150_1 + d150_2 - d150_3 + d150_4 + d150_5;  #SV(150_6)  #Log(a150_6, mes , 150, GV(a150_6)+' = '+GV(a150_1)+' + '+GV(a150_2)+' - '+GV(a150_3)+' + '+GV(a150_4)+' + '+GV(a150_5));
  d160_6 := d160_1 + d160_2 - d160_3 + d160_4 + d160_5;  #SV(160_6)  #Log(a160_6, mes , 160, GV(a160_6)+' = '+GV(a160_1)+' + '+GV(a160_2)+' - '+GV(a160_3)+' + '+GV(a160_4)+' + '+GV(a160_5));
  d170_6 := d170_1 + d170_2 - d170_3 + d170_4 + d170_5;  #SV(170_6)  #Log(a170_6, mes , 170, GV(a170_6)+' = '+GV(a170_1)+' + '+GV(a170_2)+' - '+GV(a170_3)+' + '+GV(a170_4)+' + '+GV(a170_5));
  d180_6 := d180_1 + d180_2 - d180_3 + d180_4 + d180_5;  #SV(180_6)  #Log(a180_6, mes , 180, GV(a180_6)+' = '+GV(a180_1)+' + '+GV(a180_2)+' - '+GV(a180_3)+' + '+GV(a180_4)+' + '+GV(a180_5));
  d190_6 := d190_1 + d190_2 - d190_3 + d190_4 + d190_5;  #SV(190_6)  #Log(a190_6, mes , 190, GV(a190_6)+' = '+GV(a190_1)+' + '+GV(a190_2)+' - '+GV(a190_3)+' + '+GV(a190_4)+' + '+GV(a190_5));
  d200_6 := d200_1 + d200_2 - d200_3 + d200_4 + d200_5;  #SV(200_6)  #Log(a200_6, mes , 200, GV(a200_6)+' = '+GV(a200_1)+' + '+GV(a200_2)+' - '+GV(a200_3)+' + '+GV(a200_4)+' + '+GV(a200_5));
  d210_6 := d210_1 + d210_2 - d210_3 + d210_4 + d210_5;  #SV(210_6)  #Log(a210_6, mes , 210, GV(a210_6)+' = '+GV(a210_1)+' + '+GV(a210_2)+' - '+GV(a210_3)+' + '+GV(a210_4)+' + '+GV(a210_5));
  d220_6 := d220_1 + d220_2 - d220_3 + d220_4 + d220_5;  #SV(220_6)  #Log(a220_6, mes , 220, GV(a220_6)+' = '+GV(a220_1)+' + '+GV(a220_2)+' - '+GV(a220_3)+' + '+GV(a220_4)+' + '+GV(a220_5));
  d230_6 := d230_1 + d230_2 - d230_3 + d230_4 + d230_5;  #SV(230_6)  #Log(a230_6, mes , 230, GV(a230_6)+' = '+GV(a230_1)+' + '+GV(a230_2)+' - '+GV(a230_3)+' + '+GV(a230_4)+' + '+GV(a230_5));
  d240_6 := d240_1 + d240_2 - d240_3 + d240_4 + d240_5;  #SV(240_6)  #Log(a240_6, mes , 240, GV(a240_6)+' = '+GV(a240_1)+' + '+GV(a240_2)+' - '+GV(a240_3)+' + '+GV(a240_4)+' + '+GV(a240_5));
  d245_6 := d245_1 + d245_2 - d245_3 + d245_4 + d245_5;  #SV(245_6)  #Log(a245_6, mes , 245, GV(a245_6)+' = '+GV(a245_1)+' + '+GV(a245_2)+' - '+GV(a245_3)+' + '+GV(a245_4)+' + '+GV(a245_5));
  d250_6 := d250_1 + d250_2 - d250_3 + d250_4 + d250_5;  #SV(250_6)  #Log(a250_6, mes , 250, GV(a250_6)+' = '+GV(a250_1)+' + '+GV(a250_2)+' - '+GV(a250_3)+' + '+GV(a250_4)+' + '+GV(a250_5));
  d260_6 := d260_1 + d260_2 - d260_3 + d260_4 + d260_5;  #SV(260_6)  #Log(a260_6, mes , 260, GV(a260_6)+' = '+GV(a260_1)+' + '+GV(a260_2)+' - '+GV(a260_3)+' + '+GV(a260_4)+' + '+GV(a260_5));
  d270_6 := d270_1 + d270_2 - d270_3 + d270_4 + d270_5;  #SV(270_6)  #Log(a270_6, mes , 270, GV(a270_6)+' = '+GV(a270_1)+' + '+GV(a270_2)+' - '+GV(a270_3)+' + '+GV(a270_4)+' + '+GV(a270_5));
  d280_6 := d280_1 + d280_2 - d280_3 + d280_4 + d280_5;  #SV(280_6)  #Log(a280_6, mes , 280, GV(a280_6)+' = '+GV(a280_1)+' + '+GV(a280_2)+' - '+GV(a280_3)+' + '+GV(a280_4)+' + '+GV(a280_5));
  d290_6 := d290_1 + d290_2 - d290_3 + d290_4 + d290_5;  #SV(290_6)  #Log(a290_6, mes , 290, GV(a290_6)+' = '+GV(a290_1)+' + '+GV(a290_2)+' - '+GV(a290_3)+' + '+GV(a290_4)+' + '+GV(a290_5));
  d300_6 := d300_1 + d300_2 - d300_3 + d300_4 + d300_5;  #SV(300_6)  #Log(a300_6, mes , 300, GV(a300_6)+' = '+GV(a300_1)+' + '+GV(a300_2)+' - '+GV(a300_3)+' + '+GV(a300_4)+' + '+GV(a300_5));
  d301_6 := d301_1 + d301_2 - d301_3 + d301_4 + d301_5;  #SV(301_6)  #Log(a301_6, mes , 301, GV(a301_6)+' = '+GV(a301_1)+' + '+GV(a301_2)+' - '+GV(a301_3)+' + '+GV(a301_4)+' + '+GV(a301_5));
  d310_6 := d310_1 + d310_2 - d310_3 + d310_4 + d310_5;  #SV(310_6)  #Log(a310_6, mes , 310, GV(a310_6)+' = '+GV(a310_1)+' + '+GV(a310_2)+' - '+GV(a310_3)+' + '+GV(a310_4)+' + '+GV(a310_5));
  d320_6 := d320_1 + d320_2 - d320_3 + d320_4 + d320_5;  #SV(320_6)  #Log(a320_6, mes , 320, GV(a320_6)+' = '+GV(a320_1)+' + '+GV(a320_2)+' - '+GV(a320_3)+' + '+GV(a320_4)+' + '+GV(a320_5));
  d321_6 := d321_1 + d321_2 - d321_3 + d321_4 + d321_5;  #SV(321_6)  #Log(a321_6, mes , 321, GV(a321_6)+' = '+GV(a321_1)+' + '+GV(a321_2)+' - '+GV(a321_3)+' + '+GV(a321_4)+' + '+GV(a321_5));
  d325_6 := d325_1 + d325_2 - d325_3 + d325_4 + d325_5;  #SV(325_6)  #Log(a325_6, mes , 325, GV(a325_6)+' = '+GV(a325_1)+' + '+GV(a325_2)+' - '+GV(a325_3)+' + '+GV(a325_4)+' + '+GV(a325_5));
  d326_6 := d326_1 + d326_2 - d326_3 + d326_4 + d326_5;  #SV(326_6)  #Log(a326_6, mes , 326, GV(a326_6)+' = '+GV(a326_1)+' + '+GV(a326_2)+' - '+GV(a326_3)+' + '+GV(a326_4)+' + '+GV(a326_5));
  d327_6 := d327_1 + d327_2 - d327_3 + d327_4 + d327_5;  #SV(327_6)  #Log(a327_6, mes , 327, GV(a327_6)+' = '+GV(a327_1)+' + '+GV(a327_2)+' - '+GV(a327_3)+' + '+GV(a327_4)+' + '+GV(a327_5));
  d328_6 := d328_1 + d328_2 - d328_3 + d328_4 + d328_5;  #SV(328_6)  #Log(a328_6, mes , 328, GV(a328_6)+' = '+GV(a328_1)+' + '+GV(a328_2)+' - '+GV(a328_3)+' + '+GV(a328_4)+' + '+GV(a328_5));
  d329_6 := d329_1 + d329_2 - d329_3 + d329_4 + d329_5;  #SV(329_6)  #Log(a329_6, mes , 329, GV(a329_6)+' = '+GV(a329_1)+' + '+GV(a329_2)+' - '+GV(a329_3)+' + '+GV(a329_4)+' + '+GV(a329_5));
  d330_6 := d330_1 + d330_2 - d330_3 + d330_4 + d330_5;  #SV(330_6)  #Log(a330_6, mes , 330, GV(a330_6)+' = '+GV(a330_1)+' + '+GV(a330_2)+' - '+GV(a330_3)+' + '+GV(a330_4)+' + '+GV(a330_5));
  d340_6 := d340_1 + d340_2 - d340_3 + d340_4 + d340_5;  #SV(340_6)  #Log(a340_6, mes , 340, GV(a340_6)+' = '+GV(a340_1)+' + '+GV(a340_2)+' - '+GV(a340_3)+' + '+GV(a340_4)+' + '+GV(a340_5));
  d350_6 := d350_1 + d350_2 - d350_3 + d350_4 + d350_5;  #SV(350_6)  #Log(a350_6, mes , 350, GV(a350_6)+' = '+GV(a350_1)+' + '+GV(a350_2)+' - '+GV(a350_3)+' + '+GV(a350_4)+' + '+GV(a350_5));
  d360_6 := d360_1 + d360_2 - d360_3 + d360_4 + d360_5;  #SV(360_6)  #Log(a360_6, mes , 360, GV(a360_6)+' = '+GV(a360_1)+' + '+GV(a360_2)+' - '+GV(a360_3)+' + '+GV(a360_4)+' + '+GV(a360_5));
  d370_6 := d370_1 + d370_2 - d370_3 + d370_4 + d370_5;  #SV(370_6)  #Log(a370_6, mes , 370, GV(a370_6)+' = '+GV(a370_1)+' + '+GV(a370_2)+' - '+GV(a370_3)+' + '+GV(a370_4)+' + '+GV(a370_5));
  d380_6 := d380_1 + d380_2 - d380_3 + d380_4 + d380_5;  #SV(380_6)  #Log(a380_6, mes , 380, GV(a380_6)+' = '+GV(a380_1)+' + '+GV(a380_2)+' - '+GV(a380_3)+' + '+GV(a380_4)+' + '+GV(a380_5));
  d390_6 := d390_1 + d390_2 - d390_3 + d390_4 + d390_5;  #SV(390_6)  #Log(a390_6, mes , 390, GV(a390_6)+' = '+GV(a390_1)+' + '+GV(a390_2)+' - '+GV(a390_3)+' + '+GV(a390_4)+' + '+GV(a390_5));
  d400_6 := d400_1 + d400_2 - d400_3 + d400_4 + d400_5;  #SV(400_6)  #Log(a400_6, mes , 400, GV(a400_6)+' = '+GV(a400_1)+' + '+GV(a400_2)+' - '+GV(a400_3)+' + '+GV(a400_4)+' + '+GV(a400_5));
  d410_6 := d410_1 + d410_2 - d410_3 + d410_4 + d410_5;  #SV(410_6)  #Log(a410_6, mes , 410, GV(a410_6)+' = '+GV(a410_1)+' + '+GV(a410_2)+' - '+GV(a410_3)+' + '+GV(a410_4)+' + '+GV(a410_5));
  d420_6 := d420_1 + d420_2 - d420_3 + d420_4 + d420_5;  #SV(420_6)  #Log(a420_6, mes , 420, GV(a420_6)+' = '+GV(a420_1)+' + '+GV(a420_2)+' - '+GV(a420_3)+' + '+GV(a420_4)+' + '+GV(a420_5));
  d435_6 := d435_1 + d435_2 - d435_3 + d435_4 + d435_5;  #SV(435_6)  #Log(a435_6, mes , 435, GV(a435_6)+' = '+GV(a435_1)+' + '+GV(a435_2)+' - '+GV(a435_3)+' + '+GV(a435_4)+' + '+GV(a435_5));
  d440_6 := d440_1 + d440_2 - d440_3 + d440_4 + d440_5;  #SV(440_6)  #Log(a440_6, mes , 440, GV(a440_6)+' = '+GV(a440_1)+' + '+GV(a440_2)+' - '+GV(a440_3)+' + '+GV(a440_4)+' + '+GV(a440_5));
  d441_6 := d441_1 + d441_2 - d441_3 + d441_4 + d441_5;  #SV(441_6)  #Log(a441_6, mes , 441, GV(a441_6)+' = '+GV(a441_1)+' + '+GV(a441_2)+' - '+GV(a441_3)+' + '+GV(a441_4)+' + '+GV(a441_5));
  d450_6 := d450_1 + d450_2 - d450_3 + d450_4 + d450_5;  #SV(450_6)  #Log(a450_6, mes , 450, GV(a450_6)+' = '+GV(a450_1)+' + '+GV(a450_2)+' - '+GV(a450_3)+' + '+GV(a450_4)+' + '+GV(a450_5));
  d460_6 := d460_1 + d460_2 - d460_3 + d460_4 + d460_5;  #SV(460_6)  #Log(a460_6, mes , 460, GV(a460_6)+' = '+GV(a460_1)+' + '+GV(a460_2)+' - '+GV(a460_3)+' + '+GV(a460_4)+' + '+GV(a460_5));
  d461_6 := d461_1 + d461_2 - d461_3 + d461_4 + d461_5;  #SV(461_6)  #Log(a461_6, mes , 461, GV(a461_6)+' = '+GV(a461_1)+' + '+GV(a461_2)+' - '+GV(a461_3)+' + '+GV(a461_4)+' + '+GV(a461_5));
  d500_6 := d500_1 + d500_2 - d500_3 + d500_4 + d500_5;  #SV(500_6)  #Log(a500_6, mes , 500, GV(a500_6)+' = '+GV(a500_1)+' + '+GV(a500_2)+' - '+GV(a500_3)+' + '+GV(a500_4)+' + '+GV(a500_5));
  d510_6 := d510_1 + d510_2 - d510_3 + d510_4 + d510_5;  #SV(510_6)  #Log(a510_6, mes , 510, GV(a510_6)+' = '+GV(a510_1)+' + '+GV(a510_2)+' - '+GV(a510_3)+' + '+GV(a510_4)+' + '+GV(a510_5));
  d520_6 := d520_1 + d520_2 - d520_3 + d520_4 + d520_5;  #SV(520_6)  #Log(a520_6, mes , 520, GV(a520_6)+' = '+GV(a520_1)+' + '+GV(a520_2)+' - '+GV(a520_3)+' + '+GV(a520_4)+' + '+GV(a520_5));
  d530_6 := d530_1 + d530_2 - d530_3          + d530_5;  #SV(530_6)  #Log(a530_6, mes_, 530, GV(a530_6)+' = '+GV(a530_1)+' + '+GV(a530_2)+' - '+GV(a530_3)                 +' + '+GV(a530_5));
  d540_6 := d540_1 + d540_2 - d540_3 + d540_4 + d540_5;  #SV(540_6)  #Log(a540_6, mes , 540, GV(a540_6)+' = '+GV(a540_1)+' + '+GV(a540_2)+' - '+GV(a540_3)+' + '+GV(a540_4)+' + '+GV(a540_5));
  d550_6 := d550_1 + d550_2 - d550_3 + d550_4 + d550_5;  #SV(550_6)  #Log(a550_6, mes , 550, GV(a550_6)+' = '+GV(a550_1)+' + '+GV(a550_2)+' - '+GV(a550_3)+' + '+GV(a550_4)+' + '+GV(a550_5));
  d560_6 := d560_1 + d560_2 - d560_3 + d560_4 + d560_5;  #SV(560_6)  #Log(a560_6, mes , 560, GV(a560_6)+' = '+GV(a560_1)+' + '+GV(a560_2)+' - '+GV(a560_3)+' + '+GV(a560_4)+' + '+GV(a560_5));
  d570_6 := d570_1 + d570_2 - d570_3 + d570_4 + d570_5;  #SV(570_6)  #Log(a570_6, mes , 570, GV(a570_6)+' = '+GV(a570_1)+' + '+GV(a570_2)+' - '+GV(a570_3)+' + '+GV(a570_4)+' + '+GV(a570_5));
  d580_6 := d580_1 + d580_2 - d580_3 + d580_4 + d580_5;  #SV(580_6)  #Log(a580_6, mes , 580, GV(a580_6)+' = '+GV(a580_1)+' + '+GV(a580_2)+' - '+GV(a580_3)+' + '+GV(a580_4)+' + '+GV(a580_5));
  d585_6 := d585_1 + d585_2 - d585_3 + d585_4 + d585_5;  #SV(585_6)  #Log(a585_6, mes , 585, GV(a585_6)+' = '+GV(a585_1)+' + '+GV(a585_2)+' - '+GV(a585_3)+' + '+GV(a585_4)+' + '+GV(a585_5));
  d590_6 := d590_1 + d590_2 - d590_3 + d590_4 + d590_5;  #SV(590_6)  #Log(a590_6, mes , 590, GV(a590_6)+' = '+GV(a590_1)+' + '+GV(a590_2)+' - '+GV(a590_3)+' + '+GV(a590_4)+' + '+GV(a590_5));
  d600_6 := d600_1 + d600_2 - d600_3 + d600_4 + d600_5;  #SV(600_6)  #Log(a600_6, mes , 600, GV(a600_6)+' = '+GV(a600_1)+' + '+GV(a600_2)+' - '+GV(a600_3)+' + '+GV(a600_4)+' + '+GV(a600_5));
  // #endregion Гр. 1 + гр. 2 - гр. 3 + гр. 4 + гр. 5 = гр. 6
@end.
//#endregion ДЕЙСТВИЯ ВЫПОЛНЯЕМЫЕ ПРИ РАСЧЕТЕ
//************************************************************************************************************


//============================================================================================================
//#region ДЕЙСТВИЯ ВЫПОЛНЯЕМЫЕ ПРИ ЭКСПОРТЕ В XML
//------------------------------------------------------------------------------------------------------------
@Script On_ExportXML : Boolean;
@begin
  if (not XMLMap.ExpToXml(_XmlFileName_)) {
    Message('On_ExportXML: '+ XMLMap.GetStLastError, cancelButton+Warning);
    Exit;
  }

  message('Выгружен в файл ' + _XmlFileName_);
@end.
//#endregion ДЕЙСТВИЯ ВЫПОЛНЯЕМЫЕ ПРИ ЭКСПОРТЕ В XML
//************************************************************************************************************
