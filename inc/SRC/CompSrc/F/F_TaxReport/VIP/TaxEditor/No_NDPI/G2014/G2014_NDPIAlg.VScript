//------------------------------------------------------------------------------------------------------------
//                                                                                    (c) корпорация Галактика
// Галактика 9.1 - модуль "Электронная отчетность"
// Алгоритмы расчета : "Декларация по НДПИ"
//------------------------------------------------------------------------------------------------------------


@Script GetStrVal(fld:string):string;
@begin
  Result := XMLMAP.GetAttrValueByName(fld);
@end.

@Script GetDblVal(fld:string):double;
@begin
  Result := Double(XMLMAP.GetAttrValueByName(fld));
@end.

@Script GetFldVis(fld:string):boolean;
@begin
  Result := XMLMAP.GetAttrVisByName(fld);
@end.

@Script SetFldVal(fld:string;val:string);
@begin
  XMLMAP.SetAttrValueByName(fld,val);
@end.

@Script SetFldVis(fld:string;vis:boolean);
@begin
  XMLMAP.SetAttrVisByName(fld,vis);
@end.


@Script DblToStr(fld:double;digits:longint):string;
@begin
  if (Pos('.',String(fld,20,digits)) > 0)
    Result := Rtrim(Rtrim(Trim(String(fld,20,digits)),'0'),'.');
  else
    Result := Trim(String(fld,20,digits));
@end.

@Script GetCountFld(fld:string):longint;
@begin
  Result := XMLMap.GetNodeCountByName(fld);
@end.

@Script GetIter(iter:longint):string;
@begin
  Result := '';

  if (iter > 0)
    Result := '[' + String(iter) + ']';
@end.

//***************************************************************************************************************************************************
@Script MessageErrorStop_ALG(mesMesAdrXML, mesStr, mesPole, mesMes: string; mesCountIter: integer = 0): boolean;
@begin
  MesError.InsertMesError(mesMesAdrXML, Comp(0), mesStr, mesPole, mesMes, mesCountIter);
  Result := True;
@end.

@Script On_Pick(fld:string):string;
@begin
//  message(fld);
@end.

@Script On_Visable : boolean;
  #declare IfVis(adrIfVis)
    SetFldVis(#adrIfVis, not GetStrNull(#adrIfVis));
  #end
  #declare SetVisF(adrIfVis)
    SetFldVis(#adrIfVis, False);
  #end
  #declare SetVisT(adrIfVis)
    SetFldVis(#adrIfVis, True);
  #end
@begin
  var tBool, tB :boolean;
  var sKodDPI,sKodOsn:string;
  var i,j,k,count,countOKTMO,countKodOsn:longint;
  var Sum, Sum1,Sum2,ObKolDPI,DolDPI,KolDPI,NalBaza,Stoim:double;
  SetFldVis('Файл/Документ/СвНП/Тлф', (GetStrVal('Файл/Документ/СвНП/Тлф') <> ''));
  SetFldVis('Файл/Документ/СвНП/НПЮЛ', (GetStrVal('Файл/Документ/СвНП/НПЮЛ/КПП') <> ''));
  SetFldVis('Файл/Документ/СвНП/НПЮЛ/КПП', (GetStrVal('Файл/Документ/СвНП/НПЮЛ/КПП') <> ''));
  SetFldVis('Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ', (GetStrVal('Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ/ФормРеорг') <> ''));
  SetFldVis('Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ/ИННЮЛ', (GetStrVal('Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ/ФормРеорг') <> ''));
  SetFldVis('Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ/КПП', (GetStrVal('Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ/ФормРеорг') <> ''));
  SetFldVis('Файл/Документ/Подписант/ФИО/Отчество', (GetStrVal('Файл/Документ/Подписант/ФИО/Отчество') <> ''));
  SetFldVis('Файл/Документ/Подписант/СвПред', (GetStrVal('Файл/Документ/Подписант/ПрПодп') = '2'));
  SetFldVis('Файл/Документ/Подписант/СвПред/НаимОрг', (GetStrVal('Файл/Документ/Подписант/СвПред/НаимОрг') <> ''));
! РАЗДЕЛ 1
  count := GetCountFld('Файл/Документ/НДПИ/СумНалПУ/СумПУ');
  for (i := 0; i < count; i++)
  {
    tBool := ((GetStrVal('Файл/Документ/НДПИ/СумНалПУ/СумПУ'+getIter(i)+'/КБК'  ) <> '')
          and (GetStrVal('Файл/Документ/НДПИ/СумНалПУ/СумПУ'+getIter(i)+'/ОКТМО') <> '')
          and (GetStrVal('Файл/Документ/НДПИ/СумНалПУ/СумПУ'+getIter(i)+'/НалПУ') <> ''));
    if i=0
      tBool := True;
    SetFldVis('Файл/Документ/НДПИ/СумНалПУ/СумПУ'+getIter(i), tBool);
  }
! РАЗДЕЛ 2
  count := GetCountFld('Файл/Документ/НДПИ/ИсчУплНал');
  for (i := 0; i < count; i++)
  {
    tBool := ((GetStrVal('Файл/Документ/НДПИ/ИсчУплНал'+getIter(i)+'/КодДПИ') <> '')
          and (GetStrVal('Файл/Документ/НДПИ/ИсчУплНал'+getIter(i)+'/КБК'   ) <> '')
          and (GetStrVal('Файл/Документ/НДПИ/ИсчУплНал'+getIter(i)+'/ОКЕИ'  ) <> ''));
    SetFldVis('Файл/Документ/НДПИ/ИсчУплНал'+getIter(i), tBool);
    SetFldVis('Файл/Документ/НДПИ/ИсчУплНал'+getIter(i)+'/НалБаза'     ,  GetStrVal('Файл/Документ/НДПИ/ИсчУплНал'+getIter(i)+'/НалБаза'     ) <> '' );
    SetFldVis('Файл/Документ/НДПИ/ИсчУплНал'+getIter(i)+'/СтоимЕдДПИ'  ,  GetStrVal('Файл/Документ/НДПИ/ИсчУплНал'+getIter(i)+'/СтоимЕдДПИ'  ) <> '' );
    SetFldVis('Файл/Документ/НДПИ/ИсчУплНал'+getIter(i)+'/ВырРеалДПИ'  ,  GetStrVal('Файл/Документ/НДПИ/ИсчУплНал'+getIter(i)+'/ВырРеалДПИ'  ) <> '' );
    SetFldVis('Файл/Документ/НДПИ/ИсчУплНал'+getIter(i)+'/НалВыч'      ,  GetStrVal('Файл/Документ/НДПИ/ИсчУплНал'+getIter(i)+'/НалВыч'      ) <> '' );
    SetFldVis('Файл/Документ/НДПИ/ИсчУплНал'+getIter(i)+'/КолРеалДПИ'  ,  GetStrVal('Файл/Документ/НДПИ/ИсчУплНал'+getIter(i)+'/КолРеалДПИ'  ) <> '' );
    SetFldVis('Файл/Документ/НДПИ/ИсчУплНал'+getIter(i)+'/ДоляДрМетДПИ',  GetStrVal('Файл/Документ/НДПИ/ИсчУплНал'+getIter(i)+'/ДоляДрМетДПИ') <> '' );
  }
  for (i := 0; i < count; i++)
  {
    sKodDPI := GetStrVal('Файл/Документ/НДПИ/ИсчУплНал'+getIter(i)+'/КодДПИ');
    Stoim   := GetDblVal('Файл/Документ/НДПИ/ИсчУплНал'+getIter(i)+'/СтоимЕдДПИ');
    countOKTMO := GetCountFld('Файл/Документ/НДПИ/ИсчУплНал'+getIter(i)+'/ДанДПИ/ДанДПИУч');
    for (j := 0; j < countOKTMO; j++)
    {
      countKodOsn := GetCountFld('Файл/Документ/НДПИ/ИсчУплНал'+getIter(i)+'/ДанДПИ/ДанДПИУч'+getIter(j)+'/КолДПИОсн');
      SetFldVis('Файл/Документ/НДПИ/ИсчУплНал'+getIter(i)+'/ДанДПИ/ДанДПИУч'+getIter(j),
                (GetStrVal('Файл/Документ/НДПИ/ИсчУплНал'+getIter(i)+'/ДанДПИ/ДанДПИУч'+getIter(j)+'/ОКТМО'     ) <> '') or
                (GetStrVal('Файл/Документ/НДПИ/ИсчУплНал'+getIter(i)+'/ДанДПИ/ДанДПИУч'+getIter(j)+'/СерЛицНедр') <> '') or
                (GetStrVal('Файл/Документ/НДПИ/ИсчУплНал'+getIter(i)+'/ДанДПИ/ДанДПИУч'+getIter(j)+'/НомЛицНедр') <> '') or
                (GetStrVal('Файл/Документ/НДПИ/ИсчУплНал'+getIter(i)+'/ДанДПИ/ДанДПИУч'+getIter(j)+'/ВидЛицНедр') <> ''));

      for (k := 0; k < countKodOsn; k++)
      {
        SetFldVis('Файл/Документ/НДПИ/ИсчУплНал'+getIter(i)+'/ДанДПИ/ДанДПИУч'+getIter(j)+'/КолДПИОсн'+getIter(k),
               (GetStrVal('Файл/Документ/НДПИ/ИсчУплНал'+getIter(i)+'/ДанДПИ/ДанДПИУч'+getIter(j)+'/КолДПИОсн'+getIter(k)+'/КодОснов' ) <> '') or
               (GetStrVal('Файл/Документ/НДПИ/ИсчУплНал'+getIter(i)+'/ДанДПИ/ДанДПИУч'+getIter(j)+'/КолДПИОсн'+getIter(k)+'/КолДПИ') <> ''));
      }
      for (k :=0; k <GetCountFld('Файл/Документ/НДПИ/ИсчУплНал'+getIter(i)+'/ДанДПИ/ДанДПИУч'+getIter(j)+'/Коэф');k++)
        SetFldVis('Файл/Документ/НДПИ/ИсчУплНал'+getIter(i)+'/ДанДПИ/ДанДПИУч'+getIter(j)+'/Коэф'+getIter(k),
                GetStrVal('Файл/Документ/НДПИ/ИсчУплНал'+getIter(i)+'/ДанДПИ/ДанДПИУч'+getIter(j)+'/Коэф'+getIter(k)+'/txt') <> '');
    }
  }
! РАЗДЕЛ 3
  SetFldVis('Файл/Документ/НДПИ/СтоимЕдДПИ/СумРасхДПИОбщ/ПрРасхДобПер'  ,GetStrVal('Файл/Документ/НДПИ/СтоимЕдДПИ/СумРасхДПИОбщ/ПрРасхДобПер'   ) <> '' );
  SetFldVis('Файл/Документ/НДПИ/СтоимЕдДПИ/СумРасхДПИОбщ/ОстНПНачПер'   ,GetStrVal('Файл/Документ/НДПИ/СтоимЕдДПИ/СумРасхДПИОбщ/ОстНПНачПер'    ) <> '' );
  SetFldVis('Файл/Документ/НДПИ/СтоимЕдДПИ/СумРасхДПИОбщ/ОстНПКонПер'   ,GetStrVal('Файл/Документ/НДПИ/СтоимЕдДПИ/СумРасхДПИОбщ/ОстНПКонПер'    ) <> '' );
  SetFldVis('Файл/Документ/НДПИ/СтоимЕдДПИ/СумРасхДПИОбщ/ПрРасхДПИПер'  ,GetStrVal('Файл/Документ/НДПИ/СтоимЕдДПИ/СумРасхДПИОбщ/ПрРасхДПИПер'   ) <> '' );
  SetFldVis('Файл/Документ/НДПИ/СтоимЕдДПИ/СумРасхДПИОбщ/ВнереалРасхДПИ',GetStrVal('Файл/Документ/НДПИ/СтоимЕдДПИ/СумРасхДПИОбщ/ВнереалРасхДПИ' ) <> '' );
  SetFldVis('Файл/Документ/НДПИ/СтоимЕдДПИ/СумРасхДПИОбщ/КосвРасхДр'    ,GetStrVal('Файл/Документ/НДПИ/СтоимЕдДПИ/СумРасхДПИОбщ/КосвРасхДр'     ) <> '' );
  SetFldVis('Файл/Документ/НДПИ/СтоимЕдДПИ/СумРасхДПИОбщ/КосвРасхДПИ'   ,GetStrVal('Файл/Документ/НДПИ/СтоимЕдДПИ/СумРасхДПИОбщ/КосвРасхДПИ'    ) <> '' );
  SetFldVis('Файл/Документ/НДПИ/СтоимЕдДПИ/СумРасхДПИОбщ/ПрРасхПерОбщ'  ,GetStrVal('Файл/Документ/НДПИ/СтоимЕдДПИ/СумРасхДПИОбщ/ПрРасхПерОбщ'   ) <> '' );
  SetFldVis('Файл/Документ/НДПИ/СтоимЕдДПИ/СумРасхДПИОбщ/КосвИнРасхПер' ,GetStrVal('Файл/Документ/НДПИ/СтоимЕдДПИ/СумРасхДПИОбщ/КосвИнРасхПер'  ) <> '' );

  SetFldVis('Файл/Документ/НДПИ/СтоимЕдДПИ/СумРасхДПИОбщ',
           (GetStrVal('Файл/Документ/НДПИ/СтоимЕдДПИ/СумРасхДПИОбщ/РасхОбщДобПер' ) <> '') and
           (GetDblVal('Файл/Документ/НДПИ/СтоимЕдДПИ/СумРасхДПИОбщ/РасхОбщДобПер') <> 0));

  SetFldVis('Файл/Документ/НДПИ/СтоимЕдДПИ/СумРасхДПИОтд ',
           (GetStrVal('Файл/Документ/НДПИ/СтоимЕдДПИ/СумРасхДПИОтд/ОКЕИ' ) <> '') );
  if GetFldVis('Файл/Документ/НДПИ/СтоимЕдДПИ/СумРасхДПИОтд ')
  {
    count:= GetCountFld('Файл/Документ/НДПИ/СтоимЕдДПИ/СумРасхДПИОтд/СумРасхДПИВид');
    for (i := 0; i < count; i++)
    {
      SetFldVis('Файл/Документ/НДПИ/СтоимЕдДПИ/СумРасхДПИОтд/СумРасхДПИВид'+getIter(i),
               (GetStrVal('Файл/Документ/НДПИ/СтоимЕдДПИ/СумРасхДПИОтд/СумРасхДПИВид'+getIter(i)+'/КодДПИ' ) <> '') or
               (GetStrVal('Файл/Документ/НДПИ/СтоимЕдДПИ/СумРасхДПИОтд/СумРасхДПИВид'+getIter(i)+'/КоличДПИ') <> ''));
    }
  }
  SetFldVis('Файл/Документ/НДПИ/СтоимЕдДПИ',
           (GetFldVis('Файл/Документ/НДПИ/СтоимЕдДПИ/СумРасхДПИОбщ' )) or
           (GetFldVis('Файл/Документ/НДПИ/СтоимЕдДПИ/СумРасхДПИОтд')));
!   РАЗДЕЛ 4
  count := GetCountFld('Файл/Документ/НДПИ/ИсчУплНалУг');
  for (i := 0; i < count; i++)
  {
    tBool := ((GetStrVal('Файл/Документ/НДПИ/ИсчУплНалУг'+getIter(i)+'/КБК')        <> '')
          and (GetStrVal('Файл/Документ/НДПИ/ИсчУплНалУг'+getIter(i)+'/СерЛицНедр') <> '')
          and (GetStrVal('Файл/Документ/НДПИ/ИсчУплНалУг'+getIter(i)+'/НомЛицНедр') <> '')
          and (GetStrVal('Файл/Документ/НДПИ/ИсчУплНалУг'+getIter(i)+'/ВидЛицНедр') <> '')
          and (GetStrVal('Файл/Документ/НДПИ/ИсчУплНалУг'+getIter(i)+'/ОКЕИ')       <> ''));
    SetFldVis('Файл/Документ/НДПИ/ИсчУплНалУг'+getIter(i), tBool);
    SetFldVis('Файл/Документ/НДПИ/ИсчУплНалУг'+getIter(i)+'/ДанДПИУг', tBool);
    SetFldVis('Файл/Документ/НДПИ/ИсчУплНалУг'+getIter(i)+'/РасчНалУпл', tBool);
    countOKTMO := GetCountFld('Файл/Документ/НДПИ/ИсчУплНалУг'+getIter(i)+'/ДанДПИУг/ДанДПИУгУч');
    for (j := 0; j < countOKTMO; j++)
    {
      tBool := ((GetStrVal('Файл/Документ/НДПИ/ИсчУплНалУг'+getIter(i)+'/ДанДПИУг/ДанДПИУгУч'+getIter(j)+'/ОКТМО')  <> '')
            and (GetStrVal('Файл/Документ/НДПИ/ИсчУплНалУг'+getIter(i)+'/ДанДПИУг/ДанДПИУгУч'+getIter(j)+'/КодДПИ') <> ''));
      if j=0
        tBool := True;
      SetFldVis('Файл/Документ/НДПИ/ИсчУплНалУг'+getIter(i)+'/ДанДПИУг/ДанДПИУгУч'+getIter(j), tBool);
      tBool := ((GetStrVal('Файл/Документ/НДПИ/ИсчУплНалУг'+getIter(i)+'/ДанДПИУг/ДанДПИУгУч'+getIter(j)+'/КолДПИ_0/КодОснов') <> '')
             or (GetStrVal('Файл/Документ/НДПИ/ИсчУплНалУг'+getIter(i)+'/ДанДПИУг/ДанДПИУгУч'+getIter(j)+'/КолДПИ_0/КолДПИ')   <> ''));
      SetFldVis('Файл/Документ/НДПИ/ИсчУплНалУг'+getIter(i)+'/ДанДПИУг/ДанДПИУгУч'+getIter(j)+'/КолДПИ_0', tBool);
      tBool := ((GetStrVal('Файл/Документ/НДПИ/ИсчУплНалУг'+getIter(i)+'/ДанДПИУг/ДанДПИУгУч'+getIter(j)+'/КолДПИОбщ/КодОснов') <> '')
             or (GetStrVal('Файл/Документ/НДПИ/ИсчУплНалУг'+getIter(i)+'/ДанДПИУг/ДанДПИУгУч'+getIter(j)+'/КолДПИОбщ/КолДПИ')   <> ''));
      SetFldVis('Файл/Документ/НДПИ/ИсчУплНалУг'+getIter(i)+'/ДанДПИУг/ДанДПИУгУч'+getIter(j)+'/КолДПИОбщ', tBool);
    }
    countOKTMO := GetCountFld('Файл/Документ/НДПИ/ИсчУплНалУг'+getIter(i)+'/РасчНалУпл');
    for (j := 0; j < countOKTMO; j++)
    {
      tBool := GetStrVal('Файл/Документ/НДПИ/ИсчУплНалУг'+getIter(i)+'/РасчНалУпл'+getIter(j)+'/ОстНачПер')<>'';
      SetFldVis('Файл/Документ/НДПИ/ИсчУплНалУг'+getIter(i)+'/РасчНалУпл'+getIter(j)+'/ОстНачПер', tBool);
      tBool := ((GetStrVal('Файл/Документ/НДПИ/ИсчУплНалУг'+getIter(i)+'/РасчНалУпл'+getIter(j)+'/РасхОТВыч')<>'')
             and (GetDblVal('Файл/Документ/НДПИ/ИсчУплНалУг'+getIter(i)+'/РасчНалУпл'+getIter(j)+'/РасхОТВыч')<>0) );
      SetFldVis('Файл/Документ/НДПИ/ИсчУплНалУг'+getIter(i)+'/РасчНалУпл'+getIter(j)+'/РасхОТВыч', tBool);
      tBool := GetStrVal('Файл/Документ/НДПИ/ИсчУплНалУг'+getIter(i)+'/РасчНалУпл'+getIter(j)+'/КоэфКт')<>'';
      SetFldVis('Файл/Документ/НДПИ/ИсчУплНалУг'+getIter(i)+'/РасчНалУпл'+getIter(j)+'/КоэфКт', tBool);
      tBool := ((GetStrVal('Файл/Документ/НДПИ/ИсчУплНалУг'+getIter(i)+'/РасчНалУпл'+getIter(j)+'/НалВычПред')<>'')
             and (GetDblVal('Файл/Документ/НДПИ/ИсчУплНалУг'+getIter(i)+'/РасчНалУпл'+getIter(j)+'/НалВычПред')<>0));
      SetFldVis('Файл/Документ/НДПИ/ИсчУплНалУг'+getIter(i)+'/РасчНалУпл'+getIter(j)+'/НалВычПред', tBool);
      tBool := ((GetStrVal('Файл/Документ/НДПИ/ИсчУплНалУг'+getIter(i)+'/РасчНалУпл'+getIter(j)+'/ИсчислПерУпл')<>'')
             and (GetDblVal('Файл/Документ/НДПИ/ИсчУплНалУг'+getIter(i)+'/РасчНалУпл'+getIter(j)+'/ИсчислПерУпл')<>0));
      SetFldVis('Файл/Документ/НДПИ/ИсчУплНалУг'+getIter(i)+'/РасчНалУпл'+getIter(j)+'/ИсчислПерУпл', tBool);
      tBool := ((GetStrVal('Файл/Документ/НДПИ/ИсчУплНалУг'+getIter(i)+'/РасчНалУпл'+getIter(j)+'/ОстКонПер')<>'')
             and (GetDblVal('Файл/Документ/НДПИ/ИсчУплНалУг'+getIter(i)+'/РасчНалУпл'+getIter(j)+'/ОстКонПер')<>0));
      SetFldVis('Файл/Документ/НДПИ/ИсчУплНалУг'+getIter(i)+'/РасчНалУпл'+getIter(j)+'/ОстКонПер', tBool);
      tBool := ((GetStrVal('Файл/Документ/НДПИ/ИсчУплНалУг'+getIter(i)+'/РасчНалУпл'+getIter(j)+'/РасхОТПер/МатРасх')<>'')
             or (GetStrVal('Файл/Документ/НДПИ/ИсчУплНалУг'+getIter(i)+'/РасчНалУпл'+getIter(j)+'/РасхОТПер/РасхАмИмущ')<>'')
             or (GetStrVal('Файл/Документ/НДПИ/ИсчУплНалУг'+getIter(i)+'/РасчНалУпл'+getIter(j)+'/РасхОТПер/РасхРекон')<>''));
      SetFldVis('Файл/Документ/НДПИ/ИсчУплНалУг'+getIter(i)+'/РасчНалУпл'+getIter(j)+'/РасхОТПер', tBool);
    }
    countOKTMO := GetCountFld('Файл/Документ/НДПИ/ИсчУплНалУг'+getIter(i)+'/РасчНалВыч/РасчНалВычУч');
    tB := False;
    for (j := 0; j < countOKTMO; j++)
    {
      tBool := ((GetStrVal('Файл/Документ/НДПИ/ИсчУплНалУг'+getIter(i)+'/РасчНалВыч/РасчНалВычУч'+getIter(j)+'/НачПравНалВыч')<>'')
             or (GetStrVal('Файл/Документ/НДПИ/ИсчУплНалУг'+getIter(i)+'/РасчНалВыч/РасчНалВычУч'+getIter(j)+'/КонПравНалВыч')<>''));
      SetFldVis('Файл/Документ/НДПИ/ИсчУплНалУг'+getIter(i)+'/РасчНалВыч/РасчНалВычУч'+getIter(j), tBool);
      if tBool
      {
        tB := True;
        SetFldVis('Файл/Документ/НДПИ/ИсчУплНалУг'+getIter(i)+'/РасчНалВыч/РасчНалВычУч'+getIter(j)+'/НалВычПред',
            GetStrVal('Файл/Документ/НДПИ/ИсчУплНалУг'+getIter(i)+'/РасчНалВыч/РасчНалВычУч'+getIter(j)+'/НалВычПред')<>'');
        SetFldVis('Файл/Документ/НДПИ/ИсчУплНалУг'+getIter(i)+'/РасчНалВыч/РасчНалВычУч'+getIter(j)+'/НалВычТек',
            GetStrVal('Файл/Документ/НДПИ/ИсчУплНалУг'+getIter(i)+'/РасчНалВыч/РасчНалВычУч'+getIter(j)+'/НалВычТек')<>'' );
        SetFldVis('Файл/Документ/НДПИ/ИсчУплНалУг'+getIter(i)+'/РасчНалВыч/РасчНалВычУч'+getIter(j)+'/ОстНалВычКон',
            GetStrVal('Файл/Документ/НДПИ/ИсчУплНалУг'+getIter(i)+'/РасчНалВыч/РасчНалВычУч'+getIter(j)+'/ОстНалВычКон')<>'');
      }
    }
    SetFldVis('Файл/Документ/НДПИ/ИсчУплНалУг'+getIter(i)+'/РасчНалВыч', tB);
  }
@end.

@Script On_Check : boolean;
  #include AllTaxObj.Vih

  function IsValidSerL(strIn: string; var strGetMes: string) : boolean;
  begin
    strGetMes := 'Формат поля: 3 символа';
    Result := False;
    Result :=    Length(strIn) =  3;

  end;
    function IsValidNomL(strIn: string; var strGetMes: string) : boolean;
  begin
    strGetMes := 'Формат поля: 5 символа';
    Result := False;
    Result :=    Length(strIn) = 5;

  end;
    function IsValidVidL(strIn: string; var strGetMes: string) : boolean;
  begin
    strGetMes := 'Формат поля: 2 символа';
    Result := False;
    Result :=    Length(strIn) = 2;

  end;

  function IsValidMGod(strIn: string; var strGetMes: string) : boolean;
  begin
    //Налоговая база
    //НалБаза
    strGetMes := 'Формат поля: ММ.ГГГГ';
    Result := False;
    Result := CheckError.isRegExpr('^[0]{1}[1-9]{1}[.][1-2]{1}[0-9]{3}$', strIn)
             or  CheckError.isRegExpr('^[1]{1}[0-2]{1}[.][1-2]{1}[0-9]{3}$', strIn) ;
  end;

  #declare _InsMes(_AdrXML, _Pole, _StrMes, _CutIterMode=0)
    MessageErrorStop_ALG
    (
      #_AdrXML,
      NameStr,
      #_Pole,
      #_StrMes,
      #_CutIterMode
    );
  #end

  #declare _MesNoKor(_AdrXML, _Pole, _CutIterMode=0)
    MessageErrorStop_ALG
    (
      #_AdrXML,
      NameStr,
      #_Pole,
      'Поле не соответствует регулярному выражению. ' + getMes,
      #_CutIterMode
    );
  #end

@begin
  var getMes: string;
  getMes := '';
  var  aKodNO   , aNomKorr   , aPoMestu , aKND , aDataDok , aPeriod , aOtchetGod , aPrPodp , aFamilija , aImja  , aOtchestvo ,
       aNaimDok , aNaimOrg_2 , aOKVJED  , aTlf , aNaimOrg , aINNJUL , aFormReorg , aKPP    , aINNJUL_2 , aKPP_2 ,
       sKodNO   , sNomKorr   , sPoMestu , sKND , sDataDok , sPeriod , sOtchetGod , sPrPodp , sFamilija , sImja  , sOtchestvo ,
       sNaimDok  , sNaimOrg_2 , sOKVJED  , sTlf , sNaimOrg , sINNJUL , sFormReorg , sKPP    , sINNJUL_2 , sKPP_2 :string;

  var NameStr: string;
  var tB : Boolean
  NameStr := '01 Титульный лист';

  if not IsValidDate(GetStrVal('Файл/Документ/ДатаДок'), getMes)
    MessageErrorStop_ALG('Файл/Документ/ДатаДок', NameStr, '"Дата"', 'Заполните поле или произведите перерасчет для установки текущей даты');
  if not IsValidOKVED(GetStrVal('Файл/Документ/СвНП/ОКВЭД'), getMes) #_MesNoKor('Файл/Документ/СвНП/ОКВЭД', '"ОКВЭД"');

  aKodNO     := 'Файл/Документ/КодНО'                        ;   sKodNO     := GetStrVal(aKodNO    );
  aNomKorr   := 'Файл/Документ/НомКорр'                      ;   sNomKorr   := GetStrVal(aNomKorr  );
  aPoMestu   := 'Файл/Документ/ПоМесту'                      ;   sPoMestu   := GetStrVal(aPoMestu  );
  aKND       := 'Файл/Документ/КНД'                          ;   sKND       := GetStrVal(aKND      );
  aDataDok   := 'Файл/Документ/ДатаДок'                      ;   sDataDok   := GetStrVal(aDataDok  );
  aPeriod    := 'Файл/Документ/Период'                       ;   sPeriod    := GetStrVal(aPeriod   );
  aOtchetGod := 'Файл/Документ/ОтчетГод'                     ;   sOtchetGod := GetStrVal(aOtchetGod);
  aPrPodp    := 'Файл/Документ/Подписант/ПрПодп'             ;   sPrPodp    := GetStrVal(aPrPodp   );
  aFamilija  := 'Файл/Документ/Подписант/ФИО/Фамилия'        ;   sFamilija  := GetStrVal(aFamilija );
  aImja      := 'Файл/Документ/Подписант/ФИО/Имя'            ;   sImja      := GetStrVal(aImja     );
  aOtchestvo := 'Файл/Документ/Подписант/ФИО/Отчество'       ;   sOtchestvo := GetStrVal(aOtchestvo);
  aNaimDok   := 'Файл/Документ/Подписант/СвПред/НаимДок'     ;   sNaimDok   := GetStrVal(aNaimDok  );
  aNaimOrg_2 := 'Файл/Документ/Подписант/СвПред/НаимОрг'     ;   sNaimOrg_2 := GetStrVal(aNaimOrg_2);
  aOKVJED    := 'Файл/Документ/СвНП/ОКВЭД'                   ;   sOKVJED    := GetStrVal(aOKVJED   );
  aTlf       := 'Файл/Документ/СвНП/Тлф'                     ;   sTlf       := GetStrVal(aTlf      );
  aNaimOrg   := 'Файл/Документ/СвНП/НПЮЛ/НаимОрг'            ;   sNaimOrg   := GetStrVal(aNaimOrg  );
  aINNJUL    := 'Файл/Документ/СвНП/НПЮЛ/ИННЮЛ'              ;   sINNJUL    := GetStrVal(aINNJUL   );
  aKPP       := 'Файл/Документ/СвНП/НПЮЛ/КПП'                ;   sKPP       := GetStrVal(aKPP      );
  aFormReorg := 'Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ/ФормРеорг';   sFormReorg := GetStrVal(aFormReorg);
  aINNJUL_2  := 'Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ/ИННЮЛ'    ;   sINNJUL_2  := GetStrVal(aINNJUL_2 );
  aKPP_2     := 'Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ/КПП'      ;   sKPP_2     := GetStrVal(aKPP_2    );

  if (sFormReorg <> '')
  {
    if not IsValidFormReorg(sFormReorg, getMes) #_InsMes(aFormReorg, '"Форма реорганизации"', getMes);
    else
    {
      if sFormReorg <> '0'
      {
        if not CheckError.Prov_INN(sINNJUL_2, getMes) #_InsMes(aINNJUL_2, '"ИНН реорганизованной организации"', getMes);
        if not IsValidKPP(sKPP_2, getMes) #_InsMes(aKPP_2, '"КПП реорганизованной организации"', getMes);
      }
      else
      {
        getMes := 'Строка не должна быть заполнена при текущем значении поля "Форма реорганизации"';
        if (Length(sINNJUL_2) > 0) #_InsMes(aINNJUL_2, '"ИНН реорг. орг."', getMes);
        if (Length(sKPP_2   ) > 0) #_InsMes(aINNJUL_2, '"ИНН реорг. орг."', getMes);
      }
    }
  }
  else
  {
    getMes := 'Строка не должна быть заполнена при текущем значении поля "Форма реорганизации"';
    if (Length(sINNJUL_2) > 0) #_InsMes(aINNJUL_2, '"ИНН реорг. орг."', getMes);
    if (Length(sKPP_2)    > 0) #_InsMes(aKPP_2   , '"КПП реорг. орг."', getMes);
  }

  if not IsValidSONO(sKodNO, getMes) #_MesNoKor(aKodNO, 'Код налогового органа');
  if not CheckError.Prov_INN(sINNJUL, getMes) #_InsMes(aINNJUL, '"ИНН"', getMes);
  if not IsValidKPP(sKPP, getMes) #_MesNoKor(aKPP, '"КПП"');
  if (sNaimOrg = '') MessageErrorStop_ALG(aNaimOrg, NameStr, '"Налогоплательщик"', 'Поле обязательно для заполнения');
  else if not IsValidNaimOrg(sNaimOrg, getMes) #_MesNoKor(aNaimOrg, '"Налогоплательщик"');
  if (sTlf <> '')
    if not IsValidTlf(sTlf, getMes) #_MesNoKor(aTlf, '"Номер контактного телефона"');
  if (sNaimDok <> '')
    if not IsValidNaimDok(sNaimDok, getMes) #_MesNoKor(aNaimDok, '"Форма реорганизации"');

  if not IsValidFIO(sFamilija, getMes) #_MesNoKor(aFamilija, '"Фамилия"');
  if not IsValidFIO(sImja    , getMes) #_MesNoKor(aImja    , '"Имя"'    );
  if sOtchestvo <> ''
    if not IsValidFIO(sOtchestvo, getMes) #_MesNoKor(aOtchestvo, '"Отчество"');

  if not IsValidPrPodp(sPrPodp, getMes) #_InsMes(aPrPodp, '"Признак подписанта"', getMes)
  else
  {
    if (sPrPodp = '2')
    {
      if not IsValidNaimDok(sNaimDok, getMes) #_InsMes(aNaimDok, '"Наим. док., подтв. полномочия предст."', 'Поле обязательно для заполнения при значении поля "Признак подписанта" равного 2. ' + getMes);
        if sNaimOrg_2 <> ''
          if not IsValidNaimOrg(sNaimOrg_2, getMes) #_InsMes(aNaimOrg_2, '"Наименование организации"', getMes);
    }
    else
    {
      getMes := 'Поле заполняется только при значении поля "Признак подписанта" равного 2';
      if (Length(sNaimDok  ) > 0) MessageErrorStop_ALG(aNaimDok  , NameStr, '"Наименование документа"'  , getMes);
      if (Length(sNaimOrg_2) > 0) MessageErrorStop_ALG(aNaimOrg_2, NameStr, '"Наименование организации"', getMes);
    }
  }
  //***********************************************************************************************
  //***********************************************************************************************


  var i,j,k,count,countOKTMO,countKodOsn :longint;
  var sKBK, sOKTMO, aNalPU, aKBK, aOKTMO , sNalPU,
      aKodDPI, aOKEI, aNalIsch, aSepLicN, aNomLicN, aVidLicN, aKodOsnov, aKolDPI, aKoef, aNalBaza,
      sKodDPI, sOKEI, sNalIsch, sSepLicN, sNomLicN, sVidLicN, sKodOsnov, sKolDPI, sKoef, sNalBaza :string;

  for (i := 0; i <  GetCountFld('Файл/Документ/НДПИ/СумНалПУ/СумПУ'); i++)
  {
    if GetFldVis('Файл/Документ/НДПИ/СумНалПУ/СумПУ' + getIter(i))
    {
      NameStr := '02.'+string(i+1)+' Раздел 1';
      aKBK   :=  'Файл/Документ/НДПИ/СумНалПУ/СумПУ' + getIter(i) +'/КБК'  ; sKBK   := GetStrVal(aKBK   )  ;
      aOKTMO :=  'Файл/Документ/НДПИ/СумНалПУ/СумПУ' + getIter(i) +'/ОКТМО'; sOKTMO := GetStrVal(aOKTMO )  ;
      aNalPU :=  'Файл/Документ/НДПИ/СумНалПУ/СумПУ' + getIter(i) +'/НалПУ'; sNalPU := GetStrVal(aNalPU )  ;
      if not IsValidKBK(sKBK, getMes) #_MesNoKor(aKBK, 'Стр. 010');
      if not IsValidOKTMO(sOKTMO, getMes) #_MesNoKor(aOKTMO, 'Стр. 020');
      if (sNalPU ='' )
        #_InsMes(aNalPU, 'Стр. 030', 'Строка обязательна к заполнению. Заполните ее и произведите перерасчет');
    }
  }
  var tBool: boolean;
  tB:=False
  for (i := 0; i <  GetCountFld('Файл/Документ/НДПИ/ИсчУплНал'); i++)
    if GetFldVis('Файл/Документ/НДПИ/ИсчУплНал'+ getIter(i))
      tB:=True;
  for (i:=0 ; i<GetCountFld('Файл/Документ/НДПИ/ИсчУплНалУг'); i++)
    if GetFldVis('Файл/Документ/НДПИ/ИсчУплНалУг'+ getIter(i))
      tB:=True;
  if tB
  {
    for (i := 0; i <  GetCountFld('Файл/Документ/НДПИ/ИсчУплНал'); i++)
    {
      if GetFldVis('Файл/Документ/НДПИ/ИсчУплНал'+ getIter(i))
      {
        NameStr := '03.'+string(i+1)+' Раздел 2';
        aKodDPI  :=  'Файл/Документ/НДПИ/ИсчУплНал'+ getIter(i) +'/КодДПИ'                             ;  sKodDPI  := GetStrVal(aKodDPI  );
        aKBK     :=  'Файл/Документ/НДПИ/ИсчУплНал'+ getIter(i) +'/КБК'                                ;  sKBK     := GetStrVal(aKBK     );
        aOKEI    :=  'Файл/Документ/НДПИ/ИсчУплНал'+ getIter(i) +'/ОКЕИ'                               ;  sOKEI    := GetStrVal(aOKEI    );
        aNalIsch :=  'Файл/Документ/НДПИ/ИсчУплНал'+ getIter(i) +'/НалИсчисл'                          ;  sNalIsch := GetStrVal(aNalIsch );
        aNalBaza :=  'Файл/Документ/НДПИ/ИсчУплНал'+ getIter(i) +'/НалБаза'                            ;  sNalBaza := GetStrVal(aNalBaza );
        if not IsValidKBK(sKBK, getMes) #_MesNoKor(aKBK, 'Стр. 020');
        if (sOKEI ='' )
          #_InsMes(aOKEI, 'Стр. 030', 'Строка обязательна к заполнению. Заполните ее и произведите перерасчет');
        if (sKodDPI ='' )
          #_InsMes(aKodDPI, 'Стр. 010', 'Строка обязательна к заполнению. Заполните ее и произведите перерасчет');
        if (sNalIsch ='' )
          #_InsMes(aNalIsch, 'Стр. 090', 'Строка обязательна к заполнению. Заполните ее и произведите перерасчет');
        if (sKodDPI <> '03100' and sKodDPI <> '03300')
          if (sNalBaza = '' )
            #_InsMes(aNalBaza, 'Стр. 080', 'Строка обязательна к заполнению. Заполните ее и произведите перерасчет');
        for (k := 0; k <  GetCountFld('Файл/Документ/НДПИ/ИсчУплНал'+ getIter(i) +'/ДанДПИ/ДанДПИУч'); k++)
        {
          if GetFldVis('Файл/Документ/НДПИ/ИсчУплНал'+ getIter(i) +'/ДанДПИ/ДанДПИУч'+ getIter(k))
          {
            tBool := True;
            aOKTMO   :=  'Файл/Документ/НДПИ/ИсчУплНал'+ getIter(i) +'/ДанДПИ/ДанДПИУч'+ getIter(k) +'/ОКТМО'              ;  sOKTMO   := GetStrVal(aOKTMO   );
            aSepLicN :=  'Файл/Документ/НДПИ/ИсчУплНал'+ getIter(i) +'/ДанДПИ/ДанДПИУч'+ getIter(k) +'/СерЛицНедр'         ;  sSepLicN := GetStrVal(aSepLicN );
            aNomLicN :=  'Файл/Документ/НДПИ/ИсчУплНал'+ getIter(i) +'/ДанДПИ/ДанДПИУч'+ getIter(k) +'/НомЛицНедр'         ;  sNomLicN := GetStrVal(aNomLicN );
            aVidLicN :=  'Файл/Документ/НДПИ/ИсчУплНал'+ getIter(i) +'/ДанДПИ/ДанДПИУч'+ getIter(k) +'/ВидЛицНедр'         ;  sVidLicN := GetStrVal(aVidLicN );

            // режим вырезки итераторов из адреса показателя
            var iCutIterMode : integer;  iCutIterMode := -1; // оставить все итераторы
            if (i > 0)                   iCutIterMode :=  1; // вырезать 1-н первый итератор

            if not IsValidOKTMO(sOKTMO, getMes) #_MesNoKor(aOKTMO, 'гр.1', iCutIterMode);
            if (sSepLicN ='' )
              #_InsMes(aSepLicN, 'гр.2', 'Строка обязательна к заполнению. Заполните ее и произведите перерасчет', iCutIterMode)
            else
              if not IsValidSerL(sSepLicN, getMes) #_MesNoKor(aSepLicN, 'гр.2', iCutIterMode);
            if (sNomLicN ='' )
              #_InsMes(aNomLicN, 'гр.2', 'Строка обязательна к заполнению. Заполните ее и произведите перерасчет', iCutIterMode)
            else
              if not IsValidNomL(sNomLicN, getMes) #_MesNoKor(aNomLicN, 'гр.2', iCutIterMode);
            if (sVidLicN ='' )
              #_InsMes(aVidLicN, 'гр.2', 'Строка обязательна к заполнению. Заполните ее и произведите перерасчет', iCutIterMode)
            else
              if not IsValidVidL(sVidLicN, getMes) #_MesNoKor(aVidLicN, 'гр.2', iCutIterMode);
            for (j := 0; j <  GetCountFld('Файл/Документ/НДПИ/ИсчУплНал'+getIter(i)+'/ДанДПИ/ДанДПИУч'+getIter(k)+'/Коэф'); j++)
            {
              if GetFldVis('Файл/Документ/НДПИ/ИсчУплНал'+getIter(i)+'/ДанДПИ/ДанДПИУч'+getIter(k)+'/Коэф'+ getIter(j)) or tBool
              {
                tBool:=False;
                aKoef :=  'Файл/Документ/НДПИ/ИсчУплНал'+ getIter(i) +'/ДанДПИ/ДанДПИУч'+ getIter(k) +'/Коэф'+ getIter(j) +'/txt'  ;  sKoef := GetStrVal(aKoef    );
                if ((sKoef)='') and (sKodDPI ='03100' )
                  #_InsMes(aKoef, 'гр.5', 'Строка обязательна к заполнению. Заполните ее и произведите перерасчет', iCutIterMode);
                else
                  if((sKoef)<>'') and (sKodDPI <>'03300' and sKodDPI <>'03100'  )
                    #_InsMes(aKoef, 'гр.5', 'Строка должна быть пустой', iCutIterMode);
              }
            }
            tBool:=True;
            for (j := 0; j <  GetCountFld('Файл/Документ/НДПИ/ИсчУплНал'+getIter(i)+'/ДанДПИ/ДанДПИУч'+getIter(k)+'/КолДПИОсн'); j++)
            {
              if GetFldVis('Файл/Документ/НДПИ/ИсчУплНал'+ getIter(i) +'/ДанДПИ/ДанДПИУч'+ getIter(k) +'/КолДПИОсн'+ getIter(j))  or tBool
              {
                tBool:=False;
                aKodOsnov:=  'Файл/Документ/НДПИ/ИсчУплНал'+ getIter(i) +'/ДанДПИ/ДанДПИУч'+ getIter(k) +'/КолДПИОсн'+ getIter(j) +'/КодОснов' ;  sKodOsnov:= GetStrVal(aKodOsnov);
                aKolDPI  :=  'Файл/Документ/НДПИ/ИсчУплНал'+ getIter(i) +'/ДанДПИ/ДанДПИУч'+ getIter(k) +'/КолДПИОсн'+ getIter(j) +'/КолДПИ'   ;  sKolDPI  := GetStrVal(aKolDPI  );
                if (sKodOsnov ='' )
                  #_InsMes(aKodOsnov, 'гр.3', 'Строка обязательна к заполнению. Заполните ее и произведите перерасчет', iCutIterMode);
                if (sKolDPI ='' )
                  #_InsMes(aKolDPI, 'гр.4', 'Строка обязательна к заполнению. Заполните ее и произведите перерасчет', iCutIterMode);
              }
            }
          }
        }
      }
    } // for (i := 0; i <  GetCountFld('Файл/Документ/НДПИ/ИсчУплНал'); i++)

    var aRasxOb, aNachPrav, aKonPrav, sRasxOb, sNachPrav, sKonPrav: string;
    if GetFldVis('Файл/Документ/НДПИ/СтоимЕдДПИ')
    {

      NameStr := '04.1 Раздел 3';

      aOKEI   := 'Файл/Документ/НДПИ/СтоимЕдДПИ/СумРасхДПИОтд/ОКЕИ'         ; sOKEI   := GetStrVal(aOKEI );
      aRasxOb := 'Файл/Документ/НДПИ/СтоимЕдДПИ/СумРасхДПИОбщ/РасхОбщДобПер'; sRasxOb := GetStrVal(aRasxOb);
      if (sOKEI='')
        #_InsMes(aOKEI, 'Стр.110', 'Строка обязательна к заполнению.');
      if  (sRasxOb='')
        #_InsMes(aRasxOb, 'Стр.100', 'Строка обязательна к заполнению.Заполните ее и произведите перерасчет');
    }
    for (i:=0 ; i<GetCountFld('Файл/Документ/НДПИ/ИсчУплНалУг'); i++)
    {
      if GetFldVis('Файл/Документ/НДПИ/ИсчУплНалУг'+ getIter(i))
      {
        NameStr := '05.'+string(i+1)+' Раздел 4.1';
        aKBK     := 'Файл/Документ/НДПИ/ИсчУплНалУг'+ getIter(i) +'/КБК'        ;  sKBK     := GetStrVal(aKBK    );
        aSepLicN := 'Файл/Документ/НДПИ/ИсчУплНалУг'+ getIter(i) +'/СерЛицНедр' ;  sSepLicN := GetStrVal(aSepLicN);
        aNomLicN := 'Файл/Документ/НДПИ/ИсчУплНалУг'+ getIter(i) +'/НомЛицНедр' ;  sNomLicN := GetStrVal(aNomLicN);
        aVidLicN := 'Файл/Документ/НДПИ/ИсчУплНалУг'+ getIter(i) +'/ВидЛицНедр' ;  sVidLicN := GetStrVal(aVidLicN);
        aOKEI    := 'Файл/Документ/НДПИ/ИсчУплНалУг'+ getIter(i) +'/ОКЕИ'       ;  sOKEI    := GetStrVal(aOKEI   );
        if (sKBK ='' )
          #_InsMes(aKBK, 'Стр.010', 'Строка обязательна к заполнению.')
        else
          if not IsValidKBK(sKBK, getMes) #_MesNoKor(aKBK, 'Стр. 010');
        if (sSepLicN ='' )
          #_InsMes(aSepLicN, 'Стр.020', 'Строка обязательна к заполнению.')
        else
          if not IsValidSerL(sSepLicN, getMes) #_MesNoKor(aSepLicN, 'Стр.020');
        if (sNomLicN ='' )
          #_InsMes(aNomLicN, 'Стр.020', 'Строка обязательна к заполнению.')
        else
          if not IsValidNomL(sNomLicN, getMes) #_MesNoKor(aNomLicN, 'Стр.020');
        if (sVidLicN ='' )
          #_InsMes(aVidLicN, 'Стр.020', 'Строка обязательна к заполнению.')
        else
          if not IsValidVidL(sVidLicN, getMes) #_MesNoKor(aVidLicN, 'Стр.020');
        if (sOKEI ='' )
          #_InsMes(aOKEI, 'Стр. 030', 'Строка обязательна к заполнению.');
        for (j :=0; j<GetCountFld('Файл/Документ/НДПИ/ИсчУплНалУг'+ getIter(i) +'/ДанДПИУг/ДанДПИУгУч'); j++)
        {
          if GetFldVis('Файл/Документ/НДПИ/ИсчУплНалУг'+ getIter(i) +'/ДанДПИУг/ДанДПИУгУч'+ getIter(j))
          {
            aOKTMO  := 'Файл/Документ/НДПИ/ИсчУплНалУг'+ getIter(i) +'/ДанДПИУг/ДанДПИУгУч'+ getIter(j)+'/ОКТМО' ; sOKTMO  :=GetStrVal(aOKTMO );
            aKodDPI := 'Файл/Документ/НДПИ/ИсчУплНалУг'+ getIter(i) +'/ДанДПИУг/ДанДПИУгУч'+ getIter(j) +'/КодДПИ'; sKodDPI :=GetStrVal(aKodDPI);
            if (sOKTMO ='' )
              #_InsMes(aOKTMO, 'гр.1', 'Строка обязательна к заполнению.')
            else
              if not IsValidOKTMO(sOKTMO, getMes) #_MesNoKor(aOKTMO, 'гр.1');
            if (sKodDPI ='' )
              #_InsMes(aKodDPI, 'гр.2', 'Строка обязательна к заполнению.');
            tBool :=True;
            if GetFldVis('Файл/Документ/НДПИ/ИсчУплНалУг'+ getIter(i) +'/ДанДПИУг/ДанДПИУгУч'+ getIter(j) +'/КолДПИ_0') or tBool
            {
              tBool:= False;
              aKodOsnov := 'Файл/Документ/НДПИ/ИсчУплНалУг'+ getIter(i) +'/ДанДПИУг/ДанДПИУгУч'+ getIter(j) +'/КолДПИ_0/КодОснов'; sKodOsnov := GetStrVal(aKodOsnov);
              aKolDPI   := 'Файл/Документ/НДПИ/ИсчУплНалУг'+ getIter(i) +'/ДанДПИУг/ДанДПИУгУч'+ getIter(j) +'/КолДПИ_0/КолДПИ'  ; sKolDPI   := GetStrVal(aKolDPI  );
              if (sKodOsnov ='' )
                #_InsMes(aKodOsnov, 'гр.3', 'Строка обязательна к заполнению. Заполните ее и произведите перерасчет');
              if (sKolDPI ='' )
                #_InsMes(aKolDPI, 'гр.5', 'Строка обязательна к заполнению. Заполните ее и произведите перерасчет')
            }
            tBool :=True;
            if GetFldVis('Файл/Документ/НДПИ/ИсчУплНалУг'+ getIter(i) +'/ДанДПИУг/ДанДПИУгУч'+ getIter(j) +'/КолДПИОбщ') or tBool
            {
              tBool:= False;
              aKodOsnov := 'Файл/Документ/НДПИ/ИсчУплНалУг'+ getIter(i) +'/ДанДПИУг/ДанДПИУгУч'+ getIter(j) +'/КолДПИОбщ/КодОснов'; sKodOsnov := GetStrVal(aKodOsnov);
              aKolDPI   := 'Файл/Документ/НДПИ/ИсчУплНалУг'+ getIter(i) +'/ДанДПИУг/ДанДПИУгУч'+ getIter(j) +'/КолДПИОбщ/КолДПИ'  ; sKolDPI   := GetStrVal(aKolDPI  );
              if (sKodOsnov ='' )
                #_InsMes(aKodOsnov, 'гр.4', 'Строка обязательна к заполнению. Заполните ее и произведите перерасчет');
              if (sKolDPI ='' )
                #_InsMes(aKolDPI, 'гр.6', 'Строка обязательна к заполнению. Заполните ее и произведите перерасчет')
            }
          }
        }
        NameStr := '07.'+string(i+1)+' Раздел 4.2';
        if GetDblVal('Файл/Документ/НДПИ/ИсчУплНалУг'+ getIter(i) +'/РасчНалУпл/КоэфКт')>0.3
          #_InsMes('Файл/Документ/НДПИ/ИсчУплНалУг'+ getIter(i) +'/РасчНалУпл/КоэфКт', 'Стр.070', 'Значение коэффициента Кт <= 0.3')
        for (j := 0; j < GetCountFld('Файл/Документ/НДПИ/ИсчУплНалУг'+getIter(i)+'/РасчНалВыч/РасчНалВычУч'); j++)
        {
          if GetFldVis('Файл/Документ/НДПИ/ИсчУплНалУг'+ getIter(i) +'/РасчНалВыч/РасчНалВычУч'+ getIter(j))
          {
            NameStr := '07.'+string(i+1)+' Раздел 4.3';
            aNachPrav := 'Файл/Документ/НДПИ/ИсчУплНалУг'+ getIter(i) +'/РасчНалВыч/РасчНалВычУч'+ getIter(j) +'/НачПравНалВыч' ;  sNachPrav := GetStrVal(aNachPrav);
            aKonPrav  := 'Файл/Документ/НДПИ/ИсчУплНалУг'+ getIter(i) +'/РасчНалВыч/РасчНалВычУч'+ getIter(j) +'/КонПравНалВыч' ;  sKonPrav  := GetStrVal(aKonPrav );
            if (aNachPrav ='' )
              #_InsMes(aNachPrav, 'Стр.010', 'Строка обязательна к заполнению.')
            else
            if not IsValidMGod(sNachPrav, getMes) #_MesNoKor(aNachPrav, 'Стр.010');
            if (aKonPrav ='' )
              #_InsMes(aKonPrav, 'Стр.060', 'Строка обязательна к заполнению.')
            else
              if not IsValidMGod(sKonPrav, getMes) #_MesNoKor(aKonPrav, 'Стр.060');
          }
        }
      }
    }
  }
  else
    #_InsMes('', 'ПРЕДУПРЕЖДЕНИЕ.', 'Должен быть заполнен хотя бы один из разделов (Раздел 2 или Раздел 4)');
  //**********************************************************************************************************
@end.
//***************************************************************************************************************************************************


@Script On_Recalc : boolean;
  #declare _Log(_strAdr, _strMes, _strVal)
    MesError.InsertRasch(NameStr, #_strAdr, #_strMes, #_strVal, 0);
  #end

  #declare GD0(_strVal)
    DoubleToStr(Round(#_strVal), '[|-]36666666666666666666')
  #end
  #declare GD15_2(_strVal)
    DoubleToStr(Round(#_strVal, 2), '366666666666666~99')
  #end

  #declare GD10_2(_strVal)
    DoubleToStr(Round(#_strVal, 2), '3666666666~99')
  #end

  #declare GD12_3(_strVal)
    DoubleToStr(Round(#_strVal, 2), '366666666666~999')
  #end

  #declare GD13_2(_strVal)
    DoubleToStr(Round(#_strVal, 2), '3666666666666~99')
  #end

  #declare GD1_4(_strVal)
    DoubleToStr(Round(#_strVal, 4), '6~9999')
  #end

  #declare GD1_1(_strVal)
    DoubleToStr(Round(#_strVal, 1), '6~9')
  #end
 #declare SetSNull(_fld)
    XMLMAP.SetIsNullAttrValueByName(#_fld, 2);
  #end
@begin
  //Документ
  if ((GetStrVal('Файл/Документ/ДатаДок') = '') or (GetStrVal('Файл/Документ/ДатаДок') = 'ДД.ММ.ГГГГ'))
    SetFldVal('Файл/Документ/ДатаДок', DateToStr(Cur_Date, 'DD.MM.YYYY'));

  var tBool:boolean;
  var NameStr :string;
  var i,j,k,count,countOKTMO,countKodOsn:longint;
  var Sum, Sum1,Sum2,ObKolDPI,DolDPI,KolDPI,NalBaza,Stoim, sNalBaza :double;
  var aPrRasxDP, aOsnNPNP, aOstNPKP, aPrRasxDPIP, aVnerRAsxDPI, aKosvRasxDPI, aKasvRasxDr, aPrRasxPO, aKosvInRasxP, aRasxObDP : string;
  var mPrRasxDPIP , mKosvInRasxP, mRasxObDP,aKolDPI, aDolDPIOK, aNalBaza, mNalBaza, aSumRasxDobPI , aStimEd, aKodDPI, aKodOsnov, sKodOsnov, mDolDPIOK, mSumRasxDobPI, sKodDPI  :string;
  var sPrRasxDP, sOsnNPNP, sOstNPKP, sPrRasxDPIP, sVnerRAsxDPI, sKosvRasxDPI,  sKasvRasxDr, sPrRasxPO, sKosvInRasxP, sRasxObDP : double;
  var sKolDPI, sDolDPIOK, sSumRasxDobPI, SumKolDPI, Sum7, sStimEd  :double;

  for (i := 0; i <  GetCountFld('Файл/Документ/НДПИ/ИсчУплНал'); i++)
  {
    NameStr := '03.'+string(i+1)+' Раздел 2';

    aKodDPI  :=  'Файл/Документ/НДПИ/ИсчУплНал'+ getIter(i) +'/КодДПИ'    ;  sKodDPI  := GetStrVal(aKodDPI  );
    aStimEd  :=  'Файл/Документ/НДПИ/ИсчУплНал'+ getIter(i) +'/СтоимЕдДПИ';  sStimEd  := GetDblVal(aStimEd  );
    aNalBaza :=  'Файл/Документ/НДПИ/ИсчУплНал'+ getIter(i) +'/НалБаза'   ;  sNalBaza := GetDblVal(aNalBaza );
    if  (sKodDPI <>'03100') and (sKodDPI <>'03300') and (sKodDPI <>'03400')
    {
      for (k := 0; k <  GetCountFld('Файл/Документ/НДПИ/ИсчУплНал'+ getIter(i) +'/ДанДПИ/ДанДПИУч'); k++)
      {
        for (j := 0; j <  GetCountFld('Файл/Документ/НДПИ/ИсчУплНал'+getIter(i)+'/ДанДПИ/ДанДПИУч'+getIter(k)+'/КолДПИОсн'); j++)
        {
          aKodOsnov:=  'Файл/Документ/НДПИ/ИсчУплНал'+ getIter(i) +'/ДанДПИ/ДанДПИУч'+ getIter(k) +'/КолДПИОсн'+ getIter(j) +'/КодОснов' ;  sKodOsnov:= GetStrVal(aKodOsnov);
          aKolDPI  :=  'Файл/Документ/НДПИ/ИсчУплНал'+ getIter(i) +'/ДанДПИ/ДанДПИУч'+ getIter(k) +'/КолДПИОсн'+ getIter(j) +'/КолДПИ'   ;  sKolDPI  := GetDblVal(aKolDPI  );

          if (SubStr(sKodOsnov,1,2) <>'10' and sKodOsnov<>'' )
            sum7:=sum7+sKolDPI;
        }
      }
      sNalBaza:=sum7*sStimEd;
      mNalBaza := 'Стр.080 = Сумма(гр.4) * Стр.040';
      #_Log(aNalBaza , mNalBaza , #GD0(sNalBaza)+' = ' + String(sum7) + '*' + String(sStimEd));
      SetFldVal(aNalBaza,  #GD0(sNalBaza));
    }
  }


  NameStr := '04.1 Раздел 3';
  mPrRasxDPIP  := 'Стр.040 = Стр.010 + Стр.020 - Стр.030';
  mKosvInRasxP := 'Стр.090 = Стр.050 + Стр.060 + Стр.070 * Стр.010 / Стр.080';
  mRasxObDP    := 'Стр.100 = Стр.040 + Стр.090';

  aPrRasxDP    := 'Файл/Документ/НДПИ/СтоимЕдДПИ/СумРасхДПИОбщ/ПрРасхДобПер'  ;
  aOsnNPNP     := 'Файл/Документ/НДПИ/СтоимЕдДПИ/СумРасхДПИОбщ/ОстНПНачПер'   ;
  aOstNPKP     := 'Файл/Документ/НДПИ/СтоимЕдДПИ/СумРасхДПИОбщ/ОстНПКонПер'   ;
  aPrRasxDPIP  := 'Файл/Документ/НДПИ/СтоимЕдДПИ/СумРасхДПИОбщ/ПрРасхДПИПер'  ;
  aVnerRAsxDPI := 'Файл/Документ/НДПИ/СтоимЕдДПИ/СумРасхДПИОбщ/ВнереалРасхДПИ';  sVnerRAsxDPI :=GetDblVal(aVnerRAsxDPI);
  aKosvRasxDPI := 'Файл/Документ/НДПИ/СтоимЕдДПИ/СумРасхДПИОбщ/КосвРасхДПИ'   ;  sKosvRasxDPI :=GetDblVal(aKosvRasxDPI);
  aKasvRasxDr  := 'Файл/Документ/НДПИ/СтоимЕдДПИ/СумРасхДПИОбщ/КосвРасхДр'    ;  sKasvRasxDr  :=GetDblVal(aKasvRasxDr );
  aPrRasxPO    := 'Файл/Документ/НДПИ/СтоимЕдДПИ/СумРасхДПИОбщ/ПрРасхПерОбщ'  ;  sPrRasxPO    :=GetDblVal(aPrRasxPO   );
  aKosvInRasxP := 'Файл/Документ/НДПИ/СтоимЕдДПИ/СумРасхДПИОбщ/КосвИнРасхПер' ;
  aRasxObDP    := 'Файл/Документ/НДПИ/СтоимЕдДПИ/СумРасхДПИОбщ/РасхОбщДобПер' ;
  if GetStrVal(aPrRasxDP) =''
    sPrRasxDP :=0
  else sPrRasxDP :=GetDblVal(aPrRasxDP   );
  if GetStrVal(aOsnNPNP) =''
    sOsnNPNP :=0
  else sOsnNPNP :=GetDblVal(aOsnNPNP    );
  if GetStrVal(aOstNPKP) =''
    sOstNPKP :=0
  else sOstNPKP :=GetDblVal(aOstNPKP    );
  sPrRasxDPIP  := sPrRasxDP + sOsnNPNP - sOstNPKP;
  sKosvInRasxP := sVnerRAsxDPI + sKosvRasxDPI + sKasvRasxDr * sPrRasxDP / sPrRasxPO ;
  sRasxObDP    := sPrRasxDPIP + sKosvInRasxP;
  #_Log(aPrRasxDPIP , mPrRasxDPIP , #GD15_2(sPrRasxDPIP )+' = '+ String(sPrRasxDP ) + '+' + String(sOsnNPNP) + '-' + String(sOstNPKP));
  #_Log(aKosvInRasxP, mKosvInRasxP, #GD15_2(sKosvInRasxP)+' = '+ String(sVnerRAsxDPI) +' + '+ String(sKosvRasxDPI)+' + '+String(sKasvRasxDr) +' * '+ String(sPrRasxDP) +'/'+String( sPrRasxPO) );
  #_Log(aRasxObDP   , mRasxObDP   , #GD15_2(sRasxObDP   )+' = '+ String(sPrRasxDPIP) + ' + ' + String(sKosvInRasxP));
  SetFldVal(aPrRasxDPIP ,  #GD15_2(sPrRasxDPIP ));
  SetFldVal(aKosvInRasxP,  #GD15_2(sKosvInRasxP));
  SetFldVal(aRasxObDP   ,  #GD15_2(sRasxObDP   ));
  SumKolDPI:=0;
  for (i := 0; i <  GetCountFld('Файл/Документ/НДПИ/СтоимЕдДПИ/СумРасхДПИОтд/СумРасхДПИВид'); i++)
  {
    aKolDPI       :=  'Файл/Документ/НДПИ/СтоимЕдДПИ/СумРасхДПИОтд/СумРасхДПИВид'+getIter(i)+'/КоличДПИ'     ;   sKolDPI       :=GetDblVal(aKolDPI      );
    SumKolDPI:=SumKolDPI+sKolDPI;
  }
  if  SumKolDPI <>0
  {
    for (i := 0; i <  GetCountFld('Файл/Документ/НДПИ/СтоимЕдДПИ/СумРасхДПИОтд/СумРасхДПИВид'); i++)
    {
      aKolDPI       :=  'Файл/Документ/НДПИ/СтоимЕдДПИ/СумРасхДПИОтд/СумРасхДПИВид'+getIter(i)+'/КоличДПИ'     ;   sKolDPI       :=GetDblVal(aKolDPI      );
      aDolDPIOK     :=  'Файл/Документ/НДПИ/СтоимЕдДПИ/СумРасхДПИОтд/СумРасхДПИВид'+getIter(i)+'/ДоляДПИОбщКол';   sDolDPIOK     :=GetDblVal(aDolDPIOK    );
      aSumRasxDobPI :=  'Файл/Документ/НДПИ/СтоимЕдДПИ/СумРасхДПИОтд/СумРасхДПИВид'+getIter(i)+'/СумРасхДобПИ' ;   sSumRasxDobPI :=GetDblVal(aSumRasxDobPI);
      sDolDPIOK := sKolDPI / SumKolDPI;
      mDolDPIOK := 'гр.3 = гр.2 / Сумма(гр.2)';
      #_Log(aDolDPIOK , mDolDPIOK , #GD1_4(sDolDPIOK )+' = '+ String(sKolDPI) + ' / ' + String(SumKolDPI));
      SetFldVal(aDolDPIOK ,  #GD1_4(sDolDPIOK));
      sSumRasxDobPI := sDolDPIOK *sRasxObDP
      mSumRasxDobPI := 'гр.4 = гр.3 * Стр.100';
      #_Log(aSumRasxDobPI , mSumRasxDobPI , #GD10_2(sSumRasxDobPI )+' = '+ String(sDolDPIOK) + ' * ' + String(sRasxObDP));
      SetFldVal(aSumRasxDobPI,  #GD10_2(sSumRasxDobPI));
    }
  }
  var aR42Str010, aR42Str020, aR42Str030, aR42Str040, aR42Str050, aR42Str060, aR42Str070, aR42Str080, aR42Str090, aR42Str100, aR42Str110 :string;
  var sR42Str010, sR42Str020, sR42Str030, sR42Str040, sR42Str050, sR42Str060, sR42Str070, sR42Str080, sR42Str090, sR42Str100, sR42Str110 :double;
  var mR42Str020, mR42Str060, mR42Str090, mR42Str100, mR42Str110  :string;
  var aR43Str020, aR43Str030, aR43Str040, aR43Str050:string;
  var sR43Str020, sR43Str030, sR43Str040, sR43Str050:double;
  var mR43Str050 :string;
  for (i := 0; i <  GetCountFld('Файл/Документ/НДПИ/ИсчУплНалУг'); i++)
  {
    NameStr := '06.' + String(i+1) + ' Раздел 4.2';
    aR42Str010 := 'Файл/Документ/НДПИ/ИсчУплНалУг'+getIter(i)+'/РасчНалУпл/ОстНачПер'            ;  sR42Str010 := GetDblVal(aR42Str010);
    aR42Str020 := 'Файл/Документ/НДПИ/ИсчУплНалУг'+getIter(i)+'/РасчНалУпл/РасхОТВыч'            ;
    aR42Str030 := 'Файл/Документ/НДПИ/ИсчУплНалУг'+getIter(i)+'/РасчНалУпл/РасхОТПер/МатРасх'    ;  sR42Str030 := GetDblVal(aR42Str030);
    aR42Str040 := 'Файл/Документ/НДПИ/ИсчУплНалУг'+getIter(i)+'/РасчНалУпл/РасхОТПер/РасхАмИмущ' ;  sR42Str040 := GetDblVal(aR42Str040);
    aR42Str050 := 'Файл/Документ/НДПИ/ИсчУплНалУг'+getIter(i)+'/РасчНалУпл/РасхОТПер/РасхРекон'  ;  sR42Str050 := GetDblVal(aR42Str050);
    aR42Str060 := 'Файл/Документ/НДПИ/ИсчУплНалУг'+getIter(i)+'/РасчНалУпл/РасхОТПер/РасхОТПерВс';
    aR42Str070 := 'Файл/Документ/НДПИ/ИсчУплНалУг'+getIter(i)+'/РасчНалУпл/КоэфКт'               ;  sR42Str070 := GetDblVal(aR42Str070);
    aR42Str080 := 'Файл/Документ/НДПИ/ИсчУплНалУг'+getIter(i)+'/РасчНалУпл/ИсчислУчУг'           ;  sR42Str080 := GetDblVal(aR42Str080);
    aR42Str090 := 'Файл/Документ/НДПИ/ИсчУплНалУг'+getIter(i)+'/РасчНалУпл/НалВычПред'           ;
    aR42Str100 := 'Файл/Документ/НДПИ/ИсчУплНалУг'+getIter(i)+'/РасчНалУпл/ИсчислПерУпл'         ;
    aR42Str110 := 'Файл/Документ/НДПИ/ИсчУплНалУг'+getIter(i)+'/РасчНалУпл/ОстКонПер'            ;

    mR42Str020 := 'Стр.020 = Стр.030 + Стр.040 + Стр.050';
    sR42Str020 := sR42Str030 + sR42Str040 + sR42Str050;
    #_Log(aR42Str020 , mR42Str020 , #GD0(sR42Str020 )+' = '+ String(sR42Str030) + '+' + String(sR42Str040) + '+' + String(sR42Str050));
    SetFldVal(aR42Str020 ,  #GD0(sR42Str020));
    mR42Str090 := 'Стр.090 = Стр.070 * Стр.080';
    sR42Str090 := sR42Str070 * sR42Str080;
    #_Log(aR42Str090 , mR42Str090 , #GD0(sR42Str090 )+' = '+ String(sR42Str070) + '*' + String(sR42Str080));
    SetFldVal(aR42Str090 ,  #GD0(sR42Str090));
    if ((sR42Str010+ sR42Str020)< sR42Str090 )
    {
      mR42Str060 := 'Стр.060 = Стр.010 + Стр.020';
      sR42Str060 := sR42Str010 + sR42Str020;
      #_Log(aR42Str060 , mR42Str060 , #GD0(sR42Str060 )+' = '+ String(sR42Str010) + '+' + String(sR42Str020));
      SetFldVal(aR42Str060 ,  #GD0(sR42Str060))
    }
    else
    {
      mR42Str060 := 'Стр.060 = Стр.090';
      sR42Str060 := sR42Str090;
      #_Log(aR42Str060 , mR42Str060 , #GD0(sR42Str060 )+' = '+ String(sR42Str090));
      SetFldVal(aR42Str060 ,  #GD0(sR42Str060));
    }
    mR42Str100 := 'Стр.100 = Стр.080 - Стр.060';
    sR42Str100 := sR42Str080 - sR42Str060;
    #_Log(aR42Str100 , mR42Str100 , #GD0(sR42Str100 )+' = '+ String(sR42Str080) + ' - ' + String(sR42Str060));
    SetFldVal(aR42Str100 ,  #GD0(sR42Str100));
    mR42Str110 := 'Стр.110 = Стр.010 + Стр.020 - Стр.060';
    sR42Str110 := sR42Str010 + sR42Str020 - sR42Str060;
    #_Log(aR42Str110 , mR42Str110 , #GD0(sR42Str110 )+' = '+ String(sR42Str010) + ' + ' + String(sR42Str020) + ' - ' + String(sR42Str060));
    SetFldVal(aR42Str110 ,  #GD0(sR42Str110));


    NameStr := '07.' + String(i+1) + ' Раздел 4.3';
    for (j := 0; j <  GetCountFld('Файл/Документ/НДПИ/ИсчУплНалУг'+getIter(i)+'/РасчНалВыч/РасчНалВычУч'); j++)
    {
      aR43Str020 := 'Файл/Документ/НДПИ/ИсчУплНалУг'+getIter(i)+'/РасчНалВыч/РасчНалВычУч' +getIter(j)+ '/НалВычНач'   ;  sR43Str020 := GetDblVal(aR43Str020);
      aR43Str030 := 'Файл/Документ/НДПИ/ИсчУплНалУг'+getIter(i)+'/РасчНалВыч/РасчНалВычУч' +getIter(j)+ '/НалВычПред'  ;  sR43Str030 := GetDblVal(aR43Str030);
      aR43Str040 := 'Файл/Документ/НДПИ/ИсчУплНалУг'+getIter(i)+'/РасчНалВыч/РасчНалВычУч' +getIter(j)+ '/НалВычТек'   ;  sR43Str040 := GetDblVal(aR43Str040);
      aR43Str050 := 'Файл/Документ/НДПИ/ИсчУплНалУг'+getIter(i)+'/РасчНалВыч/РасчНалВычУч' +getIter(j)+ '/ОстНалВычКон';
      if sR43Str020 <> 0 or  sR43Str030 <> 0 or sR43Str040 <> 0
      {
        mR43Str050 := 'Стр.050 = Стр.020 - Стр.030 - Стр.040';
        sR43Str050 := sR43Str020 - sR43Str030 - sR43Str040;
        #_Log(aR43Str050 , mR43Str050 , #GD0(sR43Str050)+' = '+ String(sR43Str020) + ' - ' + String(sR43Str030) + ' - ' + String(sR43Str040));
        SetFldVal(aR43Str050 ,  #GD0(sR43Str050));
      }
    }
  }
@end.

@Script On_ExportXML : boolean;
@begin
  SetFldVal('Файл/ИдФайл', Replace(_IdFail_, '.xml', ''));

  if (not XMLMap.ExpToXml(_XmlFileName_)) {
    Message('On_ExportXML: '+ XMLMap.GetStLastError, cancelButton+Warning);
    Exit;
  }

  message('Выгружен в файл ' + _XmlFileName_);
@end.
