//------------------------------------------------------------------------------------------------------------
//                                                                                    (c) корпорация Галактика
// Галактика 9.1 - модуль "Электронная отчетность"
// Алгоритмы расчета : "Бухгалтерская (финансовая) отчетность субъектов малого предпринимательства"
//------------------------------------------------------------------------------------------------------------


//============================================================================================================
//#region СЕРВИСНЫЕ МЕТОДЫ
//------------------------------------------------------------------------------------------------------------
@Script GetDblVal(fld:string):double;
@begin
  Result := Double(XMLMAP.GetAttrValueByName(fld));
@end.

//------------------------------------------------------------------------------------------------------------
@Script GetStrVal(fld:string):string;
@begin
  Result := Trim(String(XMLMAP.GetAttrValueByName(fld)));
@end.

//------------------------------------------------------------------------------------------------------------
@Script GetFldVis(fld:string):boolean;
@begin
  Result := False;
  Result := XMLMAP.GetAttrVisByName(fld);
@end.

//------------------------------------------------------------------------------------------------------------
@Script StrNotNul(fld:string):boolean;
@begin
  Result := Trim(String(XMLMAP.GetAttrValueByName(fld))) <> '';
@end.

//------------------------------------------------------------------------------------------------------------
@Script GetStrValFormat(fld:string):string;
@begin
  var bufRes: string;

  bufRes := Trim(String(XMLMAP.GetAttrValueByName(fld)));

  if (bufRes = '')
  then Result := '0'
  else if (Double(bufRes) < 0)
       then Result := '('+bufRes+')'
       else Result := bufRes;
@end.

//------------------------------------------------------------------------------------------------------------
@Script SetFldVis(fld:string;vis:boolean);
@begin
  XMLMAP.SetAttrVisByName(fld,vis);
@end.

//------------------------------------------------------------------------------------------------------------
@Script SetFldVal(fld:string; val:string);
@begin
  XMLMAP.SetVariantAttrValueByName_Formula(fld,val,2);
@end.

//------------------------------------------------------------------------------------------------------------
@Script SetIntVal(fld:string; val:double);
@begin
  XMLMAP.SetVariantAttrValueByName_Formula(fld, DoubleToStr(Round(val), '[|-]3666666666666666666666'), 2);
@end.

//------------------------------------------------------------------------------------------------------------
@Script MessageErrorStop_ALG(mesMesAdrXML, mesStr, mesPole, mesMes: string; mesCountIter: integer = 0): boolean;
@begin
  MesError.InsertMesError(mesMesAdrXML, Comp(0), mesStr, mesPole, mesMes, mesCountIter);
  Result := True;
@end.

//------------------------------------------------------------------------------------------------------------
@Script GetStrNull(fld:string):boolean;
@begin
  Result := XMLMAP.GetIsNullAttrValueByName(fld);
@end.
//#endregion СЕРВИСНЫЕ МЕТОДЫ
//************************************************************************************************************


//============================================================================================================
//#region ДЕЙСТВИЯ ВЫПОЛНЯЕМЫЕ ПРИ УСТАНОВКЕ ВИДИМОСТИ ПОЛЕЙ
//------------------------------------------------------------------------------------------------------------
@Script On_Visable : boolean;
  //==========================================================================================================
  //#region СЕРВИС On_Visable
  //----------------------------------------------------------------------------------------------------------
  #declare IfVis(adrIfVis)
    SetFldVis(#adrIfVis, not GetStrNull(#adrIfVis));
  #end

  #declare SetVisF(adrIfVis)
    SetFldVis(#adrIfVis, False);
  #end

  #declare SetVisT(adrIfVis)
    SetFldVis(#adrIfVis, True);
  #end

  procedure Balans (_XMLAdr_ : string);
  {
    if     not GetStrNull(_XMLAdr_ + '/КодСтроки')
       and not GetStrNull(_XMLAdr_ + '/СумОтч'   )
    {
      #SetVisT(_XMLAdr_               )
      #IfVis  (_XMLAdr_ + '/Пояснения')
      #IfVis  (_XMLAdr_ + '/СумПрдщ'  )
      #IfVis  (_XMLAdr_ + '/СумПрдшв' )
    }
    else #SetVisF(_XMLAdr_)
  }

  procedure PribUb (_XMLAdr_ : string);
  {
    if     not GetStrNull(_XMLAdr_ + '/КодСтроки')
       and not GetStrNull(_XMLAdr_ + '/СумОтч'   )
    {
      #SetVisT(_XMLAdr_               )
      #IfVis  (_XMLAdr_ + '/Пояснения')
      #IfVis  (_XMLAdr_ + '/СумПред'  )
    }
    else #SetVisF(_XMLAdr_)
  }

  procedure PribUbOb : boolean;
  {
    // Элемент обязателен, за исключением случая, когда <ОКОПФ> принимает следующие значения:
    // - в соответствии с ОКОПФ (ОК 028-99)
    //   71 | 74 | 76 | 77 | 78 | 80 | 81 | 82 | 83 | 84 | 85 | 86 | 88 | 89 | 93 | 94 | 96 | 97
    // - в соответствии с ОКОПФ (ОК 028-2012)
    //   20101 | 20102 | 20103 | 20104 | 20105 | 20106 | 20107 | 20108 | 20109 | 20110 | 20111 | 20112 | 20113 | 20114 | 20115 | 20120 | 20121 | 20200 | 20201 | 20202 | 20210 | 20211 | 20217 | 20601 | 20603 |
    //   20604 | 20605 | 20606 | 20607 | 20608 | 20611 | 20612 | 20613 | 20614 | 20617 | 20618 | 20619 | 20620 | 20701 | 20716 | 20900 | 20902 | 20904 | 20905 | 20906 | 20908 | 21001 | 21002 | 21003 | 21100 | 21200

    var OKOPF : string; OKOPF:='';
    OKOPF := GetStrVal('Файл/Документ/СвНП/ОКОПФ');

    Result := not   (OKOPF='71' or OKOPF='74' or OKOPF='76' or OKOPF='77' or OKOPF='78' or OKOPF='80' or OKOPF='81' or OKOPF='82' or OKOPF='83' or OKOPF='84'
                  or OKOPF='85' or OKOPF='86' or OKOPF='88' or OKOPF='89' or OKOPF='93' or OKOPF='94' or OKOPF='96' or OKOPF='97'

                  or OKOPF='20101' or OKOPF='20102' or OKOPF='20103' or OKOPF='20104' or OKOPF='20105' or OKOPF='20106' or OKOPF='20107' or OKOPF='20108' or OKOPF='20109' or OKOPF='20110'
                  or OKOPF='20111' or OKOPF='20112' or OKOPF='20113' or OKOPF='20114' or OKOPF='20115' or OKOPF='20120' or OKOPF='20121' or OKOPF='20200' or OKOPF='20201' or OKOPF='20202'
                  or OKOPF='20210' or OKOPF='20211' or OKOPF='20217' or OKOPF='20601' or OKOPF='20603' or OKOPF='20604' or OKOPF='20605' or OKOPF='20606' or OKOPF='20607' or OKOPF='20608'
                  or OKOPF='20611' or OKOPF='20612' or OKOPF='20613' or OKOPF='20614' or OKOPF='20617' or OKOPF='20618' or OKOPF='20619' or OKOPF='20620' or OKOPF='20701' or OKOPF='20716'
                  or OKOPF='20900' or OKOPF='20902' or OKOPF='20904' or OKOPF='20905' or OKOPF='20906' or OKOPF='20908' or OKOPF='21001' or OKOPF='21002' or OKOPF='21003' or OKOPF='21100'
                  or OKOPF='21200');
  }

  procedure SvPredOb : boolean;
  {
  // СвПред
  // Элемент обязателен при <ПрПодп> = 2

    Result := (GetStrVal('Файл/Документ/Подписант/ПрПодп') = '2');
  }

  procedure Korrekt (_XMLAdr_ : string);
  {
    if     not GetStrNull(_XMLAdr_ + '/ИзмКапЧистПр')
       and not GetStrNull(_XMLAdr_ + '/ИзмКапИнФакт')
       and not GetStrNull(_XMLAdr_ + '/На31ДекПред' )
    {
      #SetVisT(_XMLAdr_                   )
      #IfVis  (_XMLAdr_ + '/На31ДекПрПред')
    }
    else #SetVisF(_XMLAdr_)
  }

  procedure KorrektNode (_XMLAdr_ : string);
  {
    if     not GetStrNull(_XMLAdr_ + '/ДоКоррект/ИзмКапЧистПр'   )
       and not GetStrNull(_XMLAdr_ + '/ДоКоррект/ИзмКапИнФакт'   )
       and not GetStrNull(_XMLAdr_ + '/ДоКоррект/На31ДекПред'    )
       and not GetStrNull(_XMLAdr_ + '/ПослеКоррект/ИзмКапЧистПр')
       and not GetStrNull(_XMLAdr_ + '/ПослеКоррект/ИзмКапИнФакт')
       and not GetStrNull(_XMLAdr_ + '/ПослеКоррект/На31ДекПред' )
    {
      #SetVisT(_XMLAdr_                                )
      #IfVis  (_XMLAdr_ + '/ДоКоррект/На31ДекПрПред'   )
      #IfVis  (_XMLAdr_ + '/ПослеКоррект/На31ДекПрПред')

      Korrekt(_XMLAdr_ + '/КорИзмУчПол');
      Korrekt(_XMLAdr_ + '/КорИспрОш'  );
    }
    else #SetVisF(_XMLAdr_)
  }
  procedure DvigenieDen (_XMLAdr_ : string);
  {
    if not GetStrNull(_XMLAdr_ + '/СумОтч')
    {
      #SetVisT(_XMLAdr_             )
      #IfVis  (_XMLAdr_ + '/СумПред')
    }
    else #SetVisF(_XMLAdr_)
  }

  procedure CelIspNode (_XMLAdr_ : string);
  {
    if     not GetStrNull(_XMLAdr_ + '/КодСтроки')
       and not GetStrNull(_XMLAdr_ + '/СумОтч'   )
    {
      #SetVisT(_XMLAdr_             )
      #IfVis  (_XMLAdr_ + '/СумПред')
    }
    else #SetVisF(_XMLAdr_)
  }

  procedure DvigenKapNode (_XMLAdr_ : string; fNode, f1, f2, f3, f4, f5, f6 : boolean);
  {
    if (f1 or f6)
    {
      if     (not f1 or (f1 and not GetStrNull(_XMLAdr_ + '/УстКапитал')))
         and (not f6 or (f6 and not GetStrNull(_XMLAdr_ + '/Итог'      )))
      {
        if fNode #SetVisT(_XMLAdr_                 )
        if f2    #IfVis  (_XMLAdr_ + '/СобВыкупАкц')
        if f3    #IfVis  (_XMLAdr_ + '/ДобКапитал' )
        if f4    #IfVis  (_XMLAdr_ + '/РезКапитал' )
        if f5    #IfVis  (_XMLAdr_ + '/НераспПриб' )
      }
      else
        if fNode
          #SetVisF(_XMLAdr_)
    }
    else
    {
      if f2 #IfVis(_XMLAdr_ + '/СобВыкупАкц')
      if f3 #IfVis(_XMLAdr_ + '/ДобКапитал' )
      if f4 #IfVis(_XMLAdr_ + '/РезКапитал' )
      if f5 #IfVis(_XMLAdr_ + '/НераспПриб' )

      if fNode
      {
        if    not GetFldVis(_XMLAdr_ + '/СобВыкупАкц')
          or not GetFldVis(_XMLAdr_ + '/ДобКапитал' )
          or not GetFldVis(_XMLAdr_ + '/РезКапитал' )
          or not GetFldVis(_XMLAdr_ + '/НераспПриб' )
        then #SetVisT(_XMLAdr_)
        else #SetVisF(_XMLAdr_)
      }
    }
  }
  //#endregion СЕРВИС On_Visable
  //**********************************************************************************************************
@begin
  #SetVisF('Параметры')

  #IfVis('Файл/Документ/ДатаУтвОтч')
  #IfVis('Файл/Документ/СвНП/ОКПО' )

  #IfVis('Файл/Документ/СвНП/НПЮЛ/АдрРФ/Индекс'    )
  #IfVis('Файл/Документ/СвНП/НПЮЛ/АдрРФ/Район'     )
  #IfVis('Файл/Документ/СвНП/НПЮЛ/АдрРФ/Город'     )
  #IfVis('Файл/Документ/СвНП/НПЮЛ/АдрРФ/НаселПункт')
  #IfVis('Файл/Документ/СвНП/НПЮЛ/АдрРФ/Улица'     )
  #IfVis('Файл/Документ/СвНП/НПЮЛ/АдрРФ/Дом'       )
  #IfVis('Файл/Документ/СвНП/НПЮЛ/АдрРФ/Корпус'    )
  #IfVis('Файл/Документ/СвНП/НПЮЛ/АдрРФ/Кварт'     )

  #IfVis('Файл/Документ/Подписант/ФИО/Отчество')

  if    SvPredOb
     or not GetStrNull('Файл/Документ/Подписант/СвПред/НаимДок')
  then #SetVisT('Файл/Документ/Подписант/СвПред')
  else #SetVisF('Файл/Документ/Подписант/СвПред')


  //--------------------------------------------------------------------------------------------------------
  //#region Файл/Документ/Баланс
  //--------------------------------------------------------------------------------------------------------
  #IfVis('Файл/Документ/Баланс/Актив/Пояснения')

  Balans('Файл/Документ/Баланс/Актив/МатВнеАкт'  );
  Balans('Файл/Документ/Баланс/Актив/НеМатФинАкт');
  Balans('Файл/Документ/Баланс/Актив/Запасы'     );
  Balans('Файл/Документ/Баланс/Актив/ДенежнСр'   );
  Balans('Файл/Документ/Баланс/Актив/ФинВлож'    );

  #IfVis('Файл/Документ/Баланс/Пассив/Пояснения')

  Balans('Файл/Документ/Баланс/Пассив/КапРез'        );
  Balans('Файл/Документ/Баланс/Пассив/ЦелевСредства' );
  Balans('Файл/Документ/Баланс/Пассив/ФондИмущИнЦФ'  );
  Balans('Файл/Документ/Баланс/Пассив/ДлгЗаемСредств');
  Balans('Файл/Документ/Баланс/Пассив/ДрДолгосрОбяз' );
  Balans('Файл/Документ/Баланс/Пассив/КртЗаемСредств');
  Balans('Файл/Документ/Баланс/Пассив/КредитЗадолж'  );
  Balans('Файл/Документ/Баланс/Пассив/ДрКраткосрОбяз');
  //--------------------------------------------------------------------------------------------------------
  //#endregion Файл/Документ/Баланс
  //--------------------------------------------------------------------------------------------------------


  //--------------------------------------------------------------------------------------------------------
  //#region Файл/Документ/ПрибУб
  //--------------------------------------------------------------------------------------------------------
  if    PribUbOb
     or not GetStrNull('Файл/Документ/ПрибУб/ОКУД')
  {
    #SetVisT('Файл/Документ/ПрибУб')

    PribUb('Файл/Документ/ПрибУб/Выруч'     );
    PribUb('Файл/Документ/ПрибУб/РасхОбДеят');
    PribUb('Файл/Документ/ПрибУб/ПроцУпл'   );
    PribUb('Файл/Документ/ПрибУб/ПрочДоход' );
    PribUb('Файл/Документ/ПрибУб/ПрочРасход');
    PribUb('Файл/Документ/ПрибУб/НалПрибДох');

    if     not GetStrNull('Файл/Документ/ПрибУб/ЧистПрибУб/КодСтроки')
       and not GetStrNull('Файл/Документ/ПрибУб/ЧистПрибУб/СумОтч'   )
       and not GetStrNull('Файл/Документ/ПрибУб/ЧистПрибУб/СумПред'  )
    {
      #SetVisT('Файл/Документ/ПрибУб/ЧистПрибУб'          )
      #IfVis  ('Файл/Документ/ПрибУб/ЧистПрибУб/Пояснения')
    }
    else #SetVisF('Файл/Документ/ПрибУб/ЧистПрибУб')
  }
  else #SetVisF('Файл/Документ/ПрибУб')
  //--------------------------------------------------------------------------------------------------------
  //#endregion Файл/Документ/ПрибУб
  //--------------------------------------------------------------------------------------------------------


  //--------------------------------------------------------------------------------------------------------
  //#region Файл/Документ/ОтчетИзмКап
  //--------------------------------------------------------------------------------------------------------
  if not GetStrNull('Файл/Документ/ОтчетИзмКап/ОКУД')
  then #SetVisT('Файл/Документ/ОтчетИзмКап')
  else #SetVisF('Файл/Документ/ОтчетИзмКап')

  //Файл/Документ/ОтчетИзмКап/ДвиженКап
  if     not GetStrNull('Файл/Документ/ОтчетИзмКап/ДвиженКап/Кап31ДекПред/УстКапитал'     )
     and not GetStrNull('Файл/Документ/ОтчетИзмКап/ДвиженКап/Кап31ДекПред/Итог'           )
     and not GetStrNull('Файл/Документ/ОтчетИзмКап/ДвиженКап/ПредГод/Кап31дек/УстКапитал' )
     and not GetStrNull('Файл/Документ/ОтчетИзмКап/ДвиженКап/ПредГод/Кап31дек/Итог'       )
     and not GetStrNull('Файл/Документ/ОтчетИзмКап/ДвиженКап/ОтчетГод/Кап31дек/УстКапитал')
     and not GetStrNull('Файл/Документ/ОтчетИзмКап/ДвиженКап/ОтчетГод/Кап31дек/Итог'      )
  {
    #SetVisT('Файл/Документ/ОтчетИзмКап/ДвиженКап')
      DvigenKapNode('Файл/Документ/ОтчетИзмКап/ДвиженКап/Кап31ДекПред'                        , false, true , true , true , true , true , true );

  // Файл/Документ/ОтчетИзмКап/ДвиженКап/ПредГод
    // Файл/Документ/ОтчетИзмКап/ДвиженКап/ПредГод/УвеличКапитал
      DvigenKapNode('Файл/Документ/ОтчетИзмКап/ДвиженКап/ПредГод/УвеличКапитал/УвеличКапВс'   , true , true , true , true , true , true , true );
      DvigenKapNode('Файл/Документ/ОтчетИзмКап/ДвиженКап/ПредГод/УвеличКапитал/ЧистПриб'      , true , false, false, false, false, true , true );
      DvigenKapNode('Файл/Документ/ОтчетИзмКап/ДвиженКап/ПредГод/УвеличКапитал/ПереоцИмущ'    , true , false, false, true , false, true , true );
      DvigenKapNode('Файл/Документ/ОтчетИзмКап/ДвиженКап/ПредГод/УвеличКапитал/ДохУвелКап'    , true , false, false, true , false, true , true );
      DvigenKapNode('Файл/Документ/ОтчетИзмКап/ДвиженКап/ПредГод/УвеличКапитал/ДопВыпАкций'   , true , true , true , true , false, false, true );
      DvigenKapNode('Файл/Документ/ОтчетИзмКап/ДвиженКап/ПредГод/УвеличКапитал/УвеличНомАкц'  , true , true , true , true , false, true , false);
      DvigenKapNode('Файл/Документ/ОтчетИзмКап/ДвиженКап/ПредГод/УвеличКапитал/Реорганизация' , true , true , true , true , true , true , true );

      if    not GetFldVis('Файл/Документ/ОтчетИзмКап/ДвиженКап/ПредГод/УвеличКапитал/УвеличКапВс'  )
         or not GetFldVis('Файл/Документ/ОтчетИзмКап/ДвиженКап/ПредГод/УвеличКапитал/ЧистПриб'     )
         or not GetFldVis('Файл/Документ/ОтчетИзмКап/ДвиженКап/ПредГод/УвеличКапитал/ПереоцИмущ'   )
         or not GetFldVis('Файл/Документ/ОтчетИзмКап/ДвиженКап/ПредГод/УвеличКапитал/ДохУвелКап'   )
         or not GetFldVis('Файл/Документ/ОтчетИзмКап/ДвиженКап/ПредГод/УвеличКапитал/ДопВыпАкций'  )
         or not GetFldVis('Файл/Документ/ОтчетИзмКап/ДвиженКап/ПредГод/УвеличКапитал/УвеличНомАкц' )
         or not GetFldVis('Файл/Документ/ОтчетИзмКап/ДвиженКап/ПредГод/УвеличКапитал/Реорганизация')
      then #SetVisT('Файл/Документ/ОтчетИзмКап/ДвиженКап/ПредГод/УвеличКапитал')
      else #SetVisF('Файл/Документ/ОтчетИзмКап/ДвиженКап/ПредГод/УвеличКапитал')

    // Файл/Документ/ОтчетИзмКап/ДвиженКап/ПредГод/УменКапитал
      DvigenKapNode('Файл/Документ/ОтчетИзмКап/ДвиженКап/ПредГод/УменКапитал/УменКапВс'       , true , true , true , true , true , true , true );
      DvigenKapNode('Файл/Документ/ОтчетИзмКап/ДвиженКап/ПредГод/УменКапитал/Убыток'          , true , false, false, false, false, true , true );
      DvigenKapNode('Файл/Документ/ОтчетИзмКап/ДвиженКап/ПредГод/УменКапитал/ПереоцИмущ'      , true , false, false, true , false, true , true );
      DvigenKapNode('Файл/Документ/ОтчетИзмКап/ДвиженКап/ПредГод/УменКапитал/РасхУменКап'     , true , false, false, true , false, true , true );
      DvigenKapNode('Файл/Документ/ОтчетИзмКап/ДвиженКап/ПредГод/УменКапитал/УменНомАкц'      , true , true , true , true , false, true , true );
      DvigenKapNode('Файл/Документ/ОтчетИзмКап/ДвиженКап/ПредГод/УменКапитал/УменКолАкций'    , true , true , true , true , false, true , true );
      DvigenKapNode('Файл/Документ/ОтчетИзмКап/ДвиженКап/ПредГод/УменКапитал/Реорганизация'   , true , true , true , true , true , true , true );
      DvigenKapNode('Файл/Документ/ОтчетИзмКап/ДвиженКап/ПредГод/УменКапитал/Дивиденды'       , true , false, false, false, false, true , true );

      if    not GetFldVis('Файл/Документ/ОтчетИзмКап/ДвиженКап/ПредГод/УменКапитал/УменКапВс'    )
         or not GetFldVis('Файл/Документ/ОтчетИзмКап/ДвиженКап/ПредГод/УменКапитал/Убыток'       )
         or not GetFldVis('Файл/Документ/ОтчетИзмКап/ДвиженКап/ПредГод/УменКапитал/ПереоцИмущ'   )
         or not GetFldVis('Файл/Документ/ОтчетИзмКап/ДвиженКап/ПредГод/УменКапитал/РасхУменКап'  )
         or not GetFldVis('Файл/Документ/ОтчетИзмКап/ДвиженКап/ПредГод/УменКапитал/УменНомАкц'   )
         or not GetFldVis('Файл/Документ/ОтчетИзмКап/ДвиженКап/ПредГод/УменКапитал/УменКолАкций' )
         or not GetFldVis('Файл/Документ/ОтчетИзмКап/ДвиженКап/ПредГод/УменКапитал/Реорганизация')
         or not GetFldVis('Файл/Документ/ОтчетИзмКап/ДвиженКап/ПредГод/УменКапитал/Дивиденды'    )
      then #SetVisT('Файл/Документ/ОтчетИзмКап/ДвиженКап/ПредГод/УменКапитал')
      else #SetVisF('Файл/Документ/ОтчетИзмКап/ДвиженКап/ПредГод/УменКапитал')

      DvigenKapNode('Файл/Документ/ОтчетИзмКап/ДвиженКап/ПредГод/ИзмДобавКап'                 , true , false, false, true , true , true , false);
      DvigenKapNode('Файл/Документ/ОтчетИзмКап/ДвиженКап/ПредГод/ИзмРезервКап'                , true , false, false, false, true , true , false);
      DvigenKapNode('Файл/Документ/ОтчетИзмКап/ДвиженКап/ПредГод/Кап31дек'                    , false, true , true , true , true , true , true );

  // Файл/Документ/ОтчетИзмКап/ДвиженКап/ОтчетГод
    // Файл/Документ/ОтчетИзмКап/ДвиженКап/ОтчетГод/УвеличКапитал
      DvigenKapNode('Файл/Документ/ОтчетИзмКап/ДвиженКап/ОтчетГод/УвеличКапитал/УвеличКапВс'  , true , true , true , true , true , true , true );
      DvigenKapNode('Файл/Документ/ОтчетИзмКап/ДвиженКап/ОтчетГод/УвеличКапитал/ЧистПриб'     , true , false, false, false, false, true , true );
      DvigenKapNode('Файл/Документ/ОтчетИзмКап/ДвиженКап/ОтчетГод/УвеличКапитал/ПереоцИмущ'   , true , false, false, true , false, true , true );
      DvigenKapNode('Файл/Документ/ОтчетИзмКап/ДвиженКап/ОтчетГод/УвеличКапитал/ДохУвелКап'   , true , false, false, true , false, true , true );
      DvigenKapNode('Файл/Документ/ОтчетИзмКап/ДвиженКап/ОтчетГод/УвеличКапитал/ДопВыпАкций'  , true , true , true , true , false, false, true );
      DvigenKapNode('Файл/Документ/ОтчетИзмКап/ДвиженКап/ОтчетГод/УвеличКапитал/УвеличНомАкц' , true , true , true , true , false, true , false);
      DvigenKapNode('Файл/Документ/ОтчетИзмКап/ДвиженКап/ОтчетГод/УвеличКапитал/Реорганизация', true , true , true , true , true , true , true );

      if    not GetFldVis('Файл/Документ/ОтчетИзмКап/ДвиженКап/ОтчетГод/УвеличКапитал/УвеличКапВс'  )
         or not GetFldVis('Файл/Документ/ОтчетИзмКап/ДвиженКап/ОтчетГод/УвеличКапитал/ЧистПриб'     )
         or not GetFldVis('Файл/Документ/ОтчетИзмКап/ДвиженКап/ОтчетГод/УвеличКапитал/ПереоцИмущ'   )
         or not GetFldVis('Файл/Документ/ОтчетИзмКап/ДвиженКап/ОтчетГод/УвеличКапитал/ДохУвелКап'   )
         or not GetFldVis('Файл/Документ/ОтчетИзмКап/ДвиженКап/ОтчетГод/УвеличКапитал/ДопВыпАкций'  )
         or not GetFldVis('Файл/Документ/ОтчетИзмКап/ДвиженКап/ОтчетГод/УвеличКапитал/УвеличНомАкц' )
         or not GetFldVis('Файл/Документ/ОтчетИзмКап/ДвиженКап/ОтчетГод/УвеличКапитал/Реорганизация')
      then #SetVisT('Файл/Документ/ОтчетИзмКап/ДвиженКап/ОтчетГод/УвеличКапитал')
      else #SetVisF('Файл/Документ/ОтчетИзмКап/ДвиженКап/ОтчетГод/УвеличКапитал')

    // Файл/Документ/ОтчетИзмКап/ДвиженКап/ОтчетГод/УменКапитал
      DvigenKapNode('Файл/Документ/ОтчетИзмКап/ДвиженКап/ОтчетГод/УменКапитал/УменКапВс'      , true , true , true , true , true , true , true );
      DvigenKapNode('Файл/Документ/ОтчетИзмКап/ДвиженКап/ОтчетГод/УменКапитал/Убыток'         , true , false, false, false, false, true , true );
      DvigenKapNode('Файл/Документ/ОтчетИзмКап/ДвиженКап/ОтчетГод/УменКапитал/ПереоцИмущ'     , true , false, false, true , false, true , true );
      DvigenKapNode('Файл/Документ/ОтчетИзмКап/ДвиженКап/ОтчетГод/УменКапитал/РасхУменКап'    , true , false, false, true , false, true , true );
      DvigenKapNode('Файл/Документ/ОтчетИзмКап/ДвиженКап/ОтчетГод/УменКапитал/УменНомАкц'     , true , true , true , true , false, true , true );
      DvigenKapNode('Файл/Документ/ОтчетИзмКап/ДвиженКап/ОтчетГод/УменКапитал/УменКолАкций'   , true , true , true , true , false, true , true );
      DvigenKapNode('Файл/Документ/ОтчетИзмКап/ДвиженКап/ОтчетГод/УменКапитал/Реорганизация'  , true , true , true , true , true , true , true );
      DvigenKapNode('Файл/Документ/ОтчетИзмКап/ДвиженКап/ОтчетГод/УменКапитал/Дивиденды'      , true , false, false, false, false, true , true );

      if    not GetFldVis('Файл/Документ/ОтчетИзмКап/ДвиженКап/ОтчетГод/УменКапитал/УменКапВс'    )
         or not GetFldVis('Файл/Документ/ОтчетИзмКап/ДвиженКап/ОтчетГод/УменКапитал/Убыток'       )
         or not GetFldVis('Файл/Документ/ОтчетИзмКап/ДвиженКап/ОтчетГод/УменКапитал/ПереоцИмущ'   )
         or not GetFldVis('Файл/Документ/ОтчетИзмКап/ДвиженКап/ОтчетГод/УменКапитал/РасхУменКап'  )
         or not GetFldVis('Файл/Документ/ОтчетИзмКап/ДвиженКап/ОтчетГод/УменКапитал/УменНомАкц'   )
         or not GetFldVis('Файл/Документ/ОтчетИзмКап/ДвиженКап/ОтчетГод/УменКапитал/УменКолАкций' )
         or not GetFldVis('Файл/Документ/ОтчетИзмКап/ДвиженКап/ОтчетГод/УменКапитал/Реорганизация')
         or not GetFldVis('Файл/Документ/ОтчетИзмКап/ДвиженКап/ОтчетГод/УменКапитал/Дивиденды'    )
      then #SetVisT('Файл/Документ/ОтчетИзмКап/ДвиженКап/ОтчетГод/УменКапитал')
      else #SetVisF('Файл/Документ/ОтчетИзмКап/ДвиженКап/ОтчетГод/УменКапитал')

      DvigenKapNode('Файл/Документ/ОтчетИзмКап/ДвиженКап/ОтчетГод/ИзмДобавКап'                , true , false, false, true , true , true , false);
      DvigenKapNode('Файл/Документ/ОтчетИзмКап/ДвиженКап/ОтчетГод/ИзмРезервКап'               , true , false, false, false, true , true , false);
      DvigenKapNode('Файл/Документ/ОтчетИзмКап/ДвиженКап/ОтчетГод/Кап31дек'                   , false, true , true , true , true , true , true );
  }
  else #SetVisF('Файл/Документ/ОтчетИзмКап/ДвиженКап')

  // Файл/Документ/ОтчетИзмКап/Коррект
  if     not GetStrNull('Файл/Документ/ОтчетИзмКап/Коррект/КапитВс/ДоКоррект/ИзмКапЧистПр'   )
     and not GetStrNull('Файл/Документ/ОтчетИзмКап/Коррект/КапитВс/ДоКоррект/ИзмКапИнФакт'   )
     and not GetStrNull('Файл/Документ/ОтчетИзмКап/Коррект/КапитВс/ДоКоррект/На31ДекПред'    )
     and not GetStrNull('Файл/Документ/ОтчетИзмКап/Коррект/КапитВс/ПослеКоррект/ИзмКапЧистПр')
     and not GetStrNull('Файл/Документ/ОтчетИзмКап/Коррект/КапитВс/ПослеКоррект/ИзмКапИнФакт')
     and not GetStrNull('Файл/Документ/ОтчетИзмКап/Коррект/КапитВс/ПослеКоррект/На31ДекПред' )
  {
    #SetVisT('Файл/Документ/ОтчетИзмКап/Коррект'                                   )
    #IfVis  ('Файл/Документ/ОтчетИзмКап/Коррект/КапитВс/ДоКоррект/На31ДекПрПред'   )
    #IfVis  ('Файл/Документ/ОтчетИзмКап/Коррект/КапитВс/ПослеКоррект/На31ДекПрПред')

    Korrekt('Файл/Документ/ОтчетИзмКап/Коррект/КапитВс/КорИзмУчПол');
    Korrekt('Файл/Документ/ОтчетИзмКап/Коррект/КапитВс/КорИспрОш'  );

    KorrektNode('Файл/Документ/ОтчетИзмКап/Коррект/НераспПриб');
    KorrektNode('Файл/Документ/ОтчетИзмКап/Коррект/ДрСтатКап' );
  }
  else #SetVisF('Файл/Документ/ОтчетИзмКап/Коррект')

  // Файл/Документ/ОтчетИзмКап/ЧистАктив
  if     not GetStrNull('Файл/Документ/ОтчетИзмКап/ЧистАктив/На31ДекОтч' )
     and not GetStrNull('Файл/Документ/ОтчетИзмКап/ЧистАктив/На31ДекПред')
  {
    #SetVisT('Файл/Документ/ОтчетИзмКап/ЧистАктив'              )
    #IfVis  ('Файл/Документ/ОтчетИзмКап/ЧистАктив/На31ДекПрПред')
  }
  else #SetVisF('Файл/Документ/ОтчетИзмКап/ЧистАктив')
  //--------------------------------------------------------------------------------------------------------
  //#endregion Файл/Документ/ОтчетИзмКап
  //--------------------------------------------------------------------------------------------------------


  //--------------------------------------------------------------------------------------------------------
  //#region Файл/Документ/ДвижениеДен
  //--------------------------------------------------------------------------------------------------------
  if     not GetStrNull('Файл/Документ/ДвижениеДен/ОКУД')
     and not GetStrNull('Файл/Документ/ДвижениеДен/СальдоОтч/СумОтч')
     and not GetStrNull('Файл/Документ/ДвижениеДен/ОстНачОтч/СумОтч')
     and not GetStrNull('Файл/Документ/ДвижениеДен/ОстКонОтч/СумОтч')
  {
    #SetVisT('Файл/Документ/ДвижениеДен'                  )
    #IfVis  ('Файл/Документ/ДвижениеДен/СальдоОтч/СумПред')
    #IfVis  ('Файл/Документ/ДвижениеДен/ОстНачОтч/СумПред')
    #IfVis  ('Файл/Документ/ДвижениеДен/ОстКонОтч/СумПред')

    // Файл/Документ/ДвижениеДен/ТекОпер
    if not GetStrNull('Файл/Документ/ДвижениеДен/ТекОпер/СальдоТек/СумОтч')
    {
      #SetVisT('Файл/Документ/ДвижениеДен/ТекОпер'                  )
      #IfVis  ('Файл/Документ/ДвижениеДен/ТекОпер/СальдоТек/СумПред')

      if not GetStrNull('Файл/Документ/ДвижениеДен/ТекОпер/Поступ/СумОтч')
      {
        #SetVisT('Файл/Документ/ДвижениеДен/ТекОпер/Поступ'        )
        #IfVis  ('Файл/Документ/ДвижениеДен/ТекОпер/Поступ/СумПред')

        DvigenieDen('Файл/Документ/ДвижениеДен/ТекОпер/Поступ/ПродПТРУ'   );
        DvigenieDen('Файл/Документ/ДвижениеДен/ТекОпер/Поступ/АрЛицИнПлат');
        DvigenieDen('Файл/Документ/ДвижениеДен/ТекОпер/Поступ/ПродФинВлож');
        DvigenieDen('Файл/Документ/ДвижениеДен/ТекОпер/Поступ/ПрочПоступ' );
      }
      else #SetVisF('Файл/Документ/ДвижениеДен/ТекОпер/Поступ')

      if not GetStrNull('Файл/Документ/ДвижениеДен/ТекОпер/Платеж/СумОтч')
      {
        #SetVisT('Файл/Документ/ДвижениеДен/ТекОпер/Платеж'        )
        #IfVis  ('Файл/Документ/ДвижениеДен/ТекОпер/Платеж/СумПред')

        DvigenieDen('Файл/Документ/ДвижениеДен/ТекОпер/Платеж/ПоставСМРУ'  );
        DvigenieDen('Файл/Документ/ДвижениеДен/ТекОпер/Платеж/ОплатТрудРаб');
        DvigenieDen('Файл/Документ/ДвижениеДен/ТекОпер/Платеж/ПроцДолгОбяз');
        DvigenieDen('Файл/Документ/ДвижениеДен/ТекОпер/Платеж/НалогПриб'   );
        DvigenieDen('Файл/Документ/ДвижениеДен/ТекОпер/Платеж/ПрочПлатеж'  );
      }
      else #SetVisF('Файл/Документ/ДвижениеДен/ТекОпер/Платеж')
    }
    else #SetVisF('Файл/Документ/ДвижениеДен/ТекОпер')

    //Файл/Документ/ДвижениеДен/ИнвОпер
    if not GetStrNull('Файл/Документ/ДвижениеДен/ИнвОпер/СальдоИнв/СумОтч')
    {
      #SetVisT('Файл/Документ/ДвижениеДен/ИнвОпер'                  )
      #IfVis  ('Файл/Документ/ДвижениеДен/ИнвОпер/СальдоИнв/СумПред')

      if not GetStrNull('Файл/Документ/ДвижениеДен/ИнвОпер/Поступ/СумОтч')
      {
        #SetVisT('Файл/Документ/ДвижениеДен/ИнвОпер/Поступ'        )
        #IfVis  ('Файл/Документ/ДвижениеДен/ИнвОпер/Поступ/СумПред')

        DvigenieDen('Файл/Документ/ДвижениеДен/ИнвОпер/Поступ/ПродВнАктив');
        DvigenieDen('Файл/Документ/ДвижениеДен/ИнвОпер/Поступ/ПродАкцДр'  );
        DvigenieDen('Файл/Документ/ДвижениеДен/ИнвОпер/Поступ/ВозврЗаймЦБ');
        DvigenieDen('Файл/Документ/ДвижениеДен/ИнвОпер/Поступ/ДивПроц'    );
        DvigenieDen('Файл/Документ/ДвижениеДен/ИнвОпер/Поступ/ПрочПоступ' );
      }
      else #SetVisF('Файл/Документ/ДвижениеДен/ИнвОпер/Поступ')

      if not GetStrNull('Файл/Документ/ДвижениеДен/ИнвОпер/Платеж/СумОтч')
      {
        #SetVisT('Файл/Документ/ДвижениеДен/ИнвОпер/Платеж'        )
        #IfVis  ('Файл/Документ/ДвижениеДен/ИнвОпер/Платеж/СумПред')

        DvigenieDen('Файл/Документ/ДвижениеДен/ИнвОпер/Платеж/ПриобрВнАктив');
        DvigenieDen('Файл/Документ/ДвижениеДен/ИнвОпер/Платеж/ПриобрАкцДр'  );
        DvigenieDen('Файл/Документ/ДвижениеДен/ИнвОпер/Платеж/ПриобрДолгЦБ' );
        DvigenieDen('Файл/Документ/ДвижениеДен/ИнвОпер/Платеж/ПроцДолгОб'   );
        DvigenieDen('Файл/Документ/ДвижениеДен/ИнвОпер/Платеж/ПрочПлатеж'   );
      }
      else #SetVisF('Файл/Документ/ДвижениеДен/ИнвОпер/Платеж')
    }
    else #SetVisF('Файл/Документ/ДвижениеДен/ИнвОпер')

    // Файл/Документ/ДвижениеДен/ФинОпер
    if not GetStrNull('Файл/Документ/ДвижениеДен/ФинОпер/СальдоФин/СумОтч')
    {
      #SetVisT('Файл/Документ/ДвижениеДен/ФинОпер'                  )
      #IfVis  ('Файл/Документ/ДвижениеДен/ФинОпер/СальдоФин/СумПред')

      if not GetStrNull('Файл/Документ/ДвижениеДен/ФинОпер/Поступ/СумОтч')
      {
        #SetVisT('Файл/Документ/ДвижениеДен/ФинОпер/Поступ'        )
        #IfVis  ('Файл/Документ/ДвижениеДен/ФинОпер/Поступ/СумПред')

        DvigenieDen('Файл/Документ/ДвижениеДен/ФинОпер/Поступ/КредЗайм'  );
        DvigenieDen('Файл/Документ/ДвижениеДен/ФинОпер/Поступ/ВкладСоб'  );
        DvigenieDen('Файл/Документ/ДвижениеДен/ФинОпер/Поступ/АкцДол'    );
        DvigenieDen('Файл/Документ/ДвижениеДен/ФинОпер/Поступ/ОблВексДр' );
        DvigenieDen('Файл/Документ/ДвижениеДен/ФинОпер/Поступ/ПрочПоступ');
      }
      else #SetVisF('Файл/Документ/ДвижениеДен/ФинОпер/Поступ')

      if not GetStrNull('Файл/Документ/ДвижениеДен/ФинОпер/Платеж/СумОтч')
      {
        #SetVisT('Файл/Документ/ДвижениеДен/ФинОпер/Платеж'        )
        #IfVis  ('Файл/Документ/ДвижениеДен/ФинОпер/Платеж/СумПред')

        DvigenieDen('Файл/Документ/ДвижениеДен/ФинОпер/Платеж/ВыкупАкц'  );
        DvigenieDen('Файл/Документ/ДвижениеДен/ФинОпер/Платеж/УплДивИн'  );
        DvigenieDen('Файл/Документ/ДвижениеДен/ФинОпер/Платеж/ВыкВексКЗ' );
        DvigenieDen('Файл/Документ/ДвижениеДен/ФинОпер/Платеж/ПрочПлатеж');
      }
      else #SetVisF('Файл/Документ/ДвижениеДен/ФинОпер/Платеж')

    }
    else #SetVisF('Файл/Документ/ДвижениеДен/ФинОпер')

    DvigenieDen('Файл/Документ/ДвижениеДен/ВлИзмКурс');
  }
  else #SetVisF('Файл/Документ/ДвижениеДен')
  //--------------------------------------------------------------------------------------------------------
  //#endregion Файл/Документ/ДвижениеДен
  //--------------------------------------------------------------------------------------------------------


  //--------------------------------------------------------------------------------------------------------
  //#region Файл/Документ/ЦелИсп
  //--------------------------------------------------------------------------------------------------------
  if     not GetStrNull('Файл/Документ/ЦелИсп/ОКУД'                 )
     and not GetStrNull('Файл/Документ/ЦелИсп/ОстатНачОтч/КодСтроки')
     and not GetStrNull('Файл/Документ/ЦелИсп/ОстатНачОтч/СумОтч'   )
     and not GetStrNull('Файл/Документ/ЦелИсп/ОстатКонОтч/КодСтроки')
     and not GetStrNull('Файл/Документ/ЦелИсп/ОстатКонОтч/СумОтч'   )
  {
    #SetVisT('Файл/Документ/ЦелИсп'                    )
    #IfVis  ('Файл/Документ/ЦелИсп/ОстатНачОтч/СумПред')
    #IfVis  ('Файл/Документ/ЦелИсп/ОстатКонОтч/СумПред')

    // Файл/Документ/ЦелИсп/Поступило
    if     not GetStrNull('Файл/Документ/ЦелИсп/Поступило/КодСтроки')
       and not GetStrNull('Файл/Документ/ЦелИсп/Поступило/СумОтч'   )
    {
      #SetVisT('Файл/Документ/ЦелИсп/Поступило'        )
      #IfVis  ('Файл/Документ/ЦелИсп/Поступило/СумПред')

      CelIspNode('Файл/Документ/ЦелИсп/Поступило/ВзносЦелПоступ');
      CelIspNode('Файл/Документ/ЦелИсп/Поступило/ПрибПредДеят'  );
      CelIspNode('Файл/Документ/ЦелИсп/Поступило/Прочие'        );
    }
    else #SetVisF('Файл/Документ/ЦелИсп/Поступило')

    // Файл/Документ/ЦелИсп/Использовано
    CelIspNode('Файл/Документ/ЦелИсп/Использовано/ЦелМер'   );
    CelIspNode('Файл/Документ/ЦелИсп/Использовано/СодеожОрг');
    CelIspNode('Файл/Документ/ЦелИсп/Использовано/ПриобОСИн');
    CelIspNode('Файл/Документ/ЦелИсп/Использовано/Прочие'   );

    if    not GetFldVis('Файл/Документ/ЦелИсп/Использовано/ЦелМер'   )
       or not GetFldVis('Файл/Документ/ЦелИсп/Использовано/СодеожОрг')
       or not GetFldVis('Файл/Документ/ЦелИсп/Использовано/ПриобОСИн')
       or not GetFldVis('Файл/Документ/ЦелИсп/Использовано/Прочие'   )
    then #SetVisT('Файл/Документ/ЦелИсп/Использовано')
    else #SetVisF('Файл/Документ/ЦелИсп/Использовано')
  }
  else #SetVisF('Файл/Документ/ЦелИсп')
  //--------------------------------------------------------------------------------------------------------
  //#endregion Файл/Документ/ЦелИсп
  //--------------------------------------------------------------------------------------------------------

  if     not GetStrNull('Файл/Документ/Пояснения/ОКУД'      )
     and not GetStrNull('Файл/Документ/Пояснения/НаимФайлПЗ')
  then #SetVisT('Файл/Документ/Пояснения')
  else #SetVisF('Файл/Документ/Пояснения')

  if not GetStrNull('Файл/Документ/АудитЗакл/НаимФайлАЗ')
  then #SetVisT('Файл/Документ/АудитЗакл')
  else #SetVisF('Файл/Документ/АудитЗакл')

  if not GetStrNull('Файл/Документ/ЗаявСХПр/НаимФайлЗСХП')
  then #SetVisT('Файл/Документ/ЗаявСХПр')
  else #SetVisF('Файл/Документ/ЗаявСХПр')
@end.
//#endregion ДЕЙСТВИЯ ВЫПОЛНЯЕМЫЕ ПРИ УСТАНОВКЕ ВИДИМОСТИ ПОЛЕЙ
//************************************************************************************************************


//============================================================================================================
//#region ДЕЙСТВИЯ ВЫПОЛНЯЕМЫЕ ПРИ ПРОВЕРКЕ
//------------------------------------------------------------------------------------------------------------
@Script On_Check : boolean;
  //==========================================================================================================
  //#region СЕРВИС On_Check
  //----------------------------------------------------------------------------------------------------------
  #include AllTaxObj.Vih

  procedure PribUbOb : boolean;
  {
    // Элемент обязателен, за исключением случая, когда <ОКОПФ> принимает следующие значения:
    // - в соответствии с ОКОПФ (ОК 028-99)
    //   71 | 74 | 76 | 77 | 78 | 80 | 81 | 82 | 83 | 84 | 85 | 86 | 88 | 89 | 93 | 94 | 96 | 97
    // - в соответствии с ОКОПФ (ОК 028-2012)
    //   20101 | 20102 | 20103 | 20104 | 20105 | 20106 | 20107 | 20108 | 20109 | 20110 | 20111 | 20112 | 20113 | 20114 | 20115 | 20120 | 20121 | 20200 | 20201 | 20202 | 20210 | 20211 | 20217 | 20601 | 20603 |
    //   20604 | 20605 | 20606 | 20607 | 20608 | 20611 | 20612 | 20613 | 20614 | 20617 | 20618 | 20619 | 20620 | 20701 | 20716 | 20900 | 20902 | 20904 | 20905 | 20906 | 20908 | 21001 | 21002 | 21003 | 21100 | 21200

    var OKOPF : string; OKOPF:='';
    OKOPF := GetStrVal('Файл/Документ/СвНП/ОКОПФ');

    Result := not   (OKOPF='71' or OKOPF='74' or OKOPF='76' or OKOPF='77' or OKOPF='78' or OKOPF='80' or OKOPF='81' or OKOPF='82' or OKOPF='83' or OKOPF='84'
                  or OKOPF='85' or OKOPF='86' or OKOPF='88' or OKOPF='89' or OKOPF='93' or OKOPF='94' or OKOPF='96' or OKOPF='97'

                  or OKOPF='20101' or OKOPF='20102' or OKOPF='20103' or OKOPF='20104' or OKOPF='20105' or OKOPF='20106' or OKOPF='20107' or OKOPF='20108' or OKOPF='20109' or OKOPF='20110'
                  or OKOPF='20111' or OKOPF='20112' or OKOPF='20113' or OKOPF='20114' or OKOPF='20115' or OKOPF='20120' or OKOPF='20121' or OKOPF='20200' or OKOPF='20201' or OKOPF='20202'
                  or OKOPF='20210' or OKOPF='20211' or OKOPF='20217' or OKOPF='20601' or OKOPF='20603' or OKOPF='20604' or OKOPF='20605' or OKOPF='20606' or OKOPF='20607' or OKOPF='20608'
                  or OKOPF='20611' or OKOPF='20612' or OKOPF='20613' or OKOPF='20614' or OKOPF='20617' or OKOPF='20618' or OKOPF='20619' or OKOPF='20620' or OKOPF='20701' or OKOPF='20716'
                  or OKOPF='20900' or OKOPF='20902' or OKOPF='20904' or OKOPF='20905' or OKOPF='20906' or OKOPF='20908' or OKOPF='21001' or OKOPF='21002' or OKOPF='21003' or OKOPF='21100'
                  or OKOPF='21200');
  }

  procedure SvPredOb : boolean;
  {
    // СвПред
    // Элемент обязателен при <ПрПодп> = 2

    Result := (GetStrVal('Файл/Документ/Подписант/ПрПодп') = '2');
  }

  function IsValidPeriod(strIn: string; var strGetMes: string) : boolean;
  begin
    //Налоговый период
    //Период
    strGetMes := 'Возможные значения: 34, 90, 94';

    Result := False;
    Result :=
    (
         (strIn = '34') or (strIn = '90') or (strIn = '94')
    );
  end;

  function IsValidOKEI_Local(strIn: string; var strGetMes: string) : boolean;
  begin
    //Код из Общероссийского классификатора единиц измерения
    //ОКЕИ
    strGetMes := 'Возможные значения: 384, 385';

    Result := False;
    Result :=
    (
         (strIn = '384') or (strIn = '385')
    );
  end;

  #undef  nVal
  #define nVal(_Validator, _AdrXML) not #_Validator(GetStrVal(#_AdrXML), getMes)

  #undef  nValLStr4
  #define nValLStr4(_AdrXML) not IsValidLenStr(GetStrVal(#_AdrXML), 1,  4, getMes)

  #undef  nValLNum12T
  #define nValLNum12T(_AdrXML) not IsValidLenNumber(GetStrVal(#_AdrXML), 1, 12, getMes, True)

  #undef   _NoKor
  #declare _NoKor(_AdrXML, _Pole)
    MessageErrorStop_ALG
    (
      #_AdrXML,
      NameStr,
      #_Pole,
      'Поле не соответствует формату. ' + getMes
    );
  #end

  procedure ValidOPP(XMLAdr, NameStr, NamePole: string);
  begin
    if GetFldVis(XMLAdr)
    {
      var getMes: string;

      if GetFldVis(XMLAdr+'/Пояснения') if #nValLStr4  (XMLAdr+'/Пояснения') #_NoKor(XMLAdr+'/Пояснения', '"'+NamePole+'", гр. 1');
                                        if #nValLStr4  (XMLAdr+'/КодСтроки') #_NoKor(XMLAdr+'/КодСтроки', '"'+NamePole+'", гр. 3');
                                        if #nValLNum12T(XMLAdr+'/СумОтч'   ) #_NoKor(XMLAdr+'/СумОтч'   , '"'+NamePole+'", гр. 4');
      if GetFldVis(XMLAdr+'/СумПрдщ'  ) if #nValLNum12T(XMLAdr+'/СумПрдщ'  ) #_NoKor(XMLAdr+'/СумПрдщ'  , '"'+NamePole+'", гр. 5');
      if GetFldVis(XMLAdr+'/СумПрдшв' ) if #nValLNum12T(XMLAdr+'/СумПрдшв' ) #_NoKor(XMLAdr+'/СумПрдшв' , '"'+NamePole+'", гр. 6');
    }
  end;

  procedure OtchPredNTip(XMLAdr, NameStr, NamePole: string);
  begin
    if GetFldVis(XMLAdr)
    {
      var getMes: string;

      if GetFldVis(XMLAdr+'/Пояснения') if #nValLStr4  (XMLAdr+'/Пояснения') #_NoKor(XMLAdr+'/Пояснения', 'Стр. '+NamePole+', гр. 1');
                                        if #nValLStr4  (XMLAdr+'/КодСтроки') #_NoKor(XMLAdr+'/КодСтроки', 'Стр. '+NamePole+', гр. 3');
                                        if #nValLNum12T(XMLAdr+'/СумОтч'   ) #_NoKor(XMLAdr+'/СумОтч'   , 'Стр. '+NamePole+', гр. 4');
      if GetFldVis(XMLAdr+'/СумПред'  ) if #nValLNum12T(XMLAdr+'/СумПред'  ) #_NoKor(XMLAdr+'/СумПред'  , 'Стр. '+NamePole+', гр. 5');
    }
  end;

  procedure OtchPredOTip(XMLAdr, NameStr, NamePole: string);
  begin
    if GetFldVis(XMLAdr)
    {
      var getMes: string;

      if GetFldVis(XMLAdr+'/Пояснения') if #nValLStr4  (XMLAdr+'/Пояснения') #_NoKor(XMLAdr+'/Пояснения', 'Стр. '+NamePole+', гр. 1');
                                        if #nValLStr4  (XMLAdr+'/КодСтроки') #_NoKor(XMLAdr+'/КодСтроки', 'Стр. '+NamePole+', гр. 3');
                                        if #nValLNum12T(XMLAdr+'/СумОтч'   ) #_NoKor(XMLAdr+'/СумОтч'   , 'Стр. '+NamePole+', гр. 4');
                                        if #nValLNum12T(XMLAdr+'/СумПред'  ) #_NoKor(XMLAdr+'/СумПред'  , 'Стр. '+NamePole+', гр. 5');
    }
  end;

  procedure OtchetIzmKap(XMLAdr, NameStr, NamePole : string; f1, f2, f3, f4, f5, f6 : boolean);
  begin
    if GetFldVis(XMLAdr)
    {
      var getMes: string;

      if f1                                     if #nValLNum12T(XMLAdr+'/УстКапитал' ) #_NoKor(XMLAdr+'/УстКапитал' , 'Стр. '+NamePole+', гр. 1');
      if f2 if GetFldVis(XMLAdr+'/СобВыкупАкц') if #nValLNum12T(XMLAdr+'/СобВыкупАкц') #_NoKor(XMLAdr+'/СобВыкупАкц', 'Стр. '+NamePole+', гр. 2');
      if f3 if GetFldVis(XMLAdr+'/ДобКапитал' ) if #nValLNum12T(XMLAdr+'/ДобКапитал' ) #_NoKor(XMLAdr+'/ДобКапитал' , 'Стр. '+NamePole+', гр. 3');
      if f4 if GetFldVis(XMLAdr+'/РезКапитал' ) if #nValLNum12T(XMLAdr+'/РезКапитал' ) #_NoKor(XMLAdr+'/РезКапитал' , 'Стр. '+NamePole+', гр. 4');
      if f5 if GetFldVis(XMLAdr+'/НераспПриб' ) if #nValLNum12T(XMLAdr+'/НераспПриб' ) #_NoKor(XMLAdr+'/НераспПриб' , 'Стр. '+NamePole+', гр. 5');
      if f6                                     if #nValLNum12T(XMLAdr+'/Итог'       ) #_NoKor(XMLAdr+'/Итог'       , 'Стр. '+NamePole+', гр. 6');
    }
  end;

  procedure Korrekt(XMLAdr, NameStr, NamePole : string);
  begin
    if GetFldVis(XMLAdr)
    {
      var getMes: string;

      if GetFldVis(XMLAdr+'/На31ДекПрПред') if #nValLNum12T(XMLAdr+'/На31ДекПрПред') #_NoKor(XMLAdr+'/На31ДекПрПред', 'Стр. '+NamePole+', гр. 3');
                                            if #nValLNum12T(XMLAdr+'/ИзмКапЧистПр' ) #_NoKor(XMLAdr+'/ИзмКапЧистПр' , 'Стр. '+NamePole+', гр. 4');
                                            if #nValLNum12T(XMLAdr+'/ИзмКапИнФакт' ) #_NoKor(XMLAdr+'/ИзмКапИнФакт' , 'Стр. '+NamePole+', гр. 5');
                                            if #nValLNum12T(XMLAdr+'/На31ДекПред'  ) #_NoKor(XMLAdr+'/На31ДекПред'  , 'Стр. '+NamePole+', гр. 6');
    }
  end;

  procedure DvigenieDen(XMLAdr, NameStr, NamePole : string);
  begin
    if GetFldVis(XMLAdr)
    {
      var getMes: string;

                                      if #nValLNum12T(XMLAdr+'/СумОтч' ) #_NoKor(XMLAdr+'/СумОтч' , 'Стр. '+NamePole+', гр. 3');
      if GetFldVis(XMLAdr+'/СумПред') if #nValLNum12T(XMLAdr+'/СумПред') #_NoKor(XMLAdr+'/СумПред', 'Стр. '+NamePole+', гр. 4');
    }
  end;

  procedure CelIsp(XMLAdr, NameStr, NamePole : string);
  begin
    if GetFldVis(XMLAdr)
    {
      var getMes: string;

                                      if #nValLStr4  (XMLAdr+'/КодСтроки') #_NoKor(XMLAdr+'/КодСтроки', '"'+NamePole+'", гр. 2');
                                      if #nValLNum12T(XMLAdr+'/СумОтч'   ) #_NoKor(XMLAdr+'/СумОтч'   , '"'+NamePole+'", гр. 3');
      if GetFldVis(XMLAdr+'/СумПред') if #nValLNum12T(XMLAdr+'/СумПред'  ) #_NoKor(XMLAdr+'/СумПред'  , '"'+NamePole+'", гр. 4');
    }
  end;
  //#endregion СЕРВИС On_Check
  //**********************************************************************************************************
@begin
  var NameStr, getMes: string = '';

  //==========================================================================================================
  //#region ОБЯЗАТЕЛЬНЫЕ
  //----------------------------------------------------------------------------------------------------------
    //----------------------------------------------------------------------------------------------------------
    //#region 00 СТРУКТУРА
    //----------------------------------------------------------------------------------------------------------
    NameStr := pFH.Func('myGet_Struct');
    if not IsValidKND (GetStrVal('Файл/Документ/КНД'             ),'0710096', getMes) #_NoKor('Файл/Документ/КНД'             , 'Код налоговой декларации');
    if not IsValidOKUD(GetStrVal('Файл/Документ/Баланс/ОКУД'     ),'0710001', getMes) #_NoKor('Файл/Документ/Баланс/ОКУД'     , 'Код ОКУД'                );
    if not IsValidOKUD(GetStrVal('Файл/Документ/ПрибУб/ОКУД'     ),'0710002', getMes) #_NoKor('Файл/Документ/ПрибУб/ОКУД'     , 'Код ОКУД'                );
    if not IsValidOKUD(GetStrVal('Файл/Документ/ОтчетИзмКап/ОКУД'),'0710003', getMes) #_NoKor('Файл/Документ/ОтчетИзмКап/ОКУД', 'Код ОКУД'                );
    if not IsValidOKUD(GetStrVal('Файл/Документ/ДвижениеДен/ОКУД'),'0710004', getMes) #_NoKor('Файл/Документ/ДвижениеДен/ОКУД', 'Код ОКУД'                );
    if not IsValidOKUD(GetStrVal('Файл/Документ/ЦелИсп/ОКУД'     ),'0710006', getMes) #_NoKor('Файл/Документ/ЦелИсп/ОКУД'     , 'Код ОКУД'                );
    if not IsValidOKUD(GetStrVal('Файл/Документ/Пояснения/ОКУД'  ),'0710005', getMes) #_NoKor('Файл/Документ/Пояснения/ОКУД'  , 'Код ОКУД'                );
    //#endregion 00 СТРУКТУРА
    //----------------------------------------------------------------------------------------------------------


    //----------------------------------------------------------------------------------------------------------
    //#region 01 ТИТУЛЬНЫЙ ЛИСТ
    //----------------------------------------------------------------------------------------------------------
    NameStr := pFH.Func('myGetP01');
    if #nVal(IsValidDate      , 'Файл/Документ/ДатаДок'   ) #_NoKor('Файл/Документ/ДатаДок'   , 'Дата документа'     );
    if #nVal(IsValidPeriod    , 'Файл/Документ/Период'    ) #_NoKor('Файл/Документ/Период'    , 'Период'             );
    if #nVal(IsValidOtchGod   , 'Файл/Документ/ОтчетГод'  ) #_NoKor('Файл/Документ/ОтчетГод'  , 'Отчетный год'       );
    if #nVal(IsValidNomKorr   , 'Файл/Документ/НомКорр'   ) #_NoKor('Файл/Документ/НомКорр'   , 'Номер корректировки');
    if #nVal(IsValidOKEI_Local, 'Файл/Документ/ОКЕИ'      ) #_NoKor('Файл/Документ/ОКЕИ'      , 'Код ОКЕИ'           );
    if #nVal(IsValidOKVED     , 'Файл/Документ/СвНП/ОКВЭД') #_NoKor('Файл/Документ/СвНП/ОКВЭД', 'Код ОКВЭД'          );
    if #nVal(IsValidOKOPF     , 'Файл/Документ/СвНП/ОКОПФ') #_NoKor('Файл/Документ/СвНП/ОКОПФ', 'Код ОКОПФ'          );
    if #nVal(IsValidOKFS      , 'Файл/Документ/СвНП/ОКФС' ) #_NoKor('Файл/Документ/СвНП/ОКФС' , 'Код ОКФС'           );

    if not GetStrNull('Файл/Документ/ДатаУтвОтч')
      if #nVal(IsValidDate, 'Файл/Документ/ДатаУтвОтч')
        #_NoKor('Файл/Документ/ДатаУтвОтч', 'Дата утверждения отчетности');

    if not GetStrNull('Файл/Документ/СвНП/ОКПО')
      if #nVal(IsValidOKPO, 'Файл/Документ/СвНП/ОКПО')
        #_NoKor('Файл/Документ/СвНП/ОКПО', 'Код ОКПО');

    if #nVal(IsValidNaimOrg, 'Файл/Документ/СвНП/НПЮЛ/НаимОрг') #_NoKor('Файл/Документ/СвНП/НПЮЛ/НаимОрг', 'Наименование организации');
    if #nVal(IsValidINNUL  , 'Файл/Документ/СвНП/НПЮЛ/ИННЮЛ'  ) #_NoKor('Файл/Документ/СвНП/НПЮЛ/ИННЮЛ'  , 'ИНН'                     );
    if #nVal(IsValidKPP    , 'Файл/Документ/СвНП/НПЮЛ/КПП'    ) #_NoKor('Файл/Документ/СвНП/НПЮЛ/КПП'    , 'КПП'                     );
    if #nVal(IsValidPrPodp , 'Файл/Документ/Подписант/ПрПодп' ) #_NoKor('Файл/Документ/Подписант/ПрПодп' , 'Признак подписанта'      );

    if #nVal(IsValidFIO, 'Файл/Документ/Подписант/ФИО/Фамилия') #_NoKor('Файл/Документ/Подписант/ФИО/Фамилия', 'Фамилия руководителя');
    if #nVal(IsValidFIO, 'Файл/Документ/Подписант/ФИО/Имя'    ) #_NoKor('Файл/Документ/Подписант/ФИО/Имя'    , 'Имя руководителя'    );
    if not GetStrNull('Файл/Документ/Подписант/ФИО/Отчество')
      if #nVal(IsValidFIO, 'Файл/Документ/Подписант/ФИО/Отчество')
        #_NoKor('Файл/Документ/Подписант/ФИО/Отчество', 'Отчество руководителя');
    //#endregion 01 ТИТУЛЬНЫЙ ЛИСТ
    //----------------------------------------------------------------------------------------------------------


    //----------------------------------------------------------------------------------------------------------
    //#region 02 МЕСТОНАХОЖДЕНИЕ (АДРЕС)
    //----------------------------------------------------------------------------------------------------------
    NameStr := pFH.Func('myGetP02');
                                                                  if not IsValidSSRF  (GetStrVal('Файл/Документ/СвНП/НПЮЛ/АдрРФ/КодРегион' ),        getMes) #_NoKor('Файл/Документ/СвНП/НПЮЛ/АдрРФ/КодРегион' , 'Субъект РФ (код)');
    if not GetStrNull('Файл/Документ/СвНП/НПЮЛ/АдрРФ/Индекс'    ) if not IsValidIndex (GetStrVal('Файл/Документ/СвНП/НПЮЛ/АдрРФ/Индекс'    ),        getMes) #_NoKor('Файл/Документ/СвНП/НПЮЛ/АдрРФ/Индекс'    , 'Почтовый индекс' );
    if not GetStrNull('Файл/Документ/СвНП/НПЮЛ/АдрРФ/Район'     ) if not IsValidLenStr(GetStrVal('Файл/Документ/СвНП/НПЮЛ/АдрРФ/Район'     ), 1, 50, getMes) #_NoKor('Файл/Документ/СвНП/НПЮЛ/АдрРФ/Район'     , 'Район'           );
    if not GetStrNull('Файл/Документ/СвНП/НПЮЛ/АдрРФ/Город'     ) if not IsValidLenStr(GetStrVal('Файл/Документ/СвНП/НПЮЛ/АдрРФ/Город'     ), 1, 50, getMes) #_NoKor('Файл/Документ/СвНП/НПЮЛ/АдрРФ/Город'     , 'Город'           );
    if not GetStrNull('Файл/Документ/СвНП/НПЮЛ/АдрРФ/НаселПункт') if not IsValidLenStr(GetStrVal('Файл/Документ/СвНП/НПЮЛ/АдрРФ/НаселПункт'), 1, 50, getMes) #_NoKor('Файл/Документ/СвНП/НПЮЛ/АдрРФ/НаселПункт', 'Населенный пункт');
    if not GetStrNull('Файл/Документ/СвНП/НПЮЛ/АдрРФ/Улица'     ) if not IsValidLenStr(GetStrVal('Файл/Документ/СвНП/НПЮЛ/АдрРФ/Улица'     ), 1, 50, getMes) #_NoKor('Файл/Документ/СвНП/НПЮЛ/АдрРФ/Улица'     , 'Улица'           );
    if not GetStrNull('Файл/Документ/СвНП/НПЮЛ/АдрРФ/Дом'       ) if not IsValidLenStr(GetStrVal('Файл/Документ/СвНП/НПЮЛ/АдрРФ/Дом'       ), 1, 20, getMes) #_NoKor('Файл/Документ/СвНП/НПЮЛ/АдрРФ/Дом'       , 'Номер дома'      );
    if not GetStrNull('Файл/Документ/СвНП/НПЮЛ/АдрРФ/Корпус'    ) if not IsValidLenStr(GetStrVal('Файл/Документ/СвНП/НПЮЛ/АдрРФ/Корпус'    ), 1, 20, getMes) #_NoKor('Файл/Документ/СвНП/НПЮЛ/АдрРФ/Корпус'    , 'Номер корпуса'   );
    if not GetStrNull('Файл/Документ/СвНП/НПЮЛ/АдрРФ/Кварт'     ) if not IsValidLenStr(GetStrVal('Файл/Документ/СвНП/НПЮЛ/АдрРФ/Кварт'     ), 1, 20, getMes) #_NoKor('Файл/Документ/СвНП/НПЮЛ/АдрРФ/Кварт'     , 'Квартира'        );
    //#endregion 02 МЕСТОНАХОЖДЕНИЕ (АДРЕС)
    //----------------------------------------------------------------------------------------------------------


    //----------------------------------------------------------------------------------------------------------
    //#region 03 БУХГАЛТЕРСКИЙ БАЛАНС
    //----------------------------------------------------------------------------------------------------------
    NameStr := pFH.Func('myGetP03');

    if not GetStrNull('Файл/Документ/Баланс/Актив/Пояснения' ) if #nValLStr4  ('Файл/Документ/Баланс/Актив/Пояснения' ) #_NoKor('Файл/Документ/Баланс/Актив/Пояснения' , '"Актив", гр. 1' );
                                                               if #nValLStr4  ('Файл/Документ/Баланс/Актив/КодСтроки' ) #_NoKor('Файл/Документ/Баланс/Актив/КодСтроки' , '"Актив", гр. 3' );
                                                               if #nValLNum12T('Файл/Документ/Баланс/Актив/СумОтч'    ) #_NoKor('Файл/Документ/Баланс/Актив/СумОтч'    , '"Актив", гр. 4' );
                                                               if #nValLNum12T('Файл/Документ/Баланс/Актив/СумПрдщ'   ) #_NoKor('Файл/Документ/Баланс/Актив/СумПрдщ'   , '"Актив", гр. 5' );
                                                               if #nValLNum12T('Файл/Документ/Баланс/Актив/СумПрдшв'  ) #_NoKor('Файл/Документ/Баланс/Актив/СумПрдшв'  , '"Актив", гр. 6' );
    if not GetStrNull('Файл/Документ/Баланс/Пассив/Пояснения') if #nValLStr4  ('Файл/Документ/Баланс/Пассив/Пояснения') #_NoKor('Файл/Документ/Баланс/Пассив/Пояснения', '"Пассив", гр. 1');
                                                               if #nValLStr4  ('Файл/Документ/Баланс/Пассив/КодСтроки') #_NoKor('Файл/Документ/Баланс/Пассив/КодСтроки', '"Пассив", гр. 3');
                                                               if #nValLNum12T('Файл/Документ/Баланс/Пассив/СумОтч'   ) #_NoKor('Файл/Документ/Баланс/Пассив/СумОтч'   , '"Пассив", гр. 4');
                                                               if #nValLNum12T('Файл/Документ/Баланс/Пассив/СумПрдщ'  ) #_NoKor('Файл/Документ/Баланс/Пассив/СумПрдщ'  , '"Пассив", гр. 5');
                                                               if #nValLNum12T('Файл/Документ/Баланс/Пассив/СумПрдшв' ) #_NoKor('Файл/Документ/Баланс/Пассив/СумПрдшв' , '"Пассив", гр. 6');
    //#endregion 03 БУХГАЛТЕРСКИЙ БАЛАНС
    //----------------------------------------------------------------------------------------------------------
  //#endregion ОБЯЗАТЕЛЬНЫЕ
  //**********************************************************************************************************


  //==========================================================================================================
  //#region НЕ ОБЯЗАТЕЛЬНЫЕ
  //----------------------------------------------------------------------------------------------------------
    //----------------------------------------------------------------------------------------------------------
    //#region 01 ТИТУЛЬНЫЙ ЛИСТ
    //----------------------------------------------------------------------------------------------------------
    NameStr := pFH.Func('myGetP01');

    if SvPredOb and not GetFldVis('Файл/Документ/Подписант/СвПред')
      MessageErrorStop_ALG (
        'Файл/Документ/Подписант/СвПред/НаимДок',
        NameStr,
        'Сведения представителя',
        'Раздел обязателен при "Признак подписанта" = 2'
      );

    if GetFldVis('Файл/Документ/Подписант/СвПред')
      if #nVal(IsValidNaimDok, 'Файл/Документ/Подписант/СвПред/НаимДок')
        #_NoKor('Файл/Документ/Подписант/СвПред/НаимДок', 'Наименование документа');
    //#endregion 01 ТИТУЛЬНЫЙ ЛИСТ
    //----------------------------------------------------------------------------------------------------------


    //----------------------------------------------------------------------------------------------------------
    //#region 03 БУХГАЛТЕРСКИЙ БАЛАНС
    //----------------------------------------------------------------------------------------------------------
    NameStr := pFH.Func('myGetP03');

    ValidOPP('Файл/Документ/Баланс/Актив/МатВнеАкт'      , NameStr, 'Материальные внеоборотные активы'                                         );
    ValidOPP('Файл/Документ/Баланс/Актив/НеМатФинАкт'    , NameStr, 'Нематериальные, финансовые и другие внеоборотные активы'                  );
    ValidOPP('Файл/Документ/Баланс/Актив/Запасы'         , NameStr, 'Запасы'                                                                   );
    ValidOPP('Файл/Документ/Баланс/Актив/ДенежнСр'       , NameStr, 'Денежные средства и денежные эквиваленты'                                 );
    ValidOPP('Файл/Документ/Баланс/Актив/ФинВлож'        , NameStr, 'Финансовые и другие оборотные активы'                                     );
    ValidOPP('Файл/Документ/Баланс/Пассив/КапРез'        , NameStr, 'Капитал и резервы'                                                        );
    ValidOPP('Файл/Документ/Баланс/Пассив/ЦелевСредства' , NameStr, 'Целевые средства'                                                         );
    ValidOPP('Файл/Документ/Баланс/Пассив/ФондИмущИнЦФ'  , NameStr, 'Фонд недвижимого и особо ценного движимого имущества и иные целевые фонды');
    ValidOPP('Файл/Документ/Баланс/Пассив/ДлгЗаемСредств', NameStr, 'Долгосрочные заемные средства'                                            );
    ValidOPP('Файл/Документ/Баланс/Пассив/ДрДолгосрОбяз' , NameStr, 'Другие долгосрочные обязательства'                                        );
    ValidOPP('Файл/Документ/Баланс/Пассив/КртЗаемСредств', NameStr, 'Краткосрочные заемные средства'                                           );
    ValidOPP('Файл/Документ/Баланс/Пассив/КредитЗадолж'  , NameStr, 'Кредиторская задолженность'                                               );
    ValidOPP('Файл/Документ/Баланс/Пассив/ДрКраткосрОбяз', NameStr, 'Другие краткосрочные обязательства'                                       );
    //#endregion 03 БУХГАЛТЕРСКИЙ БАЛАНС
    //----------------------------------------------------------------------------------------------------------


    //----------------------------------------------------------------------------------------------------------
    //#region 04 ОТЧЕТ О ФИНАНСОВЫХ РЕЗУЛЬТАТАХ
    //----------------------------------------------------------------------------------------------------------
    NameStr := pFH.Func('myGetP04');

    if PribUbOb and not GetFldVis('Файл/Документ/ПрибУб')
      MessageErrorStop_ALG (
        'Файл/Документ/ПрибУб',
        NameStr,
        'Раздел',
        'Раздел обязателен при определенных значениях поля ОКОПФ (прим.: 71, 74, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 88, 89, 93, 94, 96, 97 и т.д.)'
      );

    if GetFldVis('Файл/Документ/ПрибУб')
    {
      OtchPredNTip('Файл/Документ/ПрибУб/Выруч'     , NameStr, 'Выручка'                        );
      OtchPredNTip('Файл/Документ/ПрибУб/РасхОбДеят', NameStr, 'Расходы по обычной деятельности');
      OtchPredNTip('Файл/Документ/ПрибУб/ПроцУпл'   , NameStr, 'Проценты к уплате'              );
      OtchPredNTip('Файл/Документ/ПрибУб/ПрочДоход' , NameStr, 'Прочие доходы'                  );
      OtchPredNTip('Файл/Документ/ПрибУб/ПрочРасход', NameStr, 'Прочие расходы'                 );
      OtchPredNTip('Файл/Документ/ПрибУб/НалПрибДох', NameStr, 'Налоги на прибыль (доходы)'     );
      OtchPredOTip('Файл/Документ/ПрибУб/ЧистПрибУб', NameStr, 'Чистая прибыль (убыток)'        );
    }
    //#endregion 04 ОТЧЕТ О ФИНАНСОВЫХ РЕЗУЛЬТАТАХ
    //----------------------------------------------------------------------------------------------------------


    //----------------------------------------------------------------------------------------------------------
    //#region 05-07 ОТЧЕТ ОБ ИЗМЕНЕНИЯХ КАПИТАЛА (СТР. 1, 2, 3)
    //----------------------------------------------------------------------------------------------------------
    if GetFldVis('Файл/Документ/ОтчетИзмКап')
    {
      if GetFldVis('Файл/Документ/ОтчетИзмКап/ДвиженКап')
      {
        NameStr := pFH.Func('myGetP05');

          OtchetIzmKap('Файл/Документ/ОтчетИзмКап/ДвиженКап/Кап31ДекПред'                        , NameStr, '3100', true , true , true , true , true , true );

        if GetFldVis('Файл/Документ/ОтчетИзмКап/ДвиженКап/ПредГод/УвеличКапитал')
        {
          OtchetIzmKap('Файл/Документ/ОтчетИзмКап/ДвиженКап/ПредГод/УвеличКапитал/УвеличКапВс'   , NameStr, '3210', true , true , true , true , true , true );
          OtchetIzmKap('Файл/Документ/ОтчетИзмКап/ДвиженКап/ПредГод/УвеличКапитал/ЧистПриб'      , NameStr, '3211', false, false, false, false, true , true );
          OtchetIzmKap('Файл/Документ/ОтчетИзмКап/ДвиженКап/ПредГод/УвеличКапитал/ПереоцИмущ'    , NameStr, '3212', false, false, true , false, true , true );
          OtchetIzmKap('Файл/Документ/ОтчетИзмКап/ДвиженКап/ПредГод/УвеличКапитал/ДохУвелКап'    , NameStr, '3213', false, false, true , false, true , true );
          OtchetIzmKap('Файл/Документ/ОтчетИзмКап/ДвиженКап/ПредГод/УвеличКапитал/ДопВыпАкций'   , NameStr, '3214', true , true , true , false, false, true );
          OtchetIzmKap('Файл/Документ/ОтчетИзмКап/ДвиженКап/ПредГод/УвеличКапитал/УвеличНомАкц'  , NameStr, '3215', true , true , true , false, true , false);
          OtchetIzmKap('Файл/Документ/ОтчетИзмКап/ДвиженКап/ПредГод/УвеличКапитал/Реорганизация' , NameStr, '3216', true , true , true , true , true , true );
        }

        if GetFldVis('Файл/Документ/ОтчетИзмКап/ДвиженКап/ПредГод/УменКапитал')
        {
          OtchetIzmKap('Файл/Документ/ОтчетИзмКап/ДвиженКап/ПредГод/УменКапитал/УменКапВс'       , NameStr, '3220', true , true , true , true , true , true );
          OtchetIzmKap('Файл/Документ/ОтчетИзмКап/ДвиженКап/ПредГод/УменКапитал/Убыток'          , NameStr, '3221', false, false, false, false, true , true );
          OtchetIzmKap('Файл/Документ/ОтчетИзмКап/ДвиженКап/ПредГод/УменКапитал/ПереоцИмущ'      , NameStr, '3222', false, false, true , false, true , true );
          OtchetIzmKap('Файл/Документ/ОтчетИзмКап/ДвиженКап/ПредГод/УменКапитал/РасхУменКап'     , NameStr, '3223', false, false, true , false, true , true );
          OtchetIzmKap('Файл/Документ/ОтчетИзмКап/ДвиженКап/ПредГод/УменКапитал/УменНомАкц'      , NameStr, '3224', true , true , true , false, true , true );
          OtchetIzmKap('Файл/Документ/ОтчетИзмКап/ДвиженКап/ПредГод/УменКапитал/УменКолАкций'    , NameStr, '3225', true , true , true , false, true , true );
          OtchetIzmKap('Файл/Документ/ОтчетИзмКап/ДвиженКап/ПредГод/УменКапитал/Реорганизация'   , NameStr, '3226', true , true , true , true , true , true );
          OtchetIzmKap('Файл/Документ/ОтчетИзмКап/ДвиженКап/ПредГод/УменКапитал/Дивиденды'       , NameStr, '3227', false, false, false, false, true , true );
        }

          OtchetIzmKap('Файл/Документ/ОтчетИзмКап/ДвиженКап/ПредГод/ИзмДобавКап'                 , NameStr, '3230', false, false, true , true , true , false);
          OtchetIzmKap('Файл/Документ/ОтчетИзмКап/ДвиженКап/ПредГод/ИзмРезервКап'                , NameStr, '3240', false, false, false, true , true , false);

        NameStr := pFH.Func('myGetP06');

          OtchetIzmKap('Файл/Документ/ОтчетИзмКап/ДвиженКап/ПредГод/Кап31дек'                    , NameStr, '3200', true , true , true , true , true , true );

        if GetFldVis('Файл/Документ/ОтчетИзмКап/ДвиженКап/ОтчетГод/УвеличКапитал')
        {
          OtchetIzmKap('Файл/Документ/ОтчетИзмКап/ДвиженКап/ОтчетГод/УвеличКапитал/УвеличКапВс'  , NameStr, '3310', true , true , true , true , true , true );
          OtchetIzmKap('Файл/Документ/ОтчетИзмКап/ДвиженКап/ОтчетГод/УвеличКапитал/ЧистПриб'     , NameStr, '3311', false, false, false, false, true , true );
          OtchetIzmKap('Файл/Документ/ОтчетИзмКап/ДвиженКап/ОтчетГод/УвеличКапитал/ПереоцИмущ'   , NameStr, '3312', false, false, true , false, true , true );
          OtchetIzmKap('Файл/Документ/ОтчетИзмКап/ДвиженКап/ОтчетГод/УвеличКапитал/ДохУвелКап'   , NameStr, '3313', false, false, true , false, true , true );
          OtchetIzmKap('Файл/Документ/ОтчетИзмКап/ДвиженКап/ОтчетГод/УвеличКапитал/ДопВыпАкций'  , NameStr, '3314', true , true , true , false, false, true );
          OtchetIzmKap('Файл/Документ/ОтчетИзмКап/ДвиженКап/ОтчетГод/УвеличКапитал/УвеличНомАкц' , NameStr, '3315', true , true , true , false, true , false);
          OtchetIzmKap('Файл/Документ/ОтчетИзмКап/ДвиженКап/ОтчетГод/УвеличКапитал/Реорганизация', NameStr, '3316', true , true , true , true , true , true );
        }

        if GetFldVis('Файл/Документ/ОтчетИзмКап/ДвиженКап/ОтчетГод/УменКапитал')
        {
          OtchetIzmKap('Файл/Документ/ОтчетИзмКап/ДвиженКап/ОтчетГод/УменКапитал/УменКапВс'      , NameStr, '3320', true , true , true , true , true , true );
          OtchetIzmKap('Файл/Документ/ОтчетИзмКап/ДвиженКап/ОтчетГод/УменКапитал/Убыток'         , NameStr, '3321', false, false, false, false, true , true );
          OtchetIzmKap('Файл/Документ/ОтчетИзмКап/ДвиженКап/ОтчетГод/УменКапитал/ПереоцИмущ'     , NameStr, '3322', false, false, true , false, true , true );
          OtchetIzmKap('Файл/Документ/ОтчетИзмКап/ДвиженКап/ОтчетГод/УменКапитал/РасхУменКап'    , NameStr, '3323', false, false, true , false, true , true );
          OtchetIzmKap('Файл/Документ/ОтчетИзмКап/ДвиженКап/ОтчетГод/УменКапитал/УменНомАкц'     , NameStr, '3324', true , true , true , false, true , true );
          OtchetIzmKap('Файл/Документ/ОтчетИзмКап/ДвиженКап/ОтчетГод/УменКапитал/УменКолАкций'   , NameStr, '3325', true , true , true , false, true , true );
          OtchetIzmKap('Файл/Документ/ОтчетИзмКап/ДвиженКап/ОтчетГод/УменКапитал/Реорганизация'  , NameStr, '3326', true , true , true , true , true , true );
          OtchetIzmKap('Файл/Документ/ОтчетИзмКап/ДвиженКап/ОтчетГод/УменКапитал/Дивиденды'      , NameStr, '3327', false, false, false, false, true , true );
        }

          OtchetIzmKap('Файл/Документ/ОтчетИзмКап/ДвиженКап/ОтчетГод/ИзмДобавКап'                , NameStr, '3330', false, false, true , true , true , false);
          OtchetIzmKap('Файл/Документ/ОтчетИзмКап/ДвиженКап/ОтчетГод/ИзмРезервКап'               , NameStr, '3340', false, false, false, true , true , false);
          OtchetIzmKap('Файл/Документ/ОтчетИзмКап/ДвиженКап/ОтчетГод/Кап31дек'                   , NameStr, '3300', true , true , true , true , true , true );
      }

      NameStr := pFH.Func('myGetP07');

      if GetFldVis('Файл/Документ/ОтчетИзмКап/Коррект')
      {
          Korrekt('Файл/Документ/ОтчетИзмКап/Коррект/КапитВс/ДоКоррект'      , NameStr, '3400');
          Korrekt('Файл/Документ/ОтчетИзмКап/Коррект/КапитВс/КорИзмУчПол'    , NameStr, '3410');
          Korrekt('Файл/Документ/ОтчетИзмКап/Коррект/КапитВс/КорИспрОш'      , NameStr, '3420');
          Korrekt('Файл/Документ/ОтчетИзмКап/Коррект/КапитВс/ПослеКоррект'   , NameStr, '3500');

        if GetFldVis('Файл/Документ/ОтчетИзмКап/Коррект/НераспПриб')
        {
          Korrekt('Файл/Документ/ОтчетИзмКап/Коррект/НераспПриб/ДоКоррект'   , NameStr, '3401');
          Korrekt('Файл/Документ/ОтчетИзмКап/Коррект/НераспПриб/КорИзмУчПол' , NameStr, '3411');
          Korrekt('Файл/Документ/ОтчетИзмКап/Коррект/НераспПриб/КорИспрОш'   , NameStr, '3421');
          Korrekt('Файл/Документ/ОтчетИзмКап/Коррект/НераспПриб/ПослеКоррект', NameStr, '3501');
        }

        if GetFldVis('Файл/Документ/ОтчетИзмКап/Коррект/ДрСтатКап')
        {
          Korrekt('Файл/Документ/ОтчетИзмКап/Коррект/ДрСтатКап/ДоКоррект'    , NameStr, '3402');
          Korrekt('Файл/Документ/ОтчетИзмКап/Коррект/ДрСтатКап/КорИзмУчПол'  , NameStr, '3412');
          Korrekt('Файл/Документ/ОтчетИзмКап/Коррект/ДрСтатКап/КорИспрОш'    , NameStr, '3422');
          Korrekt('Файл/Документ/ОтчетИзмКап/Коррект/ДрСтатКап/ПослеКоррект' , NameStr, '3502');
        }
      }

      if GetFldVis('Файл/Документ/ОтчетИзмКап/ЧистАктив')
      {
                                                                          if #nValLNum12T('Файл/Документ/ОтчетИзмКап/ЧистАктив/На31ДекОтч'   ) #_NoKor('Файл/Документ/ОтчетИзмКап/ЧистАктив/На31ДекОтч'   , 'Стр. 3600, гр. 3');
                                                                          if #nValLNum12T('Файл/Документ/ОтчетИзмКап/ЧистАктив/На31ДекПред'  ) #_NoKor('Файл/Документ/ОтчетИзмКап/ЧистАктив/На31ДекПред'  , 'Стр. 3600, гр. 4');
        if GetFldVis('Файл/Документ/ОтчетИзмКап/ЧистАктив/На31ДекПрПред') if #nValLNum12T('Файл/Документ/ОтчетИзмКап/ЧистАктив/На31ДекПрПред') #_NoKor('Файл/Документ/ОтчетИзмКап/ЧистАктив/На31ДекПрПред', 'Стр. 3600, гр. 5');
      }
    }
    //#endregion 05-07 ОТЧЕТ ОБ ИЗМЕНЕНИЯХ КАПИТАЛА (СТР. 1, 2, 3)
    //----------------------------------------------------------------------------------------------------------


    //----------------------------------------------------------------------------------------------------------
    //#region 08-09 ОТЧЕТ О ДВИЖЕНИЕ ДЕНЕЖНЫХ СРЕДСТВ (СТР. 1, 2)
    //----------------------------------------------------------------------------------------------------------
    if GetFldVis('Файл/Документ/ДвижениеДен')
    {
      NameStr := pFH.Func('myGetP08');

      if GetFldVis('Файл/Документ/ДвижениеДен/ТекОпер')
      {
        DvigenieDen('Файл/Документ/ДвижениеДен/ТекОпер/СальдоТек', NameStr, '4100');

        if GetFldVis('Файл/Документ/ДвижениеДен/ТекОпер/Поступ')
        {
          DvigenieDen('Файл/Документ/ДвижениеДен/ТекОпер/Поступ'            , NameStr, '4110');
          DvigenieDen('Файл/Документ/ДвижениеДен/ТекОпер/Поступ/ПродПТРУ'   , NameStr, '4111');
          DvigenieDen('Файл/Документ/ДвижениеДен/ТекОпер/Поступ/АрЛицИнПлат', NameStr, '4112');
          DvigenieDen('Файл/Документ/ДвижениеДен/ТекОпер/Поступ/ПродФинВлож', NameStr, '4113');
          DvigenieDen('Файл/Документ/ДвижениеДен/ТекОпер/Поступ/ПрочПоступ' , NameStr, '4119');
        }

        if GetFldVis('Файл/Документ/ДвижениеДен/ТекОпер/Платеж')
        {
          DvigenieDen('Файл/Документ/ДвижениеДен/ТекОпер/Платеж'             , NameStr, '4120');
          DvigenieDen('Файл/Документ/ДвижениеДен/ТекОпер/Платеж/ПоставСМРУ'  , NameStr, '4121');
          DvigenieDen('Файл/Документ/ДвижениеДен/ТекОпер/Платеж/ОплатТрудРаб', NameStr, '4122');
          DvigenieDen('Файл/Документ/ДвижениеДен/ТекОпер/Платеж/ПроцДолгОбяз', NameStr, '4123');
          DvigenieDen('Файл/Документ/ДвижениеДен/ТекОпер/Платеж/НалогПриб'   , NameStr, '4124');
          DvigenieDen('Файл/Документ/ДвижениеДен/ТекОпер/Платеж/ПрочПлатеж'  , NameStr, '4129');
        }
      }

      if GetFldVis('Файл/Документ/ДвижениеДен/ИнвОпер')
      {
        DvigenieDen('Файл/Документ/ДвижениеДен/ИнвОпер/СальдоИнв', NameStr, '4200');

        if GetFldVis('Файл/Документ/ДвижениеДен/ИнвОпер/Поступ')
        {
          DvigenieDen('Файл/Документ/ДвижениеДен/ИнвОпер/Поступ'            , NameStr, '4210');
          DvigenieDen('Файл/Документ/ДвижениеДен/ИнвОпер/Поступ/ПродВнАктив', NameStr, '4211');
          DvigenieDen('Файл/Документ/ДвижениеДен/ИнвОпер/Поступ/ПродАкцДр'  , NameStr, '4212');
          DvigenieDen('Файл/Документ/ДвижениеДен/ИнвОпер/Поступ/ВозврЗаймЦБ', NameStr, '4213');
          DvigenieDen('Файл/Документ/ДвижениеДен/ИнвОпер/Поступ/ДивПроц'    , NameStr, '4214');
          DvigenieDen('Файл/Документ/ДвижениеДен/ИнвОпер/Поступ/ПрочПоступ' , NameStr, '4219');
        }

        if GetFldVis('Файл/Документ/ДвижениеДен/ИнвОпер/Платеж')
        {
          DvigenieDen('Файл/Документ/ДвижениеДен/ИнвОпер/Платеж'              , NameStr, '4220');
          DvigenieDen('Файл/Документ/ДвижениеДен/ИнвОпер/Платеж/ПриобрВнАктив', NameStr, '4221');
          DvigenieDen('Файл/Документ/ДвижениеДен/ИнвОпер/Платеж/ПриобрАкцДр'  , NameStr, '4222');
          DvigenieDen('Файл/Документ/ДвижениеДен/ИнвОпер/Платеж/ПриобрДолгЦБ' , NameStr, '4223');
          DvigenieDen('Файл/Документ/ДвижениеДен/ИнвОпер/Платеж/ПроцДолгОб'   , NameStr, '4224');
          DvigenieDen('Файл/Документ/ДвижениеДен/ИнвОпер/Платеж/ПрочПлатеж'   , NameStr, '4229');
        }
      }

      NameStr := pFH.Func('myGetP09');

      if GetFldVis('Файл/Документ/ДвижениеДен/ФинОпер')
      {
        DvigenieDen('Файл/Документ/ДвижениеДен/ФинОпер/СальдоФин', NameStr, '4300');

        if GetFldVis('Файл/Документ/ДвижениеДен/ФинОпер/Поступ')
        {
          DvigenieDen('Файл/Документ/ДвижениеДен/ФинОпер/Поступ'           , NameStr, '4310');
          DvigenieDen('Файл/Документ/ДвижениеДен/ФинОпер/Поступ/КредЗайм'  , NameStr, '4311');
          DvigenieDen('Файл/Документ/ДвижениеДен/ФинОпер/Поступ/ВкладСоб'  , NameStr, '4312');
          DvigenieDen('Файл/Документ/ДвижениеДен/ФинОпер/Поступ/АкцДол'    , NameStr, '4313');
          DvigenieDen('Файл/Документ/ДвижениеДен/ФинОпер/Поступ/ОблВексДр' , NameStr, '4314');
          DvigenieDen('Файл/Документ/ДвижениеДен/ФинОпер/Поступ/ПрочПоступ', NameStr, '4319');
        }

        if GetFldVis('Файл/Документ/ДвижениеДен/ФинОпер/Платеж')
        {
          DvigenieDen('Файл/Документ/ДвижениеДен/ФинОпер/Платеж'           , NameStr, '4320');
          DvigenieDen('Файл/Документ/ДвижениеДен/ФинОпер/Платеж/ВыкупАкц'  , NameStr, '4321');
          DvigenieDen('Файл/Документ/ДвижениеДен/ФинОпер/Платеж/УплДивИн'  , NameStr, '4322');
          DvigenieDen('Файл/Документ/ДвижениеДен/ФинОпер/Платеж/ВыкВексКЗ' , NameStr, '4323');
          DvigenieDen('Файл/Документ/ДвижениеДен/ФинОпер/Платеж/ПрочПлатеж', NameStr, '4329');
        }
      }

      DvigenieDen('Файл/Документ/ДвижениеДен/СальдоОтч', NameStr, '4400');
      DvigenieDen('Файл/Документ/ДвижениеДен/ОстНачОтч', NameStr, '4450');
      DvigenieDen('Файл/Документ/ДвижениеДен/ОстКонОтч', NameStr, '4500');
      DvigenieDen('Файл/Документ/ДвижениеДен/ВлИзмКурс', NameStr, '4490');
    }
    //#endregion 08-09 ОТЧЕТ О ДВИЖЕНИЕ ДЕНЕЖНЫХ СРЕДСТВ (СТР. 1, 2)
    //----------------------------------------------------------------------------------------------------------


    //----------------------------------------------------------------------------------------------------------
    //#region 10 ОТЧЕТ О ЦЕЛЕВОМ ИСПОЛЬЗОВАНИИ СРЕДСТВ
    //----------------------------------------------------------------------------------------------------------
    if GetFldVis('Файл/Документ/ЦелИсп')
    {
      NameStr := pFH.Func('myGetP10');

      CelIsp('Файл/Документ/ЦелИсп/ОстатНачОтч', NameStr, 'Остаток средств на начало отчетного года');

      if GetFldVis('Файл/Документ/ЦелИсп/Поступило')
      {
        CelIsp('Файл/Документ/ЦелИсп/Поступило'               , NameStr, 'Поступило средств');
        CelIsp('Файл/Документ/ЦелИсп/Поступило/ВзносЦелПоступ', NameStr, 'Файл/Документ/ЦелИсп/Поступило/ВзносЦелПоступ');
        CelIsp('Файл/Документ/ЦелИсп/Поступило/ПрибПредДеят'  , NameStr, 'Прибыль от приносящей доход деятельности организации');
        CelIsp('Файл/Документ/ЦелИсп/Поступило/Прочие'        , NameStr, 'Прочие поступления');
      }

      if GetFldVis('Файл/Документ/ЦелИсп/Использовано')
      {
        CelIsp('Файл/Документ/ЦелИсп/Использовано/ЦелМер'   , NameStr, 'На целевые мероприятия');
        CelIsp('Файл/Документ/ЦелИсп/Использовано/СодеожОрг', NameStr, 'На содержание организации');
        CelIsp('Файл/Документ/ЦелИсп/Использовано/ПриобОСИн', NameStr, 'Приобретение основных средств и иного имущества');
        CelIsp('Файл/Документ/ЦелИсп/Использовано/Прочие'   , NameStr, 'Прочие');
      }

      CelIsp('Файл/Документ/ЦелИсп/ОстатКонОтч', NameStr, 'Остаток средств на конец отчетного года');
    }
    //#endregion 10 ОТЧЕТ О ЦЕЛЕВОМ ИСПОЛЬЗОВАНИИ СРЕДСТВ
    //----------------------------------------------------------------------------------------------------------
  //#endregion НЕ ОБЯЗАТЕЛЬНЫЕ
  //**********************************************************************************************************
@end.
//#endregion ДЕЙСТВИЯ ВЫПОЛНЯЕМЫЕ ПРИ ПРОВЕРКЕ
//************************************************************************************************************


//============================================================================================================
//#region ДЕЙСТВИЯ ВЫПОЛНЯЕМЫЕ ПРИ РАСЧЕТЕ
//------------------------------------------------------------------------------------------------------------
@Script On_Recalc : boolean;
  //==========================================================================================================
  //#region СЕРВИС On_Recalc
  //----------------------------------------------------------------------------------------------------------
  #undef  Log
  #define Log(_strAdr, _strMes, _strVal) MesError.InsertRasch(NameStr, #_strAdr, #_strMes, #_strVal);

  #undef GV
  #define GV(_strAdr) GetStrValFormat(#_strAdr)

  #undef GD
  #define GD(_strAdr) GetDblVal(#_strAdr)

  // БУХГАЛТЕРСКИЙ БАЛАНС :: Актив
  procedure Activ(NameStr, Suf, Gr : string); // #region
  {
    var _XMLAdr_, _Mes_, _Val_ : string ;

    _XMLAdr_ := 'Файл/Документ/Баланс/Актив/';
    _Mes_ := 'Гр. '+Gr+': Баланс равен сумме полей подраздела "АКТИВ" ('+ GetStrVal(_XMLAdr_ + 'КодСтроки'            )
                                                                + ' = ' + GetStrVal(_XMLAdr_ + 'МатВнеАкт/КодСтроки'  )
                                                                + ' + ' + GetStrVal(_XMLAdr_ + 'НеМатФинАкт/КодСтроки')
                                                                + ' + ' + GetStrVal(_XMLAdr_ + 'Запасы/КодСтроки'     )
                                                                + ' + ' + GetStrVal(_XMLAdr_ + 'ДенежнСр/КодСтроки'   )
                                                                + ' + ' + GetStrVal(_XMLAdr_ + 'ФинВлож/КодСтроки'    ) + ')';

    SetIntVal(_XMLAdr_ + Suf,   GetDblVal(_XMLAdr_ + 'МатВнеАкт/'   + Suf)
                              + GetDblVal(_XMLAdr_ + 'НеМатФинАкт/' + Suf)
                              + GetDblVal(_XMLAdr_ + 'Запасы/'      + Suf)
                              + GetDblVal(_XMLAdr_ + 'ДенежнСр/'    + Suf)
                              + GetDblVal(_XMLAdr_ + 'ФинВлож/'     + Suf));

    _Val_ :=           #GV(_XMLAdr_                  + Suf)
             + ' = ' + #GV(_XMLAdr_ + 'МатВнеАкт/'   + Suf)
             + ' + ' + #GV(_XMLAdr_ + 'НеМатФинАкт/' + Suf)
             + ' + ' + #GV(_XMLAdr_ + 'Запасы/'      + Suf)
             + ' + ' + #GV(_XMLAdr_ + 'ДенежнСр/'    + Suf)
             + ' + ' + #GV(_XMLAdr_ + 'ФинВлож/'     + Suf);

    #Log(_XMLAdr_ + Suf, _Mes_, _Val_)
  } // #endregion

  // БУХГАЛТЕРСКИЙ БАЛАНС :: Пассив
  procedure Passiv(NameStr, Suf, Gr : string); // #region
  {
    var _XMLAdr_, _Mes_, _Val_, buf : string;

    _XMLAdr_ := 'Файл/Документ/Баланс/Пассив/';

    buf := 'КапРез';

    if (StrNotNul(_XMLAdr_ + 'КапРез/КодСтроки') and StrNotNul(_XMLAdr_ + 'КапРез/СумОтч'))
    then buf := 'КапРез';
    else  if (StrNotNul(_XMLAdr_ + 'ЦелевСредства/КодСтроки') and StrNotNul(_XMLAdr_ + 'ЦелевСредства/СумОтч'))
          then buf := 'ЦелевСредства';
          else  if (StrNotNul(_XMLAdr_ + 'ФондИмущИнЦФ/КодСтроки') and StrNotNul(_XMLAdr_ + 'ФондИмущИнЦФ/СумОтч'))
                then buf := 'ФондИмущИнЦФ';

    _Mes_ := 'Гр. '+Gr+': Баланс равен сумме полей подраздела "ПАССИВ" ('+ GetStrVal(_XMLAdr_ + 'КодСтроки'               )
                                                                 + ' = ' + GetStrVal(_XMLAdr_ + buf + '/КодСтроки'        )
                                                                 + ' + ' + GetStrVal(_XMLAdr_ + 'ДлгЗаемСредств/КодСтроки')
                                                                 + ' + ' + GetStrVal(_XMLAdr_ + 'ДрДолгосрОбяз/КодСтроки' )
                                                                 + ' + ' + GetStrVal(_XMLAdr_ + 'КртЗаемСредств/КодСтроки')
                                                                 + ' + ' + GetStrVal(_XMLAdr_ + 'КредитЗадолж/КодСтроки'  )
                                                                 + ' + ' + GetStrVal(_XMLAdr_ + 'ДрКраткосрОбяз/КодСтроки') + ')';

    SetIntVal(_XMLAdr_ + Suf,   GetDblVal(_XMLAdr_ + buf + '/'         + Suf)
                              + GetDblVal(_XMLAdr_ + 'ДлгЗаемСредств/' + Suf)
                              + GetDblVal(_XMLAdr_ + 'ДрДолгосрОбяз/'  + Suf)
                              + GetDblVal(_XMLAdr_ + 'КртЗаемСредств/' + Suf)
                              + GetDblVal(_XMLAdr_ + 'КредитЗадолж/'   + Suf)
                              + GetDblVal(_XMLAdr_ + 'ДрКраткосрОбяз/' + Suf));

    _Val_ :=           #GV(_XMLAdr_                     + Suf)
             + ' = ' + #GV(_XMLAdr_ + buf + '/'         + Suf)
             + ' + ' + #GV(_XMLAdr_ + 'ДлгЗаемСредств/' + Suf)
             + ' + ' + #GV(_XMLAdr_ + 'ДрДолгосрОбяз/'  + Suf)
             + ' + ' + #GV(_XMLAdr_ + 'КртЗаемСредств/' + Suf)
             + ' + ' + #GV(_XMLAdr_ + 'КредитЗадолж/'   + Suf)
             + ' + ' + #GV(_XMLAdr_ + 'ДрКраткосрОбяз/' + Suf);

    #Log(_XMLAdr_ + Suf, _Mes_, _Val_)
  } // #endregion

  // ОТЧЕТ О ФИНАНСОВЫХ РЕЗУЛЬТАТАХ
  procedure FinRez(NameStr, Suf, Gr : string); // #region
  {
    var _XMLAdr_, _Mes_, _Val_, buf : string;

    _XMLAdr_ := 'Файл/Документ/ПрибУб/';

    _Mes_ := 'Гр. '+Gr+': Чистая прибыль (убыток) равен сумме полей отчета о фин. рез. ('+ GetStrVal(_XMLAdr_ + 'ЧистПрибУб/КодСтроки')
                                                                                 + ' = ' + GetStrVal(_XMLAdr_ + 'Выруч/КодСтроки'     )
                                                                                 + ' - ' + GetStrVal(_XMLAdr_ + 'РасхОбДеят/КодСтроки')
                                                                                 + ' - ' + GetStrVal(_XMLAdr_ + 'ПроцУпл/КодСтроки'   )
                                                                                 + ' + ' + GetStrVal(_XMLAdr_ + 'ПрочДоход/КодСтроки' )
                                                                                 + ' - ' + GetStrVal(_XMLAdr_ + 'ПрочРасход/КодСтроки')
                                                                                 + ' - ' + GetStrVal(_XMLAdr_ + 'НалПрибДох/КодСтроки') + ')';

    SetIntVal(_XMLAdr_ + 'ЧистПрибУб/' + Suf,   GetDblVal(_XMLAdr_ + 'Выруч/'      + Suf)
                                              - GetDblVal(_XMLAdr_ + 'РасхОбДеят/' + Suf)
                                              - GetDblVal(_XMLAdr_ + 'ПроцУпл/'    + Suf)
                                              + GetDblVal(_XMLAdr_ + 'ПрочДоход/'  + Suf)
                                              - GetDblVal(_XMLAdr_ + 'ПрочРасход/' + Suf)
                                              - GetDblVal(_XMLAdr_ + 'НалПрибДох/' + Suf));

    _Val_ :=           #GV(_XMLAdr_ + 'ЧистПрибУб/' + Suf)
             + ' = ' + #GV(_XMLAdr_ + 'Выруч/'      + Suf)
             + ' - ' + #GV(_XMLAdr_ + 'РасхОбДеят/' + Suf)
             + ' - ' + #GV(_XMLAdr_ + 'ПроцУпл/'    + Suf)
             + ' + ' + #GV(_XMLAdr_ + 'ПрочДоход/'  + Suf)
             + ' - ' + #GV(_XMLAdr_ + 'ПрочРасход/' + Suf)
             + ' - ' + #GV(_XMLAdr_ + 'НалПрибДох/' + Suf);

    #Log(_XMLAdr_ + Suf, _Mes_, _Val_)
  } // #endregion

  // ОТЧЕТ ОБ ИЗМЕНЕНИЯХ КАПИТАЛА :: Итого
  procedure IzmKap(NameStr, _XMLAdr_, _Str_ : string; f1, f2, f3, f4, f5 : boolean); // #region
  {
    var _Mes_, _Val_, buf : string;

    buf :=   if (f1, '1, ', '')
           + if (f2, '2, ', '')
           + if (f3, '3, ', '')
           + if (f4, '4, ', '')
           + if (f5, '5'  , '');

    if (buf[Length(buf)] = ' ') buf := SubStr(buf, 1, Length(buf) - 2);

    _Mes_ := 'Стр. '+_Str_+', гр. 6: Итого равно сумме граф (' + buf + ') по данной строке';

    SetIntVal(_XMLAdr_ + '/Итог',   if (f1, GetDblVal(_XMLAdr_ + '/УстКапитал' ), 0)
                                  + if (f2, GetDblVal(_XMLAdr_ + '/СобВыкупАкц'), 0)
                                  + if (f3, GetDblVal(_XMLAdr_ + '/ДобКапитал' ), 0)
                                  + if (f4, GetDblVal(_XMLAdr_ + '/РезКапитал' ), 0)
                                  + if (f5, GetDblVal(_XMLAdr_ + '/НераспПриб' ), 0));

    _Val_ :=           #GV(_XMLAdr_ + '/Итог'       ) + ' = '
             + if (f1, #GV(_XMLAdr_ + '/УстКапитал' ) + ' + ', '')
             + if (f2, #GV(_XMLAdr_ + '/СобВыкупАкц') + ' + ', '')
             + if (f3, #GV(_XMLAdr_ + '/ДобКапитал' ) + ' + ', '')
             + if (f4, #GV(_XMLAdr_ + '/РезКапитал' ) + ' + ', '')
             + if (f5, #GV(_XMLAdr_ + '/НераспПриб' )        , '');

    if (_Val_[Length(_Val_)] = ' ') _Val_ := SubStr(_Val_, 1, Length(_Val_) - 3);

    #Log(_XMLAdr_ + '/Итог', _Mes_, _Val_)
  } // #endregion

  // ОТЧЕТ ОБ ИЗМЕНЕНИЯХ КАПИТАЛА :: Сумма (по 7 показателям)
  procedure IzmKapSum7(NameStr, _XMLAdr_, _Str_ : string); // #region
  {
    // 1 :: 3x10 =                      3x14 + 3x15 + 3x16
    // 2 :: 3x10 =                      3x14 + 3x15 + 3x16
    // 3 :: 3x10 =        3x12 + 3x13 + 3x14 + 3x15 + 3x16
    // 4 :: 3x10 =                                    3x16
    // 5 :: 3x10 = 3x11 + 3x12 + 3x13        + 3x15 + 3x16

    var XMLAdr1, XMLAdr2, XMLAdr3, XMLAdr4, XMLAdr5, XMLAdr6, XMLAdr7
      , Val1, Val2, Val3, Val4, Val5
      , Gr1, Gr2, Gr3, Gr4, Gr5 : string;

    Gr1 := '/УстКапитал' ;   XMLAdr1 := _XMLAdr_ + '/УвеличКапитал/УвеличКапВс'  ; // 3x10
    Gr2 := '/СобВыкупАкц';   XMLAdr2 := _XMLAdr_ + '/УвеличКапитал/ЧистПриб'     ; // 3x11
    Gr3 := '/ДобКапитал' ;   XMLAdr3 := _XMLAdr_ + '/УвеличКапитал/ПереоцИмущ'   ; // 3x12
    Gr4 := '/РезКапитал' ;   XMLAdr4 := _XMLAdr_ + '/УвеличКапитал/ДохУвелКап'   ; // 3x13
    Gr5 := '/НераспПриб' ;   XMLAdr5 := _XMLAdr_ + '/УвеличКапитал/ДопВыпАкций'  ; // 3x14
                             XMLAdr6 := _XMLAdr_ + '/УвеличКапитал/УвеличНомАкц' ; // 3x15
                             XMLAdr7 := _XMLAdr_ + '/УвеличКапитал/Реорганизация'; // 3x16

    SetIntVal(XMLAdr1 + Gr1,                                                                #GD(XMLAdr5 + Gr1) + #GD(XMLAdr6 + Gr1) + #GD(XMLAdr7 + Gr1));
    SetIntVal(XMLAdr1 + Gr2,                                                                #GD(XMLAdr5 + Gr2) + #GD(XMLAdr6 + Gr2) + #GD(XMLAdr7 + Gr2));
    SetIntVal(XMLAdr1 + Gr3,                      #GD(XMLAdr3 + Gr3) + #GD(XMLAdr4 + Gr3) + #GD(XMLAdr5 + Gr3) + #GD(XMLAdr6 + Gr3) + #GD(XMLAdr7 + Gr3));
    SetIntVal(XMLAdr1 + Gr4,                                                                                                          #GD(XMLAdr7 + Gr4));
    SetIntVal(XMLAdr1 + Gr5, #GD(XMLAdr2 + Gr5) + #GD(XMLAdr3 + Gr5) + #GD(XMLAdr4 + Gr5)                      + #GD(XMLAdr6 + Gr5) + #GD(XMLAdr7 + Gr5));

    Val1 := #GV(XMLAdr1 + Gr1)+' = '+                                                                            #GV(XMLAdr5 + Gr1)+' + '+#GV(XMLAdr6 + Gr1)+' + '+#GV(XMLAdr7 + Gr1);
    Val2 := #GV(XMLAdr1 + Gr2)+' = '+                                                                            #GV(XMLAdr5 + Gr2)+' + '+#GV(XMLAdr6 + Gr2)+' + '+#GV(XMLAdr7 + Gr2);
    Val3 := #GV(XMLAdr1 + Gr3)+' = '+                          #GV(XMLAdr3 + Gr3)+' + '+#GV(XMLAdr4 + Gr3)+' + '+#GV(XMLAdr5 + Gr3)+' + '+#GV(XMLAdr6 + Gr3)+' + '+#GV(XMLAdr7 + Gr3);
    Val4 := #GV(XMLAdr1 + Gr4)+' = '+                                                                                                                              #GV(XMLAdr7 + Gr4);
    Val5 := #GV(XMLAdr1 + Gr5)+' = '+ #GV(XMLAdr2 + Gr5)+' + '+#GV(XMLAdr3 + Gr5)+' + '+#GV(XMLAdr4 + Gr5)                         +' + '+#GV(XMLAdr6 + Gr5)+' + '+#GV(XMLAdr7 + Gr5);

    #Log(XMLAdr1 + Gr1, Replace('Стр. 3x10, гр. 1: равно сумме строк 3x14, 3x15 и 3x16 по данной графе'            , '3x', _Str_), Val1)
    #Log(XMLAdr1 + Gr2, Replace('Стр. 3x10, гр. 2: равно сумме строк 3x14, 3x15 и 3x16 по данной графе'            , '3x', _Str_), Val2)
    #Log(XMLAdr1 + Gr3, Replace('Стр. 3x10, гр. 3: равно сумме строк 3x12, 3x13, 3x14, 3x15 и 3x16 по данной графе', '3x', _Str_), Val3)
    #Log(XMLAdr1 + Gr4, Replace('Стр. 3x10, гр. 4: равно сумме строки 3x16 по данной графе'                        , '3x', _Str_), Val4)
    #Log(XMLAdr1 + Gr5, Replace('Стр. 3x10, гр. 5: равно сумме строк 3x11, 3x12, 3x13, 3x15 и 3x16 по данной графе', '3x', _Str_), Val5)
  } // #endregion

  // ОТЧЕТ ОБ ИЗМЕНЕНИЯХ КАПИТАЛА :: Сумма (по 8 показателям)
  procedure IzmKapSum8(NameStr, _XMLAdr_, _Str_ : string); // #region
  {
    // 1 :: 3x20 =                      3x24 + 3x25 + 3x26
    // 2 :: 3x20 =                      3x24 + 3x25 + 3x26
    // 3 :: 3x20 =        3x22 + 3x23 + 3x24 + 3x25 + 3x26
    // 4 :: 3x20 =                                    3x26
    // 5 :: 3x20 = 3x21 + 3x22 + 3x23 + 3x24 + 3x25 + 3x26 + 3x27

    var XMLAdr1, XMLAdr2, XMLAdr3, XMLAdr4, XMLAdr5, XMLAdr6, XMLAdr7, XMLAdr8
      , Val1, Val2, Val3, Val4, Val5
      , Gr1, Gr2, Gr3, Gr4, Gr5 : string;

    Gr1 := '/УстКапитал' ;   XMLAdr1 := _XMLAdr_ + '/УменКапитал/УменКапВс'    ; // 3x20
    Gr2 := '/СобВыкупАкц';   XMLAdr2 := _XMLAdr_ + '/УменКапитал/Убыток'       ; // 3x21
    Gr3 := '/ДобКапитал' ;   XMLAdr3 := _XMLAdr_ + '/УменКапитал/ПереоцИмущ'   ; // 3x22
    Gr4 := '/РезКапитал' ;   XMLAdr4 := _XMLAdr_ + '/УменКапитал/РасхУменКап'  ; // 3x23
    Gr5 := '/НераспПриб' ;   XMLAdr5 := _XMLAdr_ + '/УменКапитал/УменНомАкц'   ; // 3x24
                             XMLAdr6 := _XMLAdr_ + '/УменКапитал/УменКолАкций' ; // 3x25
                             XMLAdr7 := _XMLAdr_ + '/УменКапитал/Реорганизация'; // 3x26
                             XMLAdr8 := _XMLAdr_ + '/УменКапитал/Дивиденды'    ; // 3x27

    SetIntVal(XMLAdr1 + Gr1,                                                                #GD(XMLAdr5 + Gr1) + #GD(XMLAdr6 + Gr1) + #GD(XMLAdr7 + Gr1)                     );
    SetIntVal(XMLAdr1 + Gr2,                                                                #GD(XMLAdr5 + Gr2) + #GD(XMLAdr6 + Gr2) + #GD(XMLAdr7 + Gr2)                     );
    SetIntVal(XMLAdr1 + Gr3,                      #GD(XMLAdr3 + Gr3) + #GD(XMLAdr4 + Gr3) + #GD(XMLAdr5 + Gr3) + #GD(XMLAdr6 + Gr3) + #GD(XMLAdr7 + Gr3)                     );
    SetIntVal(XMLAdr1 + Gr4,                                                                                                          #GD(XMLAdr7 + Gr4)                     );
    SetIntVal(XMLAdr1 + Gr5, #GD(XMLAdr2 + Gr5) + #GD(XMLAdr3 + Gr5) + #GD(XMLAdr4 + Gr5) + #GD(XMLAdr5 + Gr5) + #GD(XMLAdr6 + Gr5) + #GD(XMLAdr7 + Gr5) + #GD(XMLAdr8 + Gr5));

    Val1 := #GV(XMLAdr1 + Gr1)+' = '+                                                                            #GV(XMLAdr5 + Gr1)+' + '+#GV(XMLAdr6 + Gr1)+' + '+#GV(XMLAdr7 + Gr1)                         ;
    Val2 := #GV(XMLAdr1 + Gr2)+' = '+                                                                            #GV(XMLAdr5 + Gr2)+' + '+#GV(XMLAdr6 + Gr2)+' + '+#GV(XMLAdr7 + Gr2)                         ;
    Val3 := #GV(XMLAdr1 + Gr3)+' = '+                          #GV(XMLAdr3 + Gr3)+' + '+#GV(XMLAdr4 + Gr3)+' + '+#GV(XMLAdr5 + Gr3)+' + '+#GV(XMLAdr6 + Gr3)+' + '+#GV(XMLAdr7 + Gr3)                         ;
    Val4 := #GV(XMLAdr1 + Gr4)+' = '+                                                                                                                              #GV(XMLAdr7 + Gr4)                         ;
    Val5 := #GV(XMLAdr1 + Gr5)+' = '+ #GV(XMLAdr2 + Gr5)+' + '+#GV(XMLAdr3 + Gr5)+' + '+#GV(XMLAdr4 + Gr5)+' + '+#GV(XMLAdr5 + Gr5)+' + '+#GV(XMLAdr6 + Gr5)+' + '+#GV(XMLAdr7 + Gr5)+' + '+#GV(XMLAdr8 + Gr5);

    #Log(XMLAdr1 + Gr1, Replace('Стр. 3x20, гр. 1: равно сумме строк 3x24, 3x25 и 3x26 по данной графе'                        , '3x', _Str_), Val1)
    #Log(XMLAdr1 + Gr2, Replace('Стр. 3x20, гр. 2: равно сумме строк 3x24, 3x25 и 3x26 по данной графе'                        , '3x', _Str_), Val2)
    #Log(XMLAdr1 + Gr3, Replace('Стр. 3x20, гр. 3: равно сумме строк 3x22, 3x23, 3x24, 3x25 и 3x26 по данной графе'            , '3x', _Str_), Val3)
    #Log(XMLAdr1 + Gr4, Replace('Стр. 3x20, гр. 4: равно сумме строки 3x26 по данной графе'                                    , '3x', _Str_), Val4)
    #Log(XMLAdr1 + Gr5, Replace('Стр. 3x20, гр. 5: равно сумме строк 3x21, 3x22, 3x23, 3x24, 3x25, 3x26 и 3x27 по данной графе', '3x', _Str_), Val5)
  } // #endregion

  // ОТЧЕТ ОБ ИЗМЕНЕНИЯХ КАПИТАЛА :: Корректировка
  procedure Korr(NameStr, _XMLAdr_, _Str1_, _Str2_, _Str3_, _Str4_ : string); // #region
  {
    var XMLAdr1, XMLAdr2, XMLAdr3, XMLAdr4
      , Val1, Val2, Val3, Val4
      , Gr1, Gr2, Gr3, Gr4 : string;

    Gr1 := '/На31ДекПрПред';   XMLAdr1 := _XMLAdr_ + '/ДоКоррект'   ;
    Gr2 := '/ИзмКапЧистПр' ;   XMLAdr2 := _XMLAdr_ + '/КорИзмУчПол' ;
    Gr3 := '/ИзмКапИнФакт' ;   XMLAdr3 := _XMLAdr_ + '/КорИспрОш'   ;
    Gr4 := '/На31ДекПред'  ;   XMLAdr4 := _XMLAdr_ + '/ПослеКоррект';

    SetIntVal(XMLAdr4 + Gr1, #GD(XMLAdr1 + Gr1) + #GD(XMLAdr2 + Gr1) + #GD(XMLAdr3 + Gr1));
    SetIntVal(XMLAdr4 + Gr2, #GD(XMLAdr1 + Gr2) + #GD(XMLAdr2 + Gr2) + #GD(XMLAdr3 + Gr2));
    SetIntVal(XMLAdr4 + Gr3, #GD(XMLAdr1 + Gr3) + #GD(XMLAdr2 + Gr3) + #GD(XMLAdr3 + Gr3));
    SetIntVal(XMLAdr4 + Gr4, #GD(XMLAdr1 + Gr4) + #GD(XMLAdr2 + Gr4) + #GD(XMLAdr3 + Gr4));

    Val1 := #GV(XMLAdr4 + Gr1)+' = '+#GV(XMLAdr1 + Gr1)+' + '+#GV(XMLAdr2 + Gr1)+' + '+#GV(XMLAdr3 + Gr1);
    Val2 := #GV(XMLAdr4 + Gr2)+' = '+#GV(XMLAdr1 + Gr2)+' + '+#GV(XMLAdr2 + Gr2)+' + '+#GV(XMLAdr3 + Gr2);
    Val3 := #GV(XMLAdr4 + Gr3)+' = '+#GV(XMLAdr1 + Gr3)+' + '+#GV(XMLAdr2 + Gr3)+' + '+#GV(XMLAdr3 + Gr3);
    Val4 := #GV(XMLAdr4 + Gr4)+' = '+#GV(XMLAdr1 + Gr4)+' + '+#GV(XMLAdr2 + Gr4)+' + '+#GV(XMLAdr3 + Gr4);

    #Log(XMLAdr4 + Gr1, 'Стр. '+_Str1_+', гр. 3: равно сумме строк '+_Str2_+', '+_Str3_+', '+_Str4_+' по данной графе', Val1)
    #Log(XMLAdr4 + Gr2, 'Стр. '+_Str1_+', гр. 4: равно сумме строк '+_Str2_+', '+_Str3_+', '+_Str4_+' по данной графе', Val2)
    #Log(XMLAdr4 + Gr3, 'Стр. '+_Str1_+', гр. 5: равно сумме строк '+_Str2_+', '+_Str3_+', '+_Str4_+' по данной графе', Val3)
    #Log(XMLAdr4 + Gr4, 'Стр. '+_Str1_+', гр. 6: равно сумме строк '+_Str2_+', '+_Str3_+', '+_Str4_+' по данной графе', Val4)
  } // #endregion

  //#endregion СЕРВИС On_Recalc
  //**********************************************************************************************************
@begin
  var NameStr: string ;

  //Документ
  if ((GetStrVal('Файл/Документ/ДатаДок') = '') or (GetStrVal('Файл/Документ/ДатаДок') = 'ДД.ММ.ГГГГ'))
    SetFldVal('Файл/Документ/ДатаДок', DateToStr(Cur_Date, XMLMap.GetAttrVFormatByName('Файл/Документ/ДатаДок')));


  //============================================================================================================
  //#region БУХГАЛТЕРСКИЙ БАЛАНС
  //------------------------------------------------------------------------------------------------------------
  NameStr := pFH.Func('myGetP03');

  Activ(NameStr, 'СумОтч'  , '4');
  Activ(NameStr, 'СумПрдщ' , '5');
  Activ(NameStr, 'СумПрдшв', '6');

  Passiv(NameStr, 'СумОтч'  , '4');
  Passiv(NameStr, 'СумПрдщ' , '5');
  Passiv(NameStr, 'СумПрдшв', '6');
  //------------------------------------------------------------------------------------------------------------
  //#endregion БУХГАЛТЕРСКИЙ БАЛАНС
  //============================================================================================================


  //============================================================================================================
  //#region ОТЧЕТ О ФИНАНСОВЫХ РЕЗУЛЬТАТАХ
  //------------------------------------------------------------------------------------------------------------
  NameStr := pFH.Func('myGetP04');

  FinRez(NameStr, 'СумОтч' , '4');
  FinRez(NameStr, 'СумПред', '5');
  //------------------------------------------------------------------------------------------------------------
  //#endregion ОТЧЕТ О ФИНАНСОВЫХ РЕЗУЛЬТАТАХ
  //============================================================================================================


  //============================================================================================================
  //#region ОТЧЕТ ОБ ИЗМЕНЕНИЯХ КАПИТАЛА
  //------------------------------------------------------------------------------------------------------------
  NameStr := pFH.Func('myGetP05');

  IzmKapSum7(NameStr, 'Файл/Документ/ОтчетИзмКап/ДвиженКап/ПредГод', '32'); // 3210 = 3221 + 3212 + 3213 + 3214 + 3215 + 3216
  IzmKapSum8(NameStr, 'Файл/Документ/ОтчетИзмКап/ДвиженКап/ПредГод', '32'); // 3220 = 3221 + 3222 + 3223 + 3224 + 3225 + 3226 + 3227

  IzmKap(NameStr, 'Файл/Документ/ОтчетИзмКап/ДвиженКап/Кап31ДекПред'                        , '3100',  TRUE,  TRUE,  TRUE,  TRUE,  TRUE);   // 3100   6 = 1 + 2 + 3 + 4 + 5
  IzmKap(NameStr, 'Файл/Документ/ОтчетИзмКап/ДвиженКап/ПредГод/УвеличКапитал/УвеличКапВс'   , '3210',  TRUE,  TRUE,  TRUE,  TRUE,  TRUE);   // 3210   6 = 1 + 2 + 3 + 4 + 5
  IzmKap(NameStr, 'Файл/Документ/ОтчетИзмКап/ДвиженКап/ПредГод/УвеличКапитал/ЧистПриб'      , '3211', false, false, false, false,  TRUE);   // 3211   6 =               + 5
  IzmKap(NameStr, 'Файл/Документ/ОтчетИзмКап/ДвиженКап/ПредГод/УвеличКапитал/ПереоцИмущ'    , '3212', false, false,  TRUE, false,  TRUE);   // 3212   6 =         3     + 5
  IzmKap(NameStr, 'Файл/Документ/ОтчетИзмКап/ДвиженКап/ПредГод/УвеличКапитал/ДохУвелКап'    , '3213', false, false,  TRUE, false,  TRUE);   // 3213   6 =         3     + 5
  IzmKap(NameStr, 'Файл/Документ/ОтчетИзмКап/ДвиженКап/ПредГод/УвеличКапитал/ДопВыпАкций'   , '3214',  TRUE,  TRUE,  TRUE, false, false);   // 3214   6 = 1 + 2 + 3
  IzmKap(NameStr, 'Файл/Документ/ОтчетИзмКап/ДвиженКап/ПредГод/УвеличКапитал/Реорганизация' , '3216',  TRUE,  TRUE,  TRUE,  TRUE,  TRUE);   // 3216   6 = 1 + 2 + 3 + 4 + 5
  IzmKap(NameStr, 'Файл/Документ/ОтчетИзмКап/ДвиженКап/ПредГод/УменКапитал/УменКапВс'       , '3220',  TRUE,  TRUE,  TRUE,  TRUE,  TRUE);   // 3220   6 = 1 + 2 + 3 + 4 + 5
  IzmKap(NameStr, 'Файл/Документ/ОтчетИзмКап/ДвиженКап/ПредГод/УменКапитал/Убыток'          , '3221', false, false, false, false,  TRUE);   // 3221   6 =                 5
  IzmKap(NameStr, 'Файл/Документ/ОтчетИзмКап/ДвиженКап/ПредГод/УменКапитал/ПереоцИмущ'      , '3222', false, false,  TRUE, false,  TRUE);   // 3222   6 =         3     + 5
  IzmKap(NameStr, 'Файл/Документ/ОтчетИзмКап/ДвиженКап/ПредГод/УменКапитал/РасхУменКап'     , '3223', false, false,  TRUE, false,  TRUE);   // 3223   6 =         3     + 5
  IzmKap(NameStr, 'Файл/Документ/ОтчетИзмКап/ДвиженКап/ПредГод/УменКапитал/УменНомАкц'      , '3224',  TRUE,  TRUE,  TRUE, false,  TRUE);   // 3224   6 = 1 + 2 + 3     + 5
  IzmKap(NameStr, 'Файл/Документ/ОтчетИзмКап/ДвиженКап/ПредГод/УменКапитал/УменКолАкций'    , '3225',  TRUE,  TRUE,  TRUE, false,  TRUE);   // 3225   6 = 1 + 2 + 3     + 5
  IzmKap(NameStr, 'Файл/Документ/ОтчетИзмКап/ДвиженКап/ПредГод/УменКапитал/Реорганизация'   , '3226',  TRUE,  TRUE,  TRUE,  TRUE,  TRUE);   // 3226   6 = 1 + 2 + 3 + 4 + 5
  IzmKap(NameStr, 'Файл/Документ/ОтчетИзмКап/ДвиженКап/ПредГод/УменКапитал/Дивиденды'       , '3227', false, false, false, false,  TRUE);   // 3227   6 =                 5

  NameStr := pFH.Func('myGetP06');

  IzmKapSum7(NameStr, 'Файл/Документ/ОтчетИзмКап/ДвиженКап/ОтчетГод', '33'); // 3310 = 3321 + 3312 + 3313 + 3314 + 3315 + 3316
  IzmKapSum8(NameStr, 'Файл/Документ/ОтчетИзмКап/ДвиженКап/ОтчетГод', '33'); // 3320 = 3321 + 3322 + 3323 + 3324 + 3325 + 3326 + 3327

  IzmKap(NameStr, 'Файл/Документ/ОтчетИзмКап/ДвиженКап/ПредГод/Кап31дек'                    , '3200',  TRUE,  TRUE,  TRUE,  TRUE,  TRUE);   // 3200   6 = 1 + 2 + 3 + 4 + 5
  IzmKap(NameStr, 'Файл/Документ/ОтчетИзмКап/ДвиженКап/ОтчетГод/УвеличКапитал/УвеличКапВс'  , '3310',  TRUE,  TRUE,  TRUE,  TRUE,  TRUE);   // 3310   6 = 1 + 2 + 3 + 4 + 5
  IzmKap(NameStr, 'Файл/Документ/ОтчетИзмКап/ДвиженКап/ОтчетГод/УвеличКапитал/ЧистПриб'     , '3311', false, false, false, false,  TRUE);   // 3311   6 =                 5
  IzmKap(NameStr, 'Файл/Документ/ОтчетИзмКап/ДвиженКап/ОтчетГод/УвеличКапитал/ПереоцИмущ'   , '3312', false, false,  TRUE, false,  TRUE);   // 3312   6 =         3     + 5
  IzmKap(NameStr, 'Файл/Документ/ОтчетИзмКап/ДвиженКап/ОтчетГод/УвеличКапитал/ДохУвелКап'   , '3313', false, false,  TRUE, false,  TRUE);   // 3313   6 =         3     + 5
  IzmKap(NameStr, 'Файл/Документ/ОтчетИзмКап/ДвиженКап/ОтчетГод/УвеличКапитал/ДопВыпАкций'  , '3314',  TRUE,  TRUE,  TRUE, false, false);   // 3314   6 = 1 + 2 + 3
  IzmKap(NameStr, 'Файл/Документ/ОтчетИзмКап/ДвиженКап/ОтчетГод/УвеличКапитал/Реорганизация', '3316',  TRUE,  TRUE,  TRUE,  TRUE,  TRUE);   // 3316   6 = 1 + 2 + 3 + 4 + 5
  IzmKap(NameStr, 'Файл/Документ/ОтчетИзмКап/ДвиженКап/ОтчетГод/УменКапитал/УменКапВс'      , '3320',  TRUE,  TRUE,  TRUE,  TRUE,  TRUE);   // 3320   6 = 1 + 2 + 3 + 4 + 5
  IzmKap(NameStr, 'Файл/Документ/ОтчетИзмКап/ДвиженКап/ОтчетГод/УменКапитал/Убыток'         , '3321', false, false, false, false,  TRUE);   // 3321   6 =                 5
  IzmKap(NameStr, 'Файл/Документ/ОтчетИзмКап/ДвиженКап/ОтчетГод/УменКапитал/ПереоцИмущ'     , '3322', false, false,  TRUE, false,  TRUE);   // 3322   6 =         3     + 5
  IzmKap(NameStr, 'Файл/Документ/ОтчетИзмКап/ДвиженКап/ОтчетГод/УменКапитал/РасхУменКап'    , '3323', false, false,  TRUE, false,  TRUE);   // 3323   6 =         3     + 5
  IzmKap(NameStr, 'Файл/Документ/ОтчетИзмКап/ДвиженКап/ОтчетГод/УменКапитал/УменНомАкц'     , '3324',  TRUE,  TRUE,  TRUE, false,  TRUE);   // 3324   6 = 1 + 2 + 3     + 5
  IzmKap(NameStr, 'Файл/Документ/ОтчетИзмКап/ДвиженКап/ОтчетГод/УменКапитал/УменКолАкций'   , '3325',  TRUE,  TRUE,  TRUE, false,  TRUE);   // 3325   6 = 1 + 2 + 3     + 5
  IzmKap(NameStr, 'Файл/Документ/ОтчетИзмКап/ДвиженКап/ОтчетГод/УменКапитал/Реорганизация'  , '3326',  TRUE,  TRUE,  TRUE,  TRUE,  TRUE);   // 3326   6 = 1 + 2 + 3 + 4 + 5
  IzmKap(NameStr, 'Файл/Документ/ОтчетИзмКап/ДвиженКап/ОтчетГод/УменКапитал/Дивиденды'      , '3327', false, false, false, false,  TRUE);   // 3327   6 =                 5
  IzmKap(NameStr, 'Файл/Документ/ОтчетИзмКап/ДвиженКап/ОтчетГод/Кап31дек'                   , '3300',  TRUE,  TRUE,  TRUE,  TRUE,  TRUE);   // 3300   6 = 1 + 2 + 3 + 4 + 5
  //------------------------------------------------------------------------------------------------------------
  //#endregion ОТЧЕТ ОБ ИЗМЕНЕНИЯХ КАПИТАЛА
  //============================================================================================================


  //============================================================================================================
  //#region ОТЧЕТ ОБ ИЗМЕНЕНИЯХ КАПИТАЛА :: КОРРЕКТИРОВКА В СВЯЗИ С ИЗМЕНЕНИЕМ УЧЕТНОЙ ПОЛИТИКИ И ИСПРАВЛЕНИЕМ ОШИБОК
  //------------------------------------------------------------------------------------------------------------
  NameStr := pFH.Func('myGetP07');

  Korr(NameStr, 'Файл/Документ/ОтчетИзмКап/Коррект/КапитВс'   , '3500', '3400', '3410', '3420');   // 3500 = 3400 + 3410 + 3420
  Korr(NameStr, 'Файл/Документ/ОтчетИзмКап/Коррект/НераспПриб', '3501', '3401', '3411', '3421');   // 3501 = 3401 + 3411 + 3421
  Korr(NameStr, 'Файл/Документ/ОтчетИзмКап/Коррект/ДрСтатКап' , '3502', '3402', '3412', '3422');   // 3502 = 3402 + 3412 + 3422
  //------------------------------------------------------------------------------------------------------------
  //#endregion ОТЧЕТ ОБ ИЗМЕНЕНИЯХ КАПИТАЛА :: КОРРЕКТИРОВКА В СВЯЗИ С ИЗМЕНЕНИЕМ УЧЕТНОЙ ПОЛИТИКИ И ИСПРАВЛЕНИЕМ ОШИБОК
  //============================================================================================================


  //============================================================================================================
  //#region ОТЧЕТ О ДВИЖЕНИИ ДЕНЕЖНЫХ СРЕДСТВ
  //------------------------------------------------------------------------------------------------------------
  var Gr1, Gr2
    , a4110, a4111, a4112, a4113, a4119, a4120, a4121, a4122, a4123, a4124, a4129, a4100
    , a4210, a4211, a4212, a4213, a4214, a4219, a4220, a4221, a4222, a4223, a4224, a4229, a4200
    , a4310, a4311, a4312, a4313, a4314, a4319
    , a4320, a4321, a4322, a4323, a4329, a4300, a4400, a4500, a4450, a4490
    , v4110_1, v4120_1, v4100_1, v4210_1, v4220_1, v4200_1, v4110_2, v4120_2, v4100_2, v4210_2, v4220_2, v4200_2
    , v4310_1, v4320_1, v4300_1, v4400_1, v4500_1, v4310_2, v4320_2, v4300_2, v4400_2, v4500_2 : string = '';

  Gr1 := 'СумОтч' ;
  Gr2 := 'СумПред';

  a4110 := 'Файл/Документ/ДвижениеДен/ТекОпер/Поступ/'             ;   a4210 := 'Файл/Документ/ДвижениеДен/ИнвОпер/Поступ/'              ;
  a4111 := 'Файл/Документ/ДвижениеДен/ТекОпер/Поступ/ПродПТРУ/'    ;   a4211 := 'Файл/Документ/ДвижениеДен/ИнвОпер/Поступ/ПродВнАктив/'  ;
  a4112 := 'Файл/Документ/ДвижениеДен/ТекОпер/Поступ/АрЛицИнПлат/' ;   a4212 := 'Файл/Документ/ДвижениеДен/ИнвОпер/Поступ/ПродАкцДр/'    ;
  a4113 := 'Файл/Документ/ДвижениеДен/ТекОпер/Поступ/ПродФинВлож/' ;   a4213 := 'Файл/Документ/ДвижениеДен/ИнвОпер/Поступ/ВозврЗаймЦБ/'  ;
                                                                       a4214 := 'Файл/Документ/ДвижениеДен/ИнвОпер/Поступ/ДивПроц/'      ;
  a4119 := 'Файл/Документ/ДвижениеДен/ТекОпер/Поступ/ПрочПоступ/'  ;   a4219 := 'Файл/Документ/ДвижениеДен/ИнвОпер/Поступ/ПрочПоступ/'   ;
  a4120 := 'Файл/Документ/ДвижениеДен/ТекОпер/Платеж/'             ;   a4220 := 'Файл/Документ/ДвижениеДен/ИнвОпер/Платеж/'              ;
  a4121 := 'Файл/Документ/ДвижениеДен/ТекОпер/Платеж/ПоставСМРУ/'  ;   a4221 := 'Файл/Документ/ДвижениеДен/ИнвОпер/Платеж/ПриобрВнАктив/';
  a4122 := 'Файл/Документ/ДвижениеДен/ТекОпер/Платеж/ОплатТрудРаб/';   a4222 := 'Файл/Документ/ДвижениеДен/ИнвОпер/Платеж/ПриобрАкцДр/'  ;
  a4123 := 'Файл/Документ/ДвижениеДен/ТекОпер/Платеж/ПроцДолгОбяз/';   a4223 := 'Файл/Документ/ДвижениеДен/ИнвОпер/Платеж/ПриобрДолгЦБ/' ;
  a4124 := 'Файл/Документ/ДвижениеДен/ТекОпер/Платеж/НалогПриб/'   ;   a4224 := 'Файл/Документ/ДвижениеДен/ИнвОпер/Платеж/ПроцДолгОб/'   ;
  a4129 := 'Файл/Документ/ДвижениеДен/ТекОпер/Платеж/ПрочПлатеж/'  ;   a4229 := 'Файл/Документ/ДвижениеДен/ИнвОпер/Платеж/ПрочПлатеж/'   ;
  a4100 := 'Файл/Документ/ДвижениеДен/ТекОпер/СальдоТек/'          ;   a4200 := 'Файл/Документ/ДвижениеДен/ИнвОпер/СальдоИнв/'           ;

  a4310 := 'Файл/Документ/ДвижениеДен/ФинОпер/Поступ/'             ;   a4320 := 'Файл/Документ/ДвижениеДен/ФинОпер/Платеж/'              ;
  a4311 := 'Файл/Документ/ДвижениеДен/ФинОпер/Поступ/КредЗайм/'    ;   a4321 := 'Файл/Документ/ДвижениеДен/ФинОпер/Платеж/ВыкупАкц/'     ;
  a4312 := 'Файл/Документ/ДвижениеДен/ФинОпер/Поступ/ВкладСоб/'    ;   a4322 := 'Файл/Документ/ДвижениеДен/ФинОпер/Платеж/УплДивИн/'     ;
  a4313 := 'Файл/Документ/ДвижениеДен/ФинОпер/Поступ/АкцДол/'      ;   a4323 := 'Файл/Документ/ДвижениеДен/ФинОпер/Платеж/ВыкВексКЗ/'    ;
  a4314 := 'Файл/Документ/ДвижениеДен/ФинОпер/Поступ/ОблВексДр/'   ;
  a4319 := 'Файл/Документ/ДвижениеДен/ФинОпер/Поступ/ПрочПоступ/'  ;   a4329 := 'Файл/Документ/ДвижениеДен/ФинОпер/Платеж/ПрочПлатеж/'   ;

  a4300 := 'Файл/Документ/ДвижениеДен/ФинОпер/СальдоФин/'          ;
  a4400 := 'Файл/Документ/ДвижениеДен/СальдоОтч/'                  ;
  a4500 := 'Файл/Документ/ДвижениеДен/ОстКонОтч/'                  ;
  a4450 := 'Файл/Документ/ДвижениеДен/ОстНачОтч/'                  ;
  a4490 := 'Файл/Документ/ДвижениеДен/ВлИзмКурс/'                  ;

  NameStr := pFH.Func('myGetP08');

  SetIntVal(a4110 + Gr1, #GD(a4111 + Gr1) + #GD(a4112 + Gr1) + #GD(a4113 + Gr1) + #GD(a4119 + Gr1)                   );
  SetIntVal(a4120 + Gr1, #GD(a4121 + Gr1) + #GD(a4122 + Gr1) + #GD(a4123 + Gr1) + #GD(a4124 + Gr1) + #GD(a4129 + Gr1));
  SetIntVal(a4100 + Gr1, #GD(a4110 + Gr1) - #GD(a4120 + Gr1)                                                         );
  SetIntVal(a4210 + Gr1, #GD(a4211 + Gr1) + #GD(a4212 + Gr1) + #GD(a4213 + Gr1) + #GD(a4214 + Gr1) + #GD(a4219 + Gr1));
  SetIntVal(a4220 + Gr1, #GD(a4221 + Gr1) + #GD(a4222 + Gr1) + #GD(a4223 + Gr1) + #GD(a4224 + Gr1) + #GD(a4229 + Gr1));
  SetIntVal(a4200 + Gr1, #GD(a4210 + Gr1) - #GD(a4220 + Gr1)                                                         );

  SetIntVal(a4110 + Gr2, #GD(a4111 + Gr2) + #GD(a4112 + Gr2) + #GD(a4113 + Gr2) + #GD(a4119 + Gr2)                   );
  SetIntVal(a4120 + Gr2, #GD(a4121 + Gr2) + #GD(a4122 + Gr2) + #GD(a4123 + Gr2) + #GD(a4124 + Gr2) + #GD(a4129 + Gr2));
  SetIntVal(a4100 + Gr2, #GD(a4110 + Gr2) - #GD(a4120 + Gr2)                                                         );
  SetIntVal(a4210 + Gr2, #GD(a4211 + Gr2) + #GD(a4212 + Gr2) + #GD(a4213 + Gr2) + #GD(a4214 + Gr2) + #GD(a4219 + Gr2));
  SetIntVal(a4220 + Gr2, #GD(a4221 + Gr2) + #GD(a4222 + Gr2) + #GD(a4223 + Gr2) + #GD(a4224 + Gr2) + #GD(a4229 + Gr2));
  SetIntVal(a4200 + Gr2, #GD(a4210 + Gr2) - #GD(a4220 + Gr2)                                                         );

  v4110_1 := #GV(a4110 + Gr1)+' = '+#GD(a4111 + Gr1)+' + '+#GD(a4112 + Gr1)+' + '+#GD(a4113 + Gr1)+' + '+#GD(a4119 + Gr1)                       ;
  v4120_1 := #GV(a4120 + Gr1)+' = '+#GD(a4121 + Gr1)+' + '+#GD(a4122 + Gr1)+' + '+#GD(a4123 + Gr1)+' + '+#GD(a4124 + Gr1)+' + '+#GD(a4129 + Gr1);
  v4100_1 := #GV(a4100 + Gr1)+' = '+#GD(a4110 + Gr1)+' - '+#GD(a4120 + Gr1)                                                                     ;
  v4210_1 := #GV(a4210 + Gr1)+' = '+#GD(a4211 + Gr1)+' + '+#GD(a4212 + Gr1)+' + '+#GD(a4213 + Gr1)+' + '+#GD(a4214 + Gr1)+' + '+#GD(a4219 + Gr1);
  v4220_1 := #GV(a4220 + Gr1)+' = '+#GD(a4221 + Gr1)+' + '+#GD(a4222 + Gr1)+' + '+#GD(a4223 + Gr1)+' + '+#GD(a4224 + Gr1)+' + '+#GD(a4229 + Gr1);
  v4200_1 := #GV(a4200 + Gr1)+' = '+#GD(a4210 + Gr1)+' - '+#GD(a4220 + Gr1)                                                                     ;

  v4110_2 := #GV(a4110 + Gr2)+' = '+#GD(a4111 + Gr2)+' + '+#GD(a4112 + Gr2)+' + '+#GD(a4113 + Gr2)+' + '+#GD(a4119 + Gr2)                       ;
  v4120_2 := #GV(a4120 + Gr2)+' = '+#GD(a4121 + Gr2)+' + '+#GD(a4122 + Gr2)+' + '+#GD(a4123 + Gr2)+' + '+#GD(a4124 + Gr2)+' + '+#GD(a4129 + Gr2);
  v4100_2 := #GV(a4100 + Gr2)+' = '+#GD(a4110 + Gr2)+' - '+#GD(a4120 + Gr2)                                                                     ;
  v4210_2 := #GV(a4210 + Gr2)+' = '+#GD(a4211 + Gr2)+' + '+#GD(a4212 + Gr2)+' + '+#GD(a4213 + Gr2)+' + '+#GD(a4214 + Gr2)+' + '+#GD(a4219 + Gr2);
  v4220_2 := #GV(a4220 + Gr2)+' = '+#GD(a4221 + Gr2)+' + '+#GD(a4222 + Gr2)+' + '+#GD(a4223 + Gr2)+' + '+#GD(a4224 + Gr2)+' + '+#GD(a4229 + Gr2);
  v4200_2 := #GV(a4200 + Gr2)+' = '+#GD(a4210 + Gr2)+' - '+#GD(a4220 + Gr2)                                                                     ;

  #Log(a4110 + Gr1, 'Стр. 4110, гр. 3: равно сумме строк 4111, 4112, 4113 и 4119 по данной графе'      , v4110_1)
  #Log(a4120 + Gr1, 'Стр. 4120, гр. 3: равно сумме строк 4121, 4122, 4123, 4124 и 4129 по данной графе', v4120_1)
  #Log(a4100 + Gr1, 'Стр. 4100, гр. 3: равно разнице строк 4110 и 4120 по данной графе'                , v4100_1)
  #Log(a4210 + Gr1, 'Стр. 4210, гр. 3: равно сумме строк 4211, 4212, 4213, 4214 и 4219 по данной графе', v4210_1)
  #Log(a4220 + Gr1, 'Стр. 4220, гр. 3: равно сумме строк 4221, 4222, 4223, 4224 и 4229 по данной графе', v4220_1)
  #Log(a4200 + Gr1, 'Стр. 4200, гр. 3: равно разнице строк 4210 и 4220 по данной графе'                , v4200_1)

  #Log(a4110 + Gr2, 'Стр. 4110, гр. 4: равно сумме строк 4111, 4112, 4113 и 4119 по данной графе'      , v4110_2)
  #Log(a4120 + Gr2, 'Стр. 4120, гр. 4: равно сумме строк 4121, 4122, 4123, 4124 и 4129 по данной графе', v4120_2)
  #Log(a4100 + Gr2, 'Стр. 4100, гр. 4: равно разнице строк 4110 и 4120 по данной графе'                , v4100_2)
  #Log(a4210 + Gr2, 'Стр. 4210, гр. 4: равно сумме строк 4211, 4212, 4213, 4214 и 4219 по данной графе', v4210_2)
  #Log(a4220 + Gr2, 'Стр. 4220, гр. 4: равно сумме строк 4221, 4222, 4223, 4224 и 4229 по данной графе', v4220_2)
  #Log(a4200 + Gr2, 'Стр. 4200, гр. 4: равно разнице строк 4210 и 4220 по данной графе'                , v4200_2)

  NameStr := pFH.Func('myGetP09');

  SetIntVal(a4310 + Gr1, #GD(a4311 + Gr1) + #GD(a4312 + Gr1) + #GD(a4313 + Gr1) + #GD(a4314 + Gr1) + #GD(a4319 + Gr1));
  SetIntVal(a4320 + Gr1, #GD(a4321 + Gr1) + #GD(a4322 + Gr1) + #GD(a4323 + Gr1) + #GD(a4329 + Gr1)                   );
  SetIntVal(a4300 + Gr1, #GD(a4310 + Gr1) - #GD(a4320 + Gr1)                                                         );
  SetIntVal(a4400 + Gr1, #GD(a4100 + Gr1) + #GD(a4200 + Gr1) + #GD(a4300 + Gr1)                                      );
  SetIntVal(a4500 + Gr1, #GD(a4450 + Gr1) + #GD(a4400 + Gr1) + #GD(a4490 + Gr1)                                      );

  SetIntVal(a4310 + Gr2, #GD(a4311 + Gr2) + #GD(a4312 + Gr2) + #GD(a4313 + Gr2) + #GD(a4314 + Gr2) + #GD(a4319 + Gr2));
  SetIntVal(a4320 + Gr2, #GD(a4321 + Gr2) + #GD(a4322 + Gr2) + #GD(a4323 + Gr2) + #GD(a4329 + Gr2)                   );
  SetIntVal(a4300 + Gr2, #GD(a4310 + Gr2) - #GD(a4320 + Gr2)                                                         );
  SetIntVal(a4400 + Gr2, #GD(a4100 + Gr2) + #GD(a4200 + Gr2) + #GD(a4300 + Gr2)                                      );
  SetIntVal(a4500 + Gr2, #GD(a4450 + Gr2) + #GD(a4400 + Gr2) + #GD(a4490 + Gr2)                                      );

  v4310_1 := #GV(a4310 + Gr1)+' = '+#GV(a4311 + Gr1)+' + '+#GV(a4312 + Gr1)+' + '+#GV(a4313 + Gr1)+' + '+#GV(a4314 + Gr1)+' + '+#GV(a4319 + Gr1);
  v4320_1 := #GV(a4320 + Gr1)+' = '+#GV(a4321 + Gr1)+' + '+#GV(a4322 + Gr1)+' + '+#GV(a4323 + Gr1)+' + '+#GV(a4329 + Gr1)                       ;
  v4300_1 := #GV(a4300 + Gr1)+' = '+#GV(a4310 + Gr1)+' - '+#GV(a4320 + Gr1)                                                                     ;
  v4400_1 := #GV(a4400 + Gr1)+' = '+#GV(a4100 + Gr1)+' + '+#GV(a4200 + Gr1)+' + '+#GV(a4300 + Gr1)                                              ;
  v4500_1 := #GV(a4500 + Gr1)+' = '+#GV(a4450 + Gr1)+' + '+#GV(a4400 + Gr1)+' + '+#GV(a4490 + Gr1)                                              ;

  v4310_2 := #GV(a4310 + Gr2)+' = '+#GV(a4311 + Gr2)+' + '+#GV(a4312 + Gr2)+' + '+#GV(a4313 + Gr2)+' + '+#GV(a4314 + Gr2)+' + '+#GV(a4319 + Gr2);
  v4320_2 := #GV(a4320 + Gr2)+' = '+#GV(a4321 + Gr2)+' + '+#GV(a4322 + Gr2)+' + '+#GV(a4323 + Gr2)+' + '+#GV(a4329 + Gr2)                       ;
  v4300_2 := #GV(a4300 + Gr2)+' = '+#GV(a4310 + Gr2)+' - '+#GV(a4320 + Gr2)                                                                     ;
  v4400_2 := #GV(a4400 + Gr2)+' = '+#GV(a4100 + Gr2)+' + '+#GV(a4200 + Gr2)+' + '+#GV(a4300 + Gr2)                                              ;
  v4500_2 := #GV(a4500 + Gr2)+' = '+#GV(a4450 + Gr2)+' + '+#GV(a4400 + Gr2)+' + '+#GV(a4490 + Gr2)                                              ;

  #Log(a4310 + Gr1, 'Стр. 4310, гр. 3: равно сумме строк 4311, 4312, 4313, 4314 и 4319 по данной графе', v4310_1)
  #Log(a4320 + Gr1, 'Стр. 4320, гр. 3: равно сумме строк 4321, 4322, 4323 и 4329 по данной графе'      , v4320_1)
  #Log(a4300 + Gr1, 'Стр. 4300, гр. 3: равно разнице строк 4310 и 4320 по данной графе'                , v4300_1)
  #Log(a4400 + Gr1, 'Стр. 4400, гр. 3: равно сумме строк 4100, 4200 и 4300 по данной графе'            , v4400_1)
  #Log(a4500 + Gr1, 'Стр. 4500, гр. 3: равно сумме строк 4450, 4400 и 4490 по данной графе'            , v4500_1)

  #Log(a4310 + Gr2, 'Стр. 4310, гр. 4: равно сумме строк 4311, 4312, 4313, 4314 и 4319 по данной графе', v4310_2)
  #Log(a4320 + Gr2, 'Стр. 4320, гр. 4: равно сумме строк 4321, 4322, 4323 и 4329 по данной графе'      , v4320_2)
  #Log(a4300 + Gr2, 'Стр. 4300, гр. 4: равно разнице строк 4310 и 4320 по данной графе'                , v4300_2)
  #Log(a4400 + Gr2, 'Стр. 4400, гр. 4: равно сумме строк 4100, 4200 и 4300 по данной графе'            , v4400_2)
  #Log(a4500 + Gr2, 'Стр. 4500, гр. 4: равно сумме строк 4450, 4400 и 4490 по данной графе'            , v4500_2)
  //------------------------------------------------------------------------------------------------------------
  //#endregion ОТЧЕТ О ДВИЖЕНИИ ДЕНЕЖНЫХ СРЕДСТВ
  //============================================================================================================


  //============================================================================================================
  //#region ОТЧЕТ О ЦЕЛЕВОМ ИСПОЛЬЗОВАНИИ СРЕДСТВ
  //------------------------------------------------------------------------------------------------------------
  var aPost, aPost1, aPost2, aPost3, aOstKon, aOstNach, aIsp1, aIsp2, aIsp3, aIsp4
    , vPost_1, vOstKon_1
    , vPost_2, vOstKon_2 : string = '';

  Gr1 := 'СумОтч' ;
  Gr2 := 'СумПред';

  aPost    := 'Файл/Документ/ЦелИсп/Поступило/'               ;
  aPost1   := 'Файл/Документ/ЦелИсп/Поступило/ВзносЦелПоступ/';
  aPost2   := 'Файл/Документ/ЦелИсп/Поступило/ПрибПредДеят/'  ;
  aPost3   := 'Файл/Документ/ЦелИсп/Поступило/Прочие/'        ;
  aOstKon  := 'Файл/Документ/ЦелИсп/ОстатКонОтч/'             ;
  aOstNach := 'Файл/Документ/ЦелИсп/ОстатНачОтч/'             ;
  aIsp1    := 'Файл/Документ/ЦелИсп/Использовано/ЦелМер/'     ;
  aIsp2    := 'Файл/Документ/ЦелИсп/Использовано/СодеожОрг/'  ;
  aIsp3    := 'Файл/Документ/ЦелИсп/Использовано/ПриобОСИн/'  ;
  aIsp4    := 'Файл/Документ/ЦелИсп/Использовано/Прочие/'     ;

  NameStr := pFH.Func('myGetP10');

  SetIntVal(aPost   + Gr1, #GD(aPost1   + Gr1) + #GD(aPost2 + Gr1) + #GD(aPost3 + Gr1)                                                         );
  SetIntVal(aOstKon + Gr1, #GD(aOstNach + Gr1) + #GD(aPost  + Gr1) - #GD(aIsp1  + Gr1) - #GD(aIsp2 + Gr1) - #GD(aIsp3 + Gr1) - #GD(aIsp4 + Gr1));

  SetIntVal(aPost   + Gr2, #GD(aPost1   + Gr2) + #GD(aPost2 + Gr2) + #GD(aPost3 + Gr2)                                                         );
  SetIntVal(aOstKon + Gr2, #GD(aOstNach + Gr2) + #GD(aPost  + Gr2) - #GD(aIsp1  + Gr2) - #GD(aIsp2 + Gr2) - #GD(aIsp3 + Gr2) - #GD(aIsp4 + Gr2));

  vPost_1   := #GV(aPost   + Gr1)+' = '+#GV(aPost1   + Gr1)+' + '+#GV(aPost2 + Gr1)+' + '+#GV(aPost3 + Gr1)                                                                     ;
  vPost_2   := #GV(aOstKon + Gr1)+' = '+#GV(aOstNach + Gr1)+' + '+#GV(aPost  + Gr1)+' - '+#GV(aIsp1  + Gr1)+' - '+#GV(aIsp2 + Gr1)+' - '+#GV(aIsp3 + Gr1)+' - '+#GV(aIsp4 + Gr1);

  vOstKon_1 := #GV(aPost   + Gr2)+' = '+#GV(aPost1   + Gr2)+' + '+#GV(aPost2 + Gr2)+' + '+#GV(aPost3 + Gr2)                                                                     ;
  vOstKon_2 := #GV(aOstKon + Gr2)+' = '+#GV(aOstNach + Gr2)+' + '+#GV(aPost  + Gr2)+' - '+#GV(aIsp1  + Gr2)+' - '+#GV(aIsp2 + Gr2)+' - '+#GV(aIsp3 + Gr2)+' - '+#GV(aIsp4 + Gr2);

  #Log(aPost   + Gr1, 'Стр. "Поступило средств", гр. 1: равно сумме строк "Взносы...", "Прибыль от..." и "Прочие поступления" по данной графе'       , vPost_1  )
  #Log(aOstKon + Gr1, 'Стр. "Остаток средств на конец...", гр. 1: равно "Ост. ср. на начало..." + "Поступило..." - "Использовано..." по данной графе', vPost_2  )

  #Log(aPost   + Gr2, 'Стр. "Поступило средств", гр. 2: равно сумме строк "Взносы...", "Прибыль от..." и "Прочие поступления" по данной графе'       , vOstKon_1)
  #Log(aOstKon + Gr2, 'Стр. "Остаток средств на конец...", гр. 2: равно "Ост. ср. на начало..." + "Поступило..." - "Использовано..." по данной графе', vOstKon_2)
  //------------------------------------------------------------------------------------------------------------
  //#endregion ОТЧЕТ О ЦЕЛЕВОМ ИСПОЛЬЗОВАНИИ СРЕДСТВ
  //============================================================================================================
@end.
//#endregion ДЕЙСТВИЯ ВЫПОЛНЯЕМЫЕ ПРИ РАСЧЕТЕ
//************************************************************************************************************


//============================================================================================================
//#region ДЕЙСТВИЯ ВЫПОЛНЯЕМЫЕ ПРИ ЭКСПОРТЕ В XML
//------------------------------------------------------------------------------------------------------------
@Script On_ExportXML : boolean;
  function ModificationPath(StrName, Pref : string; var GetVal : string) : string;
  begin
    var PosSlesh : integer;
    var BufStrName : string;

    BufStrName := _BUHPZ_;

    PosSlesh := Pos('\', BufStrName);
    while (PosSlesh <> 0) do
    {
      BufStrName := SubStr(BufStrName, PosSlesh + 1, Length(BufStrName) - PosSlesh);
      PosSlesh := Pos('\', BufStrName);
    }

    GetVal := Pref + BufStrName + SubStr(StrName, Pos('.', StrName), Length(StrName) - Pos('.', StrName) + 1);
    Result := SubStr(_BUHPZ_, 1, Pos(BufStrName, _BUHPZ_) - 1) + GetVal;
  end;
@begin
  var _NaimFajlPZ  : string ; _NaimFajlPZ   := GetStrVal('Файл/Документ/Пояснения/НаимФайлПЗ' );
  var _NaimFajlAZ  : string ; _NaimFajlAZ   := GetStrVal('Файл/Документ/АудитЗакл/НаимФайлАЗ' );
  var _NaimFajlZSHP: string ; _NaimFajlZSHP := GetStrVal('Файл/Документ/ЗаявСХПр/НаимФайлЗСХП');

  #declare DopFiles(_Naim, _pref, _adr)
    if (#_Naim <> '')
    {
      var _bufBUHPZ_, _GetName_: string; _bufBUHPZ_ := ModificationPath(#_Naim, #_pref, _GetName_);

      if CopyMoveFile(#_Naim, _bufBUHPZ_, False, ecmfClientFrom + ecmfClientTo)
      {
        Message('Файл '+#_Naim+' скопирован в '#13''+_bufBUHPZ_, Information);
        SetFldVal(#_adr, _GetName_);
      }
      else
      {
        Message('Файл '+#_Naim+' не найден.'#13'Выберите существующий файл', Warning);
      }
    }
  #end.

  #DopFiles(_NaimFajlPZ  , 'NO_BUHPZ_'  , 'Файл/Документ/Пояснения/НаимФайлПЗ' );
  #DopFiles(_NaimFajlAZ  , 'NO_BUHAZ_'  , 'Файл/Документ/АудитЗакл/НаимФайлАЗ' );
  #DopFiles(_NaimFajlZSHP, 'NO_BUHZSHP_', 'Файл/Документ/ЗаявСХПр/НаимФайлЗСХП');

  On_Visable;

  //-----------------------------------------------------

  SetFldVal('Файл/ИдФайл', Replace(_IdFail_, '.xml', ''));

  if (not XMLMap.ExpToXml(_XmlFileName_)) {
    Message('On_ExportXML: '+ XMLMap.GetStLastError, cancelButton+Warning);
    Exit;
  }

  message('Выгружен в файл ' + _XmlFileName_);
@end.
//#endregion ДЕЙСТВИЯ ВЫПОЛНЯЕМЫЕ ПРИ ЭКСПОРТЕ В XML
//************************************************************************************************************
