//------------------------------------------------------------------------------------------------------------
//                                                                                    (c) корпорация Галактика
// Галактика 9.1 - модуль "Электронная отчетность"
// Алгоритмы расчета : "Сведения о неполной занятости и движении работников (П-4 (НЗ)) (2019)"
//------------------------------------------------------------------------------------------------------------


//============================================================================================================
// #region СЕРВИСНЫЕ МЕТОДЫ
//------------------------------------------------------------------------------------------------------------
@Script GetStrVal(fld:string):string;
@begin
  Result := Trim(XMLMAP.GetAttrValueByName(fld));
@end.

//------------------------------------------------------------------------------------------------------------
@Script GetDblVal(fld:string):double;
@begin
  Result := Double(XMLMAP.GetAttrValueByName(fld));
@end.

//------------------------------------------------------------------------------------------------------------
@Script SetFldVal(fld:string; val:variant);
@begin
  XMLMAP.SetVariantAttrValueByName_Formula(fld, val, 2);
@end.

//------------------------------------------------------------------------------------------------------------
@Script MessageErrorStop_ALG(mesMesAdrXML, mesPole, mesMes: string): boolean;
@begin
  MesError.InsertMesError(mesMesAdrXML, Comp(0), '', mesPole, mesMes);
  Result := True;
@end.

//------------------------------------------------------------------------------------------------------------
@Script NullStr(fld:string):Boolean;
@begin
  Result := (GetStrVal(fld) = '');
@end.

// #endregion СЕРВИСНЫЕ МЕТОДЫ
//************************************************************************************************************


//============================================================================================================
// #region On_Check ДЕЙСТВИЯ ВЫПОЛНЯЕМЫЕ ПРИ ПРОВЕРКЕ ПОЛЕЙ
//------------------------------------------------------------------------------------------------------------
@Script On_Check : boolean;
  //==========================================================================================================
  // #region СЕРВИС On_Check
  //----------------------------------------------------------------------------------------------------------
  #undef _IsValid
  #declare _IsValid(_Valid, _AdrXML, _Pole)
    if not #_Valid(#_AdrXML, getMes)
      MessageErrorStop_ALG
      (
        #_AdrXML
      , #_Pole
      , 'Поле не соответствует формату. ' + getMes
      );
  #end

  //----------------------------------------------------------------------------------------------------------
  #undef _IsValidNull
  #declare _IsValidNull(_Valid, _AdrXML, _Pole)
    if not #_Valid(#_AdrXML, getMes)
      MessageErrorStop_ALG
      (
        #_AdrXML
      , #_Pole
      , 'Поле не соответствует формату. Поле обязательно к заполнению'
      );
  #end

  //----------------------------------------------------------------------------------------------------------
  #declare _IfNot(_If, _Name, _XMLAdr, _Mes)
    if not (#_If)
      MessageErrorStop_ALG (#_XMLAdr, #_Name, #_Mes);
  #end

  //----------------------------------------------------------------------------------------------------------
  #declare _IfNotBuf(_If, _Name, _XMLAdr, _Mes)
    if not (#_If)
      MessageErrorStop_ALG (#_XMLAdr, #_Name, #_Mes + ' (РАССЧ. '+String(bufRes)+')');
  #end

  //----------------------------------------------------------------------------------------------------------
  #declare _IfNotEqualBuf(_Pole, _Name)
    if not (bufRes = d#_Pole)
      MessageErrorStop_ALG (a#_Pole, #_Name, getMes + ' (РАССЧ. '+String(bufRes)+')');
  #end

  //----------------------------------------------------------------------------------------------------------
  function IsValidDate(_adr: string; var _mes: string) : boolean;
  begin //Дата
    _mes := 'Поле обязательно к заполнению';

    Result := False;
    Result := ((not NullStr(_adr)) and (GetStrVal(_adr) <> 'ДД мес ГГГГ'));
  end;

  //----------------------------------------------------------------------------------------------------------
  function IsValidNull(_adr: string; var _mes: string) : boolean;
  begin // Обязательные поля
    _mes := 'Поле обязательно к заполнению';

    Result := False;
    Result := not NullStr(_adr);
  end;

  // #endregion СЕРВИС On_Check
  //**********************************************************************************************************
@begin

  //----------------------------------------------------------------------------------------------------------
  // #region ОБЪЯВЛЕНИЕ ПЕРЕМЕННЫХ

  var getMes: string;
  var bufRes, bufRes_1: double;

  var a01, a02, a03, a05, a06, a07, a08, a09, a10, a12, a13, a14, a15, a16, a17
    , mes01, mes02, mes03, mes04, mes05, mes06, mes07, mes08, mes09, mes10, mes11, mes12, mes13: string;

  var d01, d02, d03, d05, d06, d07, d08, d09, d10, d12, d13, d14, d15, d16, d17: double;

  // #endregion ОБЪЯВЛЕНИЕ ПЕРЕМЕННЫХ


  #_IsValid(IsValidDate, 'Файл/Документ/ДатаДок', 'Дата документа')

  #_IsValidNull(IsValidNull, 'Файл/Документ/Орг/НаимОрг'     , 'Наименование организации')
  #_IsValidNull(IsValidNull, 'Файл/Документ/Орг/Адр'         , 'Адрес'                   )
  #_IsValidNull(IsValidNull, 'Файл/Документ/Орг/ОКПО'        , 'ОКПО'                    )
  #_IsValidNull(IsValidNull, 'Файл/Документ/Подписант/Должн' , 'Должность'               )
  #_IsValidNull(IsValidNull, 'Файл/Документ/Подписант/ФИО'   , 'ФИО'                     )
  #_IsValidNull(IsValidNull, 'Файл/Документ/Подписант/Тел'   , 'Телефон'                 )
  #_IsValidNull(IsValidNull, 'Файл/Документ/Подписант/E_mail', 'E-mail'                  )


  //----------------------------------------------------------------------------------------------------------
  // #region ИНИЦИАЛИЗАЦИЯ ПЕРЕМЕННЫХ СОДЕРЖАЩИХ СООБЩЕНИЯ

  mes01 := '01 :: Строка 01 <= сумма строк 13 и 08'                                           ;
  mes02 := '02 :: Строка 02 <= сумма строк 13 и 08'                                           ;
  mes03 := '03 :: Строка 03 <= сумма строк 13 и 08'                                           ;
  mes04 := '04 :: Строка 05 <= сумма строк 13 и 08'                                           ;
  mes05 := '05 :: Сумма строк 01, 02, 03, 05 <= сумма строк 13 и 08'                          ;
  mes06 := '06 :: При наличии данных по строке 07 должна быть заполнена строка 06'            ;
  mes07 := '07 :: Строка 07 <= строка 06'                                                     ;
  mes08 := '08 :: При наличии данных по строкам 09, 10 или 12 должна быть заполнена строка 08';
  mes09 := '09 :: Сумма строк 09, 10, 12 <= строка 08'                                        ;
  mes10 := '10 :: Строка 14 <= строка 13'                                                     ;
  mes11 := '11 :: Строка 15 <= строка 13'                                                     ;
  mes12 := '12 :: Строка 16 <= строка 13'                                                     ;
  mes13 := '13 :: Строка 17 <= строка 13'                                                     ;

  // #endregion ИНИЦИАЛИЗАЦИЯ ПЕРЕМЕННЫХ СОДЕРЖАЩИХ СООБЩЕНИЯ

  //----------------------------------------------------------------------------------------------------------
  // #region ИНИЦИАЛИЗАЦИЯ ПЕРЕМЕННЫХ

  a01 := 'Файл/Документ/Стран1/Стр01';  d01 := GetDblVal(a01);
  a02 := 'Файл/Документ/Стран1/Стр02';  d02 := GetDblVal(a02);
  a03 := 'Файл/Документ/Стран1/Стр03';  d03 := GetDblVal(a03);
  a05 := 'Файл/Документ/Стран1/Стр05';  d05 := GetDblVal(a05);
  a06 := 'Файл/Документ/Стран1/Стр06';  d06 := GetDblVal(a06);
  a07 := 'Файл/Документ/Стран1/Стр07';  d07 := GetDblVal(a07);
  a08 := 'Файл/Документ/Стран1/Стр08';  d08 := GetDblVal(a08);
  a09 := 'Файл/Документ/Стран1/Стр09';  d09 := GetDblVal(a09);
  a10 := 'Файл/Документ/Стран1/Стр10';  d10 := GetDblVal(a10);
  a12 := 'Файл/Документ/Стран1/Стр12';  d12 := GetDblVal(a12);
  a13 := 'Файл/Документ/Стран1/Стр13';  d13 := GetDblVal(a13);
  a14 := 'Файл/Документ/Стран1/Стр14';  d14 := GetDblVal(a14);
  a15 := 'Файл/Документ/Стран1/Стр15';  d15 := GetDblVal(a15);
  a16 := 'Файл/Документ/Стран1/Стр16';  d16 := GetDblVal(a16);
  a17 := 'Файл/Документ/Стран1/Стр17';  d17 := GetDblVal(a17);

  // #endregion ИНИЦИАЛИЗАЦИЯ ПЕРЕМЕННЫХ

  //----------------------------------------------------------------------------------------------------------
  // #region 01 :: Строка 01 <= сумма строк 13 и 08

  bufRes := d13 + d08;

  #_IfNotBuf(d01 <= bufRes, 'Стр. 01', a01, mes01)

  // #endregion 01 :: Строка 01 <= сумма строк 13 и 08

  //----------------------------------------------------------------------------------------------------------
  // #region 02 :: Строка 02 <= сумма строк 13 и 08

  bufRes := d13 + d08;

  #_IfNotBuf(d02 <= bufRes, 'Стр. 02', a02, mes02)

  // #endregion 02 :: Строка 02 <= сумма строк 13 и 08

  //----------------------------------------------------------------------------------------------------------
  // #region 03 :: Строка 03 <= сумма строк 13 и 08

  bufRes := d13 + d08;

  #_IfNotBuf(d03 <= bufRes, 'Стр. 03', a03, mes03)

  // #endregion 03 :: Строка 03 <= сумма строк 13 и 08

  //----------------------------------------------------------------------------------------------------------
  // #region 04 :: Строка 05 <= сумма строк 13 и 08

  bufRes := d13 + d08;

  #_IfNotBuf(d05 <= bufRes, 'Стр. 05', a05, mes04)

  // #endregion 04 :: Строка 05 <= сумма строк 13 и 08

  //----------------------------------------------------------------------------------------------------------
  // #region 05 :: Сумма строк 01, 02, 03, 05 <= сумма строк 13 и 08

  bufRes   := d01 + d02 + d03 + d05;
  bufRes_1 := d13 + d08;

  #_IfNot(bufRes <= bufRes_1, 'Стр. 01, 02, 03, 05', a01, mes05 + ' (РАССЧ. '+String(bufRes)+' <= '+String(bufRes_1)+')')

  // #endregion 05 :: Сумма строк 01, 02, 03, 05 <= сумма строк 13 и 08

  //----------------------------------------------------------------------------------------------------------
  // #region 06 :: При наличии данных по строке 07 должна быть заполнена строка 06

  if not NullStr(a07)
  {
    #_IfNot((not NullStr(a06)), 'Стр. 06', a06, mes06)
  }

  // #endregion 06 :: При наличии данных по строке 07 должна быть заполнена строка 06

  //----------------------------------------------------------------------------------------------------------
  // #region 07 :: Строка 07 <= строка 06

  #_IfNot(d07 <= d06, 'Стр. 07', a07, mes07)

  // #endregion 07 :: Строка 07 <= строка 06

  //----------------------------------------------------------------------------------------------------------
  // #region 08 :: При наличии данных по строкам 09, 10 или 12 должна быть заполнена строка 08

  if (not NullStr(a09)) or (not NullStr(a10)) or (not NullStr(a12))
  {
    #_IfNot((not NullStr(a08)), 'Стр. 08', a08, mes08)
  }

  // #endregion 08 :: При наличии данных по строкам 09, 10 или 12 должна быть заполнена строка 08

  //----------------------------------------------------------------------------------------------------------
  // #region 09 :: Сумма строк 09, 10, 12 <= строка 08

  bufRes := d09 + d10 + d12;

  #_IfNotBuf(bufRes <= d08, 'Стр. 08', a08, mes09)

  // #endregion 09 :: Сумма строк 09, 10, 12 <= строка 08

  //----------------------------------------------------------------------------------------------------------
  // #region 10 :: Строка 14 <= строка 13

  #_IfNot(d14 <= d13, 'Стр. 14', a14, mes10)

  // #endregion 10 :: Строка 14 <= строка 13

  //----------------------------------------------------------------------------------------------------------
  // #region 11 :: Строка 15 <= строка 13

  #_IfNot(d15 <= d13, 'Стр. 15', a15, mes11)

  // #endregion 11 :: Строка 15 <= строка 13

  //----------------------------------------------------------------------------------------------------------
  // #region 12 :: Строка 16 <= строка 13

  #_IfNot(d16 <= d13, 'Стр. 16', a16, mes12)

  // #endregion 12 :: Строка 16 <= строка 13

  //----------------------------------------------------------------------------------------------------------
  // #region 13 :: Строка 17 <= строка 13

  #_IfNot(d17 <= d13, 'Стр. 17', a17, mes13)

  // #endregion 13 :: Строка 17 <= строка 13

@end.
// #endregion On_Check ДЕЙСТВИЯ ВЫПОЛНЯЕМЫЕ ПРИ ПРОВЕРКЕ ПОЛЕЙ
//************************************************************************************************************


//============================================================================================================
// #region On_Recalc ДЕЙСТВИЯ ВЫПОЛНЯЕМЫЕ ПРИ РАСЧЕТЕ
//------------------------------------------------------------------------------------------------------------
@Script On_Recalc : boolean;
@begin

  //----------------------------------------------------------------------------------------------------------
  // #region ТИТУЛЬНЫЙ ЛИСТ

  if ((GetStrVal('Файл/Документ/ДатаДок') = '') or (GetStrVal('Файл/Документ/ДатаДок') = 'ДД.ММ.ГГГГ'))
    SetFldVal('Файл/Документ/ДатаДок', DateToStr(Cur_Date, XMLMap.GetAttrVFormatByName('Файл/Документ/ДатаДок')));

  // #endregion ТИТУЛЬНЫЙ ЛИСТ

@end.
// #endregion On_Recalc ДЕЙСТВИЯ ВЫПОЛНЯЕМЫЕ ПРИ РАСЧЕТЕ
//************************************************************************************************************
