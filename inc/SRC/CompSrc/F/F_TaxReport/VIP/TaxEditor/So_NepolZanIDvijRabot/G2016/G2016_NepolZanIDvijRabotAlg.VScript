//------------------------------------------------------------------------------------------------------------
//                                                                                    (c) корпорация Галактика
// Галактика 9.1 - модуль "Электронная отчетность"
// Алгоритмы расчета : "Сведения о неполной занятости и движении работников(П-4(НЗ))"
//------------------------------------------------------------------------------------------------------------


//============================================================================================================
//#region ДОБЫЧА ДАННЫХ ИЗ ГАЛАКТИКИ
//------------------------------------------------------------------------------------------------------------
// заголовочные поля
&p_naimorg = &собсорг[рез:наим]
&p_Adr     = &СобсОрг[Рез:Адр]
&p_Tel     = &СобсОрг[Рез:Тел]
&p_OKPO    = &СобсОрг[Рез:ОКПО]
&p_Email   = &СобсОрг[Рез:Email]

&p_Dolgn   = 'Руководитель организации'
&p_FIO     = &РукПред[Рез:Фам] + ' ' +  &РукПред[Рез:Имя] + ' ' +  &РукПред[Рез:Отч]
//#endregion ДОБЫЧА ДАННЫХ ИЗ ГАЛАКТИКИ
//************************************************************************************************************


//============================================================================================================
// #region СЕРВИСНЫЕ МЕТОДЫ
//------------------------------------------------------------------------------------------------------------
@Script GetStrVal(fld:string):string;
@begin
  Result := Trim(XMLMAP.GetAttrValueByName(fld));
@end.

//------------------------------------------------------------------------------------------------------------
@Script GetDblVal(fld:string):double;
@begin
  Result := Round(Double(XMLMAP.GetAttrValueByName(fld)), 2);
@end.

//------------------------------------------------------------------------------------------------------------
@Script SetFldVal(fld:string;val:string);
@begin
  XMLMAP.SetAttrValueByName(fld,val,2);
@end.

//------------------------------------------------------------------------------------------------------------
@Script MesErrStop(mesMesAdrXML, mesPole, mesMes: string): boolean;
@begin
  MesError.InsertMesError(mesMesAdrXML, Comp(0), '', mesPole, mesMes, 0, 0);
  Result := True;
@end.

//------------------------------------------------------------------------------------------------------------
@Script NullStr(fld:string):boolean;
@begin
  Result := XMLMAP.GetIsNullAttrValueByName(fld);
@end.
// #endregion СЕРВИСНЫЕ МЕТОДЫ
//************************************************************************************************************


//============================================================================================================
//#region ДЕЙСТВИЯ ВЫПОЛНЯЕМЫЕ ПРИ ПРОВЕРКЕ
//------------------------------------------------------------------------------------------------------------
@Script On_Check : boolean;
@begin
  var fl : boolean;
  var a01, a02, a03, a05, a06, a07, a08, a09, a10, a12, a13, a14, a15, a16, a17 : string;
  var d01, d02, d03, d05, d06, d07, d08, d09, d10, d12, d13, d14, d15, d16, d17, sum_13_08 : double;

  a01 := 'Документ/НеполЗанят/ЧРИнцРаб'            ;  d01 := GetDblVal(a01);
  a02 := 'Документ/НеполЗанят/ЧРСоглаш'            ;  d02 := GetDblVal(a02);
  a03 := 'Документ/НеполЗанят/ЧРвПростое'          ;  d03 := GetDblVal(a03);
  a05 := 'Документ/НеполЗанят/ЧРбезСохЗП'          ;  d05 := GetDblVal(a05);
  a06 := 'Документ/НеполЗанят/ЧРПСписСост/Всего'   ;  d06 := GetDblVal(a06);
  a07 := 'Документ/НеполЗанят/ЧРПСписСост/Дополн'  ;  d07 := GetDblVal(a07);
  a08 := 'Документ/НеполЗанят/ЧРВСписСост/Всего'   ;  d08 := GetDblVal(a08);
  a09 := 'Документ/НеполЗанят/ЧРВСписСост/СоглСтор';  d09 := GetDblVal(a09);
  a10 := 'Документ/НеполЗанят/ЧРВСписСост/СокрЧР'  ;  d10 := GetDblVal(a10);
  a12 := 'Документ/НеполЗанят/ЧРВСписСост/СобстЖел';  d12 := GetDblVal(a12);
  a13 := 'Документ/НеполЗанят/ЧРКонКв'             ;  d13 := GetDblVal(a13);
  a14 := 'Документ/НеполЗанят/ЧРРабМКонКВ'         ;  d14 := GetDblVal(a14);
  a15 := 'Документ/НеполЗанят/ЧРНаемСлКв'          ;  d15 := GetDblVal(a15);
  a16 := 'Документ/НеполЗанят/ЧРЖенУхЗаРеб'        ;  d16 := GetDblVal(a16);
  a17 := 'Документ/НеполЗанят/ЧРдо3Лет'            ;  d17 := GetDblVal(a17);

  // 1 : 01 <= sum(13, 08)
  // 2 : 02 <= sum(13, 08)
  // 3 : 03 <= sum(13, 08)
  // 4 : 05 <= sum(13, 08)
  // 5 : sum(01, 02, 03, 05) <= sum(13, 08)

  sum_13_08 := d13 + d08;
  fl := (not NullStr(a13) or not NullStr(a08));

  if (fl or not NullStr(a01)) if not (d01 <= sum_13_08) MesErrStop(a01, 'Стр. 01', 'К01: Значение стр. 01 должно быть меньше либо равно сумме стр. 13 и 08');
  if (fl or not NullStr(a02)) if not (d02 <= sum_13_08) MesErrStop(a02, 'Стр. 02', 'К02: Значение стр. 02 должно быть меньше либо равно сумме стр. 13 и 08');
  if (fl or not NullStr(a03)) if not (d03 <= sum_13_08) MesErrStop(a03, 'Стр. 03', 'К03: Значение стр. 03 должно быть меньше либо равно сумме стр. 13 и 08');
  if (fl or not NullStr(a05)) if not (d05 <= sum_13_08) MesErrStop(a05, 'Стр. 05', 'К04: Значение стр. 05 должно быть меньше либо равно сумме стр. 13 и 08');

  if (fl or not NullStr(a01) or not NullStr(a02) or not NullStr(a03) or not NullStr(a05))
    if not (d01 + d02 + d03 + d05 <= sum_13_08)
      MesErrStop(a08, 'Стр. 08', 'К05: Сумма стр. 01, 02, 03 и 05 должна быть меньше либо равна сумме стр. 13 и 08');

  // 6 : при наличии данных по строке 07 должна быть заполнена строка 06
  if ((not NullStr(a07)) and NullStr(a06)) MesErrStop(a06, 'Стр. 06', 'К06: При наличии данных по строке 07 должна быть заполнена строка 06');

  // 7 : 07 <= 06
  if (not NullStr(a07) or not NullStr(a06))
    if not (d07 <= d06)
      MesErrStop(a07, 'Стр. 07', 'К07: Значение стр. 07 должно быть меньше либо равно значению стр. 06');

  if (not NullStr(a09) or not NullStr(a10) or not NullStr(a12) or not NullStr(a08))
  {
    // 8 : при наличии данных по строкам 09, 10 или 12 должна быть заполнена строка 08
    if (NullStr(a08)) MesErrStop(a08, 'Стр. 08', 'К08: При наличии данных по строкам 09, 10 или 12 должна быть заполнена строка 08');

    // 9 : sum(09, 10, 12) <= 08
    if not ((d09 + d10 + d12) <= d08) MesErrStop(a08, 'Стр. 08', 'К09: Сумма строк 09, 10 и 12 должна быть меньше либо равно значению строки 08');
  }

  // 10 : 14 <= 13
  // 11 : 15 <= 13
  // 12 : 16 <= 13
  // 13 : 17 <= 13

  if (not NullStr(a13)) {
    if (not NullStr(a14)) if not (d14 <= d13) MesErrStop(a14, 'Стр. 14', 'К10: Значение стр. 14 должно быть меньше либо равно значению строки 13');
    if (not NullStr(a15)) if not (d15 <= d13) MesErrStop(a15, 'Стр. 15', 'К11: Значение стр. 15 должно быть меньше либо равно значению строки 13');
    if (not NullStr(a16)) if not (d16 <= d13) MesErrStop(a16, 'Стр. 16', 'К12: Значение стр. 16 должно быть меньше либо равно значению строки 13');
    if (not NullStr(a17)) if not (d17 <= d13) MesErrStop(a17, 'Стр. 17', 'К13: Значение стр. 17 должно быть меньше либо равно значению строки 13');
  }

  //----------------------------------------------------------------------------------------------------------

  if NullStr('Документ/НаимОрг'            ) MesErrStop('Документ/НаимОрг'                      , 'Наименование организации', 'Поле обязательно для заполнения');
  if NullStr('Документ/Адрес'              ) MesErrStop('Документ/Адрес'                        , 'Адрес организации'       , 'Поле обязательно для заполнения');
  if NullStr('Документ/ОКПО'               ) MesErrStop('Файл/Документ/ТитЛист/ОКПО'            , 'Код ОКПО'                , 'Поле обязательно для заполнения');
  if NullStr('Документ/Тел'                ) MesErrStop('Файл/Документ/ТитЛист/Подписант/Тел'   , 'Телефон'                 , 'Поле обязательно для заполнения');
  if NullStr('Документ/E_mail'             ) MesErrStop('Файл/Документ/ТитЛист/Подписант/E_mail', 'E-mail'                  , 'Поле обязательно для заполнения');
  if NullStr('Документ/Подписант/Должность') MesErrStop('Документ/Подписант/Должность'          , 'Должность'               , 'Поле обязательно для заполнения');
  if NullStr('Документ/Подписант/ФИО'      ) MesErrStop('Документ/Подписант/ФИО'                , 'ФИО'                     , 'Поле обязательно для заполнения');

  if (NullStr('Документ/ДатаДок') or (GetStrVal('Документ/ДатаДок') = 'ДД мес ГГГГ'))
    MesErrStop('Документ/ДатаДок', 'Дата документа', 'Поле обязательно для заполнения');
@end.
//#endregion ДЕЙСТВИЯ ВЫПОЛНЯЕМЫЕ ПРИ ПРОВЕРКЕ
//************************************************************************************************************


//============================================================================================================
//#region ДЕЙСТВИЯ ВЫПОЛНЯЕМЫЕ ПРИ РАСЧЕТЕ
//------------------------------------------------------------------------------------------------------------
@Script On_Recalc : boolean;
@begin
  //Документ
  if ((GetStrVal('Документ/ДатаДок') = '') or (GetStrVal('Документ/ДатаДок') = 'DD mon YYYY'))
     SetFldVal('Документ/ДатаДок', DateToStr(Cur_Date, 'DD mon YYYY'));
@end.
//#endregion ДЕЙСТВИЯ ВЫПОЛНЯЕМЫЕ ПРИ РАСЧЕТЕ
//************************************************************************************************************


//============================================================================================================
//#region ДЕЙСТВИЯ ВЫПОЛНЯЕМЫЕ ПРИ ЭКСПОРТЕ В XML
//------------------------------------------------------------------------------------------------------------
@Script On_ExportXML : boolean;
@begin
  if (not XMLMap.ExpToXml(_XmlFileName_)) {
    Message('On_ExportXML: '+ XMLMap.GetStLastError, cancelButton+Warning);
    Exit;
  }

  message('Выгружен в файл ' + _XmlFileName_);
@end.
//#endregion ДЕЙСТВИЯ ВЫПОЛНЯЕМЫЕ ПРИ ЭКСПОРТЕ В XML
//************************************************************************************************************
