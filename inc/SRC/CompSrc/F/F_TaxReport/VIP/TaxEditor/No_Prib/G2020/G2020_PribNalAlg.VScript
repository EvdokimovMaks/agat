//------------------------------------------------------------------------------------------------------------
//                                                                                    (c) корпорация Галактика
// Галактика 9.1 - модуль "Электронная отчетность"
// Алгоритмы расчета : "Декларация по налогу на прибыль" (2020)
//
//------------------------------------------------------------------------------------------------------------

//============================================================================================================
//#region СЕРВИСНЫЕ МЕТОДЫ
//------------------------------------------------------------------------------------------------------------

//------------------------------------------------------------------------------------------------------------
@Script SetNotFldVis(fld:string);
@begin
  //fld - Лишнее поле в структуре, лучше удалить, но пока скрываю
  If (XMLMAP.GetPositionByName(fld) <> 0)
  {
    XMLMAP.SetAttrVisByName(fld, False);
  }  
@end.


@Script SetFldVal(fld:string; val:variant);
@begin
  XMLMAP.SetVariantAttrValueByName_Formula(fld,val, 2);
@end.

//------------------------------------------------------------------------------------------------------------
@Script SetNullVal(fld:string);
@begin
  //lc_ModifyOwner_Alg = 2
  XMLMAP.SetIsNullAttrValueByName(fld, 2);
@end.

//------------------------------------------------------------------------------------------------------------
@Script SetFldVis(fld:string;vis:boolean);
@begin
  XMLMAP.SetAttrVisByName(fld,vis);
@end.

//------------------------------------------------------------------------------------------------------------
@Script GetStrVal(fld:string):string;
@begin
  Result := Trim(String(XMLMAP.GetAttrValueByName(fld)));
@end.

//------------------------------------------------------------------------------------------------------------
@Script GetDblVal(fld:string):double;
@begin
  Result := Double(XMLMAP.GetAttrValueByName(fld));
@end.

//------------------------------------------------------------------------------------------------------------
@Script GetIntVal(fld:string):double;
@begin
  Result := Integer(XMLMAP.GetAttrValueByName(fld));
@end.

//------------------------------------------------------------------------------------------------------------
@Script GetFldVis(fld:string):boolean;
@begin
  Result := XMLMAP.GetAttrVisByName(fld);
@end.

//------------------------------------------------------------------------------------------------------------
@Script GetFldVisInTree(fld:string):boolean;
@begin
  Result := XMLMAP.GetAttrVisByNameInTree(fld);
@end.

//------------------------------------------------------------------------------------------------------------
@Script GetIter(iter:longint):string;
@begin
  Result := '';

  if (iter > 0)
    Result := '[' + String(iter) + ']';
@end.

//------------------------------------------------------------------------------------------------------------
// Вставить сообщение об "ошибке"
@Script MessageErrorStop_ALG(mesMesAdrXML, mesPole, mesMes: string; mesCountIter: integer = 0; mesCountIterNum: integer = 1): boolean;
@begin
  MesError.InsertMesError(mesMesAdrXML, Comp(0), '', mesPole, mesMes, mesCountIter, mesCountIterNum);
  Result := True;
@end.

//------------------------------------------------------------------------------------------------------------
// Вставить сообщение об "предупреждении"
@Script MessageWarningStop_ALG(mesMesAdrXML, mesPole, mesMes: string; mesCountIter: integer = 0): boolean;
@begin
  MesError.InsertMesWarning(mesMesAdrXML, Comp(0), '', mesPole, mesMes, mesCountIter);
  Result := True;
@end.

//------------------------------------------------------------------------------------------------------------
@Script GetStrNull(fld:string):boolean;
@begin
  Result := XMLMAP.GetIsNullAttrValueByName(fld);
@end.

//------------------------------------------------------------------------------------------------------------
@Script GetPatVal(expr:string):string;
#include AllTaxObj.Vih
@begin
  Result := ПАТ(expr);
@end.
//#endregion СЕРВИСНЫЕ МЕТОДЫ
//************************************************************************************************************


//============================================================================================================
//#region On_Visable ДЕЙСТВИЯ ВЫПОЛНЯЕМЫЕ ПРИ УСТАНОВКЕ ВИДИМОСТИ ПОЛЕЙ
//------------------------------------------------------------------------------------------------------------
@Script On_Visable : boolean;
  //==========================================================================================================
  //#region СЕРВИС On_Visable
  //----------------------------------------------------------------------------------------------------------
  #undef IfVis
  #undef SetVisF
  #undef SetVisT

  #define IfVis(adrIfVis)   SetFldVis(#adrIfVis, not GetStrNull(#adrIfVis));
  #define SetVisF(adrIfVis) SetFldVis(#adrIfVis, False);
  #define SetVisT(adrIfVis) SetFldVis(#adrIfVis, True );

  //----------------------------------------------------------------------------------------------------------
  function IsFormReorg_1_9 : boolean;
  { // Элемент обязателен при <ФормРеорг> = 1 | 2 | 3 | 5 | 6 | 9
    var val : string; val := GetStrVal('Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ/ФормРеорг');
    Result := (    (val = '1')
                or (val = '2')
                or (val = '3')
                or (val = '5')
                or (val = '6')
                or (val = '9')
              );
  }

  //----------------------------------------------------------------------------------------------------------
  function IsPrPodp_2 : boolean;
  { // Элемент обязателен при <ПрПодп>=2
    Result := (GetStrVal('Файл/Документ/Подписант/ПрПодп') = '2');
  }

  //----------------------------------------------------------------------------------------------------------
  function IsTipNP_4 (_XMLArd : string) : boolean;
  { // Элемент обязателен при <ТипНП>=04
    Result := (GetStrVal(_XMLArd) = '04');
  }

  //----------------------------------------------------------------------------------------------------------
  function IsTipNP_3 (_XMLArd : string) : boolean;
  { // Элемент обязателен при <ТипНП>=03
    Result := (GetStrVal(_XMLArd) = '03');
  }

  //----------------------------------------------------------------------------------------------------------
  function IsTip (_XMLArd  : string) : boolean;
  { // Элемент обязателен, если значение элемента <Тип> не равно 99
    Result := (GetStrVal(_XMLArd + '/Тип') <> '99');
  }
  //#endregion СЕРВИС On_Visable
  //**********************************************************************************************************
@begin
  var CountI, CountJ, CountK, I, J, K : integer;
  var XMLAdrI, XMLAdrJ, XMLAdrK : string;
  var flI, flJ, flK : boolean;

  // #region ТИТУЛЬНЫЙ ЛИСТ
  #IfVis('Файл/Документ/СвНП/Тлф')

  if (not GetStrNull('Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ/ФормРеорг'))
  {
    #SetVisT('Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ')

    if (IsFormReorg_1_9)
    {
      #SetVisT('Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ/ИННЮЛ')
      #SetVisT('Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ/КПП'  )
    }
    else
    {
      #IfVis('Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ/ИННЮЛ')
      #IfVis('Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ/КПП'  )
    }
  }
  else #SetVisF('Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ')

  #IfVis('Файл/Документ/Подписант/ФИО/Отчество')

  if (IsPrPodp_2)
  {
    #SetVisT('Файл/Документ/Подписант/СвПред'        )
    #IfVis  ('Файл/Документ/Подписант/СвПред/НаимОрг')
  }
  else
  {
    if (not GetStrNull('Файл/Документ/Подписант/СвПред/НаимДок'))
    {
      #SetVisT('Файл/Документ/Подписант/СвПред'        )
      #IfVis  ('Файл/Документ/Подписант/СвПред/НаимОрг')
    }
    else #SetVisF('Файл/Документ/Подписант/СвПред')
  }
  // #endregion ТИТУЛЬНЫЙ ЛИСТ

  // #region Файл/Документ/Прибыль/НалПУ             РАЗДЕЛ 1
  // #region Файл/Документ/Прибыль/НалПУ/НалПУАв
  CountI := XMLMap.GetNodeCountByName('Файл/Документ/Прибыль/НалПУ/НалПУАв');
  for (i := 0; i < CountI; i++)
  {
    XMLAdrI := 'Файл/Документ/Прибыль/НалПУ/НалПУАв' + getIter(i);

    if (not GetStrNull(XMLAdrI + '/ОКТМО'))
    {
      #SetVisT(XMLAdrI)

      if (   GetStrNull(XMLAdrI + '/ФедБдж/КБК'  )
          or GetStrNull(XMLAdrI + '/ФедБдж/НалПУ') )
      then #SetVisF(XMLAdrI + '/ФедБдж')
      else #SetVisT(XMLAdrI + '/ФедБдж')

      if (   GetStrNull(XMLAdrI + '/СубБдж/КБК'  )
          or GetStrNull(XMLAdrI + '/СубБдж/НалПУ') )
      then #SetVisF(XMLAdrI + '/СубБдж')
      else #SetVisT(XMLAdrI + '/СубБдж')
    }
    else #SetVisF(XMLAdrI)
  }
  // #endregion Файл/Документ/Прибыль/НалПУ/НалПУАв

  // #region Файл/Документ/Прибыль/НалПУ/НалПУМес
  CountI := XMLMap.GetNodeCountByName('Файл/Документ/Прибыль/НалПУ/НалПУМес');
  for (i := 0; i < CountI; i++)
  {
    XMLAdrI := 'Файл/Документ/Прибыль/НалПУ/НалПУМес' + getIter(i);

    if (not GetStrNull(XMLAdrI + '/ОКТМО'))
    {
      #SetVisT(XMLAdrI                )
      #IfVis  (XMLAdrI + '/КвИсчислАв')

      if (   GetStrNull(XMLAdrI + '/ФедБдж/КБК'    )
          or GetStrNull(XMLAdrI + '/ФедБдж/АвПлат1')
          or GetStrNull(XMLAdrI + '/ФедБдж/АвПлат2')
          or GetStrNull(XMLAdrI + '/ФедБдж/АвПлат3') )
      then #SetVisF(XMLAdrI + '/ФедБдж')
      else #SetVisT(XMLAdrI + '/ФедБдж')

      if (   GetStrNull(XMLAdrI + '/СубБдж/КБК'    )
          or GetStrNull(XMLAdrI + '/СубБдж/АвПлат1')
          or GetStrNull(XMLAdrI + '/СубБдж/АвПлат2')
          or GetStrNull(XMLAdrI + '/СубБдж/АвПлат3') )
      then #SetVisF(XMLAdrI + '/СубБдж')
      else #SetVisT(XMLAdrI + '/СубБдж')
    }
    else #SetVisF(XMLAdrI)
  }
  // #endregion Файл/Документ/Прибыль/НалПУ/НалПУМес

  // #region Файл/Документ/Прибыль/НалПУ/НалПУПроц
  CountI := XMLMap.GetNodeCountByName('Файл/Документ/Прибыль/НалПУ/НалПУПроц');
  for (i := 0; i < CountI; i++)
  {
    XMLAdrI := 'Файл/Документ/Прибыль/НалПУ/НалПУПроц' + getIter(i);

    if (   GetStrNull(XMLAdrI + '/ВидПлат')
        or GetStrNull(XMLAdrI + '/ОКТМО'  )
        or GetStrNull(XMLAdrI + '/КБК'    ) )
    then #SetVisF(XMLAdrI)
    else
    {
      flJ := False;

      CountJ := XMLMap.GetNodeCountByName(XMLAdrI + '/УплСрок');
      for (j := 0; j < CountJ; j++)
      {
        XMLAdrJ := XMLAdrI + '/УплСрок' + getIter(j);

        if (   GetStrNull(XMLAdrJ + '/Срок' )
            or GetStrNull(XMLAdrJ + '/НалПУ') )
        then   #SetVisF(XMLAdrJ)
        else { #SetVisT(XMLAdrJ) flJ := True; }
      }

      SetFldVis(XMLAdrI, flJ);
    }
  } // #endregion Файл/Документ/Прибыль/НалПУ/НалПУПроц
  // #endregion Файл/Документ/Прибыль/НалПУ

  // #region Файл/Документ/Прибыль/РасчНал           ЛИСТ 02
  CountI := XMLMap.GetNodeCountByName('Файл/Документ/Прибыль/РасчНал');
  for (i := 0; i < CountI; i++)
  {
    XMLAdrI := 'Файл/Документ/Прибыль/РасчНал' + getIter(i);

    if (GetStrNull(XMLAdrI + '/ТипНП'))
    then #SetVisF(XMLAdrI)
    else
    {
      #SetVisT(XMLAdrI)

      if (IsTipNP_3(XMLAdrI + '/ТипНП'))
      {
        #SetVisT(XMLAdrI + '/НомДок')
      }
      else
      {
        #IfVis(XMLAdrI + '/НомДок')
      }

      if (IsTipNP_4(XMLAdrI + '/ТипНП'))
      {
        #SetVisT(XMLAdrI + '/СерЛицНедр')
        #SetVisT(XMLAdrI + '/НомЛицНедр')
        #SetVisT(XMLAdrI + '/ВидЛицНедр')
        #SetVisT(XMLAdrI + '/НомМорМест')
      }
      else
      {
        #IfVis(XMLAdrI + '/СерЛицНедр')
        #IfVis(XMLAdrI + '/НомЛицНедр')
        #IfVis(XMLAdrI + '/ВидЛицНедр')
        #IfVis(XMLAdrI + '/НомМорМест')
      }

      #IfVis  (XMLAdrI + '/ДохРеал'         ) // #region IfVis
      #IfVis  (XMLAdrI + '/ДохВнереал'      )
      #IfVis  (XMLAdrI + '/РасхУмРеал'      )
      #IfVis  (XMLAdrI + '/РасхВнереал'     )
      #IfVis  (XMLAdrI + '/Убытки'          )
      #IfVis  (XMLAdrI + '/ПрибУб'          )
      #IfVis  (XMLAdrI + '/ДохИсклПриб'     )
      #IfVis  (XMLAdrI + '/ПрибБРСт0'       )
      #IfVis  (XMLAdrI + '/НалБаза'         )
      #IfVis  (XMLAdrI + '/УбытУмНБ'        )
      #IfVis  (XMLAdrI + '/НалБазаИсч'      )
      #IfVis  (XMLAdrI + '/НалБазаИсчСуб'   )
      #IfVis  (XMLAdrI + '/СтавНалВсего'    )
      #IfVis  (XMLAdrI + '/СтавНалФБ'       )
      #IfVis  (XMLAdrI + '/СтавНалСуб'      )
      #IfVis  (XMLAdrI + '/СтавНалСуб284'   )
      #IfVis  (XMLAdrI + '/ЗакУстСтавНал'   )
      #IfVis  (XMLAdrI + '/НалИсчисл'       )
      #IfVis  (XMLAdrI + '/НалИсчислФБ'     )
      #IfVis  (XMLAdrI + '/НалИсчислСуб'    )
      #IfVis  (XMLAdrI + '/АвНачисл'        )
      #IfVis  (XMLAdrI + '/АвНачислФБ'      )
      #IfVis  (XMLAdrI + '/АвНачислСуб'     )
      #IfVis  (XMLAdrI + '/НалВыпл311'      )
      #IfVis  (XMLAdrI + '/НалВыпл311ФБ'    )
      #IfVis  (XMLAdrI + '/НалВыпл311Суб'   )
      #IfVis  (XMLAdrI + '/ТСУплНачПер'     )
      #IfVis  (XMLAdrI + '/ТСУменАвПред'    )
      #IfVis  (XMLAdrI + '/ТСУменАвОтч'     )
      #IfVis  (XMLAdrI + '/УмАвИнвВычФБ'    )
      #IfVis  (XMLAdrI + '/УмАвИнвВычСуб'   )
      #IfVis  (XMLAdrI + '/НалДоплФБ'       )
      #IfVis  (XMLAdrI + '/НалДоплСуб'      )
      #IfVis  (XMLAdrI + '/НалУменФБ'       )
      #IfVis  (XMLAdrI + '/НалУменСуб'      )
      #IfVis  (XMLAdrI + '/АвПлатМес'       )
      #IfVis  (XMLAdrI + '/АвПлатМесФБ'     )
      #IfVis  (XMLAdrI + '/АвПлатМесСуб'    )
      #IfVis  (XMLAdrI + '/АвПлатУпл1Кв'    )
      #IfVis  (XMLAdrI + '/АвПлатУпл1КвФБ'  )
      #IfVis  (XMLAdrI + '/АвПлатУпл1КвСуб' )
      #IfVis  (XMLAdrI + '/ОбъемКапВлИнв'   )
      #IfVis  (XMLAdrI + '/РазнРасч20Исчисл')  // #endregion IfVis

      // #region Файл/Документ/Прибыль/РасчНал/ДохРеалВнеРеал       ПРИЛОЖЕНИЕ 1 К ЛИСТУ 02
      if (GetStrNull(XMLAdrI + '/ДохРеалВнеРеал/ТипНП'))
      then #SetVisF(XMLAdrI + '/ДохРеалВнеРеал')
      else
      {
        #SetVisT(XMLAdrI + '/ДохРеалВнеРеал')

        if (IsTipNP_3(XMLAdrI + '/ДохРеалВнеРеал/ТипНП'))
        {
          #SetVisT(XMLAdrI + '/ДохРеалВнеРеал/НомДок')
        }
        else
        {
          #IfVis(XMLAdrI + '/ДохРеалВнеРеал/НомДок')
        }

        if (IsTipNP_4(XMLAdrI + '/ДохРеалВнеРеал/ТипНП'))
        {
          #SetVisT(XMLAdrI + '/ДохРеалВнеРеал/СерЛицНедр')
          #SetVisT(XMLAdrI + '/ДохРеалВнеРеал/НомЛицНедр')
          #SetVisT(XMLAdrI + '/ДохРеалВнеРеал/ВидЛицНедр')
          #SetVisT(XMLAdrI + '/ДохРеалВнеРеал/НомМорМест')
        }
        else
        {
          #IfVis(XMLAdrI + '/ДохРеалВнеРеал/СерЛицНедр')
          #IfVis(XMLAdrI + '/ДохРеалВнеРеал/НомЛицНедр')
          #IfVis(XMLAdrI + '/ДохРеалВнеРеал/ВидЛицНедр')
          #IfVis(XMLAdrI + '/ДохРеалВнеРеал/НомМорМест')
        }

        // #region Файл/Документ/Прибыль/РасчНал/ДохРеалВнеРеал/ДохРеал
        if (GetStrNull(XMLAdrI + '/ДохРеалВнеРеал/ДохРеал/ВырРеалИтог'))
        then #SetVisF(XMLAdrI + '/ДохРеалВнеРеал/ДохРеал')
        else
        {
          #SetVisT(XMLAdrI + '/ДохРеалВнеРеал/ДохРеал'              )
          #IfVis  (XMLAdrI + '/ДохРеалВнеРеал/ДохРеал/ВырРеалПред'  )
          #IfVis  (XMLAdrI + '/ДохРеалВнеРеал/ДохРеал/ВырРеалОпер32')

          // #region Файл/Документ/Прибыль/РасчНал/ДохРеалВнеРеал/ДохРеал/ВырРеал
          if (    GetStrNull(XMLAdrI + '/ДохРеалВнеРеал/ДохРеал/ВырРеал/ВырРеалВс'    )
              and GetStrNull(XMLAdrI + '/ДохРеалВнеРеал/ДохРеал/ВырРеал/ВырРеалТовСоб')
              and GetStrNull(XMLAdrI + '/ДохРеалВнеРеал/ДохРеал/ВырРеал/ВырРеалТовПок')
              and GetStrNull(XMLAdrI + '/ДохРеалВнеРеал/ДохРеал/ВырРеал/ВырРеалИмПрав')
              and GetStrNull(XMLAdrI + '/ДохРеалВнеРеал/ДохРеал/ВырРеал/ВырРеалИмПроч') )
          then #SetVisF(XMLAdrI + '/ДохРеалВнеРеал/ДохРеал/ВырРеал')
          else
          {
            #SetVisT(XMLAdrI + '/ДохРеалВнеРеал/ДохРеал/ВырРеал'              )
            #IfVis  (XMLAdrI + '/ДохРеалВнеРеал/ДохРеал/ВырРеал/ВырРеалВс'    )
            #IfVis  (XMLAdrI + '/ДохРеалВнеРеал/ДохРеал/ВырРеал/ВырРеалТовСоб')
            #IfVis  (XMLAdrI + '/ДохРеалВнеРеал/ДохРеал/ВырРеал/ВырРеалТовПок')
            #IfVis  (XMLAdrI + '/ДохРеалВнеРеал/ДохРеал/ВырРеал/ВырРеалИмПрав')
            #IfVis  (XMLAdrI + '/ДохРеалВнеРеал/ДохРеал/ВырРеал/ВырРеалИмПроч')
          } // #endregion Файл/Документ/Прибыль/РасчНал/ДохРеалВнеРеал/ДохРеал/ВырРеал

          // #region Файл/Документ/Прибыль/РасчНал/ДохРеалВнеРеал/ДохРеал/ВырРеалЦБ
          if (    GetStrNull(XMLAdrI + '/ДохРеалВнеРеал/ДохРеал/ВырРеалЦБ/ВырРеалЦБВс'   )
              and GetStrNull(XMLAdrI + '/ДохРеалВнеРеал/ДохРеал/ВырРеалЦБ/ОтклВырЦБОбр'  )
              and GetStrNull(XMLAdrI + '/ДохРеалВнеРеал/ДохРеал/ВырРеалЦБ/ОтклВырЦБНеОбр') )
          then #SetVisF(XMLAdrI + '/ДохРеалВнеРеал/ДохРеал/ВырРеалЦБ')
          else
          {
            #SetVisT(XMLAdrI + '/ДохРеалВнеРеал/ДохРеал/ВырРеалЦБ'               )
            #IfVis  (XMLAdrI + '/ДохРеалВнеРеал/ДохРеал/ВырРеалЦБ/ВырРеалЦБВс'   )
            #IfVis  (XMLAdrI + '/ДохРеалВнеРеал/ДохРеал/ВырРеалЦБ/ОтклВырЦБОбр'  )
            #IfVis  (XMLAdrI + '/ДохРеалВнеРеал/ДохРеал/ВырРеалЦБ/ОтклВырЦБНеОбр')
          } // #endregion Файл/Документ/Прибыль/РасчНал/ДохРеалВнеРеал/ДохРеал/ВырРеалЦБ

          // #region Файл/Документ/Прибыль/РасчНал/ДохРеалВнеРеал/ДохРеал/ВырРеалЦБОбр
          if (    GetStrNull(XMLAdrI + '/ДохРеалВнеРеал/ДохРеал/ВырРеалЦБОбр/ВырРеалЦБВс' )
              and GetStrNull(XMLAdrI + '/ДохРеалВнеРеал/ДохРеал/ВырРеалЦБОбр/ОтклВырЦБМин') )
          then #SetVisF(XMLAdrI + '/ДохРеалВнеРеал/ДохРеал/ВырРеалЦБОбр')
          else
          {
            #SetVisT(XMLAdrI + '/ДохРеалВнеРеал/ДохРеал/ВырРеалЦБОбр'             )
            #IfVis  (XMLAdrI + '/ДохРеалВнеРеал/ДохРеал/ВырРеалЦБОбр/ВырРеалЦБВс' )
            #IfVis  (XMLAdrI + '/ДохРеалВнеРеал/ДохРеал/ВырРеалЦБОбр/ОтклВырЦБМин')
          } // #endregion Файл/Документ/Прибыль/РасчНал/ДохРеалВнеРеал/ДохРеал/ВырРеалЦБОбр
        } // #endregion Файл/Документ/Прибыль/РасчНал/ДохРеалВнеРеал/ДохРеал

        // #region Файл/Документ/Прибыль/РасчНал/ДохРеалВнеРеал/ДохВнеРеал
        if (GetStrNull(XMLAdrI + '/ДохРеалВнеРеал/ДохВнеРеал/ВнеРеалДохВс'))
        then #SetVisF(XMLAdrI + '/ДохРеалВнеРеал/ДохВнеРеал')
        else
        {
          #SetVisT(XMLAdrI + '/ДохРеалВнеРеал/ДохВнеРеал'                  )
          #IfVis  (XMLAdrI + '/ДохРеалВнеРеал/ДохВнеРеал/ВнеРеалДохПр'     )
          #IfVis  (XMLAdrI + '/ДохРеалВнеРеал/ДохВнеРеал/ВнеРеалДохСт'     )
          #IfVis  (XMLAdrI + '/ДохРеалВнеРеал/ДохВнеРеал/ВнеРеалДохБезв'   )
          #IfVis  (XMLAdrI + '/ДохРеалВнеРеал/ДохВнеРеал/ВнеРеалДохИзл'    )
          #IfVis  (XMLAdrI + '/ДохРеалВнеРеал/ДохВнеРеал/ВнеРеалДохВРасх'  )
          #IfVis  (XMLAdrI + '/ДохРеалВнеРеал/ДохВнеРеал/ВнеРеалДохРынЦБДД')
        } // #endregion Файл/Документ/Прибыль/РасчНал/ДохРеалВнеРеал/ДохВнеРеал

        // #region Файл/Документ/Прибыль/РасчНал/ДохРеалВнеРеал/НалБазИнв
        if (    GetStrNull(XMLAdrI + '/ДохРеалВнеРеал/НалБазИнв/НалБазИнвВс' )
            and GetStrNull(XMLAdrI + '/ДохРеалВнеРеал/НалБазИнв/ИнвТовОбр'   )
            and GetStrNull(XMLAdrI + '/ДохРеалВнеРеал/НалБазИнв/ДоляУчКап'   )
            and GetStrNull(XMLAdrI + '/ДохРеалВнеРеал/НалБазИнв/ПрочОпер'    )
            and GetStrNull(XMLAdrI + '/ДохРеалВнеРеал/НалБазИнв/ИнвТовНеОбр' )
            and GetStrNull(XMLAdrI + '/ДохРеалВнеРеал/НалБазИнв/ФинИнстНеОбр') )
        then #SetVisF(XMLAdrI + '/ДохРеалВнеРеал/НалБазИнв')
        else
        {
          #SetVisT(XMLAdrI + '/ДохРеалВнеРеал/НалБазИнв'             )
          #IfVis  (XMLAdrI + '/ДохРеалВнеРеал/НалБазИнв/НалБазИнвВс' )
          #IfVis  (XMLAdrI + '/ДохРеалВнеРеал/НалБазИнв/ИнвТовОбр'   )
          #IfVis  (XMLAdrI + '/ДохРеалВнеРеал/НалБазИнв/ДоляУчКап'   )
          #IfVis  (XMLAdrI + '/ДохРеалВнеРеал/НалБазИнв/ПрочОпер'    )
          #IfVis  (XMLAdrI + '/ДохРеалВнеРеал/НалБазИнв/ИнвТовНеОбр' )
          #IfVis  (XMLAdrI + '/ДохРеалВнеРеал/НалБазИнв/ФинИнстНеОбр')
        } // #endregion Файл/Документ/Прибыль/РасчНал/ДохРеалВнеРеал/НалБазИнв
      }
      // #endregion Файл/Документ/Прибыль/РасчНал/ДохРеалВнеРеал

      // #region Файл/Документ/Прибыль/РасчНал/РасхРеалВнеРеал      ПРИЛОЖЕНИЕ 2 К ЛИСТУ 02
      if (GetStrNull(XMLAdrI + '/РасхРеалВнеРеал/ТипНП'))
      then #SetVisF(XMLAdrI + '/РасхРеалВнеРеал')
      else
      {
        #SetVisT(XMLAdrI + '/РасхРеалВнеРеал')

        if (IsTipNP_3(XMLAdrI + '/РасхРеалВнеРеал/ТипНП'))
        {
          #SetVisT(XMLAdrI + '/РасхРеалВнеРеал/НомДок')
        }
        else
        {
          #IfVis(XMLAdrI + '/РасхРеалВнеРеал/НомДок')
        }

        if (IsTipNP_4(XMLAdrI + '/РасхРеалВнеРеал/ТипНП'))
        {
          #SetVisT(XMLAdrI + '/РасхРеалВнеРеал/СерЛицНедр')
          #SetVisT(XMLAdrI + '/РасхРеалВнеРеал/НомЛицНедр')
          #SetVisT(XMLAdrI + '/РасхРеалВнеРеал/ВидЛицНедр')
          #SetVisT(XMLAdrI + '/РасхРеалВнеРеал/НомМорМест')
        }
        else
        {
          #IfVis(XMLAdrI + '/РасхРеалВнеРеал/СерЛицНедр')
          #IfVis(XMLAdrI + '/РасхРеалВнеРеал/НомЛицНедр')
          #IfVis(XMLAdrI + '/РасхРеалВнеРеал/ВидЛицНедр')
          #IfVis(XMLAdrI + '/РасхРеалВнеРеал/НомМорМест')
        }

        // #region Файл/Документ/Прибыль/РасчНал/РасхРеалВнеРеал/РасхРеал
        if (GetStrNull(XMLAdrI + '/РасхРеалВнеРеал/РасхРеал/РасхПризнИтого'))
        then #SetVisF(XMLAdrI + '/РасхРеалВнеРеал/РасхРеал')
        else
        {
          #SetVisT(XMLAdrI + '/РасхРеалВнеРеал/РасхРеал'               )
          #IfVis  (XMLAdrI + '/РасхРеалВнеРеал/РасхРеал/ПрямРасхРеал'  )
          #IfVis  (XMLAdrI + '/РасхРеалВнеРеал/РасхРеал/РеалИмущПрав'  )
          #IfVis  (XMLAdrI + '/РасхРеалВнеРеал/РасхРеал/ПриобрРеалИмущ')
          #IfVis  (XMLAdrI + '/РасхРеалВнеРеал/РасхРеал/АктивРеалПред' )
          #IfVis  (XMLAdrI + '/РасхРеалВнеРеал/РасхРеал/ПриобРеалЦБ'   )
          #IfVis  (XMLAdrI + '/РасхРеалВнеРеал/РасхРеал/СумОтклЦен'    )
          #IfVis  (XMLAdrI + '/РасхРеалВнеРеал/РасхРеал/ПриобРеалЦБОрг')
          #IfVis  (XMLAdrI + '/РасхРеалВнеРеал/РасхРеал/СумОтклЦенОрг' )
          #IfVis  (XMLAdrI + '/РасхРеалВнеРеал/РасхРеал/РасхОпер32'    )
          #IfVis  (XMLAdrI + '/РасхРеалВнеРеал/РасхРеал/УбытПрошОбсл'  )
          #IfVis  (XMLAdrI + '/РасхРеалВнеРеал/РасхРеал/УбытРеалАмИм'  )
          #IfVis  (XMLAdrI + '/РасхРеалВнеРеал/РасхРеал/УбытРеалЗемУч' )
          #IfVis  (XMLAdrI + '/РасхРеалВнеРеал/РасхРеал/НадбПокПред'   )

          // #region Файл/Документ/Прибыль/РасчНал/РасхРеалВнеРеал/РасхРеал/ПрямРасхТорг
          if (GetStrNull(XMLAdrI + '/РасхРеалВнеРеал/РасхРеал/ПрямРасхТорг/ПрямРасхТоргВс'))
          then #SetVisF(XMLAdrI + '/РасхРеалВнеРеал/РасхРеал/ПрямРасхТорг')
          else
          {
            #SetVisT(XMLAdrI + '/РасхРеалВнеРеал/РасхРеал/ПрямРасхТорг'           )
            #IfVis  (XMLAdrI + '/РасхРеалВнеРеал/РасхРеал/ПрямРасхТорг/РеалПокТов')
          } // #endregion Файл/Документ/Прибыль/РасчНал/РасхРеалВнеРеал/РасхРеал/ПрямРасхТорг

          // #region Файл/Документ/Прибыль/РасчНал/РасхРеалВнеРеал/РасхРеал/КосвРасх
          if (GetStrNull(XMLAdrI + '/РасхРеалВнеРеал/РасхРеал/КосвРасх/КосвРасхВс'))
          then #SetVisF(XMLAdrI + '/РасхРеалВнеРеал/РасхРеал/КосвРасх')
          else
          {
            #SetVisT(XMLAdrI + '/РасхРеалВнеРеал/РасхРеал/КосвРасх'                 )
            #IfVis  (XMLAdrI + '/РасхРеалВнеРеал/РасхРеал/КосвРасх/Налоги'          )
            #IfVis  (XMLAdrI + '/РасхРеалВнеРеал/РасхРеал/КосвРасх/РасхКапВл10'     )
            #IfVis  (XMLAdrI + '/РасхРеалВнеРеал/РасхРеал/КосвРасх/РасхКапВл30'     )
            #IfVis  (XMLAdrI + '/РасхРеалВнеРеал/РасхРеал/КосвРасх/РасхТрудИнв'     )
            #IfVis  (XMLAdrI + '/РасхРеалВнеРеал/РасхРеал/КосвРасх/РасхОргИнв'      )
            #IfVis  (XMLAdrI + '/РасхРеалВнеРеал/РасхРеал/КосвРасх/РасхЗемУчВс'     )
            #IfVis  (XMLAdrI + '/РасхРеалВнеРеал/РасхРеал/КосвРасх/РасхЗемУчСрокНП' )
            #IfVis  (XMLAdrI + '/РасхРеалВнеРеал/РасхРеал/КосвРасх/РасхЗемУч30пр'   )
            #IfVis  (XMLAdrI + '/РасхРеалВнеРеал/РасхРеал/КосвРасх/РасхЗемУчСрокРас')
            #IfVis  (XMLAdrI + '/РасхРеалВнеРеал/РасхРеал/КосвРасх/РасхЗемУчСрокАр' )
            #IfVis  (XMLAdrI + '/РасхРеалВнеРеал/РасхРеал/КосвРасх/НИОКР'           )
            #IfVis  (XMLAdrI + '/РасхРеалВнеРеал/РасхРеал/КосвРасх/НИОКРнеПолРез'   )
            #IfVis  (XMLAdrI + '/РасхРеалВнеРеал/РасхРеал/КосвРасх/НИОКРПер'        )
            #IfVis  (XMLAdrI + '/РасхРеалВнеРеал/РасхРеал/КосвРасх/НИОКРПерНеРез'   )
          } // #endregion Файл/Документ/Прибыль/РасчНал/РасхРеалВнеРеал/РасхРеал/КосвРасх
        } // #endregion Файл/Документ/Прибыль/РасчНал/РасхРеалВнеРеал/РасхРеал

        // #region Файл/Документ/Прибыль/РасчНал/РасхРеалВнеРеал/СумАморт
        if (    GetStrNull(XMLAdrI + '/РасхРеалВнеРеал/СумАморт/СумАмортПерЛ'   )
            and GetStrNull(XMLAdrI + '/РасхРеалВнеРеал/СумАморт/СумАмортПерНмАЛ')
            and GetStrNull(XMLAdrI + '/РасхРеалВнеРеал/СумАморт/СумАмортПерН'   )
            and GetStrNull(XMLAdrI + '/РасхРеалВнеРеал/СумАморт/СумАмортПерНмАН')
            and GetStrNull(XMLAdrI + '/РасхРеалВнеРеал/СумАморт/МетодНачАморт'  ) )
        then #SetVisF(XMLAdrI + '/РасхРеалВнеРеал/СумАморт')
        else
        {
          #SetVisT(XMLAdrI + '/РасхРеалВнеРеал/СумАморт'                )
          #IfVis  (XMLAdrI + '/РасхРеалВнеРеал/СумАморт/СумАмортПерЛ'   )
          #IfVis  (XMLAdrI + '/РасхРеалВнеРеал/СумАморт/СумАмортПерНмАЛ')
          #IfVis  (XMLAdrI + '/РасхРеалВнеРеал/СумАморт/СумАмортПерН'   )
          #IfVis  (XMLAdrI + '/РасхРеалВнеРеал/СумАморт/СумАмортПерНмАН')
          #IfVis  (XMLAdrI + '/РасхРеалВнеРеал/СумАморт/МетодНачАморт'  )
        }
        // #endregion Файл/Документ/Прибыль/РасчНал/РасхРеалВнеРеал/СумАморт

        // #region Файл/Документ/Прибыль/РасчНал/РасхРеалВнеРеал/РасхВнеРеал
        if (GetStrNull(XMLAdrI + '/РасхРеалВнеРеал/РасхВнеРеал/РасхВнеРеалВс'))
        then #SetVisF(XMLAdrI + '/РасхРеалВнеРеал/РасхВнеРеал')
        else
        {
          #SetVisT(XMLAdrI + '/РасхРеалВнеРеал/РасхВнеРеал'                )
          #IfVis  (XMLAdrI + '/РасхРеалВнеРеал/РасхВнеРеал/РасхВнереалПрДО')
          #IfVis  (XMLAdrI + '/РасхРеалВнеРеал/РасхВнеРеал/РасхВнереалРзрв')
          #IfVis  (XMLAdrI + '/РасхРеалВнеРеал/РасхВнеРеал/РасхЛиквОС'     )
          #IfVis  (XMLAdrI + '/РасхРеалВнеРеал/РасхВнеРеал/РасхШтраф'      )
          #IfVis  (XMLAdrI + '/РасхРеалВнеРеал/РасхВнеРеал/РасхРынЦБДД'    )
        } // #endregion Файл/Документ/Прибыль/РасчНал/РасхРеалВнеРеал/РасхВнеРеал

        // #region Файл/Документ/Прибыль/РасчНал/РасхРеалВнеРеал/УбытПриравн
        if (GetStrNull(XMLAdrI + '/РасхРеалВнеРеал/УбытПриравн/УбытПриравнВс'))
        then #SetVisF(XMLAdrI + '/РасхРеалВнеРеал/УбытПриравн')
        else
        {
          #SetVisT(XMLAdrI + '/РасхРеалВнеРеал/УбытПриравн'              )
          #IfVis  (XMLAdrI + '/РасхРеалВнеРеал/УбытПриравн/УбытПрошПер'  )
          #IfVis  (XMLAdrI + '/РасхРеалВнеРеал/УбытПриравн/СумБезнадДолг')
        } // #endregion Файл/Документ/Прибыль/РасчНал/РасхРеалВнеРеал/УбытПриравн

        // #region Файл/Документ/Прибыль/РасчНал/РасхРеалВнеРеал/КорНБЛиш
        if (GetStrNull(XMLAdrI + '/РасхРеалВнеРеал/КорНБЛиш/КорНБЛишВс'))
        then #SetVisF(XMLAdrI + '/РасхРеалВнеРеал/КорНБЛиш')
        else
        {
          #SetVisT(XMLAdrI + '/РасхРеалВнеРеал/КорНБЛиш')

          CountJ := XMLMap.GetNodeCountByName(XMLAdrI + '/РасхРеалВнеРеал/КорНБЛиш/КорНБЛишГод');
          for (j := 0; j < CountJ; j++)
          {
            XMLAdrJ := XMLAdrI + '/РасхРеалВнеРеал/КорНБЛиш/КорНБЛишГод' + getIter(j);

            if (   GetStrNull(XMLAdrJ + '/Год'       )
                or GetStrNull(XMLAdrJ + '/КорНБЛишВс') )
            then #SetVisF(XMLAdrJ)
            else #SetVisT(XMLAdrJ)
          }
        } // #endregion Файл/Документ/Прибыль/РасчНал/РасхРеалВнеРеал/КорНБЛиш
      } // #endregion Файл/Документ/Прибыль/РасчНал/РасхРеалВнеРеал

      // #region Файл/Документ/Прибыль/РасчНал/РасчРасхОпер         ПРИЛОЖЕНИЕ 3 К ЛИСТУ 02
      if (   GetStrNull(XMLAdrI + '/РасчРасхОпер/ТипНП'       )
          or GetStrNull(XMLAdrI + '/РасчРасхОпер/ВыручОп302Ит')
          or GetStrNull(XMLAdrI + '/РасчРасхОпер/РасхОп302Ит' )
          or GetStrNull(XMLAdrI + '/РасчРасхОпер/УбытОп302'   ) )
      then #SetVisF(XMLAdrI + '/РасчРасхОпер')
      else
      {
        #SetVisT(XMLAdrI + '/РасчРасхОпер')

        if (IsTipNP_3(XMLAdrI + '/РасчРасхОпер/ТипНП'))
        {
          #SetVisT(XMLAdrI + '/РасчРасхОпер/НомДок')
        }
        else
        {
          #IfVis(XMLAdrI + '/РасчРасхОпер/НомДок')
        }

        if (IsTipNP_4(XMLAdrI + '/РасчРасхОпер/ТипНП'))
        {
          #SetVisT(XMLAdrI + '/РасчРасхОпер/СерЛицНедр')
          #SetVisT(XMLAdrI + '/РасчРасхОпер/НомЛицНедр')
          #SetVisT(XMLAdrI + '/РасчРасхОпер/ВидЛицНедр')
          #SetVisT(XMLAdrI + '/РасчРасхОпер/НомМорМест')
        }
        else
        {
          #IfVis(XMLAdrI + '/РасчРасхОпер/СерЛицНедр')
          #IfVis(XMLAdrI + '/РасчРасхОпер/НомЛицНедр')
          #IfVis(XMLAdrI + '/РасчРасхОпер/ВидЛицНедр')
          #IfVis(XMLAdrI + '/РасчРасхОпер/НомМорМест')
        }

        #IfVis  (XMLAdrI + '/РасчРасхОпер/КолОбРеалАИ'     ) // #region IfVis
        #IfVis  (XMLAdrI + '/РасчРасхОпер/КолОбРеалАИУб'   )
        #IfVis  (XMLAdrI + '/РасчРасхОпер/ВыручРеалАИ'     )
        #IfVis  (XMLAdrI + '/РасчРасхОпер/ОстСтРеалАИ'     )
        #IfVis  (XMLAdrI + '/РасчРасхОпер/ПрибРеалАИ'      )
        #IfVis  (XMLAdrI + '/РасчРасхОпер/УбытРеалАИ'      )
        #IfVis  (XMLAdrI + '/РасчРасхОпер/ВыручРеалПТДоСр' )
        #IfVis  (XMLAdrI + '/РасчРасхОпер/СтоимРеалПТДоСр' )
        #IfVis  (XMLAdrI + '/РасчРасхОпер/ВыручРеалТов'    )
        #IfVis  (XMLAdrI + '/РасчРасхОпер/РасхРеалТов'     )
        #IfVis  (XMLAdrI + '/РасчРасхОпер/УбытОбОбсл'      )
        #IfVis  (XMLAdrI + '/РасчРасхОпер/УбытОбОбслНеобл' )
        #IfVis  (XMLAdrI + '/РасчРасхОпер/ДохДоговДУИ'     )
        #IfVis  (XMLAdrI + '/РасчРасхОпер/ДохДоговДУИ_ВнР' )
        #IfVis  (XMLAdrI + '/РасчРасхОпер/РасхДоговДУИ'    )
        #IfVis  (XMLAdrI + '/РасчРасхОпер/РасхДоговДУИ_ВнР')
        #IfVis  (XMLAdrI + '/РасчРасхОпер/УбытДоговДУИ'    )
        #IfVis  (XMLAdrI + '/РасчРасхОпер/ЦенРеалПрЗУ'     )
        #IfVis  (XMLAdrI + '/РасчРасхОпер/НеВозЗатрПрЗУ'   )
        #IfVis  (XMLAdrI + '/РасчРасхОпер/УбытРеалПрЗУ'    ) // #endregion IfVis

        if (    GetStrNull(XMLAdrI + '/РасчРасхОпер/УбытРеалПТ1/Убыт1Соот269')
            and GetStrNull(XMLAdrI + '/РасчРасхОпер/УбытРеалПТ1/Убыт1Прев269') )
        then #SetVisF(XMLAdrI + '/РасчРасхОпер/УбытРеалПТ1')
        else
        {
          #SetVisT(XMLAdrI + '/РасчРасхОпер/УбытРеалПТ1')
          #IfVis  (XMLAdrI + '/РасчРасхОпер/УбытРеалПТ1/Убыт1Соот269')
          #IfVis  (XMLAdrI + '/РасчРасхОпер/УбытРеалПТ1/Убыт1Прев269')
        }
      } // #endregion Файл/Документ/Прибыль/РасчНал/РасчРасхОпер

      // #region Файл/Документ/Прибыль/РасчНал/УбытУменНБ           ПРИЛОЖЕНИЕ 4 К ЛИСТУ 02
      CountJ := XMLMap.GetNodeCountByName(XMLAdrI + '/УбытУменНБ');
      for (j := 0; j < CountJ; j++)
      {
        XMLAdrJ := XMLAdrI + '/УбытУменНБ' + getIter(j);

        if (GetStrNull(XMLAdrJ + '/ТипНП'))
        then #SetVisF(XMLAdrJ)
        else
        {
          #SetVisT(XMLAdrJ)

          if (IsTipNP_3(XMLAdrJ + '/ТипНП'))
          {
            #SetVisT(XMLAdrJ + '/НомДок')
          }
          else
          {
            #IfVis(XMLAdrJ + '/НомДок')
          }

          if (IsTipNP_4(XMLAdrJ + '/ТипНП'))
          {
            #SetVisT(XMLAdrJ + '/СерЛицНедр')
            #SetVisT(XMLAdrJ + '/НомЛицНедр')
            #SetVisT(XMLAdrJ + '/ВидЛицНедр')
            #SetVisT(XMLAdrJ + '/НомМорМест')
          }
          else
          {
            #IfVis(XMLAdrJ + '/СерЛицНедр')
            #IfVis(XMLAdrJ + '/НомЛицНедр')
            #IfVis(XMLAdrJ + '/ВидЛицНедр')
            #IfVis(XMLAdrJ + '/НомМорМест')
          }

          #IfVis  (XMLAdrJ + '/ОстУбытНачВс'    )
          #IfVis  (XMLAdrJ + '/ОстУбытЗавСд'    )
          #IfVis  (XMLAdrJ + '/ОстУбытЗавСдНач' )
          #IfVis  (XMLAdrJ + '/НалБаза'         )
          #IfVis  (XMLAdrJ + '/УбытУмНалБазаВс' )
          #IfVis  (XMLAdrJ + '/УбытУмНалБаза135')
          #IfVis  (XMLAdrJ + '/ОстУбытКонВс'    )
          #IfVis  (XMLAdrJ + '/ОстУбытКон135'   )

          CountK := XMLMap.GetNodeCountByName(XMLAdrJ + '/ОстУбытНачПерГод');
          for (k := 0; k < CountK; k++)
          {
            XMLAdrK := XMLAdrJ + '/ОстУбытНачПерГод' + getIter(k);

            if (   GetStrNull(XMLAdrK + '/Год'    )
                or GetStrNull(XMLAdrK + '/ОстУбыт') )
            then #SetVisF(XMLAdrK)
            else #SetVisT(XMLAdrK)
          }
        }
      } // #endregion Файл/Документ/Прибыль/РасчНал/УбытУменНБ

      // #region Файл/Документ/Прибыль/РасчНал/РаспрНалСубРФ        ПРИЛОЖЕНИЕ 5 К ЛИСТУ 02
      CountJ := XMLMap.GetNodeCountByName(XMLAdrI + '/РаспрНалСубРФ');
      for (j := 0; j < CountJ; j++)
      {
        XMLAdrJ := XMLAdrI + '/РаспрНалСубРФ' + getIter(j);

        if (   GetStrNull(XMLAdrJ + '/ТипНП'       )
            or GetStrNull(XMLAdrJ + '/ОбРасч'      )
            or GetStrNull(XMLAdrJ + '/КППОП'       )
            or GetStrNull(XMLAdrJ + '/ОбязУплНалОП')
            or GetStrNull(XMLAdrJ + '/НаимОП'      ) )
        then #SetVisF(XMLAdrJ)
        else
        {
          #SetVisT(XMLAdrJ                      )

          if (IsTipNP_3(XMLAdrJ + '/ТипНП'))
          {
            #SetVisT(XMLAdrJ + '/НомДок')
          }
          else
          {
            #IfVis(XMLAdrJ + '/НомДок')
          }

          #IfVis  (XMLAdrJ + '/НалБазаОрг'      )
          #IfVis  (XMLAdrJ + '/НалБазаБезЛиквОП')
          #IfVis  (XMLAdrJ + '/ДоляНалБаз'      )
          #IfVis  (XMLAdrJ + '/НалБазаДоля'     )
          #IfVis  (XMLAdrJ + '/НалБазаДоляПнСт' )
          #IfVis  (XMLAdrJ + '/СтавНалСубРФ'    )
          #IfVis  (XMLAdrJ + '/ЗакУстСтавНал'   )
          #IfVis  (XMLAdrJ + '/СумНал'          )
          #IfVis  (XMLAdrJ + '/НалНачислСубРФ'  )
          #IfVis  (XMLAdrJ + '/НалВыплВнеРФ'    )
          #IfVis  (XMLAdrJ + '/ТСУплНачПер'     )
          #IfVis  (XMLAdrJ + '/ТСУменАвПред'    )
          #IfVis  (XMLAdrJ + '/ТСУменАвОтч'     )
          #IfVis  (XMLAdrJ + '/СумИнвВыч'       )
          #IfVis  (XMLAdrJ + '/СумНалП'         )
          #IfVis  (XMLAdrJ + '/МесАвПлат'       )
          #IfVis  (XMLAdrJ + '/МесАвПлат1КвСлед')
        }
      } // #endregion Файл/Документ/Прибыль/РасчНал/РаспрНалСубРФ

      // #region Файл/Документ/Прибыль/РасчНал/РасчНалГруп          ПРИЛОЖЕНИЕ 6 К ЛИСТУ 02
      CountJ := XMLMap.GetNodeCountByName(XMLAdrI + '/РасчНалГруп');
      for (j := 0; j < CountJ; j++)
      {
        XMLAdrJ := XMLAdrI + '/РасчНалГруп' + getIter(j);

        if (   GetStrNull(XMLAdrJ + '/ИННЮЛ'      )
            or GetStrNull(XMLAdrJ + '/КПП'        )
            or GetStrNull(XMLAdrJ + '/ОКТМО'      )
            or GetStrNull(XMLAdrJ + '/НаимУч'     )
            or GetStrNull(XMLAdrJ + '/КолПрил'    )
            or GetStrNull(XMLAdrJ + '/СубРФ'      )
            or GetStrNull(XMLAdrJ + '/НалБазаГр'  )
            or GetStrNull(XMLAdrJ + '/НалБазаДоля') )
        then #SetVisF(XMLAdrJ)
        else
        {
          flK := false;

          // #region Файл/Документ/Прибыль/РасчНал/РасчНалГруп/РасчНалУчГруп      ПРИЛОЖЕНИЕ 6А К ЛИСТУ 02
          CountK := XMLMap.GetNodeCountByName(XMLAdrJ + '/РасчНалУчГруп');
          for (k := 0; k < CountK; k++)
          {
            XMLAdrK := XMLAdrJ + '/РасчНалУчГруп' + getIter(k);

            if (   GetStrNull(XMLAdrK + '/ИННЮЛ'      )
                or GetStrNull(XMLAdrK + '/КПП'        )
                or GetStrNull(XMLAdrK + '/ОКТМО'      )
                or GetStrNull(XMLAdrK + '/НаимУч'     )
                or GetStrNull(XMLAdrK + '/ОбРасч'     )
                or GetStrNull(XMLAdrK + '/НалБазаГр'  ) )
            then #SetVisF(XMLAdrK)
            else
            {
              #SetVisT(XMLAdrK                   )   flK := True;
              #IfVis  (XMLAdrK + '/НалБазаБезОП' )
              #IfVis  (XMLAdrK + '/СрЧислРаб'    )
              #IfVis  (XMLAdrK + '/СрОстСтАмИмущ')
              #IfVis  (XMLAdrK + '/СредАрифВел'  )
              #IfVis  (XMLAdrK + '/ДоляНалБаз'   )
              #IfVis  (XMLAdrK + '/НалБазаДоляСн')
              #IfVis  (XMLAdrK + '/СтавНалСубРФ' )
              #IfVis  (XMLAdrK + '/ЗакУстСтавНал')
              #IfVis  (XMLAdrK + '/СумНал'       )
              #IfVis  (XMLAdrK + '/ТСУплНачПер'  )
              #IfVis  (XMLAdrK + '/ТСУменАвОтч'  )
              #IfVis  (XMLAdrK + '/СумИнвНалВыч' )
            }
          }
          // #endregion Файл/Документ/Прибыль/РасчНал/РасчНалГруп/РасчНалУчГруп

          SetFldVis(XMLAdrJ, flK);

          if (flK)
          {
            #IfVis  (XMLAdrJ + '/НалБазаБезОП'    )
            #IfVis  (XMLAdrJ + '/ДоляНалБаз'      )
            #IfVis  (XMLAdrJ + '/НалБазаДоляСтН'  )
            #IfVis  (XMLAdrJ + '/СумНал'          )
            #IfVis  (XMLAdrJ + '/НалНачислСубРФ'  )
            #IfVis  (XMLAdrJ + '/НалВыплВнеРФ'    )
            #IfVis  (XMLAdrJ + '/ТСУплНачПер'     )
            #IfVis  (XMLAdrJ + '/ТСУменАвПред'    )
            #IfVis  (XMLAdrJ + '/ТСУменАвОтч'     )
            #IfVis  (XMLAdrJ + '/СумИнвНалВыч'    )
            #IfVis  (XMLAdrJ + '/СумНалП'         )
            #IfVis  (XMLAdrJ + '/МесАвПлат'       )
            #IfVis  (XMLAdrJ + '/МесАвПлат1КвСлед')
          }
        }
      } // #endregion Файл/Документ/Прибыль/РасчНал/РасчНалГруп

      // #region Файл/Документ/Прибыль/РасчНал/ДохРасхУчГрупНБ/СумНБУчастКГН    ПРИЛОЖЕНИЕ 6Б К ЛИСТУ 02 РАЗДЕЛ А
      #SetVisT(XMLAdrI + '/ДохРасхУчГрупНБ/СумНБУчастКГН'                               )
      #SetVisT(XMLAdrI + '/ДохРасхУчГрупНБ/СумНБУчастКГН/ОбщКонсНБКГН'                  )
      #IfVis  (XMLAdrI + '/ДохРасхУчГрупНБ/СумНБУчастКГН/ОбщКонсНБКГН/СумНБУчГр'        )
      #IfVis  (XMLAdrI + '/ДохРасхУчГрупНБ/СумНБУчастКГН/ОбщКонсНБКГН/СумУбытУчГр'      )
      #IfVis  (XMLAdrI + '/ДохРасхУчГрупНБ/СумНБУчастКГН/ОбщКонсНБКГН/УбытУчОбщКонсНБ'  )
      #IfVis  (XMLAdrI + '/ДохРасхУчГрупНБ/СумНБУчастКГН/ОбщКонсНБКГН/УбытУчНеОбщКонсНБ')
      #IfVis  (XMLAdrI + '/ДохРасхУчГрупНБ/СумНБУчастКГН/ОбщКонсНБКГН/ОбщКонсНБГр'      )
      #IfVis  (XMLAdrI + '/ДохРасхУчГрупНБ/СумНБУчастКГН/ОбщКонсНБКГН/УбУмКонсНБНеобрЦБ')
      #IfVis  (XMLAdrI + '/ДохРасхУчГрупНБ/СумНБУчастКГН/ОбщКонсНБКГН/ОстУбПредНеУчтНач')
      #IfVis  (XMLAdrI + '/ДохРасхУчГрупНБ/СумНБУчастКГН/ОбщКонсНБКГН/УбПредУмОбщНБПер' )
      #IfVis  (XMLAdrI + '/ДохРасхУчГрупНБ/СумНБУчастКГН/ОбщКонсНБКГН/ОстУбытНеУчтКон'  )

      if (GetStrNull(XMLAdrI + '/ДохРасхУчГрупНБ/СумНБУчастКГН/КонсНБКГННеОбр/КонсНБГр'))
      {
        #SetVisF(XMLAdrI + '/ДохРасхУчГрупНБ/СумНБУчастКГН/КонсНБКГННеОбр'                  )
      }
      else
      {
        #SetVisT(XMLAdrI + '/ДохРасхУчГрупНБ/СумНБУчастКГН/КонсНБКГННеОбр'                  )
        #IfVis  (XMLAdrI + '/ДохРасхУчГрупНБ/СумНБУчастКГН/КонсНБКГННеОбр/СумНБУчГр'        )
        #IfVis  (XMLAdrI + '/ДохРасхУчГрупНБ/СумНБУчастКГН/КонсНБКГННеОбр/СумУбытУчГр'      )
        #IfVis  (XMLAdrI + '/ДохРасхУчГрупНБ/СумНБУчастКГН/КонсНБКГННеОбр/УбытУчКонсНБ'     )
        #IfVis  (XMLAdrI + '/ДохРасхУчГрупНБ/СумНБУчастКГН/КонсНБКГННеОбр/УбытУчНеКонсНБ'   )
        #IfVis  (XMLAdrI + '/ДохРасхУчГрупНБ/СумНБУчастКГН/КонсНБКГННеОбр/КонсНБГр'         )
        #IfVis  (XMLAdrI + '/ДохРасхУчГрупНБ/СумНБУчастКГН/КонсНБКГННеОбр/КонсНБГрУмУбПер'  )
        #IfVis  (XMLAdrI + '/ДохРасхУчГрупНБ/СумНБУчастКГН/КонсНБКГННеОбр/ОстУбПредНеУчтНач')
        #IfVis  (XMLAdrI + '/ДохРасхУчГрупНБ/СумНБУчастКГН/КонсНБКГННеОбр/УбПредУмНБПер'    )
        #IfVis  (XMLAdrI + '/ДохРасхУчГрупНБ/СумНБУчастКГН/КонсНБКГННеОбр/ОстУбытНеУчтКон'  )
      }

      // #endregion Файл/Документ/Прибыль/РасчНал/ДохРасхУчГрупНБ ПРИЛОЖЕНИЕ 6Б К ЛИСТУ 02 РАЗДЕЛ А

      // #region Файл/Документ/Прибыль/РасчНал/ДохРасхУчГрупНБ/ДохРасхУчастКГН      ПРИЛОЖЕНИЕ 6Б К ЛИСТУ 02 РАЗДЕЛ Б
      flJ := False;
      CountJ := XMLMap.GetNodeCountByName(XMLAdrI + '/ДохРасхУчГрупНБ/ДохРасхУчастКГН');
      for (j := 0; j < CountJ; j++)
      {
        XMLAdrJ := XMLAdrI + '/ДохРасхУчГрупНБ/ДохРасхУчастКГН' + getIter(j);

        if (GetStrNull(XMLAdrJ + '/ИННЮЛ_УчКГр'))
        { #SetVisF(XMLAdrJ) }
        else
        {
          flJ := True;
          #SetVisT(XMLAdrJ                                      )
          #SetVisT(XMLAdrJ + '/РасчОбщНБУчКГН'                  )
          #IfVis  (XMLAdrJ + '/РасчОбщНБУчКГН/ДохРеалУчКГ'      )
          #IfVis  (XMLAdrJ + '/РасчОбщНБУчКГН/ВнеРеалДох'       )
          #IfVis  (XMLAdrJ + '/РасчОбщНБУчКГН/РасхУменДохРеал'  )
          #IfVis  (XMLAdrJ + '/РасчОбщНБУчКГН/ВнеРеалРасх'      )
          #IfVis  (XMLAdrJ + '/РасчОбщНБУчКГН/УбытОперПр3'      )
          #IfVis  (XMLAdrJ + '/РасчОбщНБУчКГН/ДохИсклПриб'      )
          #IfVis  (XMLAdrJ + '/РасчОбщНБУчКГН/КорПрошЛишУплНал' )
          #IfVis  (XMLAdrJ + '/РасчОбщНБУчКГН/КорНБРаздV.1'     )
          #IfVis  (XMLAdrJ + '/РасчОбщНБУчКГН/НалБазДохИнв'     )
          #IfVis  (XMLAdrJ + '/РасчОбщНБУчКГН/ОбщНБУчаст'       )
          #IfVis  (XMLAdrJ + '/РасчОбщНБУчКГН/УбытУчаст'        )
          #IfVis  (XMLAdrJ + '/РасчОбщНБУчКГН/ОстУбПредНеУчтНач')
          #IfVis  (XMLAdrJ + '/РасчОбщНБУчКГН/УбПредУмНБПер'    )
          #IfVis  (XMLAdrJ + '/РасчОбщНБУчКГН/ОбщНБУчУмУбытПред')
          #IfVis  (XMLAdrJ + '/РасчОбщНБУчКГН/ОстУбНеУчтКон'    )
          #IfVis  (XMLAdrJ + '/РасчОбщНБУчКГН/ОстУбНеУчтНалПер' )

          #SetVisT(XMLAdrJ + '/РасчНБУчКГННеОбр'                   )
          #IfVis  (XMLAdrJ + '/РасчНБУчКГННеОбр/НалБазУчаст'       )
          #IfVis  (XMLAdrJ + '/РасчНБУчКГННеОбр/НалБазУчастОш'     )
          #IfVis  (XMLAdrJ + '/РасчНБУчКГННеОбр/НалБазИнвТов'      )
          #IfVis  (XMLAdrJ + '/РасчНБУчКГННеОбр/УбытУчаст'         )
          #IfVis  (XMLAdrJ + '/РасчНБУчКГННеОбр/УбытНеУчтНач'      )
          #IfVis  (XMLAdrJ + '/РасчНБУчКГННеОбр/УбПредУмНБПер'     )
          #IfVis  (XMLAdrJ + '/РасчНБУчКГННеОбр/НБУчУмУбытПред'    )
          #IfVis  (XMLAdrJ + '/РасчНБУчКГННеОбр/ОстУбытНеУчтКон'   )
          #IfVis  (XMLAdrJ + '/РасчНБУчКГННеОбр/ОстУбытНеУчтНалПер')
        }
      }
      // #endregion Файл/Документ/Прибыль/РасчНал/ДохРасхУчГрупНБ/ДохРасхУчастКГН      ПРИЛОЖЕНИЕ 6Б К ЛИСТУ 02 РАЗДЕЛ Б

      If (flJ And GetFldVis(XMLAdrI + '/ДохРасхУчГрупНБ/СумНБУчастКГН'))
      { #SetVisT(XMLAdrI + '/ДохРасхУчГрупНБ') }
      Else
      { #SetVisF(XMLAdrI + '/ДохРасхУчГрупНБ') }
      // #endregion Файл/Документ/Прибыль/РасчНал/ДохРасхУчГрупНБ    ПРИЛОЖЕНИЕ 6Б К ЛИСТУ 02

      // #region Файл/Документ/Прибыль/РасчНал/ИнвНалВыч/  ПРИЛОЖЕНИЕ 7 К ЛИСТУ 02
      // #region Файл/Документ/Прибыль/РасчНал/ИнвНалВыч/РасчИнвВыч  ПРИЛОЖЕНИЕ 7 К ЛИСТУ 02 РАЗДЕЛ А
      flJ := False;
      CountJ := XMLMap.GetNodeCountByName(XMLAdrI + '/ИнвНалВыч/РасчИнвВыч');
      for (j := 0; j < CountJ; j++)
      {
        XMLAdrJ := XMLAdrI + '/ИнвНалВыч/РасчИнвВыч' + getIter(j);

        if (   GetStrNull(XMLAdrJ + '/ОбРасч' )
            Or GetStrNull(XMLAdrJ + '/КППМест') )
        { #SetVisF(XMLAdrJ) }
        else
        {
          flJ := True;
          #SetVisT(XMLAdrJ)
          #IfVis(XMLAdrJ + '/ОбРасч'    )
          #IfVis(XMLAdrJ + '/КППМест'   )
          #IfVis(XMLAdrJ + '/ПредИнвВыч')
          #IfVis(XMLAdrJ + '/ВозмИнвВыч')

          if (    GetStrNull(XMLAdrJ + '/МаксИнвВыч/МаксИнвВычВс')
              and GetStrNull(XMLAdrJ + '/МаксИнвВыч/МаксИнвВыч01')
              and GetStrNull(XMLAdrJ + '/МаксИнвВыч/МаксИнвВыч02')
              and GetStrNull(XMLAdrJ + '/МаксИнвВыч/МаксИнвВыч03')
              and GetStrNull(XMLAdrJ + '/МаксИнвВыч/МаксИнвВыч04')
              and GetStrNull(XMLAdrJ + '/МаксИнвВыч/МаксИнвВыч05')
              and GetStrNull(XMLAdrJ + '/МаксИнвВыч/МаксИнвВыч06') )
          { #SetVisF(XMLAdrJ + '/МаксИнвВыч') }
          else
          {
            #SetVisT(XMLAdrJ + '/МаксИнвВыч')
            #IfVis  (XMLAdrJ + '/МаксИнвВыч/МаксИнвВычВс')
            #IfVis  (XMLAdrJ + '/МаксИнвВыч/МаксИнвВыч01')
            #IfVis  (XMLAdrJ + '/МаксИнвВыч/МаксИнвВыч02')
            #IfVis  (XMLAdrJ + '/МаксИнвВыч/МаксИнвВыч03')
            #IfVis  (XMLAdrJ + '/МаксИнвВыч/МаксИнвВыч04')
            #IfVis  (XMLAdrJ + '/МаксИнвВыч/МаксИнвВыч05')
            #IfVis  (XMLAdrJ + '/МаксИнвВыч/МаксИнвВыч06')
          }

          #IfVis(XMLAdrJ + '/ОстИнвВыч/ОстИнвВычВс')
          flK := (not  GetStrNull(XMLAdrJ + '/ОстИнвВыч/ОстИнвВычВс'));
          CountK := XMLMap.GetNodeCountByName(XMLAdrJ + '/ОстИнвВыч/ОстИнвВычРасх');
          for (k := 0; k < CountK; k++)
          {
            XMLAdrK := XMLAdrJ + '/ОстИнвВыч/ОстИнвВычРасх' + getIter(k);

            if (   GetStrNull(XMLAdrK + '/КодРасх')
                or GetStrNull(XMLAdrK + '/СумРасх') )
            then #SetVisF(XMLAdrK)
            else
            {
              flK := True;
              #SetVisT(XMLAdrK              )
              #IfVis  (XMLAdrK + '/КодРасх' )
              #IfVis  (XMLAdrK + '/СумРасх' )
            }
          }
          SetFldVis(XMLAdrJ + '/ОстИнвВыч', flK);

          #IfVis(XMLAdrJ + '/СумИнвВыч/СумИнвВычВс')
          flK := (not  GetStrNull(XMLAdrJ + '/СумИнвВыч/СумИнвВычВс'));
          CountK := XMLMap.GetNodeCountByName(XMLAdrJ + '/СумИнвВыч/СумИнвВычРасх');
          for (k := 0; k < CountK; k++)
          {
            XMLAdrK := XMLAdrJ + '/СумИнвВыч/СумИнвВычРасх' + getIter(k);

            if (   GetStrNull(XMLAdrK + '/КодРасх')
                or GetStrNull(XMLAdrK + '/СумРасх') )
            then #SetVisF(XMLAdrK)
            else
            {
              flK := True;
              #SetVisT(XMLAdrK              )
              #IfVis  (XMLAdrK + '/КодРасх' )
              #IfVis  (XMLAdrK + '/СумРасх' )
            }
          }
          SetFldVis(XMLAdrJ + '/СумИнвВыч', flK);

          #IfVis(XMLAdrJ + '/НеучИнвВыч/НеучИнвВычВс')
          flK := (not  GetStrNull(XMLAdrJ + '/НеучИнвВыч/НеучИнвВычВс'));
          CountK := XMLMap.GetNodeCountByName(XMLAdrJ + '/НеучИнвВыч/НеучИнвВычРасх');
          for (k := 0; k < CountK; k++)
          {
            XMLAdrK := XMLAdrJ + '/НеучИнвВыч/НеучИнвВычРасх' + getIter(k);

            if (   GetStrNull(XMLAdrK + '/КодРасх')
                or GetStrNull(XMLAdrK + '/СумРасх') )
            then #SetVisF(XMLAdrK)
            else
            {
              flK := True;
              #SetVisT(XMLAdrK              )
              #IfVis  (XMLAdrK + '/КодРасх' )
              #IfVis  (XMLAdrK + '/СумРасх' )
            }
          }
          SetFldVis(XMLAdrJ + '/НеучИнвВыч', flK);
        }
      }
      SetFldVis(XMLAdrI + '/ИнвНалВыч', flJ)
      // #endregion Файл/Документ/Прибыль/РасчНал/ИнвНалВыч/РасчИнвВыч  ПРИЛОЖЕНИЕ 7 К ЛИСТУ 02 РАЗДЕЛ А

      // #region Файл/Документ/Прибыль/РасчНал/ИнвНалВыч/ПредВелИнвНеОб  ПРИЛОЖЕНИЕ 7 К ЛИСТУ 02 РАЗДЕЛ Б
      CountJ := XMLMap.GetNodeCountByName(XMLAdrI + '/ИнвНалВыч/ПредВелИнвНеОб');
      for (j := 0; j < CountJ; j++)
      {
        XMLAdrJ := XMLAdrI + '/ИнвНалВыч/ПредВелИнвНеОб' + getIter(j);

        #SetVisT(XMLAdrJ)

        if (   GetStrNull(XMLAdrJ + '/НалБаза120'  )
            Or GetStrNull(XMLAdrJ + '/СтавНалИнв'  )
            Or GetStrNull(XMLAdrJ + '/ПредВеличИнв') )
        { #SetVisF(XMLAdrJ) }
        else
        {
          #IfVis(XMLAdrJ + '/НалБаза120'  )
          #IfVis(XMLAdrJ + '/СтавНалИнв'  )
          #IfVis(XMLAdrJ + '/ПредВеличИнв')
        }

        if (   GetStrNull(XMLAdrJ + '/СумНалСуб/СумНалСуб200' )
            Or GetStrNull(XMLAdrJ + '/СумНалСуб/СумНалСубСтав') )
        {
          #SetVisF(XMLAdrJ)
          #SetVisF(XMLAdrJ + '/СумНалСуб')
        }
        else
        {

          #SetVisT(XMLAdrJ + '/СумНалСуб')
          #IfVis(XMLAdrJ + '/СумНалСуб/СумНалСуб200' )
          #IfVis(XMLAdrJ + '/СумНалСуб/СумНалСубСтав')
        }
      }
      // #endregion Файл/Документ/Прибыль/РасчНал/ИнвНалВыч/ПредВелИнвНеОб  ПРИЛОЖЕНИЕ 7 К ЛИСТУ 02 РАЗДЕЛ Б

      // #region Файл/Документ/Прибыль/РасчНал/ИнвНалВыч/ПредВелИнвОб  ПРИЛОЖЕНИЕ 7 К ЛИСТУ 02 РАЗДЕЛ В
      CountJ := XMLMap.GetNodeCountByName(XMLAdrI + '/ИнвНалВыч/ПредВелИнвОб');
      for (j := 0; j < CountJ; j++)
      {
        XMLAdrJ := XMLAdrI + '/ИнвНалВыч/ПредВелИнвОб' + getIter(j);

        #SetVisT(XMLAdrJ)

        if (   GetStrNull(XMLAdrJ + '/ОбРасч'     )
            Or GetStrNull(XMLAdrJ + '/КППМест'    )
            Or GetStrNull(XMLAdrJ + '/НалБазаДоля')
            Or GetStrNull(XMLAdrJ + '/СтавНалРасч')
            Or GetStrNull(XMLAdrJ + '/ПредВелИнв' ) )
        { #SetVisF(XMLAdrJ) }
        else
        {
          #IfVis(XMLAdrJ + '/ОбРасч'     )
          #IfVis(XMLAdrJ + '/КППМест'    )
          #IfVis(XMLAdrJ + '/НалБазаДоля')
          #IfVis(XMLAdrJ + '/СтавНалРасч')
          #IfVis(XMLAdrJ + '/ПредВелИнв' )
        }

        if (   GetStrNull(XMLAdrJ + '/СумНалСуб/СумНалСуб070' )
            Or GetStrNull(XMLAdrJ + '/СумНалСуб/СумНалСубСтав') )
        {
          #SetVisF(XMLAdrJ)
          #SetVisF(XMLAdrJ + '/СумНалСуб')
        }
        else
        {
          #SetVisT(XMLAdrJ + '/СумНалСуб')
          #IfVis(XMLAdrJ + '/СумНалСуб/СумНалСуб070' )
          #IfVis(XMLAdrJ + '/СумНалСуб/СумНалСубСтав')
        }
      }
      // #endregion Файл/Документ/Прибыль/РасчНал/ИнвНалВыч/ПредВелИнвОб  ПРИЛОЖЕНИЕ 7 К ЛИСТУ 02 РАЗДЕЛ В

      // #region Файл/Документ/Прибыль/РасчНал/ИнвНалВыч/УмСумИнвВыч  ПРИЛОЖЕНИЕ 7 К ЛИСТУ 02 РАЗДЕЛ Г
      flJ := False;
      CountJ := XMLMap.GetNodeCountByName(XMLAdrI + '/ИнвНалВыч/УмСумИнвВыч');
      for (j := 0; j < CountJ; j++)
      {
        XMLAdrJ := XMLAdrI + '/ИнвНалВыч/УмСумИнвВыч' + getIter(j);

        #SetVisT(XMLAdrJ)

        if (   GetStrNull(XMLAdrJ + '/ОбРасч'   )
            Or GetStrNull(XMLAdrJ + '/КППМест'  )
            Or GetStrNull(XMLAdrJ + '/СумИсчНал') )
        { #SetVisF(XMLAdrJ) }
        else
        {
          #IfVis(XMLAdrJ + '/ОбРасч'        )
          #IfVis(XMLAdrJ + '/КППМест'       )
          #IfVis(XMLAdrJ + '/СумИсчНал'     )
          #IfVis(XMLAdrJ + '/РасчСумНалОб'  )
          #IfVis(XMLAdrJ + '/СумРасхУмНеОб' )
          #IfVis(XMLAdrJ + '/СумРасхУмОб'   )
          #IfVis(XMLAdrJ + '/СумРасхУмФед'  )
        }

        if (GetStrNull(XMLAdrJ + '/РасхРасчУм/РасхРасчУмВс'))
        {
          #SetVisF(XMLAdrJ)
          #SetVisF(XMLAdrJ + '/РасхРасчУм')
        }
        else
        {
          #SetVisT(XMLAdrJ + '/РасхРасчУм')
          #IfVis(XMLAdrJ + '/РасхРасчУм/РасхРасчУмВс')
          #IfVis(XMLAdrJ + '/РасхРасчУм/РасхСоор'    )
          #IfVis(XMLAdrJ + '/РасхРасчУм/РасхДооб'    )
          #IfVis(XMLAdrJ + '/РасхРасчУм/РасхСозд'    )
        }

        if (GetStrNull(XMLAdrJ + '/СумРасхУм/СумРасхУм'))
        {
          #SetVisF(XMLAdrJ)
          #SetVisF(XMLAdrJ + '/СумРасхУм')
        }
        else
        {
          #SetVisT(XMLAdrJ + '/СумРасхУм')
          #IfVis(XMLAdrJ + '/СумРасхУм/СумРасхУм'   )
          #IfVis(XMLAdrJ + '/СумРасхУм/СумРасхУм021')
          #IfVis(XMLAdrJ + '/СумРасхУм/СумРасхУм022')
          #IfVis(XMLAdrJ + '/СумРасхУм/СумРасхУм023')
        }

        if (GetFldVis(XMLAdrJ))
        { flJ := True; }
      }
      If (GetFldVis(XMLAdrI + '/ИнвНалВыч'))
      { SetFldVis(XMLAdrI + '/ИнвНалВыч', flJ) }
      // #endregion Файл/Документ/Прибыль/РасчНал/ИнвНалВыч/РасчИнвВыч  ПРИЛОЖЕНИЕ 7 К ЛИСТУ 02 РАЗДЕЛ Г
      // #endregion Файл/Документ/Прибыль/РасчНал/ИнвНалВыч/  ПРИЛОЖЕНИЕ 7 К ЛИСТУ 02
    }
  }
  // #endregion Файл/Документ/Прибыль/РасчНал

  // #region Файл/Документ/Прибыль/РаспрНалСубРФ     ЛИСТ 02. ПРИЛОЖЕНИЕ 5 (V.2)
  CountI := XMLMap.GetNodeCountByName('Файл/Документ/Прибыль/РаспрНалСубРФ');
  for (i := 0; i < CountI; i++)
  {
    XMLAdrI := 'Файл/Документ/Прибыль/РаспрНалСубРФ' + getIter(i);

    if (   GetStrNull(XMLAdrI + '/ТипНП'       )
        or GetStrNull(XMLAdrI + '/ОбРасч'      )
        or GetStrNull(XMLAdrI + '/КППОП'       )
        or GetStrNull(XMLAdrI + '/ОбязУплНалОП')
        or GetStrNull(XMLAdrI + '/НаимОП'      ) )
    then #SetVisF(XMLAdrI)
    else
    {
      #SetVisT(XMLAdrI                      )
      #IfVis  (XMLAdrI + '/НалБазаОрг'      )
      #IfVis  (XMLAdrI + '/НалБазаБезЛиквОП')
      #IfVis  (XMLAdrI + '/ДоляНалБаз'      )
      #IfVis  (XMLAdrI + '/НалБазаДоля'     )
      #IfVis  (XMLAdrI + '/НалБазаДоляПнСт' )
      #IfVis  (XMLAdrI + '/СтавНалСубРФ'    )
      #IfVis  (XMLAdrI + '/СумНал'          )
      #IfVis  (XMLAdrI + '/НалНачислСубРФ'  )
      #IfVis  (XMLAdrI + '/НалВыплВнеРФ'    )
      #IfVis  (XMLAdrI + '/ТСУплНачПер'     )
      #IfVis  (XMLAdrI + '/ТСУменАвПред'    )
      #IfVis  (XMLAdrI + '/ТСУменАвОтч'     )
      #IfVis  (XMLAdrI + '/СумНалП'         )
      #IfVis  (XMLAdrI + '/МесАвПлат'       )
      #IfVis  (XMLAdrI + '/МесАвПлат1КвСлед')
    }
  }
  // #endregion Файл/Документ/Прибыль/РаспрНалСубРФ

  // #region Файл/Документ/Прибыль/НалУдНА           ЛИСТ 03
  flI := False;

  // #region Файл/Документ/Прибыль/НалУдНА/НалДохДив    ЛИСТ 03. РАЗДЕЛ А
  CountI := XMLMap.GetNodeCountByName('Файл/Документ/Прибыль/НалУдНА/НалДохДив');
  for (i := 0; i < CountI; i++)
  {
    XMLAdrI := 'Файл/Документ/Прибыль/НалУдНА/НалДохДив' + getIter(i);

    if (   GetStrNull(XMLAdrI + '/КатегорНА'  )
        or GetStrNull(XMLAdrI + '/ВидДив'     )
        or GetStrNull(XMLAdrI + '/НалПер'     )
        or GetStrNull(XMLAdrI + '/ОтчетГод'   )
        or GetStrNull(XMLAdrI + '/ДивРаспрПол')
        or GetStrNull(XMLAdrI + '/ДивВсего'   ) )
    then #SetVisF(XMLAdrI)
    else
    {
      #SetVisT(XMLAdrI                )   flI := True;
      #IfVis  (XMLAdrI + '/ИННЮЛ_ЭмЦБ')
      #IfVis  (XMLAdrI + '/ДивФЛРез'  )
      #IfVis  (XMLAdrI + '/ДивНеДоход')
      #IfVis  (XMLAdrI + '/ДивРаспрУм')
      #IfVis  (XMLAdrI + '/НалИсчисл' )
      #IfVis  (XMLAdrI + '/НалДивПред')
      #IfVis  (XMLAdrI + '/НалДивПосл')
      
      SetNotFldVis(XMLAdrI + '/ФИОРук')

      if (GetStrNull(XMLAdrI + '/ДивРосОрг/ДивРосОргВс'))
      then #SetVisF(XMLAdrI)
      else
      {
        #SetVisT(XMLAdrI                            )
        #IfVis  (XMLAdrI + '/ДивРосОрг/ДивРосСтав0' )
        #IfVis  (XMLAdrI + '/ДивРосОрг/ДивРосСтав13')
        #IfVis  (XMLAdrI + '/ДивРосОрг/ДивРосСтавИн')
        #IfVis  (XMLAdrI + '/ДивРосОрг/ДивРосНеНП'  )
      }

      if (    GetStrNull(XMLAdrI + '/ДивИнОрг/ДивИнОргВс' )
          and GetStrNull(XMLAdrI + '/ДивИнОрг/ДивИнОргРос') )
      then #SetVisF(XMLAdrI + '/ДивИнОрг')
      else
      {
        #SetVisT(XMLAdrI + '/ДивИнОрг'            )
        #IfVis  (XMLAdrI + '/ДивИнОрг/ДивИнОргВс')
        #IfVis  (XMLAdrI + '/ДивИнОрг/ДивИнОргРос')
      }

      if (    GetStrNull(XMLAdrI + '/ДивФЛНеРез/ДивФЛНеРезВс' )
          and GetStrNull(XMLAdrI + '/ДивФЛНеРез/ДивФЛСтав0'   )
          and GetStrNull(XMLAdrI + '/ДивФЛНеРез/ДивФЛСтав5'   )
          and GetStrNull(XMLAdrI + '/ДивФЛНеРез/ДивФЛСтав10'  )
          and GetStrNull(XMLAdrI + '/ДивФЛНеРез/ДивФЛСтавСв10') )
      then #SetVisF(XMLAdrI + '/ДивФЛНеРез')
      else
      {
        #SetVisT(XMLAdrI + '/ДивФЛНеРез'              )
        #IfVis  (XMLAdrI + '/ДивФЛНеРез/ДивФЛНеРезВс' )
        #IfVis  (XMLAdrI + '/ДивФЛНеРез/ДивФЛСтав0'   )
        #IfVis  (XMLAdrI + '/ДивФЛНеРез/ДивФЛСтав5'   )
        #IfVis  (XMLAdrI + '/ДивФЛНеРез/ДивФЛСтав10'  )
        #IfVis  (XMLAdrI + '/ДивФЛНеРез/ДивФЛСтавСв10')
      }

      if (    GetStrNull(XMLAdrI + '/ДивНА/ДивНАдоРас' )
          and GetStrNull(XMLAdrI + '/ДивНА/ДивНАБезУч0') )
      then #SetVisF(XMLAdrI + '/ДивНА')
      else
      {
        #SetVisT(XMLAdrI + '/ДивНА'            )
        #IfVis  (XMLAdrI + '/ДивНА/ДивНАдоРас' )
        #IfVis  (XMLAdrI + '/ДивНА/ДивНАБезУч0')
      }

      if (    GetStrNull(XMLAdrI + '/ДивНал/ДивНал13')
          and GetStrNull(XMLAdrI + '/ДивНал/ДивНал0' ) )
      then #SetVisF(XMLAdrI + '/ДивНал')
      else
      {
        #SetVisT(XMLAdrI + '/ДивНал')
        #IfVis  (XMLAdrI + '/ДивНал/ДивНал13')
        #IfVis  (XMLAdrI + '/ДивНал/ДивНал0' )
      }

      // #region Файл/Документ/Прибыль/НалУдНА/НалДохДив/РеестрСумДив     ЛИСТ 03. РАЗДЕЛ В
      CountJ := XMLMap.GetNodeCountByName(XMLAdrI + '/РеестрСумДив');
      for (j := 0; j < CountJ; j++)
      {
        XMLAdrJ := XMLAdrI + '/РеестрСумДив' + getIter(j);

        if (   GetStrNull(XMLAdrJ + '/ПрПринадл' )
            or GetStrNull(XMLAdrJ + '/ИННПолуч'  )
            or GetStrNull(XMLAdrJ + '/Тип'       )
            or GetStrNull(XMLAdrJ + '/НаимПолуч' )
            or GetStrNull(XMLAdrJ + '/ДатаПерДив')
            or GetStrNull(XMLAdrJ + '/СумДив'    )
            or GetStrNull(XMLAdrJ + '/СумНал'    ) )
        then #SetVisF(XMLAdrJ)
        else
        {
          #SetVisT(XMLAdrJ              )
          #IfVis  (XMLAdrJ + '/КПППолуч')
          #IfVis  (XMLAdrJ + '/Тлф'     )

          if (   GetStrNull(XMLAdrJ + '/ФИОРук/Фамилия')
              or GetStrNull(XMLAdrJ + '/ФИОРук/Имя'    ) )
          then #SetVisF(XMLAdrJ + '/ФИОРук')
          else
          {
            #SetVisT(XMLAdrJ + '/ФИОРук'         )
            #IfVis  (XMLAdrJ + '/ФИОРук/Отчество')
          }
        }
      } // #endregion Файл/Документ/Прибыль/НалУдНА/НалДохДив/РеестрСумДив
    }
  } // #endregion Файл/Документ/Прибыль/НалУдНА/НалДохДив

  // #region Файл/Документ/Прибыль/НалУдНА/НалДохЦБ     ЛИСТ 03. РАЗДЕЛ Б
  CountI := XMLMap.GetNodeCountByName('Файл/Документ/Прибыль/НалУдНА/НалДохЦБ');
  for (i := 0; i < CountI; i++)
  {
    XMLAdrI := 'Файл/Документ/Прибыль/НалУдНА/НалДохЦБ' + getIter(i);

    if (   GetStrNull(XMLAdrI + '/ВидДоход' )
        or GetStrNull(XMLAdrI + '/НалБаза'  )
        or GetStrNull(XMLAdrI + '/СтавНал'  )
        or GetStrNull(XMLAdrI + '/НалИсчисл') )
    then #SetVisF(XMLAdrI)
    else
    {
      #SetVisT(XMLAdrI                   )   flI := True;
      #IfVis  (XMLAdrI + '/НалНачислПред')
      #IfVis  (XMLAdrI + '/НалНачислПосл')

      // #region Файл/Документ/Прибыль/НалУдНА/НалДохЦБ/РеестрСумДив      ЛИСТ 03. РАЗДЕЛ А
      CountJ := XMLMap.GetNodeCountByName(XMLAdrI + '/РеестрСумДив');
      for (j := 0; j < CountJ; j++)
      {
        XMLAdrJ := XMLAdrI + '/РеестрСумДив' + getIter(j);

        if (   GetStrNull(XMLAdrJ + '/ПрПринадл' )
            or GetStrNull(XMLAdrJ + '/ИННПолуч'  )
            or GetStrNull(XMLAdrJ + '/Тип'       )
            or GetStrNull(XMLAdrJ + '/НаимПолуч' )
            or GetStrNull(XMLAdrJ + '/ДатаПерДив')
            or GetStrNull(XMLAdrJ + '/СумДив'    )
            or GetStrNull(XMLAdrJ + '/СумНал'    ) )
        then #SetVisF(XMLAdrJ)
        else
        {
          #SetVisT(XMLAdrJ              )
          #IfVis  (XMLAdrJ + '/КПППолуч')
          #IfVis  (XMLAdrJ + '/Тлф'     )

          if (   GetStrNull(XMLAdrJ + '/ФИОРук/Фамилия')
              or GetStrNull(XMLAdrJ + '/ФИОРук/Имя'    ) )
          then #SetVisF(XMLAdrJ + '/ФИОРук')
          else
          {
            #SetVisT(XMLAdrJ + '/ФИОРук'         )
            #IfVis  (XMLAdrJ + '/ФИОРук/Отчество')
          }
        }
      } // #endregion Файл/Документ/Прибыль/НалУдНА/НалДохЦБ/РеестрСумДив
    }
  } // #endregion Файл/Документ/Прибыль/НалУдНА/НалДохЦБ

  SetFldVis('Файл/Документ/Прибыль/НалУдНА', flI);
  // #endregion Файл/Документ/Прибыль/НалУдНА

  // #region Файл/Документ/Прибыль/НалДохСтав        ЛИСТ 04
  CountI := XMLMap.GetNodeCountByName('Файл/Документ/Прибыль/НалДохСтав');
  for (i := 0; i < CountI; i++)
  {
    XMLAdrI := 'Файл/Документ/Прибыль/НалДохСтав' + getIter(i);

    if (   GetStrNull(XMLAdrI + '/ВидДоход' )
        or GetStrNull(XMLAdrI + '/НалБаза'  )
        or GetStrNull(XMLAdrI + '/СтавНал'  )
        or GetStrNull(XMLAdrI + '/НалИсчисл') )
    then #SetVisF(XMLAdrI)
    else
    {
      #SetVisT(XMLAdrI                    )
      #IfVis  (XMLAdrI + '/ДохУмНалБаз'   )
      #IfVis  (XMLAdrI + '/НалДивНеРФПред')
      #IfVis  (XMLAdrI + '/НалДивНеРФ'    )
      #IfVis  (XMLAdrI + '/НалНачислПред' )
      #IfVis  (XMLAdrI + '/НалНачислПосл' )
    }
  } // #endregion Файл/Документ/Прибыль/НалДохСтав

  // #region Файл/Документ/Прибыль/НалБазОпОсобН     ЛИСТ 05
  CountI := XMLMap.GetNodeCountByName('Файл/Документ/Прибыль/НалБазОпОсобН');
  for (i := 0; i < CountI; i++)
  {
    XMLAdrI := 'Файл/Документ/Прибыль/НалБазОпОсобН' + getIter(i);

    if (   GetStrNull(XMLAdrI + '/ВидОпер')
        or GetStrNull(XMLAdrI + '/Прибыль')
        or GetStrNull(XMLAdrI + '/НалБаза') )
    then #SetVisF(XMLAdrI)
    else
    {
      #SetVisT(XMLAdrI                       )
      #IfVis  (XMLAdrI + '/ДохВыбыт'         )
      #IfVis  (XMLAdrI + '/ДохВыбЦБНеОрг'    )
      #IfVis  (XMLAdrI + '/ДохЦБНеОргМин'    )
      #IfVis  (XMLAdrI + '/ДохВыбФИССНеОрг'  )
      #IfVis  (XMLAdrI + '/ДохФИССНеОргМин'  )
      #IfVis  (XMLAdrI + '/РасхПриобРеал'    )
      #IfVis  (XMLAdrI + '/РасхЦБНеОрг'      )
      #IfVis  (XMLAdrI + '/РасхЦБНеОргМакс'  )
      #IfVis  (XMLAdrI + '/РасхФИССНеОрг'    )
      #IfVis  (XMLAdrI + '/РасхФИССНеОргМакс')
      #IfVis  (XMLAdrI + '/КорПриб'          )
      #IfVis  (XMLAdrI + '/НалБазаБезУбПред' )
      #IfVis  (XMLAdrI + '/СумУбытУменНБ'    )
    }
  } // #endregion Файл/Документ/Прибыль/НалБазОпОсобН

  // #region Файл/Документ/Прибыль/ДохРасНалБазаНПФ  ЛИСТ 06
  if (   GetStrNull('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/СумПенсРез'                   )
      or GetStrNull('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ДоходНПФ/ДоходНПФВс'          )
      or GetStrNull('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ДоходНПФСтРеф/ДоходНПФСтРефВс') )
  then #SetVisF('Файл/Документ/Прибыль/ДохРасНалБазаНПФ')
  else
  {
    #SetVisT('Файл/Документ/Прибыль/ДохРасНалБазаНПФ'                           )
    #IfVis  ('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ПроцДохРазмРез'            ) // #region IfVis
    #IfVis  ('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/НалБаза'                   )
    #IfVis  ('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ДоходНПФ/РеалЦБРын'        )
    #IfVis  ('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ДоходНПФ/ОтклВырЦБРын'     )
    #IfVis  ('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ДоходНПФ/РеалЦБНеРын'      )
    #IfVis  ('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ДоходНПФ/ОтклВырЦБНеРын'   )
    #IfVis  ('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ДоходНПФ/ПроцГосЦБ'        )
    #IfVis  ('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ДоходНПФ/ПроцЦБЭм2007'     )
    #IfVis  ('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ДоходНПФ/ДолУчДрОрг'       )
    #IfVis  ('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ДоходНПФ/ПроцГосЦБУдНА'    )
    #IfVis  ('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ДоходНПФ/ПроцМунЦБ2007НА'  )
    #IfVis  ('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ДоходНПФ/ДрИнвВлож'        )
    #IfVis  ('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ДоходНПФСтРеф/ЦБРын'       )
    #IfVis  ('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ДоходНПФСтРеф/ЦБНеРын'     )
    #IfVis  ('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ДоходНПФСтРеф/ПроцГосЦБ'   )
    #IfVis  ('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ДоходНПФСтРеф/ПроцЦБЭм2007')
    #IfVis  ('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ДоходНПФСтРеф/ДрИнвВлож'   )
    #IfVis  ('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ПрибУб/ПрибЦБРын'          )
    #IfVis  ('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ПрибУб/СумИсклПрибЦБРын'   )
    #IfVis  ('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ПрибУб/ПрибЦБНеРын'        )
    #IfVis  ('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ПрибУб/СумИсклПрибЦБНеРын' )
    #IfVis  ('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ПрибУб/ДохПроцЦБ'          )
    #IfVis  ('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ПрибУб/ДохПроцЭм2007'      )
    #IfVis  ('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ПрибУб/ДрИнвВлож'          )
    #IfVis  ('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ПрибУб/СумИсклДрИнвВлож'   ) // #endregion IfVis

    if (GetStrNull('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/Расход/РасходВс'))
    then #SetVisF('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/Расход')
    else
    {
      #SetVisT('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/Расход'               )
      #IfVis  ('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/Расход/ВлЦБРын'       )
      #IfVis  ('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/Расход/СумОтклЦБРын'  )
      #IfVis  ('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/Расход/ВлЦБНеРын'     )
      #IfVis  ('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/Расход/СумОтклЦБНеРын')
      #IfVis  ('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/Расход/ДрИнвВлож'     )
    }

    if (   GetStrNull('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ОтчРазмРезУстав/ОтчРазмРезУставФонд')
        or GetStrNull('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ОтчРазмРезУстав/ОтчРазмРезУстав'    )
        or GetStrNull('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ОтчРазмРезУстав/ОтчРазмРезСтрРез'   ))
    then #SetVisF('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ОтчРазмРезУстав')
    else
    {
      #SetVisT('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ОтчРазмРезУстав'                 )
      #IfVis  ('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ОтчРазмРезУстав/ЦБРын'           )
      #IfVis  ('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ОтчРазмРезУстав/ЦБНеРын'         )
      #IfVis  ('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ОтчРазмРезУстав/ПроцЦБ'          )
      #IfVis  ('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ОтчРазмРезУстав/ПроцЦБЭм2007'    )
      #IfVis  ('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ОтчРазмРезУстав/ДолУчДрОрг'      )
      #IfVis  ('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ОтчРазмРезУстав/ПроцЦБУдНА'      )
      #IfVis  ('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ОтчРазмРезУстав/ПроцЦБЭм2007УдНА')
      #IfVis  ('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ОтчРазмРезУстав/ДрИнвВлож'       )
    }

    if (    GetStrNull('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ВлЦБОргНеРын/НалБаза'        )
        and GetStrNull('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ВлЦБОргНеРын/ОстУбСдНеОбр'   )
        and GetStrNull('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ВлЦБОргНеРын/ОстУбСдНеОбрНач')
        and GetStrNull('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ВлЦБОргНеРын/СумУбПред'      )
        and GetStrNull('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ВлЦБОргНеРын/СумУбПриз'      )
        and GetStrNull('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ВлЦБОргНеРын/СумУбПриз458'   )
        and GetStrNull('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ВлЦБОргНеРын/СумНеучУбыт'    )
        and GetStrNull('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ВлЦБОргНеРын/ОстУбыт458'     ) )
    then #SetVisF('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ВлЦБОргНеРын')
    else
    {
      #SetVisT('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ВлЦБОргНеРын'                )
      #IfVis  ('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ВлЦБОргНеРын/НалБаза'        )
      #IfVis  ('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ВлЦБОргНеРын/ОстУбСдНеОбр'   )
      #IfVis  ('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ВлЦБОргНеРын/ОстУбСдНеОбрНач')
      #IfVis  ('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ВлЦБОргНеРын/СумУбПред'      )
      #IfVis  ('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ВлЦБОргНеРын/СумУбПриз'      )
      #IfVis  ('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ВлЦБОргНеРын/СумУбПриз458'   )
      #IfVis  ('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ВлЦБОргНеРын/СумНеучУбыт'    )
      #IfVis  ('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ВлЦБОргНеРын/ОстУбыт458'     )
    }

    if (    GetStrNull('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ДрИнвВлож/НалБаза'    )
        and GetStrNull('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ДрИнвВлож/СумУбПред'  )
        and GetStrNull('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ДрИнвВлож/СумУбПриз'  )
        and GetStrNull('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ДрИнвВлож/СумНеучУбыт') )
    then #SetVisF('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ДрИнвВлож')
    else
    {
      #SetVisT('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ДрИнвВлож'            )
      #IfVis  ('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ДрИнвВлож/НалБаза'    )
      #IfVis  ('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ДрИнвВлож/СумУбПред'  )
      #IfVis  ('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ДрИнвВлож/СумУбПриз'  )
      #IfVis  ('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ДрИнвВлож/СумНеучУбыт')
    }
  }
  // #endregion Файл/Документ/Прибыль/ДохРасНалБазаНПФ

  // #region Файл/Документ/Прибыль/ЦелИспИмущ        ЛИСТ 07
  if (GetStrNull('Файл/Документ/Прибыль/ЦелИспИмущ/СтИмущСрдИт'))
  then #SetVisF('Файл/Документ/Прибыль/ЦелИспИмущ')
  else
  {
    flI := False;

    CountI := XMLMap.GetNodeCountByName('Файл/Документ/Прибыль/ЦелИспИмущ/СвЦелСред07');
    for (i := 0; i < CountI; i++)
    {
      XMLAdrI := 'Файл/Документ/Прибыль/ЦелИспИмущ/СвЦелСред07' + getIter(i);

      if (   GetStrNull(XMLAdrI + '/КодВидПост')
          or GetStrNull(XMLAdrI + '/СтИмущСрд' ) )
      then #SetVisF(XMLAdrI)
      else
      {
        #SetVisT(XMLAdrI                  )   flI := True;
        #IfVis  (XMLAdrI + '/ДатаПост'    )
        #IfVis  (XMLAdrI + '/СрокИспол'   )
        #IfVis  (XMLAdrI + '/СумИспНазн'  )
        #IfVis  (XMLAdrI + '/СумСрокНеИст')
        #IfVis  (XMLAdrI + '/СумНеИсп'    )
      }
    }

    SetFldVis('Файл/Документ/Прибыль/ЦелИспИмущ', flI);

    if (flI)
    {
      #IfVis('Файл/Документ/Прибыль/ЦелИспИмущ/СумИспНазнИт'  )
      #IfVis('Файл/Документ/Прибыль/ЦелИспИмущ/СумСрокНеИстИт')
      #IfVis('Файл/Документ/Прибыль/ЦелИспИмущ/СумНеИспИт'    )
    }
  }
  // #endregion Файл/Документ/Прибыль/ЦелИспИмущ

  // #region Файл/Документ/Прибыль/ДохРасхКор        ЛИСТ 08
  CountI := XMLMap.GetNodeCountByName('Файл/Документ/Прибыль/ДохРасхКор');
  for (i := 0; i < CountI; i++)
  {
    XMLAdrI := 'Файл/Документ/Прибыль/ДохРасхКор' + getIter(i);
    if (   GetStrNull(XMLAdrI + '/ПрУчастКГН'      )
        or GetStrNull(XMLAdrI + '/ВидКор'          )
        or GetStrNull(XMLAdrI + '/СтрРегКонтрагент')
        or (     GetStrNull(XMLAdrI + '/ОснСделКонтр/Значение'   )
             and GetStrNull(XMLAdrI + '/ОснСделКонтр[1]/Значение')
             and GetStrNull(XMLAdrI + '/ОснСделКонтр[2]/Значение')
             and GetStrNull(XMLAdrI + '/ОснСделКонтр[3]/Значение')
             and GetStrNull(XMLAdrI + '/ОснСделКонтр[4]/Значение')
             and GetStrNull(XMLAdrI + '/ОснСделКонтр[5]/Значение')
             and GetStrNull(XMLAdrI + '/ОснСделКонтр[6]/Значение')
             and GetStrNull(XMLAdrI + '/ОснСделКонтр[7]/Значение')
             and GetStrNull(XMLAdrI + '/ОснСделКонтр[8]/Значение')
             and GetStrNull(XMLAdrI + '/ОснСделКонтр[9]/Значение')
            )
        or (        GetStrNull(XMLAdrI + '/Орг_Контрагент/НаимОрг_Контрагент'   )
            and (   GetStrNull(XMLAdrI + '/ФЛ_Контрагент/ФИО_Контрагент/Фамилия')
                 or GetStrNull(XMLAdrI + '/ФЛ_Контрагент/ФИО_Контрагент/Имя'    )
                 )
           )
       )
    then #SetVisF(XMLAdrI)
    else
    {
      #SetVisT(XMLAdrI                      )
      #IfVis  (XMLAdrI + '/РегНомКонтрагент')

      CountJ := XMLMAP.GetNodeCountByName(XMLAdrI + '/ОснСделКонтр');
      for (j := 0; j < CountJ; j++)
      {
        XMLAdrJ := XMLAdrI + '/ОснСделКонтр' + getIter(j);

        SetFldVis(XMLAdrJ, not GetStrNull(XMLAdrJ + '/Значение'));
      }

      if (   GetStrNull(XMLAdrI + '/СвУчастКГН/ИННЮЛ_УчастКГН'  )
          or GetStrNull(XMLAdrI + '/СвУчастКГН/КПП_УчастКГН'    )
          or GetStrNull(XMLAdrI + '/СвУчастКГН/НаимОрг_УчастКГН') )
      { #SetVisF(XMLAdrI + '/СвУчастКГН') }
      else
      { #SetVisT(XMLAdrI + '/СвУчастКГН') }

      if (   GetStrNull(XMLAdrI + '/ФЛ_Контрагент/ФИО_Контрагент/Фамилия')
          or GetStrNull(XMLAdrI + '/ФЛ_Контрагент/ФИО_Контрагент/Имя'    ) )
      {
        #SetVisF(XMLAdrI + '/ФЛ_Контрагент' )

        #SetVisT(XMLAdrI + '/Орг_Контрагент'                      )
        #IfVis  (XMLAdrI + '/Орг_Контрагент/ИННЮЛ_Контрагент'     )
        #IfVis  (XMLAdrI + '/Орг_Контрагент/НаимОрг_КонтрагентЛат')
      }
      else
      {
        #SetVisF(XMLAdrI + '/Орг_Контрагент')

        #IfVis(XMLAdrI + '/ФЛ_Контрагент/ИННФЛ_Контрагент'       )
        #IfVis(XMLAdrI + '/ФЛ_Контрагент/ФИО_Контрагент/Отчество')
      }

      if (   GetStrNull(XMLAdrI + '/ФЛ_Контрагент/ФИО_КонтрагентЛат/Фамилия')
          or GetStrNull(XMLAdrI + '/ФЛ_Контрагент/ФИО_КонтрагентЛат/Имя'    ) )
      {
        #SetVisF(XMLAdrI + '/ФЛ_Контрагент/ФИО_КонтрагентЛат' )
      }
      else
      {
        #SetVisT(XMLAdrI + '/ФЛ_Контрагент/ФИО_КонтрагентЛат')

        #IfVis(XMLAdrI + '/ФЛ_Контрагент/ФИО_КонтрагентЛат/Отчество')
      }

      flJ := False;
      CountJ := XMLMap.GetNodeCountByName(XMLAdrI + '/СведСделКор');
      for (j := 0; j < CountJ; j++)
      {
        XMLAdrJ := XMLAdrI + '/СведСделКор' + getIter(j);

        if (   GetStrNull(XMLAdrJ + '/НомДог'    )
            or GetStrNull(XMLAdrJ + '/ДатаДог'   )
            or GetStrNull(XMLAdrJ + '/ТипПредСд' )
            or GetStrNull(XMLAdrJ + '/НаимПредСд')
            or GetStrNull(XMLAdrJ + '/НаимПредСд') )
        then   #SetVisF(XMLAdrJ)
        else
        {
          #SetVisT(XMLAdrJ) flJ := True;

          #IfVis(XMLAdrJ + '/ТНВЭД' )
          #IfVis(XMLAdrJ + '/ОКПД2' )
          #IfVis(XMLAdrJ + '/ОКВЭД2')
        }
      }
      If (GetFldVis(XMLAdrI))
      { SetFldVis(XMLAdrI, flJ) }

      if (   GetStrNull(XMLAdrI + '/КорНБСдел/ИтогоКор/Признак')
          or GetStrNull(XMLAdrI + '/КорНБСдел/ИтогоКор/Сумма'  ) )
      then #SetVisF(XMLAdrI + '/КорНБСдел')
      else
      {
        #SetVisT(XMLAdrI + '/КорНБСдел')

        SetFldVis(XMLAdrI + '/КорНБСдел/ДохРеал'      , not (GetStrNull(XMLAdrI + '/КорНБСдел/ДохРеал/Признак'      )
                                                          or GetStrNull(XMLAdrI + '/КорНБСдел/ДохРеал/Сумма'        )));
        SetFldVis(XMLAdrI + '/КорНБСдел/ВнеРеалДох'   , not (GetStrNull(XMLAdrI + '/КорНБСдел/ВнеРеалДох/Признак'   )
                                                          or GetStrNull(XMLAdrI + '/КорНБСдел/ВнеРеалДох/Сумма'     )));
        SetFldVis(XMLAdrI + '/КорНБСдел/РасхУмДохРеал', not (GetStrNull(XMLAdrI + '/КорНБСдел/РасхУмДохРеал/Признак')
                                                          or GetStrNull(XMLAdrI + '/КорНБСдел/РасхУмДохРеал/Сумма'  )));
        SetFldVis(XMLAdrI + '/КорНБСдел/ВнеРеалРасх'  , not (GetStrNull(XMLAdrI + '/КорНБСдел/ВнеРеалРасх/Признак'  )
                                                          or GetStrNull(XMLAdrI + '/КорНБСдел/ВнеРеалРасх/Сумма'    )));
      }
    }
  }
  // #endregion Файл/Документ/Прибыль/ДохРасхКор

  // #region Файл/Документ/Прибыль/РасчНалКИК        ЛИСТ 09
  flI := False;

  CountI := XMLMap.GetNodeCountByName('Файл/Документ/Прибыль/РасчНалКИК/СведКИК');
  for (i := 0; i < CountI; i++)
  {
    XMLAdrI := 'Файл/Документ/Прибыль/РасчНалКИК/СведКИК' + getIter(i);

    if (   GetStrNull(XMLAdrI + '/НомерКИК'           )
        or GetStrNull(XMLAdrI + '/НаимОргЛат'         )
        or GetStrNull(XMLAdrI + '/ГосудРег'           )
        or GetStrNull(XMLAdrI + '/СтрНалРез'          )
        or GetStrNull(XMLAdrI + '/РегНомер'           )
        or GetStrNull(XMLAdrI + '/АдрСтрРег'          )
        or GetStrNull(XMLAdrI + '/ДоляУчПриб'         )
        or GetStrNull(XMLAdrI + '/ОснОсвНалобл/Пр1001')
        or GetStrNull(XMLAdrI + '/ОснОсвНалобл/Пр1002')
        or GetStrNull(XMLAdrI + '/ОснОсвНалобл/Пр1003')
        or GetStrNull(XMLAdrI + '/ОснОсвНалобл/Пр1004')
        or GetStrNull(XMLAdrI + '/ОснОсвНалобл/Пр1005')
        or GetStrNull(XMLAdrI + '/ОснОсвНалобл/Пр1006')
        or GetStrNull(XMLAdrI + '/ОснОсвНалобл/Пр1007')
        or GetStrNull(XMLAdrI + '/ОснОсвНалобл/Пр1008')
        or GetStrNull(XMLAdrI + '/ОснОсвНалобл/Пр1009') )
    then #SetVisF(XMLAdrI)
    else
    {
      #SetVisT(XMLAdrI                )   flI := True;
      #IfVis  (XMLAdrI + '/КодОргФорм')
      #IfVis  (XMLAdrI + '/ДокУчр'    )
      #IfVis  (XMLAdrI + '/КодНПРег'  )

      if (   GetStrNull(XMLAdrI + '/РасчНал1.1.309.1/Валюта'        )
          or GetStrNull(XMLAdrI + '/РасчНал1.1.309.1/ПрибДоНалФО'   )
          or GetStrNull(XMLAdrI + '/РасчНал1.1.309.1/ДохНеУчПриб'   )
          or GetStrNull(XMLAdrI + '/РасчНал1.1.309.1/СумКорПрибАкт' )
          or GetStrNull(XMLAdrI + '/РасчНал1.1.309.1/КорВелПрибВал' )
          or GetStrNull(XMLAdrI + '/РасчНал1.1.309.1/КурсВалют'     )
          or GetStrNull(XMLAdrI + '/РасчНал1.1.309.1/ВеличПрибНал'  )
          or GetStrNull(XMLAdrI + '/РасчНал1.1.309.1/СумКорПриб'    )
          or GetStrNull(XMLAdrI + '/РасчНал1.1.309.1/КорПрибВал'    )
          or GetStrNull(XMLAdrI + '/РасчНал1.1.309.1/КорПрибРуб'    ) )
      then #SetVisF(XMLAdrI + '/РасчНал1.1.309.1')
      else
      {
        #SetVisT(XMLAdrI + '/РасчНал1.1.309.1'                   )
        #IfVis  (XMLAdrI + '/РасчНал1.1.309.1/ДивПромежФО'       )
        #IfVis  (XMLAdrI + '/РасчНал1.1.309.1/ДивГодСледФО'      )
        #IfVis  (XMLAdrI + '/РасчНал1.1.309.1/РаспрПриб'         )
        #IfVis  (XMLAdrI + '/РасчНал1.1.309.1/ДохДивИстРО'       )
        #IfVis  (XMLAdrI + '/РасчНал1.1.309.1/ПрибУвелУстКап'    )
        #IfVis  (XMLAdrI + '/РасчНал1.1.309.1/ПрибУбытНалоблРуб' )
        #IfVis  (XMLAdrI + '/РасчНал1.1.309.1/УбытУменНБРуб'     )
        #IfVis  (XMLAdrI + '/РасчНал1.1.309.1/ПрибУбытПодлНалобл')
        #IfVis  (XMLAdrI + '/РасчНал1.1.309.1/ПрибДолКонтрЛиц'   )
        #IfVis  (XMLAdrI + '/РасчНал1.1.309.1/ПрибКосвУчаст'     )
        #IfVis  (XMLAdrI + '/РасчНал1.1.309.1/НалБазаИсчРуб'     )
        #IfVis  (XMLAdrI + '/РасчНал1.1.309.1/ИсчислНал'         )
        #IfVis  (XMLAdrI + '/РасчНал1.1.309.1/СумНал309.1'       )
        #IfVis  (XMLAdrI + '/РасчНал1.1.309.1/НалУплат'          )
      }

      if (   GetStrNull(XMLAdrI + '/РасчНал2.1.309.1/ОснРасПриб'   )
          or GetStrNull(XMLAdrI + '/РасчНал2.1.309.1/Валюта'       )
          or GetStrNull(XMLAdrI + '/РасчНал2.1.309.1/ДоходРеал'    )
          or GetStrNull(XMLAdrI + '/РасчНал2.1.309.1/ВнеРеалДох'   )
          or GetStrNull(XMLAdrI + '/РасчНал2.1.309.1/РасхУмДохРеал')
          or GetStrNull(XMLAdrI + '/РасчНал2.1.309.1/ВнеРеалРасх'  )
          or GetStrNull(XMLAdrI + '/РасчНал2.1.309.1/Прибыль'      )
          or GetStrNull(XMLAdrI + '/РасчНал2.1.309.1/КурсВалют'    )
          or GetStrNull(XMLAdrI + '/РасчНал2.1.309.1/ПрибЦелНал'   )
          or GetStrNull(XMLAdrI + '/РасчНал2.1.309.1/ОбщКорПриб'   )
          or GetStrNull(XMLAdrI + '/РасчНал2.1.309.1/КорПрибВал'   )
          or GetStrNull(XMLAdrI + '/РасчНал2.1.309.1/КорПрибРуб'   ) )
      then #SetVisF(XMLAdrI + '/РасчНал2.1.309.1')
      else
      {
        #SetVisT(XMLAdrI + '/РасчНал2.1.309.1'                   )
        #IfVis  (XMLAdrI + '/РасчНал2.1.309.1/ДивПромежФО'       )
        #IfVis  (XMLAdrI + '/РасчНал2.1.309.1/ДивГодСледФО'      )
        #IfVis  (XMLAdrI + '/РасчНал2.1.309.1/РаспрПриб'         )
        #IfVis  (XMLAdrI + '/РасчНал2.1.309.1/ДохДивИстРО'       )
        #IfVis  (XMLAdrI + '/РасчНал2.1.309.1/ПрибУвелУстКап'    )
        #IfVis  (XMLAdrI + '/РасчНал2.1.309.1/ПрибПодлУчет'      )
        #IfVis  (XMLAdrI + '/РасчНал2.1.309.1/ПрибУбытНалоблРуб' )
        #IfVis  (XMLAdrI + '/РасчНал2.1.309.1/УбытУменНБ'        )
        #IfVis  (XMLAdrI + '/РасчНал2.1.309.1/ПрибПодлУчетРуб'   )
        #IfVis  (XMLAdrI + '/РасчНал2.1.309.1/ПрибДоляУчаст'     )
        #IfVis  (XMLAdrI + '/РасчНал2.1.309.1/ПрибУчетКосвУчаст' )
        #IfVis  (XMLAdrI + '/РасчНал2.1.309.1/НалБазаИсчРуб'     )
        #IfVis  (XMLAdrI + '/РасчНал2.1.309.1/ИсчислНал'         )
        #IfVis  (XMLAdrI + '/РасчНал2.1.309.1/СумНал309.1'       )
        #IfVis  (XMLAdrI + '/РасчНал2.1.309.1/НалУплат'          )
      }

      if (   GetStrNull(XMLAdrI + '/РасчОперЦБ/Валюта'         )
          or GetStrNull(XMLAdrI + '/РасчОперЦБ/ДохВыбыт'       )
          or GetStrNull(XMLAdrI + '/РасчОперЦБ/ДохВыбЦБНеОбр'  )
          or GetStrNull(XMLAdrI + '/РасчОперЦБ/ДохФИНеОбр'     )
          or GetStrNull(XMLAdrI + '/РасчОперЦБ/РасхПриобр'     )
          or GetStrNull(XMLAdrI + '/РасчОперЦБ/РасхПриобрЦБ'   )
          or GetStrNull(XMLAdrI + '/РасчОперЦБ/РасхФИНеОбр'    )
          or GetStrNull(XMLAdrI + '/РасчОперЦБ/Прибыль'        )
          or GetStrNull(XMLAdrI + '/РасчОперЦБ/КурсВалют'      )
          or GetStrNull(XMLAdrI + '/РасчОперЦБ/ПрибУбЦелНал'   )
          or GetStrNull(XMLAdrI + '/РасчОперЦБ/ОбщКорПриб'     )
          or GetStrNull(XMLAdrI + '/РасчОперЦБ/КорПрибУбНалВал')
          or GetStrNull(XMLAdrI + '/РасчОперЦБ/КорПрибУбНалРуб') )
      then #SetVisF(XMLAdrI + '/РасчОперЦБ')
      else
      {
        #SetVisT(XMLAdrI + '/РасчОперЦБ'                  )
        #IfVis  (XMLAdrI + '/РасчОперЦБ/ДохЦБНеОбрМин'    )
        #IfVis  (XMLAdrI + '/РасчОперЦБ/ДохФИНеОбрМин'    )
        #IfVis  (XMLAdrI + '/РасчОперЦБ/РасхПриобрЦБМакс' )
        #IfVis  (XMLAdrI + '/РасчОперЦБ/РасхФИНеОбрМакс'  )
        #IfVis  (XMLAdrI + '/РасчОперЦБ/УбытУменНБ'       )
        #IfVis  (XMLAdrI + '/РасчОперЦБ/ПрибПодлУчетРуб'  )
        #IfVis  (XMLAdrI + '/РасчОперЦБ/ПрибДоляУчаст'    )
        #IfVis  (XMLAdrI + '/РасчОперЦБ/ПрибУчетКосвУчаст')
        #IfVis  (XMLAdrI + '/РасчОперЦБ/НалБазаИсчРуб'    )
      }

      CountJ := XMLMap.GetNodeCountByName(XMLAdrI + '/РасчУбытУмНБ');
      for (j := 0; j < CountJ; j++)
      {
        XMLAdrJ := XMLAdrI + '/РасчУбытУмНБ' + getIter(j);

        if (   GetStrNull(XMLAdrJ + '/НалБаза'      )
            or GetStrNull(XMLAdrJ + '/УбытУмНалБаза')
            or GetStrNull(XMLAdrJ + '/ОстУбытКонВс' ) )
        then #SetVisF(XMLAdrJ)
        else
        {
          #SetVisT(XMLAdrJ                    )
          #IfVis  (XMLAdrJ + '/КодОперРасч'   )
          #IfVis  (XMLAdrJ + '/ОстУбытНачВс'  )
          #IfVis  (XMLAdrJ + '/ОстУбыт3ФинГод')

          CountK := XMLMap.GetNodeCountByName(XMLAdrJ + '/ОстУбытНачПерГод');
          for (k := 0; k < CountK; k++)
          {
            XMLAdrK := XMLAdrJ + '/ОстУбытНачПерГод' + getIter(k);

            if (   GetStrNull(XMLAdrK + '/Год'    )
                or GetStrNull(XMLAdrK + '/Остаток') )
            then #SetVisF(XMLAdrK)
            else #SetVisT(XMLAdrK)
          }
        }
      }
    }
  }

  SetFldVis('Файл/Документ/Прибыль/РасчНалКИК', flI);
  // #endregion Файл/Документ/Прибыль/РасчНалКИК

  // #region Файл/Документ/Прибыль/ДохНеУч_РасхУч    ПРИЛОЖЕНИЕ 1 К НАЛОГОВОЙ ДЕКЛАРАЦИИ
  flI := False;

  CountI := XMLMap.GetNodeCountByName('Файл/Документ/Прибыль/ДохНеУч_РасхУч/ДохРасхКод');
  for (i := 0; i < CountI; i++)
  {
    XMLAdrI := 'Файл/Документ/Прибыль/ДохНеУч_РасхУч/ДохРасхКод' + getIter(i);

    if (    GetStrNull(XMLAdrI + '/КодВидДоход' )
        and GetStrNull(XMLAdrI + '/СумДоход'    )
        and GetStrNull(XMLAdrI + '/КодВидРасход')
        and GetStrNull(XMLAdrI + '/СумРасход'   ) )
    then #SetVisF(XMLAdrI)
    else
    {
      #SetVisT(XMLAdrI                  )   flI := True;
      #IfVis  (XMLAdrI + '/КодВидДоход' )
      #IfVis  (XMLAdrI + '/СумДоход'    )
      #IfVis  (XMLAdrI + '/КодВидРасход')
      #IfVis  (XMLAdrI + '/СумРасход'   )
    }
  }

  SetFldVis('Файл/Документ/Прибыль/ДохНеУч_РасхУч', flI);
  // #endregion Файл/Документ/Прибыль/ДохНеУч_РасхУч

  // #region Файл/Документ/Прибыль/СведДохФЛ         ПРИЛОЖЕНИЕ 2 К НАЛОГОВОЙ ДЕКЛАРАЦИИ
  CountI := XMLMap.GetNodeCountByName('Файл/Документ/Прибыль/СведДохФЛ');
  for (i := 0; i < CountI; i++)
  {
    XMLAdrI := 'Файл/Документ/Прибыль/СведДохФЛ' + getIter(i);

    if (   GetStrNull(XMLAdrI + '/НомерСправ'            )
        or GetStrNull(XMLAdrI + '/ДатаСправ'             )
        or GetStrNull(XMLAdrI + '/Тип'                   )
        or GetStrNull(XMLAdrI + '/ФЛПолучДох/СтатусНП'   )
        or GetStrNull(XMLAdrI + '/ФЛПолучДох/ДатаРожд'   )
        or GetStrNull(XMLAdrI + '/ФЛПолучДох/Гражд'      )
        or GetStrNull(XMLAdrI + '/ФЛПолучДох/КодВидДок'  )
        or GetStrNull(XMLAdrI + '/ФЛПолучДох/СерНомДок'  )
        or GetStrNull(XMLAdrI + '/ФЛПолучДох/ФИО/Фамилия')
        or GetStrNull(XMLAdrI + '/ФЛПолучДох/ФИО/Имя'    ) )
    then #SetVisF(XMLAdrI)
    else
    {
      #SetVisT(XMLAdrI                             )
      #IfVis  (XMLAdrI + '/ФЛПолучДох/ИННФЛ'       )
      #IfVis  (XMLAdrI + '/ФЛПолучДох/ФИО/Отчество')
      
      SetNotFldVis(XMLAdrI + '/ФЛПолучДох/ИННИно')  
      SetNotFldVis(XMLAdrI + '/ФЛПолучДох/АдрМЖРФ')
      SetNotFldVis(XMLAdrI + '/ФЛПолучДох/АдрМЖИно')

      // Элемент обязателен, если значение элемента <Тип> не равно 99
      if ( IsTip(XMLAdrI) )
      {
          #SetVisT(XMLAdrI + '/ДохНалПер'            )
          #IfVis  (XMLAdrI + '/ДохНалПер/СумВычОбщ'  )
          #IfVis  (XMLAdrI + '/ДохНалПер/НалУдерж'   )
          #IfVis  (XMLAdrI + '/ДохНалПер/НалУплач'   )
          #IfVis  (XMLAdrI + '/ДохНалПер/НалУдержЛиш')
          #IfVis  (XMLAdrI + '/ДохНалПер/НалНеУдерж' )
      }
      else
      {
        if (   GetStrNull(XMLAdrI + '/ДохНалПер/Ставка'   )
            or GetStrNull(XMLAdrI + '/ДохНалПер/СумДохОбщ')
            or GetStrNull(XMLAdrI + '/ДохНалПер/НалБаза'  )
            or GetStrNull(XMLAdrI + '/ДохНалПер/НалИсчисл') )
        then #SetVisF(XMLAdrI + '/ДохНалПер')
        else
        {
          #SetVisT(XMLAdrI + '/ДохНалПер'            )
          #IfVis  (XMLAdrI + '/ДохНалПер/СумВычОбщ'  )
          #IfVis  (XMLAdrI + '/ДохНалПер/НалУдерж'   )
          #IfVis  (XMLAdrI + '/ДохНалПер/НалУплач'   )
          #IfVis  (XMLAdrI + '/ДохНалПер/НалУдержЛиш')
          #IfVis  (XMLAdrI + '/ДохНалПер/НалНеУдерж' )
        }
      }

      // #region Файл/Документ/Прибыль/СведДохФЛ/СпрДохФЛ/СумДох
      flJ := False;

      CountJ := XMLMap.GetNodeCountByName(XMLAdrI + '/СпрДохФЛ/СумДох');
      for (j := 0; j < CountJ; j++)
      {
        XMLAdrJ := XMLAdrI + '/СпрДохФЛ/СумДох' + getIter(j);

        if (   GetStrNull(XMLAdrJ + '/КодДоход')
            or GetStrNull(XMLAdrJ + '/СумДоход') )
        then #SetVisF(XMLAdrJ)
        else
        {
          #SetVisT(XMLAdrJ)   flJ := True;

          CountK := XMLMap.GetNodeCountByName(XMLAdrJ + '/СумВыч');
          for (k := 0; k < CountK; k++)
          {
            XMLAdrK := XMLAdrJ + '/СумВыч' + getIter(k);

            if (   GetStrNull(XMLAdrK + '/КодВычет')
                or GetStrNull(XMLAdrK + '/СумВычет') )
            then #SetVisF(XMLAdrK)
            else #SetVisT(XMLAdrK)
          }
        }
      }

      SetFldVis(XMLAdrI + '/СпрДохФЛ', flJ);
      // #endregion Файл/Документ/Прибыль/СведДохФЛ/СпрДохФЛ/СумДох

      // #region Файл/Документ/Прибыль/СведДохФЛ/НалВычСтанд/СумВыч
      flJ := False;

      CountJ := XMLMap.GetNodeCountByName(XMLAdrI + '/НалВычСтанд/СумВыч');
      for (j := 0; j < CountJ; j++)
      {
        XMLAdrJ := XMLAdrI + '/НалВычСтанд/СумВыч' + getIter(j);

        if (   GetStrNull(XMLAdrJ + '/КодВычет')
            or GetStrNull(XMLAdrJ + '/СумВычет') )
        then   #SetVisF(XMLAdrJ)
        else { #SetVisT(XMLAdrJ)   flJ := True; }
      }

      SetFldVis(XMLAdrI + '/НалВычСтанд', flJ);
      // #endregion Файл/Документ/Прибыль/СведДохФЛ/НалВычСтанд/СумВыч
    }
  } // #endregion Файл/Документ/Прибыль/СведДохФЛ

  // #region Приложение 5 к Листу 02. Версия 1 или версия 2

  if (GetPatVal('&СобсОрг[Рез:КПП]') = GetStrVal('Файл/Документ/СвНП/НПЮЛ/КПП'))
  {
    // #region Файл/Документ/Прибыль/РаспрНалСубРФ        ЛИСТ 02. ПРИЛОЖЕНИЕ 5 (V.2)

    CountI := XMLMap.GetNodeCountByName('Файл/Документ/Прибыль/РаспрНалСубРФ');
    for (i := 0; i < CountI; i++)
    {
      XMLAdrI := 'Файл/Документ/Прибыль/РаспрНалСубРФ' + getIter(i);

      #SetVisF(XMLAdrI)
    }

    // #endregion Файл/Документ/Прибыль/РаспрНалСубРФ        ЛИСТ 02. ПРИЛОЖЕНИЕ 5 (V.2)
  }
  else
  {
    // #region Файл/Документ/Прибыль/НалПУ/НалПУПроц    РАЗДЕЛ 1.3

    CountI := XMLMap.GetNodeCountByName('Файл/Документ/Прибыль/НалПУ/НалПУПроц');
    for (i := 0; i < CountI; i++)
    {
      XMLAdrI := 'Файл/Документ/Прибыль/НалПУ/НалПУПроц' + getIter(i);

      #SetVisF(XMLAdrI)
    }

    // #endregion Файл/Документ/Прибыль/НалПУ/НалПУПроц

    // #region Файл/Документ/Прибыль/РасчНал            ЛИСТ 02

    CountI := XMLMap.GetNodeCountByName('Файл/Документ/Прибыль/РасчНал');
    for (i := 0; i < CountI; i++)
    {
      XMLAdrI := 'Файл/Документ/Прибыль/РасчНал' + getIter(i);

      #SetVisF(XMLAdrI)
    }

    // #endregion Файл/Документ/Прибыль/РасчНал

    // #region Файл/Документ/Прибыль/НалУдНА            ЛИСТ 03

    #SetVisF('Файл/Документ/Прибыль/НалУдНА')

    // #endregion Файл/Документ/Прибыль/НалУдНА

    // #region Файл/Документ/Прибыль/НалДохСтав         ЛИСТ 04

    CountI := XMLMap.GetNodeCountByName('Файл/Документ/Прибыль/НалДохСтав');
    for (i := 0; i < CountI; i++)
    {
      XMLAdrI := 'Файл/Документ/Прибыль/НалДохСтав' + getIter(i);

      #SetVisF(XMLAdrI)
    }

    // #endregion Файл/Документ/Прибыль/НалДохСтав

    // #region Файл/Документ/Прибыль/НалБазОпОсобН      ЛИСТ 05

    CountI := XMLMap.GetNodeCountByName('Файл/Документ/Прибыль/НалБазОпОсобН');
    for (i := 0; i < CountI; i++)
    {
      XMLAdrI := 'Файл/Документ/Прибыль/НалБазОпОсобН' + getIter(i);

      #SetVisF(XMLAdrI)
    }

    // #endregion Файл/Документ/Прибыль/НалБазОпОсобН

    // #region Файл/Документ/Прибыль/ДохРасНалБазаНПФ   ЛИСТ 06

    #SetVisF('Файл/Документ/Прибыль/ДохРасНалБазаНПФ')

    // #endregion Файл/Документ/Прибыль/ДохРасНалБазаНПФ

    // #region Файл/Документ/Прибыль/ЦелИспИмущ         ЛИСТ 07

    #SetVisF('Файл/Документ/Прибыль/ЦелИспИмущ')

    // #endregion Файл/Документ/Прибыль/ЦелИспИмущ

    // #region Файл/Документ/Прибыль/ДохРасхКор         ЛИСТ 08

    CountI := XMLMap.GetNodeCountByName('Файл/Документ/Прибыль/ДохРасхКор');
    for (i := 0; i < CountI; i++)
    {
      XMLAdrI := 'Файл/Документ/Прибыль/ДохРасхКор' + getIter(i);

      #SetVisF(XMLAdrI)
    }

    // #endregion Файл/Документ/Прибыль/ДохРасхКор

    // #region Файл/Документ/Прибыль/РасчНалКИК         ЛИСТ 09

    #SetVisF('Файл/Документ/Прибыль/РасчНалКИК')

    CountI := XMLMap.GetNodeCountByName('Файл/Документ/Прибыль/РасчНалКИК/СведКИК');
    for (i := 0; i < CountI; i++)
    {
      XMLAdrI := 'Файл/Документ/Прибыль/РасчНалКИК/СведКИК' + getIter(i);

      #SetVisF(XMLAdrI)
    }

    // #endregion Файл/Документ/Прибыль/РасчНалКИК

    // #region Файл/Документ/Прибыль/ДохНеУч_РасхУч     ПРИЛОЖЕНИЕ 1 К НАЛОГОВОЙ ДЕКЛАРАЦИИ

    #SetVisF('Файл/Документ/Прибыль/ДохНеУч_РасхУч')

    // #endregion Файл/Документ/Прибыль/ДохНеУч_РасхУч

    // #region Файл/Документ/Прибыль/СведДохФЛ          ПРИЛОЖЕНИЕ 2 К НАЛОГОВОЙ ДЕКЛАРАЦИИ

    CountI := XMLMap.GetNodeCountByName('Файл/Документ/Прибыль/СведДохФЛ');
    for (i := 0; i < CountI; i++)
    {
      XMLAdrI := 'Файл/Документ/Прибыль/СведДохФЛ' + getIter(i);

      #SetVisF(XMLAdrI)
    }

    // #endregion Файл/Документ/Прибыль/СведДохФЛ
  }

  // #endregion Приложение 5 к Листу 02. Версия 1 или версия 2
@end.
//#endregion On_Visable ДЕЙСТВИЯ ВЫПОЛНЯЕМЫЕ ПРИ УСТАНОВКЕ ВИДИМОСТИ ПОЛЕЙ
//************************************************************************************************************


//============================================================================================================
//#region On_Check ДЕЙСТВИЯ ВЫПОЛНЯЕМЫЕ ПРИ ПРОВЕРКЕ ПОЛЕЙ
//------------------------------------------------------------------------------------------------------------
@Script On_Check : boolean;
  //==========================================================================================================
  //#region СЕРВИС On_Check
  //----------------------------------------------------------------------------------------------------------
  #include AllTaxObj.Vih

  // #region ПРОВЕРКИ

  // #region Налоговый (отчетный) период
  function IsValidPeriod(_Val, _PoMestu: string; var _Mes: string) : boolean;
  { // Период
    Result := False;

    _Mes := 'Возможные значения: 13, 14, 15, 16, 21, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 50, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67 или 68. Формат: 2 символа';
    Result := CheckError.isRegExpr('^(13|14|15|16|21|31|33|34|35|36|37|38|39|40|41|42|43|44|45|46|50|57|58|59|60|61|62|63|64|65|66|67|68)$', _Val);

    if (not Result)
      case _PoMestu of
        '229'
      , '234' : {
                  _Mes := 'При значении <ПоМесту> = 229 и 234 элемент <Период> может принимать только значение 34 или 50';
                  Result := CheckError.isRegExpr('^(34|50)$', _Val);
                }
      end;
  };
  // #endregion Налоговый (отчетный) период
  //----------------------------------------------------------------------------------------------------------
  // #region Код места, по которому представляется документ
  function IsValidPoMestu(_Val, _KPP: string; var _Mes: string) : boolean;
  { // ПоМесту
    _Mes := 'Возможные значения: 213, 214, 215, 216, 218, 220, 223, 225, 226, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 246 или 249. Формат: 3 символа';

    Result := False;
    Result := CheckError.isRegExpr('^(213|214|215|216|218|220|223|225|226|228|229|230|231|234|235|236|237|238|239|246|249|)$', _Val);

    if (not Result)
    {
      _KPP := SubStr(_KPP, 5, 2);

      /*
          Значение может зависеть от 5 и 6 знакомест в значении элемента <КПП> (из таблицы 4.4):
            - код 213 только при 50,
            - код 218 только при 4U (допускается и при 50 или 01).
      */

      case _Val of
        '213' : {
                  _Mes := 'Значение поля "Предоставляется в НО (код)" = 213 возможно только при 5 и 6 символах значения поля "КПП" = 50';
                  Result := (_KPP <> '50');
                }
        '218' : {
                  _Mes := 'Значение поля "Предоставляется в НО (код)" = 218 возможно только при 5 и 6 символах значения поля "КПП" = 4U (допускается и при 50 или 01)';
                  Result := ((_KPP <> '4U') and (_KPP <> '50') and (_KPP <> '01'));
                }
      end;
    }
  };
  // #endregion Код места, по которому представляется документ
  //----------------------------------------------------------------------------------------------------------
  // #region Квартал, на который исчисляются авансовые платежи (код)
  function IsValidKvIschislAv(_Val: string; var _Mes: string) : boolean;
  { // КвИсчислАв
    Result := False;

    if (     _Val                              <> ''
         and GetStrVal('Файл/Документ/Период') <> '15'
         and GetStrVal('Файл/Документ/Период') <> '33' )
    {
      _Mes := 'Поле "Квартал, на который исч. ежемес. ав. плат." заполняется только в декларациях за 9 месяцев';
      Result := CheckError.isRegExpr('^(21|24)$', _Val);
    }
    else
    {
      _Mes := 'Возможные значения: 21 или 24. Формат: 2 символа';
      Result := CheckError.isRegExpr('^(21|24)$', _Val);
    }
  };
  // #endregion Квартал, на который исчисляются авансовые платежи (код)
  //----------------------------------------------------------------------------------------------------------
  // #region КБК Раздел 1.1 #1
  function IsValidKBK_n1(_Val: string; var _Mes: string) : boolean;
  { // КБК
    _Mes := 'Возможна ошибка при выборе КБК, убедитесь в правильности выбранного КБК. Предполагаемые значения: 18210101011011000110 или 18210101013011000110';
    Result := False;
    Result := CheckError.isRegExpr('^(18210101011011000110|18210101013011000110)$', _Val);
  };
  // #endregion КБК Раздел 1.1 #1
  //----------------------------------------------------------------------------------------------------------
  // #region КБК Раздел 1.1 #2
  function IsValidKBK_n2(_Val: string; var _Mes: string) : boolean;
  { // КБК
    _Mes := 'Возможна ошибка при выборе КБК, убедитесь в правильности выбранного КБК. Предполагаемые значения: 18210101012021000110';
    Result := False;
    Result := CheckError.isRegExpr('^(18210101012021000110)$', _Val);
  };
  // #endregion КБК Раздел 1.1 #2
  //----------------------------------------------------------------------------------------------------------
  // #region Тип предмета сделки
  function IsValidTipPredSd(_Val: string; var _Mes: string) : boolean;
  { // ТипПредСд
    _Mes := 'Возможные значения: 1, 2 или 3. Формат: 1 символ';
    Result := False;
    Result := CheckError.isRegExpr('^(1|2|3)$', _Val);
  };
  // #endregion Тип предмета сделки
  //----------------------------------------------------------------------------------------------------------
  // #region Вид платежа (код)
  function IsValidVidPlat(_Val: string; var _Mes: string) : boolean;
  { // ВидПлат
    _Mes := 'Возможные значения: 1, 2, 3, 4, 5, 6 или 7. Формат: 1 символ';
    Result := False;
    Result := CheckError.isRegExpr('^(1|2|3|4|5|6|7)$', _Val);
  };
  // #endregion Вид платежа (код)
  //----------------------------------------------------------------------------------------------------------
  // #region Признак налогоплательщика (код) #1
  function IsValidTipNP_n1(_Val: string; var _Mes: string) : boolean;
  { // ТипНП
    _Mes := 'Возможные значения: 01, 02, 03, 04, 06, 07, 08, 09, 10, 11, 12, 13, или 14. Формат: 2 символа';
    Result := False;
    Result := CheckError.isRegExpr('^(01|02|03|04|06|07|08|09|10|11|12|13|14)$', _Val);
  };
  // #endregion Признак налогоплательщика (код) #1
  //----------------------------------------------------------------------------------------------------------
  // #region Признак налогоплательщика (код) #2
  function IsValidTipNP_n2(_Val: string; var _Mes: string) : boolean;
  { // ТипНП
    _Mes := 'Возможные значения: 01, 03, 04, 05, 06, 07, 08 или 14. Формат: 2 символа';
    Result := False;
    Result := CheckError.isRegExpr('^(01|03|04|05|06|07|08|14)$', _Val);
  };
  // #endregion Признак налогоплательщика (код) #2
  //----------------------------------------------------------------------------------------------------------
  // #region Признак налогоплательщика (код) #3
  function IsValidTipNP_n3(_Val: string; var _Mes: string) : boolean;
  { // ТипНП
    _Mes := 'Возможные значения: 01, 02, 03, 06, 07, 08, 09, 10, 11, 12, 13, или 14. Формат: 2 символа';
    Result := False;
    Result := CheckError.isRegExpr('^(01|02|03|06|07|08|09|10|11|12|13|14)$', _Val);
  };
  // #endregion Признак налогоплательщика (код) #3
  //----------------------------------------------------------------------------------------------------------
  // #region Статус налогоплательщика
  function IsValidStatusNP(_Val: string; var _Mes: string) : boolean;
  { // СтатусНП
    _Mes := 'Возможные значения: 1, 2, 3, 4, 5 или 6. Формат: 1 символ';
    Result := False;
    Result := CheckError.isRegExpr('^(1|2|3|4|5|6)$', _Val);
  };
  // #endregion Статус налогоплательщика
  //----------------------------------------------------------------------------------------------------------
  // #region Метод начисления амортизации, отраженный в учетной политике (код)
  function IsValidMetodNachAmort(_Val: string; var _Mes: string) : boolean;
  { // МетодНачАморт
    _Mes := 'Возможные значения: 1 или 2. Формат: 1 символ';
    Result := False;
    Result := CheckError.isRegExpr('^(1|2)$', _Val);
  };
  // #endregion Метод начисления амортизации, отраженный в учетной политике (код)
  //----------------------------------------------------------------------------------------------------------
  // #region Расчет составлен (код)
  function IsValidObRasch(_Val: string; var _Mes: string) : boolean;
  { // ОбРасч
    _Mes := 'Возможные значения: 1, 2, 3 или 4. Формат: 1 символ';
    Result := False;
    Result := CheckError.isRegExpr('^(1|2|3|4)$', _Val);
  };
  // #endregion Расчет составлен (код)
  //----------------------------------------------------------------------------------------------------------
  // #region Отметка о возложении обязанности по уплате налога на обособленное подразделение
  function IsValidObyzUplNalOP(_Val: string; var _Mes: string) : boolean;
  { // ОбязУплНалОП
    _Mes := 'Возможные значения: 0 или 1. Формат: 1 символ';
    Result := False;
    Result := CheckError.isRegExpr('^(0|1)$', _Val);
  };
  // #endregion Отметка о возложении обязанности по уплате налога на обособленное подразделение
  //----------------------------------------------------------------------------------------------------------
  // #region Категория налогового агента
  function IsValidKategorNA(_Val: string; var _Mes: string) : boolean;
  { // КатегорНА
    _Mes := 'Возможные значения: 1 или 2. Формат: 1 символ';
    Result := False;
    Result := CheckError.isRegExpr('^(1|2)$', _Val);
  };
  // #endregion Категория налогового агента
  //----------------------------------------------------------------------------------------------------------
  // #region Вид дивидендов
  function IsValidVidDiv(_Val: string; var _Mes: string) : boolean;
  { // ВидДив
    _Mes := 'Возможные значения: 1 или 2. Формат: 1 символ';
    Result := False;
    Result := CheckError.isRegExpr('^(1|2)$', _Val);
  };
  // #endregion Вид дивидендов
  //----------------------------------------------------------------------------------------------------------
  // #region Налоговый (отчетный) период (код)
  function IsValidNalPer(_Val: string; var _Mes: string) : boolean;
  { // НалПер
    _Mes := 'Возможные значения: 21, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46 или 50. Формат: 2 символа';
    Result := False;
    Result := CheckError.isRegExpr('^(21|31|33|34|35|36|37|38|39|40|41|42|43|44|45|46|50)$', _Val);
  };
  // #endregion Налоговый (отчетный) период (код)
  //----------------------------------------------------------------------------------------------------------
  // #region Тип
  function IsValidTip(_Val: string; var _Mes: string) : boolean;
  { // Тип
    _Mes := 'Возможные значения: 00, 01 - 98 или 99. Формат: 2 символа';
    Result := False;
    Result := CheckError.isRegExpr('^([0-9]{2})$', _Val);
  };
  // #endregion Тип
  //----------------------------------------------------------------------------------------------------------
  // #region Признак принадлежности (А)
  function IsValidPrPrinadlA(_Val: string; var _Mes: string) : boolean;
  { // ПрПринадл
    _Mes := 'Возможные значения: А. Формат: 1 символ';
    Result := False;
    Result := CheckError.isRegExpr('^(А)$', _Val);
  };
  // #endregion Признак принадлежности (А)
  //----------------------------------------------------------------------------------------------------------
  // #region Признак принадлежности (Б)
  function IsValidPrPrinadlB(_Val: string; var _Mes: string) : boolean;
  { // ПрПринадл
    _Mes := 'Возможные значения: Б. Формат: 1 символ';
    Result := False;
    Result := CheckError.isRegExpr('^(Б)$', _Val);
  };
  // #endregion Признак принадлежности (Б)
  //----------------------------------------------------------------------------------------------------------
  // #region Вид дохода #1
  function IsValidVidDohod_n1(_Val: string; var _Mes: string) : boolean;
  { // ВидДоход
    _Mes := 'Возможные значения: 1, 2 или 3. Формат: 1 символ';
    Result := False;
    Result := CheckError.isRegExpr('^(1|2|3)$', _Val);
  };
  // #endregion Вид дохода #1
  //----------------------------------------------------------------------------------------------------------
  // #region Вид дохода #2
  function IsValidVidDohod_n2(_Val: string; var _Mes: string) : boolean;
  { // ВидДоход
    _Mes := 'Возможные значения: 1, 2, 3, 4, 5, 6, 7 или 8. Формат: 1 символ';
    Result := False;
    Result := CheckError.isRegExpr('^(1|2|3|4|5|6|7|8)$', _Val);
  };
  // #endregion Вид дохода #2
  //----------------------------------------------------------------------------------------------------------
  // #region Вид операции
  function IsValidVidOper(_Val: string; var _Mes: string) : boolean;
  { // ВидОпер
    _Mes := 'Возможные значения: 1, 2 или 3. Формат: 1 символ';
    Result := False;
    Result := CheckError.isRegExpr('^(1|2|3)$', _Val);
  };
  // #endregion Вид операции
  //----------------------------------------------------------------------------------------------------------
  // #region Вид корректировки
  function IsValidVidKor(_Val: string; var _Mes: string) : boolean;
  { // ВидКор
    _Mes := 'Возможные значения: 1, 2, 3, 4 или 5. Формат: 1 символ';
    Result := False;
    Result := CheckError.isRegExpr('^(1|2|3|4|5)$', _Val);
  };
  // #endregion Вид корректировки
  //----------------------------------------------------------------------------------------------------------
  // #region Признак участника консолидированной группы налогоплательщиков
  function IsValidPrUchastKGN(_Val: string; var _Mes: string) : boolean;
  { // ВидКор
    _Mes := 'Возможные значения: 0 или 1. Формат: 1 символ';
    Result := False;
    Result := CheckError.isRegExpr('^(0|1)$', _Val);
  };
  // #endregion Признак участника консолидированной группы налогоплательщиков
  //----------------------------------------------------------------------------------------------------------
  // #region Признак (уменьшение, увеличение)
  function IsValidPriznak(_Val: string; var _Mes: string) : boolean;
  { // Признак
    _Mes := 'Возможные значения: 0 или 1. Формат: 1 символ';
    Result := False;
    Result := CheckError.isRegExpr('^(0|1)$', _Val);
  };
  // #endregion Признак (уменьшение, увеличение)
  //----------------------------------------------------------------------------------------------------------
  // #region Организационная форма (код)
  function IsValidKodOrgForm(_Val: string; var _Mes: string) : boolean;
  { // КодОргФорм
    _Mes := 'Возможные значения: 1, 2, 3, 4 или 5. Формат: 1 символ';
    Result := False;
    Result := CheckError.isRegExpr('^(1|2|3|4|5)$', _Val);
  };
  // #endregion Организационная форма (код)
  //----------------------------------------------------------------------------------------------------------
  // #region Признак по коду 1001 - 1009
  function IsValidPrPoKodu(_Val: string; var _Mes: string) : boolean;
  { // Пр1001 - Пр1009
    _Mes := 'Возможные значения: 0 или 1. Формат: 1 символ';
    Result := False;
    Result := CheckError.isRegExpr('^(0|1)$', _Val);
  };
  // #endregion Признак по коду 1001 - 1009
  //----------------------------------------------------------------------------------------------------------
  // #region Основание для применения порядка расчета прибыли
  function IsValidOsnRasPrib(_Val: string; var _Mes: string) : boolean;
  { // ОснРасПриб
    _Mes := 'Возможные значения: 1 или 2. Формат: 1 символ';
    Result := False;
    Result := CheckError.isRegExpr('^(1|2)$', _Val);
  };
  // #endregion Основание для применения порядка расчета прибыли
  //----------------------------------------------------------------------------------------------------------
  // #region Операции, по которым производится расчет (код)
  function IsValidKodOperRasch(_Val: string; var _Mes: string) : boolean;
  { // КодОперРасч
    _Mes := 'Возможные значения: 1 или 2. Формат: 1 символ';
    Result := False;
    Result := CheckError.isRegExpr('^(1|2)$', _Val);
  };
  // #endregion Операции, по которым производится расчет (код)
  //----------------------------------------------------------------------------------------------------------
  // #region Код расходов
  function IsValidKodRasch(_Val: string; var _Mes: string) : boolean;
  { // КодРасх
    _Mes := 'Возможные значения: 01, 02, 03, 04, 05 или 06. Формат: 2 символ';
    Result := False;
    Result := CheckError.isRegExpr('^(01|02|03|04|05|06)$', _Val);
  };
  // #endregion Код расходов
  //----------------------------------------------------------------------------------------------------------
  // #region Номер контролируемой иностранной компании
  function IsValidNomerKIK(_Val: string; var _Mes: string) : boolean;
  { // НомерКИК
    _Mes := 'Возможные значения: ИО-NNNNN или ИС-NNNNN, где NNNNN - пятизначный порядковый номер. Формат: 8 символов';
    Result := False;
    Result :=    CheckError.isRegExpr('^(ИО-[0-9]{5})$', _Val)
              or CheckError.isRegExpr('^(ИС-[0-9]{5})$', _Val);
  };
  // #endregion Номер контролируемой иностранной компании
  //----------------------------------------------------------------------------------------------------------
  // #region Код вида поступлений
  function IsValidKodVidPost(_Val: string; var _Mes: string) : boolean;
  { // КодВидПост
    _Mes := 'Возможные значения: коды из Приложения 3 к Порядку заполнения. Формат: 3 символа';
    Result := False;
    Result :=    CheckError.isRegExpr('^(010|020|030|040|050|060|070|080|100|110|111|112|113|114|120|130|140|141|150|160)$', _Val)
              or CheckError.isRegExpr('^(170|171|172|173|180|190|220|230|240|250|260|270|271|280|281|282|290|300|310|320)$', _Val)
              or CheckError.isRegExpr('^(321|322|323|324|325|326|327|328|329|340|350|360|370|380|390|400|410|430|440|450)$', _Val);
  };
  // #endregion Код вида поступлений
  //----------------------------------------------------------------------------------------------------------
  // #region Код основания отнесения сделки к контролируемой в соответствии со ст. 105.14 НК РФ
  function IsValidOsnSdelKontr(_Val: string; var _Mes: string) : boolean;
  { // ОснСделКонтр
    _Mes := 'Возможные значения: коды из Приложения 6 к Порядку заполнения. Формат: 3 символа';
    Result := False;
    Result := CheckError.isRegExpr('^(121|122|123|124|131|132|133|134|135|136|137|138)$', _Val);
  };
  // #endregion Код основания отнесения сделки к контролируемой в соответствии со ст. 105.14 НК РФ
  //----------------------------------------------------------------------------------------------------------
  // #region Коды доходов, не учитываемых при определении НБ; расходов, учитываемых для целей налогообложения отдельными категориями НП
  function IsValidKodDohRash(_Val: string; var _Mes: string) : boolean;
  {
    _Mes := 'Возможные значения: коды из Приложения 4 к Порядку заполнения. Формат: 3 символа';
    Result := False;
    Result :=    CheckError.isRegExpr('^(510|520|530|540|550|560|561|562|563|570|585|588|589|590|600|650|660|661)$', _Val)
              or CheckError.isRegExpr('^(669|670|671|672|673|674|675|676|677|678|679|680|685|690|700|710|720|730|760)$', _Val)
              or CheckError.isRegExpr('^(770|780|790|800|810|811|812|813|820|830|840|880|890|900|910|930|940|950|951)$', _Val);
  };
  // #endregion Коды доходов, не учитываемых при определении НБ; расходов, учитываемых для целей налогообложения отдельными категориями НП


  // #region НалПУАв - Элемент отсутствует при <ПоМесту> = 231 | 229 | 235 и обязателен при других значениях элемента <ПоМесту>
  function IsPoMestu_231_229_235 : boolean;
  {
    var val : string; val := GetStrVal('Файл/Документ/ПоМесту');
    Result := (    (val = '231')
                or (val = '229')
                or (val = '235') );
  }
  // #endregion НалПУАв - Элемент отсутствует при <ПоМесту> = 231 | 229 | 235 и обязателен при других значениях элемента <ПоМесту>

  // #region НалПУМес - Элемент отсутствует при выполнении хотя бы одного из условий
  function IsPoMestu_231_Period_34_68 : boolean;
  { /*
    НалПУМес - Элемент отсутствует при выполнении хотя бы одного из следующих условий:
      - <ПоМесту> = 231 (из таблицы 4.2)
      - <Период> = 34 | 46 | 50 | 68
    и необязателен (может присутствовать или отсутствовать) при одновременном невыполнении обоих условий
    */

    var val : string; val := GetStrVal('Файл/Документ/ПоМесту');
    Result := (val = '231');

    if (not Result)
    {
      val := GetStrVal('Файл/Документ/Период');
      Result := (    (val = '34')
                  or (val = '46')
                  or (val = '50')
                  or (val = '68') );
    }
  }
  // #endregion НалПУМес - Элемент отсутствует при выполнении хотя бы одного из условий

  // #region НалПУПроц - Элемент обязателен при <ПоМесту> = 231
  function IsPoMestu_231 : boolean;
  { /*
      НалПУПроц - Элемент обязателен при <ПоМесту> = 231
      и необязателен (может присутствовать или отсутствовать) при других значениях элемента <ПоМесту>
    */

    var val : string; val := GetStrVal('Файл/Документ/ПоМесту');
    Result := (val = '231');
  }
  // #endregion НалПУМес - Элемент отсутствует при выполнении хотя бы одного из условий


  // #region Лист 02 или Приложение 5 к Листу 02
  function IsRaschNal : boolean;
  { // РасчНал ИЛИ РаспрНалСубРФ
    var CountI, i : LongInt;
    var flRaschNal, flRasprNalSubRF : boolean; flRaschNal := flRasprNalSubRF := False;

    CountI := XMLMAP.GetNodeCountByName('Файл/Документ/Прибыль/РасчНал');
    for (i := 0; i < CountI; i++)
    {
      if not GetFldVis('Файл/Документ/Прибыль/РасчНал' + getIter(i)) Continue;
      flRaschNal := True;
      Break;
    }

    CountI := XMLMAP.GetNodeCountByName('Файл/Документ/Прибыль/РаспрНалСубРФ');
    for (i := 0; i < CountI; i++)
    {
      if not GetFldVis('Файл/Документ/Прибыль/РаспрНалСубРФ' + getIter(i)) Continue;
      flRasprNalSubRF := True;
      Break;
    }

    if (flRaschNal and flRasprNalSubRF)
      MessageErrorStop_ALG (
        ''
      , 'Лист 02 и Приложение 5 к Листу 02'
      , 'Должен быть заполнен либо Лист 02 либо Приложение 5 к Листу 02'
      );
  }
  // #endregion Лист 02 или Приложение 5 к Листу 02

  // #region Лист 08. ЮЛ или ФЛ
  function IsKontragent (_XMLAdr: string) : boolean;
  { // Орг_Контрагент ИЛИ ФЛ_Контрагент
    if (     GetFldVis(_XMLAdr + '/Орг_Контрагент')
         and GetFldVis(_XMLAdr + '/ФЛ_Контрагент' ) )
    then
      MessageErrorStop_ALG (
        _XMLAdr
      , 'Информация о контрагенте'
      , 'Должна быть заполнена либо информация о ФЛ либо о ЮЛ'
      );
  }
  // #endregion Лист 08. ЮЛ или ФЛ

  // #endregion ПРОВЕРКИ

  // #region FUNCTION

  // #region Период = Год

  function NalPer_God : boolean;
  begin
    var val : Integer;
    val := GetIntVal('Файл/Документ/Период');

    Result := False;
    Result := ((val = 16) or (val = 34) or (val = 46) or (val = 68));
  end;

  // #endregion Период = Год

  // #region Период = 1кв или Год

  function NalPer_1kv_God : boolean;
  begin
    var val : Integer;
    val := GetIntVal('Файл/Документ/Период');

    Result := False;
    Result := ((val = 13) or (val = 21) or (val = 16) or (val = 34) or (val = 46) or (val = 68));
  end;

  // #endregion Период = Год

  // #region Период = 9 или 11 месяцев

  function NalPer_9_11 : boolean;
  begin
    var val : Integer;
    val := GetIntVal('Файл/Документ/Период');

    Result := False;
    Result := ((val = 15) or (val = 33) or (val = 43) or (val = 45) or (val = 65) or (val = 67));
  end;

  // #endregion Период = 9 или 11 месяцев

  //----------------------------------------------------------------------------------------------------------

  function IsStr_2 (_Val: string; var _Mes: string) : boolean;  { Result := IsValidLenStr(_Val,  2,  2, _Mes); }
  function IsStr_3 (_Val: string; var _Mes: string) : boolean;  { Result := IsValidLenStr(_Val,  3,  3, _Mes); }
  function IsStr_5 (_Val: string; var _Mes: string) : boolean;  { Result := IsValidLenStr(_Val,  5,  5, _Mes); }
  function IsStr_6 (_Val: string; var _Mes: string) : boolean;  { Result := IsValidLenStr(_Val,  6,  6, _Mes); }
  function IsStr_10(_Val: string; var _Mes: string) : boolean;  { Result := IsValidLenStr(_Val, 10, 10, _Mes); }
  function IsStr_30(_Val: string; var _Mes: string) : boolean;  { Result := IsValidLenStr(_Val, 30, 30, _Mes); }

  function IsStr_1_5   (_Val: string; var _Mes: string) : boolean;  { Result := IsValidLenStr(_Val, 1,    5, _Mes); }
  function IsStr_1_50  (_Val: string; var _Mes: string) : boolean;  { Result := IsValidLenStr(_Val, 1,   50, _Mes); }
  function IsStr_1_20  (_Val: string; var _Mes: string) : boolean;  { Result := IsValidLenStr(_Val, 1,   20, _Mes); }
  function IsStr_1_21  (_Val: string; var _Mes: string) : boolean;  { Result := IsValidLenStr(_Val, 1,   21, _Mes); }
  function IsStr_1_25  (_Val: string; var _Mes: string) : boolean;  { Result := IsValidLenStr(_Val, 1,   25, _Mes); }
  function IsStr_1_40  (_Val: string; var _Mes: string) : boolean;  { Result := IsValidLenStr(_Val, 1,   40, _Mes); }
  function IsStr_1_100 (_Val: string; var _Mes: string) : boolean;  { Result := IsValidLenStr(_Val, 1,  100, _Mes); }
  function IsStr_1_128 (_Val: string; var _Mes: string) : boolean;  { Result := IsValidLenStr(_Val, 1,  128, _Mes); }
  function IsStr_1_254 (_Val: string; var _Mes: string) : boolean;  { Result := IsValidLenStr(_Val, 1,  254, _Mes); }
  function IsStr_1_255 (_Val: string; var _Mes: string) : boolean;  { Result := IsValidLenStr(_Val, 1,  255, _Mes); }
  function IsStr_1_500 (_Val: string; var _Mes: string) : boolean;  { Result := IsValidLenStr(_Val, 1,  500, _Mes); }
  function IsStr_1_1000(_Val: string; var _Mes: string) : boolean;  { Result := IsValidLenStr(_Val, 1, 1000, _Mes); }
  function IsStr_2_8   (_Val: string; var _Mes: string) : boolean;  { Result := IsValidLenStr(_Val, 2,    8, _Mes); }
  function IsStr_2_12  (_Val: string; var _Mes: string) : boolean;  { Result := IsValidLenStr(_Val, 2,   12, _Mes); }

  function IsInt_1_2 (_Val: string; var _Mes: string) : boolean;  { Result := IsValidLenNumber(_Val, 1,  2, _Mes, FALSE); }
  function IsInt_1_3 (_Val: string; var _Mes: string) : boolean;  { Result := IsValidLenNumber(_Val, 1,  3, _Mes, FALSE); }
  function IsInt_1_4 (_Val: string; var _Mes: string) : boolean;  { Result := IsValidLenNumber(_Val, 1,  4, _Mes, FALSE); }
  function IsInt_1_10(_Val: string; var _Mes: string) : boolean;  { Result := IsValidLenNumber(_Val, 1, 10, _Mes, FALSE); }
  function IsInt_1_15(_Val: string; var _Mes: string) : boolean;  { Result := IsValidLenNumber(_Val, 1, 15, _Mes, FALSE); }

  function IsInt_1_15_Min(_Val: string; _Min : boolean; var _Mes: string) : boolean;  { Result := IsValidLenNumber(_Val, 1, 15, _Mes, _Min); }

  function IsDbl_2_2 (_Val: string; var _Mes: string) : boolean;  { Result := IsValidDecimal(_Val,  2,  2, _Mes, FALSE); }
  function IsDbl_2_3 (_Val: string; var _Mes: string) : boolean;  { Result := IsValidDecimal(_Val,  2,  3, _Mes, FALSE); }
  function IsDbl_2_8 (_Val: string; var _Mes: string) : boolean;  { Result := IsValidDecimal(_Val,  2,  8, _Mes, FALSE); }
  function IsDbl_2_12(_Val: string; var _Mes: string) : boolean;  { Result := IsValidDecimal(_Val,  2, 12, _Mes, FALSE); }
  function IsDbl_2_15(_Val: string; var _Mes: string) : boolean;  { Result := IsValidDecimal(_Val,  2, 15, _Mes, FALSE); }
  function IsDbl_3_4 (_Val: string; var _Mes: string) : boolean;  { Result := IsValidDecimal(_Val,  3,  4, _Mes, FALSE); }
  function IsDbl_3_15(_Val: string; var _Mes: string) : boolean;  { Result := IsValidDecimal(_Val,  3, 15, _Mes, FALSE); }
  function IsDbl_10_4(_Val: string; var _Mes: string) : boolean;  { Result := IsValidDecimal(_Val, 10,  4, _Mes, FALSE); }
  function IsDbl_15_2(_Val: string; var _Mes: string) : boolean;  { Result := IsValidDecimal(_Val, 15,  2, _Mes, FALSE); }

  // #endregion FUNCTION

  // #region DECLARE

  #declare _NoKor(_adrXML, _Pole)
    MessageErrorStop_ALG
    (
      #_adrXML
    , #_Pole
    , 'Поле не соответствует формату. ' + getMes
    );
  #end

  #declare _IfNotValidWar(_adrXML, _Valid, _Pole)
    if not #_Valid(GetStrVal(#_adrXML), getMes)
      MessageWarningStop_ALG
      (
        #_adrXML
      , #_Pole
      , 'Поле не соответствует формату. ' + getMes
      );
  #end

  #declare _IfNotValid(_adrXML, _Valid, _Pole, _Iter=0, _IterNum=1)
    if not #_Valid(GetStrVal(#_adrXML), getMes)
      MessageErrorStop_ALG
      (
        #_adrXML
      , #_Pole
      , 'Поле не соответствует формату. ' + getMes
      , #_Iter
      , #_IterNum
      );
  #end

  #declare _IfNotValidVis(_adrXML, _Valid, _Pole, _Iter=0)
    if GetFldVis(#_adrXML)
      if not #_Valid(GetStrVal(#_adrXML), getMes)
        MessageErrorStop_ALG
        (
          #_adrXML
        , #_Pole
        , 'Поле не соответствует формату. ' + getMes
        , #_Iter
        );
  #end

  #declare _IfNotValid_Min(_adrXML, _Pole)
    if not IsInt_1_15_Min(GetStrVal(#_adrXML), True, getMes)
      MessageErrorStop_ALG
      (
        #_adrXML
      , #_Pole
      , 'Поле не соответствует формату. ' + getMes
      );
  #end

  #declare _IfNotValidVis_Min(_adrXML, _Pole)
    if GetFldVis(#_adrXML)
      if not IsInt_1_15_Min(GetStrVal(#_adrXML), True, getMes)
        MessageErrorStop_ALG
        (
          #_adrXML
        , #_Pole
        , 'Поле не соответствует формату. ' + getMes
        );
  #end

  // #endregion DECLARE

  //#endregion СЕРВИС On_Check
  //**********************************************************************************************************
@begin
  var CountI, CountJ, CountK, i, j, k : integer = 0;
  var XMLAdrI, XMLAdrJ, XMLAdrK, getMes : string;
  var flI, flJ, flK : boolean;
  var RemoveIter : integer;

  // #region Титульный лист

  #_IfNotValid('Файл/ВерсПрог', IsStr_1_40, 'Версия программы')
  #_IfNotValid('Файл/ВерсФорм', IsStr_1_5 , 'Версия формы'    )

  if not IsValidKND(GetStrVal('Файл/Документ/КНД'), '1151006', getMes)
    #_NoKor('Файл/Документ/КНД', 'Код налоговой декларации');

  #_IfNotValid('Файл/Документ/ДатаДок' , IsValidDate   , 'Дата документа'       )
  #_IfNotValid('Файл/Документ/ОтчетГод', IsValidOtchGod, 'Отчетный год'         )
  #_IfNotValid('Файл/Документ/КодНО'   , IsValidSONO   , 'Код налогового органа')
  #_IfNotValid('Файл/Документ/НомКорр' , IsValidNomKorr, 'Номер корректировки'  )

  if not IsValidPeriod(GetStrVal('Файл/Документ/Период'), GetStrVal('Файл/Документ/ПоМесту'), getMes)
    #_NoKor('Файл/Документ/Период', 'Налоговый (отчетный) период (код)');

  if not IsValidPoMestu(GetStrVal('Файл/Документ/ПоМесту'), GetStrVal('Файл/Документ/СвНП/НПЮЛ/КПП'), getMes)
    #_NoKor('Файл/Документ/ПоМесту', 'По месту нахождения (учета)');

  {
    #_IfNotValidVis('Файл/Документ/СвНП/Тлф'  , IsValidTlf  , 'Контактный телефон')

    {
      #_IfNotValid('Файл/Документ/СвНП/НПЮЛ/НаимОрг', IsValidNaimOrg     , 'Наименование организации')
      #_IfNotValid('Файл/Документ/СвНП/НПЮЛ/ИННЮЛ'  , IsValidINNUL       , 'ИНН'                     )
      #_IfNotValid('Файл/Документ/СвНП/НПЮЛ/ИННЮЛ'  , CheckError.Prov_INN, 'ИНН'                     )
      #_IfNotValid('Файл/Документ/СвНП/НПЮЛ/КПП'    , IsValidKPP         , 'КПП'                     )

      if GetFldVis('Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ') {
        #_IfNotValid   ('Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ/ФормРеорг', IsValidFormReorg   , 'Форма реоргазации')
        #_IfNotValidVis('Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ/ИННЮЛ'    , IsValidINNUL       , 'ИНН'              )
        #_IfNotValidVis('Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ/ИННЮЛ'    , CheckError.Prov_INN, 'ИНН'              )
        #_IfNotValidVis('Файл/Документ/СвНП/НПЮЛ/СвРеоргЮЛ/КПП'      , IsValidKPP         , 'КПП'              )
      }
    }
  }

  #_IfNotValid   ('Файл/Документ/Подписант/ПрПодп'      , IsValidPrPodp, 'Признак подписанта')
  #_IfNotValid   ('Файл/Документ/Подписант/ФИО/Фамилия' , IsValidFIO   , 'Фамилия'           )
  #_IfNotValid   ('Файл/Документ/Подписант/ФИО/Имя'     , IsValidFIO   , 'Имя'               )
  #_IfNotValidVis('Файл/Документ/Подписант/ФИО/Отчество', IsValidFIO   , 'Отчество'          )

  if GetFldVis('Файл/Документ/Подписант/СвПред') {
    #_IfNotValid   ('Файл/Документ/Подписант/СвПред/НаимДок', IsValidNaimDok, 'Наименование документа'  )
    #_IfNotValidVis('Файл/Документ/Подписант/СвПред/НаимОрг', IsValidNaimOrg, 'Наименование организации')
  }

  // #endregion Титульный лист

  // #region Раздел 1.1
  flI := False;

  CountI := XMLMAP.GetNodeCountByName('Файл/Документ/Прибыль/НалПУ/НалПУАв');
  for (i := 0; i < CountI; i++)
  {
    XMLAdrI := 'Файл/Документ/Прибыль/НалПУ/НалПУАв' + getIter(i);

    if not GetFldVis(XMLAdrI) Continue;
    flI := True;

    #_IfNotValid(XMLAdrI + '/ОКТМО', IsValidOKTMO, 'Стр. 010')

    if GetFldVis(XMLAdrI + '/ФедБдж') {
      #_IfNotValid    (XMLAdrI + '/ФедБдж/КБК'  , IsValidKBK   , 'Стр. 030'    )
      #_IfNotValidWar (XMLAdrI + '/ФедБдж/КБК'  , IsValidKBK_n1, 'Стр. 030'    )
      #_IfNotValid_Min(XMLAdrI + '/ФедБдж/НалПУ',                'Стр. 040|050')
    }

    if GetFldVis(XMLAdrI + '/СубБдж') {
      #_IfNotValid    (XMLAdrI + '/СубБдж/КБК'  , IsValidKBK   , 'Стр. 060'    )
      #_IfNotValidWar (XMLAdrI + '/СубБдж/КБК'  , IsValidKBK_n2, 'Стр. 060'    )
      #_IfNotValid_Min(XMLAdrI + '/СубБдж/НалПУ',                'Стр. 070|080')
    }
  }

  // #region НалПУАв - Элемент отсутствует при <ПоМесту> = 231 | 229 | 235 (из таблицы 4.2) и обязателен при других значениях элемента <ПоМесту>
  if IsPoMestu_231_229_235
  {
    if flI
      MessageErrorStop_ALG (
        'Файл/Документ/Прибыль/НалПУ/НалПУАв/ОКТМО'
      , 'Раздел 1.1'
      , 'Листы Раздела 1.1 не заполняются при значении поля "По месту нахождения (учета) код" = 231, 229 или 235'
      );
  }
  {
    if not flI
      MessageErrorStop_ALG (
        'Файл/Документ/Прибыль/НалПУ/НалПУАв/ОКТМО'
      , 'Раздел 1.1'
      , 'Раздел 1.1 обязателен для заполнения при значениях поля "По месту нахождения (учета) код" не равных 231, 229 или 235'
      );
  }
  // #endregion НалПУАв - Элемент отсутствует при <ПоМесту> = 231 | 229 | 235 (из таблицы 4.2) и обязателен при других значениях элемента <ПоМесту>

  // #endregion Раздел 1.1

  // #region Раздел 1.2
  flI := False;

  CountI := XMLMAP.GetNodeCountByName('Файл/Документ/Прибыль/НалПУ/НалПУМес');
  for (i := 0; i < CountI; i++)
  {
    XMLAdrI := 'Файл/Документ/Прибыль/НалПУ/НалПУМес' + getIter(i);

    if not GetFldVis(XMLAdrI) Continue;
    flI := True;

    #_IfNotValidVis(XMLAdrI + '/КвИсчислАв', IsValidKvIschislAv, 'Стр. 001')
    #_IfNotValid   (XMLAdrI + '/ОКТМО'     , IsValidOKTMO      , 'Стр. 010')

    if GetFldVis(XMLAdrI + '/ФедБдж') {
      #_IfNotValid   (XMLAdrI + '/ФедБдж/КБК'    , IsValidKBK   , 'Стр. 110')
      #_IfNotValidWar(XMLAdrI + '/ФедБдж/КБК'    , IsValidKBK_n1, 'Стр. 110')
      #_IfNotValid   (XMLAdrI + '/ФедБдж/АвПлат1', IsInt_1_15   , 'Стр. 120')
      #_IfNotValid   (XMLAdrI + '/ФедБдж/АвПлат2', IsInt_1_15   , 'Стр. 130')
      #_IfNotValid   (XMLAdrI + '/ФедБдж/АвПлат3', IsInt_1_15   , 'Стр. 140')
    }

    if GetFldVis(XMLAdrI + '/СубБдж') {
      #_IfNotValid   (XMLAdrI + '/СубБдж/КБК'    , IsValidKBK   , 'Стр. 210')
      #_IfNotValidWar(XMLAdrI + '/СубБдж/КБК'    , IsValidKBK_n2, 'Стр. 210')
      #_IfNotValid   (XMLAdrI + '/СубБдж/АвПлат1', IsInt_1_15   , 'Стр. 220')
      #_IfNotValid   (XMLAdrI + '/СубБдж/АвПлат2', IsInt_1_15   , 'Стр. 230')
      #_IfNotValid   (XMLAdrI + '/СубБдж/АвПлат3', IsInt_1_15   , 'Стр. 240')
    }
  }

  // НалПУМес - Элемент отсутствует при выполнении хотя бы одного из следующих условий
  // и необязателен (может присутствовать или отсутствовать) при одновременном невыполнении обоих условий
  // #region
  if IsPoMestu_231_Period_34_68
    if flI
      MessageErrorStop_ALG (
        'Файл/Документ/Прибыль/НалПУ/НалПУМес/КвИсчислАв'
      , 'Раздел 1.2'
      , 'Листы Раздел 1.2 не заполняются при значении поля "По месту нахождения (учета) код" = 231 и (или) значении поля "Налоговый период" = 34, 46, 50 или 68'
      );
  // #endregion

  // #endregion Раздел 1.2

  // #region Раздел 1.3
  {
    // #region ПОЛУЧЕНИЕ ДАННЫХ

    var sum_L03rA_120, sum_L03rB_050, sum_L04_080_1_2, sum_L04_080_4, sum_L04_080_5, sum_R1P1_040 : double = 0;

    // #region Лист 03

    // #region Лист 03. Раздел А

    CountI := XMLMAP.GetNodeCountByName('Файл/Документ/Прибыль/НалУдНА/НалДохДив');
    for (i := 0; i < CountI; i++)
    {
      XMLAdrI := 'Файл/Документ/Прибыль/НалУдНА/НалДохДив' + getIter(i);

      if ( GetFldVis(XMLAdrI) and GetFldVis(XMLAdrI + '/НалДивПосл') )
        sum_L03rA_120 += GetDblVal(XMLAdrI + '/НалДивПосл');
    }

    // #endregion Лист 03. Раздел А

    // #region Лист 03. Раздел Б

    CountI := XMLMAP.GetNodeCountByName('Файл/Документ/Прибыль/НалУдНА/НалДохЦБ');
    for (i := 0; i < CountI; i++)
    {
      XMLAdrI := 'Файл/Документ/Прибыль/НалУдНА/НалДохЦБ' + getIter(i);

      if ( GetFldVis(XMLAdrI) and GetFldVis(XMLAdrI + '/НалНачислПосл') )
        sum_L03rB_050 += GetDblVal(XMLAdrI + '/НалНачислПосл');
    }

    // #endregion Лист 03. Раздел Б

    // #endregion Лист 03

    // #region ЛИСТ 04

    CountI := XMLMAP.GetNodeCountByName('Файл/Документ/Прибыль/НалДохСтав');
    for (i := 0; i < CountI; i++)
    {
      XMLAdrI := 'Файл/Документ/Прибыль/НалДохСтав' + getIter(i);

      if ( GetFldVis(XMLAdrI) and GetFldVis(XMLAdrI + '/ВидДоход') and GetFldVis(XMLAdrI + '/НалНачислПосл') )
      {
        case GetStrVal(XMLAdrI + '/ВидДоход') of
          '1'
         ,'2' : sum_L04_080_1_2 += GetDblVal(XMLAdrI + '/НалНачислПосл');
          '4' : sum_L04_080_4   += GetDblVal(XMLAdrI + '/НалНачислПосл');
          '5' : sum_L04_080_5   += GetDblVal(XMLAdrI + '/НалНачислПосл');
        end;
      }
    }

    // #endregion ЛИСТ 04

    // #endregion ПОЛУЧЕНИЕ ДАННЫХ

    flI := False;

    CountI := XMLMAP.GetNodeCountByName('Файл/Документ/Прибыль/НалПУ/НалПУПроц');
    for (i := 0; i < CountI; i++)
    {
      XMLAdrI := 'Файл/Документ/Прибыль/НалПУ/НалПУПроц' + getIter(i);

      sum_R1P1_040 := 0;

      if not GetFldVis(XMLAdrI) Continue;
      flI := True;

      #_IfNotValid(XMLAdrI + '/ВидПлат', IsValidVidPlat, 'Стр. 010')
      #_IfNotValid(XMLAdrI + '/ОКТМО'  , IsValidOKTMO  , 'Стр. 020')
      #_IfNotValid(XMLAdrI + '/КБК'    , IsValidKBK    , 'Стр. 030')

      flJ := False;

      CountJ := XMLMAP.GetNodeCountByName(XMLAdrI + '/УплСрок');
      for (j := 0; j < CountJ; j++)
      {
        XMLAdrJ := XMLAdrI + '/УплСрок' + getIter(j);

        if not GetFldVis(XMLAdrJ) Continue;
        flJ := True;

        #_IfNotValid(XMLAdrJ + '/Срок' , IsValidDate, 'Стр. 040 ('+LPadCh(String(j+1), '0', 2)+'), гр. 1', if(i=0,-1,1))
        #_IfNotValid(XMLAdrJ + '/НалПУ', IsInt_1_15 , 'Стр. 040 ('+LPadCh(String(j+1), '0', 2)+'), гр. 3', if(i=0,-1,1))

        if GetFldVis(XMLAdrJ + '/НалПУ')
          sum_R1P1_040 += GetDblVal(XMLAdrJ + '/НалПУ');
      }

      if (not flJ)
        MessageErrorStop_ALG (
          XMLAdrI + '/УплСрок/Срок'
        , 'Раздел 1.3'
        , 'Данные по стр. 040 являюся обязательными для заполнения'
        );

      // #region Проверка суммы налога

      getMes := '';
      case GetStrVal(XMLAdrI + '/ВидПлат') of
        '1' : {
                if (sum_L03rA_120 <> sum_R1P1_040)
                  getMes := 'Если 010 = "1", то сумма налога стр. 040 должна быть равна сумме стр. 120 Раздела А Листа 03';
              }
        '2' : {
                if (sum_L03rB_050 <> sum_R1P1_040)
                  getMes := 'Если 010 = "2", то сумма налога стр. 040 должна быть равна сумме стр. 050 Раздела Б Листа 03';
              }
        '3' : {
                if (sum_L04_080_1_2 <> sum_R1P1_040)
                  getMes := 'Если 010 = "3", то сумма налога стр. 040 должна быть равна сумме стр. 080 Листа 04 (с полем Вид = "1" и "2")';
              }
        '4' : {
                if (sum_L04_080_4 <> sum_R1P1_040)
                  getMes := 'Если 010 = "4", то сумма налога стр. 040 должна быть равна сумме стр. 080 Листа 04 (с полем Вид = "4")';
              }
        '5' : {
                if (sum_L04_080_5 <> sum_R1P1_040)
                  getMes := 'Если 010 = "5", то сумма налога стр. 040 должна быть равна сумме стр. 080 Листа 04 (с полем Вид = "6")';
              }
      end;

      if (getMes <> '')
        MessageErrorStop_ALG(XMLAdrI + '/УплСрок/НалПУ', 'Сумма налога', getMes);

      // #endregion Проверка суммы налога
    }
  }

  // #region НалПУПроц - Элемент обязателен при <ПоМесту> = 231
  if IsPoMestu_231
    if not flI
      MessageErrorStop_ALG (
        'Файл/Документ/Прибыль/НалПУ/НалПУПроц/ВидПлат'
      , 'Раздел 1.3'
      , 'Раздел 1.3 обязателен для заполняются при значении поля "По месту нахождения (учета) код" = 231'
      );
  // #endregion НалПУПроц - Элемент обязателен при <ПоМесту> = 231

  // #endregion Раздел 1.3

  // Лист 02 или Приложение 5 к Листу 02
  IsRaschNal;

  // #region Лист 02
  CountI := XMLMAP.GetNodeCountByName('Файл/Документ/Прибыль/РасчНал');
  for (i := 0; i < CountI; i++)
  {
    XMLAdrI := 'Файл/Документ/Прибыль/РасчНал' + getIter(i);

    if not GetFldVis(XMLAdrI) Continue;

    #_IfNotValid       (XMLAdrI + '/ТипНП'           , IsValidTipNP_n1, 'Признак налогоплательщика (код)')
    #_IfNotValidVis    (XMLAdrI + '/НомДок'          , IsStr_1_21     , 'Номер документа'                )
    #_IfNotValidVis    (XMLAdrI + '/СерЛицНедр'      , IsStr_3        , 'Лицензия: серия'                )
    #_IfNotValidVis    (XMLAdrI + '/НомЛицНедр'      , IsStr_5        , 'Лицензия: номер'                )
    #_IfNotValidVis    (XMLAdrI + '/ВидЛицНедр'      , IsStr_2        , 'Лицензия: вид (ч.1)'            )
    #_IfNotValidVis    (XMLAdrI + '/НомМорМест'      , IsStr_2        , 'Лицензия: вид (ч.2)'            )
    #_IfNotValidVis    (XMLAdrI + '/ДохРеал'         , IsInt_1_15     , 'Стр. 010'                       )
    #_IfNotValidVis    (XMLAdrI + '/ДохВнереал'      , IsInt_1_15     , 'Стр. 020'                       )
    #_IfNotValidVis    (XMLAdrI + '/РасхУмРеал'      , IsInt_1_15     , 'Стр. 030'                       )
    #_IfNotValidVis    (XMLAdrI + '/РасхВнереал'     , IsInt_1_15     , 'Стр. 040'                       )
    #_IfNotValidVis    (XMLAdrI + '/Убытки'          , IsInt_1_15     , 'Стр. 050'                       )
    #_IfNotValidVis_Min(XMLAdrI + '/ПрибУб'                           , 'Стр. 060'                       )
    #_IfNotValidVis    (XMLAdrI + '/ДохИсклПриб'     , IsInt_1_15     , 'Стр. 070'                       )
    #_IfNotValidVis    (XMLAdrI + '/ПрибБРСт0'       , IsInt_1_15     , 'Стр. 080'                       )
    #_IfNotValidVis_Min(XMLAdrI + '/НалБаза'                          , 'Стр. 100'                       )
    #_IfNotValidVis    (XMLAdrI + '/УбытУмНБ'        , IsInt_1_15     , 'Стр. 110'                       )
    #_IfNotValidVis    (XMLAdrI + '/НалБазаИсч'      , IsInt_1_15     , 'Стр. 120'                       )
    #_IfNotValidVis    (XMLAdrI + '/НалБазаИсчСуб'   , IsInt_1_15     , 'Стр. 130'                       )
    #_IfNotValidVis    (XMLAdrI + '/СтавНалВсего'    , IsDbl_2_3      , 'Стр. 140'                       )
    #_IfNotValidVis    (XMLAdrI + '/СтавНалФБ'       , IsDbl_2_2      , 'Стр. 150'                       )
    #_IfNotValidVis    (XMLAdrI + '/СтавНалСуб'      , IsDbl_2_3      , 'Стр. 160'                       )
    #_IfNotValidVis    (XMLAdrI + '/СтавНалСуб284'   , IsDbl_2_3      , 'Стр. 170'                       )
    #_IfNotValidVis    (XMLAdrI + '/ЗакУстСтавНал'   , IsStr_30       , 'Стр. 171'                       )
    #_IfNotValidVis    (XMLAdrI + '/НалИсчисл'       , IsInt_1_15     , 'Стр. 180'                       )
    #_IfNotValidVis    (XMLAdrI + '/НалИсчислФБ'     , IsInt_1_15     , 'Стр. 190'                       )
    #_IfNotValidVis    (XMLAdrI + '/НалИсчислСуб'    , IsInt_1_15     , 'Стр. 200'                       )
    #_IfNotValidVis    (XMLAdrI + '/АвНачисл'        , IsInt_1_15     , 'Стр. 210'                       )
    #_IfNotValidVis    (XMLAdrI + '/АвНачислФБ'      , IsInt_1_15     , 'Стр. 220'                       )
    #_IfNotValidVis    (XMLAdrI + '/АвНачислСуб'     , IsInt_1_15     , 'Стр. 230'                       )
    #_IfNotValidVis    (XMLAdrI + '/НалВыпл311'      , IsInt_1_15     , 'Стр. 240'                       )
    #_IfNotValidVis    (XMLAdrI + '/НалВыпл311ФБ'    , IsInt_1_15     , 'Стр. 250'                       )
    #_IfNotValidVis    (XMLAdrI + '/НалВыпл311Суб'   , IsInt_1_15     , 'Стр. 260'                       )
    #_IfNotValidVis    (XMLAdrI + '/ТСУплНачПер'     , IsInt_1_15     , 'Стр. 265'                       )
    #_IfNotValidVis    (XMLAdrI + '/ТСУменАвПред'    , IsInt_1_15     , 'Стр. 266'                       )
    #_IfNotValidVis    (XMLAdrI + '/ТСУменАвОтч'     , IsInt_1_15     , 'Стр. 267'                       )
    #_IfNotValidVis    (XMLAdrI + '/УмАвИнвВычФБ'    , IsInt_1_15     , 'Стр. 268'                       )
    #_IfNotValidVis    (XMLAdrI + '/УмАвИнвВычСуб'   , IsInt_1_15     , 'Стр. 269'                       )
    #_IfNotValidVis    (XMLAdrI + '/НалДоплФБ'       , IsInt_1_15     , 'Стр. 270'                       )
    #_IfNotValidVis    (XMLAdrI + '/НалДоплСуб'      , IsInt_1_15     , 'Стр. 271'                       )
    #_IfNotValidVis    (XMLAdrI + '/НалУменФБ'       , IsInt_1_15     , 'Стр. 280'                       )
    #_IfNotValidVis    (XMLAdrI + '/НалУменСуб'      , IsInt_1_15     , 'Стр. 281'                       )
    #_IfNotValidVis    (XMLAdrI + '/АвПлатМес'       , IsInt_1_15     , 'Стр. 290'                       )
    #_IfNotValidVis    (XMLAdrI + '/АвПлатМесФБ'     , IsInt_1_15     , 'Стр. 300'                       )
    #_IfNotValidVis    (XMLAdrI + '/АвПлатМесСуб'    , IsInt_1_15     , 'Стр. 310'                       )
    #_IfNotValidVis    (XMLAdrI + '/АвПлатУпл1Кв'    , IsInt_1_15     , 'Стр. 320'                       )
    #_IfNotValidVis    (XMLAdrI + '/АвПлатУпл1КвФБ'  , IsInt_1_15     , 'Стр. 330'                       )
    #_IfNotValidVis    (XMLAdrI + '/АвПлатУпл1КвСуб' , IsInt_1_15     , 'Стр. 340'                       )
    #_IfNotValidVis    (XMLAdrI + '/ОбъемКапВлИнв'   , IsInt_1_15     , 'Стр. 350'                       )
    #_IfNotValidVis    (XMLAdrI + '/РазнРасч20Исчисл', IsInt_1_15     , 'Стр. 351'                       )

    // ИЗ ИНСТРУКЦИ. П.5.9. По строкам 240 - 260 указывается сумма налога, выплаченная за пределами РФ и засчитываемая в уплату налога
    // согласно порядку, установленному статьей 311 НК. При этом показатели по строкам 240, 250 и 260 не могут превышать показатели,
    // соответственно, по строкам 180, 190 и 200
    // #region

      // #region Если 240 > 180, то ошибка

      if ( GetDblVal(XMLAdrI + '/НалВыпл311') > GetDblVal(XMLAdrI + '/НалИсчисл') )
        MessageErrorStop_ALG (
          XMLAdrI + '/НалВыпл311'
        , 'Стр. 240'
        , 'Показатель по строке 240 должен быть не больше показателя по строке 180'
        );

      // #endregion Если 240 > 180, то ошибка

      // #region Если 250 > 190, то ошибка

      if ( GetDblVal(XMLAdrI + '/НалВыпл311ФБ') > GetDblVal(XMLAdrI + '/НалИсчислФБ') )
        MessageErrorStop_ALG (
          XMLAdrI + '/НалВыпл311'
        , 'Стр. 250'
        , 'Показатель по строке 250 должен быть не больше показателя по строке 190'
        );

      // #endregion Если 250 > 190, то ошибка

      // #region Если 260 > 200, то ошибка

      if ( GetDblVal(XMLAdrI + '/НалВыпл311Суб') > GetDblVal(XMLAdrI + '/НалИсчислСуб') )
        MessageErrorStop_ALG (
          XMLAdrI + '/НалВыпл311'
        , 'Стр. 260'
        , 'Показатель по строке 260 должен быть не больше показателя по строке 200'
        );
      // #endregion Если 260 > 200, то ошибка

    // #endregion

    // #region ИЗ ИНСТРУКЦИ. П.5.11. Строки 290 - 310 не заполняются: - в Декларации за налоговый период;

    if (NalPer_God)
    {
      // #region 290

      if not GetStrNull(XMLAdrI + '/АвПлатМес')
        MessageErrorStop_ALG (
          XMLAdrI + '/АвПлатМес'
        , 'Стр. 290'
        , 'Показатель по строке 290 не заполняются за налоговый период'
        );

      // #endregion 290

      // #region 300

      if not GetStrNull(XMLAdrI + '/АвПлатМесФБ')
        MessageErrorStop_ALG (
          XMLAdrI + '/АвПлатМесФБ'
        , 'Стр. 300'
        , 'Показатель по строке 300 не заполняются за налоговый период'
        );

      // #endregion 300

      // #region 310

      if not GetStrNull(XMLAdrI + '/АвПлатМесСуб')
        MessageErrorStop_ALG (
          XMLAdrI + '/АвПлатМесСуб'
        , 'Стр. 310'
        , 'Показатель по строке 310 не заполняются за налоговый период'
        );

      // #endregion 310
    }

    // #endregion ИЗ ИНСТРУКЦИ. П.5.11. Строки 290 - 310 не заполняются: - в Декларации за налоговый период;

    // ИЗ ИНСТРУКЦИ. П.5.11.
    // Строки 320 - 340 заполняются в Декларации за девять месяцев
    // Строки 320 - 340 заполняются также в Декларациях за одиннадцать месяцев
    // #region

    if (not NalPer_9_11)
    {
      // #region 320

      if not GetStrNull(XMLAdrI + '/АвПлатУпл1Кв')
        MessageErrorStop_ALG (
          XMLAdrI + '/АвПлатУпл1Кв'
        , 'Стр. 320'
        , 'Показатель по строке 320 заполняются только в декларации за 9 и 11 месяцев'
        );

      // #endregion 320

      // #region 330

      if not GetStrNull(XMLAdrI + '/АвПлатУпл1КвФБ')
        MessageErrorStop_ALG (
          XMLAdrI + '/АвПлатУпл1КвФБ'
        , 'Стр. 330'
        , 'Показатель по строке 330 заполняются только в декларации за 9 и 11 месяцев'
        );

      // #endregion 330

      // #region 340

      if not GetStrNull(XMLAdrI + '/АвПлатУпл1КвСуб')
        MessageErrorStop_ALG (
          XMLAdrI + '/АвПлатУпл1КвСуб'
        , 'Стр. 340'
        , 'Показатель по строке 340 заполняются только в декларации за 9 и 11 месяцев'
        );

      // #endregion 340
    }

    // #endregion

    // #region Приложение 1 к Листу 02

    if GetFldVis(XMLAdrI + '/ДохРеалВнеРеал') {
      #_IfNotValid   (XMLAdrI + '/ДохРеалВнеРеал/ТипНП'     , IsValidTipNP_n1, 'Признак налогоплательщика (код)')
      #_IfNotValidVis(XMLAdrI + '/ДохРеалВнеРеал/НомДок'    , IsStr_1_21     , 'Номер документа'                )
      #_IfNotValidVis(XMLAdrI + '/ДохРеалВнеРеал/СерЛицНедр', IsStr_3        , 'Лицензия: серия'                )
      #_IfNotValidVis(XMLAdrI + '/ДохРеалВнеРеал/НомЛицНедр', IsStr_5        , 'Лицензия: номер'                )
      #_IfNotValidVis(XMLAdrI + '/ДохРеалВнеРеал/ВидЛицНедр', IsStr_2        , 'Лицензия: вид (ч.1)'            )
      #_IfNotValidVis(XMLAdrI + '/ДохРеалВнеРеал/НомМорМест', IsStr_2        , 'Лицензия: вид (ч.2)'            )

      if GetFldVis(XMLAdrI + '/ДохРеалВнеРеал/ДохРеал') {
        #_IfNotValidVis(XMLAdrI + '/ДохРеалВнеРеал/ДохРеал/ВырРеалПред'  , IsInt_1_15, 'Стр. 027')
        #_IfNotValidVis(XMLAdrI + '/ДохРеалВнеРеал/ДохРеал/ВырРеалОпер32', IsInt_1_15, 'Стр. 030')
        #_IfNotValid   (XMLAdrI + '/ДохРеалВнеРеал/ДохРеал/ВырРеалИтог'  , IsInt_1_15, 'Стр. 040')

        if GetFldVis(XMLAdrI + '/ДохРеалВнеРеал/ДохРеал/ВырРеал') {
          #_IfNotValidVis(XMLAdrI + '/ДохРеалВнеРеал/ДохРеал/ВырРеал/ВырРеалВс'    , IsInt_1_15, 'Стр. 010')
          #_IfNotValidVis(XMLAdrI + '/ДохРеалВнеРеал/ДохРеал/ВырРеал/ВырРеалТовСоб', IsInt_1_15, 'Стр. 011')
          #_IfNotValidVis(XMLAdrI + '/ДохРеалВнеРеал/ДохРеал/ВырРеал/ВырРеалТовПок', IsInt_1_15, 'Стр. 012')
          #_IfNotValidVis(XMLAdrI + '/ДохРеалВнеРеал/ДохРеал/ВырРеал/ВырРеалИмПрав', IsInt_1_15, 'Стр. 013')
          #_IfNotValidVis(XMLAdrI + '/ДохРеалВнеРеал/ДохРеал/ВырРеал/ВырРеалИмПроч', IsInt_1_15, 'Стр. 014')
        }

        if GetFldVis(XMLAdrI + '/ДохРеалВнеРеал/ДохРеал/ВырРеалЦБ') {
          #_IfNotValidVis(XMLAdrI + '/ДохРеалВнеРеал/ДохРеал/ВырРеалЦБ/ВырРеалЦБВс'   , IsInt_1_15, 'Стр. 020')
          #_IfNotValidVis(XMLAdrI + '/ДохРеалВнеРеал/ДохРеал/ВырРеалЦБ/ОтклВырЦБОбр'  , IsInt_1_15, 'Стр. 021')
          #_IfNotValidVis(XMLAdrI + '/ДохРеалВнеРеал/ДохРеал/ВырРеалЦБ/ОтклВырЦБНеОбр', IsInt_1_15, 'Стр. 022')
        }

        if GetFldVis(XMLAdrI + '/ДохРеалВнеРеал/ДохРеал/ВырРеалЦБОбр') {
          #_IfNotValidVis(XMLAdrI + '/ДохРеалВнеРеал/ДохРеал/ВырРеалЦБОбр/ВырРеалЦБВс' , IsInt_1_15, 'Стр. 023')
          #_IfNotValidVis(XMLAdrI + '/ДохРеалВнеРеал/ДохРеал/ВырРеалЦБОбр/ОтклВырЦБМин', IsInt_1_15, 'Стр. 024')
        }
      }

      if GetFldVis(XMLAdrI + '/ДохРеалВнеРеал/ДохВнеРеал') {
        #_IfNotValid   (XMLAdrI + '/ДохРеалВнеРеал/ДохВнеРеал/ВнеРеалДохВс'     , IsInt_1_15, 'Стр. 100')
        #_IfNotValidVis(XMLAdrI + '/ДохРеалВнеРеал/ДохВнеРеал/ВнеРеалДохПр'     , IsInt_1_15, 'Стр. 101')
        #_IfNotValidVis(XMLAdrI + '/ДохРеалВнеРеал/ДохВнеРеал/ВнеРеалДохСт'     , IsInt_1_15, 'Стр. 102')
        #_IfNotValidVis(XMLAdrI + '/ДохРеалВнеРеал/ДохВнеРеал/ВнеРеалДохБезв'   , IsInt_1_15, 'Стр. 103')
        #_IfNotValidVis(XMLAdrI + '/ДохРеалВнеРеал/ДохВнеРеал/ВнеРеалДохИзл'    , IsInt_1_15, 'Стр. 104')
        #_IfNotValidVis(XMLAdrI + '/ДохРеалВнеРеал/ДохВнеРеал/ВнеРеалДохВРасх'  , IsInt_1_15, 'Стр. 105')
        #_IfNotValidVis(XMLAdrI + '/ДохРеалВнеРеал/ДохВнеРеал/ВнеРеалДохРынЦБДД', IsInt_1_15, 'Стр. 106')
      }

      if GetFldVis(XMLAdrI + '/ДохРеалВнеРеал/НалБазИнв') {
        #_IfNotValidVis(XMLAdrI + '/ДохРеалВнеРеал/НалБазИнв/НалБазИнвВс' , IsInt_1_15, 'Стр. 200')
        #_IfNotValidVis(XMLAdrI + '/ДохРеалВнеРеал/НалБазИнв/ИнвТовОбр'   , IsInt_1_15, 'Стр. 201')
        #_IfNotValidVis(XMLAdrI + '/ДохРеалВнеРеал/НалБазИнв/ДоляУчКап'   , IsInt_1_15, 'Стр. 202')
        #_IfNotValidVis(XMLAdrI + '/ДохРеалВнеРеал/НалБазИнв/ПрочОпер'    , IsInt_1_15, 'Стр. 203')
        #_IfNotValidVis(XMLAdrI + '/ДохРеалВнеРеал/НалБазИнв/ИнвТовНеОбр' , IsInt_1_15, 'Стр. 210')
        #_IfNotValidVis(XMLAdrI + '/ДохРеалВнеРеал/НалБазИнв/ФинИнстНеОбр', IsInt_1_15, 'Стр. 220')
      }
    }

    // #endregion Приложение 1 к Листу 02

    // #region Приложение 2 к Листу 02
    if GetFldVis(XMLAdrI + '/РасхРеалВнеРеал') {
      #_IfNotValid   (XMLAdrI + '/РасхРеалВнеРеал/ТипНП'     , IsValidTipNP_n1, 'Признак налогоплательщика (код)')
      #_IfNotValidVis(XMLAdrI + '/РасхРеалВнеРеал/НомДок'    , IsStr_1_21     , 'Номер документа'                )
      #_IfNotValidVis(XMLAdrI + '/РасхРеалВнеРеал/СерЛицНедр', IsStr_3        , 'Лицензия: серия'                )
      #_IfNotValidVis(XMLAdrI + '/РасхРеалВнеРеал/НомЛицНедр', IsStr_5        , 'Лицензия: номер'                )
      #_IfNotValidVis(XMLAdrI + '/РасхРеалВнеРеал/ВидЛицНедр', IsStr_2        , 'Лицензия: вид (ч.1)'            )
      #_IfNotValidVis(XMLAdrI + '/РасхРеалВнеРеал/НомМорМест', IsStr_2        , 'Лицензия: вид (ч.2)'            )

      if GetFldVis(XMLAdrI + '/РасхРеалВнеРеал/РасхРеал') {
        #_IfNotValidVis(XMLAdrI + '/РасхРеалВнеРеал/РасхРеал/ПрямРасхРеал'  , IsInt_1_15, 'Стр. 010')
        #_IfNotValidVis(XMLAdrI + '/РасхРеалВнеРеал/РасхРеал/РеалИмущПрав'  , IsInt_1_15, 'Стр. 059')
        #_IfNotValidVis(XMLAdrI + '/РасхРеалВнеРеал/РасхРеал/ПриобрРеалИмущ', IsInt_1_15, 'Стр. 060')
        #_IfNotValidVis(XMLAdrI + '/РасхРеалВнеРеал/РасхРеал/АктивРеалПред' , IsInt_1_15, 'Стр. 061')
        #_IfNotValidVis(XMLAdrI + '/РасхРеалВнеРеал/РасхРеал/ПриобРеалЦБ'   , IsInt_1_15, 'Стр. 070')
        #_IfNotValidVis(XMLAdrI + '/РасхРеалВнеРеал/РасхРеал/СумОтклЦен'    , IsInt_1_15, 'Стр. 071')
        #_IfNotValidVis(XMLAdrI + '/РасхРеалВнеРеал/РасхРеал/ПриобРеалЦБОрг', IsInt_1_15, 'Стр. 072')
        #_IfNotValidVis(XMLAdrI + '/РасхРеалВнеРеал/РасхРеал/СумОтклЦенОрг' , IsInt_1_15, 'Стр. 073')
        #_IfNotValidVis(XMLAdrI + '/РасхРеалВнеРеал/РасхРеал/РасхОпер32'    , IsInt_1_15, 'Стр. 080')
        #_IfNotValidVis(XMLAdrI + '/РасхРеалВнеРеал/РасхРеал/УбытПрошОбсл'  , IsInt_1_15, 'Стр. 090')
        #_IfNotValidVis(XMLAdrI + '/РасхРеалВнеРеал/РасхРеал/УбытРеалАмИм'  , IsInt_1_15, 'Стр. 100')
        #_IfNotValidVis(XMLAdrI + '/РасхРеалВнеРеал/РасхРеал/УбытРеалЗемУч' , IsInt_1_15, 'Стр. 110')
        #_IfNotValidVis(XMLAdrI + '/РасхРеалВнеРеал/РасхРеал/НадбПокПред'   , IsInt_1_15, 'Стр. 120')
        #_IfNotValid   (XMLAdrI + '/РасхРеалВнеРеал/РасхРеал/РасхПризнИтого', IsInt_1_15, 'Стр. 130')

        if GetFldVis(XMLAdrI + '/РасхРеалВнеРеал/РасхРеал/ПрямРасхТорг') {
          #_IfNotValid   (XMLAdrI + '/РасхРеалВнеРеал/РасхРеал/ПрямРасхТорг/ПрямРасхТоргВс', IsInt_1_15, 'Стр. 020')
          #_IfNotValidVis(XMLAdrI + '/РасхРеалВнеРеал/РасхРеал/ПрямРасхТорг/РеалПокТов'    , IsInt_1_15, 'Стр. 030')
        }

        if GetFldVis(XMLAdrI + '/РасхРеалВнеРеал/РасхРеал/КосвРасх') {
          #_IfNotValid   (XMLAdrI + '/РасхРеалВнеРеал/РасхРеал/КосвРасх/КосвРасхВс'      , IsInt_1_15, 'Стр. 040')
          #_IfNotValidVis(XMLAdrI + '/РасхРеалВнеРеал/РасхРеал/КосвРасх/Налоги'          , IsInt_1_15, 'Стр. 041')
          #_IfNotValidVis(XMLAdrI + '/РасхРеалВнеРеал/РасхРеал/КосвРасх/РасхКапВл10'     , IsInt_1_15, 'Стр. 042')
          #_IfNotValidVis(XMLAdrI + '/РасхРеалВнеРеал/РасхРеал/КосвРасх/РасхКапВл30'     , IsInt_1_15, 'Стр. 043')
          #_IfNotValidVis(XMLAdrI + '/РасхРеалВнеРеал/РасхРеал/КосвРасх/РасхТрудИнв'     , IsInt_1_15, 'Стр. 045')
          #_IfNotValidVis(XMLAdrI + '/РасхРеалВнеРеал/РасхРеал/КосвРасх/РасхОргИнв'      , IsInt_1_15, 'Стр. 046')
          #_IfNotValidVis(XMLAdrI + '/РасхРеалВнеРеал/РасхРеал/КосвРасх/РасхЗемУчВс'     , IsInt_1_15, 'Стр. 047')
          #_IfNotValidVis(XMLAdrI + '/РасхРеалВнеРеал/РасхРеал/КосвРасх/РасхЗемУчСрокНП' , IsInt_1_15, 'Стр. 048')
          #_IfNotValidVis(XMLAdrI + '/РасхРеалВнеРеал/РасхРеал/КосвРасх/РасхЗемУч30пр'   , IsInt_1_15, 'Стр. 049')
          #_IfNotValidVis(XMLAdrI + '/РасхРеалВнеРеал/РасхРеал/КосвРасх/РасхЗемУчСрокРас', IsInt_1_15, 'Стр. 050')
          #_IfNotValidVis(XMLAdrI + '/РасхРеалВнеРеал/РасхРеал/КосвРасх/РасхЗемУчСрокАр' , IsInt_1_15, 'Стр. 051')
          #_IfNotValidVis(XMLAdrI + '/РасхРеалВнеРеал/РасхРеал/КосвРасх/НИОКР'           , IsInt_1_15, 'Стр. 052')
          #_IfNotValidVis(XMLAdrI + '/РасхРеалВнеРеал/РасхРеал/КосвРасх/НИОКРнеПолРез'   , IsInt_1_15, 'Стр. 053')
          #_IfNotValidVis(XMLAdrI + '/РасхРеалВнеРеал/РасхРеал/КосвРасх/НИОКРПер'        , IsInt_1_15, 'Стр. 054')
          #_IfNotValidVis(XMLAdrI + '/РасхРеалВнеРеал/РасхРеал/КосвРасх/НИОКРПерНеРез'   , IsInt_1_15, 'Стр. 055')
        }
      }

      if GetFldVis(XMLAdrI + '/РасхРеалВнеРеал/СумАморт') {
        #_IfNotValidVis(XMLAdrI + '/РасхРеалВнеРеал/СумАморт/СумАмортПерЛ'   , IsInt_1_15           , 'Стр. 131')
        #_IfNotValidVis(XMLAdrI + '/РасхРеалВнеРеал/СумАморт/СумАмортПерНмАЛ', IsInt_1_15           , 'Стр. 132')
        #_IfNotValidVis(XMLAdrI + '/РасхРеалВнеРеал/СумАморт/СумАмортПерН'   , IsInt_1_15           , 'Стр. 133')
        #_IfNotValidVis(XMLAdrI + '/РасхРеалВнеРеал/СумАморт/СумАмортПерНмАН', IsInt_1_15           , 'Стр. 134')
        #_IfNotValidVis(XMLAdrI + '/РасхРеалВнеРеал/СумАморт/МетодНачАморт'  , IsValidMetodNachAmort, 'Стр. 135')
      }

      if GetFldVis(XMLAdrI + '/РасхРеалВнеРеал/РасхВнеРеал') {
        #_IfNotValid   (XMLAdrI + '/РасхРеалВнеРеал/РасхВнеРеал/РасхВнеРеалВс'  , IsInt_1_15, 'Стр. 200')
        #_IfNotValidVis(XMLAdrI + '/РасхРеалВнеРеал/РасхВнеРеал/РасхВнереалПрДО', IsInt_1_15, 'Стр. 201')
        #_IfNotValidVis(XMLAdrI + '/РасхРеалВнеРеал/РасхВнеРеал/РасхВнереалРзрв', IsInt_1_15, 'Стр. 202')
        #_IfNotValidVis(XMLAdrI + '/РасхРеалВнеРеал/РасхВнеРеал/РасхЛиквОС'     , IsInt_1_15, 'Стр. 204')
        #_IfNotValidVis(XMLAdrI + '/РасхРеалВнеРеал/РасхВнеРеал/РасхШтраф'      , IsInt_1_15, 'Стр. 205')
        #_IfNotValidVis(XMLAdrI + '/РасхРеалВнеРеал/РасхВнеРеал/РасхРынЦБДД'    , IsInt_1_15, 'Стр. 206')
      }

      if GetFldVis(XMLAdrI + '/РасхРеалВнеРеал/УбытПриравн') {
        #_IfNotValid   (XMLAdrI + '/РасхРеалВнеРеал/УбытПриравн/УбытПриравнВс', IsInt_1_15, 'Стр. 300')
        #_IfNotValidVis(XMLAdrI + '/РасхРеалВнеРеал/УбытПриравн/УбытПрошПер'  , IsInt_1_15, 'Стр. 301')
        #_IfNotValidVis(XMLAdrI + '/РасхРеалВнеРеал/УбытПриравн/СумБезнадДолг', IsInt_1_15, 'Стр. 302')
      }

      if GetFldVis(XMLAdrI + '/РасхРеалВнеРеал/КорНБЛиш') {
        #_IfNotValid(XMLAdrI + '/РасхРеалВнеРеал/КорНБЛиш/КорНБЛишВс', IsInt_1_15, 'Стр. 400')

        CountJ := XMLMAP.GetNodeCountByName(XMLAdrI + '/РасхРеалВнеРеал/КорНБЛиш/КорНБЛишГод');
        for (j := 0; j < CountJ; j++)
        {
          XMLAdrJ := XMLAdrI + '/РасхРеалВнеРеал/КорНБЛиш/КорНБЛишГод' + getIter(j);

          if GetFldVis(XMLAdrJ) Continue;

          #_IfNotValid(XMLAdrJ + '/Год'       , IsValidOtchGod, 'Стр. 40'+String(j+1)+', гр. 1', if (i=0, -1, 1))
          #_IfNotValid(XMLAdrJ + '/КорНБЛишВс', IsInt_1_15    , 'Стр. 40'+String(j+1)+', гр. 3', if (i=0, -1, 1))
        }
      }
    }

    // #endregion Приложение 2 к Листу 02

    // #region Приложение 3 к Листу 02

    if GetFldVis(XMLAdrI + '/РасчРасхОпер') {
      #_IfNotValid   (XMLAdrI + '/РасчРасхОпер/ТипНП'           , IsValidTipNP_n1, 'Признак налогоплательщика (код)')
      #_IfNotValidVis(XMLAdrI + '/РасчРасхОпер/НомДок'          , IsStr_1_21     , 'Номер документа'                )
      #_IfNotValidVis(XMLAdrI + '/РасчРасхОпер/СерЛицНедр'      , IsStr_3        , 'Лицензия: серия'                )
      #_IfNotValidVis(XMLAdrI + '/РасчРасхОпер/НомЛицНедр'      , IsStr_5        , 'Лицензия: номер'                )
      #_IfNotValidVis(XMLAdrI + '/РасчРасхОпер/ВидЛицНедр'      , IsStr_2        , 'Лицензия: вид (ч.1)'            )
      #_IfNotValidVis(XMLAdrI + '/РасчРасхОпер/НомМорМест'      , IsStr_2        , 'Лицензия: вид (ч.2)'            )
      #_IfNotValidVis(XMLAdrI + '/РасчРасхОпер/КолОбРеалАИ'     , IsInt_1_15     , 'Стр. 010'                       )
      #_IfNotValidVis(XMLAdrI + '/РасчРасхОпер/КолОбРеалАИУб'   , IsInt_1_15     , 'Стр. 020'                       )
      #_IfNotValidVis(XMLAdrI + '/РасчРасхОпер/ВыручРеалАИ'     , IsInt_1_15     , 'Стр. 030'                       )
      #_IfNotValidVis(XMLAdrI + '/РасчРасхОпер/ОстСтРеалАИ'     , IsInt_1_15     , 'Стр. 040'                       )
      #_IfNotValidVis(XMLAdrI + '/РасчРасхОпер/ПрибРеалАИ'      , IsInt_1_15     , 'Стр. 050'                       )
      #_IfNotValidVis(XMLAdrI + '/РасчРасхОпер/УбытРеалАИ'      , IsInt_1_15     , 'Стр. 060'                       )
      #_IfNotValidVis(XMLAdrI + '/РасчРасхОпер/ВыручРеалПТДоСр' , IsInt_1_15     , 'Стр. 100'                       )
      #_IfNotValidVis(XMLAdrI + '/РасчРасхОпер/СтоимРеалПТДоСр' , IsInt_1_15     , 'Стр. 120'                       )
      #_IfNotValidVis(XMLAdrI + '/РасчРасхОпер/ВыручРеалТов'    , IsInt_1_15     , 'Стр. 180'                       )
      #_IfNotValidVis(XMLAdrI + '/РасчРасхОпер/РасхРеалТов'     , IsInt_1_15     , 'Стр. 190'                       )
      #_IfNotValidVis(XMLAdrI + '/РасчРасхОпер/УбытОбОбсл'      , IsInt_1_15     , 'Стр. 200'                       )
      #_IfNotValidVis(XMLAdrI + '/РасчРасхОпер/УбытОбОбслНеобл' , IsInt_1_15     , 'Стр. 201'                       )
      #_IfNotValidVis(XMLAdrI + '/РасчРасхОпер/ДохДоговДУИ'     , IsInt_1_15     , 'Стр. 210'                       )
      #_IfNotValidVis(XMLAdrI + '/РасчРасхОпер/ДохДоговДУИ_ВнР' , IsInt_1_15     , 'Стр. 211'                       )
      #_IfNotValidVis(XMLAdrI + '/РасчРасхОпер/РасхДоговДУИ'    , IsInt_1_15     , 'Стр. 220'                       )
      #_IfNotValidVis(XMLAdrI + '/РасчРасхОпер/РасхДоговДУИ_ВнР', IsInt_1_15     , 'Стр. 221'                       )
      #_IfNotValidVis(XMLAdrI + '/РасчРасхОпер/УбытДоговДУИ'    , IsInt_1_15     , 'Стр. 230'                       )
      #_IfNotValidVis(XMLAdrI + '/РасчРасхОпер/ЦенРеалПрЗУ'     , IsInt_1_15     , 'Стр. 240'                       )
      #_IfNotValidVis(XMLAdrI + '/РасчРасхОпер/НеВозЗатрПрЗУ'   , IsInt_1_15     , 'Стр. 250'                       )
      #_IfNotValidVis(XMLAdrI + '/РасчРасхОпер/УбытРеалПрЗУ'    , IsInt_1_15     , 'Стр. 260'                       )
      #_IfNotValid   (XMLAdrI + '/РасчРасхОпер/ВыручОп302Ит'    , IsInt_1_15     , 'Стр. 340'                       )
      #_IfNotValid   (XMLAdrI + '/РасчРасхОпер/РасхОп302Ит'     , IsInt_1_15     , 'Стр. 350'                       )
      #_IfNotValid   (XMLAdrI + '/РасчРасхОпер/УбытОп302'       , IsInt_1_15     , 'Стр. 360'                       )

      if GetFldVis(XMLAdrI + '/РасчРасхОпер/УбытРеалПТ1') {
        #_IfNotValidVis(XMLAdrI + '/РасчРасхОпер/УбытРеалПТ1/Убыт1Соот269', IsInt_1_15, 'Стр. 140')
        #_IfNotValidVis(XMLAdrI + '/РасчРасхОпер/УбытРеалПТ1/Убыт1Прев269', IsInt_1_15, 'Стр. 150')
      }
    }

    // #endregion Приложение 3 к Листу 02

    // #region Приложение 4 к Листу 02

    CountJ := XMLMAP.GetNodeCountByName(XMLAdrI + '/УбытУменНБ');
    for (j := 0; j < CountJ; j++)
    {
      XMLAdrJ := XMLAdrI + '/УбытУменНБ' + getIter(j);

      if not GetFldVis(XMLAdrJ) Continue;

      // #region ИЗ ИНСТРУКЦИ. П.1.1. Приложение N 4 к Листу 02 включается в состав Декларации только за I квартал и налоговый период

      if (not NalPer_1kv_God)
        MessageErrorStop_ALG (
          XMLAdrJ + '/ТипНП'
        , 'Приложение 4 к Листу 02'
        , 'Приложение 4 к Листу 02 включается в состав Декларации только за I квартал и налоговый период'
        );

      // #endregion ИЗ ИНСТРУКЦИ. П.1.1. Приложение N 4 к Листу 02 включается в состав Декларации только за I квартал и налоговый период.

      // // #region ИЗ ИНСТРУКЦИ. П.9.3. Показатель по строке 150 не может быть больше показателя строки 140
      //
      // if ( GetDblVal(XMLAdrJ + '/УбытУмНалБазаВс') > GetDblVal(XMLAdrJ + '/НалБаза') )
      //   MessageErrorStop_ALG (
      //     XMLAdrJ + '/УбытУмНалБазаВс'
      //   , 'Стр. 150'
      //   , 'Показатель по строке 150 не может быть больше показателя строки 140'
      //   );
      //
      // // #endregion Показатель по строке 150 не может быть больше показателя строки 140

      // ИЗ ИНСТРУКЦИ. П.9.3.
      // По строке 151 указывается убыток по операциям с обращающимися ценными бумагами, учтенный в составе показателя строки 150,
      // но не более 20 процентов суммы убытка по строке 135
      // #region

      if ( GetDblVal(XMLAdrJ + '/УбытУмНалБаза135') > (GetDblVal(XMLAdrJ + '/ОстУбытЗавСд') * 20 / 100) )
        MessageErrorStop_ALG (
          XMLAdrJ + '/УбытУмНалБаза135'
        , 'Стр. 151'
        , 'Показатель по строке 151 не может быть больше 20 процентов показателя строки 135'
        );

      // #endregion

      // #region ИЗ ИНСТРУКЦИ. П.9.4. Строки 160, 161 заполняются при составлении Декларации за налоговый период

      if (not NalPer_God)
      {
        // #region 160

        if not GetStrNull(XMLAdrJ + '/ОстУбытКонВс')
          MessageErrorStop_ALG (
            XMLAdrJ + '/ОстУбытКонВс'
          , 'Стр. 160'
          , 'Показатель по строке 160 заполняются только за налоговый период'
          );

        // #endregion 160

        // #region 161

        if not GetStrNull(XMLAdrJ + '/ОстУбытКон135')
          MessageErrorStop_ALG (
            XMLAdrJ + '/ОстУбытКон135'
          , 'Стр. 161'
          , 'Показатель по строке 161 заполняются только за налоговый период'
          );

        // #endregion 161
      }

      // #endregion ИЗ ИНСТРУКЦИ. П.9.4. Строки 160, 161 заполняются при составлении Декларации за налоговый период

      #_IfNotValid       (XMLAdrJ + '/ТипНП'           , IsValidTipNP_n2, 'Признак налогоплательщика (код)')
      #_IfNotValidVis    (XMLAdrJ + '/НомДок'          , IsStr_1_21     , 'Номер документа'                )
      #_IfNotValidVis    (XMLAdrJ + '/СерЛицНедр'      , IsStr_3        , 'Лицензия: серия'                )
      #_IfNotValidVis    (XMLAdrJ + '/НомЛицНедр'      , IsStr_5        , 'Лицензия: номер'                )
      #_IfNotValidVis    (XMLAdrJ + '/ВидЛицНедр'      , IsStr_2        , 'Лицензия: вид (ч.1)'            )
      #_IfNotValidVis    (XMLAdrJ + '/НомМорМест'      , IsStr_2        , 'Лицензия: вид (ч.2)'            )
      #_IfNotValidVis    (XMLAdrJ + '/ОстУбытНачВс'    , IsInt_1_15     , 'Стр. 010'                       )
      #_IfNotValidVis    (XMLAdrJ + '/ОстУбытЗавСд'    , IsInt_1_15     , 'Стр. 135'                       )
      #_IfNotValidVis    (XMLAdrJ + '/ОстУбытЗавСдНач' , IsInt_1_15     , 'Стр. 136'                       )
      #_IfNotValidVis_Min(XMLAdrJ + '/НалБаза'                          , 'Стр. 140'                       )
      #_IfNotValidVis    (XMLAdrJ + '/УбытУмНалБазаВс' , IsInt_1_15     , 'Стр. 150'                       )
      #_IfNotValidVis    (XMLAdrJ + '/УбытУмНалБаза135', IsInt_1_15     , 'Стр. 151'                       )
      #_IfNotValidVis    (XMLAdrJ + '/ОстУбытКонВс'    , IsInt_1_15     , 'Стр. 160'                       )
      #_IfNotValidVis    (XMLAdrJ + '/ОстУбытКон135'   , IsInt_1_15     , 'Стр. 161'                       )

      CountK := XMLMAP.GetNodeCountByName(XMLAdrJ + '/ОстУбытНачПерГод');
      for (k := 0; k < CountK; k++)
      {
        XMLAdrK := XMLAdrJ + '/ОстУбытНачПерГод' + getIter(k);

        if not GetFldVis(XMLAdrK) Continue;

        #_IfNotValid(XMLAdrK + '/Год'    , IsValidOtchGod, 'Стр. '+LPadCh(String((k * 10) + 40), '0', 3)+', гр. 1', if (i=0,-1,1))
        #_IfNotValid(XMLAdrK + '/ОстУбыт', IsInt_1_15    , 'Стр. '+LPadCh(String((k * 10) + 40), '0', 3)+', гр. 2', if (i=0,-1,1))
      }
    }

    // #endregion Приложение 4 к Листу 02

    // #region Приложение 5 к Листу 02

    {
      var sum_L2p5v1_080 : double = 0;
      var fl_L2p5v1 : boolean = false;

      CountJ := XMLMAP.GetNodeCountByName(XMLAdrI + '/РаспрНалСубРФ');
      for (j := 0; j < CountJ; j++)
      {
        XMLAdrJ := XMLAdrI + '/РаспрНалСубРФ' + getIter(j);

        if not GetFldVis(XMLAdrJ) Continue;
        fl_L2p5v1 := True;

        // #region ИЗ ИНСТРУКЦИ. П.10.8. Строки 120 Приложений N 5 к Листу 02 Декларации в Декларациях за налоговый период не заполняются

        if (NalPer_God)
        {
          if not GetStrNull(XMLAdrJ + '/МесАвПлат')
            MessageErrorStop_ALG (
              XMLAdrJ + '/МесАвПлат'
            , 'Стр. 120'
            , 'Строка 120 Приложения 5 к Листу 02 Декларации в декларации за налоговый период не заполняются'
            );
        }

        // #endregion ИЗ ИНСТРУКЦИ. П.10.8. Строки 120 Приложений N 5 к Листу 02 Декларации в Декларациях за налоговый период не заполняются

        // ИЗ ИНСТРУКЦИ. П.10.11. При составлении Приложений N 5 к Листу 02 Декларации с кодом "3" по реквизиту "Расчет составлен (код)"...
        // В Приложениях N 5 к Листу 02 Декларации по указанным обособленным подразделениям строки 120, 121 не заполняются.
        // #region

        if ( GetStrVal(XMLAdrJ + '/ОбРасч') = '3' )
        {
          // #region 120

          if not GetStrNull(XMLAdrJ + '/МесАвПлат')
            MessageErrorStop_ALG (
              XMLAdrJ + '/МесАвПлат'
            , 'Стр. 120'
            , 'Показатель по строке 120 не заполняются если указан код "3" по реквизиту "Расчет составлен (код)"'
            );

          // #endregion 120

          // #region 121

          if not GetStrNull(XMLAdrJ + '/МесАвПлат1КвСлед')
            MessageErrorStop_ALG (
              XMLAdrJ + '/МесАвПлат1КвСлед'
            , 'Стр. 121'
            , 'Показатель по строке 121 не заполняются если указан код "3" по реквизиту "Расчет составлен (код)"'
            );

          // #endregion 121
        }

        // #endregion

        #_IfNotValid       (XMLAdrJ + '/ТипНП'           , IsValidTipNP_n3    , 'Признак налогоплательщика (код)'        )
        #_IfNotValid       (XMLAdrJ + '/ОбРасч'          , IsValidObRasch     , 'Расчет составлен (код)'                 )
        #_IfNotValid       (XMLAdrJ + '/КППОП'           , IsValidKPP         , 'КПП'                                    )
        #_IfNotValid       (XMLAdrJ + '/ОбязУплНалОП'    , IsValidObyzUplNalOP, 'Возложение обязанности по уплате налога')
        #_IfNotValid       (XMLAdrJ + '/НаимОП'          , IsStr_1_1000       , 'Наименование'                           )
        #_IfNotValidVis    (XMLAdrJ + '/НомДок'          , IsStr_1_21         , 'Номер документа'                        )
        #_IfNotValidVis    (XMLAdrJ + '/НалБазаОрг'      , IsInt_1_15         , 'Стр. 030'                               )
        #_IfNotValidVis    (XMLAdrJ + '/ДоляНалБаз'      , IsDbl_3_15         , 'Стр. 040'                               )
        #_IfNotValidVis    (XMLAdrJ + '/НалБазаДоля'     , IsInt_1_15         , 'Стр. 050'                               )
        #_IfNotValidVis    (XMLAdrJ + '/НалБазаДоляПнСт' , IsInt_1_15         , 'Стр. 051'                               )
        #_IfNotValidVis    (XMLAdrJ + '/СтавНалСубРФ'    , IsDbl_2_3          , 'Стр. 060'                               )
        #_IfNotValidVis    (XMLAdrJ + '/ЗакУстСтавНал'   , IsStr_30           , 'Стр. 061'                               )
        #_IfNotValidVis    (XMLAdrJ + '/СумНал'          , IsInt_1_15         , 'Стр. 070'                               )
        #_IfNotValidVis    (XMLAdrJ + '/НалНачислСубРФ'  , IsInt_1_15         , 'Стр. 080'                               )
        #_IfNotValidVis    (XMLAdrJ + '/НалВыплВнеРФ'    , IsInt_1_15         , 'Стр. 090'                               )
        #_IfNotValidVis    (XMLAdrJ + '/ТСУплНачПер'     , IsInt_1_15         , 'Стр. 095'                               )
        #_IfNotValidVis    (XMLAdrJ + '/ТСУменАвПред'    , IsInt_1_15         , 'Стр. 096'                               )
        #_IfNotValidVis    (XMLAdrJ + '/ТСУменАвОтч'     , IsInt_1_15         , 'Стр. 097'                               )
        #_IfNotValidVis    (XMLAdrJ + '/СумИнвВыч'       , IsInt_1_15         , 'Стр. 098'                               )
        #_IfNotValidVis_Min(XMLAdrJ + '/СумНалП'                              , 'Стр. 100|110'                           )
        #_IfNotValidVis    (XMLAdrJ + '/МесАвПлат'       , IsInt_1_15         , 'Стр. 120'                               )
        #_IfNotValidVis    (XMLAdrJ + '/МесАвПлат1КвСлед', IsInt_1_15         , 'Стр. 121'                               )

        if (GetDblVal(XMLAdrJ + '/НалБазаОрг') <> GetDblVal(XMLAdrJ + '/НалБазаБезЛиквОП'))
        then { #_IfNotValidVis    (XMLAdrJ + '/НалБазаБезЛиквОП', IsInt_1_15, 'Стр. 031') }
        else { #_IfNotValidVis_Min(XMLAdrJ + '/НалБазаБезЛиквОП'            , 'Стр. 031') }

        sum_L2p5v1_080 += GetDblVal(XMLAdrJ + '/НалНачислСубРФ');
      }

      // ИЗ ИНСТРУКЦИ. П.10.5.
      // Сумма строк 080 Приложений N 5 к Листу 02 Декларации должна быть равна сумме, отраженной по строке 230 Листа 02.
      // #region

      if ( fl_L2p5v1 and GetFldVis(XMLAdrI + '/АвНачислСуб') )
        if ( sum_L2p5v1_080 <> GetDblVal(XMLAdrI + '/АвНачислСуб') )
          MessageErrorStop_ALG (
            XMLAdrI + '/АвНачислСуб'
          , 'Стр. 120'
          , 'Сумма строк 080 Приложений N 5 к Листу 02 Декларации должна быть равна сумме, отраженной по строке 230 Листа 02'
          );

      // #endregion
    }

    // #endregion Приложение 5 к Листу 02

    // #region Приложение 6 к Листу 02

    CountJ := XMLMAP.GetNodeCountByName(XMLAdrI + '/РасчНалГруп');
    for (j := 0; j < CountJ; j++)
    {
      XMLAdrJ := XMLAdrI + '/РасчНалГруп' + getIter(j);

      if not GetFldVis(XMLAdrJ) Continue;

      // #region ИЗ ИНСТРУКЦИ. П.10.8. Строки 120 Приложений N 5 к Листу 02 Декларации в Декларациях за налоговый период не заполняются

      // Показатели строк с 080 по 121 Приложения N 6 к Листу 02 заполняются в порядке, установленном для Приложений N 5 к Листу 02
      // Декларации с учетом положений пункта 10.14.1 настоящего Порядка.

      if (NalPer_God)
      {
        if not GetStrNull(XMLAdrJ + '/МесАвПлат')
          MessageErrorStop_ALG (
            XMLAdrJ + '/МесАвПлат'
          , 'Стр. 120'
          , 'Строка 120 Приложения 6 к Листу 02 Декларации в декларации за налоговый период не заполняются'
          );
      }

      // #endregion ИЗ ИНСТРУКЦИ. П.10.8. Строки 120 Приложений N 5 к Листу 02 Декларации в Декларациях за налоговый период не заполняются

      #_IfNotValid       (XMLAdrJ + '/ИННЮЛ'           , IsValidINNUL       , 'ИНН'                  )
      #_IfNotValid       (XMLAdrJ + '/ИННЮЛ'           , CheckError.Prov_INN, 'ИНН'                  )
      #_IfNotValid       (XMLAdrJ + '/КПП'             , IsValidKPP         , 'КПП'                  )
      #_IfNotValid       (XMLAdrJ + '/ОКТМО'           , IsValidOKTMO       , 'Код по ОКТМО'         )
      #_IfNotValid       (XMLAdrJ + '/НаимУч'          , IsStr_1_1000       , 'Наименование'         )
      #_IfNotValid       (XMLAdrJ + '/КолПрил'         , IsInt_1_4          , 'Количество приложений')
      #_IfNotValid       (XMLAdrJ + '/СубРФ'           , IsValidSSRF        , 'Регион (код)'         )
      #_IfNotValid       (XMLAdrJ + '/НалБазаГр'       , IsInt_1_15         , 'Стр. 030'             )
      #_IfNotValidVis    (XMLAdrJ + '/НалБазаБезОП'    , IsInt_1_15         , 'Стр. 031'             )
      #_IfNotValidVis    (XMLAdrJ + '/ДоляНалБаз'      , IsDbl_3_15         , 'Стр. 040'             )
      #_IfNotValid       (XMLAdrJ + '/НалБазаДоля'     , IsInt_1_15         , 'Стр. 050'             )
      #_IfNotValidVis    (XMLAdrJ + '/НалБазаДоляСтН'  , IsInt_1_15         , 'Стр. 051'             )
      #_IfNotValidVis    (XMLAdrJ + '/СумНал'          , IsInt_1_15         , 'Стр. 070'             )
      #_IfNotValidVis    (XMLAdrJ + '/НалНачислСубРФ'  , IsInt_1_15         , 'Стр. 080'             )
      #_IfNotValidVis    (XMLAdrJ + '/НалВыплВнеРФ'    , IsInt_1_15         , 'Стр. 090'             )
      #_IfNotValidVis    (XMLAdrJ + '/ТСУплНачПер'     , IsInt_1_15         , 'Стр. 095'             )
      #_IfNotValidVis    (XMLAdrJ + '/ТСУменАвПред'    , IsInt_1_15         , 'Стр. 096'             )
      #_IfNotValidVis    (XMLAdrJ + '/ТСУменАвОтч'     , IsInt_1_15         , 'Стр. 097'             )
      #_IfNotValidVis    (XMLAdrJ + '/СумИнвНалВыч'    , IsInt_1_15         , 'Стр. 098'             )
      #_IfNotValidVis_Min(XMLAdrJ + '/СумНалП'                              , 'Стр. 100|110'         )
      #_IfNotValidVis    (XMLAdrJ + '/МесАвПлат'       , IsInt_1_15         , 'Стр. 120'             )
      #_IfNotValidVis    (XMLAdrJ + '/МесАвПлат1КвСлед', IsInt_1_15         , 'Стр. 121'             )

      // #region Приложение 6а к Листу 02
      flK := False;

      CountK := XMLMAP.GetNodeCountByName(XMLAdrJ + '/РасчНалУчГруп');
      for (k := 0; k < CountK; k++)
      {
        XMLAdrK := XMLAdrJ + '/РасчНалУчГруп' + getIter(k);

        if not GetFldVis(XMLAdrK) Continue;
        flK := True;

        #_IfNotValid   (XMLAdrK + '/ИННЮЛ'        , IsValidINNUL       , 'ИНН'                        )
        #_IfNotValid   (XMLAdrK + '/ИННЮЛ'        , CheckError.Prov_INN, 'ИНН'                        )
        #_IfNotValid   (XMLAdrK + '/КПП'          , IsValidKPP         , 'КПП'                        )
        #_IfNotValid   (XMLAdrK + '/ОКТМО'        , IsValidOKTMO       , 'Код по ОКТМО'               )
        #_IfNotValid   (XMLAdrK + '/НаимУч'       , IsStr_1_1000       , 'Наименование'               )
        #_IfNotValid   (XMLAdrK + '/ОбРасч'       , IsValidObRasch     , 'Стр. Расчет составлен (код)')
        #_IfNotValid   (XMLAdrK + '/НалБазаГр'    , IsInt_1_15         , 'Стр. 030'                   )
        #_IfNotValidVis(XMLAdrK + '/НалБазаБезОП' , IsInt_1_15         , 'Стр. 031'                   )
        #_IfNotValidVis(XMLAdrK + '/СрЧислРаб'    , IsInt_1_15         , 'Стр. 032'                   )
        #_IfNotValidVis(XMLAdrK + '/СрОстСтАмИмущ', IsInt_1_15         , 'Стр. 033'                   )
        #_IfNotValidVis(XMLAdrK + '/СредАрифВел'  , IsDbl_3_15         , 'Стр. 034'                   )
        #_IfNotValidVis(XMLAdrK + '/ДоляНалБаз'   , IsDbl_3_15         , 'Стр. 040'                   )
        #_IfNotValid   (XMLAdrK + '/НалБазаДоля'  , IsInt_1_15         , 'Стр. 050'                   )
        #_IfNotValidVis(XMLAdrK + '/НалБазаДоляСн', IsInt_1_15         , 'Стр. 051'                   )
        #_IfNotValidVis(XMLAdrK + '/СтавНалСубРФ' , IsDbl_2_3          , 'Стр. 060'                   )
        #_IfNotValidVis(XMLAdrK + '/ЗакУстСтавНал', IsStr_30           , 'Стр. 061'                   )
        #_IfNotValidVis(XMLAdrK + '/СумНал'       , IsInt_1_15         , 'Стр. 070'                   )
        #_IfNotValidVis(XMLAdrK + '/ТСУплНачПер'  , IsInt_1_15         , 'Стр. 095'                   )
        #_IfNotValidVis(XMLAdrK + '/ТСУменАвОтч'  , IsInt_1_15         , 'Стр. 097'                   )
        #_IfNotValidVis(XMLAdrK + '/СумИнвНалВыч' , IsInt_1_15         , 'Стр. 098'                   )
      }

      if not flK
        MessageErrorStop_ALG (
          XMLAdrJ + '/РасчНалУчГруп/ИННЮЛ'
        , 'Приложение 6а к Листу 02'
        , 'Хотя бы один лист Приложения 6а к Листу 02 должен быть заполнен'
        );

      // #endregion Приложение 6а к Листу 02
    }
    // #endregion Приложение 6 к Листу 02

    // #region Приложение 6Б к Листу 02
    if GetFldVis(XMLAdrI + '/ДохРасхУчГрупНБ')
    {
      if GetFldVis(XMLAdrI + '/ДохРасхУчГрупНБ/СумНБУчастКГН/ОбщКонсНБКГН')
      {
        #_IfNotValidVis_Min(XMLAdrI + '/ДохРасхУчГрупНБ/СумНБУчастКГН/ОбщКонсНБКГН/СумНБУчГр'           , 'Стр. 010')
        #_IfNotValidVis_Min(XMLAdrI + '/ДохРасхУчГрупНБ/СумНБУчастКГН/ОбщКонсНБКГН/СумУбытУчГр'         , 'Стр. 020')
        #_IfNotValidVis_Min(XMLAdrI + '/ДохРасхУчГрупНБ/СумНБУчастКГН/ОбщКонсНБКГН/УбытУчОбщКонсНБ'     , 'Стр. 030')
        #_IfNotValidVis_Min(XMLAdrI + '/ДохРасхУчГрупНБ/СумНБУчастКГН/ОбщКонсНБКГН/УбытУчНеОбщКонсНБ'   , 'Стр. 031')
        #_IfNotValid_Min   (XMLAdrI + '/ДохРасхУчГрупНБ/СумНБУчастКГН/ОбщКонсНБКГН/ОбщКонсНБГр'         , 'Стр. 040')
        #_IfNotValidVis_Min(XMLAdrI + '/ДохРасхУчГрупНБ/СумНБУчастКГН/ОбщКонсНБКГН/УбУмКонсНБНеобрЦБ'   , 'Стр. 041')
        #_IfNotValidVis_Min(XMLAdrI + '/ДохРасхУчГрупНБ/СумНБУчастКГН/ОбщКонсНБКГН/ОстУбПредНеУчтНач'   , 'Стр. 050')
        #_IfNotValidVis_Min(XMLAdrI + '/ДохРасхУчГрупНБ/СумНБУчастКГН/ОбщКонсНБКГН/УбПредУмОбщНБПер'    , 'Стр. 060')
        #_IfNotValidVis_Min(XMLAdrI + '/ДохРасхУчГрупНБ/СумНБУчастКГН/ОбщКонсНБКГН/ОстУбытНеУчтКон'     , 'Стр. 070')
      }

      if GetFldVis(XMLAdrI + '/ДохРасхУчГрупНБ/СумНБУчастКГН/КонсНБКГННеОбр')
      {
        #_IfNotValidVis_Min(XMLAdrI + '/ДохРасхУчГрупНБ/СумНБУчастКГН/КонсНБКГННеОбр/СумНБУчГр'         , 'Стр. 110')
        #_IfNotValidVis_Min(XMLAdrI + '/ДохРасхУчГрупНБ/СумНБУчастКГН/КонсНБКГННеОбр/СумУбытУчГр'       , 'Стр. 120')
        #_IfNotValidVis_Min(XMLAdrI + '/ДохРасхУчГрупНБ/СумНБУчастКГН/КонсНБКГННеОбр/УбытУчКонсНБ'      , 'Стр. 130')
        #_IfNotValidVis_Min(XMLAdrI + '/ДохРасхУчГрупНБ/СумНБУчастКГН/КонсНБКГННеОбр/УбытУчНеКонсНБ'    , 'Стр. 131')
        #_IfNotValid_Min   (XMLAdrI + '/ДохРасхУчГрупНБ/СумНБУчастКГН/КонсНБКГННеОбр/КонсНБГр'          , 'Стр. 140')
        #_IfNotValidVis_Min(XMLAdrI + '/ДохРасхУчГрупНБ/СумНБУчастКГН/КонсНБКГННеОбр/КонсНБГрУмУбПер'   , 'Стр. 141')
        #_IfNotValidVis_Min(XMLAdrI + '/ДохРасхУчГрупНБ/СумНБУчастКГН/КонсНБКГННеОбр/ОстУбПредНеУчтНач' , 'Стр. 150')
        #_IfNotValidVis_Min(XMLAdrI + '/ДохРасхУчГрупНБ/СумНБУчастКГН/КонсНБКГННеОбр/УбПредУмНБПер'     , 'Стр. 160')
        #_IfNotValidVis_Min(XMLAdrI + '/ДохРасхУчГрупНБ/СумНБУчастКГН/КонсНБКГННеОбр/ОстУбытНеУчтКон'   , 'Стр. 170')
      }

      flJ := False;
      CountJ := XMLMAP.GetNodeCountByName(XMLAdrI + '/ДохРасхУчГрупНБ/ДохРасхУчастКГН');
      for (j := 0; j < CountJ; j++)
      {
        XMLAdrJ := XMLAdrI + '/ДохРасхУчГрупНБ/ДохРасхУчастКГН' + getIter(j);
        flJ := True;

        if not GetFldVis(XMLAdrJ) Continue;

        #_IfNotValid    (XMLAdrJ + '/ИННЮЛ_УчКГр'       , IsValidINNUL       , 'Стр. 010')
        #_IfNotValid    (XMLAdrJ + '/ИННЮЛ_УчКГр'       , CheckError.Prov_INN, 'Стр. 010')

        if GetFldVis(XMLAdrJ + '/РасчОбщНБУчКГН')
        {
          #_IfNotValidVis_Min(XMLAdrJ + '/РасчОбщНБУчКГН/ДохРеалУчКГ'      , 'Стр. 210')
          #_IfNotValidVis_Min(XMLAdrJ + '/РасчОбщНБУчКГН/ВнеРеалДох'       , 'Стр. 220')
          #_IfNotValidVis_Min(XMLAdrJ + '/РасчОбщНБУчКГН/РасхУменДохРеал'  , 'Стр. 230')
          #_IfNotValidVis_Min(XMLAdrJ + '/РасчОбщНБУчКГН/ВнеРеалРасх'      , 'Стр. 240')
          #_IfNotValidVis_Min(XMLAdrJ + '/РасчОбщНБУчКГН/УбытОперПр3'      , 'Стр. 250')
          #_IfNotValidVis_Min(XMLAdrJ + '/РасчОбщНБУчКГН/ДохИсклПриб'      , 'Стр. 255')
          #_IfNotValidVis_Min(XMLAdrJ + '/РасчОбщНБУчКГН/КорПрошЛишУплНал' , 'Стр. 256')
          #_IfNotValidVis_Min(XMLAdrJ + '/РасчОбщНБУчКГН/КорНБРаздV.1'     , 'Стр. 257')
          #_IfNotValidVis_Min(XMLAdrJ + '/РасчОбщНБУчКГН/НалБазДохИнв'     , 'Стр. 258')
          #_IfNotValid_Min   (XMLAdrJ + '/РасчОбщНБУчКГН/ОбщНБУчаст'       , 'Стр. 260')
          #_IfNotValidVis_Min(XMLAdrJ + '/РасчОбщНБУчКГН/УбытУчаст'        , 'Стр. 270')
          #_IfNotValidVis_Min(XMLAdrJ + '/РасчОбщНБУчКГН/ОстУбПредНеУчтНач', 'Стр. 275')
          #_IfNotValidVis_Min(XMLAdrJ + '/РасчОбщНБУчКГН/УбПредУмНБПер'    , 'Стр. 280')
          #_IfNotValidVis_Min(XMLAdrJ + '/РасчОбщНБУчКГН/ОбщНБУчУмУбытПред', 'Стр. 285')
          #_IfNotValidVis_Min(XMLAdrJ + '/РасчОбщНБУчКГН/ОстУбНеУчтКон'    , 'Стр. 290')
          #_IfNotValidVis_Min(XMLAdrJ + '/РасчОбщНБУчКГН/ОстУбНеУчтНалПер' , 'Стр. 291')

          if GetFldVis(XMLAdrJ + '/РасчНБУчКГННеОбр')
          {
            #_IfNotValidVis_Min(XMLAdrJ + '/РасчНБУчКГННеОбр/НалБазУчаст'       , 'Стр. 310')
            #_IfNotValidVis_Min(XMLAdrJ + '/РасчНБУчКГННеОбр/НалБазУчастОш'     , 'Стр. 311')
            #_IfNotValidVis_Min(XMLAdrJ + '/РасчНБУчКГННеОбр/НалБазИнвТов'      , 'Стр. 312')
            #_IfNotValidVis_Min(XMLAdrJ + '/РасчНБУчКГННеОбр/УбытУчаст'         , 'Стр. 320')
            #_IfNotValidVis_Min(XMLAdrJ + '/РасчНБУчКГННеОбр/УбытНеУчтНач'      , 'Стр. 330')
            #_IfNotValidVis_Min(XMLAdrJ + '/РасчНБУчКГННеОбр/УбПредУмНБПер'     , 'Стр. 340')
            #_IfNotValid_Min   (XMLAdrJ + '/РасчНБУчКГННеОбр/НБУчУмУбытПред'    , 'Стр. 350')
            #_IfNotValidVis_Min(XMLAdrJ + '/РасчНБУчКГННеОбр/ОстУбытНеУчтКон'   , 'Стр. 360')
            #_IfNotValidVis_Min(XMLAdrJ + '/РасчНБУчКГННеОбр/ОстУбытНеУчтНалПер', 'Стр. 361')
          }
        }
      }
    }
    // #endregion Приложение 6б к Листу 02

    // #region Файл/Документ/Прибыль/РасчНал/ИнвНалВыч/  ПРИЛОЖЕНИЕ 7 К ЛИСТУ 02
    // #region Файл/Документ/Прибыль/РасчНал/ИнвНалВыч/РасчИнвВыч  ПРИЛОЖЕНИЕ 7 К ЛИСТУ 02 РАЗДЕЛ А
    flJ := False;
    CountJ := XMLMap.GetNodeCountByName(XMLAdrI + '/ИнвНалВыч/РасчИнвВыч');
    for (j := 0; j < CountJ; j++)
    {
      XMLAdrJ := XMLAdrI + '/ИнвНалВыч/РасчИнвВыч' + getIter(j);

      if not GetFldVis(XMLAdrJ) Continue;

      flJ := True;
      #_IfNotValid (XMLAdrJ + '/ОбРасч',    IsValidObRasch  , 'Расчет составлен (код)')
      #_IfNotValid (XMLAdrJ + '/КППМест',   IsValidKPP      , 'КПП по месту учета'    )

      #_IfNotValidVis_Min(XMLAdrJ + '/ПредИнвВыч' , 'Стр. 030')
      #_IfNotValidVis_Min(XMLAdrJ + '/ВозмИнвВыч' , 'Стр. 040')

      if GetFldVis(XMLAdrJ + '/МаксИнвВыч')
      {
        #_IfNotValidVis_Min(XMLAdrJ + '/МаксИнвВыч/МаксИнвВычВс', 'Стр. 010')
        #_IfNotValidVis_Min(XMLAdrJ + '/МаксИнвВыч/МаксИнвВыч01', 'Стр. 011')
        #_IfNotValidVis_Min(XMLAdrJ + '/МаксИнвВыч/МаксИнвВыч02', 'Стр. 012')
        #_IfNotValidVis_Min(XMLAdrJ + '/МаксИнвВыч/МаксИнвВыч03', 'Стр. 013')
        #_IfNotValidVis_Min(XMLAdrJ + '/МаксИнвВыч/МаксИнвВыч04', 'Стр. 014')
        #_IfNotValidVis_Min(XMLAdrJ + '/МаксИнвВыч/МаксИнвВыч05', 'Стр. 015')
        #_IfNotValidVis_Min(XMLAdrJ + '/МаксИнвВыч/МаксИнвВыч06', 'Стр. 016')
      }

      if GetFldVis(XMLAdrJ + '/ОстИнвВыч')
      {
        #_IfNotValidVis_Min(XMLAdrJ + '/ОстИнвВыч/ОстИнвВычВс', 'Стр. 020')

        CountK := XMLMap.GetNodeCountByName(XMLAdrJ + '/ОстИнвВыч/ОстИнвВычРасх');
        for (k := 0; k < CountK; k++)
        {
          XMLAdrK := XMLAdrJ + '/ОстИнвВыч/ОстИнвВычРасх' + getIter(k);
          if not GetFldVis(XMLAdrK) Continue;

          #_IfNotValidVis    (XMLAdrK + '/КодРасх', IsValidKodRasch, 'Стр. 0'+(k+21))
          #_IfNotValidVis_Min(XMLAdrK + '/СумРасх',                  'Стр. 0'+(k+21))
        }
      }

      if GetFldVis(XMLAdrJ + '/СумИнвВыч')
      {
        #_IfNotValidVis_Min(XMLAdrJ + '/СумИнвВыч/СумИнвВычВс', 'Стр. 050')

        CountK := XMLMap.GetNodeCountByName(XMLAdrJ + '/СумИнвВыч/СумИнвВычРасх');
        for (k := 0; k < CountK; k++)
        {
          XMLAdrK := XMLAdrJ + '/СумИнвВыч/СумИнвВычРасх' + getIter(k);
          if not GetFldVis(XMLAdrK) Continue;

          #_IfNotValidVis    (XMLAdrK + '/КодРасх', IsValidKodRasch, 'Стр. 0'+(k+51))
          #_IfNotValidVis_Min(XMLAdrK + '/СумРасх',                  'Стр. 0'+(k+51))
        }
      }

      if GetFldVis(XMLAdrJ + '/НеучИнвВыч')
      {
        #_IfNotValidVis_Min(XMLAdrJ + '/НеучИнвВыч/НеучИнвВычВс', 'Стр. 060')

        CountK := XMLMap.GetNodeCountByName(XMLAdrJ + '/НеучИнвВыч/НеучИнвВычРасх');
        for (k := 0; k < CountK; k++)
        {
          XMLAdrK := XMLAdrJ + '/НеучИнвВыч/НеучИнвВычРасх' + getIter(k);
          if not GetFldVis(XMLAdrK) Continue;

          #_IfNotValidVis    (XMLAdrK + '/КодРасх', IsValidKodRasch, 'Стр. 0'+(k+61))
          #_IfNotValidVis_Min(XMLAdrK + '/СумРасх',                  'Стр. 0'+(k+61))
        }
      }
    }

    // #region Файл/Документ/Прибыль/РасчНал/ИнвНалВыч/ПредВелИнвНеОб  ПРИЛОЖЕНИЕ 7 К ЛИСТУ 02 РАЗДЕЛ Б
    CountJ := XMLMap.GetNodeCountByName(XMLAdrI + '/ИнвНалВыч/ПредВелИнвНеОб');
    for (j := 0; j < CountJ; j++)
    {
      XMLAdrJ := XMLAdrI + '/ИнвНалВыч/ПредВелИнвНеОб' + getIter(j);

      if not GetFldVis(XMLAdrJ) Continue;

      #_IfNotValid_Min(XMLAdrJ + '/НалБаза120'  , 'Стр. 010')
      #_IfNotValid_Min(XMLAdrJ + '/СтавНалИнв'  , 'Стр. 020')
      #_IfNotValid_Min(XMLAdrJ + '/ПредВеличИнв', 'Стр. 040')

      if GetFldVis(XMLAdrJ + '/СумНалСуб')
      {
        #_IfNotValid_Min(XMLAdrJ + '/СумНалСуб/СумНалСуб200' , 'Стр. 030')
        #_IfNotValid_Min(XMLAdrJ + '/СумНалСуб/СумНалСубСтав', 'Стр. 031')
      }
    }
    // #endregion Файл/Документ/Прибыль/РасчНал/ИнвНалВыч/ПредВелИнвНеОб  ПРИЛОЖЕНИЕ 7 К ЛИСТУ 02 РАЗДЕЛ Б

    // #region Файл/Документ/Прибыль/РасчНал/ИнвНалВыч/ПредВелИнвОб  ПРИЛОЖЕНИЕ 7 К ЛИСТУ 02 РАЗДЕЛ В
    CountJ := XMLMap.GetNodeCountByName(XMLAdrI + '/ИнвНалВыч/ПредВелИнвОб');
    for (j := 0; j < CountJ; j++)
    {
      XMLAdrJ := XMLAdrI + '/ИнвНалВыч/ПредВелИнвОб' + getIter(j);

      if not GetFldVis(XMLAdrJ) Continue;

      #_IfNotValid    (XMLAdrJ + '/ОбРасч',    IsValidObRasch  , 'Расчет составлен (код)')
      #_IfNotValid    (XMLAdrJ + '/КППМест',   IsValidKPP      , 'КПП по месту учета'    )

      #_IfNotValid_Min(XMLAdrJ + '/НалБазаДоля' , 'Стр. 010')
      #_IfNotValid_Min(XMLAdrJ + '/СтавНалРасч' , 'Стр. 020')
      #_IfNotValid_Min(XMLAdrJ + '/ПредВелИнв'  , 'Стр. 040')

      #_IfNotValid_Min(XMLAdrJ + '/СумНалСуб/СумНалСуб070' , 'Стр. 030')
      #_IfNotValid_Min(XMLAdrJ + '/СумНалСуб/СумНалСубСтав', 'Стр. 031')
    }
    // #endregion Файл/Документ/Прибыль/РасчНал/ИнвНалВыч/ПредВелИнвОб  ПРИЛОЖЕНИЕ 7 К ЛИСТУ 02 РАЗДЕЛ В

    // #region Файл/Документ/Прибыль/РасчНал/ИнвНалВыч/УмСумИнвВыч  ПРИЛОЖЕНИЕ 7 К ЛИСТУ 02 РАЗДЕЛ Г
    flJ := False;
    CountJ := XMLMap.GetNodeCountByName(XMLAdrI + '/ИнвНалВыч/УмСумИнвВыч');
    for (j := 0; j < CountJ; j++)
    {
      XMLAdrJ := XMLAdrI + '/ИнвНалВыч/УмСумИнвВыч' + getIter(j);

      if not GetFldVis(XMLAdrJ) Continue;

      #_IfNotValid    (XMLAdrJ + '/ОбРасч',    IsValidObRasch  , 'Расчет составлен (код)')
      #_IfNotValid    (XMLAdrJ + '/КППМест',   IsValidKPP      , 'КПП по месту учета'    )

      #_IfNotValid_Min   (XMLAdrJ + '/СумИсчНал'    , 'Стр. 010')
      #_IfNotValidVis_Min(XMLAdrJ + '/РасчСумНалОб' , 'Стр. 011')
      #_IfNotValidVis_Min(XMLAdrJ + '/СумРасхУмНеОб', 'Стр. 030')
      #_IfNotValidVis_Min(XMLAdrJ + '/СумРасхУмОб'  , 'Стр. 031')
      #_IfNotValidVis_Min(XMLAdrJ + '/СумРасхУмФед' , 'Стр. 040')

      if GetFldVis(XMLAdrJ + '/РасхРасчУм/РасхРасчУмВс')
      {
        #_IfNotValid_Min   (XMLAdrJ + '/РасхРасчУм/РасхРасчУмВс', 'Стр. 020')
        #_IfNotValidVis_Min(XMLAdrJ + '/РасхРасчУм/РасхСоор'    , 'Стр. 021')
        #_IfNotValidVis_Min(XMLAdrJ + '/РасхРасчУм/РасхДооб'    , 'Стр. 022')
        #_IfNotValidVis_Min(XMLAdrJ + '/РасхРасчУм/РасхСозд'    , 'Стр. 023')
      }

      if GetFldVis(XMLAdrJ + '/СумРасхУм/СумРасхУм')
      {
        #_IfNotValid_Min   (XMLAdrJ + '/СумРасхУм/СумРасхУм'   , 'Стр. 050')
        #_IfNotValidVis_Min(XMLAdrJ + '/СумРасхУм/СумРасхУм021', 'Стр. 051')
        #_IfNotValidVis_Min(XMLAdrJ + '/СумРасхУм/СумРасхУм022', 'Стр. 052')
        #_IfNotValidVis_Min(XMLAdrJ + '/СумРасхУм/СумРасхУм023', 'Стр. 053')
      }
    }
    // #endregion Файл/Документ/Прибыль/РасчНал/ИнвНалВыч/РасчИнвВыч  ПРИЛОЖЕНИЕ 7 К ЛИСТУ 02 РАЗДЕЛ Г
    // #endregion Файл/Документ/Прибыль/РасчНал/ИнвНалВыч/  ПРИЛОЖЕНИЕ 7 К ЛИСТУ 02
  }
  // #endregion Лист 02

  // #region Приложение 5 к Листу 02
  CountI := XMLMAP.GetNodeCountByName('Файл/Документ/Прибыль/РаспрНалСубРФ');
  for (i := 0; i < CountI; i++)
  {
    XMLAdrI := 'Файл/Документ/Прибыль/РаспрНалСубРФ' + getIter(i);

    if not GetFldVis(XMLAdrI) Continue;

    // #region ИЗ ИНСТРУКЦИ. П.10.8. Строки 120 Приложений N 5 к Листу 02 Декларации в Декларациях за налоговый период не заполняются

    if (NalPer_God)
    {
      if not GetStrNull(XMLAdrI + '/МесАвПлат')
        MessageErrorStop_ALG (
          XMLAdrI + '/МесАвПлат'
        , 'Стр. 120'
        , 'Строка 120 Приложения 5 к Листу 02 Декларации в декларации за налоговый период не заполняются'
        );
    }

    // #endregion ИЗ ИНСТРУКЦИ. П.10.8. Строки 120 Приложений N 5 к Листу 02 Декларации в Декларациях за налоговый период не заполняются

    #_IfNotValid       (XMLAdrI + '/ТипНП'           , IsValidTipNP_n3    , 'Признак налогоплательщика (код)'        )
    #_IfNotValid       (XMLAdrI + '/ОбРасч'          , IsValidObRasch     , 'Расчет составлен (код)'                 )
    #_IfNotValid       (XMLAdrI + '/КППОП'           , IsValidKPP         , 'КПП'                                    )
    #_IfNotValid       (XMLAdrI + '/ОбязУплНалОП'    , IsValidObyzUplNalOP, 'Возложение обязанности по уплате налога')
    #_IfNotValid       (XMLAdrI + '/НаимОП'          , IsStr_1_1000       , 'Наименование'                           )
    #_IfNotValidVis    (XMLAdrI + '/НалБазаОрг'      , IsInt_1_15         , 'Стр. 030'                               )
    #_IfNotValidVis    (XMLAdrI + '/НалБазаБезЛиквОП', IsInt_1_15         , 'Стр. 031'                               )
    #_IfNotValidVis    (XMLAdrI + '/ДоляНалБаз'      , IsDbl_3_15         , 'Стр. 040'                               )
    #_IfNotValidVis    (XMLAdrI + '/НалБазаДоля'     , IsInt_1_15         , 'Стр. 050'                               )
    #_IfNotValidVis    (XMLAdrI + '/НалБазаДоляПнСт' , IsInt_1_15         , 'Стр. 051'                               )
    #_IfNotValidVis    (XMLAdrI + '/СтавНалСубРФ'    , IsDbl_2_3          , 'Стр. 060'                               )
    #_IfNotValidVis    (XMLAdrI + '/СумНал'          , IsInt_1_15         , 'Стр. 070'                               )
    #_IfNotValidVis    (XMLAdrI + '/НалНачислСубРФ'  , IsInt_1_15         , 'Стр. 080'                               )
    #_IfNotValidVis    (XMLAdrI + '/НалВыплВнеРФ'    , IsInt_1_15         , 'Стр. 090'                               )
    #_IfNotValidVis    (XMLAdrI + '/ТСУплНачПер'     , IsInt_1_15         , 'Стр. 095'                               )
    #_IfNotValidVis    (XMLAdrI + '/ТСУменАвПред'    , IsInt_1_15         , 'Стр. 096'                               )
    #_IfNotValidVis    (XMLAdrI + '/ТСУменАвОтч'     , IsInt_1_15         , 'Стр. 097'                               )
    #_IfNotValidVis_Min(XMLAdrI + '/СумНалП'                              , 'Стр. 100|110'                           )
    #_IfNotValidVis    (XMLAdrI + '/МесАвПлат'       , IsInt_1_15         , 'Стр. 120'                               )
    #_IfNotValidVis    (XMLAdrI + '/МесАвПлат1КвСлед', IsInt_1_15         , 'Стр. 121'                               )
  }

  // #endregion Приложение 5 к Листу 02

  // #region Лист 03

  if GetFldVis('Файл/Документ/Прибыль/НалУдНА')
  {
    // #region Лист 03. Раздел А

    CountI := XMLMAP.GetNodeCountByName('Файл/Документ/Прибыль/НалУдНА/НалДохДив');
    for (i := 0; i < CountI; i++)
    {
      XMLAdrI := 'Файл/Документ/Прибыль/НалУдНА/НалДохДив' + getIter(i);

      if not GetFldVis(XMLAdrI) Continue;

      #_IfNotValid   (XMLAdrI + '/КатегорНА'  , IsValidKategorNA   , 'Категория налогового агента'      )
      #_IfNotValidVis(XMLAdrI + '/ИННЮЛ_ЭмЦБ' , IsValidINNUL       , 'ИНН орг. - эмитента ценных бумаг' )
      #_IfNotValidVis(XMLAdrI + '/ИННЮЛ_ЭмЦБ' , CheckError.Prov_INN, 'ИНН орг. - эмитента ценных бумаг' )
      #_IfNotValid   (XMLAdrI + '/ВидДив'     , IsValidVidDiv      , 'Вид диведентов'                   )
      #_IfNotValid   (XMLAdrI + '/НалПер'     , IsValidNalPer      , 'Налоговый (отчетный) период (код)')
      #_IfNotValid   (XMLAdrI + '/ОтчетГод'   , IsValidOtchGod     , 'Отчетный год'                     )
      #_IfNotValid   (XMLAdrI + '/ДивРаспрПол', IsInt_1_15         , 'Стр. 001')
      #_IfNotValid   (XMLAdrI + '/ДивВсего'   , IsInt_1_15         , 'Стр. 010')
      #_IfNotValidVis(XMLAdrI + '/ДивФЛРез'   , IsInt_1_15         , 'Стр. 030')
      #_IfNotValidVis(XMLAdrI + '/ДивНеДоход' , IsInt_1_15         , 'Стр. 070')
      #_IfNotValidVis(XMLAdrI + '/ДивРаспрУм' , IsInt_1_15         , 'Стр. 090')
      #_IfNotValidVis(XMLAdrI + '/НалИсчисл'  , IsInt_1_15         , 'Стр. 100')
      #_IfNotValidVis(XMLAdrI + '/НалДивПред' , IsInt_1_15         , 'Стр. 110')
      #_IfNotValidVis(XMLAdrI + '/НалДивПосл' , IsInt_1_15         , 'Стр. 120')

      // XMLAdrI + '/Формула_Л03_Стр090' // !!!

      if GetFldVis(XMLAdrI + '/ДивРосОрг') {
        #_IfNotValid   (XMLAdrI + '/ДивРосОрг/ДивРосОргВс' , IsInt_1_15, 'Стр. 020')
        #_IfNotValidVis(XMLAdrI + '/ДивРосОрг/ДивРосСтав0' , IsInt_1_15, 'Стр. 021')
        #_IfNotValidVis(XMLAdrI + '/ДивРосОрг/ДивРосСтав13', IsInt_1_15, 'Стр. 022')
        #_IfNotValidVis(XMLAdrI + '/ДивРосОрг/ДивРосСтавИн', IsInt_1_15, 'Стр. 023')
        #_IfNotValidVis(XMLAdrI + '/ДивРосОрг/ДивРосНеНП'  , IsInt_1_15, 'Стр. 034')
      }

      if GetFldVis(XMLAdrI + '/ДивИнОрг') {
        #_IfNotValidVis(XMLAdrI + '/ДивИнОрг/ДивИнОргВс' , IsInt_1_15, 'Стр. 040')
        #_IfNotValidVis(XMLAdrI + '/ДивИнОрг/ДивИнОргРос', IsInt_1_15, 'Стр. 041')
      }

      if GetFldVis(XMLAdrI + '/ДивФЛНеРез') {
        #_IfNotValidVis(XMLAdrI + '/ДивФЛНеРез/ДивФЛНеРезВс' , IsInt_1_15, 'Стр. 050')
        #_IfNotValidVis(XMLAdrI + '/ДивФЛНеРез/ДивФЛСтав0'   , IsInt_1_15, 'Стр. 051')
        #_IfNotValidVis(XMLAdrI + '/ДивФЛНеРез/ДивФЛСтав5'   , IsInt_1_15, 'Стр. 052')
        #_IfNotValidVis(XMLAdrI + '/ДивФЛНеРез/ДивФЛСтав10'  , IsInt_1_15, 'Стр. 053')
        #_IfNotValidVis(XMLAdrI + '/ДивФЛНеРез/ДивФЛСтавСв10', IsInt_1_15, 'Стр. 054')
      }

      if GetFldVis(XMLAdrI + '/ДивНА') {
        #_IfNotValidVis(XMLAdrI + '/ДивНА/ДивНАдоРас' , IsInt_1_15, 'Стр. 080')
        #_IfNotValidVis(XMLAdrI + '/ДивНА/ДивНАБезУч0', IsInt_1_15, 'Стр. 081')
      }

      if GetFldVis(XMLAdrI + '/ДивНал') {
        #_IfNotValidVis(XMLAdrI + '/ДивНал/ДивНал13', IsInt_1_15, 'Стр. 091')
        #_IfNotValidVis(XMLAdrI + '/ДивНал/ДивНал0' , IsInt_1_15, 'Стр. 092')
      }

      // #region Лист 03. Раздел В

      CountJ := XMLMAP.GetNodeCountByName(XMLAdrI + '/РеестрСумДив');
      for (j := 0; j < CountJ; j++)
      {
        XMLAdrJ := XMLAdrI + '/РеестрСумДив' + getIter(j);

        if not GetFldVis(XMLAdrJ) Continue;

        #_IfNotValid   (XMLAdrJ + '/ПрПринадл' , IsValidPrPrinadlA  , 'Признак пренадлежности')
        #_IfNotValid   (XMLAdrJ + '/ИННПолуч'  , IsValidINNUL       , 'ИНН получателя'        )
        #_IfNotValid   (XMLAdrJ + '/ИННПолуч'  , CheckError.Prov_INN, 'ИНН получателя'        )
        #_IfNotValidVis(XMLAdrJ + '/КПППолуч'  , IsValidKPP         , 'КПП'                   )
        #_IfNotValid   (XMLAdrJ + '/Тип'       , IsValidTip         , 'Тип'                   )
        #_IfNotValid   (XMLAdrJ + '/НаимПолуч' , IsStr_1_1000       , 'Стр. 010'              )
        #_IfNotValidVis(XMLAdrJ + '/Тлф'       , IsStr_1_20         , 'Стр. 030'              )
        #_IfNotValid   (XMLAdrJ + '/ДатаПерДив', IsValidDate        , 'Стр. 040'              )
        #_IfNotValid   (XMLAdrJ + '/СумДив'    , IsInt_1_15         , 'Стр. 050'              )
        #_IfNotValid   (XMLAdrJ + '/СумНал'    , IsInt_1_15         , 'Стр. 060'              )

        if GetFldVis(XMLAdrJ + '/ФИОРук') {
          #_IfNotValid   (XMLAdrJ + '/ФИОРук/Фамилия' , IsValidFIO, 'Стр. 020, Фамилия' )
          #_IfNotValid   (XMLAdrJ + '/ФИОРук/Имя'     , IsValidFIO, 'Стр. 020, Имя'     )
          #_IfNotValidVis(XMLAdrJ + '/ФИОРук/Отчество', IsValidFIO, 'Стр. 020, Отчество')
        }
      }

      // #endregion Лист 03. Раздел В
    }

    // #endregion Лист 03. Раздел А

    // #region Лист 03. Раздел Б

    CountI := XMLMAP.GetNodeCountByName('Файл/Документ/Прибыль/НалУдНА/НалДохЦБ');
    for (i := 0; i < CountI; i++)
    {
      XMLAdrI := 'Файл/Документ/Прибыль/НалУдНА/НалДохЦБ' + getIter(i);

      if not GetFldVis(XMLAdrI) Continue;

      #_IfNotValid   (XMLAdrI + '/ВидДоход'     , IsValidVidDohod_n1, 'Вид дохода')
      #_IfNotValid   (XMLAdrI + '/НалБаза'      , IsInt_1_15        , 'Стр. 010'  )
      #_IfNotValid   (XMLAdrI + '/СтавНал'      , IsInt_1_2         , 'Стр. 020'  )
      #_IfNotValid   (XMLAdrI + '/НалИсчисл'    , IsInt_1_15        , 'Стр. 030'  )
      #_IfNotValidVis(XMLAdrI + '/НалНачислПред', IsInt_1_15        , 'Стр. 040'  )
      #_IfNotValidVis(XMLAdrI + '/НалНачислПосл', IsInt_1_15        , 'Стр. 050'  )

      // #region Лист 03. Раздел В

      CountJ := XMLMAP.GetNodeCountByName(XMLAdrI + '/РеестрСумДив');
      for (j := 0; j < CountJ; j++)
      {
        XMLAdrJ := XMLAdrI + '/РеестрСумДив' + getIter(j);

        if not GetFldVis(XMLAdrJ) Continue;

        #_IfNotValid   (XMLAdrJ + '/ПрПринадл' , IsValidPrPrinadlB  , 'Признак пренадлежности')
        #_IfNotValid   (XMLAdrJ + '/ИННПолуч'  , IsValidINNUL       , 'ИНН получателя'        )
        #_IfNotValid   (XMLAdrJ + '/ИННПолуч'  , CheckError.Prov_INN, 'ИНН получателя'        )
        #_IfNotValidVis(XMLAdrJ + '/КПППолуч'  , IsValidKPP         , 'КПП'                   )
        #_IfNotValid   (XMLAdrJ + '/Тип'       , IsStr_2            , 'Тип'                   )
        #_IfNotValid   (XMLAdrJ + '/НаимПолуч' , IsStr_1_1000       , 'Стр. 010'              )
        #_IfNotValidVis(XMLAdrJ + '/Тлф'       , IsStr_1_20         , 'Стр. 030'              )
        #_IfNotValid   (XMLAdrJ + '/ДатаПерДив', IsStr_10           , 'Стр. 040'              )
        #_IfNotValid   (XMLAdrJ + '/СумДив'    , IsInt_1_15         , 'Стр. 050'              )
        #_IfNotValid   (XMLAdrJ + '/СумНал'    , IsInt_1_15         , 'Стр. 060'              )

        if GetFldVis(XMLAdrJ + '/ФИОРук') {
          #_IfNotValid   (XMLAdrJ + '/ФИОРук/Фамилия' , IsValidFIO, 'Стр. 020, Фамилия' )
          #_IfNotValid   (XMLAdrJ + '/ФИОРук/Имя'     , IsValidFIO, 'Стр. 020, Имя'     )
          #_IfNotValidVis(XMLAdrJ + '/ФИОРук/Отчество', IsValidFIO, 'Стр. 020, Отчество')
        }
      }

      // #endregion Лист 03. Раздел В
    }

    // #endregion Лист 03. Раздел Б
  }

  // #endregion Лист 03

  // #region Лист 04

  CountI := XMLMAP.GetNodeCountByName('Файл/Документ/Прибыль/НалДохСтав');
  for (i := 0; i < CountI; i++)
  {
    XMLAdrI := 'Файл/Документ/Прибыль/НалДохСтав' + getIter(i);

    if not GetFldVis(XMLAdrI) Continue;

    #_IfNotValid   (XMLAdrI + '/ВидДоход'      , IsValidVidDohod_n2, 'Вид дохода')
    #_IfNotValid   (XMLAdrI + '/НалБаза'       , IsInt_1_15        , 'Стр. 010'  )
    #_IfNotValidVis(XMLAdrI + '/ДохУмНалБаз'   , IsInt_1_15        , 'Стр. 020'  )
    #_IfNotValid   (XMLAdrI + '/СтавНал'       , IsInt_1_2         , 'Стр. 030'  )
    #_IfNotValid   (XMLAdrI + '/НалИсчисл'     , IsInt_1_15        , 'Стр. 040'  )
    #_IfNotValidVis(XMLAdrI + '/НалДивНеРФПред', IsInt_1_15        , 'Стр. 050'  )
    #_IfNotValidVis(XMLAdrI + '/НалДивНеРФ'    , IsInt_1_15        , 'Стр. 060'  )
    #_IfNotValidVis(XMLAdrI + '/НалНачислПред' , IsInt_1_15        , 'Стр. 070'  )
    #_IfNotValidVis(XMLAdrI + '/НалНачислПосл' , IsInt_1_15        , 'Стр. 080'  )
  }

  // #endregion Лист 04

  // #region Лист 05

  CountI := XMLMAP.GetNodeCountByName('Файл/Документ/Прибыль/НалБазОпОсобН');
  for (i := 0; i < CountI; i++)
  {
    XMLAdrI := 'Файл/Документ/Прибыль/НалБазОпОсобН' + getIter(i);

    if not GetFldVis(XMLAdrI) Continue;

    #_IfNotValid       (XMLAdrI + '/ВидОпер'          , IsValidVidOper, 'Вид операции')
    #_IfNotValidVis    (XMLAdrI + '/ДохВыбыт'         , IsInt_1_15    , 'Стр. 010'    )
    #_IfNotValidVis    (XMLAdrI + '/ДохВыбЦБНеОрг'    , IsInt_1_15    , 'Стр. 011'    )
    #_IfNotValidVis    (XMLAdrI + '/ДохЦБНеОргМин'    , IsInt_1_15    , 'Стр. 012'    )
    #_IfNotValidVis    (XMLAdrI + '/ДохВыбФИССНеОрг'  , IsInt_1_15    , 'Стр. 013'    )
    #_IfNotValidVis    (XMLAdrI + '/ДохФИССНеОргМин'  , IsInt_1_15    , 'Стр. 014'    )
    #_IfNotValidVis    (XMLAdrI + '/РасхПриобРеал'    , IsInt_1_15    , 'Стр. 020'    )
    #_IfNotValidVis    (XMLAdrI + '/РасхЦБНеОрг'      , IsInt_1_15    , 'Стр. 021'    )
    #_IfNotValidVis    (XMLAdrI + '/РасхЦБНеОргМакс'  , IsInt_1_15    , 'Стр. 022'    )
    #_IfNotValidVis    (XMLAdrI + '/РасхФИССНеОрг'    , IsInt_1_15    , 'Стр. 023'    )
    #_IfNotValidVis    (XMLAdrI + '/РасхФИССНеОргМакс', IsInt_1_15    , 'Стр. 024'    )
    #_IfNotValid_Min   (XMLAdrI + '/Прибыль'                          , 'Стр. 040'    )
    #_IfNotValidVis_Min(XMLAdrI + '/КорПриб'                          , 'Стр. 050'    )
    #_IfNotValidVis    (XMLAdrI + '/НалБазаБезУбПред' , IsInt_1_15    , 'Стр. 060'    )
    #_IfNotValidVis    (XMLAdrI + '/СумУбытУменНБ'    , IsInt_1_15    , 'Стр. 080'    )
    #_IfNotValid       (XMLAdrI + '/НалБаза'          , IsInt_1_15    , 'Стр. 100'    )
  }

  // #endregion Лист 05

  // #region Лист 06

  if GetFldVis('Файл/Документ/Прибыль/ДохРасНалБазаНПФ') {
    #_IfNotValid   ('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/СумПенсРез'    , IsInt_1_15, 'Стр. 120')
    #_IfNotValidVis('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ПроцДохРазмРез', IsDbl_3_4 , 'Стр. 230')
    #_IfNotValidVis('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/НалБаза'       , IsInt_1_15, 'Стр. 530')

    {
      #_IfNotValid   ('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ДоходНПФ/ДоходНПФВс'     , IsInt_1_15, 'Стр. 010')
      #_IfNotValidVis('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ДоходНПФ/РеалЦБРын'      , IsInt_1_15, 'Стр. 020')
      #_IfNotValidVis('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ДоходНПФ/ОтклВырЦБРын'   , IsInt_1_15, 'Стр. 030')
      #_IfNotValidVis('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ДоходНПФ/РеалЦБНеРын'    , IsInt_1_15, 'Стр. 040')
      #_IfNotValidVis('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ДоходНПФ/ОтклВырЦБНеРын' , IsInt_1_15, 'Стр. 050')
      #_IfNotValidVis('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ДоходНПФ/ПроцГосЦБ'      , IsInt_1_15, 'Стр. 060')
      #_IfNotValidVis('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ДоходНПФ/ПроцЦБЭм2007'   , IsInt_1_15, 'Стр. 070')
      #_IfNotValidVis('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ДоходНПФ/ДолУчДрОрг'     , IsInt_1_15, 'Стр. 080')
      #_IfNotValidVis('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ДоходНПФ/ПроцГосЦБУдНА'  , IsInt_1_15, 'Стр. 090')
      #_IfNotValidVis('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ДоходНПФ/ПроцМунЦБ2007НА', IsInt_1_15, 'Стр. 100')
      #_IfNotValidVis('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ДоходНПФ/ДрИнвВлож'      , IsInt_1_15, 'Стр. 110')
    }

    {
      #_IfNotValid   ('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ДоходНПФСтРеф/ДоходНПФСтРефВс', IsInt_1_15, 'Стр. 130')
      #_IfNotValidVis('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ДоходНПФСтРеф/ЦБРын'          , IsInt_1_15, 'Стр. 140')
      #_IfNotValidVis('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ДоходНПФСтРеф/ЦБНеРын'        , IsInt_1_15, 'Стр. 150')
      #_IfNotValidVis('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ДоходНПФСтРеф/ПроцГосЦБ'      , IsInt_1_15, 'Стр. 160')
      #_IfNotValidVis('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ДоходНПФСтРеф/ПроцЦБЭм2007'   , IsInt_1_15, 'Стр. 170')
      #_IfNotValidVis('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ДоходНПФСтРеф/ДрИнвВлож'      , IsInt_1_15, 'Стр. 180')
    }

    if GetFldVis('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/Расход')
    {
      #_IfNotValid   ('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/Расход/РасходВс'      , IsInt_1_15, 'Стр. 190')
      #_IfNotValidVis('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/Расход/ВлЦБРын'       , IsInt_1_15, 'Стр. 200')
      #_IfNotValidVis('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/Расход/СумОтклЦБРын'  , IsInt_1_15, 'Стр. 201')
      #_IfNotValidVis('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/Расход/ВлЦБНеРын'     , IsInt_1_15, 'Стр. 210')
      #_IfNotValidVis('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/Расход/СумОтклЦБНеРын', IsInt_1_15, 'Стр. 211')
      #_IfNotValidVis('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/Расход/ДрИнвВлож'     , IsInt_1_15, 'Стр. 220')
    }

    if GetFldVis('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ОтчРазмРезУстав') {
      #_IfNotValid   ('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ОтчРазмРезУстав/ОтчРазмРезУставФонд', IsInt_1_15, 'Стр. 240')
      #_IfNotValid   ('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ОтчРазмРезУстав/ОтчРазмРезУстав'    , IsInt_1_15, 'Стр. 241')
      #_IfNotValid   ('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ОтчРазмРезУстав/ОтчРазмРезСтрРез'   , IsInt_1_15, 'Стр. 242')
      #_IfNotValidVis('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ОтчРазмРезУстав/ЦБРын'              , IsInt_1_15, 'Стр. 250')
      #_IfNotValidVis('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ОтчРазмРезУстав/ЦБНеРын'            , IsInt_1_15, 'Стр. 260')
      #_IfNotValidVis('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ОтчРазмРезУстав/ПроцЦБ'             , IsInt_1_15, 'Стр. 270')
      #_IfNotValidVis('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ОтчРазмРезУстав/ПроцЦБЭм2007'       , IsInt_1_15, 'Стр. 280')
      #_IfNotValidVis('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ОтчРазмРезУстав/ДолУчДрОрг'         , IsInt_1_15, 'Стр. 290')
      #_IfNotValidVis('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ОтчРазмРезУстав/ПроцЦБУдНА'         , IsInt_1_15, 'Стр. 300')
      #_IfNotValidVis('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ОтчРазмРезУстав/ПроцЦБЭм2007УдНА'   , IsInt_1_15, 'Стр. 310')
      #_IfNotValidVis('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ОтчРазмРезУстав/ДрИнвВлож'          , IsInt_1_15, 'Стр. 320')
    }

    {
      #_IfNotValidVis_Min('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ПрибУб/ПрибЦБРын'                     , 'Стр. 330')
      #_IfNotValidVis    ('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ПрибУб/СумИсклПрибЦБРын'  , IsInt_1_15, 'Стр. 340')
      #_IfNotValidVis_Min('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ПрибУб/ПрибЦБНеРын'                   , 'Стр. 350')
      #_IfNotValidVis    ('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ПрибУб/СумИсклПрибЦБНеРын', IsInt_1_15, 'Стр. 360')
      #_IfNotValidVis    ('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ПрибУб/ДохПроцЦБ'         , IsInt_1_15, 'Стр. 370')
      #_IfNotValidVis    ('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ПрибУб/ДохПроцЭм2007'     , IsInt_1_15, 'Стр. 380')
      #_IfNotValidVis_Min('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ПрибУб/ДрИнвВлож'                     , 'Стр. 390')
      #_IfNotValidVis    ('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ПрибУб/СумИсклДрИнвВлож'  , IsInt_1_15, 'Стр. 400')
    }

    if GetFldVis('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ВлЦБОргНеРын')
    {
      #_IfNotValidVis('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ВлЦБОргНеРын/НалБаза'        , IsInt_1_15, 'Стр. 450')
      #_IfNotValidVis('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ВлЦБОргНеРын/ОстУбСдНеОбр'   , IsInt_1_15, 'Стр. 458')
      #_IfNotValidVis('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ВлЦБОргНеРын/ОстУбСдНеОбрНач', IsInt_1_15, 'Стр. 459')
      #_IfNotValidVis('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ВлЦБОргНеРын/СумУбПред'      , IsInt_1_15, 'Стр. 460')
      #_IfNotValidVis('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ВлЦБОргНеРын/СумУбПриз'      , IsInt_1_15, 'Стр. 470')
      #_IfNotValidVis('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ВлЦБОргНеРын/СумУбПриз458'   , IsInt_1_15, 'Стр. 471')
      #_IfNotValidVis('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ВлЦБОргНеРын/СумНеучУбыт'    , IsInt_1_15, 'Стр. 480')
      #_IfNotValidVis('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ВлЦБОргНеРын/ОстУбыт458'     , IsInt_1_15, 'Стр. 481')
    }

    if GetFldVis('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ДрИнвВлож')
    {
      #_IfNotValidVis('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ДрИнвВлож/НалБаза'    , IsInt_1_15, 'Стр. 490')
      #_IfNotValidVis('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ДрИнвВлож/СумУбПред'  , IsInt_1_15, 'Стр. 500')
      #_IfNotValidVis('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ДрИнвВлож/СумУбПриз'  , IsInt_1_15, 'Стр. 510')
      #_IfNotValidVis('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ДрИнвВлож/СумНеучУбыт', IsInt_1_15, 'Стр. 520')
    }
  }

  // #endregion Лист 06

  // #region Лист 07

  if GetFldVis('Файл/Документ/Прибыль/ЦелИспИмущ') {
    #_IfNotValid   ('Файл/Документ/Прибыль/ЦелИспИмущ/СтИмущСрдИт'   , IsInt_1_15, 'Итого, гр. 3')
    #_IfNotValidVis('Файл/Документ/Прибыль/ЦелИспИмущ/СумИспНазнИт'  , IsInt_1_15, 'Итого, гр. 4')
    #_IfNotValidVis('Файл/Документ/Прибыль/ЦелИспИмущ/СумСрокНеИстИт', IsInt_1_15, 'Итого, гр. 6')
    #_IfNotValidVis('Файл/Документ/Прибыль/ЦелИспИмущ/СумНеИспИт'    , IsInt_1_15, 'Итого, гр. 7')

    var str : string = '';
    flI := False;

    CountI := XMLMAP.GetNodeCountByName('Файл/Документ/Прибыль/ЦелИспИмущ/СвЦелСред07');
    for (i := 0; i < CountI; i++)
    {
      XMLAdrI := 'Файл/Документ/Прибыль/ЦелИспИмущ/СвЦелСред07' + getIter(i);

      if not GetFldVis(XMLAdrI) Continue;
      flI := True;

      str := LPadCh(String(i+1), '0', 2);

      #_IfNotValid   (XMLAdrI + '/КодВидПост'  , IsStr_3          , 'Стр. '+str+', гр. 1')
      #_IfNotValid   (XMLAdrI + '/КодВидПост'  , IsValidKodVidPost, 'Стр. '+str+', гр. 1')
      #_IfNotValidVis(XMLAdrI + '/ДатаПост'    , IsValidDate      , 'Стр. '+str+', гр. 2', if(i=0,-1,1))
      #_IfNotValidVis(XMLAdrI + '/СрокИспол'   , IsValidDate      , 'Стр. '+str+', гр. 5', if(i=0,-1,1))
      #_IfNotValid   (XMLAdrI + '/СтИмущСрд'   , IsInt_1_15       , 'Стр. '+str+', гр. 3', if(i=0,-1,1))
      #_IfNotValidVis(XMLAdrI + '/СумИспНазн'  , IsInt_1_15       , 'Стр. '+str+', гр. 4', if(i=0,-1,1))
      #_IfNotValidVis(XMLAdrI + '/СумСрокНеИст', IsInt_1_15       , 'Стр. '+str+', гр. 6', if(i=0,-1,1))
      #_IfNotValidVis(XMLAdrI + '/СумНеИсп'    , IsInt_1_15       , 'Стр. '+str+', гр. 7', if(i=0,-1,1))
    }

    if (not flI)
      MessageErrorStop_ALG (
        'Файл/Документ/Прибыль/ЦелИспИмущ/СвЦелСред07/КодВидПост'
      , 'Лист 07'
      , 'Ошибка выставления видимости узла "Файл/Документ/Прибыль/ЦелИспИмущ"'
      );
  }

  // #endregion Лист 07

  // #region Лист 08

  {
    var fl_122_123, fl_131_135 : boolean = False;
    var valOsn : string = '';

    CountI := XMLMAP.GetNodeCountByName('Файл/Документ/Прибыль/ДохРасхКор');
    for (i := 0; i < CountI; i++)
    {
      XMLAdrI := 'Файл/Документ/Прибыль/ДохРасхКор' + getIter(i);

      if not GetFldVis(XMLAdrI) Continue;
      fl_122_123 := fl_131_135 := False;

      #_IfNotValid   (XMLAdrI + '/ПрУчастКГН'      , IsValidPrUchastKGN, 'Признак участника консолидированной группы налогоплательщиков')
      #_IfNotValid   (XMLAdrI + '/ВидКор'          , IsValidVidKor     , 'Вид корректировки'                                            )
      #_IfNotValid   (XMLAdrI + '/СтрРегКонтрагент', IsValidOKSM       , 'Код страны регистрации конртагента'                           )
      #_IfNotValidVis(XMLAdrI + '/РегНомКонтрагент', IsStr_1_100       , 'Регистрационный номер контрагента'                            )

      if GetFldVis(XMLAdrI + '/СвУчастКГН')
      {
        #_IfNotValid(XMLAdrI + '/СвУчастКГН/ИННЮЛ_УчастКГН'     , IsValidINNUL       , 'ИНН участника КГН'       )
        #_IfNotValid(XMLAdrI + '/СвУчастКГН/ИННЮЛ_УчастКГН'     , CheckError.Prov_INN, 'ИНН участника КГН'       )
        #_IfNotValid(XMLAdrI + '/СвУчастКГН/КПП_УчастКГН'       , IsValidKPP         , 'КПП участника КГН'       )
        #_IfNotValid(XMLAdrI + '/СвУчастКГН/НаимОрг_УчастКГН'   , IsStr_1_1000       , 'Наим. орг. участника КГН')
      }

      CountJ := XMLMAP.GetNodeCountByName(XMLAdrI + '/ОснСделКонтр');
      for (j := 0; j < CountJ; j++)
      {
        XMLAdrJ := XMLAdrI + '/ОснСделКонтр' + getIter(j);

        if not GetFldVis(XMLAdrJ) Continue;

        valOsn := GetStrVal(XMLAdrJ + '/Значение');

        if (    valOsn = '122' or valOsn = '123' ) fl_122_123 := True;
        if (    valOsn = '131' or valOsn = '132'
             or valOsn = '133' or valOsn = '134'
             or valOsn = '135'                   ) fl_131_135 := True;

        #_IfNotValid(XMLAdrJ + '/Значение', IsStr_3            , 'Код основания отнесения сделки ('+String(j+1)+')', if (i=0, -1, 1))
        #_IfNotValid(XMLAdrJ + '/Значение', IsValidOsnSdelKontr, 'Код основания отнесения сделки ('+String(j+1)+')', if (i=0, -1, 1))
      }

      // ИЗ ИНСТРУКЦИ. П.15.2. При заполнении указанного реквизита коды 122 и 123 Приложения N 6 к настоящему Порядку не могут быть
      // одновременно указаны с любым из кодов 131 - 135 Приложения N 6 к настоящему Порядку.
      // #region

      if ( fl_122_123 and fl_131_135 )
      {
        MessageErrorStop_ALG (
          XMLAdrI + '/МесАвПлат'
        , 'Коды основания отнесения сделки'
        , 'Коды 122 и 123 не могут быть одновременно указаны с любым из кодов 131 - 135'
        );
      }

      // #endregion

      IsKontragent(XMLAdrI);


      if GetFldVis(XMLAdrI + '/Орг_Контрагент') {
        #_IfNotValidVis(XMLAdrI + '/Орг_Контрагент/ИННЮЛ_Контрагент'     , IsValidINNUL       , 'Контрагент: ИНН ЮЛ'           )
        #_IfNotValidVis(XMLAdrI + '/Орг_Контрагент/ИННЮЛ_Контрагент'     , CheckError.Prov_INN, 'Контрагент: ИНН ЮЛ'           )
        #_IfNotValid   (XMLAdrI + '/Орг_Контрагент/НаимОрг_Контрагент'   , IsStr_1_1000       , 'Контрагент: Наим. орг.'       )
        #_IfNotValidVis(XMLAdrI + '/Орг_Контрагент/НаимОрг_КонтрагентЛат', IsStr_1_1000       , 'Контрагент: Наим. орг. латин.')
      }

      if GetFldVis(XMLAdrI + '/ФЛ_Контрагент') {
        #_IfNotValidVis(XMLAdrI + '/ФЛ_Контрагент/ИННФЛ_Контрагент', IsValidINNFL       , 'Контрагент: ИНН ФЛ')
        #_IfNotValidVis(XMLAdrI + '/ФЛ_Контрагент/ИННФЛ_Контрагент', CheckError.Prov_INN, 'Контрагент: ИНН ФЛ')

        {
          #_IfNotValid   (XMLAdrI + '/ФЛ_Контрагент/ФИО_Контрагент/Фамилия' , IsValidFIO, 'Контрагент: Фамилия' )
          #_IfNotValid   (XMLAdrI + '/ФЛ_Контрагент/ФИО_Контрагент/Имя'     , IsValidFIO, 'Контрагент: Имя'     )
          #_IfNotValidVis(XMLAdrI + '/ФЛ_Контрагент/ФИО_Контрагент/Отчество', IsValidFIO, 'Контрагент: Отчество')

          if GetFldVis(XMLAdrI + '/ФЛ_Контрагент/ФИО_КонтрагентЛат')
          {
            #_IfNotValid   (XMLAdrI + '/ФЛ_Контрагент/ФИО_КонтрагентЛат/Фамилия' , IsValidFIO, 'Контрагент: Фамилия латин.' )
            #_IfNotValid   (XMLAdrI + '/ФЛ_Контрагент/ФИО_КонтрагентЛат/Имя'     , IsValidFIO, 'Контрагент: Имя латин.'     )
            #_IfNotValidVis(XMLAdrI + '/ФЛ_Контрагент/ФИО_КонтрагентЛат/Отчество', IsValidFIO, 'Контрагент: Отчество латин.')
          }
        }
      }

      CountJ := XMLMAP.GetNodeCountByName(XMLAdrI + '/СведСделКор');
      for (j := 0; j < CountJ; j++)
      {
        XMLAdrJ := XMLAdrI + '/СведСделКор' + getIter(j);

        if not GetFldVis(XMLAdrJ) Continue;

        #_IfNotValid   (XMLAdrJ + '/НомДог'    , IsStr_1_128     , 'Номер договора'                     )
        #_IfNotValid   (XMLAdrJ + '/ДатаДог'   , IsValidDate     , 'Дата договора'                      )
        #_IfNotValid   (XMLAdrJ + '/ТипПредСд' , IsValidTipPredSd, 'Тип предмета сделки'                )
        #_IfNotValid   (XMLAdrJ + '/НаимПредСд', IsStr_1_500     , 'Наименование предмета сделки'       )
        #_IfNotValidVis(XMLAdrJ + '/ТНВЭД'     , IsStr_10        , 'Код предмета сделки (код по ТН ВЭД)')
        #_IfNotValidVis(XMLAdrJ + '/ОКПД2'     , IsStr_2_12      , 'Код предмета сделки по ОКПД2'       )
        #_IfNotValidVis(XMLAdrJ + '/ОКВЭД2'    , IsStr_2_8       , 'Код предмета сделки по ОКВЭД2'      )
      }

      if GetFldVis(XMLAdrI + '/КорНБСдел') {
        if GetFldVis(XMLAdrI + '/КорНБСдел/ДохРеал') {
          #_IfNotValid(XMLAdrI + '/КорНБСдел/ДохРеал/Признак', IsValidPriznak, 'Стр. 010, гр. 3')
          #_IfNotValid(XMLAdrI + '/КорНБСдел/ДохРеал/Сумма'  , IsInt_1_15    , 'Стр. 010, гр. 4')
        }

        if GetFldVis(XMLAdrI + '/КорНБСдел/ВнеРеалДох') {
          #_IfNotValid(XMLAdrI + '/КорНБСдел/ВнеРеалДох/Признак', IsValidPriznak, 'Стр. 020, гр. 3')
          #_IfNotValid(XMLAdrI + '/КорНБСдел/ВнеРеалДох/Сумма'  , IsInt_1_15    , 'Стр. 020, гр. 4')
        }

        if GetFldVis(XMLAdrI + '/КорНБСдел/РасхУмДохРеал') {
          #_IfNotValid(XMLAdrI + '/КорНБСдел/РасхУмДохРеал/Признак', IsValidPriznak, 'Стр. 030, гр. 3')
          #_IfNotValid(XMLAdrI + '/КорНБСдел/РасхУмДохРеал/Сумма'  , IsInt_1_15    , 'Стр. 030, гр. 4')
        }

        if GetFldVis(XMLAdrI + '/КорНБСдел/ВнеРеалРасх') {
          #_IfNotValid(XMLAdrI + '/КорНБСдел/ВнеРеалРасх/Признак', IsValidPriznak, 'Стр. 040, гр. 3')
          #_IfNotValid(XMLAdrI + '/КорНБСдел/ВнеРеалРасх/Сумма'  , IsInt_1_15    , 'Стр. 040, гр. 4')
        }

        {
          #_IfNotValid(XMLAdrI + '/КорНБСдел/ИтогоКор/Признак', IsValidPriznak, 'Стр. 050, гр. 3')
          #_IfNotValid(XMLAdrI + '/КорНБСдел/ИтогоКор/Сумма'  , IsInt_1_15    , 'Стр. 050, гр. 4')
        }
      }
    }
  }

  // #endregion Лист 08

  // #region Лист 09

  if GetFldVis('Файл/Документ/Прибыль/РасчНалКИК')
  {
    flI := False;

    CountI := XMLMAP.GetNodeCountByName('Файл/Документ/Прибыль/РасчНалКИК/СведКИК');
    for (i := 0; i < CountI; i++)
    {
      XMLAdrI := 'Файл/Документ/Прибыль/РасчНалКИК/СведКИК' + getIter(i);

      if not GetFldVis(XMLAdrI) Continue;
      flI := True;

      #_IfNotValid   (XMLAdrI + '/НомерКИК'  , IsValidNomerKIK  , 'Номер КИК'                     )
      #_IfNotValidVis(XMLAdrI + '/КодОргФорм', IsValidKodOrgForm, 'Организационная форма (код)'   )
      #_IfNotValid   (XMLAdrI + '/НаимОргЛат', IsStr_1_1000     , 'Полное наименование (лат.)'    )
      #_IfNotValidVis(XMLAdrI + '/ДокУчр'    , IsStr_1_500      , 'Документ об учреждении (рус.)' )
      #_IfNotValid   (XMLAdrI + '/ГосудРег'  , IsStr_3          , 'Код государства регистрации'   )
      #_IfNotValid   (XMLAdrI + '/СтрНалРез' , IsStr_3          , 'Код государства нал. резидента')
      #_IfNotValid   (XMLAdrI + '/РегНомер'  , IsStr_1_100      , 'Рег. номер в гос. регистрации' )
      #_IfNotValidVis(XMLAdrI + '/КодНПРег'  , IsStr_1_100      , 'Код НП в гос. регистрации'     )
      #_IfNotValid   (XMLAdrI + '/АдрСтрРег' , IsStr_1_254      , 'Адрес в гос. регистрации'      )
      #_IfNotValid   (XMLAdrI + '/ДоляУчПриб', IsDbl_2_15       , 'Доля участия в прибыли КИК'    )

      #_IfNotValid(XMLAdrI + '/ОснОсвНалобл/Пр1001', IsValidPrPoKodu, 'Стр. 1001')
      #_IfNotValid(XMLAdrI + '/ОснОсвНалобл/Пр1002', IsValidPrPoKodu, 'Стр. 1002')
      #_IfNotValid(XMLAdrI + '/ОснОсвНалобл/Пр1003', IsValidPrPoKodu, 'Стр. 1003')
      #_IfNotValid(XMLAdrI + '/ОснОсвНалобл/Пр1004', IsValidPrPoKodu, 'Стр. 1004')
      #_IfNotValid(XMLAdrI + '/ОснОсвНалобл/Пр1005', IsValidPrPoKodu, 'Стр. 1005')
      #_IfNotValid(XMLAdrI + '/ОснОсвНалобл/Пр1006', IsValidPrPoKodu, 'Стр. 1006')
      #_IfNotValid(XMLAdrI + '/ОснОсвНалобл/Пр1007', IsValidPrPoKodu, 'Стр. 1007')
      #_IfNotValid(XMLAdrI + '/ОснОсвНалобл/Пр1008', IsValidPrPoKodu, 'Стр. 1008')
      #_IfNotValid(XMLAdrI + '/ОснОсвНалобл/Пр1009', IsValidPrPoKodu, 'Стр. 1009')


      if GetFldVis(XMLAdrI + '/РасчНал1.1.309.1')
      {
        #_IfNotValid       (XMLAdrI + '/РасчНал1.1.309.1/Валюта'            , IsValidOKV, 'Код валюты')
        #_IfNotValid_Min   (XMLAdrI + '/РасчНал1.1.309.1/ПрибДоНалФО'                   , 'Стр. 010'  )
        #_IfNotValid_Min   (XMLAdrI + '/РасчНал1.1.309.1/ДохНеУчПриб'                   , 'Стр. 020'  )
        #_IfNotValid_Min   (XMLAdrI + '/РасчНал1.1.309.1/СумКорПрибАкт'                 , 'Стр. 030'  )
        #_IfNotValid_Min   (XMLAdrI + '/РасчНал1.1.309.1/КорВелПрибВал'                 , 'Стр. 040'  )
        #_IfNotValid       (XMLAdrI + '/РасчНал1.1.309.1/КурсВалют'         , IsDbl_10_4, 'Стр. 050'  )
        #_IfNotValid_Min   (XMLAdrI + '/РасчНал1.1.309.1/ВеличПрибНал'                  , 'Стр. 060'  )
        #_IfNotValid_Min   (XMLAdrI + '/РасчНал1.1.309.1/СумКорПриб'                    , 'Стр. 070'  )
        #_IfNotValid_Min   (XMLAdrI + '/РасчНал1.1.309.1/КорПрибВал'                    , 'Стр. 080'  )
        #_IfNotValid_Min   (XMLAdrI + '/РасчНал1.1.309.1/КорПрибРуб'                    , 'Стр. 090'  )
        #_IfNotValidVis_Min(XMLAdrI + '/РасчНал1.1.309.1/ДивПромежФО'                   , 'Стр. 100'  )
        #_IfNotValidVis_Min(XMLAdrI + '/РасчНал1.1.309.1/ДивГодСледФО'                  , 'Стр. 110'  )
        #_IfNotValidVis_Min(XMLAdrI + '/РасчНал1.1.309.1/РаспрПриб'                     , 'Стр. 120'  )
        #_IfNotValidVis_Min(XMLAdrI + '/РасчНал1.1.309.1/ДохДивИстРО'                   , 'Стр. 130'  )
        #_IfNotValidVis_Min(XMLAdrI + '/РасчНал1.1.309.1/ПрибУвелУстКап'                , 'Стр. 140'  )
        #_IfNotValidVis_Min(XMLAdrI + '/РасчНал1.1.309.1/ПрибУбытНалоблРуб'             , 'Стр. 150'  )
        #_IfNotValidVis_Min(XMLAdrI + '/РасчНал1.1.309.1/УбытУменНБРуб'                 , 'Стр. 160'  )
        #_IfNotValidVis_Min(XMLAdrI + '/РасчНал1.1.309.1/ПрибУбытПодлНалобл'            , 'Стр. 170'  )
        #_IfNotValidVis_Min(XMLAdrI + '/РасчНал1.1.309.1/ПрибДолКонтрЛиц'               , 'Стр. 180'  )
        #_IfNotValidVis_Min(XMLAdrI + '/РасчНал1.1.309.1/ПрибКосвУчаст'                 , 'Стр. 190'  )
        #_IfNotValidVis_Min(XMLAdrI + '/РасчНал1.1.309.1/НалБазаИсчРуб'                 , 'Стр. 200'  )
        #_IfNotValidVis_Min(XMLAdrI + '/РасчНал1.1.309.1/ИсчислНал'                     , 'Стр. 210'  )
        #_IfNotValidVis_Min(XMLAdrI + '/РасчНал1.1.309.1/СумНал309.1'                   , 'Стр. 220'  )
        #_IfNotValidVis_Min(XMLAdrI + '/РасчНал1.1.309.1/НалУплат'                      , 'Стр. 230'  )

        // #region ИЗ ИНСТРУКЦИ. П.16.3.18. Если значение показателя по строке 150 отрицательное, то по строке 160 указывается нулевое значение.

        if (     ( GetDblVal(XMLAdrI + '/РасчНал1.1.309.1/ПрибУбытНалоблРуб') <  0  )
             and ( GetDblVal(XMLAdrI + '/РасчНал1.1.309.1/УбытУменНБРуб' ) <> 0  )
             and ( GetStrVal(XMLAdrI + '/РасчНал1.1.309.1/УбытУменНБРуб' ) <> '' ) )
        then
          MessageErrorStop_ALG (
            XMLAdrI + '/РасчНал1.1.309.1/УбытУменНБРуб'
          , 'Стр. 140'
          , 'Если значение показателя по строке 150 отрицательное, то по строке 160 указывается нулевое значение'
          );

        // #endregion ИЗ ИНСТРУКЦИ. П.16.3.18. Если значение показателя по строке 150 отрицательное, то по строке 160 указывается нулевое значение.

        // #region ИЗ ИНСТРУКЦИ. П.16.3.20. Если показатель строки 170 имеет отрицательное значение, то по строке 180 указывается ноль ("0").

        if (     ( GetDblVal(XMLAdrI + '/РасчНал1.1.309.1/ПрибУбытПодлНалобл'    ) <  0 )
             and ( GetDblVal(XMLAdrI + '/РасчНал1.1.309.1/ПрибДолКонтрЛиц') <> 0 ) )
        then
          MessageErrorStop_ALG (
            XMLAdrI + '/РасчНал1.1.309.1/ПрибДолКонтрЛиц'
          , 'Стр. 180'
          , 'Если показатель строки 170 имеет отрицательное значение, то по строке 180 указывается ноль ("0")'
          );

        // #endregionИЗ ИНСТРУКЦИ. П.16.3.20. Если показатель строки 170 имеет отрицательное значение, то по строке 180 указывается ноль ("0").
      }

      if GetFldVis(XMLAdrI + '/РасчНал2.1.309.1') {
        #_IfNotValid       (XMLAdrI + '/РасчНал2.1.309.1/ОснРасПриб'       , IsValidOsnRasPrib, 'Основание для прим. порядка расчета')
        #_IfNotValid       (XMLAdrI + '/РасчНал2.1.309.1/Валюта'           , IsValidOKV       , 'Код валюты'                         )
        #_IfNotValid_Min   (XMLAdrI + '/РасчНал2.1.309.1/ДоходРеал'                           , 'Стр. 010'                           )
        #_IfNotValid_Min   (XMLAdrI + '/РасчНал2.1.309.1/ВнеРеалДох'                          , 'Стр. 020'                           )
        #_IfNotValid_Min   (XMLAdrI + '/РасчНал2.1.309.1/РасхУмДохРеал'                       , 'Стр. 030'                           )
        #_IfNotValid_Min   (XMLAdrI + '/РасчНал2.1.309.1/ВнеРеалРасх'                         , 'Стр. 040'                           )
        #_IfNotValid_Min   (XMLAdrI + '/РасчНал2.1.309.1/Прибыль'                             , 'Стр. 050'                           )
        #_IfNotValid       (XMLAdrI + '/РасчНал2.1.309.1/КурсВалют'        , IsDbl_10_4       , 'Стр. 060'                           )
        #_IfNotValid_Min   (XMLAdrI + '/РасчНал2.1.309.1/ПрибЦелНал'                          , 'Стр. 070'                           )
        #_IfNotValid_Min   (XMLAdrI + '/РасчНал2.1.309.1/ОбщКорПриб'                          , 'Стр. 080'                           )
        #_IfNotValid_Min   (XMLAdrI + '/РасчНал2.1.309.1/КорПрибВал'                          , 'Стр. 090'                           )
        #_IfNotValid_Min   (XMLAdrI + '/РасчНал2.1.309.1/КорПрибРуб'                          , 'Стр. 100'                           )
        #_IfNotValidVis_Min(XMLAdrI + '/РасчНал2.1.309.1/ДивПромежФО'                         , 'Стр. 110'                           )
        #_IfNotValidVis_Min(XMLAdrI + '/РасчНал2.1.309.1/ДивГодСледФО'                        , 'Стр. 120'                           )
        #_IfNotValidVis_Min(XMLAdrI + '/РасчНал2.1.309.1/РаспрПриб'                           , 'Стр. 130'                           )
        #_IfNotValidVis_Min(XMLAdrI + '/РасчНал2.1.309.1/ДохДивИстРО'                         , 'Стр. 140'                           )
        #_IfNotValidVis_Min(XMLAdrI + '/РасчНал2.1.309.1/ПрибУвелУстКап'                      , 'Стр. 150'                           )
        #_IfNotValidVis_Min(XMLAdrI + '/РасчНал2.1.309.1/ПрибПодлУчет'                        , 'Стр. 160'                           )
        #_IfNotValidVis_Min(XMLAdrI + '/РасчНал2.1.309.1/ПрибУбытНалоблРуб'                   , 'Стр. 170'                           )
        #_IfNotValidVis_Min(XMLAdrI + '/РасчНал2.1.309.1/УбытУменНБ'                          , 'Стр. 180'                           )
        #_IfNotValidVis_Min(XMLAdrI + '/РасчНал2.1.309.1/ПрибПодлУчетРуб'                     , 'Стр. 190'                           )
        #_IfNotValidVis_Min(XMLAdrI + '/РасчНал2.1.309.1/ПрибДоляУчаст'                       , 'Стр. 200'                           )
        #_IfNotValidVis_Min(XMLAdrI + '/РасчНал2.1.309.1/ПрибУчетКосвУчаст'                   , 'Стр. 210'                           )
        #_IfNotValidVis_Min(XMLAdrI + '/РасчНал2.1.309.1/НалБазаИсчРуб'                       , 'Стр. 220'                           )
        #_IfNotValidVis_Min(XMLAdrI + '/РасчНал2.1.309.1/ИсчислНал'                           , 'Стр. 230'                           )
        #_IfNotValidVis_Min(XMLAdrI + '/РасчНал2.1.309.1/СумНал309.1'                         , 'Стр. 240'                           )
        #_IfNotValidVis_Min(XMLAdrI + '/РасчНал2.1.309.1/НалУплат'                            , 'Стр. 250'                           )

        // #region ИЗ ИНСТРУКЦИ. П.16.4.25. Если показатель строки 190 имеет отрицательное значение, то по строке 200 указывается ноль ("0").

        if (     ( GetDblVal(XMLAdrI + '/РасчНал2.1.309.1/ПрибПодлУчетРубб') <  0 )
             and ( GetDblVal(XMLAdrI + '/РасчНал2.1.309.1/ПрибДоляУчаст'   ) <> 0 ) )
        then
          MessageErrorStop_ALG (
            XMLAdrI + '/РасчНал2.1.309.1/ПрибДоляУчаст'
          , 'Стр. 200'
          , 'Если показатель строки 190 имеет отрицательное значение, то по строке 200 указывается ноль ("0")'
          );

        // #endregion ИЗ ИНСТРУКЦИ. П.16.4.25. Если показатель строки 190 имеет отрицательное значение, то по строке 200 указывается ноль ("0").
      }

      if GetFldVis(XMLAdrI + '/РасчОперЦБ') {

        #_IfNotValid       (XMLAdrI + '/РасчОперЦБ/Валюта'           , IsValidOKV,  'Код валюты')
        #_IfNotValid_Min   (XMLAdrI + '/РасчОперЦБ/ДохВыбыт'                     ,  'Стр. 010'  )
        #_IfNotValid_Min   (XMLAdrI + '/РасчОперЦБ/ДохВыбЦБНеОбр'                ,  'Стр. 011'  )
        #_IfNotValidVis_Min(XMLAdrI + '/РасчОперЦБ/ДохЦБНеОбрМин'                ,  'Стр. 012'  )
        #_IfNotValid_Min   (XMLAdrI + '/РасчОперЦБ/ДохФИНеОбр'                   ,  'Стр. 013'  )
        #_IfNotValidVis_Min(XMLAdrI + '/РасчОперЦБ/ДохФИНеОбрМин'                ,  'Стр. 014'  )
        #_IfNotValid_Min   (XMLAdrI + '/РасчОперЦБ/РасхПриобр'                   ,  'Стр. 020'  )
        #_IfNotValid_Min   (XMLAdrI + '/РасчОперЦБ/РасхПриобрЦБ'                 ,  'Стр. 021'  )
        #_IfNotValidVis_Min(XMLAdrI + '/РасчОперЦБ/РасхПриобрЦБМакс'             ,  'Стр. 022'  )
        #_IfNotValid_Min   (XMLAdrI + '/РасчОперЦБ/РасхФИНеОбр'                  ,  'Стр. 023'  )
        #_IfNotValidVis_Min(XMLAdrI + '/РасчОперЦБ/РасхФИНеОбрМакс'              ,  'Стр. 024'  )
        #_IfNotValid_Min   (XMLAdrI + '/РасчОперЦБ/Прибыль'                      ,  'Стр. 030'  )
        #_IfNotValid       (XMLAdrI + '/РасчОперЦБ/КурсВалют'        , IsDbl_10_4,  'Стр. 040'  )
        #_IfNotValid_Min   (XMLAdrI + '/РасчОперЦБ/ПрибУбЦелНал'                 ,  'Стр. 050'  )
        #_IfNotValid_Min   (XMLAdrI + '/РасчОперЦБ/ОбщКорПриб'                   ,  'Стр. 060'  )
        #_IfNotValid_Min   (XMLAdrI + '/РасчОперЦБ/КорПрибУбНалВал'              ,  'Стр. 070'  )
        #_IfNotValid_Min   (XMLAdrI + '/РасчОперЦБ/КорПрибУбНалРуб'              ,  'Стр. 080'  )
        #_IfNotValidVis_Min(XMLAdrI + '/РасчОперЦБ/УбытУменНБ'                   ,  'Стр. 090'  )
        #_IfNotValidVis_Min(XMLAdrI + '/РасчОперЦБ/ПрибПодлУчетРуб'              ,  'Стр. 100'  )
        #_IfNotValidVis_Min(XMLAdrI + '/РасчОперЦБ/ПрибДоляУчаст'                ,  'Стр. 110'  )
        #_IfNotValidVis_Min(XMLAdrI + '/РасчОперЦБ/ПрибУчетКосвУчаст'            ,  'Стр. 120'  )
        #_IfNotValidVis_Min(XMLAdrI + '/РасчОперЦБ/НалБазаИсчРуб'                ,  'Стр. 130'  )

        // #region ИЗ ИНСТРУКЦИ. П.16.5.21. Если значение показателя по строке 050 отрицательное, то по строке 080 указывается ноль ("0").

        if (     ( GetDblVal(XMLAdrI + '/РасчОперЦБ/ПрибУбЦелНал') <  0 )
             and ( GetDblVal(XMLAdrI + '/РасчОперЦБ/УбытУменНБ'    ) <> 0 ) )
        then
          MessageErrorStop_ALG (
            XMLAdrI + '/РасчОперЦБ/УбытУменНБ'
          , 'Стр. 080'
          , 'Если значение показателя по строке 050 отрицательное, то по строке 080 указывается ноль ("0")'
          );

        // #endregion ИЗ ИНСТРУКЦИ. П.16.5.21. Если значение показателя по строке 050 отрицательное, то по строке 080 указывается ноль ("0").

        // #region ИЗ ИНСТРУКЦИ. П.16.5.23. Если показатель по строке 090 имеет отрицательное значение (образовался убыток), то по строке 100 указывается нулевое значение.

        if (     ( GetDblVal(XMLAdrI + '/РасчОперЦБ/ПрибУчетКосвУчаст') <  0  )
             and ( GetDblVal(XMLAdrI + '/РасчОперЦБ/ПрибДоляУчаст')     <> 0  )
             and ( GetStrVal(XMLAdrI + '/РасчОперЦБ/ПрибДоляУчаст')     <> '' ) )
        then
          MessageErrorStop_ALG (
            XMLAdrI + '/РасчОперЦБ/ПрибДоляУчаст'
          , 'Стр. 110'
          , 'Если показатель по строке 120 имеет отрицательное значение (образовался убыток), то по строке 110 указывается нулевое значение'
          );

        // #endregion ИЗ ИНСТРУКЦИ. П.16.5.23. Если показатель по строке 090 имеет отрицательное значение (образовался убыток), то по строке 100 указывается нулевое значение.
      }

      CountJ := XMLMAP.GetNodeCountByName(XMLAdrI + '/РасчУбытУмНБ');
      for (j := 0; j < CountJ; j++)
      {
        XMLAdrJ := XMLAdrI + '/РасчУбытУмНБ' + getIter(j);

        if not GetFldVis(XMLAdrJ) Continue;

        if GetFldVis(XMLAdrI + '/РасчУбытУмНБ') {
          #_IfNotValidVis(XMLAdrJ + '/КодОперРасч'   , IsValidKodOperRasch, 'Операции, по которым производится расчет (код)')
          #_IfNotValidVis(XMLAdrJ + '/ОстУбытНачВс'  , IsInt_1_15         , 'Стр. 010'                                      )
          #_IfNotValidVis(XMLAdrJ + '/ОстУбыт3ФинГод', IsInt_1_15         , 'Стр. 020'                                      )
          #_IfNotValid   (XMLAdrJ + '/НалБаза'       , IsInt_1_15         , 'Стр. 130'                                      )
          #_IfNotValid   (XMLAdrJ + '/УбытУмНалБаза' , IsInt_1_15         , 'Стр. 140'                                      )
          #_IfNotValid   (XMLAdrJ + '/ОстУбытКонВс'  , IsInt_1_15         , 'Стр. 150'                                      )

          CountK := XMLMAP.GetNodeCountByName(XMLAdrJ + '/ОстУбытНачПерГод');
          for (k := 0; k < CountK; k++)
          {
            XMLAdrK := XMLAdrJ + '/ОстУбытНачПерГод' + getIter(k);

            if not GetFldVis(XMLAdrK) Continue;

            #_IfNotValid(XMLAdrK + '/Год'    , IsValidOtchGod, 'Стр. '+LPadCh(String((k * 10) + 30), '0', 3)+', гр. 1')
            #_IfNotValid(XMLAdrK + '/Остаток', IsInt_1_15    , 'Стр. '+LPadCh(String((k * 10) + 30), '0', 3)+', гр. 2')
          }
        }
      }
    }

    if (not flI)
      MessageErrorStop_ALG (
        'Файл/Документ/Прибыль/РасчНалКИК/СведКИК/НомерКИК'
      , 'Лист 09'
      , 'Ошибка в проставлении видимости узла "Файл/Документ/Прибыль/РасчНалКИК"'
      );
  }

  // #endregion Лист 09

  // #region Приложение 1 к НД

  if GetFldVis('Файл/Документ/Прибыль/ДохНеУч_РасхУч')
  {
    var str : string = '';
    flI := False;

    CountI := XMLMAP.GetNodeCountByName('Файл/Документ/Прибыль/ДохНеУч_РасхУч/ДохРасхКод');
    for (i := 0; i < CountI; i++)
    {
      XMLAdrI := 'Файл/Документ/Прибыль/ДохНеУч_РасхУч/ДохРасхКод' + getIter(i);

      if not GetFldVis(XMLAdrI) Continue;
      flI := True;

      str := LPadCh(String((i div 22) + 1), '0', 2);

      #_IfNotValidVis(XMLAdrI + '/КодВидДоход' , IsStr_3          , 'Стр. '+str+', гр. 1', -1)
      #_IfNotValidVis(XMLAdrI + '/КодВидДоход' , IsValidKodDohRash, 'Стр. '+str+', гр. 1', -1)
      #_IfNotValidVis(XMLAdrI + '/СумДоход'    , IsInt_1_15       , 'Стр. '+str+', гр. 2', -1)
      #_IfNotValidVis(XMLAdrI + '/КодВидРасход', IsStr_3          , 'Стр. '+str+', гр. 3', -1)
      #_IfNotValidVis(XMLAdrI + '/КодВидРасход', IsValidKodDohRash, 'Стр. '+str+', гр. 3', -1)
      #_IfNotValidVis(XMLAdrI + '/СумРасход'   , IsInt_1_15       , 'Стр. '+str+', гр. 4', -1)
    }

    if (not flI)
      MessageErrorStop_ALG (
        'Файл/Документ/Прибыль/ДохНеУч_РасхУч/ДохРасхКод/КодВидДоход'
      , 'Приложение 1 к налоговой декларации'
      , 'Ошибка в проставлении видимости узла "Файл/Документ/Прибыль/ДохНеУч_РасхУч"'
      );
  }

  // #endregion Приложение 1 к НД

  // #region Приложение 2 к НД

  CountI := XMLMAP.GetNodeCountByName('Файл/Документ/Прибыль/СведДохФЛ');
  for (i := 0; i < CountI; i++)
  {
    XMLAdrI := 'Файл/Документ/Прибыль/СведДохФЛ' + getIter(i);

    if not GetFldVis(XMLAdrI) Continue;

    #_IfNotValid(XMLAdrI + '/НомерСправ', IsInt_1_10 , 'Справка №'       )
    #_IfNotValid(XMLAdrI + '/ДатаСправ' , IsValidDate, 'Дата составления')
    #_IfNotValid(XMLAdrI + '/Тип'       , IsValidTip , 'Тип'             )

    // XMLAdrI + '/Импорт'

    {
      #_IfNotValidVis(XMLAdrI + '/ФЛПолучДох/ИННФЛ'    , IsValidINNFL       , 'ИНН в РФ'                      )
      #_IfNotValidVis(XMLAdrI + '/ФЛПолучДох/ИННФЛ'    , CheckError.Prov_INN, 'ИНН в РФ'                      )
      #_IfNotValid   (XMLAdrI + '/ФЛПолучДох/СтатусНП' , IsValidStatusNP    , 'Статус НП'                     )
      #_IfNotValid   (XMLAdrI + '/ФЛПолучДох/ДатаРожд' , IsValidDate        , 'Дата рождения'                 )
      #_IfNotValid   (XMLAdrI + '/ФЛПолучДох/Гражд'    , IsValidOKSM        , 'Гражданство (код)'             )
      #_IfNotValid   (XMLAdrI + '/ФЛПолучДох/КодВидДок', IsValidSPDUL       , 'Код документа, удост. личность')
      #_IfNotValid   (XMLAdrI + '/ФЛПолучДох/СерНомДок', IsStr_1_25         , 'Серия и номер документа'       )

      #_IfNotValid   (XMLAdrI + '/ФЛПолучДох/ФИО/Фамилия' , IsValidFIO, 'Фамилия' )
      #_IfNotValid   (XMLAdrI + '/ФЛПолучДох/ФИО/Имя'     , IsValidFIO, 'Имя'     )
      #_IfNotValidVis(XMLAdrI + '/ФЛПолучДох/ФИО/Отчество', IsValidFIO, 'Отчество')
    }

    if GetFldVis(XMLAdrI + '/ДохНалПер') {
      #_IfNotValid   (XMLAdrI + '/ДохНалПер/Ставка'     , IsInt_1_2 , 'Стр. 010')
      #_IfNotValid   (XMLAdrI + '/ДохНалПер/СумДохОбщ'  , IsDbl_15_2, 'Стр. 020')
      #_IfNotValidVis(XMLAdrI + '/ДохНалПер/СумВычОбщ'  , IsDbl_15_2, 'Стр. 021')
      #_IfNotValid   (XMLAdrI + '/ДохНалПер/НалБаза'    , IsDbl_15_2, 'Стр. 022')
      #_IfNotValid   (XMLAdrI + '/ДохНалПер/НалИсчисл'  , IsInt_1_15, 'Стр. 030')
      #_IfNotValidVis(XMLAdrI + '/ДохНалПер/НалУдерж'   , IsInt_1_15, 'Стр. 031')
      #_IfNotValidVis(XMLAdrI + '/ДохНалПер/НалУплач'   , IsInt_1_15, 'Стр. 032')
      #_IfNotValidVis(XMLAdrI + '/ДохНалПер/НалУдержЛиш', IsInt_1_15, 'Стр. 033')
      #_IfNotValidVis(XMLAdrI + '/ДохНалПер/НалНеУдерж' , IsInt_1_15, 'Стр. 034')
    }

    if GetFldVis(XMLAdrI + '/СпрДохФЛ') {
      flJ := False;

      CountJ := XMLMAP.GetNodeCountByName(XMLAdrI + '/СпрДохФЛ/СумДох');
      for (j := 0; j < CountJ; j++)
      {
        XMLAdrJ := XMLAdrI + '/СпрДохФЛ/СумДох' + getIter(j);

        if not GetFldVis(XMLAdrJ) Continue;
        flJ := True;

        RemoveIter := if(i=0,-1,1);

        #_IfNotValid(XMLAdrJ + '/КодДоход', IsInt_1_4 , 'Стр. 040', RemoveIter)
        #_IfNotValid(XMLAdrJ + '/СумДоход', IsDbl_15_2, 'Стр. 041', RemoveIter)

        CountK := XMLMAP.GetNodeCountByName(XMLAdrJ + '/СумВыч');
        for (k := 0; k < CountK; k++)
        {
          XMLAdrK := XMLAdrJ + '/СумВыч' + getIter(k);

          if not GetFldVis(XMLAdrK) Continue;

          RemoveIter := if(i=0 and j=0,-1,if(((i=0 and j<>0) or (i<>0 and j=0)),1,2));

          #_IfNotValid(XMLAdrK + '/КодВычет', IsInt_1_3 , 'Стр. 042 ('+String((k mod 5) + 1)+')', RemoveIter, 5)
          #_IfNotValid(XMLAdrK + '/СумВычет', IsDbl_15_2, 'Стр. 043 ('+String((k mod 5) + 1)+')', RemoveIter, 5)
        }
      }

      if (not flJ)
        MessageErrorStop_ALG (
          XMLAdrI + '/СпрДохФЛ/СумДох/КодДоход'
        , 'Приложение 2 к НД'
        , 'Строки 040 и 041 обязательны к заполнению'
        );
    }

    if GetFldVis(XMLAdrI + '/НалВычСтанд') {
      flJ := False;

      CountJ := XMLMAP.GetNodeCountByName(XMLAdrI + '/НалВычСтанд/СумВыч');
      for (j := 0; j < CountJ; j++)
      {
        XMLAdrJ := XMLAdrI + '/НалВычСтанд/СумВыч' + getIter(j);

        if not GetFldVis(XMLAdrJ) Continue;
        flJ := True;

        RemoveIter := if(i=0,-1,1);

        #_IfNotValid(XMLAdrJ + '/КодВычет', IsInt_1_3 , 'Стр. 051 ('+String((j mod 5) + 1)+')', RemoveIter, 5)
        #_IfNotValid(XMLAdrJ + '/СумВычет', IsDbl_15_2, 'Стр. 052 ('+String((j mod 5) + 1)+')', RemoveIter, 5)
      }

      if (not flJ)
        MessageErrorStop_ALG (
          XMLAdrI + '/НалВычСтанд/СумВыч/КодВычет'
        , 'Приложение 2 к НД'
        , 'Строки 051 и 052 обязательны к заполнению'
        );
    }
  }

  // #endregion Приложение 2 к НД
@end.
// #endregion On_Check ДЕЙСТВИЯ ВЫПОЛНЯЕМЫЕ ПРИ ПРОВЕРКЕ ПОЛЕЙ
//**********************************************************************************************************


//============================================================================================================
//#region On_Recalc ДЕЙСТВИЯ ВЫПОЛНЯЕМЫЕ ПРИ РАСЧЁТЕ ПОЛЕЙ
//------------------------------------------------------------------------------------------------------------
@Script On_Recalc : boolean;
  //==========================================================================================================
  //#region СЕРВИС On_Recalc
  //----------------------------------------------------------------------------------------------------------
  function GetDblVal_IfNotNull(_strAdr : string) : double;
  {
    Result := if (GetStrNull(_strAdr), 0, GetDblVal(_strAdr));
  }

  //----------------------------------------------------------------------------------------------------------
  procedure LogInfo(_strAdr, _strMes, _strVal : string);
  {
    MesError.InsertRasch('', _strAdr, _strMes, _strVal, 0);
  }

  //----------------------------------------------------------------------------------------------------------
  procedure LogInfoC(_strAdr, _strMes, _strVal : string; _N : byte);
  {
    MesError.InsertRasch('', _strAdr, _strMes, _strVal, _N);
  }

  //----------------------------------------------------------------------------------------------------------
  procedure SetFldGV(_fld : string; var _val : double);
  {
    SetFldVal(_fld, _val);
    _val := GetDblVal(_fld);
  }

  //----------------------------------------------------------------------------------------------------------
  procedure SetSNull(_fld : string; var _val : double);
  {
    XMLMAP.SetIsNullAttrValueByName(_fld, 2);
    _val := GetDblVal(_fld);
  }

  //----------------------------------------------------------------------------------------------------------
  function TrimVal(_val : string) : string;
  {
    Result := RTrim(_val, '+');
    if (Result = '') Result := '0 (нет данных)';
  }

  //----------------------------------------------------------------------------------------------------------
  // #region GD
  //----------------------------------------------------------------------------------------------------------
  function GD0(_val : double) : string;
  {
    Result := IF(_val < 0
                , '('+DoubleToStr(Round(_val), '[|-]36666666666666666666666666')+')'
                ,     DoubleToStr(Round(_val), '[|-]36666666666666666666666666')    );
  }

  //----------------------------------------------------------------------------------------------------------
  function GD2(_val : double) : string;
  {
    Result := IF(_val < 0
                , '('+DoubleToStr(Round(_val, 2), '[|-]36666666666666666666666666~99')+')'
                ,     DoubleToStr(Round(_val, 2), '[|-]36666666666666666666666666~99')    );
  }

  //----------------------------------------------------------------------------------------------------------
  function GD3(_val : double) : string;
  {
    Result := IF(_val < 0
                , '('+DoubleToStr(Round(_val, 3), '[|-]36666666666666666666666666~999')+')'
                ,     DoubleToStr(Round(_val, 3), '[|-]36666666666666666666666666~999')    );
  }

  //----------------------------------------------------------------------------------------------------------
  function GD4(_val : double) : string;
  {
    Result := IF(_val < 0
                , '('+DoubleToStr(Round(_val, 4), '[|-]36666666666666666666666666~9999')+')'
                ,     DoubleToStr(Round(_val, 4), '[|-]36666666666666666666666666~9999')    );
  }

  //----------------------------------------------------------------------------------------------------------
  function GD11(_val : double) : string;
  {
    Result := IF(_val < 0
                , '('+DoubleToStr(Round(_val, 11), '[|-]36666666666666666666666666~99999999999')+')'
                ,     DoubleToStr(Round(_val, 11), '[|-]36666666666666666666666666~99999999999')    );
  }

  //----------------------------------------------------------------------------------------------------------
  function GD15(_val : double) : string;
  {
    Result := IF(_val < 0
                , '('+DoubleToStr(Round(_val, 15), '[|-]36666666666666666666666666~999999999999999')+')'
                ,     DoubleToStr(Round(_val, 15), '[|-]36666666666666666666666666~999999999999999')    );
  }
  //----------------------------------------------------------------------------------------------------------
  // #endregion GD
  //----------------------------------------------------------------------------------------------------------

  //----------------------------------------------------------------------------------------------------------
  // #region ПРОВЕРКИ
  //----------------------------------------------------------------------------------------------------------
  // Проверка на соответствие текущего значения поля Период значению Год
  function NalPer_God : boolean;
  begin
    var val : Integer;
    val := GetIntVal('Файл/Документ/Период');

    Result := False;
    Result := ((val = 16) or (val = 34) or (val = 46) or (val = 68));
  end;

  //----------------------------------------------------------------------------------------------------------
  // Проверка на соответствие текущего значения поля Период значению 1й квартал
  function _NalPer_1kv : boolean;
  begin
    var val : Integer;
    val := GetIntVal('Файл/Документ/Период');

    Result := False;
    Result := ((val = 13) or (val = 21));
  end;

  //----------------------------------------------------------------------------------------------------------
  // Проверка на соответствие текущего значения поля КатегорНА значению 2
  function _KategorNA(_adrXML_: string) : boolean;
  begin
    Result := False;
    Result := (GetIntVal(_adrXML_) = 2);
  end;

  //----------------------------------------------------------------------------------------------------------
  // Проверка на соответствие текущего значения поля ТипНП условию
  function _TipNP(_adrXML_: string) : boolean;
  begin
    var val : Integer;
    val := GetIntVal(_adrXML_);

    Result := False;
    Result := ((val = 1) or (val = 3) or (val = 4));
  end;

  //----------------------------------------------------------------------------------------------------------
  // Вычисляем сумму стр. 070 ОП, Лист 02 Приложение 5
  function _GetSumOP: double;
    var tV  : double;
        tNd,_XMLAdrK : string;
        k,CountK : integer;
  begin
          tV := 0;
          tNd:='Файл/Документ/Прибыль/РасчНал/РаспрНалСубРФ';
          CountK  := XMLMAP.GetNodeCountByName(tNd);
          for (k := 0; k < CountK; k++)
          {
            _XMLAdrK := tNd + getIter(k);

            if GetFldVis(_XMLAdrK + '/СумНал')
            {
                tV := tV + GetDblVal(_XMLAdrK + '/СумНал');
            }
          }
          Result := tV;
  end;
  //----------------------------------------------------------------------------------------------------------
  // #endregion ПРОВЕРКИ
  //----------------------------------------------------------------------------------------------------------
  //#endregion СЕРВИС On_Recalc
  //**********************************************************************************************************
@begin
  var CountI, CountJ, CountK, CountN, i, j, k, n : integer = 0;
  var XMLAdrI, XMLAdrJ, XMLAdrK, XMLAdrN : string;
  var flI, flJ, flK : boolean;

  var L2p4_150 : double;

  // #region ЗНАЧЕНИЯ ПО УМОЛЧАНИЮ
  if ((GetStrVal('Файл/Документ/ДатаДок') = '') or (GetStrVal('Файл/Документ/ДатаДок') = 'ДД.ММ.ГГГГ'))
    SetFldVal('Файл/Документ/ДатаДок', DateToStr(Cur_Date, XMLMap.GetAttrVFormatByName('Файл/Документ/ДатаДок')));

  var bufPeriod, valPeriod : string;

  bufPeriod := if(Length(MesCurPeriod) > 8, SubStr(MesCurPeriod, 1, Length(MesCurPeriod) - 8), '');
  valPeriod := '';

  if (GetStrVal('Файл/Документ/Период') = '')
  {
    if (Pos('квартал', bufPeriod) = 3)
    {
      case SubStr(bufPeriod, 1, 1) of
        '1' : valPeriod := '21';   //1ый квартал
        '2' : valPeriod := '31';   //2ой квартал | Полугодие
        '3' : valPeriod := '33';   //3ий квартал | Девять месяцев
        '4' : valPeriod := '34';   //4ый квартал | Год
      end;
    }
    else
    {
      case bufPeriod of
        'Январь'  : valPeriod := '35';   //Январь   | Один месяц
        'Февраль' : valPeriod := '36';   //Февраль  | Два месяца
        'Март'    : valPeriod := '37';   //Март     | Три месяца
        'Апрель'  : valPeriod := '38';   //Апрель   | Четыре месяца
        'Май'     : valPeriod := '39';   //Май      | Пять месяцев
        'Июнь'    : valPeriod := '40';   //Июнь     | Шесть месяцев
        'Июль'    : valPeriod := '41';   //Июль     | Семь месяцев
        'Август'  : valPeriod := '42';   //Август   | Восемь месяцев
        'Сентябрь': valPeriod := '43';   //Сентябрь | Девять месяцев
        'Октябрь' : valPeriod := '44';   //Октябрь  | Десять месяцев
        'Ноябрь'  : valPeriod := '45';   //Ноябрь   | Одиннадцать месяцев
        'Декабрь' : valPeriod := '46';   //Декабрь  | Год
        ''        : valPeriod := '34';   //Год
      end;
    }

    SetFldVal('Файл/Документ/Период', valPeriod);
  }
  // #endregion ЗНАЧЕНИЯ ПО УМОЛЧАНИЮ


  #define _LogInfo(_Name) LogInfo(a#_Name, m#_Name, v#_Name);
  #define _SetFldGV(_Name) SetFldGV(a#_Name, #_Name);
  #define _SetSNull(_Name) SetSNull(a#_Name, #_Name);


  //==========================================================================================================
  //#region ИНИЦИАЛИЗАЦИЯ РАСЧЕТА ПОКАЗАТЕЛЕЙ С УЧЕТОМ ДАННЫХ ПРЕДЫДУЩЕГО ПЕРИОДА
  //----------------------------------------------------------------------------------------------------------
  var bufPath : string;
  var flPath : boolean;
  var tmpXMLMap : XmlStruct new;

  bufPath := String(pFH.Func('myPathSelectionLatestTaxReport'));
  flPath := (bufPath <> '');

  if flPath
  {
    tmpXMLMap := new (XMLStruct);
    tmpXMLMap.ImpXml(bufPath);
  }
  //#endregion ИНИЦИАЛИЗАЦИЯ РАСЧЕТА ПОКАЗАТЕЛЕЙ С УЧЕТОМ ДАННЫХ ПРЕДЫДУЩЕГО ПЕРИОДА
  //==========================================================================================================


  // #region ЛИСТ 05

  //#region ОБЪЯВЛЕНИЕ ПЕРЕМЕННЫХ
  var sumL5_r100 : double = 0;
  var vSumL5_r100 : string = '';

  var L5_r040, L5_r060, L5_r080, L5_r100, L5_z010, L5_z020, L5_z050 : double = 0;
  var aL5_r040, aL5_r060, aL5_r080, aL5_r100, aL5_z010, aL5_z020, aL5_z050
    , mL5_r040, mL5_r060, mL5_r080, mL5_r100
    , vL5_r040, vL5_r060, vL5_r080, vL5_r100 : string = '';
  // #endregion ОБЪЯВЛЕНИЕ ПЕРЕМЕННЫХ

  CountI := XMLMAP.GetNodeCountByName('Файл/Документ/Прибыль/НалБазОпОсобН');
  for (i := 0; i < CountI; i++)
  {
    XMLAdrI := 'Файл/Документ/Прибыль/НалБазОпОсобН' + getIter(i);

    if not GetStrNull(XMLAdrI + '/ВидОпер')
    {
      // #region ИНИЦИЛИЗАЦИЯ ПЕРЕМЕННЫХ
      aL5_r040 := XMLAdrI + '/Прибыль'         ;
      aL5_r060 := XMLAdrI + '/НалБазаБезУбПред';
      aL5_r080 := XMLAdrI + '/СумУбытУменНБ'   ;
      aL5_r100 := XMLAdrI + '/НалБаза'         ;
      aL5_z010 := XMLAdrI + '/ДохВыбыт'        ;  L5_z010 := GetDblVal(aL5_z010);
      aL5_z020 := XMLAdrI + '/РасхПриобРеал'   ;  L5_z020 := GetDblVal(aL5_z020);
      aL5_z050 := XMLAdrI + '/КорПриб'         ;  L5_z050 := GetDblVal(aL5_z050);
      // #endregion ИНИЦИЛИЗАЦИЯ ПЕРЕМЕННЫХ

      // #region 040 = 010 - 020
      L5_r040 := L5_z010 - L5_z020;  #_SetFldGV(L5_r040)

      mL5_r040 := 'Стр. 040 = стр. 010 - стр. 020';
      vL5_r040 := GD0(L5_r040)+' = '+GD0(L5_z010)+' - '+GD0(L5_z020);
      // #endregion 040 = 010 - 020

      // #region 060 = 040 - 050 (если значение меньше 0 (нуля), то 0 (ноль))
      if (L5_r040 - L5_z050 >= 0)
      {
        L5_r060 := L5_r040 - L5_z050;  #_SetFldGV(L5_r060)

        mL5_r060 := 'Стр. 060 = стр. 040 - стр. 050';
        vL5_r060 := GD0(L5_r060)+' = '+GD0(L5_r040)+' - '+GD0(L5_z050);
      }
      else
      {
        L5_r060 := 0;  #_SetFldGV(L5_r060)

        mL5_r060 := 'Стр. 060 = 0 (нулю) (т.к. значение меньше нуля)';
        vL5_r060 := GD0(L5_r060)+' = 0';
      }
      // #endregion 060 = 040 - 050 (если значение меньше 0 (нуля), то 0 (ноль))

      // #region 080 = сумма 150 Приложения 4 Листа 02 (с типом налогоплательщика равным 5)
      vL5_r080 := '';
      L5_r080 := 0;
      flI := False;

      // #region Получение данных из Приложения 4 Листа 02 (с типом налогоплательщика равным 5)
      CountJ := XMLMAP.GetNodeCountByName('Файл/Документ/Прибыль/РасчНал');
      for (j := 0; j < CountJ; j++)
      {
        XMLAdrJ := 'Файл/Документ/Прибыль/РасчНал'+getIter(j);

        if not GetStrNull(XMLAdrJ + '/ТипНП')
        {
          CountK := XMLMAP.GetNodeCountByName(XMLAdrJ + '/УбытУменНБ');
          for (k := 0; k < CountK; k++)
          {
            XMLAdrK := XMLAdrJ + '/УбытУменНБ' + getIter(k);

            if not GetStrNull(XMLAdrK + '/ТипНП')
              if (GetIntVal(XMLAdrK + '/ТипНП') = 5)
              {
                L2p4_150 := GetDblVal(XMLAdrK + '/УбытУмНалБазаВс');

                 L5_r080 +=     L2p4_150       ;
                vL5_r080 += GD0(L2p4_150)+' + ';

                flI := True;
              }
          }
        }
      }
      // #endregion Получение данных из Приложения 4 Листа 02 (с типом налогоплательщика равным 5)

      if flI
      {
        #_SetFldGV(L5_r080)

        mL5_r080 := 'Стр. 080 = сумма стр. 150 Прил. 4 Листа 02 (с типом налогоплат. равным 5)';
        vL5_r080 := GD0(L5_r080)+' = ('+SubStr(vL5_r080, 1, Length(vL5_r080) - 3)+')';

        #_LogInfo(L5_r080)
      }
      else
      {
        L5_r080 := 0;  #_SetFldGV(L5_r080)

        mL5_r080 := 'Стр. 080 = 0 (нулю), т.к. отсутствуют Прил. 4 Листа 02 (с типом налогоплат. равным 5)';
        vL5_r080 := GD0(L5_r080)+' = 0 (нулю)';

        #_LogInfo(L5_r080)
      }
      // #endregion 080 = сумма 150 Приложения 4 Листа 02 (с типом налогоплательщика равным 5)

      // #region 100 = 060 - 080
      L5_r100 := L5_r060 - L5_r080;  #_SetFldGV(L5_r100)

      mL5_r100 := 'Стр. 100 = стр. 060 - стр. 080';
      vL5_r100 := GD0(L5_r100)+' = '+GD0(L5_r060)+' - '+GD0(L5_r080);
      // #endregion 100 = 060 - 080

      #_LogInfo(L5_r040)
      #_LogInfo(L5_r060)
      #_LogInfo(L5_r100)

       sumL5_r100 +=     L5_r100     ;
      vSumL5_r100 += GD0(L5_r100)+'+';
    }
  } // #endregion ЛИСТ 05

  // #region ЛИСТ 06
  var L6_530 : double = 0;

  if     not GetStrNull('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/СумПенсРез'                   )
     and not GetStrNull('Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ДоходНПФСтРеф/ДоходНПФСтРефВс')
  {
    // #region ОБЪЯВЛЕНИЕ ПЕРЕМЕННЫХ
    //Данные. Тип: Double
    var L6_010, L6_190, L6_240, L6_330, L6_350, L6_370, L6_380, L6_390, L6_450, L6_480, L6_481, L6_490, L6_520, L6_020
      , L6_030, L6_040, L6_050, L6_060, L6_070, L6_080, L6_090, L6_100, L6_110, L6_140, L6_150, L6_160, L6_170, L6_180, L6_200
      , L6_210, L6_220, L6_250, L6_260, L6_270, L6_280, L6_290, L6_300, L6_310, L6_320, L6_340, L6_360, L6_400, L6_459, L6_460
      , L6_470, L6_471, L6_500, L6_510: double = 0;

    //XML адреса переменных. Тип: String
    var aL6_010, aL6_190, aL6_240, aL6_330, aL6_350, aL6_370, aL6_380, aL6_390, aL6_450, aL6_480, aL6_481, aL6_490
      , aL6_520, aL6_530, aL6_020, aL6_030, aL6_040, aL6_050, aL6_060, aL6_070, aL6_080, aL6_090, aL6_100, aL6_110, aL6_140
      , aL6_150, aL6_160, aL6_170, aL6_180, aL6_200, aL6_210, aL6_220, aL6_250, aL6_260, aL6_270, aL6_280, aL6_290, aL6_300
      , aL6_310, aL6_320, aL6_340, aL6_360, aL6_400, aL6_459, aL6_460, aL6_470, aL6_471, aL6_500, aL6_510
    //Сообщения
      , mL6_010, mL6_190, mL6_240, mL6_330, mL6_350, mL6_370, mL6_380, mL6_390, mL6_450, mL6_480, mL6_481, mL6_490
      , mL6_520, mL6_530
    //Формулы с данными
      , vL6_010, vL6_190, vL6_240, vL6_330, vL6_350, vL6_370, vL6_380, vL6_390, vL6_450, vL6_480, vL6_481, vL6_490
      , vL6_520, vL6_530 : string = '';
    // #endregion ОБЪЯВЛЕНИЕ ПЕРЕМЕННЫХ

    // #region ИНИЦИЛИЗАЦИЯ ПЕРЕМЕННЫХ
    aL6_010 := 'Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ДоходНПФ/ДоходНПФВс'                ;
    aL6_190 := 'Файл/Документ/Прибыль/ДохРасНалБазаНПФ/Расход/РасходВс'                    ;
    aL6_240 := 'Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ОтчРазмРезУстав/ОтчРазмРезУставФонд';
    aL6_330 := 'Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ПрибУб/ПрибЦБРын'                   ;
    aL6_350 := 'Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ПрибУб/ПрибЦБНеРын'                 ;
    aL6_370 := 'Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ПрибУб/ДохПроцЦБ'                   ;
    aL6_380 := 'Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ПрибУб/ДохПроцЭм2007'               ;
    aL6_390 := 'Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ПрибУб/ДрИнвВлож'                   ;
    aL6_450 := 'Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ВлЦБОргНеРын/НалБаза'               ;
    aL6_480 := 'Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ВлЦБОргНеРын/СумНеучУбыт'           ;
    aL6_481 := 'Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ВлЦБОргНеРын/ОстУбыт458'            ;
    aL6_490 := 'Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ДрИнвВлож/НалБаза'                  ;
    aL6_520 := 'Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ДрИнвВлож/СумНеучУбыт'              ;
    aL6_530 := 'Файл/Документ/Прибыль/ДохРасНалБазаНПФ/НалБаза'                            ;
    aL6_020 := 'Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ДоходНПФ/РеалЦБРын'                 ;  L6_020 := GetDblVal(aL6_020);
    aL6_030 := 'Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ДоходНПФ/ОтклВырЦБРын'              ;  L6_030 := GetDblVal(aL6_030);
    aL6_040 := 'Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ДоходНПФ/РеалЦБНеРын'               ;  L6_040 := GetDblVal(aL6_040);
    aL6_050 := 'Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ДоходНПФ/ОтклВырЦБНеРын'            ;  L6_050 := GetDblVal(aL6_050);
    aL6_060 := 'Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ДоходНПФ/ПроцГосЦБ'                 ;  L6_060 := GetDblVal(aL6_060);
    aL6_070 := 'Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ДоходНПФ/ПроцЦБЭм2007'              ;  L6_070 := GetDblVal(aL6_070);
    aL6_080 := 'Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ДоходНПФ/ДолУчДрОрг'                ;  L6_080 := GetDblVal(aL6_080);
    aL6_090 := 'Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ДоходНПФ/ПроцГосЦБУдНА'             ;  L6_090 := GetDblVal(aL6_090);
    aL6_100 := 'Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ДоходНПФ/ПроцМунЦБ2007НА'           ;  L6_100 := GetDblVal(aL6_100);
    aL6_110 := 'Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ДоходНПФ/ДрИнвВлож'                 ;  L6_110 := GetDblVal(aL6_110);
    aL6_140 := 'Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ДоходНПФСтРеф/ЦБРын'                ;  L6_140 := GetDblVal(aL6_140);
    aL6_150 := 'Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ДоходНПФСтРеф/ЦБНеРын'              ;  L6_150 := GetDblVal(aL6_150);
    aL6_160 := 'Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ДоходНПФСтРеф/ПроцГосЦБ'            ;  L6_160 := GetDblVal(aL6_160);
    aL6_170 := 'Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ДоходНПФСтРеф/ПроцЦБЭм2007'         ;  L6_170 := GetDblVal(aL6_170);
    aL6_180 := 'Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ДоходНПФСтРеф/ДрИнвВлож'            ;  L6_180 := GetDblVal(aL6_180);
    aL6_200 := 'Файл/Документ/Прибыль/ДохРасНалБазаНПФ/Расход/ВлЦБРын'                     ;  L6_200 := GetDblVal(aL6_200);
    aL6_210 := 'Файл/Документ/Прибыль/ДохРасНалБазаНПФ/Расход/ВлЦБНеРын'                   ;  L6_210 := GetDblVal(aL6_210);
    aL6_220 := 'Файл/Документ/Прибыль/ДохРасНалБазаНПФ/Расход/ДрИнвВлож'                   ;  L6_220 := GetDblVal(aL6_220);
    aL6_250 := 'Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ОтчРазмРезУстав/ЦБРын'              ;  L6_250 := GetDblVal(aL6_250);
    aL6_260 := 'Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ОтчРазмРезУстав/ЦБНеРын'            ;  L6_260 := GetDblVal(aL6_260);
    aL6_270 := 'Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ОтчРазмРезУстав/ПроцЦБ'             ;  L6_270 := GetDblVal(aL6_270);
    aL6_280 := 'Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ОтчРазмРезУстав/ПроцЦБЭм2007'       ;  L6_280 := GetDblVal(aL6_280);
    aL6_290 := 'Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ОтчРазмРезУстав/ДолУчДрОрг'         ;  L6_290 := GetDblVal(aL6_290);
    aL6_300 := 'Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ОтчРазмРезУстав/ПроцЦБУдНА'         ;  L6_300 := GetDblVal(aL6_300);
    aL6_310 := 'Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ОтчРазмРезУстав/ПроцЦБЭм2007УдНА'   ;  L6_310 := GetDblVal(aL6_310);
    aL6_320 := 'Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ОтчРазмРезУстав/ДрИнвВлож'          ;  L6_320 := GetDblVal(aL6_320);
    aL6_340 := 'Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ПрибУб/СумИсклПрибЦБРын'            ;  L6_340 := GetDblVal(aL6_340);
    aL6_360 := 'Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ПрибУб/СумИсклПрибЦБНеРын'          ;  L6_360 := GetDblVal(aL6_360);
    aL6_400 := 'Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ПрибУб/СумИсклДрИнвВлож'            ;  L6_400 := GetDblVal(aL6_400);
    aL6_459 := 'Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ВлЦБОргНеРын/ОстУбСдНеОбрНач'       ;  L6_459 := GetDblVal(aL6_459);
    aL6_460 := 'Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ВлЦБОргНеРын/СумУбПред'             ;  L6_460 := GetDblVal(aL6_460);
    aL6_470 := 'Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ВлЦБОргНеРын/СумУбПриз'             ;  L6_470 := GetDblVal(aL6_470);
    aL6_471 := 'Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ВлЦБОргНеРын/СумУбПриз458'          ;  L6_471 := GetDblVal(aL6_471);
    aL6_500 := 'Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ДрИнвВлож/СумУбПред'                ;  L6_500 := GetDblVal(aL6_500);
    aL6_510 := 'Файл/Документ/Прибыль/ДохРасНалБазаНПФ/ДрИнвВлож/СумУбПриз'                ;  L6_510 := GetDblVal(aL6_510);
    // #endregion ИНИЦИЛИЗАЦИЯ ПЕРЕМЕННЫХ

    // #region MESSAGEs
    mL6_010 := 'Стр. 010 = стр. 020 + стр. 030 + стр. 040 + стр. 050 + стр. 060 + стр. 070 + стр. 080 + стр. 090 + стр. 100 + стр. 110';
    mL6_190 := 'Стр. 190 = стр. 200 + стр. 210 + стр. 220'                                                                             ;
    mL6_240 := 'Стр. 240 = стр. 250 + стр. 260 + стр. 270 + стр. 280 + стр. 290 + стр. 300 + стр. 310 + стр. 320'                      ;
    mL6_330 := 'Стр. 330 = стр. 020 + стр. 030 - стр. 140 - стр. 200 - стр. 250'                                                       ;
    mL6_350 := 'Стр. 350 = стр. 040 + стр. 050 - стр. 150 - стр. 210 - стр. 260'                                                       ;
    mL6_370 := 'Стр. 370 = стр. 060 - стр. 160 - стр. 270'                                                                             ;
    mL6_380 := 'Стр. 380 = стр. 070 - стр. 170 - стр. 280'                                                                             ;
    mL6_390 := 'Стр. 390 = стр. 110 - стр. 180 - стр. 220 - стр. 320'                                                                  ;
    mL6_480 := 'Стр. 480 = стр. 460 - стр. 470 - стр. 471'                                                                             ;
    mL6_481 := 'Стр. 481 = стр. 459 - стр. 471'                                                                                        ;
    // #endregion MESSAGEs

    // #region Расчет строк 010, 190, 240, 330, 350, 370, 380, 390, 480, 481
    L6_010 := L6_020 + L6_030 + L6_040 + L6_050 + L6_060 + L6_070 + L6_080 + L6_090 + L6_100 + L6_110;  #_SetFldGV  (L6_010)
    L6_190 := L6_200 + L6_210 + L6_220                                                               ;  #_SetFldGV  (L6_190)
    L6_240 := L6_250 + L6_260 + L6_270 + L6_280 + L6_290 + L6_300 + L6_310 + L6_320                  ;  #_SetFldGV  (L6_240)
    L6_330 := L6_020 + L6_030 - L6_140 - L6_200 - L6_250                                             ;  #_SetFldGV(L6_330)
    L6_350 := L6_040 + L6_050 - L6_150 - L6_210 - L6_260                                             ;  #_SetFldGV(L6_350)
    L6_370 := L6_060 - L6_160 - L6_270                                                               ;  #_SetFldGV  (L6_370)
    L6_380 := L6_070 - L6_170 - L6_280                                                               ;  #_SetFldGV  (L6_380)
    L6_390 := L6_110 - L6_180 - L6_220 - L6_320                                                      ;  #_SetFldGV(L6_390)
    L6_480 := L6_460 - L6_470 - L6_471                                                               ;  #_SetFldGV  (L6_480)
    L6_481 := L6_459 - L6_471                                                                        ;  #_SetFldGV  (L6_481)

    vL6_010 := GD0(L6_010)+' = '+GD0(L6_020)+' + '+GD0(L6_030)+' + '+GD0(L6_040)+' + '+GD0(L6_050)+' + '+GD0(L6_060)
                          +' + '+GD0(L6_070)+' + '+GD0(L6_080)+' + '+GD0(L6_090)+' + '+GD0(L6_100)+' + '+GD0(L6_110);
    vL6_190 := GD0(L6_190)+' = '+GD0(L6_200)+' + '+GD0(L6_210)+' + '+GD0(L6_220)                                    ;
    vL6_240 := GD0(L6_240)+' = '+GD0(L6_250)+' + '+GD0(L6_260)+' + '+GD0(L6_270)+' + '+GD0(L6_280)+' + '+GD0(L6_290)
                          +' + '+GD0(L6_300)+' + '+GD0(L6_310)+' + '+GD0(L6_320)                                    ;
    vL6_330 := GD0(L6_330)+' = '+GD0(L6_020)+' + '+GD0(L6_030)+' - '+GD0(L6_140)+' - '+GD0(L6_200)+' - '+GD0(L6_250);
    vL6_350 := GD0(L6_350)+' = '+GD0(L6_040)+' + '+GD0(L6_050)+' - '+GD0(L6_150)+' - '+GD0(L6_210)+' - '+GD0(L6_260);
    vL6_370 := GD0(L6_370)+' = '+GD0(L6_060)+' - '+GD0(L6_160)+' - '+GD0(L6_270)                                    ;
    vL6_380 := GD0(L6_380)+' = '+GD0(L6_070)+' - '+GD0(L6_170)+' - '+GD0(L6_280)                                    ;
    vL6_390 := GD0(L6_390)+' = '+GD0(L6_110)+' - '+GD0(L6_180)+' - '+GD0(L6_220)+' - '+GD0(L6_320)                  ;
    vL6_480 := GD0(L6_480)+' = '+GD0(L6_460)+' - '+GD0(L6_470)+' - '+GD0(L6_471)                                    ;
    vL6_481 := GD0(L6_481)+' = '+GD0(L6_459)+' - '+GD0(L6_471)                                                      ;
    // #endregion Расчет строк 010, 190, 240, 330, 350, 370, 380, 390, 480, 481

    // #region Стр. 450 = стр. 350 - стр. 360 (если 350 меньше 0 (нуля), то 0 (ноль))
    if (L6_350 < 0)
    {
      L6_450 := 0;  #_SetFldGV(L6_450)

      mL6_450 := 'Стр. 450 = 0 (нулю) (т.к. стр. 350 меньше нуля)';
      vL6_450 := GD0(L6_450)+' = 0';
    }
    else
    {
      L6_450 := L6_350 - L6_360;  #_SetFldGV(L6_450)

      vL6_450 := GD0(L6_450)+' = '+GD0(L6_350)+' - '+GD0(L6_360);
      mL6_450 := 'Стр. 450 = стр. 350 - стр. 360';
    }
    // #endregion Стр. 450 = стр. 350 - стр. 360 (если 350 меньше 0 (нуля), то 0 (ноль))

    // #region Стр. 490 = стр. 390 - стр. 400 (если 390 меньше 0 (нуля), то 0 (ноль))
    if (L6_390 < 0)
    {
      L6_490 := 0;  #_SetFldGV(L6_490)

      mL6_490 := 'Стр. 490 = 0 (нулю) (т.к. стр. 390 меньше нуля)';
      vL6_490 := GD0(L6_490)+' = 0';
    }
    else
    {
      L6_490 := L6_390 - L6_400;  #_SetFldGV(L6_490)

      vL6_490 := GD0(L6_490)+' = '+GD0(L6_390)+' - '+GD0(L6_400);
      mL6_490 := 'Стр. 490 = стр. 390 - стр. 400' ;
    }
    // #endregion Стр. 490 = стр. 390 - стр. 400 (если 390 меньше 0 (нуля), то 0 (ноль))

    // Строка 520 заполняется только в Декларации за налоговый период
    // #region Стр. 520 = стр. 500 - стр. 510 (если Период <> Год (16, 34, 46, 68), то 0 (ноль))
    if NalPer_God
    {
      L6_520 := L6_500 - L6_510;  #_SetFldGV(L6_520)

      mL6_520 := 'Стр. 520 = стр. 500 - стр. 510';
      vL6_520 := GD0(L6_520)+' = '+GD0(L6_500)+' - '+GD0(L6_510);
    }
    else
    {
      L6_520 := 0;  #_SetSNull(L6_520)

      mL6_520 := 'Стр. 520 заполняется ТОЛЬКО за налоговый период (Период = 16, 34, 46 или 68)';
      vL6_520 := 'Текущее значение поля: ' + if(GetStrVal(aL6_520) = '', 'ПУСТО', GetStrVal(L6_520) + '  НЕ ДОЛЖНО БЫТЬ ЗАПОЛНЕНО');
    }

    #_LogInfo(L6_520)
    // #endregion Стр. 520 = стр. 500 - стр. 510 (если Период <> Год (16, 34, 46, 68), то 0 (ноль))

    // Если 330 меньше 0 (ноля)
    // то Стр. 530 = стр. 330 + стр. 410 + стр. 450 - стр. 470 + стр. 490 - стр. 510
    // иначе Стр. 530 = стр. 410 + стр. 450 - стр. 470 + стр. 490 - стр. 510
    // #region cтр. 530
    if L6_330 < 0
    {
      L6_530 := L6_330 + L6_450 - L6_470 + L6_490 - L6_510;  #_SetFldGV(L6_530)

      mL6_530 := 'Стр. 530 = стр. 330 + стр. 410 + стр. 450 - стр. 470 + стр. 490 - стр. 510';
      vL6_530 := GD0(L6_530)+' = '+GD0(L6_330)+' + '+GD0(L6_450)+' - '+GD0(L6_470)+' + '+GD0(L6_490)
                            +' - '+GD0(L6_510)                                                                        ;
    }
    else
    {
      L6_530 := L6_450 - L6_470 + L6_490 - L6_510;  #_SetFldGV(L6_530)

      mL6_530 := 'Стр. 530 = стр. 410 + стр. 450 - стр. 470 + стр. 490 - стр. 510';
      vL6_530 := GD0(L6_530)+' = '+GD0(L6_450)+' - '+GD0(L6_470)+' + '+GD0(L6_490)+' - '+GD0(L6_510);
    }
    // #endregion cтр. 530

    #_LogInfo(L6_010) // #region _LogInfo
    #_LogInfo(L6_190)
    #_LogInfo(L6_240)
    #_LogInfo(L6_330)
    #_LogInfo(L6_350)
    #_LogInfo(L6_370)
    #_LogInfo(L6_380)
    #_LogInfo(L6_390)
    #_LogInfo(L6_450)
    #_LogInfo(L6_480)
    #_LogInfo(L6_481)
    #_LogInfo(L6_490)
    #_LogInfo(L6_530) // #endregion _LogInfo
  }
  // #endregion ЛИСТ 06

  // #region ЛИСТ 09

  // #region ОБЪЯВЛЕНИЕ ПЕРЕМЕННЫХ
  var flB1, flB2, flB3, flL9b1_160 : boolean;
  var L9_p10
    , L9b1_010, L9b1_020, L9b1_030, L9b1_040, L9b1_050, L9b1_060, L9b1_070, L9b1_080, L9b1_090, L9b1_100, L9b1_110, L9b1_120, L9b1_130, L9b1_140
    , L9b1_150, L9b1_160, L9b1_170, L9b1_180, L9b1_190, L9b1_200, L9b1_210, L9b1_220, L9b1_230
    , L9b2_010, L9b2_020, L9b2_030, L9b2_040, L9b2_050, L9b2_060, L9b2_070, L9b2_080, L9b2_090, L9b2_100, L9b2_110, L9b2_120, L9b2_130, L9b2_140
    , L9b2_150, L9b2_160, L9b2_170, L9b2_180, L9b2_190, L9b2_200, L9b2_210, L9b2_220, L9b2_230, L9b2_240, L9b2_250
    , L9b3_010, L9b3_011, L9b3_012, L9b3_013, L9b3_014, L9b3_020, L9b3_021, L9b3_022, L9b3_023, L9b3_024, L9b3_030
    , L9b3_040, L9b3_050, L9b3_060, L9b3_070, L9b3_080, L9b3_090, L9b3_100, L9b3_110, L9b3_120, L9b3_130
    , L9P1_010, L9P1_020, L9P1_030, L9P1_140, L9P1_150, L9P1_140_1, L9P1_140_2, L9P1_140_else : double = 0;
  var aL9_p10
    , aL9b1_010, aL9b1_020, aL9b1_030, aL9b1_040, aL9b1_050, aL9b1_060, aL9b1_070, aL9b1_080, aL9b1_090, aL9b1_100, aL9b1_110, aL9b1_120, aL9b1_130, aL9b1_140
    , aL9b1_150, aL9b1_160, aL9b1_170, aL9b1_180, aL9b1_190, aL9b1_200, aL9b1_210, aL9b1_220, aL9b1_230
    , aL9b2_010, aL9b2_020, aL9b2_030, aL9b2_040, aL9b2_050, aL9b2_060, aL9b2_070, aL9b2_080, aL9b2_090, aL9b2_100, aL9b2_110, aL9b2_120, aL9b2_130, aL9b2_140
    , aL9b2_150, aL9b2_160, aL9b2_170, aL9b2_180, aL9b2_190, aL9b2_200, aL9b2_210, aL9b2_220, aL9b2_230, aL9b2_240, aL9b2_250
    , aL9b3_010, aL9b3_011, aL9b3_012, aL9b3_013, aL9b3_014, aL9b3_020, aL9b3_021, aL9b3_022, aL9b3_023, aL9b3_024, aL9b3_030
    , aL9b3_040, aL9b3_050, aL9b3_060, aL9b3_070, aL9b3_080, aL9b3_090, aL9b3_100, aL9b3_110, aL9b3_120, aL9b3_130
    , aL9P1_Kod, aL9P1_010, aL9P1_020, aL9P1_030, aL9P1_140, aL9P1_150

    , mL9b1_010, mL9b1_020, mL9b1_030, mL9b1_040, mL9b1_050, mL9b1_060, mL9b1_070, mL9b1_080, mL9b1_090, mL9b1_100, mL9b1_110, mL9b1_120, mL9b1_130, mL9b1_140
    , mL9b1_150, mL9b1_160, mL9b1_170, mL9b1_180, mL9b1_190, mL9b1_200, mL9b1_210, mL9b1_220, mL9b1_230
    , mL9b2_010, mL9b2_020, mL9b2_030, mL9b2_040, mL9b2_050, mL9b2_060, mL9b2_070, mL9b2_080, mL9b2_090, mL9b2_100, mL9b2_110, mL9b2_120, mL9b2_130, mL9b2_140
    , mL9b2_150, mL9b2_160, mL9b2_170, mL9b2_180, mL9b2_190, mL9b2_200, mL9b2_210, mL9b2_220, mL9b2_230, mL9b2_240, mL9b2_250
    , mL9b3_010, mL9b3_011, mL9b3_012, mL9b3_013, mL9b3_014, mL9b3_020, mL9b3_021, mL9b3_022, mL9b3_023, mL9b3_024, mL9b3_030
    , mL9b3_040, mL9b3_050, mL9b3_060, mL9b3_070, mL9b3_080, mL9b3_090, mL9b3_100, mL9b3_110, mL9b3_120, mL9b3_130
    , mL9P1_010, mL9P1_020, mL9P1_030, mL9P1_140, mL9P1_150

    , vL9b1_010, vL9b1_020, vL9b1_030, vL9b1_040, vL9b1_050, vL9b1_060, vL9b1_070, vL9b1_080, vL9b1_090, vL9b1_100, vL9b1_110, vL9b1_120, vL9b1_130, vL9b1_140
    , vL9b1_150, vL9b1_160, vL9b1_170, vL9b1_180, vL9b1_190, vL9b1_200, vL9b1_210, vL9b1_220, vL9b1_230
    , vL9b2_010, vL9b2_020, vL9b2_030, vL9b2_040, vL9b2_050, vL9b2_060, vL9b2_070, vL9b2_080, vL9b2_090, vL9b2_100, vL9b2_110, vL9b2_120, vL9b2_130, vL9b2_140
    , vL9b2_150, vL9b2_160, vL9b2_170, vL9b2_180, vL9b2_190, vL9b2_200, vL9b2_210, vL9b2_220, vL9b2_230, vL9b2_240, vL9b2_250
    , vL9b3_010, vL9b3_011, vL9b3_012, vL9b3_013, vL9b3_014, vL9b3_020, vL9b3_021, vL9b3_022, vL9b3_023, vL9b3_024, vL9b3_030
    , vL9b3_040, vL9b3_050, vL9b3_060, vL9b3_070, vL9b3_080, vL9b3_090, vL9b3_100, vL9b3_110, vL9b3_120, vL9b3_130
    , vL9P1_010, vL9P1_020, vL9P1_030, vL9P1_140, vL9P1_150, vL9P1_140_1, vL9P1_140_2, vL9P1_140_else : String = '';
  // #endregion ОБЪЯВЛЕНИЕ ПЕРЕМЕННЫХ

  // #region MESSAGEs
  mL9b1_040 := 'Стр. 040 = стр. 010 - стр. 020 + стр. 030'                                              ;
  mL9b1_080 := 'Стр. 080 = стр. 040 - стр. 070'                                                         ;
  mL9b1_090 := 'Стр. 090 = стр. 080 * стр. 050'                                                         ;
  mL9b1_150 := 'Стр. 150 = (стр. 080 - стр. 100 - стр. 110 - стр. 120 - стр. 130 - стр. 140) x стр. 050';
  mL9b1_160 := 'Стр. 160 = (стр. 140 Приложения N 1 к Листу 09)'                                        ;
  mL9b1_170 := 'Стр. 170 = стр. 150 - стр. 160'                                                         ;
  mL9b1_180 := 'Стр. 180 = (стр. 170 x п. 10 Раздела А Листа 09 / 100%)'                                ;
  mL9b1_200 := 'Стр. 200 = стр. 180 - стр. 190'                                                         ;
  mL9b1_230 := 'Стр. 230 = стр. 210 - стр. 220'                                                         ;

  mL9b2_050 := 'Стр. 050 = стр. 010 + стр. 020 - стр. 030 - стр. 040'           ;
  mL9b2_070 := 'Стр. 070 = стр. 050 * стр. 060'                                 ;
  mL9b2_090 := 'Стр. 090 = стр. 050 - стр. 080'                                 ;
  mL9b2_100 := 'Стр. 100 = стр. 060 * стр. 090'                                 ;
  mL9b2_170 := 'Стр. 170 = стр. 060 * стр. 160'                                 ;
  mL9b2_180 := 'Стр. 180 = (стр. 140 Приложения N 1 к Листу 09 с кодом "1")'    ;
  mL9b2_190 := 'Стр. 190 = стр. 170 - стр. 180'                                 ;
  mL9b1_200 := 'Стр. 200 = (стр. 190 x п. 10 Раздела А Листа 09 / 100%)'        ;
  mL9b1_220 := 'Стр. 220 = (стр. 200 - стр. 210 + стр. 130 Раздела Б3 Листа 09)';

  mL9b3_030 := 'Стр. 030 = стр. 010 - стр. 020'                             ;
  mL9b3_050 := 'Стр. 050 = стр. 030 * стр. 040'                             ;
  mL9b3_070 := 'Стр. 070 = стр. 030 - стр. 060'                             ;
  mL9b3_080 := 'Стр. 080 = стр. 070 * стр. 040'                             ;
  mL9b3_090 := 'Стр. 090 = (стр. 140 Приложения N 1 к Листу 09 с кодом "2")';
  mL9b3_100 := 'Стр. 100 = стр. 080 - стр. 090'                             ;
  mL9b3_110 := 'Стр. 110 = (стр. 100 x п. 10 Раздела А Листа 09 / 100%)'    ;
  mL9b3_130 := 'Стр. 130 = стр. 110 - стр. 120'                             ;
  // #endregion MESSAGEs

  CountI := XMLMAP.GetNodeCountByName('Файл/Документ/Прибыль/РасчНалКИК/СведКИК');
  for (i := 0; i < CountI; i++)
  {
    XMLAdrI := 'Файл/Документ/Прибыль/РасчНалКИК/СведКИК' + getIter(i);

    // #region АДРЕСА ПОЛЕЙ
    aL9_p10   := XMLAdrI + '/ДоляУчПриб';

    aL9b1_010 := XMLAdrI + '/РасчНал1.1.309.1/ПрибДоНалФО'       ;
    aL9b1_020 := XMLAdrI + '/РасчНал1.1.309.1/ДохНеУчПриб'       ;
    aL9b1_030 := XMLAdrI + '/РасчНал1.1.309.1/СумКорПрибАкт'     ;
    aL9b1_040 := XMLAdrI + '/РасчНал1.1.309.1/КорВелПрибВал'     ;
    aL9b1_050 := XMLAdrI + '/РасчНал1.1.309.1/КурсВалют'         ;
    aL9b1_060 := XMLAdrI + '/РасчНал1.1.309.1/ВеличПрибНал'      ;
    aL9b1_070 := XMLAdrI + '/РасчНал1.1.309.1/СумКорПриб'        ;
    aL9b1_080 := XMLAdrI + '/РасчНал1.1.309.1/КорПрибВал'        ;
    aL9b1_090 := XMLAdrI + '/РасчНал1.1.309.1/КорПрибРуб'        ;
    aL9b1_100 := XMLAdrI + '/РасчНал1.1.309.1/ДивПромежФО'       ;
    aL9b1_110 := XMLAdrI + '/РасчНал1.1.309.1/ДивГодСледФО'      ;
    aL9b1_120 := XMLAdrI + '/РасчНал1.1.309.1/РаспрПриб'         ;
    aL9b1_130 := XMLAdrI + '/РасчНал1.1.309.1/ДохДивИстРО'       ;
    aL9b1_140 := XMLAdrI + '/РасчНал1.1.309.1/ПрибУвелУстКап'    ;
    aL9b1_150 := XMLAdrI + '/РасчНал1.1.309.1/ПрибУбытНалоблРуб' ;
    aL9b1_160 := XMLAdrI + '/РасчНал1.1.309.1/УбытУменНБРуб'     ;
    aL9b1_170 := XMLAdrI + '/РасчНал1.1.309.1/ПрибУбытПодлНалобл';
    aL9b1_180 := XMLAdrI + '/РасчНал1.1.309.1/ПрибДолКонтрЛиц'   ;
    aL9b1_190 := XMLAdrI + '/РасчНал1.1.309.1/ПрибКосвУчаст'     ;
    aL9b1_200 := XMLAdrI + '/РасчНал1.1.309.1/НалБазаИсчРуб'     ;
    aL9b1_210 := XMLAdrI + '/РасчНал1.1.309.1/ИсчислНал'         ;
    aL9b1_220 := XMLAdrI + '/РасчНал1.1.309.1/СумНал309.1'       ;
    aL9b1_230 := XMLAdrI + '/РасчНал1.1.309.1/НалУплат'          ;

    aL9b2_010 := XMLAdrI + '/РасчНал2.1.309.1/ДоходРеал'        ;
    aL9b2_020 := XMLAdrI + '/РасчНал2.1.309.1/ВнеРеалДох'       ;
    aL9b2_030 := XMLAdrI + '/РасчНал2.1.309.1/РасхУмДохРеал'    ;
    aL9b2_040 := XMLAdrI + '/РасчНал2.1.309.1/ВнеРеалРасх'      ;
    aL9b2_050 := XMLAdrI + '/РасчНал2.1.309.1/Прибыль'          ;
    aL9b2_060 := XMLAdrI + '/РасчНал2.1.309.1/КурсВалют'        ;
    aL9b2_070 := XMLAdrI + '/РасчНал2.1.309.1/ПрибЦелНал'       ;
    aL9b2_080 := XMLAdrI + '/РасчНал2.1.309.1/ОбщКорПриб'       ;
    aL9b2_090 := XMLAdrI + '/РасчНал2.1.309.1/КорПрибВал'       ;
    aL9b2_100 := XMLAdrI + '/РасчНал2.1.309.1/КорПрибРуб'       ;
    aL9b2_110 := XMLAdrI + '/РасчНал2.1.309.1/ДивПромежФО'      ;
    aL9b2_120 := XMLAdrI + '/РасчНал2.1.309.1/ДивГодСледФО'     ;
    aL9b2_130 := XMLAdrI + '/РасчНал2.1.309.1/РаспрПриб'        ;
    aL9b2_140 := XMLAdrI + '/РасчНал2.1.309.1/ДохДивИстРО'      ;
    aL9b2_150 := XMLAdrI + '/РасчНал2.1.309.1/ПрибУвелУстКап'   ;
    aL9b2_160 := XMLAdrI + '/РасчНал2.1.309.1/ПрибПодлУчет'     ;
    aL9b2_170 := XMLAdrI + '/РасчНал2.1.309.1/ПрибУбытНалоблРуб';
    aL9b2_180 := XMLAdrI + '/РасчНал2.1.309.1/УбытУменНБ'       ;
    aL9b2_190 := XMLAdrI + '/РасчНал2.1.309.1/ПрибПодлУчетРуб'  ;
    aL9b2_200 := XMLAdrI + '/РасчНал2.1.309.1/ПрибДоляУчаст'    ;
    aL9b2_210 := XMLAdrI + '/РасчНал2.1.309.1/ПрибУчетКосвУчаст';
    aL9b2_220 := XMLAdrI + '/РасчНал2.1.309.1/НалБазаИсчРуб'    ;
    aL9b2_230 := XMLAdrI + '/РасчНал2.1.309.1/ИсчислНал'        ;
    aL9b2_240 := XMLAdrI + '/РасчНал2.1.309.1/СумНал309.1'      ;
    aL9b2_250 := XMLAdrI + '/РасчНал2.1.309.1/НалУплат'         ;

    aL9b3_010 := XMLAdrI + '/РасчОперЦБ/ДохВыбыт'         ;
    aL9b3_011 := XMLAdrI + '/РасчОперЦБ/ДохВыбЦБНеОбр'    ;
    aL9b3_012 := XMLAdrI + '/РасчОперЦБ/ДохЦБНеОбрМин'    ;
    aL9b3_013 := XMLAdrI + '/РасчОперЦБ/ДохФИНеОбр'       ;
    aL9b3_014 := XMLAdrI + '/РасчОперЦБ/ДохФИНеОбрМин'    ;
    aL9b3_020 := XMLAdrI + '/РасчОперЦБ/РасхПриобр'       ;
    aL9b3_021 := XMLAdrI + '/РасчОперЦБ/РасхПриобрЦБ'     ;
    aL9b3_022 := XMLAdrI + '/РасчОперЦБ/РасхПриобрЦБМакс' ;
    aL9b3_023 := XMLAdrI + '/РасчОперЦБ/РасхФИНеОбр'      ;
    aL9b3_024 := XMLAdrI + '/РасчОперЦБ/РасхФИНеОбрМакс'  ;
    aL9b3_030 := XMLAdrI + '/РасчОперЦБ/Прибыль'          ;
    aL9b3_040 := XMLAdrI + '/РасчОперЦБ/КурсВалют'        ;
    aL9b3_050 := XMLAdrI + '/РасчОперЦБ/ПрибУбЦелНал'     ;
    aL9b3_060 := XMLAdrI + '/РасчОперЦБ/ОбщКорПриб'       ;
    aL9b3_070 := XMLAdrI + '/РасчОперЦБ/КорПрибУбНалВал'  ;
    aL9b3_080 := XMLAdrI + '/РасчОперЦБ/КорПрибУбНалРуб'  ;
    aL9b3_090 := XMLAdrI + '/РасчОперЦБ/УбытУменНБ'       ;
    aL9b3_100 := XMLAdrI + '/РасчОперЦБ/ПрибПодлУчетРуб'  ;
    aL9b3_110 := XMLAdrI + '/РасчОперЦБ/ПрибДоляУчаст'    ;
    aL9b3_120 := XMLAdrI + '/РасчОперЦБ/ПрибУчетКосвУчаст';
    aL9b3_130 := XMLAdrI + '/РасчОперЦБ/НалБазаИсчРуб'    ;

    // #endregion АДРЕСА ПОЛЕЙ

    // #region ПОЛУЧЕНИЕ ДАННЫХ
    L9_p10 := GetDblVal(aL9_p10);

    flB1 := flB2 := flB2 := flL9b1_160 := False;

    if (   GetStrNull(XMLAdrI + '/РасчНал1.1.309.1/Валюта'        )
        or GetStrNull(XMLAdrI + '/РасчНал1.1.309.1/ПрибДоНалФО'   )
        or GetStrNull(XMLAdrI + '/РасчНал1.1.309.1/ДохНеУчПриб'   )
        or GetStrNull(XMLAdrI + '/РасчНал1.1.309.1/СумКорПрибАкт' )
        or GetStrNull(XMLAdrI + '/РасчНал1.1.309.1/КурсВалют'     )
        or GetStrNull(XMLAdrI + '/РасчНал1.1.309.1/СумКорПриб'    ) )
    then {
      flB1 := False;
      L9b1_010 := L9b1_020 := L9b1_030 := L9b1_040 := L9b1_050 := L9b1_060 := L9b1_070 := L9b1_080 := L9b1_090 := L9b1_100 := L9b1_110 := L9b1_120 := L9b1_130 := L9b1_140 :=
      L9b1_150 := L9b1_160 := L9b1_170 := L9b1_180 := L9b1_190 := L9b1_200 := L9b1_210 := L9b1_220 := L9b1_230 := 0
    }
    else {
      flB1 := True;
      L9b1_010 := GetDblVal_IfNotNull(aL9b1_010);
      L9b1_020 := GetDblVal_IfNotNull(aL9b1_020);
      L9b1_030 := GetDblVal_IfNotNull(aL9b1_030);
      L9b1_040 := GetDblVal_IfNotNull(aL9b1_040);
      L9b1_050 := GetDblVal_IfNotNull(aL9b1_050);
      L9b1_060 := GetDblVal_IfNotNull(aL9b1_060);
      L9b1_070 := GetDblVal_IfNotNull(aL9b1_070);
      L9b1_080 := GetDblVal_IfNotNull(aL9b1_080);
      L9b1_090 := GetDblVal_IfNotNull(aL9b1_090);
      L9b1_100 := GetDblVal_IfNotNull(aL9b1_100);
      L9b1_110 := GetDblVal_IfNotNull(aL9b1_110);
      L9b1_120 := GetDblVal_IfNotNull(aL9b1_120);
      L9b1_130 := GetDblVal_IfNotNull(aL9b1_130);
      L9b1_140 := GetDblVal_IfNotNull(aL9b1_140);
      L9b1_150 := GetDblVal_IfNotNull(aL9b1_150);
      L9b1_160 := GetDblVal_IfNotNull(aL9b1_160);
      L9b1_170 := GetDblVal_IfNotNull(aL9b1_170);
      L9b1_180 := GetDblVal_IfNotNull(aL9b1_180);
      L9b1_190 := GetDblVal_IfNotNull(aL9b1_190);
      L9b1_200 := GetDblVal_IfNotNull(aL9b1_200);
      L9b1_210 := GetDblVal_IfNotNull(aL9b1_210);
      L9b1_220 := GetDblVal_IfNotNull(aL9b1_220);
      L9b1_230 := GetDblVal_IfNotNull(aL9b1_230);
    }

    if (   GetStrNull(XMLAdrI + '/РасчНал2.1.309.1/ОснРасПриб'   )
        or GetStrNull(XMLAdrI + '/РасчНал2.1.309.1/Валюта'       )
        or GetStrNull(XMLAdrI + '/РасчНал2.1.309.1/ДоходРеал'    )
        or GetStrNull(XMLAdrI + '/РасчНал2.1.309.1/ВнеРеалДох'   )
        or GetStrNull(XMLAdrI + '/РасчНал2.1.309.1/РасхУмДохРеал')
        or GetStrNull(XMLAdrI + '/РасчНал2.1.309.1/ВнеРеалРасх'  )
        or GetStrNull(XMLAdrI + '/РасчНал2.1.309.1/КурсВалют'    ) )
    then {
      flB2 := False;
      L9b2_010 := L9b2_020 := L9b2_030 := L9b2_040 := L9b2_050 := L9b2_060 := L9b2_070 := L9b2_080 := L9b2_090 := L9b2_100 := L9b2_110 := L9b2_120 := L9b2_130 := L9b2_140 := 0
      L9b2_150 := L9b2_160 := L9b2_170 := L9b2_180 := L9b2_190 := L9b2_200 := L9b2_210 := L9b2_220 := L9b2_230 := L9b2_240 := L9b2_250 := 0
    }
    else {
      flB2 := True;
      L9b2_010 := GetDblVal_IfNotNull(aL9b2_010);
      L9b2_020 := GetDblVal_IfNotNull(aL9b2_020);
      L9b2_030 := GetDblVal_IfNotNull(aL9b2_030);
      L9b2_040 := GetDblVal_IfNotNull(aL9b2_040);
      L9b2_050 := GetDblVal_IfNotNull(aL9b2_050);
      L9b2_060 := GetDblVal_IfNotNull(aL9b2_060);
      L9b2_070 := GetDblVal_IfNotNull(aL9b2_070);
      L9b2_080 := GetDblVal_IfNotNull(aL9b2_080);
      L9b2_090 := GetDblVal_IfNotNull(aL9b2_090);
      L9b2_100 := GetDblVal_IfNotNull(aL9b2_100);
      L9b2_110 := GetDblVal_IfNotNull(aL9b2_110);
      L9b2_120 := GetDblVal_IfNotNull(aL9b2_120);
      L9b2_130 := GetDblVal_IfNotNull(aL9b2_130);
      L9b2_140 := GetDblVal_IfNotNull(aL9b2_140);
      L9b2_150 := GetDblVal_IfNotNull(aL9b2_150);
      L9b2_160 := GetDblVal_IfNotNull(aL9b2_160);
      L9b2_170 := GetDblVal_IfNotNull(aL9b2_170);
      L9b2_180 := GetDblVal_IfNotNull(aL9b2_180);
      L9b2_190 := GetDblVal_IfNotNull(aL9b2_190);
      L9b2_200 := GetDblVal_IfNotNull(aL9b2_200);
      L9b2_210 := GetDblVal_IfNotNull(aL9b2_210);
      L9b2_220 := GetDblVal_IfNotNull(aL9b2_220);
      L9b2_230 := GetDblVal_IfNotNull(aL9b2_230);
      L9b2_240 := GetDblVal_IfNotNull(aL9b2_240);
      L9b2_250 := GetDblVal_IfNotNull(aL9b2_250);
    }

    if (   GetStrNull(XMLAdrI + '/РасчОперЦБ/Валюта'         )
        or GetStrNull(XMLAdrI + '/РасчОперЦБ/ДохВыбыт'       )
        or GetStrNull(XMLAdrI + '/РасчОперЦБ/ДохВыбЦБНеОбр'  )
        or GetStrNull(XMLAdrI + '/РасчОперЦБ/ДохФИНеОбр'     )
        or GetStrNull(XMLAdrI + '/РасчОперЦБ/РасхПриобр'     )
        or GetStrNull(XMLAdrI + '/РасчОперЦБ/РасхПриобрЦБ'   )
        or GetStrNull(XMLAdrI + '/РасчОперЦБ/РасхФИНеОбр'    )
        or GetStrNull(XMLAdrI + '/РасчОперЦБ/КурсВалют'      )
        or GetStrNull(XMLAdrI + '/РасчОперЦБ/ОбщКорПриб'     ) )
    then {
      flB3 := False;
      L9b3_010 := L9b3_011 := L9b3_012 := L9b3_013 := L9b3_014 := L9b3_020 := L9b3_021 := L9b3_022 := L9b3_023 := L9b3_024 := L9b3_030 := 0
      L9b3_040 := L9b3_050 := L9b3_060 := L9b3_070 := L9b3_080 := L9b3_090 := L9b3_100 := L9b3_110 := L9b3_120 := L9b3_130 := 0
    }
    else {
      flB3 := True;
      L9b3_010 := GetDblVal_IfNotNull(aL9b3_010);
      L9b3_011 := GetDblVal_IfNotNull(aL9b3_011);
      L9b3_012 := GetDblVal_IfNotNull(aL9b3_012);
      L9b3_013 := GetDblVal_IfNotNull(aL9b3_013);
      L9b3_014 := GetDblVal_IfNotNull(aL9b3_014);
      L9b3_020 := GetDblVal_IfNotNull(aL9b3_020);
      L9b3_021 := GetDblVal_IfNotNull(aL9b3_021);
      L9b3_022 := GetDblVal_IfNotNull(aL9b3_022);
      L9b3_023 := GetDblVal_IfNotNull(aL9b3_023);
      L9b3_024 := GetDblVal_IfNotNull(aL9b3_024);
      L9b3_030 := GetDblVal_IfNotNull(aL9b3_030);
      L9b3_040 := GetDblVal_IfNotNull(aL9b3_040);
      L9b3_050 := GetDblVal_IfNotNull(aL9b3_050);
      L9b3_060 := GetDblVal_IfNotNull(aL9b3_060);
      L9b3_070 := GetDblVal_IfNotNull(aL9b3_070);
      L9b3_080 := GetDblVal_IfNotNull(aL9b3_080);
      L9b3_090 := GetDblVal_IfNotNull(aL9b3_090);
      L9b3_100 := GetDblVal_IfNotNull(aL9b3_100);
      L9b3_110 := GetDblVal_IfNotNull(aL9b3_110);
      L9b3_120 := GetDblVal_IfNotNull(aL9b3_120);
      L9b3_130 := GetDblVal_IfNotNull(aL9b3_130);
    }

    L9P1_140_1 := L9P1_140_2 := L9P1_140_else := 0;
    vL9P1_140_1 := vL9P1_140_2 := vL9P1_140_else := '';

    CountJ := XMLMap.GetNodeCountByName(XMLAdrI + '/РасчУбытУмНБ');
    for (j := 0; j < CountJ; j++)
    {
      XMLAdrJ := XMLAdrI + '/РасчУбытУмНБ' + getIter(j);

      if (   GetStrNull(XMLAdrJ + '/НалБаза'      )
          or GetStrNull(XMLAdrJ + '/УбытУмНалБаза') )
      then Continue;



      aL9P1_Kod := XMLAdrJ + '/КодОперРасч'    ;
      aL9P1_010 := XMLAdrJ + '/ОстУбытНачВс'   ;
      aL9P1_020 := XMLAdrJ + '/ОстУбыт3ФинГод' ;
      aL9P1_140 := XMLAdrJ + '/УбытУмНалБаза'  ;
      aL9P1_150 := XMLAdrJ + '/ОстУбытКонВс'   ;

      L9P1_010  := 0;
      L9P1_020  := GetDblVal_IfNotNull(aL9P1_020);
      L9P1_010  += L9P1_020;

      CountK := XMLMap.GetNodeCountByName(XMLAdrJ + '/ОстУбытНачПерГод');
      for (k := 0; k < CountK; k++)
      {
        XMLAdrK := XMLAdrJ + '/ОстУбытНачПерГод' + getIter(k);

        if (   GetStrNull(XMLAdrK + '/Год'    )
            or GetStrNull(XMLAdrK + '/Остаток') )
        { continue; }

        aL9P1_030 := XMLAdrK + '/Остаток'; L9P1_030 := GetDblVal_IfNotNull(aL9P1_030);
        L9P1_010 += L9P1_030;
      }
      #_SetFldGV(L9P1_010)

      L9P1_140 := GetDblVal_IfNotNull(aL9P1_140);

      case GetStrVal(aL9P1_Kod) of
        '1' : { L9P1_140_1    += L9P1_140; vL9P1_140_1    += '+' + GD0(L9P1_140); }
        '2' : { L9P1_140_2    += L9P1_140; vL9P1_140_2    += '+' + GD0(L9P1_140); }
        else  { L9P1_140_else += L9P1_140; vL9P1_140_else += '+' + GD0(L9P1_140); }
      end;


       L9P1_150 := L9P1_010 - L9P1_140;
       #_SetFldGV(L9P1_150)
      vL9P1_150 := GD0(L9P1_150)+' = ' +GD0(L9P1_010)+' - '+GD0(L9P1_140);
       #_LogInfo(L9P1_150)

   }
    // #endregion ПОЛУЧЕНИЕ ДАННЫХ

    // #region ЛИСТ 09. Расчет стр. 160 Б1, стр. 180 Б2, стр. 090 Б3
    // Если поле Операции Приложения 1 к Листу 09 равен
    // 1, то значение строки 140 Приложения 1 к Листу 09 переносится в строку 180 Раздела Б2 Листа 09
    // 2, то значение строки 140 Приложения 1 к Листу 09 переносится в строку 090 Раздела Б3 Листа 09
    // иначе значение строки 140 Приложения 1 к Листу 09 переносится в строку 160 Раздела Б1 Листа 09

    if (vL9P1_140_1 <> '')
    {
      L9b2_180 := L9P1_140_1;  #_SetFldGV(L9b2_180);

      vL9b2_180 := GD0(L9b2_180)+' = ' + LTrim(vL9P1_140_1, '+');
      #_LogInfo(L9b2_180)
    }
    else
    {
      L9b2_180 := 0;  #_SetFldGV(L9b2_180);

      vL9b2_180 := GD0(L9b2_180)+' = 0';
      #_LogInfo(L9b2_180)
    }

    if (vL9P1_140_2 <> '')
    {
      L9b3_090 := L9P1_140_2;  #_SetFldGV(L9b3_090);

      vL9b3_090 := GD0(L9b3_090)+' = ' + LTrim(vL9P1_140_2, '+');
      #_LogInfo(L9b3_090)
    }
    else
    {
      L9b3_090 := 0;  #_SetFldGV(L9b3_090);

      vL9b3_090 := GD0(L9b3_090)+' = 0';
      #_LogInfo(L9b3_090)
    }

    if (vL9P1_140_else <> '')
    {
      L9b1_160 := L9P1_140_else;

      vL9b1_160 := GD0(L9b1_160)+' = ' + LTrim(vL9P1_140_else, '+');
      mL9b1_160 := 'Стр. 160 = стр. 140 (Прил. 1 к Листу 09), т.к. поле "Код" (Прил. 1 к Листу 09) не равно "1" или "2"';

      flL9b1_160 := True;
    }
    else
    {
      L9b1_160 := 0;

      vL9b1_160 := GD0(L9b1_160)+' = 0';
      mL9b1_160 := 'Стр. 160 = стр. 140 (Прил. 1 к Листу 09)';
    }
    // #endregion

    // #region Раздел Б1
    if flB1
    {
      L9b1_040 := L9b1_010 - L9b1_020 + L9b1_030;  #_SetFldGV(L9b1_040)
      L9b1_060 := L9b1_040 * L9b1_050           ;  #_SetFldGV(L9b1_060)
      L9b1_080 := L9b1_040 - L9b1_070           ;  #_SetFldGV(L9b1_080)
      L9b1_090 := L9b1_080 * L9b1_050           ;  #_SetFldGV(L9b1_090)
      L9b1_150 := (L9b1_080 - L9b1_100 - L9b1_110 - L9b1_120 - L9b1_130 - L9b1_140) * L9b1_050;
      #_SetFldGV(L9b1_150)

      vL9b1_040 := GD0(L9b1_040)+' = ' +GD0(L9b1_010)+' - '+GD0(L9b1_020)+' + '+GD0(L9b1_030);  #_LogInfo(L9b1_040)
      vL9b1_060 := GD0(L9b1_060)+' = ' +GD0(L9b1_040)+' * '+GD0(L9b1_050)                    ;  #_LogInfo(L9b1_060)
      vL9b1_080 := GD0(L9b1_080)+' = ' +GD0(L9b1_040)+' - '+GD0(L9b1_070)                    ;  #_LogInfo(L9b1_080)
      vL9b1_090 := GD0(L9b1_090)+' = ' +GD0(L9b1_080)+' * '+GD0(L9b1_050)                    ;  #_LogInfo(L9b1_090)
      vL9b1_150 := GD0(L9b1_150)+' = ('+GD0(L9b1_080)+' - '+GD0(L9b1_100)+' - '+GD0(L9b1_110)+' - '+GD0(L9b1_120)+' - '+GD0(L9b1_130)+' - '+GD0(L9b1_140)+') * '+GD0(L9b1_050);
      #_LogInfo(L9b1_150)

      L9b1_170 := L9b1_150 - L9b1_160    ;  #_SetFldGV(L9b1_170)
      L9b1_180 := L9b1_170 * L9_p10 / 100;  #_SetFldGV(L9b1_180)
      L9b1_200 := L9b1_180 - L9b1_190    ;  #_SetFldGV(L9b1_200)
      L9b1_230 := L9b1_210 - L9b1_220    ;  #_SetFldGV(L9b1_230)

      vL9b1_170 := GD0(L9b1_170)+' = ' +GD0(L9b1_150)+' - '+GD0(L9b1_160)            ;  #_LogInfo(L9b1_170)
      vL9b1_180 := GD0(L9b1_180)+' = ' +GD0(L9b1_170)+' * ('+GD15(L9_p10  )+' / 100' ;  #_LogInfo(L9b1_180)
      vL9b1_200 := GD0(L9b1_200)+' = ' +GD0(L9b1_180)+' - '+GD0(L9b1_190)            ;  #_LogInfo(L9b1_200)
      vL9b1_230 := GD0(L9b1_230)+' = ' +GD0(L9b1_210)+' - '+GD0(L9b1_220)            ;  #_LogInfo(L9b1_230)
    }
    // #endregion Раздел Б1

    // #region Раздел Б3
    if flB3
    {
      L9b3_030 := L9b3_010 - L9b3_020      ;  #_SetFldGV(L9b3_030)
      L9b3_050 := L9b3_030 * L9b3_040      ;  #_SetFldGV(L9b3_050)
      L9b3_070 := L9b3_030 - L9b3_060      ;  #_SetFldGV(L9b3_070)
      L9b3_080 := L9b3_070 * L9b3_040      ;  #_SetFldGV(L9b3_080)
      L9b3_100 := L9b3_080 - L9b3_090      ;  #_SetFldGV(L9b3_100)
      L9b3_110 := (L9b3_100 * L9_p10 / 100);  #_SetFldGV(L9b3_110)
      L9b3_130 := L9b3_110 - L9b3_120      ;  #_SetFldGV(L9b3_130)

      vL9b3_030 := GD0(L9b3_030)+' = ' +GD0(L9b3_010)+' - '+GD0(L9b3_020)          ;  #_LogInfo(L9b3_030)
      vL9b3_050 := GD0(L9b3_050)+' = ' +GD0(L9b3_030)+' * '+GD0(L9b3_040)          ;  #_LogInfo(L9b3_050)
      vL9b3_070 := GD0(L9b3_070)+' = ' +GD0(L9b3_030)+' - '+GD4(L9b3_060)          ;  #_LogInfo(L9b3_070)
      vL9b3_080 := GD0(L9b3_080)+' = ' +GD0(L9b3_070)+' * '+GD0(L9b3_040)          ;  #_LogInfo(L9b3_080)
      vL9b3_100 := GD0(L9b3_100)+' = ' +GD0(L9b3_080)+' - '+GD0(L9b3_090)          ;  #_LogInfo(L9b3_100)

      vL9b3_110 := GD0(L9b3_110)+' = ('+GD0(L9b3_100)+' * ' +GD15(L9_p10)+') / 100';  #_LogInfo(L9b3_110)
      vL9b3_130 := GD0(L9b3_130)+' = ' +GD0(L9b3_110)+' - '+GD0(L9b3_120)          ;  #_LogInfo(L9b3_120)
    }
    // #endregion Раздел Б3

    // #region Раздел Б2
    if flB2
    {
      // #region Расчет строк
      L9b2_050 := L9b2_010 + L9b2_020 - L9b2_030 - L9b2_040;  #_SetFldGV(L9b2_050)
      L9b2_070 := L9b2_050 * L9b2_060                      ;  #_SetFldGV(L9b2_070)
      L9b2_080 := L9b2_050 - L9b2_060 - L9b2_070           ;  #_SetFldGV(L9b2_080)
      L9b2_090 := L9b2_050 - L9b2_080                      ;  #_SetFldGV(L9b2_090)
      L9b2_100 := L9b2_060 * L9b2_090                      ;  #_SetFldGV(L9b2_100)
      L9b2_160 := L9b2_090 - L9b2_110 - L9b2_120 - L9b2_130 - L9b2_140 - L9b2_150;
      #_SetFldGV(L9b2_160)

      L9b2_170 := Abs(L9b2_060 * L9b2_160)                 ;  #_SetFldGV(L9b2_170)
      L9b2_190 := L9b2_170 - L9b2_180                      ;  #_SetFldGV(L9b2_190)

      If(L9b2_190 < 0)
      { L9b2_200 := 0; }
      else
      { L9b2_200 := L9b2_190 * L9_p10 / 100; }
      #_SetFldGV(L9b2_200)

      L9b2_220 := L9b2_200 - L9b2_210 + L9b3_120           ;  #_SetFldGV(L9b2_220)
      L9b2_250 := L9b2_230 - L9b2_240                      ;  #_SetFldGV(L9b2_250)

      vL9b2_050 := GD0(L9b2_050)+' = ' +GD0(L9b2_010)+' + '+GD0(L9b2_020)+' - '+GD0(L9b2_030)+' - '+GD0(L9b2_040);  #_LogInfo(L9b2_050)
      vL9b2_070 := GD0(L9b2_070)+' = ' +GD0(L9b2_050)+' * '+GD4(L9b2_060)                                        ;  #_LogInfo(L9b2_070)
      vL9b2_080 := GD0(L9b2_080)+' = ' +GD0(L9b2_050)+' - '+GD0(L9b2_060)+' - '+GD0(L9b2_070)                    ;  #_LogInfo(L9b2_080)
      vL9b2_090 := GD0(L9b2_090)+' = ' +GD0(L9b2_050)+' - '+GD0(L9b2_080)                                        ;  #_LogInfo(L9b2_090)
      vL9b2_100 := GD0(L9b2_100)+' = ' +GD0(L9b2_060)+' * '+GD4(L9b2_090)                                        ;  #_LogInfo(L9b2_100)
      vL9b2_160 := GD0(L9b2_160)+' = '+GD0(L9b2_090)+' - '+GD0(L9b2_110)+' - '+GD0(L9b2_120)+' - '+GD0(L9b2_130)+' - '+GD0(L9b2_140)+' - '+GD0(L9b2_150);
      #_LogInfo(L9b2_160)

      vL9b2_170 := GD0(L9b2_170)+' = ABS(' +GD0(L9b2_060)+' * '+GD4(L9b2_160)+')'                                ;  #_LogInfo(L9b2_170)
      vL9b2_190 := GD0(L9b2_190)+' = ' +GD0(L9b2_170)+' - '+GD0(L9b2_180)                                        ;  #_LogInfo(L9b2_190)

      If(L9b2_190 < 0)
      { vL9b2_200 := GD0(L9b2_200)+' = 0' }
      else
      { vL9b2_200 := GD0(L9b2_200)+' = ' +GD0(L9b2_190)+' * ('+GD15(L9_p10  )+' / 100' ; }
      #_LogInfo(L9b2_200)

      vL9b2_220 := GD0(L9b2_220)+' = ' +GD0(L9b2_200)+' - '+GD0(L9b2_210)+' + '+GD0(L9b3_120)                    ;  #_LogInfo(L9b2_220)
      vL9b2_250 := GD0(L9b2_250)+' = ' +GD0(L9b2_230)+' - '+GD0(L9b2_240)                                        ;  #_LogInfo(L9b2_250)
      // #endregion Расчет строк
    }
    // #endregion Раздел Б2
  }
  //#endregion ЛИСТ 09

  // #region ЛИСТ 02

  // #region ОБЪЯВЛЕНИЕ ПЕРЕМЕННЫХ
  var fl_L2p4_150 : boolean = False;
  var sumL2p6_KolPril, sumL2p6a_040, sumL2p6a_050, sumL2p6a_051, sumL2p6a_070, sumL2p6a_095, sumL2p6a_097
    , bufL2_270_r280, bufL2_271_r281, bufL2_300, bufL2_310
    , sumL2p4_150 : double = 0;
  var vbufL2_270_r280, vbufL2_271_r281, vbufL2_300, vbufL2_310
    , vSumL2p4_150 : string;
  // Данные. Тип: Double
  var L2_SumOp : double;
  var L2_Tip, L2_010, L2_020, L2_030, L2_040, L2_050, L2_060, L2_100, L2_110, L2_120, L2_140, L2_180, L2_190, L2_200, L2_210
    , L2_268, L2_269, L2_270, L2_271, L2_280, L2_281, L2_070, L2_080, L2_130, L2_150, L2_160, L2_170, L2_220, L2_230, L2_250
    , L2_260, L2_267, L2_290, L2_300, L2_310
    , L2p1_010, L2p1_030, L2p1_040, L2p1_011, L2p1_012, L2p1_013, L2p1_014, L2p1_020, L2p1_023, L2p1_027, L2p1_100
    , L2p2_080, L2p2_130, L2p2_010, L2p2_020, L2p2_040, L2p2_059, L2p2_060, L2p2_061, L2p2_070, L2p2_072, L2p2_090, L2p2_100
    , L2p2_110, L2p2_120, L2p2_200, L2p2_300, L2p2_400
    , L2p3_150, L2p3_340, L2p3_350, L2p3_360, L2p3_030, L2p3_040, L2p3_060, L2p3_100, L2p3_120, L2p3_180, L2p3_190
    , L2p3_201, L2p3_210, L2p3_211, L2p3_220, L2p3_221, L2p3_230, L2p3_240, L2p3_250, L2p3_260
    , L2p4_140, L2p4_160, L2p4_161, L2p4_010, L2p4_135, L2p4_136, L2p4_151
    , L2p5_030, L2p5_050, L2p5_070, L2p5_100_110, L2p5_120, L2p5_040, L2p5_060, L2p5_080, L2p5_090, L2p5_097
    , L2p6_040, L2p6_050, L2p6_051, L2p6_070, L2p6_095, L2p6_097, L2p6_100_110, L2p6_120, L2p6_080, L2p6_090, L2p6_KolPril
    , L2p6a_050, L2p6a_070, L2p6a_095, L2p6a_097, L2p6a_030, L2p6a_040, L2p6a_051, L2p6a_060
    , L2p6b_070, L2p6b_020, L2p6b_021, L2p6b_030, L2p6b_031, L2p6b_040, L2p6b_050, L2p6b_060, L2p6b_062 : double = 0;
  // XML адреса переменных. Тип: String
  var aL2_010, aL2_020, aL2_030, aL2_040, aL2_050, aL2_060, aL2_100, aL2_110, aL2_120, aL2_140, aL2_180, aL2_190, aL2_200
    , aL2_210, aL2_268, aL2_269, aL2_270, aL2_271, aL2_280, aL2_281, aL2_290, aL2_300, aL2_310, aL2_Tip, aL2_070, aL2_080
    , aL2_130, aL2_150, aL2_160, aL2_170, aL2_220, aL2_230, aL2_250, aL2_260, aL2_267
    , aL2p1_010, aL2p1_030, aL2p1_040, aL2p1_011, aL2p1_012, aL2p1_013, aL2p1_014, aL2p1_020, aL2p1_023, aL2p1_027, aL2p1_100
    , aL2p2_080, aL2p2_130, aL2p2_010, aL2p2_020, aL2p2_040, aL2p2_059, aL2p2_060, aL2p2_061, aL2p2_070, aL2p2_072, aL2p2_090
    , aL2p2_100, aL2p2_110, aL2p2_120, aL2p2_200, aL2p2_300, aL2p2_400
    , aL2p3_150, aL2p3_340, aL2p3_350, aL2p3_360, aL2p3_030, aL2p3_040, aL2p3_060, aL2p3_100, aL2p3_120, aL2p3_180
    , aL2p3_190, aL2p3_201, aL2p3_210, aL2p3_211, aL2p3_220, aL2p3_221, aL2p3_230, aL2p3_240, aL2p3_250, aL2p3_260
    , aL2p4_140, aL2p4_160, aL2p4_161, aL2p4_010, aL2p4_135, aL2p4_136, aL2p4_150, aL2p4_151
    , aL2p5_030, aL2p5_050, aL2p5_070, aL2p5_100_110, aL2p5_120, aL2p5_040, aL2p5_060, aL2p5_080, aL2p5_090, aL2p5_097
    , aL2p6_040, aL2p6_050, aL2p6_051, aL2p6_070, aL2p6_095, aL2p6_097, aL2p6_100_110, aL2p6_120, aL2p6_080, aL2p6_090, aL2p6_KolPril
    , aL2p6a_050, aL2p6a_070, aL2p6a_095, aL2p6a_097, aL2p6a_030, aL2p6a_040, aL2p6a_051, aL2p6a_060
    , aL2p6b_070, aL2p6b_020, aL2p6b_021, aL2p6b_030, aL2p6b_031, aL2p6b_040, aL2p6b_050, aL2p6b_060, aL2p6b_062
  //Сообщения. Тип: String
    , mL2_010, mL2_020, mL2_030, mL2_040, mL2_050, mL2_060, mL2_100, mL2_110, mL2_120, mL2_140, mL2_180, mL2_190, mL2_200
    , mL2_210, mL2_220, mL2_230, mL2_270, mL2_271, mL2_280, mL2_281, mL2_290, mL2_300, mL2_310
    , mL2p6_040, mL2p6_050, mL2p6_051, mL2p6_070, mL2p6_095, mL2p6_097, mL2p6_100_110, mL2p6_120, mL2p6_KolPril
    , mL2p1_010, mL2p1_030, mL2p1_040
    , mL2p2_080, mL2p2_130
    , mL2p3_150, mL2p3_340, mL2p3_350, mL2p3_360
    , mL2p4_140, mL2p4_160, mL2p4_161
    , mL2p5_030, mL2p5_050, mL2p5_070, mL2p5_100_110, mL2p5_120
    , mL2p6a_050, mL2p6a_070, mL2p6a_095, mL2p6a_097
    , mL2p6b_070
  //Формулы с данными. Тип: String
    , vL2_010, vL2_020, vL2_030, vL2_040, vL2_050, vL2_060, vL2_100, vL2_110, vL2_120, vL2_140, vL2_180, vL2_190, vL2_200
    , vL2_210, vL2_220, vL2_230, vL2_270, vL2_271, vL2_280, vL2_281, vL2_290, vL2_300, vL2_310
    , vL2p1_010, vL2p1_030, vL2p1_040
    , vL2p2_080, vL2p2_130
    , vL2p3_150, vL2p3_340, vL2p3_350, vL2p3_360
    , vL2p4_140, vL2p4_160, vL2p4_161
    , vL2p5_030, vL2p5_050, vL2p5_070, vL2p5_080, vL2p5_100_110, vL2p5_120
    , vL2p6_040, vL2p6_050, vL2p6_051, vL2p6_070, vL2p6_095, vL2p6_097, vL2p6_100_110, vL2p6_120, vL2p6_KolPril
    , vL2p6a_050, vL2p6a_070, vL2p6a_095, vL2p6a_097
    , vL2p6b_070 : string = '';

  var aL2p5_TipNP, aL2p5_ObRasch, aL2p5_Naim, aL2p5_KPP, aL2p5_ObyzUpl
    ,  L2p5_TipNP,  L2p5_ObRasch,  L2p5_Naim,  L2p5_KPP,  L2p5_ObyzUpl : string = '';
  //#endregion ОБЪЯВЛЕНИЕ ПЕРЕМЕННЫХ

  // #region MESSAGEs
  mL2_010 := 'Стр. 010 = стр. 040 Прил. 1 Листа 02'                                                                         ;
  mL2_020 := 'Стр. 020 = стр. 100 Прил. 1 Листа 02'                                                                         ;
  mL2_030 := 'Стр. 030 = стр. 130 Прил. 2 Листа 02'                                                                         ;
  mL2_040 := 'Стр. 040 = (стр. 200 + стр. 300) Прил. 2 Листа 02'                                                            ;
  mL2_050 := 'Стр. 050 = стр. 360 Прил. 3 Листа 02'                                                                         ;
  mL2_060 := 'Стр. 060 = стр. 010 + стр. 020 - стр. 030 - стр. 040 + стр. 050'                                              ;
  mL2_100 := 'Стр. 100 = стр. 060 - стр. 070 - стр. 080 - стр. 400 Прил. 2 Листа 02 + стр. 100 Листа 05 + стр. 530 Листа 06';
  mL2_140 := 'Стр. 140 = стр. 150 + стр. 160'                                                                               ;
  mL2_180 := 'Стр. 180 = стр. 190 + стр. 200'                                                                               ;
  mL2_210 := 'Стр. 210 = стр. 220 + стр. 230'                                                                               ;
  mL2_220 := 'Стр. 220 = стр. предыдущего периода (190 + 300 - 250)'                                                        ;
  mL2_230 := 'Стр. 230 = стр. предыдущего периода (200 + 310 - 260)'                                                        ;

  mL2p1_010 := 'Стр. 010 = стр. 011 + стр. 012 + стр. 013 + стр. 014'           ;
  mL2p1_030 := 'Стр. 030 = стр. 340 Прил. 3 Листа 02'                           ;
  mL2p1_040 := 'Стр. 040 = стр. 010 + стр. 020 + стр. 023 + стр. 027 + стр. 030';

  mL2p2_080 := 'Стр. 080 = стр. 350 Прил. 3 Листа 02'                                                                                  ;
  mL2p2_130 := 'Стр. 130 = стр. 010 + стр. 020 + стр. 040 + стр. 059 + стр. 060 + стр. 061 + стр. 070 + стр. 072 + стр. 080 + стр. 090'
                     + ' + стр. 100 + стр. 110 + стр. 120'                                                                             ;

  mL2p3_340 := 'Стр. 340 = стр. 030 + стр. 100 + стр. 180 + стр. 210 - стр. 211 + стр. 240';
  mL2p3_350 := 'Стр. 350 = стр. 040 + стр. 120 + стр. 190 + стр. 220 + стр. 221 - стр. 250';
  mL2p3_360 := 'Стр. 360 = стр. 060 + стр. 150 + стр. 201 + стр. 230 + стр. 260'           ;

  mL2p4_140 := 'Стр. 140 = стр. 100 Листа 02';

  mL2p5_030     := 'Стр. 030 = стр. 120 Листа 02'                              ;
  mL2p5_050     := 'Стр. 050 = стр. 030 * (стр. 040 / 100)'                    ;
  mL2p5_070     := 'Стр. 070 = стр. 050 * (стр. 060 / 100)'                    ;
  mL2p5_100_110 := 'Стр. 100/110 = стр. 070 - (стр. 080 + стр. 090 + стр. 097)';

  mL2p6_KolPril := 'Кол. приложений = количество вложеных разделов 6а'         ;
  mL2p6_040     := 'Стр. 040 = сумма стр. 040 Прил. 6a Листа 02'               ;
  mL2p6_050     := 'Стр. 050 = сумма стр. 050 Прил. 6a Листа 02'               ;
  mL2p6_051     := 'Стр. 051 = сумма стр. 051 Прил. 6a Листа 02'               ;
  mL2p6_070     := 'Стр. 070 = сумма стр. 070 Прил. 6a Листа 02'               ;
  mL2p6_095     := 'Стр. 095 = сумма стр. 095 Прил. 6a Листа 02'               ;
  mL2p6_097     := 'Стр. 097 = сумма стр. 097 Прил. 6a Листа 02'               ;
  mL2p6_100_110 := 'Стр. 100/110 = стр. 070 - (стр. 080 + стр. 090 + стр. 097)';

  mL2p6a_050 := 'Стр. 050 = стр. 030 * (стр. 040 / 100)'                                     ;
  mL2p6a_070 := 'Стр. 070 = ((стр. 050 - стр. 051) * 18 / 100) + (стр. 051 * стр. 060 / 100)';

  mL2p6b_070 := 'Стр. 070 = стр. 020 + стр. 021 - стр. 030 - стр. 031 + стр. 040 - стр. 050 + стр. 060 - стр. 062';
  // #endregion MESSAGEs

  bufL2_270_r280 := bufL2_271_r281 := bufL2_300 := bufL2_310 := 0;
  vbufL2_270_r280 := vbufL2_271_r281 := vbufL2_300 := vbufL2_310 := '';

  CountI := XMLMAP.GetNodeCountByName('Файл/Документ/Прибыль/РасчНал');
  for (i := 0; i < CountI; i++)
  {
    XMLAdrI := 'Файл/Документ/Прибыль/РасчНал' + getIter(i);

    if not GetStrNull(XMLAdrI + '/ТипНП')
    {
      L2p1_040 := L2p1_100 := L2p2_130 := L2p2_200 := L2p2_300 := L2p2_400 := L2p3_340 := L2p3_350 := L2p3_360 := 0;

      sumL2p4_150 := 0;
      vsumL2p4_150 := '';

      // #region ЛИСТ 02. ПРИЛОЖЕНИЕ 3
      if not GetStrNull(XMLAdrI + '/РасчРасхОпер/ТипНП')
      {
        // #region ИНИЦИЛИЗАЦИЯ ПЕРЕМЕННЫХ
        aL2p3_150 := XMLAdrI + '/РасчРасхОпер/УбытРеалПТ1/Убыт1Прев269';
        aL2p3_340 := XMLAdrI + '/РасчРасхОпер/ВыручОп302Ит'            ;
        aL2p3_350 := XMLAdrI + '/РасчРасхОпер/РасхОп302Ит'             ;
        aL2p3_360 := XMLAdrI + '/РасчРасхОпер/УбытОп302'               ;
        aL2p3_030 := XMLAdrI + '/РасчРасхОпер/ВыручРеалАИ'             ;  L2p3_030 := GetDblVal(aL2p3_030);
        aL2p3_040 := XMLAdrI + '/РасчРасхОпер/ОстСтРеалАИ'             ;  L2p3_040 := GetDblVal(aL2p3_040);
        aL2p3_060 := XMLAdrI + '/РасчРасхОпер/УбытРеалАИ'              ;  L2p3_060 := GetDblVal(aL2p3_060);
        aL2p3_100 := XMLAdrI + '/РасчРасхОпер/ВыручРеалПТДоСр'         ;  L2p3_100 := GetDblVal(aL2p3_100);
        aL2p3_120 := XMLAdrI + '/РасчРасхОпер/СтоимРеалПТДоСр'         ;  L2p3_120 := GetDblVal(aL2p3_120);
        aL2p3_180 := XMLAdrI + '/РасчРасхОпер/ВыручРеалТов'            ;  L2p3_180 := GetDblVal(aL2p3_180);
        aL2p3_190 := XMLAdrI + '/РасчРасхОпер/РасхРеалТов'             ;  L2p3_190 := GetDblVal(aL2p3_190);
        aL2p3_201 := XMLAdrI + '/РасчРасхОпер/УбытОбОбслНеобл'         ;  L2p3_201 := GetDblVal(aL2p3_201);
        aL2p3_210 := XMLAdrI + '/РасчРасхОпер/ДохДоговДУИ'             ;  L2p3_210 := GetDblVal(aL2p3_210);
        aL2p3_211 := XMLAdrI + '/РасчРасхОпер/ДохДоговДУИ_ВнР'         ;  L2p3_211 := GetDblVal(aL2p3_211);
        aL2p3_220 := XMLAdrI + '/РасчРасхОпер/РасхДоговДУИ'            ;  L2p3_220 := GetDblVal(aL2p3_220);
        aL2p3_221 := XMLAdrI + '/РасчРасхОпер/РасхДоговДУИ_ВнР'        ;  L2p3_221 := GetDblVal(aL2p3_221);
        aL2p3_230 := XMLAdrI + '/РасчРасхОпер/УбытДоговДУИ'            ;  L2p3_230 := GetDblVal(aL2p3_230);
        aL2p3_240 := XMLAdrI + '/РасчРасхОпер/ЦенРеалПрЗУ'             ;  L2p3_240 := GetDblVal(aL2p3_240);
        aL2p3_250 := XMLAdrI + '/РасчРасхОпер/НеВозЗатрПрЗУ'           ;  L2p3_250 := GetDblVal(aL2p3_250);
        aL2p3_260 := XMLAdrI + '/РасчРасхОпер/УбытРеалПрЗУ'            ;  L2p3_260 := GetDblVal(aL2p3_260);
        // #endregion ИНИЦИЛИЗАЦИЯ ПЕРЕМЕННЫХ

        L2p3_340 := L2p3_030 + L2p3_100 + L2p3_180 + L2p3_210 - L2p3_211 + L2p3_240;   #_SetFldGV(L2p3_340)
        L2p3_350 := L2p3_040 + L2p3_120 + L2p3_190 + L2p3_220 - L2p3_221 + L2p3_250;   #_SetFldGV(L2p3_350)
        L2p3_360 := L2p3_060 + L2p3_150 + L2p3_201 + L2p3_230 + L2p3_260           ;   #_SetFldGV(L2p3_360)

        vL2p3_340 := GD0(L2p3_340)+' = '+GD0(L2p3_030)+' + '+GD0(L2p3_100)+' + '+GD0(L2p3_180)+' + '+GD0(L2p3_210)+' - '+GD0(L2p3_211)+' + '+GD0(L2p3_240);
        vL2p3_350 := GD0(L2p3_350)+' = '+GD0(L2p3_040)+' + '+GD0(L2p3_120)+' + '+GD0(L2p3_190)+' + '+GD0(L2p3_220)+' - '+GD0(L2p3_221)+' + '+GD0(L2p3_250);
        vL2p3_360 := GD0(L2p3_360)+' = '+GD0(L2p3_060)+' + '+GD0(L2p3_150)+' + '+GD0(L2p3_201)+' + '+GD0(L2p3_230)+' + '+GD0(L2p3_260)                    ;

        #_LogInfo(L2p3_340)
        #_LogInfo(L2p3_350)
        #_LogInfo(L2p3_360)
      }
      // #endregion ЛИСТ 02. ПРИЛОЖЕНИЕ 3

      // #region ЛИСТ 02. ПРИЛОЖЕНИЕ 1
      if not GetStrNull(XMLAdrI + '/ДохРеалВнеРеал/ТипНП')
      {
        // #region ИНИЦИЛИЗАЦИЯ ПЕРЕМЕННЫХ
        aL2p1_010 := XMLAdrI + '/ДохРеалВнеРеал/ДохРеал/ВырРеал/ВырРеалВс'       ;
        aL2p1_030 := XMLAdrI + '/ДохРеалВнеРеал/ДохРеал/ВырРеалОпер32'           ;
        aL2p1_040 := XMLAdrI + '/ДохРеалВнеРеал/ДохРеал/ВырРеалИтог'             ;
        aL2p1_011 := XMLAdrI + '/ДохРеалВнеРеал/ДохРеал/ВырРеал/ВырРеалТовСоб'   ;  L2p1_011 := GetDblVal(aL2p1_011);
        aL2p1_012 := XMLAdrI + '/ДохРеалВнеРеал/ДохРеал/ВырРеал/ВырРеалТовПок'   ;  L2p1_012 := GetDblVal(aL2p1_012);
        aL2p1_013 := XMLAdrI + '/ДохРеалВнеРеал/ДохРеал/ВырРеал/ВырРеалИмПрав'   ;  L2p1_013 := GetDblVal(aL2p1_013);
        aL2p1_014 := XMLAdrI + '/ДохРеалВнеРеал/ДохРеал/ВырРеал/ВырРеалИмПроч'   ;  L2p1_014 := GetDblVal(aL2p1_014);
        aL2p1_020 := XMLAdrI + '/ДохРеалВнеРеал/ДохРеал/ВырРеалЦБ/ВырРеалЦБВс'   ;  L2p1_020 := GetDblVal(aL2p1_020);
        aL2p1_023 := XMLAdrI + '/ДохРеалВнеРеал/ДохРеал/ВырРеалЦБОбр/ВырРеалЦБВс';  L2p1_023 := GetDblVal(aL2p1_023);
        aL2p1_027 := XMLAdrI + '/ДохРеалВнеРеал/ДохРеал/ВырРеалПред'             ;  L2p1_027 := GetDblVal(aL2p1_027);
        aL2p1_100 := XMLAdrI + '/ДохРеалВнеРеал/ДохВнеРеал/ВнеРеалДохВс'         ;  L2p1_100 := GetDblVal(aL2p1_100);
        // #endregion ИНИЦИЛИЗАЦИЯ ПЕРЕМЕННЫХ

        L2p1_010 := L2p1_011 + L2p1_012 + L2p1_013 + L2p1_014           ;   #_SetFldGV(L2p1_010)
        L2p1_030 := L2p3_340                                            ;   #_SetFldGV(L2p1_030)
        L2p1_040 := L2p1_010 + L2p1_020 + L2p1_023 + L2p1_027 + L2p1_030;   #_SetFldGV(L2p1_040)

        vL2p1_010 := GD0(L2p1_010)+' = '+GD0(L2p1_011)+' + '+GD0(L2p1_012)+' + '+GD0(L2p1_013)+' + '+GD0(L2p1_014)                    ;
        vL2p1_030 := GD0(L2p1_030)+' = '+GD0(L2p3_340)                                                                                ;
        vL2p1_040 := GD0(L2p1_040)+' = '+GD0(L2p1_010)+' + '+GD0(L2p1_020)+' + '+GD0(L2p1_023)+' + '+GD0(L2p1_027)+' + '+GD0(L2p1_030);

        #_LogInfo(L2p1_010)
        #_LogInfo(L2p1_030)
        #_LogInfo(L2p1_040)
      }
      // #endregion ЛИСТ 02. ПРИЛОЖЕНИЕ 1

      // #region ЛИСТ 02. ПРИЛОЖЕНИЕ 2
      if not GetStrNull(XMLAdrI + '/РасхРеалВнеРеал/ТипНП')
      {
        // #region ИНИЦИЛИЗАЦИЯ ПЕРЕМЕННЫХ
        aL2p2_080 := XMLAdrI + '/РасхРеалВнеРеал/РасхРеал/РасхОпер32'                 ;
        aL2p2_130 := XMLAdrI + '/РасхРеалВнеРеал/РасхРеал/РасхПризнИтого'             ;
        aL2p2_010 := XMLAdrI + '/РасхРеалВнеРеал/РасхРеал/ПрямРасхРеал'               ;  L2p2_010 := GetDblVal(aL2p2_010);
        aL2p2_020 := XMLAdrI + '/РасхРеалВнеРеал/РасхРеал/ПрямРасхТорг/ПрямРасхТоргВс';  L2p2_020 := GetDblVal(aL2p2_020);
        aL2p2_040 := XMLAdrI + '/РасхРеалВнеРеал/РасхРеал/КосвРасх/КосвРасхВс'        ;  L2p2_040 := GetDblVal(aL2p2_040);
        aL2p2_059 := XMLAdrI + '/РасхРеалВнеРеал/РасхРеал/РеалИмущПрав'               ;  L2p2_059 := GetDblVal(aL2p2_059);
        aL2p2_060 := XMLAdrI + '/РасхРеалВнеРеал/РасхРеал/ПриобрРеалИмущ'             ;  L2p2_060 := GetDblVal(aL2p2_060);
        aL2p2_061 := XMLAdrI + '/РасхРеалВнеРеал/РасхРеал/АктивРеалПред'              ;  L2p2_061 := GetDblVal(aL2p2_061);
        aL2p2_070 := XMLAdrI + '/РасхРеалВнеРеал/РасхРеал/ПриобРеалЦБ'                ;  L2p2_070 := GetDblVal(aL2p2_070);
        aL2p2_072 := XMLAdrI + '/РасхРеалВнеРеал/РасхРеал/ПриобРеалЦБОрг'             ;  L2p2_072 := GetDblVal(aL2p2_072);
        aL2p2_090 := XMLAdrI + '/РасхРеалВнеРеал/РасхРеал/УбытПрошОбсл'               ;  L2p2_090 := GetDblVal(aL2p2_090);
        aL2p2_100 := XMLAdrI + '/РасхРеалВнеРеал/РасхРеал/УбытРеалАмИм'               ;  L2p2_100 := GetDblVal(aL2p2_100);
        aL2p2_110 := XMLAdrI + '/РасхРеалВнеРеал/РасхРеал/УбытРеалЗемУч'              ;  L2p2_110 := GetDblVal(aL2p2_110);
        aL2p2_120 := XMLAdrI + '/РасхРеалВнеРеал/РасхРеал/НадбПокПред'                ;  L2p2_120 := GetDblVal(aL2p2_120);
        aL2p2_200 := XMLAdrI + '/РасхРеалВнеРеал/РасхВнеРеал/РасхВнеРеалВс'           ;  L2p2_200 := GetDblVal(aL2p2_200);
        aL2p2_300 := XMLAdrI + '/РасхРеалВнеРеал/УбытПриравн/УбытПриравнВс'           ;  L2p2_300 := GetDblVal(aL2p2_300);
        aL2p2_400 := XMLAdrI + '/РасхРеалВнеРеал/КорНБЛиш/КорНБЛишВс'                 ;  L2p2_400 := GetDblVal(aL2p2_400);
        // #endregion ИНИЦИЛИЗАЦИЯ ПЕРЕМЕННЫХ

        L2p2_080 := L2p3_350                                                                                                                         ;
        L2p2_130 := L2p2_010 + L2p2_020 + L2p2_040 + L2p2_059 + L2p2_060 + L2p2_061 + L2p2_070 + L2p2_072 + L2p2_080 + L2p2_090 + L2p2_100 + L2p2_110
                  + L2p2_120;

        #_SetFldGV(L2p2_080)
        #_SetFldGV(L2p2_130)

        vL2p2_080 := GD0(L2p2_080)+' = '+GD0(L2p3_350)                                                                                ;
        vL2p2_130 := GD0(L2p2_130)+' = '+GD0(L2p2_010)+' + '+GD0(L2p2_020)+' + '+GD0(L2p2_040)+' + '+GD0(L2p2_059)+' + '+GD0(L2p2_060)
                                  +' + '+GD0(L2p2_061)+' + '+GD0(L2p2_070)+' + '+GD0(L2p2_072)+' + '+GD0(L2p2_080)+' + '+GD0(L2p2_090)
                                  +' + '+GD0(L2p2_100)+' + '+GD0(L2p2_110)+' + '+GD0(L2p2_120)                                        ;

        #_LogInfo(L2p2_080)
        #_LogInfo(L2p2_130)
      }
      // #endregion ЛИСТ 02. ПРИЛОЖЕНИЕ 2

      {
        // #region ЛИСТ 02.
        aL2_010 := XMLAdrI + '/ДохРеал'      ;
        aL2_020 := XMLAdrI + '/ДохВнереал'   ;
        aL2_030 := XMLAdrI + '/РасхУмРеал'   ;
        aL2_040 := XMLAdrI + '/РасхВнереал'  ;
        aL2_050 := XMLAdrI + '/Убытки'       ;
        aL2_060 := XMLAdrI + '/ПрибУб'       ;
        aL2_100 := XMLAdrI + '/НалБаза'      ;
        aL2_110 := XMLAdrI + '/УбытУмНБ'     ;
        aL2_120 := XMLAdrI + '/НалБазаИсч'   ;
        aL2_140 := XMLAdrI + '/СтавНалВсего' ;
        aL2_180 := XMLAdrI + '/НалИсчисл'    ;
        aL2_190 := XMLAdrI + '/НалИсчислФБ'  ;
        aL2_200 := XMLAdrI + '/НалИсчислСуб' ;
        aL2_210 := XMLAdrI + '/АвНачисл'     ;
        aL2_268 := XMLAdrI + '/УмАвИнвВычФБ' ;   L2_268 := GetDblVal(aL2_268);
        aL2_269 := XMLAdrI + '/УмАвИнвВычСуб';   L2_269 := GetDblVal(aL2_269);
        aL2_270 := XMLAdrI + '/НалДоплФБ'    ;
        aL2_271 := XMLAdrI + '/НалДоплСуб'   ;
        aL2_280 := XMLAdrI + '/НалУменФБ'    ;
        aL2_281 := XMLAdrI + '/НалУменСуб'   ;
        aL2_290 := XMLAdrI + '/АвПлатМес'    ;
        aL2_300 := XMLAdrI + '/АвПлатМесФБ'  ;
        aL2_310 := XMLAdrI + '/АвПлатМесСуб' ;
        aL2_070 := XMLAdrI + '/ДохИсклПриб'  ;   L2_070 := GetDblVal(aL2_070);
        aL2_080 := XMLAdrI + '/ПрибБРСт0'    ;   L2_080 := GetDblVal(aL2_080);
        aL2_130 := XMLAdrI + '/НалБазаИсчСуб';   L2_130 := GetDblVal(aL2_130);
        aL2_150 := XMLAdrI + '/СтавНалФБ'    ;   L2_150 := GetDblVal(aL2_150);
        aL2_160 := XMLAdrI + '/СтавНалСуб'   ;   L2_160 := GetDblVal(aL2_160);
        aL2_170 := XMLAdrI + '/СтавНалСуб284';   L2_170 := GetDblVal(aL2_170);
        aL2_220 := XMLAdrI + '/АвНачислФБ'   ;   L2_220 := GetDblVal(aL2_220);
        aL2_230 := XMLAdrI + '/АвНачислСуб'  ;   L2_230 := GetDblVal(aL2_230);
        aL2_250 := XMLAdrI + '/НалВыпл311ФБ' ;   L2_250 := GetDblVal(aL2_250);
        aL2_260 := XMLAdrI + '/НалВыпл311Суб';   L2_260 := GetDblVal(aL2_260);
        aL2_267 := XMLAdrI + '/ТСУменАвОтч'  ;   L2_267 := GetDblVal(aL2_267);
        aL2_Tip := XMLAdrI + '/ТипНП'        ;   L2_Tip := GetStrVal(aL2_Tip);
        // #endregion ИНИЦИЛИЗАЦИЯ ПЕРЕМЕННЫХ

        // #region Расчет строк 010, 020, 030, 040, 050, 060
        L2_010 := L2p1_040                                  ;  #_SetFldGV(L2_010)
        L2_020 := L2p1_100                                  ;  #_SetFldGV(L2_020)
        L2_030 := L2p2_130                                  ;  #_SetFldGV(L2_030)
        L2_040 := L2p2_200 + L2p2_300                       ;  #_SetFldGV(L2_040)
        L2_050 := L2p3_360                                  ;  #_SetFldGV(L2_050)
        L2_060 := L2_010 + L2_020 - L2_030 - L2_040 + L2_050;  #_SetFldGV(L2_060)

        vL2_010 := GD0(L2_010)+' = '+GD0(L2p1_040)                                                                        ;
        vL2_020 := GD0(L2_020)+' = '+GD0(L2p1_100)                                                                        ;
        vL2_030 := GD0(L2_030)+' = '+GD0(L2p2_130)                                                                        ;
        vL2_040 := GD0(L2_040)+' = '+GD0(L2p2_200)+' + '+GD0(L2p2_300)                                                    ;
        vL2_050 := GD0(L2_050)+' = '+GD0(L2p3_360)                                                                        ;
        vL2_060 := GD0(L2_060)+' = '+GD0(L2_010  )+' + '+GD0(L2_020)+' - '+GD0(L2_030)+' - '+GD0(L2_040)+' + '+GD0(L2_050);
        // #endregion Расчет строк 010, 020, 030, 040, 050, 060

        // #region 100 = 060 - 070 - 080 - 400 Прил. 2 Листа 02 + 100 Листа 05 + 530 Листа 06
        L2_100 := L2_060 - L2_070 - L2_080 - L2p2_400 + sumL5_r100 + L6_530;  #_SetFldGV(L2_100)

        vL2_100 := GD0(L2_100)+' = '+GD0(L2_060)+' - '+GD0(L2_070)+' - '+GD0(L2_080)
                              +' - '+GD0(L2p2_400)+' + ('+TrimVal(vSumL5_r100)+') + '+GD0(L6_530);
        // #endregion Стр. 100 = стр. 060 - стр. 070 - стр. 080 - стр. 400 Прил. 2 Листа 02 + стр. 100 Листа 05s + стр. 530 Листа 06
        // #endregion ЛИСТ 02.

        // #region ЛИСТ 02. ПРИЛОЖЕНИЕ 4
        fl_L2p4_150 := False;

        CountJ := XMLMAP.GetNodeCountByName(XMLAdrI + '/УбытУменНБ');
        for (j := 0; j < CountJ; j++)
        {
          XMLAdrJ := XMLAdrI + '/УбытУменНБ' + getIter(j);

          if not GetStrNull(XMLAdrJ + '/ТипНП')
          {
            // #region ИНИЦИЛИЗАЦИЯ ПЕРЕМЕННЫХ
            aL2p4_140 := XMLAdrJ + '/НалБаза'         ;
            aL2p4_160 := XMLAdrJ + '/ОстУбытКонВс'    ;
            aL2p4_161 := XMLAdrJ + '/ОстУбытКон135'   ;
            aL2p4_010 := XMLAdrJ + '/ОстУбытНачВс'    ;   L2p4_010 := GetDblVal(aL2p4_010);
            aL2p4_135 := XMLAdrJ + '/ОстУбытЗавСд'    ;   L2p4_135 := GetDblVal(aL2p4_135);
            aL2p4_136 := XMLAdrJ + '/ОстУбытЗавСдНач' ;   L2p4_136 := GetDblVal(aL2p4_136);
            aL2p4_150 := XMLAdrJ + '/УбытУмНалБазаВс' ;   L2p4_150 := GetDblVal(aL2p4_150);
            aL2p4_151 := XMLAdrJ + '/УбытУмНалБаза135';   L2p4_151 := GetDblVal(aL2p4_151);
            // #endregion ИНИЦИЛИЗАЦИЯ ПЕРЕМЕННЫХ

            L2p4_140 := L2_100;  #_SetFldGV(L2p4_140)

            vL2p4_140 := GD0(L2p4_140)+' = '+GD0(L2_100);
            #_LogInfo(L2p4_140)

            // Строки 160, 161 заполняются при составлении Декларации за налоговый период
            // Стр. 160 = (стр. 010 + стр. 136) - стр. 150
            // Стр. 161 = стр. 136 - стр. 151
            // Если Период <> Год (16, 34, 46, 68), то 0 (ноль) (для стр. 160, 161)
            // #region
            if NalPer_God
            {
              L2p4_160 := (L2p4_010 + L2p4_136) - L2p4_150;   #_SetFldGV(L2p4_160)
              L2p4_161 := L2p4_136 - L2p4_151             ;   #_SetFldGV(L2p4_161)

              mL2p4_160 := 'Стр. 160 = (стр. 010 + стр. 136) - стр. 150';
              mL2p4_161 := 'Стр. 161 = стр. 136 - стр. 151'             ;

              vL2p4_160 := GD0(L2p4_160)+' = ('+GD0(L2p4_010)+' + '+GD0(L2p4_136)+') - '+GD0(L2p4_150);
              vL2p4_161 := GD0(L2p4_161)+' = '+GD0(L2p4_136)+' - '+GD0(L2p4_151)                      ;
            }
            else
            {
              L2p4_160 := 0;   #_SetSNull(L2p4_160)
              L2p4_161 := 0;   #_SetSNull(L2p4_161)

              mL2p4_160 := 'Стр. 160 заполняется ТОЛЬКО за налоговый период (Период = 16, 34, 46 или 68)';
              mL2p4_161 := 'Стр. 161 заполняется ТОЛЬКО за налоговый период (Период = 16, 34, 46 или 68)';

              vL2p4_160 := 'Текущее значение поля: ' + if(GetStrVal(aL2p4_160) = '', 'ПУСТО', GetStrVal(L2p4_160) + '  НЕ ДОЛЖНО БЫТЬ ЗАПОЛНЕНО');
              vL2p4_161 := 'Текущее значение поля: ' + if(GetStrVal(aL2p4_161) = '', 'ПУСТО', GetStrVal(L2p4_161) + '  НЕ ДОЛЖНО БЫТЬ ЗАПОЛНЕНО');
            }

            #_LogInfo(L2p4_160)
            #_LogInfo(L2p4_161)
            // #endregion Строки 160, 161

            if _TipNP(XMLAdrJ + '/ТипНП')
            {
              fl_L2p4_150 := True;

               sumL2p4_150 +=     L2p4_150     ;
              vSumL2p4_150 += GD0(L2p4_150)+'+';
            }
          }
        }
        // #endregion ЛИСТ 02. ПРИЛОЖЕНИЕ 4


        // Если присутствует Приложение 4 к Листу 02 с Типом НП = 1, 3, 4 и Период = Год или 1й квартал
        // #region 110 = сумма 150 Прил. 4 Листа 02
        if fl_L2p4_150 and (NalPer_God or _NalPer_1kv)
        {
          L2_110 := sumL2p4_150;  #_SetFldGV(L2_110)

          mL2_110 := 'Стр. 110 = сумма стр. 150 Прил. 4 Листа 02';
          vL2_110 := GD0(L2_110)+' = ('+TrimVal(vSumL2p4_150)+')';
        }
        else
        {
          L2_110 := 0;  #_SetSNull(L2_110)

          mL2_110 := 'Стр. 110 = 0 (нулю) (не выполнены условия; прис. Прил. 4 с Типом НП = 1, 3 или 4 и Период = Год или 1й квартал)';
          vL2_110 := GD0(L2_110)+' = 0';
        }
        // #endregion 110 = сумма 150 Прил. 4 Листа 02

        // #region 120 = 100 - 110 (если 100 меньше 0 (нуля), то 0 (ноль))
        if (L2_100 < 0)
        {
          L2_120 := 0;  #_SetFldGV(L2_120)

          mL2_120 := 'Стр. 120 = 0 (нулю) (не выполнены условия; стр. 100 < 0)';
          vL2_120 := GD0(L2_120)+' = 0';
        }
        else
        {
          L2_120 := L2_100 - L2_110;  #_SetFldGV(L2_120)

          mL2_120 := 'Стр. 120 = стр. 100 - стр. 110';
          vL2_120 := GD0(L2_120)+' = '+GD0(L2_100)+' - '+GD0(L2_110);
        }
        // #endregion 120 = 100 - 110 (если 100 меньше 0 (нуля), то 0 (ноль))

        // 190 = 120 * 150 / 100(%) (использована форму без учета Листа 09, т.к. в приведенной формуле допущена ошибка - в Разделе Б3 Листа 09 отсутствует стр. 160)
        // 200 = (120 - 130) * 160 / 100(%) + (130 * 170 / 100(%))
        // #region
        if L2_120 > 0
        {
          L2_190 := (L2_120 * L2_150 / 100)                                   ;  #_SetFldGV(L2_190)
          L2_200 := (L2_120 - L2_130) * L2_160 / 100 + (L2_130 * L2_170 / 100);  #_SetFldGV(L2_200)

          mL2_190 := 'Стр. 190 = стр. 120 * стр. 150 / 100'                                           ;
          mL2_200 := 'Стр. 200 = (стр. 120 - стр. 130) * стр. 160 / 100 + (стр. 130 * стр. 170 / 100)';

          vL2_190 := GD0(L2_190)+' = '+GD0(L2_120)+' * '+GD2(L2_150)+' / 100'                                                                        ;
          vL2_200 := GD0(L2_200)+' = ('+GD0(L2_120)+' - '+GD0(L2_130)+') * '+GD3(L2_160)+' / 100 + ('+GD0(L2_130)+' * '+GD3(L2_170)+' / 100)';
        }
        else
        {
          L2_190 := 0;                                                       #_SetFldGV(L2_190)
          L2_200 := (-1 * L2_130) * L2_160 / 100 + (L2_130 * L2_170 / 100);  #_SetFldGV(L2_200)

          mL2_190 := 'Стр. 190 = 0, т.к. 120 = 0 (нулю)'                                                             ;
          mL2_200 := 'Стр. 200 = (-1 * стр. 130) * стр. 160 / 100 + (стр. 130 * стр. 170 / 100), т.к. 120 = 0 (нулю)';

          vL2_190 := GD0(L2_190)+' = 0'                                                                                         ;
          vL2_200 := GD0(L2_200)+' = (-1 * '+GD0(L2_130)+') * '+GD3(L2_160)+' / 100 + ('+GD0(L2_130)+' * '+GD3(L2_170)+' / 100)';
        }
        L2_SUMOP := _GetSumOp;
        if L2_SUMOP > 0
        {
          L2_200 := L2_SUMOP;  #_SetFldGV(L2_200)

          mL2_200 := 'Стр. 200 = Сумма стр.070 Прил. 5 Листа 2';

          vL2_200 := GD0(L2_200);
        }
        // #endregion
        // #region Расчет строк 140, 180
        L2_140 := L2_150 + L2_160;  #_SetFldGV(L2_140)
        L2_180 := L2_190 + L2_200;  #_SetFldGV(L2_180)

        vL2_140 := GD3(L2_140)+' = '+GD2(L2_150)+' + '+GD3(L2_160);
        vL2_180 := GD0(L2_180)+' = '+GD0(L2_190)+' + '+GD0(L2_200);
        // #endregion Расчет строк 140, 180


        //==============================================================================
        // #region РАСЧЕТ СТРОК 220, 230, 290, 300, 310 С УЧЕТОМ ДАННЫХ ПРЕДЫДУЩЕГО ПЕРИОДА
        //==============================================================================
        if flPath
        {
          var aL2_180p, aL2_190p, aL2_200p, aL2_250p, aL2_260p, aL2_300p, aL2_310p : string = '';
          var  L2_180p,  L2_190p,  L2_200p,  L2_250p,  L2_260p,  L2_300p,  L2_310p : double = 0.0;

          // #region Получение данных
          CountJ := tmpXMLMap.GetNodeCountByName('Файл/Документ/Прибыль/РасчНал');
          for (j := 0; j < CountJ; j++)
          {
            XMLAdrJ := 'Файл/Документ/Прибыль/РасчНал' + getIter(j);

            if (L2_Tip <> tmpXMLMap.GetAttrValueByName(XMLAdrJ + '/ТипНП')) continue;

            aL2_180p := XMLAdrJ + '/НалИсчисл'    ;   L2_180p := Double(tmpXMLMap.GetAttrValueByName(aL2_180p));
            aL2_190p := XMLAdrJ + '/НалИсчислФБ'  ;   L2_190p := Double(tmpXMLMap.GetAttrValueByName(aL2_190p));
            aL2_200p := XMLAdrJ + '/НалИсчислСуб' ;   L2_200p := Double(tmpXMLMap.GetAttrValueByName(aL2_200p));
            aL2_250p := XMLAdrJ + '/НалВыпл311ФБ' ;   L2_250p := Double(tmpXMLMap.GetAttrValueByName(aL2_250p));
            aL2_260p := XMLAdrJ + '/НалВыпл311Суб';   L2_260p := Double(tmpXMLMap.GetAttrValueByName(aL2_260p));
            aL2_300p := XMLAdrJ + '/АвПлатМесФБ'  ;   L2_300p := Double(tmpXMLMap.GetAttrValueByName(aL2_300p));
            aL2_310p := XMLAdrJ + '/АвПлатМесСуб' ;   L2_310p := Double(tmpXMLMap.GetAttrValueByName(aL2_310p));

            break;
          }
          // #endregion Получение данных

          // #region Расчет строк 290, 300, 310
          L2_290 := L2_180 - L2_180p;
          L2_300 := L2_190 - L2_190p;
          L2_310 := L2_200 - L2_200p;

          // #region Если значение 290 < 0 (нуля) - обнулить значение
          if (L2_290 > 0)
          {
            #_SetFldGV(L2_290)

            mL2_290 := 'Стр. 290 = стр. 180 - стр. 180 (предыдущего периода)';
            vL2_290 := GD0(L2_290)+' = '+GD0(L2_180)+' - '+GD0(L2_180p);
          }
          else
          {
            #_SetSNull(L2_290)

            mL2_290 := 'Значение не установлено, т.к. результат <= 0 (нулю)';
            vL2_290 := GD0(L2_290)+' = 0';
          }
          // #endregion Если значение 290 < 0 (нуля) - обнулить значение

          // #region Если значение 300 < 0 (нуля) - обнулить значение
          if (L2_300 > 0)
          {
            #_SetFldGV(L2_300)

            mL2_300 := 'Стр. 300 = стр. 190 - стр. 190 (предыдущего периода)';
            vL2_300 := GD0(L2_300)+' = '+GD0(L2_190)+' - '+GD0(L2_190p);
          }
          else
          {
            #_SetSNull(L2_300)

            mL2_300 := 'Значение не установлено, т.к. результат <= 0 (нулю)';
            vL2_300 := GD0(L2_290)+' = 0';
          }
          // #endregion Если значение 300 < 0 (нуля) - обнулить значение

          // #region Если значение 310 < 0 (нуля) - обнулить значение
          if (L2_310 > 0)
          {
            #_SetFldGV(L2_310)

            mL2_310 := 'Стр. 310 = стр. 200 - стр. 200 (предыдущего периода)';
            vL2_310 := GD0(L2_310)+' = '+GD0(L2_200)+' - '+GD0(L2_200p);
          }
          else
          {
            #_SetSNull(L2_310)

            mL2_310 := 'Значение не установлено, т.к. результат <= 0 (нулю)';
            vL2_310 := GD0(L2_290)+' = 0';
          }
          // #endregion Если значение 310 < 0 (нуля) - обнулить значение
          // #endregion Расчет строк 290, 300, 310

          // #region Расчет строк 220, 230
          XMLMAP.SetFormulaValueByName(aL2_220, '');
          XMLMAP.SetFormulaValueByName(aL2_230, '');

          L2_220 := L2_190p + L2_300p - L2_250p;  #_SetFldGV(L2_220)
          L2_230 := L2_200p + L2_310p - L2_260p;  #_SetFldGV(L2_230)

          vL2_220 := GD0(L2_220)+' = '+GD0(L2_190p)+' + '+GD0(L2_300p)+' - '+GD0(L2_250p);
          vL2_230 := GD0(L2_230)+' = '+GD0(L2_200p)+' + '+GD0(L2_310p)+' - '+GD0(L2_260p);
          // #endregion Расчет строк 220, 230

          #_LogInfo(L2_220)
          #_LogInfo(L2_230)
          #_LogInfo(L2_290)
          #_LogInfo(L2_300)
          #_LogInfo(L2_310)
        }
        else
        {
          L2_290 := GetDblVal(aL2_290);
          L2_300 := GetDblVal(aL2_300);
          L2_310 := GetDblVal(aL2_310);

          if (XMLMAP.GetFormulaValueByName(aL2_220) = '') { XMLMAP.SetFormulaValueByName(aL2_220, '&Prib_List02_220');  L2_220 := GetPatVal('&Prib_List02_220');  #_SetFldGV(L2_220) }
          if (XMLMAP.GetFormulaValueByName(aL2_230) = '') { XMLMAP.SetFormulaValueByName(aL2_230, '&Prib_List02_230');  L2_230 := GetPatVal('&Prib_List02_230');  #_SetFldGV(L2_230) }
        }
        //==============================================================================
        // #endregion РАСЧЕТ СТРОК 220, 230, 290, 300, 310 С УЧЕТОМ ДАННЫХ ПРЕДЫДУЩЕГО ПЕРИОДА
        //==============================================================================


        // #region 210 = 220 + 230
        L2_210 := L2_220 + L2_230;  #_SetFldGV(L2_210)

        vL2_210 := GD0(L2_210)+' = '+GD0(L2_220)+' + '+GD0(L2_230);
        // #endregion 210 = 220 + 230



        // #region ЛИСТ 02. ПРИЛОЖЕНИЕ 6
        CountJ := XMLMAP.GetNodeCountByName(XMLAdrI + '/РасчНалГруп');
        for (j := 0; j < CountJ; j++)
        {
          XMLAdrJ := XMLAdrI + '/РасчНалГруп' + getIter(j);

          if    GetStrNull(XMLAdrJ + '/ИННЮЛ'    )
             or GetStrNull(XMLAdrJ + '/КПП'      )
             or GetStrNull(XMLAdrJ + '/ОКТМО'    )
             or GetStrNull(XMLAdrJ + '/НаимУч'   )
             or GetStrNull(XMLAdrJ + '/СубРФ'    )
             or GetStrNull(XMLAdrJ + '/НалБазаГр')
          then Continue;

          // #region ИНИЦИЛИЗАЦИЯ ПЕРЕМЕННЫХ
          aL2p6_040     := XMLAdrJ + '/ДоляНалБаз'    ;
          aL2p6_050     := XMLAdrJ + '/НалБазаДоля'   ;
          aL2p6_051     := XMLAdrJ + '/НалБазаДоляСтН';
          aL2p6_070     := XMLAdrJ + '/СумНал'        ;
          aL2p6_095     := XMLAdrJ + '/ТСУплНачПер'   ;
          aL2p6_097     := XMLAdrJ + '/ТСУменАвОтч'   ;
          aL2p6_100_110 := XMLAdrJ + '/СумНалП'       ;
          aL2p6_120     := XMLAdrJ + '/МесАвПлат'     ;
          aL2p6_KolPril := XMLAdrJ + '/КолПрил'       ;
          aL2p6_080     := XMLAdrJ + '/НалНачислСубРФ';  L2p6_080 := GetDblVal(aL2p6_080);
          aL2p6_090     := XMLAdrJ + '/НалВыплВнеРФ'  ;  L2p6_090 := GetDblVal(aL2p6_090);

          sumL2p6a_040 := 0;  vL2p6_040 := '';
          sumL2p6a_050 := 0;  vL2p6_050 := '';
          sumL2p6a_051 := 0;  vL2p6_051 := '';
          sumL2p6a_070 := 0;  vL2p6_070 := '';
          sumL2p6a_095 := 0;  vL2p6_095 := '';
          sumL2p6a_097 := 0;  vL2p6_097 := '';

          sumL2p6_KolPril := 0;
          // #endregion ИНИЦИЛИЗАЦИЯ ПЕРЕМЕННЫХ

          // #region ЛИСТ 02. ПРИЛОЖЕНИЕ 6A +
          CountK := XMLMAP.GetNodeCountByName(XMLAdrJ + '/РасчНалУчГруп');
          for (k := 0; k < CountK; k++)
          {
            XMLAdrK := XMLAdrJ + '/РасчНалУчГруп' + getIter(k);

            if    GetStrNull(XMLAdrK + '/ИННЮЛ'    )
               or GetStrNull(XMLAdrK + '/КПП'      )
               or GetStrNull(XMLAdrK + '/ОКТМО'    )
               or GetStrNull(XMLAdrK + '/НаимУч'   )
               or GetStrNull(XMLAdrK + '/ОбРасч'   )
               or GetStrNull(XMLAdrK + '/НалБазаГр')
            then Continue;

            sumL2p6_KolPril += 1;

            // #region ИНИЦИЛИЗАЦИЯ ПЕРЕМЕННЫХ
            aL2p6a_050 := XMLAdrK + '/НалБазаДоля'  ;
            aL2p6a_070 := XMLAdrK + '/СумНал'       ;
            aL2p6a_030 := XMLAdrK + '/НалБазаГр'    ;   L2p6a_030 := GetDblVal(aL2p6a_030);
            aL2p6a_040 := XMLAdrK + '/ДоляНалБаз'   ;   L2p6a_040 := GetDblVal(aL2p6a_040);
            aL2p6a_051 := XMLAdrK + '/НалБазаДоляСн';   L2p6a_051 := GetDblVal(aL2p6a_051);
            aL2p6a_060 := XMLAdrK + '/СтавНалСубРФ' ;   L2p6a_060 := GetDblVal(aL2p6a_060);
            aL2p6a_095 := XMLAdrK + '/ТСУплНачПер'  ;   L2p6a_095 := GetDblVal(aL2p6a_095);
            aL2p6a_097 := XMLAdrK + '/ТСУменАвОтч'  ;   L2p6a_097 := GetDblVal(aL2p6a_097);
            // #endregion ИНИЦИЛИЗАЦИЯ ПЕРЕМЕННЫХ

            // 050 = 030 * (040 / 100(%))
            // 070 = ((050 - 051) * 18 / 100(%)) + (051 * 060 / 100(%))
            // #region
            L2p6a_050 := L2p6a_030 * (L2p6a_040 / 100);                                      ;  #_SetFldGV(L2p6a_050);
            L2p6a_070 := ((L2p6a_050 - L2p6a_051) * 18 / 100) + (L2p6a_051 * L2p6a_060 / 100);  #_SetFldGV(L2p6a_070);

            vL2p6a_050 := GD0(L2p6a_050)+' = '+GD0(L2p6a_030)+' * ('+GD11(L2p6a_040)+' / 100)'                                                               ;
            vL2p6a_070 := GD0(L2p6a_070)+' = (('+GD0(L2p6a_050)+' - '+GD0(L2p6a_051)+') * 18 / 100) + ('+GD0(L2p6a_051)+' * '+GD3(L2p6a_060)+' / 100)';

            #_LogInfo(L2p6a_050)
            #_LogInfo(L2p6a_070)
            // #endregion

            sumL2p6a_040 += L2p6a_040;  vL2p6_040 += GD11(L2p6a_040)+'+';
            sumL2p6a_050 += L2p6a_050;  vL2p6_050 += GD0 (L2p6a_050)+'+';
            sumL2p6a_051 += L2p6a_051;  vL2p6_051 += GD0 (L2p6a_051)+'+';
            sumL2p6a_070 += L2p6a_070;  vL2p6_070 += GD0 (L2p6a_070)+'+';
            sumL2p6a_095 += L2p6a_095;  vL2p6_095 += GD0 (L2p6a_095)+'+';
            sumL2p6a_097 += L2p6a_097;  vL2p6_097 += GD0 (L2p6a_097)+'+';
          }
          // #endregion ЛИСТ 02. ПРИЛОЖЕНИЕ 6A

          L2p6_KolPril := sumL2p6_KolPril;  #_SetFldGV(L2p6_KolPril)  vL2p6_040 := GD0(L2p6_KolPril)+' = '+GD0(sumL2p6_KolPril)  ;
          L2p6_040     := sumL2p6a_040   ;  #_SetFldGV(L2p6_040    )  vL2p6_040 := GD0(L2p6_040    )+' = ('TrimVal(vL2p6_040)+')';
          L2p6_050     := sumL2p6a_050   ;  #_SetFldGV(L2p6_050    )  vL2p6_050 := GD0(L2p6_050    )+' = ('TrimVal(vL2p6_050)+')';
          L2p6_051     := sumL2p6a_051   ;  #_SetFldGV(L2p6_051    )  vL2p6_051 := GD0(L2p6_051    )+' = ('TrimVal(vL2p6_051)+')';
          L2p6_070     := sumL2p6a_070   ;  #_SetFldGV(L2p6_070    )  vL2p6_070 := GD0(L2p6_070    )+' = ('TrimVal(vL2p6_070)+')';
          L2p6_095     := sumL2p6a_095   ;  #_SetFldGV(L2p6_095    )  vL2p6_095 := GD0(L2p6_095    )+' = ('TrimVal(vL2p6_095)+')';
          L2p6_097     := sumL2p6a_097   ;  #_SetFldGV(L2p6_097    )  vL2p6_097 := GD0(L2p6_097    )+' = ('TrimVal(vL2p6_097)+')';

          // #region 100/110 = 070 - (080 + 090 + 097)
          L2p6_100_110 := L2p6_070 - (L2p6_080 + L2p6_090 + L2p6_097);  #_SetFldGV(L2p6_100_110)

          vL2p6_100_110 := GD0(L2p6_100_110)+' = '+GD0(L2p6_070)+' - '+GD0(L2p6_080)+' - '+GD0(L2p6_090)+' - '+GD0(L2p6_097);
          // #endregion 100/110 = 070 - (080 + 090 + 097)

          // 120 = 310 Листа 02 * 040 / 100(%)
          // Строки 120 Приложений N 5 к Листу 02 Декларации в Декларациях за налоговый период не заполняются
          // #region
          if not NalPer_God
          {
            L2p6_120 := L2_310 * L2p6_040 / 100;  #_SetFldGV(L2p6_120)

            mL2p6_120 := 'Стр. 120 = стр. 310 Листа 02 * стр. 040 / 100';
            vL2p6_120 := GD0(L2p6_120)+' = '+GD0(L2_310)+' * '+GD0(L2p6_040)+' / 100';
          }
          else
          {
            L2p6_120 := 0;  #_SetSNull(L2p6_120)

            mL2p6_120 := 'Стр. 120 = 0 (нулю) (не выполнены условия; Период = Год)';
            vL2p6_120 := GD0(L2p6_120)+' = 0';
          }
          // #endregion

          #_LogInfo(L2p6_KolPril) // #region _LogInfo
          #_LogInfo(L2p6_040    )
          #_LogInfo(L2p6_050    )
          #_LogInfo(L2p6_051    )
          #_LogInfo(L2p6_070    )
          #_LogInfo(L2p6_095    )
          #_LogInfo(L2p6_097    )
          #_LogInfo(L2p6_100_110)
          #_LogInfo(L2p6_120    ) // #endregion _LogInfo
        }
        // #endregion ЛИСТ 02. ПРИЛОЖЕНИЕ 6

        // #region ЛИСТ 02. ПРИЛОЖЕНИЕ 5. ВЕРСИЯ 1
        CountJ := XMLMAP.GetNodeCountByName(XMLAdrI + '/РаспрНалСубРФ');
        for (j := 0; j < CountJ; j++)
        {
          XMLAdrJ := XMLAdrI + '/РаспрНалСубРФ' + getIter(j);

          // #region ИНИЦИЛИЗАЦИЯ ПЕРЕМЕННЫХ Ч1
          aL2p5_TipNP   := XMLAdrJ + '/ТипНП'       ;  L2p5_TipNP   := GetStrVal(aL2p5_TipNP  );
          aL2p5_ObRasch := XMLAdrJ + '/ОбРасч'      ;  L2p5_ObRasch := GetStrVal(aL2p5_ObRasch);
          aL2p5_Naim    := XMLAdrJ + '/НаимОП'      ;  L2p5_Naim    := GetStrVal(aL2p5_Naim   );
          aL2p5_KPP     := XMLAdrJ + '/КППОП'       ;  L2p5_KPP     := GetStrVal(aL2p5_KPP    );
          aL2p5_ObyzUpl := XMLAdrJ + '/ОбязУплНалОП';  L2p5_ObyzUpl := GetStrVal(aL2p5_ObyzUpl);
          // #endregion ИНИЦИЛИЗАЦИЯ ПЕРЕМЕННЫХ Ч1

          if    GetStrNull(aL2p5_TipNP  )
             or GetStrNull(aL2p5_ObRasch)
             or GetStrNull(aL2p5_Naim   )
             or GetStrNull(aL2p5_KPP    )
             or GetStrNull(aL2p5_ObyzUpl)
          then Continue;

          aL2p5_080 := XMLAdrJ + '/НалНачислСубРФ';


          //==============================================================================
          //#region РАСЧЕТ ПОКАЗАТЕЛЯ 080 С УЧЕТОМ ДАННЫХ ПРЕДЫДУЩЕГО ПЕРИОДА
          //==============================================================================
          if flPath
          {
            var aL2p5_old_TipNP, aL2p5_old_ObRasch, aL2p5_old_Naim, aL2p5_old_KPP, aL2p5_old_ObyzUpl : string = '';
            var L2p5_old_070, L2p5_old_120 : double = 0;

            L2p5_080 := 0;
            vL2p5_080 := '';

            CountK := tmpXMLMap.GetNodeCountByName('Файл/Документ/Прибыль/РасчНал');
            for (k := 0; k < CountK; k++)
            {
              XMLAdrK := 'Файл/Документ/Прибыль/РасчНал' + getIter(k);

              if (L2_Tip <> tmpXMLMap.GetAttrValueByName(XMLAdrK + '/ТипНП')) continue;

              CountN := tmpXMLMap.GetNodeCountByName(XMLAdrK + '/РаспрНалСубРФ');
              for (n := 0; n < CountN; n++)
              {
                XMLAdrN := XMLAdrK + '/РаспрНалСубРФ' + getIter(n)

                // #region ИНИЦИЛИЗАЦИЯ ПЕРЕМЕННЫХ
                aL2p5_old_TipNP   := XMLAdrN + '/ТипНП'       ;
                aL2p5_old_ObRasch := XMLAdrN + '/ОбРасч'      ;
                aL2p5_old_Naim    := XMLAdrN + '/НаимОП'      ;
                aL2p5_old_KPP     := XMLAdrN + '/КППОП'       ;
                aL2p5_old_ObyzUpl := XMLAdrN + '/ОбязУплНалОП';
                // #endregion ИНИЦИЛИЗАЦИЯ ПЕРЕМЕННЫХ

                if     (L2p5_TipNP   = String(tmpXMLMap.GetAttrValueByName(aL2p5_old_TipNP  )))
                   and (L2p5_ObRasch = String(tmpXMLMap.GetAttrValueByName(aL2p5_old_ObRasch)))
                   and (L2p5_Naim    = String(tmpXMLMap.GetAttrValueByName(aL2p5_old_Naim   )))
                   and (L2p5_KPP     = String(tmpXMLMap.GetAttrValueByName(aL2p5_old_KPP    )))
                   and (L2p5_ObyzUpl = String(tmpXMLMap.GetAttrValueByName(aL2p5_old_ObyzUpl)))
                {
                  L2p5_old_070 := Double(tmpXMLMap.GetAttrValueByName(XMLAdrN + '/СумНал'   ));
                  L2p5_old_120 := Double(tmpXMLMap.GetAttrValueByName(XMLAdrN + '/МесАвПлат'));

                  L2p5_080 := L2p5_old_070 + L2p5_old_120;
                  vL2p5_080 := GD0(L2p5_old_070)+' + '+GD0(L2p5_old_120);

                  break;
                }
              }
            }

            #_SetFldGV(L2p5_080)

            vL2p5_080 := if (vL2p5_080 <> '', GD0(L2p5_080)+' = '+vL2p5_080, '0 = 0 + 0 (нет данных для расчета)');
            LogInfo(aL2p5_080, 'Стр. 080 = стр. предыдущего периода (070 + 120)', vL2p5_080);
          }
          //==============================================================================
          //#endregion РАСЧЕТ ПОКАЗАТЕЛЯ 080 С УЧЕТОМ ДАННЫХ ПРЕДЫДУЩЕГО ПЕРИОДА
          //==============================================================================


          // #region ИНИЦИЛИЗАЦИЯ ПЕРЕМЕННЫХ Ч2
          aL2p5_030     := XMLAdrJ + '/НалБазаОрг'    ;
          aL2p5_050     := XMLAdrJ + '/НалБазаДоля'   ;
          aL2p5_070     := XMLAdrJ + '/СумНал'        ;
          aL2p5_100_110 := XMLAdrJ + '/СумНалП'       ;
          aL2p5_120     := XMLAdrJ + '/МесАвПлат'     ;
          aL2p5_040     := XMLAdrJ + '/ДоляНалБаз'    ;   L2p5_040 := GetDblVal(aL2p5_040);
          aL2p5_060     := XMLAdrJ + '/СтавНалСубРФ'  ;   L2p5_060 := GetDblVal(aL2p5_060);
          aL2p5_090     := XMLAdrJ + '/НалВыплВнеРФ'  ;   L2p5_090 := GetDblVal(aL2p5_090);
          aL2p5_097     := XMLAdrJ + '/ТСУменАвОтч'   ;   L2p5_097 := GetDblVal(aL2p5_097);
                                                          L2p5_080 := GetDblVal(aL2p5_080);
          // #endregion ИНИЦИЛИЗАЦИЯ ПЕРЕМЕННЫХ Ч2

          // #region Расчет строк 030, 050, 070, 100/110
          L2p5_030     := L2_120                                     ;  #_SetFldGV(L2p5_030    )
          L2p5_050     := L2p5_030 * (L2p5_040 / 100)                ;  #_SetFldGV(L2p5_050    )
          L2p5_070     := L2p5_050 * (L2p5_060 / 100)                ;  #_SetFldGV(L2p5_070    )
          L2p5_100_110 := L2p5_070 - (L2p5_080 + L2p5_090 + L2p5_097);  #_SetFldGV(L2p5_100_110)

          vL2p5_030     := GD0(L2p5_030    )+' = '+GD0(L2_120  )                                                                  ;
          vL2p5_050     := GD0(L2p5_050    )+' = '+GD0(L2p5_030)+' * ('+GD11(L2p5_040)+' / 100)'                                  ;
          vL2p5_070     := GD0(L2p5_070    )+' = '+GD0(L2p5_050)+' * ('+GD3 (L2p5_060)+' / 100)'                                  ;
          vL2p5_100_110 := GD0(L2p5_100_110)+' = '+GD0(L2p5_070)+' - ('+GD0 (L2p5_080)+' + '+GD0(L2p5_090)+' + '+GD0(L2p5_097)+')';

          #_LogInfo(L2p5_030    )
          #_LogInfo(L2p5_050    )
          #_LogInfo(L2p5_070    )
          #_LogInfo(L2p5_100_110)
          // #endregion Расчет строк 030, 050, 070, 100/110

          // 120 = 310 Листа 02 * 040 / 100(%)
          // Строки 120 Приложений N 5 к Листу 02 Декларации в Декларациях за налоговый период не заполняются
          // В Приложениях N 5 к Листу 02 Декларации по указанным обособленным подразделениям (с кодом "3" по реквизиту "Расчет составлен (код)")
          // строки 120, 121 не заполняются
          // #region
          if    NalPer_God
             or GetStrVal(XMLAdrJ + '/ОбРасч') = '3'
          {
            L2p5_120 := 0;  #_SetSNull(L2p5_120)

            mL2p5_120 := 'Стр. 120 = 0 (нулю) (за налоговый период не заполняется; не заполняются при Расчет составлен (код) равном 3)';
            vL2p5_120 := GD0(L2p5_120)+' = 0';
          }
          else
          {
            L2p5_120  := L2_310 * L2p5_040 / 100;  #_SetFldGV(L2p5_120)

            mL2p5_120 := 'Стр. 120 = стр. 310 Листа 02 * стр. 040 / 100';
            vL2p5_120 := GD0(L2p5_120)+' = '+GD0(L2_310)+' * '+GD11(L2p5_040)+' / 100';
          }

          #_LogInfo(L2p5_120)
          // #endregion
        }
        //#endregion ЛИСТ 02. ПРИЛОЖЕНИЕ 5. ВЕРСИЯ 1



        // #region Расчет строк 270, 280
        if (L2_190 > L2_220 + L2_250 + L2_268)
        {
          L2_270 := L2_190 - L2_220 - L2_250 - L2_268;  #_SetFldGV(L2_270)
          L2_280 := 0                                ;  #_SetSNull(L2_280)

          mL2_270 := 'Стр. 270 = стр. 190 - стр. 220 - стр. 2500 - стр. 268';
          mL2_280 := 'Стр. 280 = 0 (нулю)'                                  ;

          vL2_270 := GD0(L2_270)+' = '+GD0(L2_190)+' - '+GD0(L2_220)+' - '+GD0(L2_250)+' - '+GD0(L2_268);
          vL2_280 := GD0(L2_280)+' = 0'                                                                 ;
        }
        else
        {
          L2_270 := 0                                ;  #_SetSNull(L2_270)
          L2_280 := L2_220 + L2_250 + L2_268 - L2_190;  #_SetFldGV(L2_280)

          mL2_270 := 'Стр. 270 = 0 (нулю)'                      ;
          mL2_280 := 'Стр. 280 = стр. 220 + стр. 250 + стр. 268 - стр. 190';

          vL2_270 := GD0(L2_270)+' = 0'                                               ;
          vL2_280 := GD0(L2_280)+' = '+GD0(L2_220)+' + '+GD0(L2_250)+' + '+GD0(L2_268)+' - '+GD0(L2_190);
        }
        // #endregion Расчет строк 270, 280

        // #region Расчет строк 271, 281
        if (L2_200 > L2_230 + L2_260 + L2_267 + L2_269)
        {
          L2_271 := L2_200 - L2_230 - L2_260 - L2_267 - L2_269;  #_SetFldGV(L2_271)
          L2_281 := 0                                         ;  #_SetSNull(L2_281)

          mL2_271 := 'Стр. 271 = стр. 200 - стр. 230 - стр. 260 - стр. 267 - стр. 269';
          mL2_281 := 'Стр. 281 = 0 (нулю)'                                            ;

          vL2_271 := GD0(L2_271)+' = '+GD0(L2_200)+' - '+GD0(L2_230)+' - '+GD0(L2_260)+' - '+GD0(L2_267)+' - '+GD0(L2_269);
          vL2_281 := GD0(L2_281)+' = 0'                                                                                   ;
        }
        else
        {
          L2_271 := 0                                         ;  #_SetSNull(L2_271)
          L2_281 := L2_230 + L2_260 + L2_267 + L2_269 - L2_200;  #_SetFldGV(L2_281)

          mL2_271 := 'Стр. 271 = 0 (нулю)'                                            ;
          mL2_281 := 'Стр. 281 = стр. 230 + стр. 260 + стр. 267 + стр. 269 - стр. 200';

          vL2_271 := GD0(L2_271)+' = 0'                                                                                   ;
          vL2_281 := GD0(L2_281)+' = '+GD0(L2_230)+' + '+GD0(L2_260)+' + '+GD0(L2_267)+' + '+GD0(L2_269)+' - '+GD0(L2_200);
        }
        // #endregion Расчет строк 271, 281

        bufL2_270_r280 += L2_270 - L2_280;  vbufL2_270_r280 += '('+GD0(L2_270)+'-'+GD0(L2_280)+')+';
        bufL2_271_r281 += L2_271 - L2_281;  vbufL2_271_r281 += '('+GD0(L2_271)+'-'+GD0(L2_281)+')+';
        bufL2_300      += L2_300         ;  vbufL2_300      += GD0(L2_300)+'+'                     ;
        bufL2_310      += L2_310         ;  vbufL2_310      += GD0(L2_310)+'+'                     ;

        #_LogInfo(L2_010) // #region _LogInfo
        #_LogInfo(L2_020)
        #_LogInfo(L2_030)
        #_LogInfo(L2_040)
        #_LogInfo(L2_050)
        #_LogInfo(L2_060)
        #_LogInfo(L2_100)
        #_LogInfo(L2_110)
        #_LogInfo(L2_120)
        #_LogInfo(L2_140)
        #_LogInfo(L2_180)
        #_LogInfo(L2_190)
        #_LogInfo(L2_200)
        #_LogInfo(L2_210)
        #_LogInfo(L2_270)
        #_LogInfo(L2_271)
        #_LogInfo(L2_280)
        #_LogInfo(L2_281) // #endregion _LogInfo
      }

      // #region ЛИСТ 02. ПРИЛОЖЕНИЕ 6Б
      {
       Var aL2p6b_rA_010, aL2p6b_rA_020, aL2p6b_rA_030, aL2p6b_rA_031, aL2p6b_rA_040,
           aL2p6b_rA_041, aL2p6b_rA_050, aL2p6b_rA_060, aL2p6b_rA_070,
           aL2p6b_rA_110, aL2p6b_rA_120, aL2p6b_rA_130, aL2p6b_rA_131, aL2p6b_rA_140,
           aL2p6b_rA_141, aL2p6b_rA_150, aL2p6b_rA_160, aL2p6b_rA_170 : String = '';

       Var vL2p6b_rA_010, vL2p6b_rA_020, vL2p6b_rA_030, vL2p6b_rA_031, vL2p6b_rA_040,
           vL2p6b_rA_041, vL2p6b_rA_050, vL2p6b_rA_060, vL2p6b_rA_070,
           vL2p6b_rA_110, vL2p6b_rA_120, vL2p6b_rA_130, vL2p6b_rA_131, vL2p6b_rA_140,
           vL2p6b_rA_141, vL2p6b_rA_150, vL2p6b_rA_160, vL2p6b_rA_170 : String = '';

       Var mL2p6b_rA_010, mL2p6b_rA_020, mL2p6b_rA_030, mL2p6b_rA_031, mL2p6b_rA_040,
           mL2p6b_rA_041, mL2p6b_rA_050, mL2p6b_rA_060, mL2p6b_rA_070,
           mL2p6b_rA_110, mL2p6b_rA_120, mL2p6b_rA_130, mL2p6b_rA_131, mL2p6b_rA_140,
           mL2p6b_rA_141, mL2p6b_rA_150, mL2p6b_rA_160, mL2p6b_rA_170 : String = '';

       Var L2p6b_rA_010, L2p6b_rA_020, L2p6b_rA_030, L2p6b_rA_031, L2p6b_rA_040,
           L2p6b_rA_041, L2p6b_rA_050, L2p6b_rA_060, L2p6b_rA_070,
           L2p6b_rA_110, L2p6b_rA_120, L2p6b_rA_130, L2p6b_rA_131, L2p6b_rA_140,
           L2p6b_rA_141, L2p6b_rA_150, L2p6b_rA_160, L2p6b_rA_170 : Double = 0;

        aL2p6b_rA_010 := XMLAdrI + '/ДохРасхУчГрупНБ/СумНБУчастКГН/ОбщКонсНБКГН/СумНБУчГр'          ;
        aL2p6b_rA_020 := XMLAdrI + '/ДохРасхУчГрупНБ/СумНБУчастКГН/ОбщКонсНБКГН/СумУбытУчГр'        ;
        aL2p6b_rA_030 := XMLAdrI + '/ДохРасхУчГрупНБ/СумНБУчастКГН/ОбщКонсНБКГН/УбытУчОбщКонсНБ'    ; L2p6b_rA_030 := GetDblVal(aL2p6b_rA_030);
        aL2p6b_rA_031 := XMLAdrI + '/ДохРасхУчГрупНБ/СумНБУчастКГН/ОбщКонсНБКГН/УбытУчНеОбщКонсНБ'  ;
        aL2p6b_rA_040 := XMLAdrI + '/ДохРасхУчГрупНБ/СумНБУчастКГН/ОбщКонсНБКГН/ОбщКонсНБГр'        ;
        aL2p6b_rA_041 := XMLAdrI + '/ДохРасхУчГрупНБ/СумНБУчастКГН/ОбщКонсНБКГН/УбУмКонсНБНеобрЦБ'  ; L2p6b_rA_041 := GetDblVal(aL2p6b_rA_041);
        aL2p6b_rA_050 := XMLAdrI + '/ДохРасхУчГрупНБ/СумНБУчастКГН/ОбщКонсНБКГН/ОстУбПредНеУчтНач'  ;
        aL2p6b_rA_060 := XMLAdrI + '/ДохРасхУчГрупНБ/СумНБУчастКГН/ОбщКонсНБКГН/УбПредУмОбщНБПер'   ;
        aL2p6b_rA_070 := XMLAdrI + '/ДохРасхУчГрупНБ/СумНБУчастКГН/ОбщКонсНБКГН/ОстУбытНеУчтКон'    ;

        aL2p6b_rA_110 := XMLAdrI + '/ДохРасхУчГрупНБ/СумНБУчастКГН/КонсНБКГННеОбр/СумНБУчГр'        ;
        aL2p6b_rA_120 := XMLAdrI + '/ДохРасхУчГрупНБ/СумНБУчастКГН/КонсНБКГННеОбр/СумУбытУчГр'      ;
        aL2p6b_rA_130 := XMLAdrI + '/ДохРасхУчГрупНБ/СумНБУчастКГН/КонсНБКГННеОбр/УбытУчКонсНБ'     ; L2p6b_rA_130 := GetDblVal(aL2p6b_rA_130);
        aL2p6b_rA_131 := XMLAdrI + '/ДохРасхУчГрупНБ/СумНБУчастКГН/КонсНБКГННеОбр/УбытУчНеКонсНБ'   ;
        aL2p6b_rA_140 := XMLAdrI + '/ДохРасхУчГрупНБ/СумНБУчастКГН/КонсНБКГННеОбр/КонсНБГр'         ;
        aL2p6b_rA_141 := XMLAdrI + '/ДохРасхУчГрупНБ/СумНБУчастКГН/КонсНБКГННеОбр/КонсНБГрУмУбПер'  ;
        aL2p6b_rA_150 := XMLAdrI + '/ДохРасхУчГрупНБ/СумНБУчастКГН/КонсНБКГННеОбр/ОстУбПредНеУчтНач';
        aL2p6b_rA_160 := XMLAdrI + '/ДохРасхУчГрупНБ/СумНБУчастКГН/КонсНБКГННеОбр/УбПредУмНБПер'    ;
        aL2p6b_rA_170 := XMLAdrI + '/ДохРасхУчГрупНБ/СумНБУчастКГН/КонсНБКГННеОбр/ОстУбытНеУчтКон'  ;

        CountJ := XMLMap.GetNodeCountByName(XMLAdrI + '/ДохРасхУчГрупНБ/ДохРасхУчастКГН');
        for (j := 0; j < CountJ; j++)
        {
          XMLAdrJ := XMLAdrI + '/ДохРасхУчГрупНБ/ДохРасхУчастКГН' + getIter(j);

          if (GetStrNull(XMLAdrJ + '/ИННЮЛ_УчКГр')) Continue;

          Var aL2p6b_rB_210, aL2p6b_rB_220, aL2p6b_rB_230, aL2p6b_rB_240,
              aL2p6b_rB_250, aL2p6b_rB_255, aL2p6b_rB_256, aL2p6b_rB_257,
              aL2p6b_rB_258, aL2p6b_rB_260, aL2p6b_rB_270, aL2p6b_rB_275,
              aL2p6b_rB_280, aL2p6b_rB_285, aL2p6b_rB_290, aL2p6b_rB_291,
              aL2p6b_rB_310, aL2p6b_rB_311, aL2p6b_rB_312, aL2p6b_rB_320,
              aL2p6b_rB_330, aL2p6b_rB_340, aL2p6b_rB_350, aL2p6b_rB_360,
              aL2p6b_rB_361 : String = '';

          Var vL2p6b_rB_210, vL2p6b_rB_220, vL2p6b_rB_230, vL2p6b_rB_240,
              vL2p6b_rB_250, vL2p6b_rB_255, vL2p6b_rB_256, vL2p6b_rB_257,
              vL2p6b_rB_258, vL2p6b_rB_260, vL2p6b_rB_270, vL2p6b_rB_275,
              vL2p6b_rB_280, vL2p6b_rB_285, vL2p6b_rB_290, vL2p6b_rB_291,
              vL2p6b_rB_310, vL2p6b_rB_311, vL2p6b_rB_312, vL2p6b_rB_320,
              vL2p6b_rB_330, vL2p6b_rB_340, vL2p6b_rB_350, vL2p6b_rB_360,
              vL2p6b_rB_361 : String = '';

          Var mL2p6b_rB_210, mL2p6b_rB_220, mL2p6b_rB_230, mL2p6b_rB_240,
              mL2p6b_rB_250, mL2p6b_rB_255, mL2p6b_rB_256, mL2p6b_rB_257,
              mL2p6b_rB_258, mL2p6b_rB_260, mL2p6b_rB_270, mL2p6b_rB_275,
              mL2p6b_rB_280, mL2p6b_rB_285, mL2p6b_rB_290, mL2p6b_rB_291,
              mL2p6b_rB_310, mL2p6b_rB_311, mL2p6b_rB_312, mL2p6b_rB_320,
              mL2p6b_rB_330, mL2p6b_rB_340, mL2p6b_rB_350, mL2p6b_rB_360,
              mL2p6b_rB_361 : String = '';

          Var L2p6b_rB_210, L2p6b_rB_220, L2p6b_rB_230, L2p6b_rB_240,
              L2p6b_rB_250, L2p6b_rB_255, L2p6b_rB_256, L2p6b_rB_257,
              L2p6b_rB_258, L2p6b_rB_260, L2p6b_rB_270, L2p6b_rB_275,
              L2p6b_rB_280, L2p6b_rB_285, L2p6b_rB_290, L2p6b_rB_291,
              L2p6b_rB_310, L2p6b_rB_311, L2p6b_rB_312, L2p6b_rB_320,
              L2p6b_rB_330, L2p6b_rB_340, L2p6b_rB_350, L2p6b_rB_360,
              L2p6b_rB_361 : Double = 0;

          aL2p6b_rB_210 := XMLAdrJ + '/РасчОбщНБУчКГН/ДохРеалУчКГ'         ; L2p6b_rB_210 := GetDblVal(aL2p6b_rB_210);
          aL2p6b_rB_220 := XMLAdrJ + '/РасчОбщНБУчКГН/ВнеРеалДох'          ; L2p6b_rB_220 := GetDblVal(aL2p6b_rB_220);
          aL2p6b_rB_230 := XMLAdrJ + '/РасчОбщНБУчКГН/РасхУменДохРеал'     ; L2p6b_rB_230 := GetDblVal(aL2p6b_rB_230);
          aL2p6b_rB_240 := XMLAdrJ + '/РасчОбщНБУчКГН/ВнеРеалРасх'         ; L2p6b_rB_240 := GetDblVal(aL2p6b_rB_240);
          aL2p6b_rB_250 := XMLAdrJ + '/РасчОбщНБУчКГН/УбытОперПр3'         ; L2p6b_rB_250 := GetDblVal(aL2p6b_rB_250);
          aL2p6b_rB_255 := XMLAdrJ + '/РасчОбщНБУчКГН/ДохИсклПриб'         ; L2p6b_rB_255 := GetDblVal(aL2p6b_rB_255);
          aL2p6b_rB_256 := XMLAdrJ + '/РасчОбщНБУчКГН/КорПрошЛишУплНал'    ; L2p6b_rB_256 := GetDblVal(aL2p6b_rB_256);
          aL2p6b_rB_257 := XMLAdrJ + '/РасчОбщНБУчКГН/КорНБРаздV.1'        ; L2p6b_rB_257 := GetDblVal(aL2p6b_rB_257);
          aL2p6b_rB_258 := XMLAdrJ + '/РасчОбщНБУчКГН/НалБазДохИнв'        ; L2p6b_rB_258 := GetDblVal(aL2p6b_rB_258);
          aL2p6b_rB_260 := XMLAdrJ + '/РасчОбщНБУчКГН/ОбщНБУчаст'          ; L2p6b_rB_260 := GetDblVal(aL2p6b_rB_260);
          aL2p6b_rB_270 := XMLAdrJ + '/РасчОбщНБУчКГН/УбытУчаст'           ; L2p6b_rB_270 := GetDblVal(aL2p6b_rB_270);
          aL2p6b_rB_275 := XMLAdrJ + '/РасчОбщНБУчКГН/ОстУбПредНеУчтНач'   ; L2p6b_rB_275 := GetDblVal(aL2p6b_rB_275);
          aL2p6b_rB_280 := XMLAdrJ + '/РасчОбщНБУчКГН/УбПредУмНБПер'       ; L2p6b_rB_280 := GetDblVal(aL2p6b_rB_280);
          aL2p6b_rB_285 := XMLAdrJ + '/РасчОбщНБУчКГН/ОбщНБУчУмУбытПред'   ; L2p6b_rB_285 := GetDblVal(aL2p6b_rB_285);
          aL2p6b_rB_290 := XMLAdrJ + '/РасчОбщНБУчКГН/ОстУбНеУчтКон'       ; L2p6b_rB_290 := GetDblVal(aL2p6b_rB_290);
          aL2p6b_rB_291 := XMLAdrJ + '/РасчОбщНБУчКГН/ОстУбНеУчтНалПер'    ; L2p6b_rB_291 := GetDblVal(aL2p6b_rB_291);

          aL2p6b_rB_310 := XMLAdrJ + '/РасчНБУчКГННеОбр/НалБазУчаст'       ; L2p6b_rB_310 := GetDblVal(aL2p6b_rB_310);
          aL2p6b_rB_311 := XMLAdrJ + '/РасчНБУчКГННеОбр/НалБазУчастОш'     ; L2p6b_rB_311 := GetDblVal(aL2p6b_rB_311);
          aL2p6b_rB_312 := XMLAdrJ + '/РасчНБУчКГННеОбр/НалБазИнвТов'      ; L2p6b_rB_312 := GetDblVal(aL2p6b_rB_312);
          aL2p6b_rB_320 := XMLAdrJ + '/РасчНБУчКГННеОбр/УбытУчаст'         ; L2p6b_rB_320 := GetDblVal(aL2p6b_rB_320);
          aL2p6b_rB_330 := XMLAdrJ + '/РасчНБУчКГННеОбр/УбытНеУчтНач'      ; L2p6b_rB_330 := GetDblVal(aL2p6b_rB_330);
          aL2p6b_rB_340 := XMLAdrJ + '/РасчНБУчКГННеОбр/УбПредУмНБПер'     ; L2p6b_rB_340 := GetDblVal(aL2p6b_rB_340);
          aL2p6b_rB_350 := XMLAdrJ + '/РасчНБУчКГННеОбр/НБУчУмУбытПред'    ; L2p6b_rB_350 := GetDblVal(aL2p6b_rB_350);
          aL2p6b_rB_360 := XMLAdrJ + '/РасчНБУчКГННеОбр/ОстУбытНеУчтКон'   ; L2p6b_rB_360 := GetDblVal(aL2p6b_rB_360);
          aL2p6b_rB_361 := XMLAdrJ + '/РасчНБУчКГННеОбр/ОстУбытНеУчтНалПер'; L2p6b_rB_361 := GetDblVal(aL2p6b_rB_361);

          mL2p6b_rB_260 := 'Стр. 260 = стр. 210 + стр. 220 - стр. 230 - стр. 240 + стр. 250 - стр. 255 - стр. 256 + стр. 257 + стр. 258';
           L2p6b_rB_260 := L2p6b_rB_210+L2p6b_rB_220-L2p6b_rB_230-L2p6b_rB_240+L2p6b_rB_250-L2p6b_rB_255-L2p6b_rB_256+L2p6b_rB_257+L2p6b_rB_258;
          #_SetFldGV(L2p6b_rB_260)
          vL2p6b_rB_260 := GD0(L2p6b_rB_210)+' + '+GD0(L2p6b_rB_220)+' - '+GD0(L2p6b_rB_230)+' - '+GD0(L2p6b_rB_240)+' + '+GD0(L2p6b_rB_250)+' - '+GD0(L2p6b_rB_255)+' - '+GD0(L2p6b_rB_256)+' + '+GD0(L2p6b_rB_257)+' + '+GD0(L2p6b_rB_258);
          #_LogInfo(L2p6b_rB_260)

          mL2p6b_rB_285 := 'Стр. 285 = стр. 260 - стр. 280';
           L2p6b_rB_285 := L2p6b_rB_260-L2p6b_rB_280; #_SetFldGV(L2p6b_rB_285)
          vL2p6b_rB_285 := GD0(L2p6b_rB_285)+' = '+GD0(L2p6b_rB_260)+' - '+GD0(L2p6b_rB_280);
          #_LogInfo(L2p6b_rB_285)

          mL2p6b_rB_350 := 'Стр. 350 = стр. 310 - стр. 340';
           L2p6b_rB_350 := L2p6b_rB_310-L2p6b_rB_340; #_SetFldGV(L2p6b_rB_350)
          vL2p6b_rB_350 := GD0(L2p6b_rB_350)+' = '+GD0(L2p6b_rB_310)+' - '+GD0(L2p6b_rB_340);
          #_LogInfo(L2p6b_rB_350)

          L2p6b_rA_010 += L2p6b_rB_285;
          L2p6b_rA_020 += L2p6b_rB_270;
          L2p6b_rA_050 += L2p6b_rB_275;
          L2p6b_rA_060 += L2p6b_rB_280;
          L2p6b_rA_070 += L2p6b_rB_290;

          L2p6b_rA_110 += L2p6b_rB_350;
          L2p6b_rA_120 += L2p6b_rB_320;
          L2p6b_rA_150 += L2p6b_rB_330;
          L2p6b_rA_160 += L2p6b_rB_340;
          L2p6b_rA_170 += L2p6b_rB_360;
        }

        #_SetFldGV(L2p6b_rA_010) mL2p6b_rA_010 := ' = сумме строк 285 из Разделов Б Приложения N 6б к Листу 02'; vL2p6b_rA_010 := GD0(L2p6b_rA_010)+mL2p6b_rA_010; mL2p6b_rA_010 := 'Стр. 010 '+mL2p6b_rA_010 #_LogInfo(L2p6b_rA_010)
        #_SetFldGV(L2p6b_rA_020) mL2p6b_rA_020 := ' = сумме строк 270 из Разделов Б Приложения N 6б к Листу 02'; vL2p6b_rA_020 := GD0(L2p6b_rA_020)+mL2p6b_rA_020; mL2p6b_rA_020 := 'Стр. 020 '+mL2p6b_rA_020 #_LogInfo(L2p6b_rA_020)
        #_SetFldGV(L2p6b_rA_050) mL2p6b_rA_050 := ' = сумме строк 275 из Разделов Б Приложения N 6б к Листу 02'; vL2p6b_rA_050 := GD0(L2p6b_rA_050)+mL2p6b_rA_050; mL2p6b_rA_050 := 'Стр. 050 '+mL2p6b_rA_050 #_LogInfo(L2p6b_rA_050)
        #_SetFldGV(L2p6b_rA_060) mL2p6b_rA_060 := ' = сумме строк 280 из Разделов Б Приложения N 6б к Листу 02'; vL2p6b_rA_060 := GD0(L2p6b_rA_060)+mL2p6b_rA_060; mL2p6b_rA_060 := 'Стр. 060 '+mL2p6b_rA_060 #_LogInfo(L2p6b_rA_060)
        #_SetFldGV(L2p6b_rA_070) mL2p6b_rA_070 := ' = сумме строк 290 из Разделов Б Приложения N 6б к Листу 02'; vL2p6b_rA_070 := GD0(L2p6b_rA_070)+mL2p6b_rA_070; mL2p6b_rA_070 := 'Стр. 070 '+mL2p6b_rA_070 #_LogInfo(L2p6b_rA_070)

        #_SetFldGV(L2p6b_rA_110) mL2p6b_rA_110 := ' = сумме строк 350 из Разделов Б Приложения N 6б к Листу 02'; vL2p6b_rA_110 := GD0(L2p6b_rA_110)+mL2p6b_rA_110; mL2p6b_rA_110 := 'Стр. 110 '+mL2p6b_rA_110 #_LogInfo(L2p6b_rA_110)
        #_SetFldGV(L2p6b_rA_120) mL2p6b_rA_120 := ' = сумме строк 320 из Разделов Б Приложения N 6б к Листу 02'; vL2p6b_rA_120 := GD0(L2p6b_rA_120)+mL2p6b_rA_120; mL2p6b_rA_120 := 'Стр. 120 '+mL2p6b_rA_120 #_LogInfo(L2p6b_rA_120)
        #_SetFldGV(L2p6b_rA_150) mL2p6b_rA_150 := ' = сумме строк 330 из Разделов Б Приложения N 6б к Листу 02'; vL2p6b_rA_150 := GD0(L2p6b_rA_150)+mL2p6b_rA_150; mL2p6b_rA_150 := 'Стр. 150 '+mL2p6b_rA_150 #_LogInfo(L2p6b_rA_150)
        #_SetFldGV(L2p6b_rA_160) mL2p6b_rA_160 := ' = сумме строк 340 из Разделов Б Приложения N 6б к Листу 02'; vL2p6b_rA_160 := GD0(L2p6b_rA_160)+mL2p6b_rA_160; mL2p6b_rA_160 := 'Стр. 160 '+mL2p6b_rA_160 #_LogInfo(L2p6b_rA_160)
        #_SetFldGV(L2p6b_rA_170) mL2p6b_rA_170 := ' = сумме строк 360 из Разделов Б Приложения N 6б к Листу 02'; vL2p6b_rA_170 := GD0(L2p6b_rA_170)+mL2p6b_rA_170; mL2p6b_rA_170 := 'Стр. 170 '+mL2p6b_rA_170 #_LogInfo(L2p6b_rA_170)

        mL2p6b_rA_031 := 'Стр. 031 = стр. 020 - стр. 030';
         L2p6b_rA_031 := L2p6b_rA_020-L2p6b_rA_030; #_SetFldGV(L2p6b_rA_031)
        vL2p6b_rA_031 := GD0(L2p6b_rA_031)+' = '+GD0(L2p6b_rA_020)+' - '+GD0(L2p6b_rA_030);
        #_LogInfo(L2p6b_rA_031)

        mL2p6b_rA_131 := 'Стр. 131 = стр. 120 - стр. 130';
         L2p6b_rA_131 := L2p6b_rA_120-L2p6b_rA_130; #_SetFldGV(L2p6b_rA_131)
        vL2p6b_rA_131 := GD0(L2p6b_rA_131)+' = '+GD0(L2p6b_rA_120)+' - '+GD0(L2p6b_rA_130);
        #_LogInfo(L2p6b_rA_131)

        If(L2p6b_rA_010 = 0)
        {
          mL2p6b_rA_040 := 'Стр. 040 = стр. 020 * (-1), т.к. стр. 010 = 0';
           L2p6b_rA_040 := L2p6b_rA_020*(-1); #_SetFldGV(L2p6b_rA_040)
          vL2p6b_rA_040 := GD0(L2p6b_rA_040)+' = '+GD0(L2p6b_rA_020)+' * (-1)';
          #_LogInfo(L2p6b_rA_040)
        }
        else
        {
          mL2p6b_rA_040 := 'Стр. 040 = стр. 010 - стр. 030';
           L2p6b_rA_040 := L2p6b_rA_010-L2p6b_rA_030; #_SetFldGV(L2p6b_rA_040)
          vL2p6b_rA_040 := GD0(L2p6b_rA_040)+' = '+GD0(L2p6b_rA_010)+' - '+GD0(L2p6b_rA_030);
          #_LogInfo(L2p6b_rA_040)
        }

        If(L2p6b_rA_110 = 0)
        {
          mL2p6b_rA_140 := 'Стр. 140 = стр. 120 * (-1), т.к. стр. 110 = 0';
           L2p6b_rA_140 := L2p6b_rA_120*(-1); #_SetFldGV(L2p6b_rA_140)
          vL2p6b_rA_140 := GD0(L2p6b_rA_140)+' = '+GD0(L2p6b_rA_120)+' * (-1)';
          #_LogInfo(L2p6b_rA_140)
        }
        else
        {
          mL2p6b_rA_140 := 'Стр. 140 = стр. 110 - стр. 130';
           L2p6b_rA_140 := L2p6b_rA_110-L2p6b_rA_130; #_SetFldGV(L2p6b_rA_140)
          vL2p6b_rA_140 := GD0(L2p6b_rA_140)+' = '+GD0(L2p6b_rA_110)+' - '+GD0(L2p6b_rA_130);
          #_LogInfo(L2p6b_rA_140)
        }

        mL2p6b_rA_141 := 'Стр. 141 = стр. 140 - стр. 041';
         L2p6b_rA_141 := L2p6b_rA_140-L2p6b_rA_041; #_SetFldGV(L2p6b_rA_141)
        vL2p6b_rA_141 := GD0(L2p6b_rA_141)+' = '+GD0(L2p6b_rA_140)+' - '+GD0(L2p6b_rA_041);
        #_LogInfo(L2p6b_rA_141)
      }
      // #endregion ЛИСТ 02. ПРИЛОЖЕНИЕ 6Б


      // #region ПРИЛОЖЕНИЕ 7 К ЛИСТУ 02
      // #region  ПРИЛОЖЕНИЕ 7 К ЛИСТУ 02 РАЗДЕЛ Б

      Var sumL2p7_rB_040 : Double;
      sumL2p7_rB_040 := 0;

      CountJ := XMLMap.GetNodeCountByName(XMLAdrI + '/ИнвНалВыч/ПредВелИнвНеОб');
      for (j := 0; j < CountJ; j++)
      {
        XMLAdrJ := XMLAdrI + '/ИнвНалВыч/ПредВелИнвНеОб' + getIter(j);

        if GetStrNull(XMLAdrJ + '/СтавНалИнв') Continue;

        Var aL2p7_rB_010, aL2p7_rB_020, aL2p7_rB_040, aL2p7_rB_030, aL2p7_rB_031 : String;
        Var vL2p7_rB_010, vL2p7_rB_020, vL2p7_rB_040, vL2p7_rB_030, vL2p7_rB_031 : String;
        Var mL2p7_rB_010, mL2p7_rB_020, mL2p7_rB_040, mL2p7_rB_030, mL2p7_rB_031 : String;
        Var  L2p7_rB_010,  L2p7_rB_020,  L2p7_rB_040,  L2p7_rB_030,  L2p7_rB_031 : Double;

        aL2p7_rB_010 := XMLAdrJ + '/НалБаза120'  ;
        aL2p7_rB_020 := XMLAdrJ + '/СтавНалИнв'  ;              L2p7_rB_020 := GetDblVal(aL2p7_rB_020);
        aL2p7_rB_040 := XMLAdrJ + '/ПредВеличИнв';
        aL2p7_rB_030 := XMLAdrJ + '/СумНалСуб/СумНалСуб200' ;
        aL2p7_rB_031 := XMLAdrJ + '/СумНалСуб/СумНалСубСтав';

        mL2p7_rB_010 := 'Стр. 010 = стр. 120 из Листа 2';
         L2p7_rB_010 := GetDblVal(aL2_120);
        #_SetFldGV(L2p7_rB_010)
        vL2p7_rB_010 := GD0(L2p7_rB_010)+' = '+GD0(L2_120);
        #_LogInfo(L2p7_rB_010)

        mL2p7_rB_030 := 'Стр. 030 = стр. 200 из Листа 2';
         L2p7_rB_030 := GetDblVal(aL2_200);
        #_SetFldGV(L2p7_rB_030)
        vL2p7_rB_030 := GD0(L2p7_rB_030)+' = '+GD0(L2_200);
        #_LogInfo(L2p7_rB_030)

        mL2p7_rB_031 := 'Стр. 031 = стр. 010 * стр. 020 / 100';
         L2p7_rB_031 := L2p7_rB_010*L2p7_rB_020/100; #_SetFldGV(L2p7_rB_031)
        vL2p7_rB_031 := GD0(L2p7_rB_031)+' = '+GD0(L2p7_rB_010)+' * '+GD0(L2p7_rB_020)+' / 100';
        #_LogInfo(L2p7_rB_031)

        mL2p7_rB_040 := 'Стр. 040 = стр. 030 - стр. 031';
         L2p7_rB_040 := L2p7_rB_030-L2p7_rB_031; #_SetFldGV(L2p7_rB_040)
        vL2p7_rB_040 := GD0(L2p7_rB_040)+' = '+GD0(L2p7_rB_030)+' - '+GD0(L2p7_rB_031);
        #_LogInfo(L2p7_rB_040)

        sumL2p7_rB_040 += L2p7_rB_040;
      }
      // #endregion  ПРИЛОЖЕНИЕ 7 К ЛИСТУ 02 РАЗДЕЛ Б

      // #region   ПРИЛОЖЕНИЕ 7 К ЛИСТУ 02 РАЗДЕЛ В
      CountJ := XMLMap.GetNodeCountByName(XMLAdrI + '/ИнвНалВыч/ПредВелИнвОб');
      for (j := 0; j < CountJ; j++)
      {
        XMLAdrJ := XMLAdrI + '/ИнвНалВыч/ПредВелИнвОб' + getIter(j);

        if (   GetStrNull(XMLAdrJ + '/ОбРасч'     )
            Or GetStrNull(XMLAdrJ + '/КППМест'    )
            Or GetStrNull(XMLAdrJ + '/СтавНалРасч') )
        { Continue; }

        var aL2p7_rV_010, aL2p7_rV_020, aL2p7_rV_040, aL2p7_rV_030, aL2p7_rV_031 : String;
        var mL2p7_rV_010, mL2p7_rV_020, mL2p7_rV_040, mL2p7_rV_030, mL2p7_rV_031 : String;
        var vL2p7_rV_010, vL2p7_rV_020, vL2p7_rV_040, vL2p7_rV_030, vL2p7_rV_031 : String;
        var  L2p7_rV_010,  L2p7_rV_020,  L2p7_rV_040,  L2p7_rV_030,  L2p7_rV_031 : Double;

        aL2p7_rV_010 := XMLAdrJ + '/НалБазаДоля';
        aL2p7_rV_020 := XMLAdrJ + '/СтавНалРасч';  L2p7_rV_020 := GetDblVal(aL2p7_rV_020);
        aL2p7_rV_040 := XMLAdrJ + '/ПредВелИнв' ;
        aL2p7_rV_030 := XMLAdrJ + '/СумНалСуб/СумНалСуб070' ;
        aL2p7_rV_031 := XMLAdrJ + '/СумНалСуб/СумНалСубСтав';

        mL2p7_rV_010 := 'Стр. 010 = стр. 050 из Приложения 5 Листа 2';
         L2p7_rV_010 := GetDblVal(aL2p5_050);
        #_SetFldGV(L2p7_rV_010)
        vL2p7_rV_010 := GD0(L2p7_rV_010)+' = '+GD0(L2p5_050);
        #_LogInfo(L2p7_rV_010)

        mL2p7_rV_030 := 'Стр. 030 = стр. 070 из Приложения 5 Листа 2';
         L2p7_rV_030 := GetDblVal(aL2p5_070);
        #_SetFldGV(L2p7_rV_030)
        vL2p7_rV_030 := GD0(L2p7_rV_030)+' = '+GD0(L2p5_070);
        #_LogInfo(L2p7_rV_030)

        mL2p7_rV_031 := 'Стр. 031 = стр. 010 * стр. 020 / 100';
         L2p7_rV_031 := L2p7_rV_010*L2p7_rV_020/100; #_SetFldGV(L2p7_rV_031)
        vL2p7_rV_031 := GD0(L2p7_rV_031)+' = '+GD0(L2p7_rV_010)+' * '+GD0(L2p7_rV_020)+' / 100';
        #_LogInfo(L2p7_rV_031)

        mL2p7_rV_040 := 'Стр. 040 = стр. 030 - стр. 031';
         L2p7_rV_040 := L2p7_rV_030-L2p7_rV_031; #_SetFldGV(L2p7_rV_040)
        vL2p7_rV_040 := GD0(L2p7_rV_040)+' = '+GD0(L2p7_rV_030)+' - '+GD0(L2p7_rV_031);
        #_LogInfo(L2p7_rV_040)
      }
      // #endregion ПРИЛОЖЕНИЕ 7 К ЛИСТУ 02 РАЗДЕЛ В

      // #region ПРИЛОЖЕНИЕ 7 К ЛИСТУ 02 РАЗДЕЛ Г
      CountJ := XMLMap.GetNodeCountByName(XMLAdrI + '/ИнвНалВыч/УмСумИнвВыч');
      for (j := 0; j < CountJ; j++)
      {
        XMLAdrJ := XMLAdrI + '/ИнвНалВыч/УмСумИнвВыч' + getIter(j);

        if (   GetStrNull(XMLAdrJ + '/ОбРасч'     )
            Or GetStrNull(XMLAdrJ + '/КППМест'    ) )
        { Continue; }

        Var  aL2p7_rG_010, aL2p7_rG_011, aL2p7_rG_030, aL2p7_rG_031, aL2p7_rG_040,
             aL2p7_rG_020, aL2p7_rG_021, aL2p7_rG_022, aL2p7_rG_023, aL2p7_rG_ObRasch, L2p7_rG_ObRasch,
             aL2p7_rG_050, aL2p7_rG_051, aL2p7_rG_052, aL2p7_rG_053, aL2p7_rG_KPPMest, L2p7_rG_KPPMest  : String;

        Var  mL2p7_rG_010, mL2p7_rG_011, mL2p7_rG_030, mL2p7_rG_031, mL2p7_rG_040,
             mL2p7_rG_020, mL2p7_rG_021, mL2p7_rG_022, mL2p7_rG_023,
             mL2p7_rG_050, mL2p7_rG_051, mL2p7_rG_052, mL2p7_rG_053  : String;

        Var  vL2p7_rG_010, vL2p7_rG_011, vL2p7_rG_030, vL2p7_rG_031, vL2p7_rG_040,
             vL2p7_rG_020, vL2p7_rG_021, vL2p7_rG_022, vL2p7_rG_023,
             vL2p7_rG_050, vL2p7_rG_051, vL2p7_rG_052, vL2p7_rG_053  : String;

        Var   L2p7_rG_010,  L2p7_rG_011,  L2p7_rG_030,  L2p7_rG_031,  L2p7_rG_040, L2p5_050_itg,
              L2p7_rG_020,  L2p7_rG_021,  L2p7_rG_022,  L2p7_rG_023,
              L2p7_rG_050,  L2p7_rG_051,  L2p7_rG_052,  L2p7_rG_053  : Double;

        aL2p7_rG_ObRasch := XMLAdrJ + '/ОбРасч'  ; L2p7_rG_ObRasch := GetStrVal(aL2p7_rG_ObRasch);
        aL2p7_rG_KPPMest := XMLAdrJ + '/КППМест' ; L2p7_rG_KPPMest := GetStrVal(aL2p7_rG_KPPMest);

        L2p5_050_itg := 0
        // #region ПРИЛОЖЕНИЕ 5 К ЛИСТУ 02
        CountK := XMLMap.GetNodeCountByName(XMLAdrI + '/РаспрНалСубРФ');
        for (K := 0; K < CountK; K++)
        {
          XMLAdrK := XMLAdrI + '/РаспрНалСубРФ' + getIter(k);

          aL2p5_TipNP   := XMLAdrK + '/ТипНП'       ;  L2p5_TipNP   := GetStrVal(aL2p5_TipNP  );
          aL2p5_ObRasch := XMLAdrK + '/ОбРасч'      ;  L2p5_ObRasch := GetStrVal(aL2p5_ObRasch);
          aL2p5_Naim    := XMLAdrK + '/НаимОП'      ;  L2p5_Naim    := GetStrVal(aL2p5_Naim   );
          aL2p5_KPP     := XMLAdrK + '/КППОП'       ;  L2p5_KPP     := GetStrVal(aL2p5_KPP    );
          aL2p5_ObyzUpl := XMLAdrK + '/ОбязУплНалОП';  L2p5_ObyzUpl := GetStrVal(aL2p5_ObyzUpl);
          aL2p5_050     := XMLAdrK + '/НалБазаДоля' ;  L2p5_050     := GetDblVal(aL2p5_050)    ;

          if    GetStrNull(aL2p5_TipNP  )
             or GetStrNull(aL2p5_ObRasch)
             or GetStrNull(aL2p5_Naim   )
             or GetStrNull(aL2p5_KPP    )
             or GetStrNull(aL2p5_ObyzUpl)
          then Continue;

          If    (UpCase(Trim(L2p7_rG_ObRasch)) <> UpCase(Trim(L2p5_ObRasch)))
             Or (UpCase(Trim(L2p7_rG_KPPMest)) <> UpCase(Trim(L2p5_KPP)))
          then Continue;

          L2p5_050_itg += L2p5_050;
        }
        // #endregion ПРИЛОЖЕНИЕ 5 К ЛИСТУ 02

        aL2p7_rG_010 := XMLAdrJ + '/СумИсчНал'    ;
        aL2p7_rG_011 := XMLAdrJ + '/РасчСумНалОб' ;
        aL2p7_rG_030 := XMLAdrJ + '/СумРасхУмНеОб';
        aL2p7_rG_031 := XMLAdrJ + '/СумРасхУмОб'  ;
        aL2p7_rG_040 := XMLAdrJ + '/СумРасхУмФед' ;

        aL2p7_rG_020 := XMLAdrJ + '/РасхРасчУм/РасхРасчУмВс';
        aL2p7_rG_021 := XMLAdrJ + '/РасхРасчУм/РасхСоор'    ; L2p7_rG_021 := GetDblVal(aL2p7_rG_021);
        aL2p7_rG_022 := XMLAdrJ + '/РасхРасчУм/РасхДооб'    ; L2p7_rG_022 := GetDblVal(aL2p7_rG_022);
        aL2p7_rG_023 := XMLAdrJ + '/РасхРасчУм/РасхСозд'    ; L2p7_rG_023 := GetDblVal(aL2p7_rG_023);

        aL2p7_rG_050 := XMLAdrJ + '/СумРасхУм/СумРасхУм'   ;
        aL2p7_rG_051 := XMLAdrJ + '/СумРасхУм/СумРасхУм021';  L2p7_rG_051 := GetDblVal(aL2p7_rG_051);
        aL2p7_rG_052 := XMLAdrJ + '/СумРасхУм/СумРасхУм022';  L2p7_rG_052 := GetDblVal(aL2p7_rG_052);
        aL2p7_rG_053 := XMLAdrJ + '/СумРасхУм/СумРасхУм023';  L2p7_rG_053 := GetDblVal(aL2p7_rG_053);

        mL2p7_rG_010 := 'Стр. 010 = стр. 190 из Листа 2';
         L2p7_rG_010 := GetDblVal(aL2_190);
        #_SetFldGV(L2p7_rG_010)
        vL2p7_rG_010 := GD0(L2p7_rG_010)+' = '+GD0(L2_190);
        #_LogInfo(L2p7_rG_010)

        mL2p7_rG_011 := 'Стр. 011 = (сумма строк 050 Приложений N 5 к Листу 02 x ставка налога в федеральный бюджет / 100)';
         L2p7_rG_011 := L2p5_050_itg*GetDblVal(aL2_150)/100;
        #_SetFldGV(L2p7_rG_011)
        vL2p7_rG_011 := GD0(L2p7_rG_011)+' = '+GD0(L2p5_050_itg)+' * '+GD0(L2_150)+' / 100';
        #_LogInfo(L2p7_rG_011)

        mL2p7_rG_020 := 'Стр. 020 = стр. 021 + стр. 022 + стр. 023';
         L2p7_rG_020 := L2p7_rG_021+L2p7_rG_022+L2p7_rG_023;
        #_SetFldGV(L2p7_rG_020)
        vL2p7_rG_020 := GD0(L2p7_rG_020)+' = '+GD0(L2p7_rG_021)+' + '+GD0(L2p7_rG_022)+' + '+GD0(L2p7_rG_023);
        #_LogInfo(L2p7_rG_020)

        if(L2p7_rG_010 >= L2p7_rG_021+L2p7_rG_022)
        {
          mL2p7_rG_030 := 'Стр. 030 = стр. 021 + стр. 022, но не более стр. 010';
          L2p7_rG_030 := L2p7_rG_021+L2p7_rG_022;
          #_SetFldGV(L2p7_rG_030)
          vL2p7_rG_030 := GD0(L2p7_rG_030)+' = '+GD0(L2p7_rG_021)+' + '+GD0(L2p7_rG_022);
        }
        else
        {
          mL2p7_rG_030 := 'Стр. 030 = стр. 010, т.к. стр. 010 < (стр. 021 + стр. 022)';
          L2p7_rG_030 := L2p7_rG_010;
          #_SetFldGV(L2p7_rG_030)
          vL2p7_rG_030 := GD0(L2p7_rG_030)+' = '+GD0(L2p7_rG_010);
        }
        #_LogInfo(L2p7_rG_030)

        if(L2p7_rG_011 >= L2p7_rG_021+L2p7_rG_022)
        {
          mL2p7_rG_031 := 'Стр. 031 = стр. 021 + стр. 022, но не более стр. 011';
          L2p7_rG_031 := L2p7_rG_021+L2p7_rG_022;
          #_SetFldGV(L2p7_rG_031)
          vL2p7_rG_031 := GD0(L2p7_rG_031)+' = '+GD0(L2p7_rG_021)+' + '+GD0(L2p7_rG_022);
        }
        else
        {
          mL2p7_rG_031 := 'Стр. 031 = стр. 011, т.к. стр. 011 < (стр. 021 + стр. 022)';
          L2p7_rG_031 := L2p7_rG_011;
          #_SetFldGV(L2p7_rG_031)
          vL2p7_rG_031 := GD0(L2p7_rG_031)+' = '+GD0(L2p7_rG_011);
        }
        #_LogInfo(L2p7_rG_031)

        if(L2p7_rG_010 >= L2p7_rG_023)
        {
          mL2p7_rG_040 := 'Стр. 040 = стр. 023, но не более стр. 010';
          L2p7_rG_040 := L2p7_rG_023;
          #_SetFldGV(L2p7_rG_040)
          vL2p7_rG_040 := GD0(L2p7_rG_040)+' = '+GD0(L2p7_rG_023);
        }
        else
        {
          mL2p7_rG_040 := 'Стр. 040 = стр. 010, т.к. стр. 010 < стр. 023';
          L2p7_rG_040 := L2p7_rG_010;
          #_SetFldGV(L2p7_rG_040)
          vL2p7_rG_040 := GD0(L2p7_rG_040)+' = '+GD0(L2p7_rG_010);
        }
        #_LogInfo(L2p7_rG_040)

        L2p7_rG_050 := L2p7_rG_051+L2p7_rG_052+L2p7_rG_053;
        If(L2p7_rG_050 < L2p7_rG_010)and(L2p7_rG_050 < L2p7_rG_030)and(L2p7_rG_050 < L2p7_rG_031)and(L2p7_rG_050 < L2p7_rG_040)
        {
          mL2p7_rG_050 := 'Стр. 050 = стр. 051 + стр. 052 + стр. 053';
          #_SetFldGV(L2p7_rG_050)
          vL2p7_rG_050 := GD0(L2p7_rG_050)+' = '+GD0(L2p7_rG_051)+' + '+GD0(L2p7_rG_052)+' + '+GD0(L2p7_rG_053);
          #_LogInfo(L2p7_rG_050)
        }
        else
        {
          L2p7_rG_050 := if(L2p7_rG_050 > L2p7_rG_010, L2p7_rG_010, L2p7_rG_050);
          L2p7_rG_050 := if(L2p7_rG_050 > L2p7_rG_030, L2p7_rG_030, L2p7_rG_050);
          L2p7_rG_050 := if(L2p7_rG_050 > L2p7_rG_031, L2p7_rG_031, L2p7_rG_050);
          L2p7_rG_050 := if(L2p7_rG_050 > L2p7_rG_040, L2p7_rG_040, L2p7_rG_050);

          mL2p7_rG_050 := 'Стр. 050 = МИНИМУМ(стр. 010 + стр. 030 + стр. 031 + стр. 040)';
          #_SetFldGV(L2p7_rG_050)
          vL2p7_rG_050 := GD0(L2p7_rG_050)+' = МИНИМУМ('+GD0(L2p7_rG_010)+' , '+GD0(L2p7_rG_030)+' , '+GD0(L2p7_rG_031)+' , '+GD0(L2p7_rG_040)+')';
          #_LogInfo(L2p7_rG_050)
        }
      }
      // #endregion ПРИЛОЖЕНИЕ 7 К ЛИСТУ 02 РАЗДЕЛ Г

      // #region ПРИЛОЖЕНИЕ 7 К ЛИСТУ 02 РАЗДЕЛ А
      CountJ := XMLMap.GetNodeCountByName(XMLAdrI + '/ИнвНалВыч/РасчИнвВыч');
      for (j := 0; j < CountJ; j++)
      {
        XMLAdrJ := XMLAdrI + '/ИнвНалВыч/РасчИнвВыч' + getIter(j);

        if (   GetStrNull(XMLAdrJ + '/ОбРасч' )
            Or GetStrNull(XMLAdrJ + '/КППМест') )
        { Continue; }

        Var aL2p7_rA_030, aL2p7_rA_040, aL2p7_rA_010, aL2p7_rA_011, aL2p7_rA_012,
            aL2p7_rA_013, aL2p7_rA_014, aL2p7_rA_015, aL2p7_rA_016, aL2p7_rA_020,
            aL2p7_rA_021, aL2p7_rA_050, aL2p7_rA_051, aL2p7_rA_060, aL2p7_rA_061 : String = '';

        Var vL2p7_rA_030, vL2p7_rA_040, vL2p7_rA_010, vL2p7_rA_011, vL2p7_rA_012,
            vL2p7_rA_013, vL2p7_rA_014, vL2p7_rA_015, vL2p7_rA_016, vL2p7_rA_020,
            vL2p7_rA_021, vL2p7_rA_050, vL2p7_rA_051, vL2p7_rA_060, vL2p7_rA_061 : String = '';

        Var mL2p7_rA_030, mL2p7_rA_040, mL2p7_rA_010, mL2p7_rA_011, mL2p7_rA_012,
            mL2p7_rA_013, mL2p7_rA_014, mL2p7_rA_015, mL2p7_rA_016, mL2p7_rA_020,
            mL2p7_rA_021, mL2p7_rA_050, mL2p7_rA_051, mL2p7_rA_060, mL2p7_rA_061 : String = '';

        Var  L2p7_rA_030,  L2p7_rA_040,  L2p7_rA_010,  L2p7_rA_011,  L2p7_rA_012,
             L2p7_rA_013,  L2p7_rA_014,  L2p7_rA_015,  L2p7_rA_016,  L2p7_rA_020,
             L2p7_rA_021,  L2p7_rA_050,  L2p7_rA_051,  L2p7_rA_060,  L2p7_rA_061 : Double = 0;


        aL2p7_rA_030 := XMLAdrJ + '/ПредИнвВыч';              L2p7_rA_030 := GetDblVal(aL2p7_rA_030);
        aL2p7_rA_040 := XMLAdrJ + '/ВозмИнвВыч';
        aL2p7_rA_010 := XMLAdrJ + '/МаксИнвВыч/МаксИнвВычВс';
        aL2p7_rA_011 := XMLAdrJ + '/МаксИнвВыч/МаксИнвВыч01'; L2p7_rA_011 := GetDblVal(aL2p7_rA_011);
        aL2p7_rA_012 := XMLAdrJ + '/МаксИнвВыч/МаксИнвВыч02'; L2p7_rA_012 := GetDblVal(aL2p7_rA_012);
        aL2p7_rA_013 := XMLAdrJ + '/МаксИнвВыч/МаксИнвВыч03'; L2p7_rA_013 := GetDblVal(aL2p7_rA_013);
        aL2p7_rA_014 := XMLAdrJ + '/МаксИнвВыч/МаксИнвВыч04'; L2p7_rA_014 := GetDblVal(aL2p7_rA_014);
        aL2p7_rA_015 := XMLAdrJ + '/МаксИнвВыч/МаксИнвВыч05'; L2p7_rA_015 := GetDblVal(aL2p7_rA_015);
        aL2p7_rA_016 := XMLAdrJ + '/МаксИнвВыч/МаксИнвВыч06'; L2p7_rA_016 := GetDblVal(aL2p7_rA_016);
        aL2p7_rA_020 := XMLAdrJ + '/ОстИнвВыч/ОстИнвВычВс'  ;
        aL2p7_rA_050 := XMLAdrJ + '/СумИнвВыч/СумИнвВычВс'  ;
        aL2p7_rA_060 := XMLAdrJ + '/НеучИнвВыч/НеучИнвВычВс';

        CountK := XMLMap.GetNodeCountByName(XMLAdrJ + '/ОстИнвВыч/ОстИнвВычРасх');
        for (k := 0; k < CountK; k++)
        {
          XMLAdrK := XMLAdrJ + '/ОстИнвВыч/ОстИнвВычРасх' + getIter(k);

          if (   GetStrNull(XMLAdrK + '/КодРасх')
              or GetStrNull(XMLAdrK + '/СумРасх') )
          {Continue;}

          aL2p7_rA_021 := XMLAdrK + '/СумРасх';
          L2p7_rA_021 := GetDblVal(aL2p7_rA_021);
          L2p7_rA_020  += L2p7_rA_021;
        }

        CountK := XMLMap.GetNodeCountByName(XMLAdrJ + '/СумИнвВыч/СумИнвВычРасх');
        for (k := 0; k < CountK; k++)
        {
          XMLAdrK := XMLAdrJ + '/СумИнвВыч/СумИнвВычРасх' + getIter(k);

          if (   GetStrNull(XMLAdrK + '/КодРасх')
              or GetStrNull(XMLAdrK + '/СумРасх') )
          {Continue;}

          aL2p7_rA_051 := XMLAdrK + '/СумРасх';
          L2p7_rA_051  := GetDblVal(aL2p7_rA_051);
          L2p7_rA_050  += L2p7_rA_051;
        }

        CountK := XMLMap.GetNodeCountByName(XMLAdrJ + '/НеучИнвВыч/НеучИнвВычРасх');
        for (k := 0; k < CountK; k++)
        {
          XMLAdrK := XMLAdrJ + '/НеучИнвВыч/НеучИнвВычРасх' + getIter(k);

          if (   GetStrNull(XMLAdrK + '/КодРасх')
              or GetStrNull(XMLAdrK + '/СумРасх') )
          {Continue;}

          aL2p7_rA_061 := XMLAdrK + '/СумРасх';
           L2p7_rA_061 := GetDblVal(aL2p7_rA_061);
           L2p7_rA_060 += L2p7_rA_061;
        }

        mL2p7_rA_030 := 'Стр. 030 = стр. 040 из Раздела Б';
         L2p7_rA_030 := sumL2p7_rB_040;
        #_SetFldGV(L2p7_rA_030)
        vL2p7_rA_030 := GD0(L2p7_rA_030)+' = '+GD0(L2p7_rA_030);
        #_LogInfo(L2p7_rA_030)

        mL2p7_rA_010 := 'Стр. 010 = стр. 011 + стр. 012 + стр. 013 + стр. 014 + стр. 015 + стр. 016';
         L2p7_rA_010 := L2p7_rA_011+L2p7_rA_012+L2p7_rA_013+L2p7_rA_014+L2p7_rA_015+L2p7_rA_016;
        #_SetFldGV(L2p7_rA_010)
        vL2p7_rA_010 := GD0(L2p7_rA_010)+' = '+GD0(L2p7_rA_011)+' + '+GD0(L2p7_rA_012)+' + '+GD0(L2p7_rA_013)+' + '+GD0(L2p7_rA_014)+' + '+GD0(L2p7_rA_015)+' + '+GD0(L2p7_rA_016);
        #_LogInfo(L2p7_rA_010)

        #_SetFldGV(L2p7_rA_020) mL2p7_rA_020 := ' = сумме строк 021..024'; vL2p7_rA_020 := GD0(L2p7_rA_020)+mL2p7_rA_020; mL2p7_rA_020 := 'Стр. 020 '+mL2p7_rA_020 #_LogInfo(L2p7_rA_020)

        If(L2p7_rA_050 > L2p7_rA_030)
        {L2p7_rA_050 := L2p7_rA_030;}
        #_SetFldGV(L2p7_rA_050)
        mL2p7_rA_050 := ' = сумме строк 051..054';
        vL2p7_rA_050 := GD0(L2p7_rA_050)+mL2p7_rA_050;
        mL2p7_rA_050 := 'Стр. 050 '+mL2p7_rA_050
        #_LogInfo(L2p7_rA_050)

        If( L2p7_rA_010+L2p7_rA_020 > L2p7_rA_030)
        {
          mL2p7_rA_040 := 'Стр. 040 = стр. 030';
           L2p7_rA_040 := L2p7_rA_030 #_SetFldGV(L2p7_rA_040)
          vL2p7_rA_040 := GD0(L2p7_rA_040)+' = '+GD0(L2p7_rA_030);
          #_LogInfo(L2p7_rA_040)
        }
        else
        {
         mL2p7_rA_040 := 'Стр. 040 = стр. 010 + стр. 020';
          L2p7_rA_040 := L2p7_rA_010+L2p7_rA_020;  #_SetFldGV(L2p7_rA_040)
         vL2p7_rA_040 := GD0(L2p7_rA_040)+' = '+GD0(L2p7_rA_010)+' + '+GD0(L2p7_rA_020);
         #_LogInfo(L2p7_rA_040)
        }

        If(L2p7_rA_010+L2p7_rA_020-L2p7_rA_050 > L2p7_rA_030)
        {
          mL2p7_rA_060 := 'Стр. 060 = стр. 030';
           L2p7_rA_060 := L2p7_rA_030 #_SetFldGV(L2p7_rA_060)
          vL2p7_rA_060 := GD0(L2p7_rA_060)+' = '+GD0(L2p7_rA_030);
          #_LogInfo(L2p7_rA_060)
        }
        else
        {
          mL2p7_rA_060 := 'Стр. 060 = стр. 010 + стр. 020 - стр. 050';
           L2p7_rA_060 := L2p7_rA_010+L2p7_rA_020-L2p7_rA_050;  #_SetFldGV(L2p7_rA_060)
          vL2p7_rA_060 := GD0(L2p7_rA_060)+' = '+GD0(L2p7_rA_010)+' + '+GD0(L2p7_rA_020)+' + '+GD0(L2p7_rA_050);
          #_LogInfo(L2p7_rA_060)
        }
      }
      // #endregion ПРИЛОЖЕНИЕ 7 К ЛИСТУ 02 РАЗДЕЛ А
    }
  }
  //#endregion ЛИСТ 02

  // #region ЛИСТ 02. ПРИЛОЖЕНИЕ 5. ВЕРСИЯ 2
  CountI := XMLMAP.GetNodeCountByName('Файл/Документ/Прибыль/РаспрНалСубРФ');
  for (i := 0; i < CountI; i++)
  {
    XMLAdrI := 'Файл/Документ/Прибыль/РаспрНалСубРФ' + getIter(i);

    if    GetStrNull(XMLAdrI + '/ТипНП'       )
       or GetStrNull(XMLAdrI + '/ОбРасч'      )
       or GetStrNull(XMLAdrI + '/НаимОП'      )
       or GetStrNull(XMLAdrI + '/КППОП'       )
       or GetStrNull(XMLAdrI + '/ОбязУплНалОП')
    then Continue;

    // #region ИНИЦИЛИЗАЦИЯ ПЕРЕМЕННЫХ
    aL2_120 := 'Файл/Документ/Прибыль/РасчНал/НалБазаИсч';
    L2_120 := if (GetFldVis(aL2_120), GetDblVal(aL2_120), 0);

    aL2p5_070     := XMLAdrI + '/СумНал'        ;
    aL2p5_050     := XMLAdrI + '/НалБазаДоля'   ;
    aL2p5_100_110 := XMLAdrI + '/СумНалП'       ;
    aL2p5_120     := XMLAdrI + '/МесАвПлат'     ;
    aL2p5_030     := XMLAdrI + '/НалБазаОрг'    ;   L2p5_030 := GetDblVal(aL2p5_030);
    aL2p5_040     := XMLAdrI + '/ДоляНалБаз'    ;   L2p5_040 := GetDblVal(aL2p5_040);
    aL2p5_060     := XMLAdrI + '/СтавНалСубРФ'  ;   L2p5_060 := GetDblVal(aL2p5_060);
    aL2p5_080     := XMLAdrI + '/НалНачислСубРФ';   L2p5_080 := GetDblVal(aL2p5_080);
    aL2p5_090     := XMLAdrI + '/НалВыплВнеРФ'  ;   L2p5_090 := GetDblVal(aL2p5_090);
    aL2p5_097     := XMLAdrI + '/ТСУменАвОтч'   ;   L2p5_097 := GetDblVal(aL2p5_097);
    // #endregion ИНИЦИЛИЗАЦИЯ ПЕРЕМЕННЫХ

    // #region Расчет строк 030, 050, 070, 100/110
    L2p5_030     := L2_120                                     ;  #_SetFldGV(L2p5_030    )
    L2p5_050     := L2p5_030 * (L2p5_040 / 100)                ;  #_SetFldGV(L2p5_050    )
    L2p5_070     := L2p5_050 * (L2p5_060 / 100)                ;  #_SetFldGV(L2p5_070    )
    L2p5_100_110 := L2p5_070 - (L2p5_080 + L2p5_090 + L2p5_097);  #_SetFldGV(L2p5_100_110)

    vL2p5_030     := GD0(L2p5_030    )+' = '+GD0(L2_120  )                                                                  ;
    vL2p5_050     := GD0(L2p5_050    )+' = '+GD0(L2p5_030)+' * ('+GD11(L2p5_040)+' / 100)'                                  ;
    vL2p5_070     := GD0(L2p5_070    )+' = '+GD0(L2p5_050)+' * ('+GD3 (L2p5_060)+' / 100)'                                  ;
    vL2p5_100_110 := GD0(L2p5_100_110)+' = '+GD0(L2p5_070)+' - ('+GD0 (L2p5_080)+' + '+GD0(L2p5_090)+' + '+GD0(L2p5_097)+')';
    // #endregion Расчет строк 030, 050, 070, 100/110

    // 120 = 310 Листа 02 * 040 / 100(%)
    // Строки 120 Приложений N 5 к Листу 02 Декларации в Декларациях за налоговый период не заполняются
    // В Приложениях N 5 к Листу 02 Декларации по указанным обособленным подразделениям (с кодом "3" по реквизиту "Расчет составлен (код)")
    // строки 120, 121 не заполняются
    // #region
    if    NalPer_God
       or GetStrVal(XMLAdrI + '/ОбРасч') = '3'
    {
      L2p5_120 := 0;  #_SetSNull(L2p5_120)

      mL2p5_120 := 'Стр. 120 = 0 (нулю) (за налоговый период не заполняется; не заполняются при Расчет составлен (код) равном 3)';
      vL2p5_120 := GD0(L2p5_120)+' = 0';
    }
    else
    {
      aL2_310 := 'Файл/Документ/Прибыль/РасчНал/АвПлатМесСуб';
      L2_310 := if (GetFldVisInTree(aL2_310), GetDblVal(aL2_310), 0);

      L2p5_120  := L2_310 * L2p5_040 / 100;  #_SetFldGV(L2p5_120)

      mL2p5_120 := 'Стр. 120 = стр. 310 Листа 02 * стр. 040 / 100';
      vL2p5_120 := GD0(L2p5_120)+' = '+GD0(L2_310)+' * '+GD11(L2p5_040)+' / 100';
    }
    // #endregion

    #_LogInfo(L2p5_030    ) // #region _LogInfo
    #_LogInfo(L2p5_050    )
    #_LogInfo(L2p5_070    )
    #_LogInfo(L2p5_100_110)
    #_LogInfo(L2p5_120    ) // #endregion _LogInfo
  }
  // #endregion ЛИСТ 02. ПРИЛОЖЕНИЕ 5. ВЕРСИЯ 2

  // #region ЛИСТ 03
  {
    // #region ОБЪЯВЛЕНИЕ ПЕРЕМЕННЫХ
    var L3rA_001, L3rA_010, L3rA_020, L3rA_021, L3rA_022, L3rA_023, L3rA_024, L3rA_030, L3rA_040, L3rA_041, L3rA_050, L3rA_070, L3rA_080, L3rA_081
      , L3rA_090, L3rA_091, L3rA_092, L3rA_100, L3rA_110, L3rA_120, L3rA_Form
      , L3rB_010, L3rB_020, L3rB_030 : double = 0.0;

    var aL3rA_001, aL3rA_010, aL3rA_020, aL3rA_021, aL3rA_022, aL3rA_023, aL3rA_024, aL3rA_030, aL3rA_040, aL3rA_041, aL3rA_050, aL3rA_060, aL3rA_070
      , aL3rA_080, aL3rA_081, aL3rA_090, aL3rA_091, aL3rA_092, aL3rA_100, aL3rA_110, aL3rA_120, aL3rA_Form
      , aL3rB_010, aL3rB_020, aL3rB_030
      , mL3rA_010, mL3rA_020, mL3rA_090
      , mL3rB_030
      , vL3rA_010, vL3rA_020, vL3rA_090
      , vL3rB_030 : string = '';
    // #endregion ОБЪЯВЛЕНИЕ ПЕРЕМЕННЫХ

    mL3rA_010 := 'Стр. 010 = стр. 020 + стр. 030 + стр. 040 + стр. 050 + стр. 070';
    mL3rA_020 := 'Стр. 020 = стр. 021 + стр. 022 + стр. 023 + стр. 024'           ;
    mL3rB_030 := 'Стр. 030 = стр. 010 * стр. 020 / 100'                           ;

    // #region ЛИСТ 03. РАЗДЕЛ А
    CountI := XMLMAP.GetNodeCountByName('Файл/Документ/Прибыль/НалУдНА/НалДохДив');
    for (i := 0; i < CountI; i++)
    {
      // #region ИНИЦИЛИЗАЦИЯ ПЕРЕМЕННЫХ
      XMLAdrI := 'Файл/Документ/Прибыль/НалУдНА/НалДохДив' + getIter(i);

      aL3rA_010  := XMLAdrI + '/ДивВсего'               ;
      aL3rA_020  := XMLAdrI + '/ДивРосОрг/ДивРосОргВс'  ;
      aL3rA_090  := XMLAdrI + '/ДивРаспрУм'             ;
      aL3rA_001  := XMLAdrI + '/ДивРаспрПол'            ;   L3rA_001  := GetDblVal(aL3rA_001 );
      aL3rA_021  := XMLAdrI + '/ДивРосОрг/ДивРосСтав0'  ;   L3rA_021  := GetDblVal(aL3rA_021 );
      aL3rA_022  := XMLAdrI + '/ДивРосОрг/ДивРосСтав13' ;   L3rA_022  := GetDblVal(aL3rA_022 );
      aL3rA_023  := XMLAdrI + '/ДивРосОрг/ДивРосСтавИн' ;   L3rA_023  := GetDblVal(aL3rA_023 );
      aL3rA_024  := XMLAdrI + '/ДивРосОрг/ДивРосНеНП'   ;   L3rA_024  := GetDblVal(aL3rA_024 );
      aL3rA_030  := XMLAdrI + '/ДивФЛРез'               ;   L3rA_030  := GetDblVal(aL3rA_030 );
      aL3rA_040  := XMLAdrI + '/ДивИнОрг/ДивИнОргВс'    ;   L3rA_040  := GetDblVal(aL3rA_040 );
      aL3rA_041  := XMLAdrI + '/ДивИнОрг/ДивИнОргРос'   ;   L3rA_041  := GetDblVal(aL3rA_041 );
      aL3rA_050  := XMLAdrI + '/ДивФЛНеРез/ДивФЛНеРезВс';   L3rA_050  := GetDblVal(aL3rA_050 );
      aL3rA_070  := XMLAdrI + '/ДивНеДоход'             ;   L3rA_070  := GetDblVal(aL3rA_070 );
      aL3rA_Form := XMLAdrI + '/Формула_Л03_Стр090'     ;   L3rA_Form := GetStrVal(aL3rA_Form);
      aL3rA_080  := XMLAdrI + '/ДивНА/ДивНАдоРас'       ;   L3rA_080  := GetDblVal(aL3rA_080 );
      aL3rA_081  := XMLAdrI + '/ДивНА/ДивНАБезУч0'      ;   L3rA_081  := GetDblVal(aL3rA_081 );
      aL3rA_091  := XMLAdrI + '/ДивНал/ДивНал13'        ;   L3rA_091  := GetDblVal(aL3rA_091 );
      aL3rA_092  := XMLAdrI + '/ДивНал/ДивНал0'         ;   L3rA_092  := GetDblVal(aL3rA_092 );
      aL3rA_100  := XMLAdrI + '/НалИсчисл'              ;   L3rA_100  := GetDblVal(aL3rA_100 );
      aL3rA_110  := XMLAdrI + '/НалДивПред'             ;   L3rA_110  := GetDblVal(aL3rA_110 );
      aL3rA_120  := XMLAdrI + '/НалДивПосл'             ;   L3rA_120  := GetDblVal(aL3rA_120 );
      // #endregion ИНИЦИЛИЗАЦИЯ ПЕРЕМЕННЫХ

      L3rA_020 := L3rA_021 + L3rA_022 + L3rA_023 + L3rA_024                        ;  #_SetFldGV(L3rA_020)
      L3rA_010 := L3rA_020 + L3rA_030 + (L3rA_040 - L3rA_041) + L3rA_050 + L3rA_070;  #_SetFldGV(L3rA_010)

      // #region Расчет строки 090
      if _KategorNA(XMLAdrI + '/КатегорНА')
      {
        #_SetSNull(L3rA_080)  LogInfo(aL3rA_080, 'Стр. 080 = 0 (нулю) (т.к. Катег. НА = 2)', GD0(L3rA_080)+' = 0');
        #_SetSNull(L3rA_081)  LogInfo(aL3rA_081, 'Стр. 081 = 0 (нулю) (т.к. Катег. НА = 2)', GD0(L3rA_081)+' = 0');
      }
      else
      {
        case L3rA_Form of
          '0':  {
                  L3rA_090 := L3rA_001 - L3rA_081;  #_SetFldGV(L3rA_090)

                  mL3rA_090 := 'Стр. 090 = стр. 001 - стр. 081';
                  vL3rA_090 := GD0(L3rA_090)+' = '+GD0(L3rA_001)+' - '+GD0(L3rA_081);
                }
          '1':  {
                  L3rA_090 := L3rA_010 + L3rA_070 - L3rA_081;  #_SetFldGV(L3rA_090)

                  mL3rA_090 := 'Стр. 090 = стр. 010 + стр. 070 - стр. 081';
                  vL3rA_090 := GD0(L3rA_090)+' = '+GD0(L3rA_010)+' + '+GD0(L3rA_070)+' - '+GD0(L3rA_081);
                }
          else  {
                  #_SetSNull(L3rA_090)

                  mL3rA_090 := 'Стр. 090 = 0 (нулю) (т.к. формула расчета не указана)';
                  vL3rA_090 := GD0(L3rA_080)+'= 0';
                }
        end;

        #_LogInfo(L3rA_090)

        // Если 090 < 0, то по строкам 091 - 120 ставятся прочерки
        if (L3rA_090 < 0)
        {
        /*#_SetSNull(L3rA_090);   LogInfo(aL3rA_090, 'Стр. 090 = 0 (нулю) (т.к. стр. 090 < 0)', GD0(L3rA_090)+'= 0');*/
          #_SetSNull(L3rA_091);   LogInfo(aL3rA_091, 'Стр. 091 = 0 (нулю) (т.к. стр. 090 < 0)', GD0(L3rA_091)+'= 0');
          #_SetSNull(L3rA_092);   LogInfo(aL3rA_092, 'Стр. 092 = 0 (нулю) (т.к. стр. 090 < 0)', GD0(L3rA_092)+'= 0');
          #_SetSNull(L3rA_100);   LogInfo(aL3rA_100, 'Стр. 100 = 0 (нулю) (т.к. стр. 090 < 0)', GD0(L3rA_100)+'= 0');
          #_SetSNull(L3rA_110);   LogInfo(aL3rA_110, 'Стр. 110 = 0 (нулю) (т.к. стр. 090 < 0)', GD0(L3rA_110)+'= 0');
          #_SetSNull(L3rA_120);   LogInfo(aL3rA_120, 'Стр. 120 = 0 (нулю) (т.к. стр. 090 < 0)', GD0(L3rA_120)+'= 0');
        }
      }
      // #endregion Расчет строки 090

      vL3rA_010 := vL3rA_010+' = '+GD0(L3rA_020)+' + '+GD0(L3rA_030)+' + ('+GD0(L3rA_040)+' - '+GD0(L3rA_041)+') + '+GD0(L3rA_050)+' + '+GD0(L3rA_070);
      vL3rA_020 := vL3rA_020+' = '+GD0(L3rA_021)+' + '+GD0(L3rA_022)+' + '+GD0(L3rA_023)+' + '+GD0(L3rA_024)                                          ;

      #_LogInfo(L3rA_010)
      #_LogInfo(L3rA_020)
    }
    // #endregion ЛИСТ 03. РАЗДЕЛ А

    // #region ЛИСТ 03. РАЗДЕЛ Б
    CountI := XMLMAP.GetNodeCountByName('Файл/Документ/Прибыль/НалУдНА/НалДохЦБ');
    for (i := 0; i < CountI; i++)
    {
      // #region ИНИЦИЛИЗАЦИЯ ПЕРЕМЕННЫХ
      XMLAdrI := 'Файл/Документ/Прибыль/НалУдНА/НалДохЦБ' + getIter(i);

      aL3rB_030 := XMLAdrI + '/НалИсчисл';
      aL3rB_010 := XMLAdrI + '/НалБаза'  ;   L3rB_010 := GetDblVal(aL3rB_010);
      aL3rB_020 := XMLAdrI + '/СтавНал'  ;   L3rB_020 := GetDblVal(aL3rB_020);
      // #endregion ИНИЦИЛИЗАЦИЯ ПЕРЕМЕННЫХ

      L3rB_030 := L3rB_010 * L3rB_020 / 100;  #_SetFldGV(L3rB_030)

      vL3rB_030 := GD0(L3rB_030)+' = '+GD0(L3rB_010)+' * '+GD0(L3rB_020)+' / 100';
      #_LogInfo(L3rB_030)
    }
    // #endregion ЛИСТ 03. РАЗДЕЛ Б
  }
  //#endregion ЛИСТ 03

  // #region ЛИСТ 04

  // #region ОБЪЯВЛЕНИЕ ПЕРЕМЕННЫХ
  var  L4_010,  L4_020,  L4_030,  L4_040,  L4_050,  L4_060,  L4_070,  L4_080 : double = 0.0;

  var aL4_010, aL4_020, aL4_030, aL4_040, aL4_050, aL4_060, aL4_070, aL4_080
    , mL4_040, mL4_080
    , vL4_040, vL4_080 : string = '';
  // #endregion ОБЪЯВЛЕНИЕ ПЕРЕМЕННЫХ

  mL4_040 := 'Стр. 040 = (стр. 010 - стр. 020) * стр. 030 / 100';
  mL4_080 := 'Стр. 080 = стр. 040 - стр. 050 - стр. 060 - стр. 070';

  CountI := XMLMAP.GetNodeCountByName('Файл/Документ/Прибыль/НалДохСтав');
  for (i := 0; i < CountI; i++)
  {
    // #region ИНИЦИЛИЗАЦИЯ ПЕРЕМЕННЫХ
    XMLAdrI := 'Файл/Документ/Прибыль/НалДохСтав' + getIter(i);

    aL4_010 := XMLAdrI + '/НалБаза'       ;  L4_010 := GetDblVal(aL4_010);
    aL4_020 := XMLAdrI + '/ДохУмНалБаз'   ;  L4_020 := GetDblVal(aL4_020);
    aL4_030 := XMLAdrI + '/СтавНал'       ;  L4_030 := GetDblVal(aL4_030);
    aL4_040 := XMLAdrI + '/НалИсчисл'     ;

    aL4_080 := XMLAdrI + '/НалНачислПосл' ;
    aL4_050 := XMLAdrI + '/НалДивНеРФПред';   L4_050 := GetDblVal(aL4_050);
    aL4_060 := XMLAdrI + '/НалДивНеРФ'    ;   L4_060 := GetDblVal(aL4_060);
    aL4_070 := XMLAdrI + '/НалНачислПред' ;   L4_070 := GetDblVal(aL4_070);
    // #endregion ИНИЦИЛИЗАЦИЯ ПЕРЕМЕННЫХ

     L4_040 := (L4_010 - L4_020) * L4_030 / 100;  #_SetFldGV(L4_040)
    vL4_040 := GD0(L4_040)+' = ('+GD0(L4_010)+' - '+GD0(L4_020)+') * '+GD0(L4_030)+' /  100';
    #_LogInfo(L4_040)

     L4_080 := L4_040 - L4_050 - L4_060 - L4_070;  #_SetFldGV(L4_080)
    vL4_080 := GD0(L4_080)+' = '+GD0(L4_040)+' - '+GD0(L4_050)+' - '+GD0(L4_060)+' - '+GD0(L4_070);
    #_LogInfo(L4_080)
  }
  //#endregion ЛИСТ 04

  // #region ПРИЛОЖЕНИЕ 2 К ДЕКЛАРАЦИИ

  // #region ОБЪЯВЛЕНИЕ ПЕРЕМЕННЫХ
  var P2_020, P2_021, P2_022, P2_030, P2_010, P2_041, P2_043, P2_052 : double = 0.0;

  var aP2_010, aP2_020, aP2_021, aP2_022, aP2_030, aP2_041, aP2_043, aP2_052
    , mP2_020, mP2_021, mP2_022, mP2_030
    , vP2_020, vP2_021, vP2_022, vP2_030 : string = '';
  // #endregion ОБЪЯВЛЕНИЕ ПЕРЕМЕННЫХ

  // #region MESSAGEs
  mP2_020 := 'Стр. 020 = сумма стр. 041 Прил. №2 (продолжение)';
  mP2_021 := 'Стр. 021 = сумма стр. 043 Прил. №2 (продолжение)';
  mP2_022 := 'Стр. 022 = стр. 020 - стр. 021'                  ;
  mP2_030 := 'Стр. 030 = стр. 022 * стр. 010 / 100'            ;
  // #endregion MESSAGEs

  CountI := XMLMAP.GetNodeCountByName('Файл/Документ/Прибыль/СведДохФЛ');
  for (i := 0; i < CountI; i++)
  {
    // #region ИНИЦИЛИЗАЦИЯ ПЕРЕМЕННЫХ
    XMLAdrI := 'Файл/Документ/Прибыль/СведДохФЛ'+getIter(i);

    aP2_020 := XMLAdrI + '/ДохНалПер/СумДохОбщ';
    aP2_021 := XMLAdrI + '/ДохНалПер/СумВычОбщ';
    aP2_022 := XMLAdrI + '/ДохНалПер/НалБаза'  ;
    aP2_030 := XMLAdrI + '/ДохНалПер/НалИсчисл';
    aP2_010 := XMLAdrI + '/ДохНалПер/Ставка'   ;   P2_010 := GetDblVal(aP2_010);

    P2_020 := P2_021 := 0;

    vP2_020 := vP2_021 := '';
    // #endregion ИНИЦИЛИЗАЦИЯ ПЕРЕМЕННЫХ

    // #region Сбор данных
    CountJ := XMLMAP.GetNodeCountByName(XMLAdrI + '/СпрДохФЛ/СумДох');
    for (j := 0; j < CountJ; j++)
    {
      XMLAdrJ := XMLAdrI + '/СпрДохФЛ/СумДох'+getIter(j);

      if    GetStrNull(XMLAdrJ + '/КодДоход')
         or GetStrNull(XMLAdrJ + '/СумДоход')
      then Continue;

      aP2_041 := XMLAdrJ + '/СумДоход';   P2_041 := GetDblVal(aP2_041);

      P2_020 += P2_041;
      vP2_020 += GD2(P2_041)+'+';

      CountK := XMLMAP.GetNodeCountByName(XMLAdrJ + '/СумВыч');
      for (k := 0; k < CountK; k++)
      {
        XMLAdrK := XMLAdrJ + '/СумВыч'+getIter(k);

        if    GetStrNull(XMLAdrK + '/КодВычет')
           or GetStrNull(XMLAdrK + '/СумВычет')
        then Continue;

        aP2_043 := XMLAdrK + '/СумВычет';   P2_043 := GetDblVal(aP2_043);

        P2_021  +=     P2_043     ;
        vP2_021 += GD2(P2_043)+'+';
      }
    }

    CountJ := XMLMAP.GetNodeCountByName(XMLAdrI + '/НалВычСтанд/СумВыч');
    for (j := 0; j < CountJ; j++)
    {
      XMLAdrJ := XMLAdrI + '/НалВычСтанд/СумВыч'+getIter(j);

      if    GetStrNull(XMLAdrJ + '/КодВычет')
         or GetStrNull(XMLAdrJ + '/СумВычет')
      {
        aP2_052 := XMLAdrJ + '/СумВычет';   P2_052 := GetDblVal(aP2_052);

        P2_021  +=     P2_052     ;
        vP2_021 += GD0(P2_052)+'+';
      }
    }
    // #endregion Сбор данных

    // #region Расчет строк 020, 021, 022, 030
                                      #_SetFldGV(P2_020)
                                      #_SetFldGV(P2_021)
    P2_022 := P2_020 - P2_021      ;  #_SetFldGV(P2_022)
    P2_030 := P2_022 * P2_010 / 100;  #_SetFldGV(P2_030)

    vP2_020 := GD2(P2_020)+' = '+TrimVal(vP2_020)                      ;
    vP2_021 := GD2(P2_021)+' = '+TrimVal(vP2_021)                      ;
    vP2_022 := GD2(P2_022)+' = '+GD2(P2_020)+' - '+GD2(P2_021)         ;
    vP2_030 := GD0(P2_030)+' = '+GD2(P2_022)+' * '+GD0(P2_010)+' / 100';

    #_LogInfo(P2_020)
    #_LogInfo(P2_021)
    #_LogInfo(P2_022)
    #_LogInfo(P2_030)
    // #endregion Расчет строк 020, 021, 022, 030

    // #region Если страница сформирована автоматически то строки 031 и 032 равны значению строки 030
    if (GetStrVal(XMLAdrI + '/Импорт') = '1')
    {
      SetFldGV(XMLAdrI + '/ДохНалПер/НалУдерж', P2_030);
      SetFldGV(XMLAdrI + '/ДохНалПер/НалУплач', P2_030);

      LogInfo(XMLAdrI + '/ДохНалПер/НалУдерж', 'Стр. 031 = стр. 030 (т.к. данная страница сформирована автоматически)', GD0(P2_030)+' = '+vP2_030);
      LogInfo(XMLAdrI + '/ДохНалПер/НалУплач', 'Стр. 032 = стр. 030 (т.к. данная страница сформирована автоматически)', GD0(P2_030)+' = '+vP2_030);
    }
    // #endregion Если страница сформирована автоматически то строки 031 и 032 равны значению строки 030
  }
  // #endregion ПРИЛОЖЕНИЕ 2 К ДЕКЛАРАЦИИ

  // #region ЛИСТ 07
  Var aL7_sumGrf_3, aL7_sumGrf_4, aL7_sumGrf_6, aL7_sumGrf_7 : String = '';
  Var  L7_sumGrf_3,  L7_sumGrf_4,  L7_sumGrf_6,  L7_sumGrf_7 : Double = 0 ;

  Var aL7_itgGrf_3, aL7_itgGrf_4, aL7_itgGrf_6, aL7_itgGrf_7 : String = '';
  Var mL7_itgGrf_3, mL7_itgGrf_4, mL7_itgGrf_6, mL7_itgGrf_7 : String = '';
  Var vL7_itgGrf_3, vL7_itgGrf_4, vL7_itgGrf_6, vL7_itgGrf_7 : String = '';
  Var  L7_itgGrf_3,  L7_itgGrf_4,  L7_itgGrf_6,  L7_itgGrf_7 : Double = 0 ;

  aL7_itgGrf_3 := 'Файл/Документ/Прибыль/ЦелИспИмущ/СтИмущСрдИт'   ; L7_itgGrf_3 := 0;
  aL7_itgGrf_4 := 'Файл/Документ/Прибыль/ЦелИспИмущ/СумИспНазнИт'  ; L7_itgGrf_4 := 0;
  aL7_itgGrf_6 := 'Файл/Документ/Прибыль/ЦелИспИмущ/СумСрокНеИстИт'; L7_itgGrf_6 := 0;
  aL7_itgGrf_7 := 'Файл/Документ/Прибыль/ЦелИспИмущ/СумНеИспИт'    ; L7_itgGrf_7 := 0;

  mL7_itgGrf_3 := 'Итого, гр. 3 = сумма стр. гр. 3';
  mL7_itgGrf_4 := 'Итого, гр. 4 = сумма стр. гр. 4';
  mL7_itgGrf_6 := 'Итого, гр. 6 = сумма стр. гр. 6';
  mL7_itgGrf_7 := 'Итого, гр. 7 = сумма стр. гр. 7';

  flI := False;
  CountI := XMLMAP.GetNodeCountByName('Файл/Документ/Прибыль/ЦелИспИмущ/СвЦелСред07');
  for (i := 0; i < CountI; i++)
  {
    XMLAdrI := 'Файл/Документ/Прибыль/ЦелИспИмущ/СвЦелСред07' + getIter(i);

    if (   GetStrNull(XMLAdrI + '/КодВидПост')
        or GetStrNull(XMLAdrI + '/СтИмущСрд' ) )
    { Continue; }

    flI := True;
    aL7_sumGrf_3 := XMLAdrI + '/СтИмущСрд'   ; L7_sumGrf_3 := GetDblVal(aL7_sumGrf_3);
    aL7_sumGrf_4 := XMLAdrI + '/СумИспНазн'  ; L7_sumGrf_4 := GetDblVal(aL7_sumGrf_4);
    aL7_sumGrf_6 := XMLAdrI + '/СумСрокНеИст'; L7_sumGrf_6 := GetDblVal(aL7_sumGrf_6);
    aL7_sumGrf_7 := XMLAdrI + '/СумНеИсп'    ; L7_sumGrf_7 := GetDblVal(aL7_sumGrf_7);

     L7_itgGrf_3 += L7_sumGrf_3;
     L7_itgGrf_4 += L7_sumGrf_4;
     L7_itgGrf_6 += L7_sumGrf_6;
     L7_itgGrf_7 += L7_sumGrf_7;

    vL7_itgGrf_3 += if(vL7_itgGrf_3 <> '', ' + ', '')+GD0(L7_sumGrf_3);
    vL7_itgGrf_4 += if(vL7_itgGrf_4 <> '', ' + ', '')+GD0(L7_sumGrf_4);
    vL7_itgGrf_6 += if(vL7_itgGrf_6 <> '', ' + ', '')+GD0(L7_sumGrf_6);
    vL7_itgGrf_7 += if(vL7_itgGrf_7 <> '', ' + ', '')+GD0(L7_sumGrf_7);
  }

  If(flI)
  {
    #_SetFldGV(L7_itgGrf_3)
    #_SetFldGV(L7_itgGrf_4)
    #_SetFldGV(L7_itgGrf_6)
    #_SetFldGV(L7_itgGrf_7)

    vL7_itgGrf_3 := GD0(L7_itgGrf_3)+' = '+vL7_itgGrf_3;
    vL7_itgGrf_4 := GD0(L7_itgGrf_4)+' = '+vL7_itgGrf_4;
    vL7_itgGrf_6 := GD0(L7_itgGrf_6)+' = '+vL7_itgGrf_6;
    vL7_itgGrf_7 := GD0(L7_itgGrf_7)+' = '+vL7_itgGrf_7;

    #_LogInfo(L7_itgGrf_3)
    #_LogInfo(L7_itgGrf_4)
    #_LogInfo(L7_itgGrf_6)
    #_LogInfo(L7_itgGrf_7)
  }
  else
  {
    SetNullVal(aL7_itgGrf_3);
    SetNullVal(aL7_itgGrf_4);
    SetNullVal(aL7_itgGrf_6);
    SetNullVal(aL7_itgGrf_7);
  }

  // #endregion Лист 07

  // #region ЛИСТ 08

  // #region ОБЪЯВЛЕНИЕ ПЕРЕМЕННЫХ
  var L8_010_4, L8_020_4, L8_030_4, L8_040_4, L8_050_4 : double;

  var aL8_010_3, aL8_020_3, aL8_030_3, aL8_040_3, aL8_050_3
    , aL8_010_4, aL8_020_4, aL8_030_4, aL8_040_4, aL8_050_4
    , mL8_050_4
    , vL8_050_4 : string = '';
  // #endregion ОБЪЯВЛЕНИЕ ПЕРЕМЕННЫХ

  mL8_050_4 := 'Стр. 050 = значение по модулю(стр. 010 + стр. 020 + стр. 030 + стр. 040)';

  CountI := XMLMAP.GetNodeCountByName('Файл/Документ/Прибыль/ДохРасхКор');
  for (i := 0; i < CountI; i++)
  {
    // #region ИНИЦИЛИЗАЦИЯ ПЕРЕМЕННЫХ
    XMLAdrI := 'Файл/Документ/Прибыль/ДохРасхКор' + getIter(i);

    aL8_010_3 := XMLAdrI + '/КорНБСдел/ДохРеал/Признак'      ;   aL8_010_4 := XMLAdrI + '/КорНБСдел/ДохРеал/Сумма'      ;
    aL8_020_3 := XMLAdrI + '/КорНБСдел/ВнеРеалДох/Признак'   ;   aL8_020_4 := XMLAdrI + '/КорНБСдел/ВнеРеалДох/Сумма'   ;
    aL8_030_3 := XMLAdrI + '/КорНБСдел/РасхУмДохРеал/Признак';   aL8_030_4 := XMLAdrI + '/КорНБСдел/РасхУмДохРеал/Сумма';
    aL8_040_3 := XMLAdrI + '/КорНБСдел/ВнеРеалРасх/Признак'  ;   aL8_040_4 := XMLAdrI + '/КорНБСдел/ВнеРеалРасх/Сумма'  ;
    aL8_050_3 := XMLAdrI + '/КорНБСдел/ИтогоКор/Признак'     ;   aL8_050_4 := XMLAdrI + '/КорНБСдел/ИтогоКор/Сумма'     ;

    L8_010_4 := if (GetStrNull(aL8_010_3), 0, GetDblVal(aL8_010_4));
    L8_020_4 := if (GetStrNull(aL8_020_3), 0, GetDblVal(aL8_020_4));
    L8_030_4 := if (GetStrNull(aL8_030_3), 0, GetDblVal(aL8_030_4));
    L8_040_4 := if (GetStrNull(aL8_040_3), 0, GetDblVal(aL8_040_4));
    // #endregion ИНИЦИЛИЗАЦИЯ ПЕРЕМЕННЫХ

    // #region 050 = значение по модулю(010 + 020 + 030 + 040)
    L8_050_4  := Abs(L8_010_4 + L8_020_4 + L8_030_4 + L8_040_4);  #_SetFldGV(L8_050_4)

    vL8_050_4 := GD0(L8_050_4)+' = '+GD0(L8_010_4)+' + '+GD0(L8_020_4)+' + '+GD0(L8_030_4)+' + '+GD0(L8_040_4);
    #_LogInfo(L8_050_4)
    // #endregion 050 = значение по модулю(010 + 020 + 030 + 040)
  }
  // #endregion ЛИСТ 08

  //----------------------------------------------------------------------------------------------------------

  On_Visable;

  //----------------------------------------------------------------------------------------------------------

  //#region РАЗДЕЛ 1. ПОДРАЗДЕЛ 1.1

  //#region ОБЪЯВЛЕНИЕ ПЕРЕМЕННЫХ
  var R1P11_040_050, R1P11_070_080 : double = 0.0;

  var aR1P11_OKTMO, aR1P11_040_050, aR1P11_070_080
    , mR1P11_040_050, mR1P11_070_080
    , vR1P11_040_050, vR1P11_070_080
    , sR1P11_OKTMO : string = '';

  var fl, flP6, flP5 : boolean = false;
  // #endregion ОБЪЯВЛЕНИЕ ПЕРЕМЕННЫХ

  mR1P11_040_050 := 'Стр. 040/050 = разница стр. 270 и 280 Листа 02';

  CountI := XMLMAP.GetNodeCountByName('Файл/Документ/Прибыль/НалПУ/НалПУАв');
  for (i := 0; i < CountI; i++)
  {
    // #region ИНИЦИЛИЗАЦИЯ ПЕРЕМЕННЫХ
    XMLAdrI := 'Файл/Документ/Прибыль/НалПУ/НалПУАв' + getIter(i);
    fl := false;

    aR1P11_040_050 := XMLAdrI + '/ФедБдж/НалПУ';
    aR1P11_070_080 := XMLAdrI + '/СубБдж/НалПУ';
    aR1P11_OKTMO   := XMLAdrI + '/ОКТМО'       ;   sR1P11_OKTMO := GetStrVal(aR1P11_OKTMO);
    // #endregion ИНИЦИЛИЗАЦИЯ ПЕРЕМЕННЫХ

    // #region 040/050 = 270/280 Листа 02
    R1P11_040_050 := bufL2_270_r280;  #_SetFldGV(R1P11_040_050);

    vR1P11_040_050 := GD0(R1P11_040_050)+' = ('+TrimVal(vbufL2_270_r280)+')';
    // #endregion 040/050 = 270/280 Листа 02

    //     070/080 = 271/281 Листа 02
    // или 070/080 = 100/110 Приложения 6 к Листу 02
    // #region
    R1P11_070_080  := 0;
    mR1P11_070_080 := 'Стр. 070/080 = 0 (нет данных для расчета)';
    vR1P11_070_080 := '0 = 0';

    CountJ := XMLMAP.GetNodeCountByName('Файл/Документ/Прибыль/РасчНал');
    for (j := 0; j < CountJ; j++)
    {
      XMLAdrJ := 'Файл/Документ/Прибыль/РасчНал' + getIter(j);

      if GetFldVis(XMLAdrJ)
      {
        // #region ПРИЛОЖЕНИЕ 6 К ЛИСТУ 02
        flP6 := flP5 := false;

        CountK  := XMLMAP.GetNodeCountByName(XMLAdrJ + '/РасчНалГруп');
        for (k := 0; k < CountK; k++)
        {
          XMLAdrK := XMLAdrJ + '/РасчНалГруп' + getIter(k);

          if GetFldVis(XMLAdrK)
          {
            flP6 := true;

            if (sR1P11_OKTMO = GetStrVal(XMLAdrK + '/ОКТМО'))
            {
              fl := true;
              R1P11_070_080 := GetDblVal(XMLAdrK + '/СумНалП');   SetFldGV(aR1P11_070_080, R1P11_070_080);

              mR1P11_070_080 := 'Стр. 070/080 = стр. 100/110 '+pFH.Func('PN_List2_pril6', j+1, k+1);
              vR1P11_070_080 := GD0(GetDblVal(aR1P11_070_080))+' = ('+GD0(GetDblVal(XMLAdrK + '/СумНалП'))+')';

              break;
            }
          }
        }
        // #endregion ПРИЛОЖЕНИЕ 6 К ЛИСТУ 02

        if not flP6
        {
          // #region ПРИЛОЖЕНИЕ 5 К ЛИСТУ 02
          CountK  := XMLMAP.GetNodeCountByName(XMLAdrJ + '/РаспрНалСубРФ');
          for (k := 0; k < CountK; k++)
          {
            XMLAdrK := XMLAdrJ + '/РаспрНалСубРФ' + getIter(k);

            if GetFldVis(XMLAdrK)
            {
              flP5 := true;
              if (GetStrVal(XMLAdrK + '/ОбязУплНалОП') = '1')
              {
                fl := true;
                R1P11_070_080 := GetDblVal(XMLAdrK + '/СумНалП');   SetFldGV(aR1P11_070_080, R1P11_070_080);

                mR1P11_070_080 := 'Стр. 070/080 = стр. 100/110 ('+pFH.Func('myGetPage_L2p5v1', j+1, k+1)+')';
                vR1P11_070_080 := GD0(GetDblVal(aR1P11_070_080))+' = '+GD0(GetDblVal(XMLAdrK + '/СумНалП'));

                break;
              }
            }
          }
          // #endregion ПРИЛОЖЕНИЕ 5 К ЛИСТУ 02

          if not flP5
          {
            fl := true;

            aL2_271 := XMLAdrJ + '/НалДоплСуб'
            aL2_281 := XMLAdrJ + '/НалУменСуб'

            R1P11_070_080 := GetDblVal(aL2_271) - GetDblVal(aL2_281);   SetFldGV(aR1P11_070_080, R1P11_070_080);

            mR1P11_070_080 := 'Стр. 070/080 = разница стр. 271 и 281 Листа 02';
            vR1P11_070_080 := GD0(GetDblVal(aR1P11_070_080))+' = '+GD0(GetDblVal(aL2_271))+' - '+GD0(GetDblVal(aL2_281));
          }
        }

        if fl
        {
          #_LogInfo(R1P11_070_080)
          break;
        }
      }
    }
    // #endregion

    #_LogInfo(R1P11_040_050)
  }
  //#endregion РАЗДЕЛ 1. ПОДРАЗДЕЛ 1.1


  // #region РАЗДЕЛ 1. ПОДРАЗДЕЛ 1.2

  // #region ОБЪЯВЛЕНИЕ ПЕРЕМЕННЫХ
  var R1P12_120, R1P12_130, R1P12_140, R1P12_220, R1P12_230, R1P12_240 : double = 0.0;

  var aR1P12_120, aR1P12_130, aR1P12_140, aR1P12_220, aR1P12_230, aR1P12_240
    , mR1P12_120, mR1P12_130, mR1P12_140, mR1P12_220, mR1P12_230, mR1P12_240
    , vR1P12_120, vR1P12_130, vR1P12_140, vR1P12_220, vR1P12_230, vR1P12_240 : string = '';
  // #endregion ОБЪЯВЛЕНИЕ ПЕРЕМЕННЫХ

  // #region MESSAGEs
  mR1P12_120 := 'Стр. 120 = сумма стр. 300 Листа 02 / 3'                  ;
  mR1P12_130 := 'Стр. 130 = сумма стр. 300 Листа 02 / 3'                  ;
  mR1P12_220 := 'Стр. 220 = сумма стр. 310 Листа 02 / 3'                  ;
  mR1P12_230 := 'Стр. 230 = сумма стр. 310 Листа 02 / 3'                  ;
  mR1P12_140 := 'Стр. 140 = сумма стр. 300 Листа 02 - стр. 120 - стр. 130';
  mR1P12_240 := 'Стр. 240 = сумма стр. 310 Листа 02 - стр. 220 - стр. 230';
  // #endregion MESSAGEs

  CountI := XMLMAP.GetNodeCountByName('Файл/Документ/Прибыль/НалПУ/НалПУМес');
  for (i := 0; i < CountI; i++)
  {
    // #region ИНИЦИЛИЗАЦИЯ ПЕРЕМЕННЫХ
    XMLAdrI := 'Файл/Документ/Прибыль/НалПУ/НалПУМес' + getIter(i);

    aR1P12_120 := XMLAdrI + '/ФедБдж/АвПлат1';
    aR1P12_130 := XMLAdrI + '/ФедБдж/АвПлат2';
    aR1P12_140 := XMLAdrI + '/ФедБдж/АвПлат3';
    aR1P12_220 := XMLAdrI + '/СубБдж/АвПлат1';
    aR1P12_230 := XMLAdrI + '/СубБдж/АвПлат2';
    aR1P12_240 := XMLAdrI + '/СубБдж/АвПлат3';
    // #endregion ИНИЦИЛИЗАЦИЯ ПЕРЕМЕННЫХ

    // #region Расчет строк 120, 130, 140, 220, 230, 240
    R1P12_120 := bufL2_300 / 3                    ;  #_SetFldGV(R1P12_120)
    R1P12_130 := bufL2_300 / 3                    ;  #_SetFldGV(R1P12_130)
    R1P12_140 := bufL2_300 - R1P12_120 - R1P12_130;  #_SetFldGV(R1P12_140)
    R1P12_220 := bufL2_310 / 3                    ;  #_SetFldGV(R1P12_220)
    R1P12_230 := bufL2_310 / 3                    ;  #_SetFldGV(R1P12_230)
    R1P12_240 := bufL2_310 - R1P12_220 - R1P12_230;  #_SetFldGV(R1P12_240)

    vR1P12_120 := GD0(R1P12_120)+' = ('+TrimVal(vbufL2_300)+') / 3'                                   ;
    vR1P12_130 := GD0(R1P12_130)+' = ('+TrimVal(vbufL2_300)+') / 3'                                   ;
    vR1P12_140 := GD0(R1P12_140)+' = ('+TrimVal(vbufL2_300)+') - '+GD0(R1P12_120)+' - '+GD0(R1P12_130);
    vR1P12_220 := GD0(R1P12_220)+' = ('+TrimVal(vbufL2_310)+') / 3'                                   ;
    vR1P12_230 := GD0(R1P12_230)+' = ('+TrimVal(vbufL2_310)+') / 3'                                   ;
    vR1P12_240 := GD0(R1P12_240)+' = ('+TrimVal(vbufL2_310)+') - '+GD0(R1P12_220)+' - '+GD0(R1P12_230);

    #_LogInfo(R1P12_120)
    #_LogInfo(R1P12_130)
    #_LogInfo(R1P12_220)
    #_LogInfo(R1P12_230)
    #_LogInfo(R1P12_140)
    #_LogInfo(R1P12_240)
    // #endregion Расчет строк 120, 130, 140, 220, 230, 240
  }
  // #endregion РАЗДЕЛ 1. ПОДРАЗДЕЛ 1.2
@end.
//#endregion On_Recalc ДЕЙСТВИЯ ВЫПОЛНЯЕМЫЕ ПРИ РАСЧЁТЕ ПОЛЕЙ
//************************************************************************************************************


//============================================================================================================
//#region On_ExportXML ДЕЙСТВИЯ ВЫПОЛНЯЕМЫЕ ПРИ ЭКСПОРТЕ В XML
//------------------------------------------------------------------------------------------------------------
@Script On_ExportXML : boolean;
@begin
  SetFldVal('Файл/ИдФайл', Replace(_IdFail_, '.xml', ''));

  if (not XMLMap.ExpToXml(_XmlFileName_)) {
    Message('On_ExportXML: '+ XMLMap.GetStLastError, cancelButton+Warning);
    Exit;
  }

  Message('Выгружен в файл ' + _XmlFileName_);
@end.
//#endregion On_ExportXML ДЕЙСТВИЯ ВЫПОЛНЯЕМЫЕ ПРИ ЭКСПОРТЕ В XML
//************************************************************************************************************
