//------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Галактика 9.10 - модуль "Управление бюджетом"
// Визуальный интерфейс : "Экспорт бюджетов в DBF" (МТГ)
//------------------------------------------------------------------------------

Const
  Var_sDBFFileName                = 'DFBFN';

  Var_wRegMode                    = 'RegM';
  Var_wFltMode                    = 'FltM';
  Var_wFldMode                    = 'FldM';
                                
  Tbl_TblProfile                  = 'TTPF';

  Tbl_TblCO                       = 'TTCO';
  Tbl_TblPerBud                   = 'TTPB';
  Tbl_TblSubPerBud                = 'TSPB';
                                
  Tbl_TblBudStage                 = 'TTBS';
  Tbl_TblStBud                    = 'TTSB';
  Tbl_TblTForm                    = 'TTTF';
  Tbl_TblKAU                      = 'TAN';
                                
  TblVar__Tbl_TblProfile_Name     = 'PFNM';

  TblVar__TblCO_cRec              = 'COcR';
                                
  TblVar__TblPerBud_cRec          = 'PBcR';

  TblVar__TblBudStage_cBudVariant = 'TBVr';
  TblVar__TblBudStage_Stage       = 'TBSt';
                                 
  TblVar__TblStBud_cRec           = 'SBcR';
                                 
  TblVar__TblTForm_cRec           = 'TFcR';
                                 
  TblVar__TblKAU_KAU              = 'TANK';
                                 
  TblVar__TblSubPerBud_cMain      = 'SPcM';
  TblVar__TblSubPerBud_NRec       = 'SPNR';
  TblVar__TblSubPerBud_cNode      = 'SPNd';
  TblVar__TblSubPerBud_Code       = 'SPCd';
  TblVar__TblSubPerBud_LevelCode  = 'SPLC';
  TblVar__TblSubPerBud_isLeaf     = 'SPLf';
  TblVar__TblSubPerBud_wLevel     = 'SPLl';
  TblVar__TblSubPerBud_wDelMode   = 'SPDM';

end;


//------------------------------------------------------------------------------
// МАКРОСЫ
//------------------------------------------------------------------------------
#include FpITune.Mac   // Макросы для чтения настроек интерфейсов

//------------------------------------------------------------------------------
function GetTblCO(_cTune : comp): boolean;
{
  GetTblCO := False;

  delete all TblCO;
  if (not pObjITune.GetTblBoxRec(_cTune, Tbl_TblCO) )
  { Exit; }
  StartNewVisual(vtDownVisual, vfTimer+vfScreenBottom
  , 'Загрузка настроек...', RecordsInTable(#BoxRec) );
  while GetFirst FastFirstRow BoxRec = tsOk
  {
    NextVisual;
    do
    {
      if (BoxRec.cRec = 0)  { Break; }
      var cSavedRec : comp; cSavedRec := BoxRec.cRec;
      ClearBuffer(#TblCO);

      #GetTblFld(Comp,Tbl_TblCO,cSavedRec,TblVar__TblCO_cRec,TblCO.cRec)

      TblCO.Name := pExtFpCO.GetName(TblCO.cRec);
      TblCO.Code := pExtFpCO.GetCode(TblCO.cRec);

      var tsRes : word;  tsRes := insert current TblCO;
      if (tsRes <> tsOk)
      { FpLog('GetTblCO : (insert current TblCO <> tsOk)'+string(tsRes)); }

    }
    while False;

    var cBoxRec : comp; cBoxRec := BoxRec.cRec;
    delete all BoxRec where ((cBoxRec == BoxRec.cRec));
  } //while GetFirst FastFirstRow BoxRec
  StopVisual('',0);
  ReScanPanel(#TblCO);

  GetTblCO := True;
}
//------------------------------------------------------------------------------
function GetTblPerBud(_cTune : comp): boolean;
{
  GetTblPerBud := False;
  delete all TblPerBud;
  if (not pObjITune.GetTblBoxRec(_cTune, Tbl_TblPerBud) )
  { Exit; }
  StartNewVisual(vtDownVisual, vfTimer+vfScreenBottom
  , 'Загрузка настроек...', RecordsInTable(#BoxRec) );
  while GetFirst FastFirstRow BoxRec = tsOk
  {
    NextVisual;
    do
    {
      if (BoxRec.cRec = 0)  { Break; }
      var cSavedRec : comp; cSavedRec := BoxRec.cRec;
      ClearBuffer(#TblPerBud);

      #GetTblFld(Comp,Tbl_TblPerBud,cSavedRec,TblVar__TblPerBud_cRec,TblPerBud.cRec)
      if (not pExtFpPeriod.IsCurTPer(TblPerBud.cRec) )
      { Continue; }

      if not InsLoadedPer(TblPerBud.cRec)
      { FpLog('GetTblPerBud : (insert current TblPerBud <> tsOk)'); }

    }
    while False;

    var cBoxRec : comp; cBoxRec := BoxRec.cRec;
    delete all BoxRec where ((cBoxRec == BoxRec.cRec));
  } //while GetFirst FastFirstRow BoxRec
  StopVisual('',0);
  if GetFirst TblPerBud = tsOk {}
  ReScanPanel(#TblPerBud);

  GetTblPerBud := True;
}
//------------------------------------------------------------------------------
function GetTblSubPerBud(_cTune : comp): boolean;
{
  GetTblSubPerBud := False;

  delete all LoopTblSubPerBud;
  if (not pObjITune.GetTblBoxRec(_cTune, Tbl_TblSubPerBud) )
  { Exit; }
  StartNewVisual(vtDownVisual, vfTimer+vfScreenBottom
  , 'Загрузка настроек...', RecordsInTable(#BoxRec) );
  while GetFirst FastFirstRow BoxRec = tsOk
  {
    NextVisual;
    do
    {
      if (BoxRec.cRec = 0)  { Break; }
      var cSavedRec : comp; cSavedRec := BoxRec.cRec;
      ClearBuffer(#LoopTblSubPerBud);

      #GetTblFld(Comp,Tbl_TblSubPerBud,cSavedRec,TblVar__TblSubPerBud_cMain,LoopTblSubPerBud.cMain)
      #GetTblFld(Comp,Tbl_TblSubPerBud,cSavedRec,TblVar__TblSubPerBud_NRec,LoopTblSubPerBud.NRec)
      #GetTblFld(Comp,Tbl_TblSubPerBud,cSavedRec,TblVar__TblSubPerBud_cNode,LoopTblSubPerBud.cNode)
      #GetTblFld(String,Tbl_TblSubPerBud,cSavedRec,TblVar__TblSubPerBud_Code,LoopTblSubPerBud.Code)
      #GetTblFld(String,Tbl_TblSubPerBud,cSavedRec,TblVar__TblSubPerBud_LevelCode,LoopTblSubPerBud.LevelCode)
      #GetTblFld(boolean,Tbl_TblSubPerBud,cSavedRec,TblVar__TblSubPerBud_isLeaf,LoopTblSubPerBud.isLeaf)
      #GetTblFld(word,Tbl_TblSubPerBud,cSavedRec,TblVar__TblSubPerBud_wLevel,LoopTblSubPerBud.wLevel)
      #GetTblFld(word,Tbl_TblSubPerBud,cSavedRec,TblVar__TblSubPerBud_wDelMode,LoopTblSubPerBud.wDelMode)

      LoopTblSubPerBud.Name := pExtFpPeriod.GetName(LoopTblSubPerBud.NRec);

      if (not pExtFpPeriod.IsCurTPer(LoopTblSubPerBud.NRec) )
      { Continue; }

      var tsRes : word;  tsRes := insert current LoopTblSubPerBud;
      if (tsRes <> tsOk)
      { FpLog('GetLoopTblSubPerBud : (insert current LoopTblSubPerBud <> tsOk)'+string(tsRes)); }

    }
    while False;

    var cBoxRec : comp; cBoxRec := BoxRec.cRec;
    delete all BoxRec where ((cBoxRec == BoxRec.cRec));
  } //while GetFirst FastFirstRow BoxRec
  StopVisual('',0);
  cParent := 0;
  if GetFirst TblSubPerBud = tsOk
  {
    TreeJumpToRecord(trSubPer, TblSubPerBud.Nrec);
  }
  ReScanPanel(#TblSubPerBud);

  GetTblSubPerBud := True;
}
              
//------------------------------------------------------------------------------
function GetTblBudStage(_cTune : comp): boolean;
{
  GetTblBudStage := False;
                    
  delete all TblBudStage;
  if (not pObjITune.GetTblBoxRec(_cTune, Tbl_TblBudStage) )
  { Exit; }
  StartNewVisual(vtDownVisual, vfTimer+vfScreenBottom
  , 'Загрузка настроек...', RecordsInTable(#BoxRec) );
  while GetFirst FastFirstRow BoxRec = tsOk
  {
    NextVisual;
    do
    {
      if (BoxRec.cRec = 0)  { Break; }
      var cSavedRec : comp; cSavedRec := BoxRec.cRec;
      ClearBuffer(#TblStBud);

      #GetTblFld(Comp,   Tbl_TblBudStage, cSavedRec, TblVar__TblBudStage_cBudVariant, TblBudStage.cBudVariant)
      #GetTblFld(String, Tbl_TblBudStage, cSavedRec, TblVar__TblBudStage_Stage,       TblBudStage.Stage)

      var tsRes : word;  tsRes := insert current TblBudStage;
      if (tsRes <> tsOk)
      { FpLog('GetTblBudStage : (insert current TblBudStage <> tsOk)'+string(tsRes)); }

    }
    while False;

    var cBoxRec : comp; cBoxRec := BoxRec.cRec;
    delete all BoxRec where ((cBoxRec == BoxRec.cRec));
  } //while GetFirst FastFirstRow BoxRec
  StopVisual('',0);
  ReScanPanel(#TblBudStage);

  GetTblBudStage := True;
}

//------------------------------------------------------------------------------
function GetTblStBud(_cTune : comp) : boolean;
{
  GetTblStBud := False;

  delete all TblStBud;
  if (not pObjITune.GetTblBoxRec(_cTune, Tbl_TblStBud) )
  { Exit; }
  StartNewVisual(vtDownVisual, vfTimer+vfScreenBottom
  , 'Загрузка настроек...', RecordsInTable(#BoxRec) );
  while GetFirst FastFirstRow BoxRec = tsOk
  {
    NextVisual;
    do
    {
      if (BoxRec.cRec = 0)  { Break; }
      var cSavedRec : comp; cSavedRec := BoxRec.cRec;
      ClearBuffer(#TblStBud);

      #GetTblFld(Comp,  Tbl_TblStBud,cSavedRec,TblVar__TblStBud_cRec,TblStBud.cRec)

      TblStBud.Name := pExtFpStBud.GetName(TblStBud.cRec);
      if GetFirst FastFirstRow FpStBud where ((TblStBud.cRec == FpStBud.NRec)) = tsOk
      {
      TblStBud.Code := FpStBud.Code;
      }

      var tsRes : word;   tsRes := insert current TblStBud;
      if (tsRes <> tsOk)
      { FpLog('GetTblStBud : (insert current TblStBud <> tsOk)'+string(tsRes)); }

    }
    while False;

    var cBoxRec : comp; cBoxRec := BoxRec.cRec;
    delete all BoxRec where ((cBoxRec == BoxRec.cRec));
  } //while GetFirst FastFirstRow BoxRec
  StopVisual('',0);
  ReScanPanel(#TblStBud);

  GetTblStBud := True;
}
//------------------------------------------------------------------------------
function GetTblTForm(_cTune : comp): boolean;
{
  GetTblTForm := False;

  delete all TblTForm;
  if (not pObjITune.GetTblBoxRec(_cTune, Tbl_TblTForm) )
  { Exit; }
  StartNewVisual(vtDownVisual, vfTimer+vfScreenBottom
  , 'Загрузка настроек...', RecordsInTable(#BoxRec) );
  while GetFirst FastFirstRow BoxRec = tsOk
  {
    NextVisual;
    do
    {
      if (BoxRec.cRec = 0)  { Break; }
      var cSavedRec : comp; cSavedRec := BoxRec.cRec;
      ClearBuffer(#TblStBud);

      #GetTblFld(Comp,Tbl_TblTForm,cSavedRec,TblVar__TblTForm_cRec,TblTForm.cRec)

      TblTForm.Name := pExtTForm.GetName(TblTForm.cRec);
      if GetFirst FastFirstRow FpTForm where ((TblTForm.cRec == FpTForm.NRec)) = tsOk
      {
      TblTForm.Code := FpTForm.Code;
      }

      var tsRes : word;  tsRes := insert current TblTForm;
      if (tsRes <> tsOk)
      { FpLog('GetTblTForm : (insert current TblTForm <> tsOk)'+string(tsRes)); }

    }
    while False;

    var cBoxRec : comp; cBoxRec := BoxRec.cRec;
    delete all BoxRec where ((cBoxRec == BoxRec.cRec));
  } //while GetFirst FastFirstRow BoxRec
  StopVisual('',0);
  ReScanPanel(#TblTForm);

  GetTblTForm := True;
}

//------------------------------------------------------------------------------
function GetTblKAU(_cTune : comp): boolean;
{
  GetTblKAU := False;
                    
  delete all TblKAU;
  if (not pObjITune.GetTblBoxRec(_cTune, Tbl_TblKAU) )
  { Exit; }
  StartNewVisual(vtDownVisual, vfTimer+vfScreenBottom
  , 'Загрузка настроек...', RecordsInTable(#BoxRec) );
  while GetFirst FastFirstRow BoxRec = tsOk
  {
    NextVisual;
    do
    {
      if (BoxRec.cRec = 0)  { Break; }
      var cSavedRec : comp; cSavedRec := BoxRec.cRec;
      ClearBuffer(#TblStBud);

      #GetTblFld(Word, Tbl_TblKAU, cSavedRec, TblVar__TblKAU_KAU, TblKAU.KodGrKau)

      var tsRes : word;  tsRes := insert current TblKAU;
      if (tsRes <> tsOk)
      { FpLog('GetTblKAU : (insert current TblKAU <> tsOk)'+string(tsRes)); }

    }
    while False;

    var cBoxRec : comp; cBoxRec := BoxRec.cRec;
    delete all BoxRec where ((cBoxRec == BoxRec.cRec));
  } //while GetFirst FastFirstRow BoxRec
  StopVisual('',0);
  ReScanPanel(#TblKAU);

  GetTblKAU := True;
}

//------------------------------------------------------------------------------
function SetTblCO(_cTune : comp): boolean;
{
  SetTblCO := False;
  PushPos(#TblCO);
  pObjITune.DelTbl(_cTune, Tbl_TblCO);
  _Loop TblCO
  {
      var cSavedRec : comp; cSavedRec := TblCO.cRec;
      #SetTblFld(Comp,Tbl_TblCO,cSavedRec,TblVar__TblCO_cRec, TblCO.cRec)
  }
  PopPos(#TblCO);
  SetTblCO := True;
}
//------------------------------------------------------------------------------
function SetTblPerBud(_cTune : comp): boolean;
{
  SetTblPerBud := False;
  PushPos(#TblPerBud);
  pObjITune.DelTbl(_cTune, Tbl_TblPerBud);
  _Loop TblPerBud
  {
      var cSavedRec : comp; cSavedRec := TblPerBud.cRec;
      #SetTblFld(Comp,Tbl_TblPerBud,cSavedRec,TblVar__TblPerBud_cRec, TblPerBud.cRec)
  }
  PopPos(#TblPerBud);
  SetTblPerBud := True;
}
//------------------------------------------------------------------------------
function SetTblSubPerBud(_cTune : comp): boolean;
{
  SetTblSubPerBud := False;
  PushPos(#LoopTblSubPerBud);
  pObjITune.DelTbl(_cTune, Tbl_TblSubPerBud);
  var cSavedRec : comp; cSavedRec := 5;
  _Loop LoopTblSubPerBud
  {
      //var cSavedRec : comp; cSavedRec := LoopTblSubPerBud.NRec;
      #SetTblFld(Comp,Tbl_TblSubPerBud,cSavedRec,TblVar__TblSubPerBud_cMain,LoopTblSubPerBud.cMain)
      #SetTblFld(Comp,Tbl_TblSubPerBud,cSavedRec,TblVar__TblSubPerBud_NRec,LoopTblSubPerBud.NRec)
      #SetTblFld(Comp,Tbl_TblSubPerBud,cSavedRec,TblVar__TblSubPerBud_cNode,LoopTblSubPerBud.cNode)
      #SetTblFld(String,Tbl_TblSubPerBud,cSavedRec,TblVar__TblSubPerBud_Code,LoopTblSubPerBud.Code)
      #SetTblFld(String,Tbl_TblSubPerBud,cSavedRec,TblVar__TblSubPerBud_LevelCode,LoopTblSubPerBud.LevelCode)
      #SetTblFld(boolean,Tbl_TblSubPerBud,cSavedRec,TblVar__TblSubPerBud_isLeaf,LoopTblSubPerBud.isLeaf)
      #SetTblFld(word,Tbl_TblSubPerBud,cSavedRec,TblVar__TblSubPerBud_wLevel,LoopTblSubPerBud.wLevel)
      #SetTblFld(word,Tbl_TblSubPerBud,cSavedRec,TblVar__TblSubPerBud_wDelMode,LoopTblSubPerBud.wDelMode)
      cSavedRec := cSavedRec+1;

  }
  PopPos(#LoopTblSubPerBud);
  SetTblSubPerBud := True;
}

//------------------------------------------------------------------------------
function SetTblBudStage(_cTune : comp): boolean;
{
  SetTblBudStage := False;
  PushPos(#TblBudStage);
  pObjITune.DelTbl(_cTune, Tbl_TblBudStage);
  var cSavedRec : comp; cSavedRec := 0;
  _Loop TblBudStage
  {
      cSavedRec := cSavedRec + 1;
      #SetTblFld(Comp,   Tbl_TblBudStage, cSavedRec, TblVar__TblBudStage_cBudVariant, TblBudStage.cBudVariant)
      #SetTblFld(String, Tbl_TblBudStage, cSavedRec, TblVar__TblBudStage_Stage,       TblBudStage.Stage)
  }
  PopPos(#TblBudStage);
  SetTblBudStage := True;
}

//------------------------------------------------------------------------------
function SetTblStBud(_cTune : comp): boolean;
{
  SetTblStBud := False;
  PushPos(#TblStBud);
  pObjITune.DelTbl(_cTune, Tbl_TblStBud);
  _Loop TblStBud
  {
      var cSavedRec : comp; cSavedRec := TblStBud.cRec;
      #SetTblFld(Comp,Tbl_TblStBud,cSavedRec,TblVar__TblStBud_cRec, TblStBud.cRec)
  }
  PopPos(#TblStBud);
  SetTblStBud := True;
}
//------------------------------------------------------------------------------
function SetTblTForm(_cTune : comp): boolean;
{
  SetTblTForm := False;
  PushPos(#TblTForm);
  pObjITune.DelTbl(_cTune, Tbl_TblTForm);
  _Loop TblTForm
  {
      var cSavedRec : comp; cSavedRec := TblTForm.cRec;
      #SetTblFld(Comp,Tbl_TblTForm,cSavedRec,TblVar__TblTForm_cRec, TblTForm.cRec)
  }
  PopPos(#TblTForm);
  SetTblTForm := True;
}

//------------------------------------------------------------------------------
function SetTblKAU(_cTune : comp): boolean;
{
  SetTblKAU := False;
  PushPos(#TblKAU);
  pObjITune.DelTbl(_cTune, Tbl_TblKAU);
  _Loop TblKAU
  {
      var cSavedRec : comp; cSavedRec := TblKAU.KodGrKau;
      #SetTblFld(Word, Tbl_TblKAU, cSavedRec, TblVar__TblKAU_KAU, TblKAU.KodGrKau)
  }
  PopPos(#TblKAU);
  SetTblKAU := True;
}

//------------------------------------------------------------------------------
function Read_ITune(_cTune : comp) : boolean;
{
  Read_ITune := False;

  StartNewVisual(vtDownVisual, vfTimer+vfScreenBottom
  , 'Загрузка настроек...', 1 );
  pObjITune.InitEnt(#(_CurInt)Entity, _cTune);

  GetTblCO(_cTune);
  GetTblPerBud(_cTune);
  GetTblSubPerBud(_cTune);

  GetTblBudStage(_cTune);

  GetTblStBud(_cTune);
  GetTblTForm(_cTune);
  GetTblKAU(_cTune);

  #GetFld(String, Var_sDBFFileName  , sDBFFileName  )

  #GetFld(Word,   Var_wRegMode      , wRegMode      )
  #GetFld(Word,   Var_wFltMode      , wFltMode      )
  #GetFld(Word,   Var_wFldMode      , wFldMode      )

  Set sDBFFileName := sDBFFileName;
  Set wRegMode     := wRegMode    ;
  Set wFltMode     := wFltMode    ;
  Set wFldMode     := wFldMode    ;

  pObjITune.DoneEnt(#(_CurInt)Entity, _cTune);
  StopVisual('',0);
  ReScanPanel(#EmptyTable);

  Read_ITune := True;
}

//------------------------------------------------------------------------------
function Save_ITune(_cTune : comp) : boolean;
{
  Save_ITune := False;

  StartNewVisual(vtDownVisual, vfTimer+vfScreenBottom
  , 'Сохранение настроек...', 1 );
  pObjITune.InitEnt(#(_CurInt)Entity, _cTune);

  #SetFld(String, Var_sDBFFileName  , sDBFFileName  )

  #SetFld(Word,   Var_wRegMode      , wRegMode      )
  #SetFld(Word,   Var_wFltMode      , wFltMode      )
  #SetFld(Word,   Var_wFldMode      , wFldMode      )

  SetTblCO(_cTune);
  SetTblPerBud(_cTune);
  SetTblSubPerBud(_cTune);

  SetTblBudStage(_cTune);

  SetTblStBud(_cTune);
  SetTblTForm(_cTune);
  SetTblKAU(_cTune);

  pObjITune.DoneEnt(#(_CurInt)Entity, _cTune);
  StopVisual('',0);

  Save_ITune := True;
}

//------------------------------------------------------------------------------
function Del_ITune(_cTune : comp) : boolean;
{ Del_ITune := pObjITune.DelEnt(#(_CurInt)Entity, _cTune);
}


//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
function Read_ListProfile : boolean;
{
  Read_ListProfile := False;
  var _cTune : comp;  _cTune := 0;

  delete all TblProfile;

  ClearBuffer(#TblProfile);
  TblProfile.ID   := 0;
  TblProfile.Name := 'По умолчанию';
  insert current TblProfile;

  pObjITune.InitEnt(#(_CurInt)Entity, _cTune);
  if (not pObjITune.GetTblBoxRec(_cTune, Tbl_TblProfile) )
  { Exit; }
  while GetFirst FastFirstRow BoxRec = tsOk
  {
    do
    {
      if (BoxRec.cRec = 0)  { Break; }
      var cSavedRec : comp; cSavedRec := BoxRec.cRec;
      ClearBuffer(#TblProfile);
      TblProfile.ID := word(cSavedRec);

      #GetTblFld(String,Tbl_TblProfile,cSavedRec,TblVar__Tbl_TblProfile_Name,TblProfile.Name)

      var tsRes : word;  tsRes := insert current TblProfile;
      if (tsRes <> tsOk)
      { FpLog('GetTblCO : (insert current TblProfile <> tsOk)'+string(tsRes)); }

    }
    while False;

    var cBoxRec : comp; cBoxRec := BoxRec.cRec;
    delete all BoxRec where ((cBoxRec == BoxRec.cRec));
  } //while GetFirst FastFirstRow BoxRec
  pObjITune.DoneEnt(#(_CurInt)Entity, _cTune);

  Read_ListProfile := True;
}
//------------------------------------------------------------------------------
function Save_ListProfile : boolean;
{
  Save_ListProfile := False;
  var _cTune : comp;  _cTune := 0;

  pObjITune.InitEnt(#(_CurInt)Entity, _cTune);
  PushPos(#TblProfile);
  pObjITune.DelTbl(_cTune, Tbl_TblProfile);
  _Loop TblProfile
  {
      if (TblProfile.ID = 0)
      { Continue; }

      var cSavedRec : comp; cSavedRec := TblProfile.ID;
      #SetTblFld(String,Tbl_TblProfile,cSavedRec,TblVar__Tbl_TblProfile_Name,TblProfile.Name)
  }
  PopPos(#TblProfile);
  pObjITune.DoneEnt(#(_CurInt)Entity, _cTune);

  Save_ListProfile := True;
}

