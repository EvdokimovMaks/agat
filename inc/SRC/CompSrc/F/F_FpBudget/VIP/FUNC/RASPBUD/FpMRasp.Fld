//------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Галактика 9.10 - модуль "Управление бюджетом"
// Визуальный интерфейс : "Распределение по ЦО"
//------------------------------------------------------------------------------

Const
  Var_wRaspRunMode     = 'RunM';
  Var_cCurBudVariant   = 'BVar';
  Var_sCurStage        = 'Stg' ;

  Tbl_Markers          = 'MMR'  ;
  TblVar__Markers_NRec = 'MMRNR';
end;

//------------------------------------------------------------------------------
// Константы идентификаторов параметров типа "Реквизиты копии"
// FpStageParam.Inc - не подключаем т.к. перекрываются константы
//------------------------------------------------------------------------------
Const
  VAR_cCurBudVariantMp     = 'CBVt';
  Var_sCurStageMp          = 'CuSt';
end;


//------------------------------------------------------------------------------
// МАКРОСЫ
//------------------------------------------------------------------------------
#include FpITune.Mac   // Макросы для чтения настроек интерфейсов
#include FpMRasp0.Vpp

//------------------------------------------------------------------------------
// GetTBL
//------------------------------------------------------------------------------
function MyGetTblMarkers(_cTune : comp) : boolean;
{
  MyGetTblMarkers := False;

  ClearMarker(Markers);
  if (not pObjITune.GetTblBoxRec(_cTune, Tbl_Markers) )
  { MyGetTblMarkers := True; Exit; }
  var Npp : integer;  Npp := 0;
  while GetFirst FastFirstRow BoxRec ordered by cRec = tsOk
  {
    do
    {
      if (BoxRec.cRec = 0)  { Break; }

      var cRec : comp;  cRec := 0;
      #GetTblFld(Comp,Tbl_Markers,BoxRec.cRec,TblVar__Markers_NRec, cRec)
      InsertMarker(Markers, cRec);
    }
    while False;

    var cBoxRec : comp;  cBoxRec := BoxRec.cRec;
    delete all BoxRec where ((cBoxRec == BoxRec.cRec));
  }

  MyGetTblMarkers := True;
}
//------------------------------------------------------------------------------
// SetTBL
//------------------------------------------------------------------------------
function MySetTBLMarkers(_cTune : comp) : boolean;
{
  MySetTBLMarkers := False;
  pObjITune.DelTbl(_cTune, Tbl_Markers);
  var i : LongInt;
  var cRec : comp = 0;
  for (i := 0; i < GetMarkerCount(Markers); i++)
  {
    if (not GetMarker(Markers, i, cRec) )
    { Continue; }
    #SetTblFld(Comp,Tbl_Markers,comp(i + 2),TblVar__Markers_NRec,cRec)
  } // for
  MySetTBLMarkers := True;
}

//------------------------------------------------------------------------------
function MyRead_ITune(_Entity : word; _cTune : comp) : boolean;
{
  MyRead_ITune := False;

  // признак "загружены настройки из пакета заданий"
  if ( not isLoadBatchITune )
  {
    if _cTune = 0
    {
      if pObjFpProfileManager.UpdateZerroIDToOneID
        Set CurProfileID := 1;
      _Entity := #(_CurInt)Entity;
    }
  }

  pObjITune.InitEnt(_Entity, _cTune);

  // загрузка полей интерфейса
  #GetFld(Word,   Var_wRaspRunMode  , wRaspRunMode   )
  #GetFld(Comp,   Var_cCurBudVariant, cCurBudVariant )
  #GetFld(String, Var_sCurStage     , sCurStage      )

  if GetFirst FpTForm <> tsOk
    cBaseTForm := 0;
  Set cBaseTForm := cBaseTForm;

  // загрузка временных таблиц интерфейса
  MyGetTblMarkers(_cTune);

  pObjITune.DoneEnt(_Entity, _cTune);

  SetBudVariant(cCurBudVariant);
  SetBudStage(sCurStage);
  ShowMyHeader;
  MyRead_ITune := True;
}
//------------------------------------------------------------------------------
function Read_ITune(_cTune : comp) : boolean;
{
  isLoadBatchITune := True;
  Read_ITune := MyRead_ITune(#(_CurInt)Entity, _cTune);
}

//------------------------------------------------------------------------------
function MySave_ITune(_Entity : word; _cTune : comp) : boolean;
{
  MySave_ITune := False;

  // были загружены настройки из пакета заданий
  if ( not isLoadBatchITune )
  {
  }

  pObjITune.InitEnt(_Entity, _cTune);

  // сохранение полей интерфейса
  #SetFld(Word,   Var_wRaspRunMode  , wRaspRunMode   )
  #SetFld(Comp,   Var_cCurBudVariant, GetBudVariant  )
  #SetFld(String, Var_sCurStage     , GetStage       )

  // сохранение временных таблиц интерфейса
  MySetTBLMarkers(_cTune);

  pObjITune.DoneEnt(_Entity, _cTune);

  MySave_ITune := True;
}
//------------------------------------------------------------------------------
function Save_ITune(_cTune : comp) : boolean;
{ isLoadBatchITune := True;
  Save_ITune := MySave_ITune(#(_CurInt)Entity, _cTune)
}

//------------------------------------------------------------------------------
function MyDel_ITune(_Entity : word; _cTune : comp) : boolean;
{ MyDel_ITune := pObjITune.DelEnt(_Entity, _cTune);
}

//------------------------------------------------------------------------------
function Del_ITune(_cTune : comp) : boolean;
{ Del_ITune := MyDel_ITune(#(_CurInt)Entity, _cTune);
}

//------------------------------------------------------------------------------
// Загрузка из менеджера реквизитов копии
//------------------------------------------------------------------------------
function Read_ITune1Stage(_cTune : comp; _wEntity : word) : boolean;
{
  Read_ITune1Stage := False;

  pObjITune.InitEnt(_wEntity, _cTune);

  #GetFld(Comp,   Var_cCurBudVariantMp, cCurBudVariant )
  #GetFld(String, Var_sCurStageMp     , sCurStage      )

  SetBudVariant(cCurBudVariant);
  SetBudStage(sCurStage);

  pObjITune.DoneEnt(_wEntity, _cTune);

  Read_ITune1Stage := True;
}
