//------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Галактика 9.10 - модуль "Управление бюджетом"
// Визуальный интерфейс : "Ручное редактирование бюджета"
//------------------------------------------------------------------------------

Const
  Var_cBudCO               = 'cBCO';
  Var_cBudPer              = 'cBPe';
  Var_cBudVariant          = 'cBVa';
  Var_sBudStage            = 'sBSt';
  Var_wBudKodReg           = 'wBKR';
  Var_cBudTForm            = 'cBTF';
end;

//------------------------------------------------------------------------------
#include FpCOParam.Inc     // Константы идентификаторов параметров типа "ЦО"
#include FpPerParam.Inc    // Константы идентификаторов параметров типа "Периоды"
#include FpStageParam.Inc  // Константы идентификаторов параметров типа "Реквизиты копии"
#include FpKodRegParam.Inc // Константы идентификаторов параметров типа "Регистр учета"
#include FpTFormParam.Inc  // Константы идентификаторов параметров типа "Типовые формы"
#include FpITune.Mac       // Макросы для чтения настроек интерфейсов
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
function MyRead_ITune(_Entity : word; _cTune : comp) : boolean;
{
  MyRead_ITune := False;
  // признак "загружены настройки из пакета заданий"
  if ( not isLoadBatchITune )
  {
    if _cTune = 0
    {
      if pObjFpProfileManager.UpdateZerroIDToOneID
        Set CurProfileID := 1;
      _Entity := #(_CurInt)Entity;
    }
  }

  pObjITune.InitEnt(_Entity, _cTune);

  #GetFld(comp,   Var_cBudCO      , cBudCO      )
  #GetFld(Comp,   Var_cBudPer     , cBudPer     )
  #GetFld(comp,   Var_cBudVariant , cBudVariant )
  #GetFld(Word,   Var_wBudKodReg  , wBudKodReg  )
  #GetFld(String, Var_sBudStage   , sBudStage   )
  #GetFld(Comp,   Var_cBudTForm   , cBudTForm   )

  MyCheckBudget(cBudCO, cBudPer, cBudget, cBudVariant, sBudStage, cBudVar);

  pObjITune.DoneEnt(_Entity, _cTune);

  ShowMyHeader;
  MyRead_ITune := True;
}

//------------------------------------------------------------------------------
function Read_ITune(_cTune : comp) : boolean;
{
  isLoadBatchITune := True;
  Read_ITune := MyRead_ITune(#(_CurInt)Entity, _cTune);
}

//------------------------------------------------------------------------------
function MySave_ITune(_Entity : word; _cTune : comp) : boolean;
{
  MySave_ITune := False;

  // были загружены настройки из пакета заданий
  if ( not isLoadBatchITune )
  {
  }

  pObjITune.InitEnt(_Entity, _cTune);

  // сохранение полей интерфейса
  #SetFld(comp,   Var_cBudCO      , cBudCO      )
  #SetFld(comp,   Var_cBudVariant , cBudVariant )
  #SetFld(Word,   Var_wBudKodReg  , wBudKodReg  )
  #SetFld(Comp,   Var_cBudPer     , cBudPer     )
  #SetFld(String, Var_sBudStage   , sBudStage   )
  #SetFld(Comp,   Var_cBudTForm   , cBudTForm   )

  pObjITune.DoneEnt(_Entity, _cTune);

  MySave_ITune := True;
}

//------------------------------------------------------------------------------
function Save_ITune(_cTune : comp) : boolean;
{
  isLoadBatchITune := True;
  Save_ITune := MySave_ITune(#(_CurInt)Entity, _cTune);
}

//------------------------------------------------------------------------------
function MyDel_ITune(_Entity : word; _cTune : comp) : boolean;
{ MyDel_ITune := pObjITune.DelEnt(_Entity, _cTune);
}

//------------------------------------------------------------------------------
function Del_ITune(_cTune : comp) : boolean;
{ Del_ITune := MyDel_ITune(#(_CurInt)Entity, _cTune);
}

//------------------------------------------------------------------------------
// Загрузка параметров из менеджера
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
// Загрузка из менеджера ЦО<br>
//------------------------------------------------------------------------------
function Read_ITune1CO(_cTune : comp; _wEntity : word) : boolean;
{
  Result := False;
  pObjITune.InitEnt(_wEntity, _cTune);
  #GetFld(Comp, Var_cCurCO, cBudCO)
  pObjITune.DoneEnt(_wEntity, _cTune);
  Result := True;
}

//------------------------------------------------------------------------------
// Загрузка из менеджера периода<br>
//------------------------------------------------------------------------------
function Read_ITune1Per(_cTune : comp; _wEntity : word) : boolean;
{
  Result := False;
  pObjITune.InitEnt(_wEntity, _cTune);
  #GetFld(Comp,Var_cCurPer , cBudPer)
  pObjITune.DoneEnt(_wEntity, _cTune);
  Result := True;
}

//------------------------------------------------------------------------------
// Загрузка из менеджера реквизитов копии<br>
//------------------------------------------------------------------------------
function Read_ITune1Stage(_cTune : comp; _wEntity : word) : boolean;
{
  Result := False;
  pObjITune.InitEnt(_wEntity, _cTune);
  #GetFld(Comp, VAR_cCurBudVariant, cBudVariant)
  #GetFld(String, Var_sCurStage, sBudStage)
  pObjITune.DoneEnt(_wEntity, _cTune);
  Result := True;
}

//------------------------------------------------------------------------------
// Загрузка из менеджера кода регистра<br>
//------------------------------------------------------------------------------
function Read_ITune1KodReg(_cTune : comp; _wEntity : word) : boolean;
{
  Result := False;
  pObjITune.InitEnt(_wEntity, _cTune);
  #GetFld(Word, VAR_wKodReg1, wBudKodReg)
  pObjITune.DoneEnt(_wEntity, _cTune);
  Result := True;
}

//------------------------------------------------------------------------------
//   Загрузка из менеджера типовой формы<br>
//------------------------------------------------------------------------------
function Read_ITune1TForm(_cTune : comp; _wEntity : word) : boolean;
{
  Result := False;
  pObjITune.InitEnt(_wEntity, _cTune);
  #GetFld(Comp, Var_cCurTForm, cBudTForm)
  pObjITune.DoneEnt(_wEntity, _cTune);
  Result := True;
}


