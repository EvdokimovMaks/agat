//------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Галактика 9.10 - модуль "Управление бюджетом"
// Интерфейс настройки : "Соответствие аналитик"
//------------------------------------------------------------------------------

Const
  Tbl_TblDefAnDst              = 'TDAD';
  TblVar__TblDefAnDst_KodSrc   = 'TDKS';
  TblVar__TblDefAnDst_KodDst   = 'TDKD';
  TblVar__TblDefAnDst_cMeanDst = 'TDMD';
end;

//------------------------------------------------------------------------------
// МАКРОСЫ
//------------------------------------------------------------------------------
#include FpITune.Mac   // Макросы для чтения настроек интерфейсов

//------------------------------------------------------------------------------
function SychDefTbl : boolean;
{
  SychDefTbl := False;
  _Loop MtImpKau
  {
    if GetFirst FastFirstRow LoopTblDefAnDst where ((MtImpKau.KodAn  == LoopTblDefAnDst.KodSrc)) = tsOk
    { Continue; }

    ClearBuffer(#LoopTblDefAnDst);
    LoopTblDefAnDst.KodSrc := MtImpKau.KodAn;
    LoopTblDefAnDst.KodDst := 0;
    LoopTblDefAnDst.cMeanDst := 0;
    if ( insert current LoopTblDefAnDst <> tsOk )
    { fplog('insert current LoopTblDefAnDst <> tsOk');}
  }
  SychDefTbl := True;
}
//------------------------------------------------------------------------------
function GetTblDefAnDst(_cTune : comp): boolean;
{
  GetTblDefAnDst := False;
  delete all LoopTblDefAnDst;
  if (not pObjITune.GetTblBoxRec(_cTune, Tbl_TblDefAnDst) )
  {Exit;}
  while GetFirst FastFirstRow BoxRec = tsOk
  {
    do
    {
      if (BoxRec.cRec = 0)  { Break; }
      var cSavedRec : comp; cSavedRec := BoxRec.cRec;
      ClearBuffer(#LoopTblDefAnDst);

      #GetTblFld(Word,Tbl_TblDefAnDst,cSavedRec,TblVar__TblDefAnDst_KodSrc,LoopTblDefAnDst.KodSrc)
      #GetTblFld(Word,Tbl_TblDefAnDst,cSavedRec,TblVar__TblDefAnDst_KodDst,LoopTblDefAnDst.KodDst)
      #GetTblFld(Comp,Tbl_TblDefAnDst,cSavedRec,TblVar__TblDefAnDst_cMeanDst,LoopTblDefAnDst.cMeanDst)
      var tsRes : word;  tsRes := insert current LoopTblDefAnDst;
      if (tsRes <> tsOk)
      { FpLog('GetTblCO : (insert current LoopTblDefAnDst <> tsOk)'+string(tsRes)); }
    }
    while False;

    var cBoxRec : comp; cBoxRec := BoxRec.cRec;
    delete all BoxRec where ((cBoxRec == BoxRec.cRec));
  } //while GetFirst FastFirstRow BoxRec
  GetTblDefAnDst := True;
}

//------------------------------------------------------------------------------
function SetTblDefAnDst(_cTune : comp): boolean;
{
  SetTblDefAnDst := False;
  var i : integer; i := 0;
  pObjITune.DelTbl(_cTune, Tbl_TblDefAnDst);
  _Loop LoopTblDefAnDst
  {
    inc(i);
    var cSavedRec : comp; cSavedRec := i;
    #SetTblFld(Word,Tbl_TblDefAnDst,cSavedRec,TblVar__TblDefAnDst_KodSrc,LoopTblDefAnDst.KodSrc)
    #SetTblFld(word,Tbl_TblDefAnDst,cSavedRec,TblVar__TblDefAnDst_KodDst,LoopTblDefAnDst.KodDst)
    #SetTblFld(Comp,Tbl_TblDefAnDst,cSavedRec,TblVar__TblDefAnDst_cMeanDst,LoopTblDefAnDst.cMeanDst)
  }
  SetTblDefAnDst := True;
}

//------------------------------------------------------------------------------
function Read_ITune(_cTune : comp) : boolean;
{
  Read_ITune := False;
  pObjITune.InitEnt(#(_CurInt)Entity, _cTune);
  GetTblDefAnDst(_cTune);
  SychDefTbl;
  cLastTblInitObj := _cTune;
  pObjITune.DoneEnt(#(_CurInt)Entity, _cTune);
  Read_ITune := True;
}

//------------------------------------------------------------------------------
function Save_ITune(_cTune : comp) : boolean;
{
  Save_ITune := False;
  pObjITune.InitEnt(#(_CurInt)Entity, _cTune);
  SetTblDefAnDst(_cTune);
  pObjITune.DoneEnt(#(_CurInt)Entity, _cTune);
  Save_ITune := True;
}

//------------------------------------------------------------------------------
function Del_ITune(_cTune : comp) : boolean;
{
  pObjITune.InitEnt(#(_CurInt)Entity, _cTune);
  Del_ITune := pObjITune.DelEnt(#(_CurInt)Entity, _cTune);
  pObjITune.DoneEnt(#(_CurInt)Entity, _cTune);
}

//------------------------------------------------------------------------------
// позиционирование в таблице значений по умолчанию
//------------------------------------------------------------------------------
function MyCheckInit(_cTune : comp) : boolean;
{
  MyCheckInit := True;
  if (cLastTblInitObj = _cTune)
  { Exit; }
  Read_ITune(_cTune);
}

//------------------------------------------------------------------------------
// позиционирование в таблице значений по умолчанию
//------------------------------------------------------------------------------
function MyFixDefAnTbl(_wKodAn : word) : boolean;
{
  MyFixDefAnTbl := False;
  Set wQuickKodSrc  := _wKodAn;
  if GetFirst FastFirstRow QuickTblDefAnDst <> tsOk
  { Exit; }
  MyFixDefAnTbl := True;
}

//------------------------------------------------------------------------------
// инициализация таблицы значений по умолчанию
//------------------------------------------------------------------------------
function MyInitDefAnTbl(_cKatImp : comp; _wKodAn : word) : boolean;
{
  MyInitDefAnTbl := False;
  if (not MyCheckInit(_cKatImp) )  { Exit; }
  if (cLastTblInitObj <> _cKatImp)
    GetTblDefAnDst(_cKatImp);
  if (not MyFixDefAnTbl(_wKodAn) )  { Exit; }
  MyInitDefAnTbl := True;
}
