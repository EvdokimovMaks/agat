//------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Галактика 9.10 - модуль "Управление бюджетом"
// Визуальный интерфейс: "Очистка данных бюджета"
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
// Блокировка данных бюджета
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
function UnLockValuesData(
  _SessionID  : LongInt
) : boolean;
{
  UnLockValuesData := False;
  var Err : boolean;  Err := False;
  do
  {
    if (not pLockValues.Session_TryUnLock(_SessionID) )
    { Err := True; }
    if (not pLockValues.Session_End(_SessionID) )
    { Err := True; }
  }
  while False;
  if (Err)
    pLockValues.ShowMessageLastError;
  UnLockValuesData := (not Err);
}
//------------------------------------------------------------------------------
function LockValuesData(
  var _SessionID  : LongInt
) : boolean;
{
  LockValuesData := False;
  var Err : boolean;  Err := False;
  StartNewVisual(vtDownVisual, vfTimer+vfBreak+vfConfirm, 'Блокировка данных...', 1);
  do
  {
    _SessionID := pLockValues.Session_Begin;
    if (_SessionID = 0)
    { Err := True; Break; }

    var LockParam  : TFpLockLaluesParam;

    _Loop ListStBud
    {
      var cCurStBud : comp;  cCurStBud := ListStBud.NRec;
      _Loop LoopBudVar where
        ((fListBudgetID == LoopBudVar.ID))
      {
        _Loop LoopTblSubPerBud where
          ((LoopBudVar.cPeriod == LoopTblSubPerBud.cMain))
        {
          if (not IsDelMode(LoopTblSubPerBud.wDelMode) )
          { Continue; }
          var cCurPeriod : comp;  cCurPeriod := LoopTblSubPerBud.NRec;

          var i : word;
          for (i := 1; i <= 3; i := i+1)
          {
            var tmpBudReg : word;  tmpBudReg := MyGetBudKodReg(i);
            if (tmpBudReg = 0)
              { Continue; }
            if ( LoopBudVar.cBudVar = 0 )
            { Continue; }
            ClearAdvRecord(LockParam);
            LockParam.wSegBit  := word(fpcgBudVarLock or fpcgKodRegLock or fpcgStBudLock or fpcgPeriodLock);
            LockParam.cBudVar  := LoopBudVar.cBudVar;
            LockParam.wKodReg  := tmpBudReg;
            LockParam.cStBud   := cCurStBud;
            LockParam.cPeriod  := cCurPeriod;
            pLockValues.Session_AddALock(_SessionID, LockParam);

          }
        }
      }
    }

    if (not pLockValues.Session_TryLock(_SessionID) )
    { Err := True; Break; }

  }
  while False;
  StopVisual('', 0);

  if (Err)
  {
    pLockValues.ShowMessageLastError;
    UnLockValuesData(_SessionID);
  }
  LockValuesData := (not Err);
}

//------------------------------------------------------------------------------
function LockValuesDataEx(
  var _SessionID  : LongInt
) : boolean;
{
  LockValuesDataEx := False;
  var Err : boolean;  Err := False;
  StartNewVisual(vtDownVisual, vfTimer+vfBreak+vfConfirm, 'Блокировка данных...', 1);
  do
  {
    _SessionID := pLockValues.Session_Begin;
    if (_SessionID = 0)
    { Err := True; Break; }

    var LockParam  : TFpLockLaluesParam;

    _Loop LoopBudVar where
      ((fListBudgetID == LoopBudVar.ID))
    {
        var i : word;
        for (i := 1; i <= 3; i := i+1)
        {
          var tmpBudReg : word;  tmpBudReg := MyGetBudKodReg(i);
          if (tmpBudReg = 0)
            { Continue; }
          if ( LoopBudVar.cBudVar = 0 )
          { Continue; }
          ClearAdvRecord(LockParam);
          LockParam.wSegBit  := word(fpcgBudVarLock or fpcgKodRegLock);
          LockParam.cBudVar  := LoopBudVar.cBudVar;
          LockParam.wKodReg  := tmpBudReg;
          pLockValues.Session_AddALock(_SessionID, LockParam);

        }
    }
    if (not pLockValues.Session_TryLock(_SessionID) )
    { Err := True; Break; }

  }
  while False;
  StopVisual('', 0);

  if (Err)
  {
    pLockValues.ShowMessageLastError;
    UnLockValuesData(_SessionID);
  }
  LockValuesDataEx := (not Err);
}
