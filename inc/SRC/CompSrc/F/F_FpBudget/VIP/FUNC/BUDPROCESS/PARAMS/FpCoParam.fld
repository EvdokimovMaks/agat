//------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Галактика 9.10 - модуль "Управление бюджетом"
// Параметры ЦО
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
#include FpModeParam.Inc   // Константы идентификаторов режимов параметров
#include FpCOParam.Inc     // Константы идентификаторов параметров типа "ЦО"
#include FpITune.Mac       // Макросы для чтения настроек интерфейсов
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
function GetTblCO(_cTune : comp): boolean;
{
  GetTblCO := False;

  delete all tblCO;
  if (not pObjITune.GetTblBoxRec(_cTune, Tbl_tblCO) )
  {Exit;}
  while GetFirst FastFirstRow BoxRec = tsOk
  {
    do
    {
      if (BoxRec.cRec = 0)  { Break; }
      var cSavedRec : comp; cSavedRec := BoxRec.cRec;
      var cRecCO    : comp; cRecCO := 0;

      #GetTblFld(Comp,Tbl_tblCO,cSavedRec,TblVar__tblCO_cRec,cRecCO)

      if (not InsCO(cRecCO))
      { FpLog('FpCOParam : (not InsCO(cRecCO))'); }
    }
    while False;

    var cBoxRec : comp; cBoxRec := BoxRec.cRec;
    delete all BoxRec where ((cBoxRec == BoxRec.cRec));
  } //while GetFirst FastFirstRow BoxRec

  GetTblCO := True;
}
//------------------------------------------------------------------------------
function SetTblCO(_cTune : comp): boolean;
{
  SetTblCO := False;
  PushPos(#tblCO);
  pObjITune.DelTbl(_cTune, Tbl_tblCO);
  _Loop tblCO
  {
      var cSavedRec : comp; cSavedRec := tblCO.cRec;
      #SetTblFld(Comp,Tbl_tblCO,cSavedRec,TblVar__tblCO_cRec, tblCO.cRec)
  }
  PopPos(#tblCO);
  SetTblCO := True;
}
//------------------------------------------------------------------------------
function Read_ITune(_cTune : comp; _wEntity : word) : boolean;
{
  Read_ITune := False;

  pObjITune.InitEnt(_wEntity, _cTune);

  GetTblCO(_cTune);

  #GetFld(Comp, Var_cCurCO, cCurCO )
  #GetFld(word, Var_w1Mode, w1Mode )
  #GetFld(word, Var_wNMode, wNMode )
  #GetFld(word, Var_wParent1, wParent1 )
  #GetFld(word, Var_wParentN, wParentN )

  SetMode1(w1Mode);
  SetModeN(wNMode);
  SetParent1(wParent1);
  SetParentN(wParentN);
  Set1CO(cCurCO);
  CheckFieldState;

  pObjITune.DoneEnt(_wEntity, _cTune);

  Read_ITune := True;
}

//------------------------------------------------------------------------------
function Save_ITune(_cTune : comp; _wEntity : word) : boolean;
{
  Save_ITune := False;
  pObjITune.InitEnt(_wEntity, _cTune);

  #SetFld(Comp, Var_cCurCO, Get1CO)
  #SetFld(word, Var_w1Mode, GetMode1CO)
  #SetFld(word, Var_wNMode, GetModeNCO)
  #SetFld(word, Var_wParent1, GetParent1CO)
  #SetFld(word, Var_wParentN, GetParentNCO)

  SetTblCO(_cTune);

  pObjITune.DoneEnt(_wEntity, _cTune);

  Save_ITune := True;
}

//------------------------------------------------------------------------------
function Del_ITune(_cTune : comp; _wEntity : word) : boolean;
{ Del_ITune := pObjITune.DelEnt(_wEntity, _cTune);
}
