//------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Галактика 9.10 - модуль "Управление бюджетом"
// Реквизиты копии
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
#include FpModeParam.Inc   // Константы идентификаторов режимов параметров
#include FpStageParam.Inc  // Константы идентификаторов параметров типа "Реквизиты копии"
#include FpITune.Mac       // Макросы для чтения настроек интерфейсов
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
function Read_ITune(_cTune : comp; _wEntity : word) : boolean;
{
  Read_ITune := False;

  pObjITune.InitEnt(_wEntity, _cTune);
  var sTmpDescr : string = '';

  #GetFld(Comp,   VAR_cCurBudVariant, cCurBudVariant )
  #GetFld(String, Var_sCurStage     , sCurStage      )
  #GetFld(Comp,   Var_cCurArea      , cCurArea       )
  #GetFld(String, Var_sCurDescr     , sTmpDescr      )
  #GetFld(word, Var_w1Mode, w1Mode )
  #GetFld(word, Var_wParent1, wParent1 )

  SetMode1(w1Mode);
  SetParent1(wParent1);
  SetArea(cCurArea);
  SetDescr(sTmpDescr);
  SetBudVariant(cCurBudVariant);
  SetBudStage(sCurStage);

  CheckFieldState;

  pObjITune.DoneEnt(_wEntity, _cTune);

  Read_ITune := True;
}

//------------------------------------------------------------------------------
function Save_ITune(_cTune : comp; _wEntity : word) : boolean;
{
  Save_ITune := False;

  pObjITune.InitEnt(_wEntity, _cTune);

  var sTmpDescr : string = GetDescr;
  #SetFld(Comp,   VAR_cCurBudVariant, GetBudVariant )
  #SetFld(String, Var_sCurStage     , GetStage      )
  #SetFld(Comp,   Var_cCurArea      , GetArea       )
  #SetFld(String, Var_sCurDescr     , sTmpDescr     )
  #SetFld(word, Var_w1Mode, GetMode1Stage)
  #SetFld(word, Var_wParent1, GetParent1Stage)


  pObjITune.DoneEnt(_wEntity, _cTune);

  Save_ITune := True;
}

//------------------------------------------------------------------------------
function Del_ITune(_cTune : comp; _wEntity : word) : boolean;
{ Del_ITune := pObjITune.DelEnt(_wEntity, _cTune);
}


