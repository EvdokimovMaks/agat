//------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Галактика 9.10 - модуль "Управление бюджетом"
// Параметры списков бюджетов
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
#include FpModeParam.Inc   // Константы идентификаторов режимов параметров
#include FpListParam.Inc   // Константы идентификаторов параметров типа "Список бюджетов"
#include FpITune.Mac       // Макросы для чтения настроек интерфейсов
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
function GetTblList(_cTune : comp): boolean;
{
  GetTblList := False;

  delete all tblList;
  if (not pObjITune.GetTblBoxRec(_cTune, Tbl_tblList) )
  {Exit;}
  while GetFirst FastFirstRow BoxRec = tsOk
  {
    do
    {
      if (BoxRec.cRec = 0)  { Break; }
      var cSavedRec : comp; cSavedRec := BoxRec.cRec;
      ClearBuffer(#tblList);

      #GetTblFld(Comp,Tbl_tblList,cSavedRec,TblVar__tblList_NRec, tblList.NRec)
      #GetTblFld(Comp,Tbl_tblList,cSavedRec,TblVar__tblList_cRecCO,tblList.cRecCO)
      #GetTblFld(Comp,Tbl_tblList,cSavedRec,TblVar__tblList_cSlaveRecCO,tblList.cSlaveRecCO)
      #GetTblFld(Comp,Tbl_tblList,cSavedRec,TblVar__tblList_cRecPer,tblList.cRecPer)
      #GetTblFld(Comp,Tbl_tblList,cSavedRec,TblVar__tblList_cSlaveRecPer,tblList.cSlaveRecPer)
      #GetTblFld(Comp,Tbl_tblList,cSavedRec,TblVar__tblList_cRecVar,tblList.cRecVar)
      #GetTblFld(Comp,Tbl_tblList,cSavedRec,TblVar__tblList_cSlaveRecVar,tblList.cSlaveRecVar)
      #GetTblFld(String,Tbl_tblList,cSavedRec,TblVar__tblList_sStage,tblList.sStage)
      #GetTblFld(String,Tbl_tblList,cSavedRec,TblVar__tblList_sSlaveStage,tblList.sSlaveStage)
      #GetTblFld(Word,Tbl_tblList,cSavedRec,TblVar__tblList_wBitReg,tblList.wBitReg)
      #GetTblFld(Word,Tbl_tblList,cSavedRec,TblVar__tblList_wSlaveBitReg,tblList.wSlaveBitReg)
      #GetTblFld(Word,Tbl_tblList,cSavedRec,TblVar__tblList_wDelMode,tblList.wDelMode)
      #GetTblFld(LongInt,Tbl_tblList,cSavedRec,TblVar__tblList_fOrder,tblList.fOrder)

      var tsRes : word;  tsRes := insert current tblList;
      if (tsRes <> tsOk)
      { FpLog('FpListParam : (insert current tblCO <> tsOk)'+string(tsRes)); }

    }
    while False;

    var cBoxRec : comp; cBoxRec := BoxRec.cRec;
    delete all BoxRec where ((cBoxRec == BoxRec.cRec));
  } //while GetFirst FastFirstRow BoxRec

  GetTblList := True;
}
//------------------------------------------------------------------------------
function SetTblList(_cTune : comp): boolean;
{
  SetTblList := False;
  PushPos(#tblList);
  pObjITune.DelTbl(_cTune, Tbl_tblList);
  _Loop tblList
  {
      var cSavedRec : comp; cSavedRec := tblList.NRec;
      #SetTblFld(Comp,Tbl_tblList,cSavedRec,TblVar__tblList_NRec, tblList.NRec)
      #SetTblFld(Comp,Tbl_tblList,cSavedRec,TblVar__tblList_cRecCO,tblList.cRecCO)
      #SetTblFld(Comp,Tbl_tblList,cSavedRec,TblVar__tblList_cSlaveRecCO,tblList.cSlaveRecCO)
      #SetTblFld(Comp,Tbl_tblList,cSavedRec,TblVar__tblList_cRecPer,tblList.cRecPer)
      #SetTblFld(Comp,Tbl_tblList,cSavedRec,TblVar__tblList_cSlaveRecPer,tblList.cSlaveRecPer)
      #SetTblFld(Comp,Tbl_tblList,cSavedRec,TblVar__tblList_cRecVar,tblList.cRecVar)
      #SetTblFld(Comp,Tbl_tblList,cSavedRec,TblVar__tblList_cSlaveRecVar,tblList.cSlaveRecVar)
      #SetTblFld(String,Tbl_tblList,cSavedRec,TblVar__tblList_sStage,tblList.sStage)
      #SetTblFld(String,Tbl_tblList,cSavedRec,TblVar__tblList_sSlaveStage,tblList.sSlaveStage)
      #SetTblFld(Word,Tbl_tblList,cSavedRec,TblVar__tblList_wBitReg,tblList.wBitReg)
      #SetTblFld(Word,Tbl_tblList,cSavedRec,TblVar__tblList_wSlaveBitReg,tblList.wSlaveBitReg)
      #SetTblFld(Word,Tbl_tblList,cSavedRec,TblVar__tblList_wDelMode,tblList.wDelMode)
      #SetTblFld(LongInt,Tbl_tblList,cSavedRec,TblVar__tblList_fOrder,tblList.fOrder)
  }
  PopPos(#tblList);
  SetTblList := True;
}
//------------------------------------------------------------------------------
function Read_ITune(_cTune : comp; _wEntity : word) : boolean;
{
  Read_ITune := False;

  pObjITune.InitEnt(_wEntity, _cTune);

  GetTblList(_cTune);

  #GetFld(word, Var_w1Mode, w1Mode )
  #GetFld(word, Var_wParent1, wParent1 )
  #GetFld(word, Var_wListMode, wListMode )
  #GetFld(word, Var_wUserList, wUserList )
  #GetFld(word, Var_wAutoList, wAutoList )


  SetMode1(w1Mode);
  SetParent1(wParent1);
  SetListMode(wListMode);
  SetUserList(wUserList);
  SetAutoList(wAutoList);

  CheckFieldState;

  pObjITune.DoneEnt(_wEntity, _cTune);

  Read_ITune := True;
}

//------------------------------------------------------------------------------
function Save_ITune(_cTune : comp; _wEntity : word) : boolean;
{
  Save_ITune := False;

  pObjITune.InitEnt(_wEntity, _cTune);

  #SetFld(word, Var_w1Mode, GetMode1 )
  #SetFld(word, Var_wParent1, GetParent1 )
  #SetFld(word, Var_wListMode, GetListMode )
  #SetFld(word, Var_wUserList, GetUserList )
  #SetFld(word, Var_wAutoList, GetAutoList )

  SetTblList(_cTune);

  pObjITune.DoneEnt(_wEntity, _cTune);

  Save_ITune := True;
}

//------------------------------------------------------------------------------
function Del_ITune(_cTune : comp; _wEntity : word) : boolean;
{ Del_ITune := pObjITune.DelEnt(_wEntity, _cTune);
}

//------------------------------------------------------------------------------
function ReadOnlyList_ITune(_cTune : comp; _wEntity : word) : boolean;
{
  ReadOnlyList_ITune := False;
  pObjITune.InitEnt(_wEntity, _cTune);
  GetTblList(_cTune);
  pObjITune.DoneEnt(_wEntity, _cTune);
  ReadOnlyList_ITune := True;
}




