//------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Галактика 9.10 - модуль "Управление бюджетом"
// Интерфейс : "Выполнение бюджетных процессов пользователя"
//------------------------------------------------------------------------------

Const
  Var_cBudCO               = 'cBCO';
  Var_cBudVariant          = 'cBVa';
  Var_wBudKodReg           = 'wBKR';
  Var_cBudPer              = 'cBPe';
  Var_sBudStage            = 'sBSt';
  Var_cBudget              = 'cBud';
  Var_cBudVar              = 'cBVr';
  Var_cBudTForm            = 'cBTF';
  Var_wUserMode            = 'wUsM';

  Tbl_UserBudProc          = 'TUBP';

  TblVar__UserBudProc_NRec = 'TcRe';
end;


//------------------------------------------------------------------------------
// МАКРОСЫ
//------------------------------------------------------------------------------
#include FpITune.Mac   // Макросы для чтения настроек интерфейсов


//------------------------------------------------------------------------------
function GetTblUserBudProc(_cTune : comp): boolean;
{
  Result := False;

  delete all UserBudProc;
  if (not pObjITune.GetTblBoxRec(_cTune, Tbl_UserBudProc) )
  {Exit;}
  while GetFirst FastFirstRow BoxRec = tsOk
  {
    do
    {
      if (BoxRec.cRec = 0)  { Break; }
      var cSavedRec : comp; cSavedRec := BoxRec.cRec;
      var cRec : comp = 0;
      ClearBuffer(#UserBudProc);
      #GetTblFld(Comp,  Tbl_UserBudProc, cSavedRec, TblVar__UserBudProc_NRec     , cRec)

      if ( GetFirst FastFirstRow FpBudProcces where ((cRec == FpBudProcces.NRec)) <> tsOk )
      { FpLog('GetTblUserBudProc : Не найдена запись в FpBudProcces. NRec='+ #Var(cRec));
        Continue;
      }

      UserBudProc.NRec      := FpBudProcces.NRec;
      UserBudProc.cMain     := FpBudProcces.cMain;
      UserBudProc.cNode     := FpBudProcces.cNode;
      UserBudProc.Code      := FpBudProcces.Code;
      UserBudProc.LevelCode := FpBudProcces.LevelCode;
      if (insert current UserBudProc <> tsOk)
      { FpLog('GetTblUserBudProc : insert current UserBudProc <> tsOk'); }
    }
    while False;

    var cBoxRec : comp; cBoxRec := BoxRec.cRec;
    delete all BoxRec where ((cBoxRec == BoxRec.cRec));
  } //while GetFirst FastFirstRow BoxRec

  // проверим иерархию
  CheckAllNode;

  Result := True;
}

//------------------------------------------------------------------------------
function SetTblUserBudProc(_cTune : comp): boolean;
{
  Result := False;

  pObjITune.DelTbl(_cTune, Tbl_UserBudProc);
  _Loop UserBudProc
  {
    var cSavedRec : comp; cSavedRec := UserBudProc.Nrec;
    #SetTblFld(Comp,  Tbl_UserBudProc, cSavedRec, TblVar__UserBudProc_NRec     , UserBudProc.NRec)
  }

  Result := True;
}

//------------------------------------------------------------------------------
function MyRead_ITune(_Entity : word; _cTune : comp) : boolean;
{
  MyRead_ITune := False;

  pObjITune.InitEnt(_Entity, _cTune);

  GetTblUserBudProc(_cTune);

  #GetFld(comp,   Var_cBudCO      , cBudCO      )
  #GetFld(comp,   Var_cBudVariant , cBudVariant )
  #GetFld(Word,   Var_wBudKodReg  , wBudKodReg  )
  #GetFld(Comp,   Var_cBudPer     , cBudPer     )
  #GetFld(String, Var_sBudStage   , sBudStage   )
  #GetFld(Comp,   Var_cBudget     , cBudget     )
  #GetFld(Comp,   Var_cBudVar     , cBudVar     )
  #GetFld(Comp,   Var_cBudTForm   , cBudTForm   )
  #GetFld(Word,   Var_wUserMode   , wUserMode   )

  pObjITune.DoneEnt(_Entity, _cTune);

  CheckAllParam;

  MyRead_ITune := True;
}

//------------------------------------------------------------------------------
function Read_ITune(_cTune : comp) : boolean;
{
  Read_ITune := MyRead_ITune(#(_CurInt)Entity, _cTune);
}

//------------------------------------------------------------------------------
function MySave_ITune(_Entity : word; _cTune : comp) : boolean;
{
  MySave_ITune := False;

  pObjITune.InitEnt(_Entity, _cTune);

  // удалим все старое, чтоб не осталось "старых" настроек
  pObjITune.DelEnt (_Entity, _cTune);

  SetTblUserBudProc(_cTune);

  #SetFld(comp,   Var_cBudCO      , cBudCO      )
  #SetFld(comp,   Var_cBudVariant , cBudVariant )
  #SetFld(Word,   Var_wBudKodReg  , wBudKodReg  )
  #SetFld(Comp,   Var_cBudPer     , cBudPer     )
  #SetFld(String, Var_sBudStage   , sBudStage   )
  #SetFld(Comp,   Var_cBudget     , cBudget     )
  #SetFld(Comp,   Var_cBudVar     , cBudVar     )
  #SetFld(Comp,   Var_cBudTForm   , cBudTForm   )
  #SetFld(Word,   Var_wUserMode   , wUserMode   )

  pObjITune.DoneEnt(_Entity, _cTune);

  MySave_ITune := True;
}
//------------------------------------------------------------------------------
function Save_ITune(_cTune : comp) : boolean;
{
  Save_ITune := MySave_ITune(#(_CurInt)Entity, _cTune);
}

//------------------------------------------------------------------------------
function MyDel_ITune(_Entity : word; _cTune : comp) : boolean;
{ MyDel_ITune := pObjITune.DelEnt(_Entity, _cTune);
}

function Del_ITune(_cTune : comp) : boolean;
{ Del_ITune := MyDel_ITune(#(_CurInt)Entity, _cTune);
}

