//------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Галактика 9.10 - модуль "Управление бюджетом"
// Визуальный интерфейс : "Удаление копий бюджетов"
//------------------------------------------------------------------------------

Const
  Tbl_ListBudget  = 'TBud';
  TblVar__ListBudget_fOrder      = 'LBOrd';
  TblVar__ListBudget_cBudget     = 'LBBud';
  TblVar__ListBudget_cBudVar     = 'LBBV';
  TblVar__ListBudget_cCO         = 'LBCO';
  TblVar__ListBudget_cPeriod     = 'LBPrd';
  TblVar__ListBudget_cBudVariant = 'LBVar';
  TblVar__ListBudget_sBudStage   = 'LBStg';

  Var_wRedMode                  = 'RedM';

end;

//------------------------------------------------------------------------------
#include FpListParam.Inc   // Константы идентификаторов параметров типа "Список бюджетов"
#include FpITune.Mac       // Макросы для чтения настроек интерфейсов
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
// GetTBL
//------------------------------------------------------------------------------
function MyGetTblListBudget(_cTune : comp) : boolean;
{
  MyGetTblListBudget := False;

  delete all ListBudget where ((fListBudgetID == ListBudget.ID));

  if (not pObjITune.GetTblBoxRec(_cTune, Tbl_ListBudget) )
  {
    pEditListBudget.MyReReadRecord;
    Exit;
  }
  while GetFirst FastFirstRow BoxRec = tsOk
  {
    do
    {
      if (BoxRec.cRec = 0)  { Break; }
      var cSavedRec : comp;  cSavedRec := BoxRec.cRec;

      ClearBuffer(#ListBudget);
      ListBudget.ID   := GetListBudgetID;
      #GetTblFld(LongInt,Tbl_ListBudget,cSavedRec,TblVar__ListBudget_fOrder, ListBudget.fOrder)
      #GetTblFld(Comp,Tbl_ListBudget,cSavedRec,TblVar__ListBudget_cCO,ListBudget.cCO)
      #GetTblFld(Comp,Tbl_ListBudget,cSavedRec,TblVar__ListBudget_cPeriod,ListBudget.cPeriod)
      #GetTblFld(Comp,Tbl_ListBudget,cSavedRec,TblVar__ListBudget_cBudVariant,ListBudget.cBudVariant)
      #GetTblFld(string,Tbl_ListBudget,cSavedRec,TblVar__ListBudget_sBudStage,ListBudget.sBudStage)
      var cTmpBudget : comp;  cTmpBudget := 0;
      var cTmpBudVar : comp;  cTmpBudVar := 0;
      #GetTblFld(Comp,Tbl_ListBudget,cSavedRec,TblVar__ListBudget_cBudget,cTmpBudget)
      #GetTblFld(Comp,Tbl_ListBudget,cSavedRec,TblVar__ListBudget_cBudVar,cTmpBudVar)
      var isCurNewParam : boolean;  isCurNewParam := (cTmpBudget = 0) and (cTmpBudVar = 0);

      // определение бюджета
      if (not isCurNewParam)
      { // возможно это первый запуск после использования старого
        ListBudget.cBudget := cTmpBudget;
        if (ListBudget.cBudget <> 0 )
        {
          ListBudget.cCO     := pExtFpBudget.GetCO    (ListBudget.cBudget);
          ListBudget.cPeriod := pExtFpBudget.GetPeriod(ListBudget.cBudget);
        }
      }
      else if (ListBudget.cCO <> 0) and (ListBudget.cPeriod <> 0)
      { // определим бюджет
        ListBudget.cBudget := pExtFpBudget.FindBudget(ListBudget.cCO, ListBudget.cPeriod, cgiNoMessage);
      }

      // определение копии
      if (ListBudget.cBudget <> 0)
      {
        if (not isCurNewParam)
        { // возможно это первый запуск после использования старого
          #GetTblFld(Comp,Tbl_ListBudget,cSavedRec,TblVar__ListBudget_cBudVar,cTmpBudVar)
          if (ListBudget.cBudVar <> 0 )
          {
            ListBudget.cBudVariant := pExtFpBudVar.GetVariant(ListBudget.cBudVar);
            ListBudget.sBudStage   := pExtFpBudVar.GetStage  (ListBudget.cBudVar);
          }
        }
        else if (ListBudget.cBudVariant <> 0)
        { // определим копию
          ListBudget.cBudVar := pExtFpBudVar.FindBudVar(ListBudget.cBudget, ListBudget.cBudVariant, ListBudget.sBudStage, cgiNoMessage);
        }
      }

      // наименование бюджета
      if (ListBudget.cBudget <> 0)
      {
        ListBudget.Name := pExtFpBudget.GetName(word(4), ListBudget.cBudget);
      }
      var tsRes : word;  tsRes := insert current ListBudget;
      if (tsRes <> tsOk)
      { FpLog('MyGetTblListBudget : (insert current ListBudget <> tsOk)'+string(tsRes)); }
    }
    while False;

    var cBoxRec : comp;  cBoxRec := BoxRec.cRec;
    delete all BoxRec where ((cBoxRec == BoxRec.cRec));
  }
  pEditListBudget.ReCalcOrder;
  pEditListBudget.MyReReadRecord;
  MyGetTblListBudget := True;
}
//------------------------------------------------------------------------------

function MySetTBLListBudget(_cTune : comp) : boolean;
{
  MySetTBLListBudget := False;

  PushPos(#ListBudget);
  pObjITune.DelTbl(_cTune, Tbl_ListBudget);

  _Loop ListBudget where ((fListBudgetID == ListBudget.ID))
  {
    var cSavedRec : comp;  cSavedRec := ListBudget.NRec;
    #SetTblFld(LongInt,Tbl_ListBudget,cSavedRec,TblVar__ListBudget_fOrder, ListBudget.fOrder)
    #SetTblFld(Comp,Tbl_ListBudget,cSavedRec,TblVar__ListBudget_cCO,ListBudget.cCO)
    #SetTblFld(Comp,Tbl_ListBudget,cSavedRec,TblVar__ListBudget_cPeriod,ListBudget.cPeriod)
    #SetTblFld(Comp,Tbl_ListBudget,cSavedRec,TblVar__ListBudget_cBudVariant,ListBudget.cBudVariant)
    #SetTblFld(String,Tbl_ListBudget,cSavedRec,TblVar__ListBudget_sBudStage,ListBudget.sBudStage)
    // для того чтобы определить что это уже новые настройки, в бюджет запишем 0
    #SetTblFld(Comp,Tbl_ListBudget,cSavedRec,TblVar__ListBudget_cBudget,0)
    #SetTblFld(Comp,Tbl_ListBudget,cSavedRec,TblVar__ListBudget_cBudVar,0)

  }
  PopPos(#ListBudget);
  MySetTBLListBudget := True;
}

//------------------------------------------------------------------------------
function MyRead_ITune(_Entity : word; _cTune : comp) : boolean;
{
  MyRead_ITune := False;

  // признак "загружены настройки из пакета заданий"
  if ( not isLoadBatchITune )
  {
    if _cTune = 0
    {
      if pObjFpProfileManager.UpdateZerroIDToOneID
        Set CurProfileID := 1;
      _Entity := #(_CurInt)Entity;
    }
  }

  pObjITune.InitEnt(_Entity, _cTune);
  #GetFld(word,   Var_wRedMode      , wRedMode      )
  MyGetTblListBudget(_cTune);

  pObjITune.DoneEnt(_Entity, _cTune);

  pEditListBudget.MyReReadRecord;
  ShowMyHeader;
  MyRead_ITune := True;
}
//------------------------------------------------------------------------------
function Read_ITune(_cTune : comp) : boolean;
{
  isLoadBatchITune := True;
  Read_ITune := MyRead_ITune(#(_CurInt)Entity, _cTune);
}

//------------------------------------------------------------------------------
function MySave_ITune(_Entity : word; _cTune : comp) : boolean;
{
  MySave_ITune := False;

  // были загружены настройки из пакета заданий
  if ( not isLoadBatchITune )
  {
  }
  pObjITune.InitEnt(_Entity, _cTune);
  #SetFld(word,   Var_wRedMode      , wRedMode      )
  MySetTblListBudget(_cTune);
  pObjITune.DoneEnt(_Entity, _cTune);
  MySave_ITune := False;
}

//------------------------------------------------------------------------------
function Save_ITune(_cTune : comp) : boolean;
{ isLoadBatchITune := True;
  Save_ITune := MySave_ITune(#(_CurInt)Entity, _cTune)
}

//------------------------------------------------------------------------------
function MyDel_ITune(_Entity : word; _cTune : comp) : boolean;
{ MyDel_ITune := pObjITune.DelEnt(_Entity, _cTune);
}

//------------------------------------------------------------------------------
function Del_ITune(_cTune : comp) : boolean;
{ Del_ITune := MyDel_ITune(#(_CurInt)Entity, _cTune);
}

//------------------------------------------------------------------------------
// Загрузка списка бюджетов для менеджера
//------------------------------------------------------------------------------
function MyGetTblList(_cTune : comp): boolean;
{
  MyGetTblList := False;
  var _Nrec     : comp    =  0;
  var _cRecCO   : comp    =  0;
  var _cRecPer  : comp    =  0;
  var _cRecVar  : comp    =  0;
  var _sStage   : string  = '';
  var _cBudget  : comp    =  0;
  var _cBudVar  : comp    =  0;
  var _fOrder   : LongInt =  0;

  if (not pObjITune.GetTblBoxRec(_cTune, Tbl_tblList) )
  { Exit; }

  Delete All KatH;

  while GetFirst FastFirstRow BoxRec = tsOk
  {
    do
    {
      if (BoxRec.cRec = 0)  { Break; }
      var cSavedRec : comp; cSavedRec := BoxRec.cRec;

      #GetTblFld(Comp,Tbl_tblList,cSavedRec,TblVar__tblList_NRec, _NRec)
      #GetTblFld(Comp,Tbl_tblList,cSavedRec,TblVar__tblList_cRecCO, _cRecCO)
      #GetTblFld(Comp,Tbl_tblList,cSavedRec,TblVar__tblList_cRecPer, _cRecPer)
      #GetTblFld(Comp,Tbl_tblList,cSavedRec,TblVar__tblList_cRecVar, _cRecVar)
      #GetTblFld(String,Tbl_tblList,cSavedRec,TblVar__tblList_sStage, _sStage)
      #GetTblFld(LongInt,Tbl_tblList,cSavedRec,TblVar__tblList_fOrder,_fOrder)
    }
    while False;


    _cBudget := pExtFpBudget.FindBudget(_cRecCO,_cRecPer, cgiNoMessage);
    if _cBudget = 0
    {
      //Exit;
    }
    _cBudVar := pExtFpBudVar.FindBudVar(_cBudget, _cRecVar, _sStage, cgiNoMessage);
    if ( _cBudVar = 0 )
    {
      //_cBudVar := pExtFpBudget.FindAnyAvBudVar(_cBudget, True);
    }

    ClearBuffer(#KatH);
    KatH.ID      := GetListBudgetID;
    KatH.cBudget := _cBudget;
    KatH.Name    := pExtFpBudget.GetName(word(0 or 4), _cBudget);
    KatH.cBudget := _cBudget;
    KatH.cBudVar := _cBudVar;
    KatH.cCO     := _cRecCO;
    KatH.cPeriod := _cRecPer;
    KatH.cBudVariant := _cRecVar;
    KatH.sBudStage   := _sStage;
    KatH.fOrder      := _fOrder;
    Insert Current KatH;
    var cBoxRec : comp; cBoxRec := BoxRec.cRec;
    delete all BoxRec where ((cBoxRec == BoxRec.cRec));
  } //while GetFirst FastFirstRow BoxRec


  pEditListBudget.ReCalcOrder;
  pEditListBudget.MyReReadRecord;

  MyGetTblList := True;
}

//------------------------------------------------------------------------------
// Загрузка из менеджера списка бюджетов
//------------------------------------------------------------------------------
function Read_ITuneNMainBudSrc(_cTune : comp; _wEntity : word) : boolean;
{
  Read_ITuneNMainBudSrc := False;
  pObjITune.InitEnt(_wEntity, _cTune);
  MyGetTblList(_cTune);
  pObjITune.DoneEnt(_wEntity, _cTune);
  Read_ITuneNMainBudSrc := True;
}
