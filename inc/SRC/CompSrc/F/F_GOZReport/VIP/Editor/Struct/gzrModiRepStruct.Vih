//------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Галактика 9.10 - модуль "Электронная отчетность ГОЗ"
// Библиотека функций : "Модификация структура отчета"
//------------------------------------------------------------------------------

#ifndef __gzrModiRepStruct_Vih__
#define __gzrModiRepStruct_Vih__

#Component "F_GOZReport"

//------------------------------------------------------------------------------
#include gzr_BaseAbstractObj.Vih  // Абстрактный базовый интерфейс : "Object"
#include gzrTablRepStruct.Tbl     // Таблицы объекта : "Структура отчета"
//------------------------------------------------------------------------------

//==============================================================================
#doc
Библиотека функций : "Модификация структура отчета"<br>
<b>Внимание!</b> Интерфейс предназначен только для внутреннего использования
#end
Private ObjInterface IgzrModiRepStruct(Igzr_BaseAbstractObj);  //#region ObjInterface

  //----------------------------------------------------------------------------
  //#region ИДЕНТИФИКАТОР СЕССИИ
  //----------------------------------------------------------------------------
  #doc
     Получить идентификатор сессии структуры отчета
  #end
  function GetSessionID : comp;
  //#endregion ИДЕНТИФИКАТОР СЕССИИ
  //----------------------------------------------------------------------------

  //----------------------------------------------------------------------------
  //#region КЭШ
  //----------------------------------------------------------------------------
  #doc
     Очистить все Cash
  #end
  procedure ClearAllCash;
  //#endregion КЭШ
  //----------------------------------------------------------------------------

  //----------------------------------------------------------------------------
  //#region РЕЖИМ ЗАМЕНЫ ПОКАЗАТЕЛЯ
  //----------------------------------------------------------------------------
  #doc
     Очистить режим замены показателя
  #end
  procedure ClearCheckReWriteMode;
  //#endregion РЕЖИМ ЗАМЕНЫ ПОКАЗАТЕЛЯ
  //----------------------------------------------------------------------------

  //----------------------------------------------------------------------------
  //#region ПОЛУЧЕНИЕ БУФЕРА ТАБЛИЦЫ
  //----------------------------------------------------------------------------
  #doc
     Получить буфер таблицы по NRec
  #end
  function GetBuffByNRec(
      _cNRec : comp;                // NRec показателя
  var _Buff  : Type$p_MTRepStruct   // буфер записи структуры отчета
  ) : boolean;

  //----------------------------------------------------------------------------
  #doc
     Получить буфер таблицы по пути на вершину
  #end
  function GetBuffByPath(
      _sPath : string;              // путь на вершину
  var _Buff  : Type$p_MTRepStruct;  // буфер записи структуры отчета
      _isCreate : boolean = False   // создавать ли новую вершину
  ) : boolean;
  //#endregion ПОЛУЧЕНИЕ БУФЕРА ТАБЛИЦЫ
  //----------------------------------------------------------------------------

  //----------------------------------------------------------------------------
  //#region ПОЛУЧЕНИЕ/УСТАНОВКА ДАННЫХ ПО БУФЕРУ
  //----------------------------------------------------------------------------
  #doc
     Получить по буферу значение показателя соответствующего типа
  #end
  function BuffGetCastedValue(
    _Buff   : Type$p_MTRepStruct    // буфер записи структуры отчета
  ) : Variant;

  //----------------------------------------------------------------------------
  #doc
     Получить по буферу признак: "Расчетное значение"
  #end
  function BuffGetIsCalcValue(
    _Buff   : Type$p_MTRepStruct    // буфер записи структуры отчета
  ) : boolean;

  //----------------------------------------------------------------------------
  #doc
     Установить по буферу значение показателя типа String
  #end
  function BuffSetStringValue(
  var _Buff   : Type$p_MTRepStruct;  // буфер записи структуры отчета
      _Value  : string;              // значение
      _wOwner : word = 0             // владелец изменений (по умолчанию lc_ModifyOwner_Def)
  ) : boolean;

  //----------------------------------------------------------------------------
  #doc
     Установить по буферу значение показателя типа Double
  #end
  function BuffSetDoubleValue(
  var _Buff   : Type$p_MTRepStruct;  // буфер записи структуры отчета
      _Value  : double;              // значение
      _wOwner : word = 0             // владелец изменений (по умолчанию lc_ModifyOwner_Def)
  ) : boolean;

  //----------------------------------------------------------------------------
  #doc
     Установить по буферу значение показателя типа Date
  #end
  function BuffSetDateValue(
  var _Buff   : Type$p_MTRepStruct;  // буфер записи структуры отчета
      _Value  : date;                // значение
      _wOwner : word = 0             // владелец изменений (по умолчанию lc_ModifyOwner_Def)
  ) : boolean;

  //----------------------------------------------------------------------------
  #doc
     Установить по буферу значение показателя типа DateTime
  #end
  function BuffSetDateTimeValue(
  var _Buff   : Type$p_MTRepStruct;  // буфер записи структуры отчета
      _Value  : _DateTime;           // значение
      _wOwner : word = 0             // владелец изменений (по умолчанию lc_ModifyOwner_Def)
  ) : boolean;

  //----------------------------------------------------------------------------
  #doc
     Установить по буферу значение показателя типа Boolean
  #end
  function BuffSetBooleanValue(
  var _Buff   : Type$p_MTRepStruct;  // буфер записи структуры отчета
      _Value  : boolean;             // значение
      _wOwner : word = 0             // владелец изменений (по умолчанию lc_ModifyOwner_Def)
  ) : boolean;

  //----------------------------------------------------------------------------
  #doc
     Установить по буферу значение показателя типа Comp
  #end
  function BuffSetCompValue(
  var _Buff   : Type$p_MTRepStruct;  // буфер записи структуры отчета
      _Value  : comp;                // значение
      _wOwner : word = 0             // владелец изменений (по умолчанию lc_ModifyOwner_Def)
  ) : boolean;
  //#endregion ПОЛУЧЕНИЕ/УСТАНОВКА ДАННЫХ ПО БУФЕРУ
  //----------------------------------------------------------------------------

  //----------------------------------------------------------------------------
  //#region ПОЛУЧЕНИЕ ДАННЫХ ПО ПУТИ НА ВЕРШИНУ
  //----------------------------------------------------------------------------
  #doc
     Получить NRec показателя, найдя его по пути на вершину
  #end
  function GetNRecByPath(
    _sPath : string  // путь на вершину
  ) : comp;

  //----------------------------------------------------------------------------
  #doc
     Узнать является ли значение показателя "не определенным", найдя его по пути на вершину
  #end
  function GetIsNullValueByPath(
    _sPath : string  // путь на вершину
  ) : boolean;

  //----------------------------------------------------------------------------
  #doc
     Получить значение признака "Скрытая запись", найдя его по пути на вершину
  #end
  function GetIsHidenRecByPath(
    _sPath : string  // путь на вершину
  ) : boolean;
  //----------------------------------------------------------------------------
  #doc
     Получить значение признака "Скрытая запись", найдя его по пути на вершину (с учетом расположения в иерархии])
  #end
  function GetIsHidenRecInTreeByPath(
    _sPath : string  // путь на вершину
  ) : boolean;

  //----------------------------------------------------------------------------
  #doc
     Получить значение признака "Обязательный элемент в XML", найдя его по пути на вершину (с учетом расположения в иерархии])
  #end
  function GetIsRequiredInTreeByPath(
    _sPath : string  // путь на вершину
  ) : boolean;

  //----------------------------------------------------------------------------
  #doc
     Получить значение показателя типа String, найдя его по пути на вершину
  #end
  function GetStringValueByPath(
    _sPath : string  // путь на вершину
  ) : string;

  //----------------------------------------------------------------------------
  #doc
     Получить значение показателя типа Double, найдя его по пути на вершину
  #end
  function GetDoubleValueByPath(
    _sPath : string  // путь на вершину
  ) : double;

  //----------------------------------------------------------------------------
  #doc
     Получить значение показателя типа Date, найдя его по пути на вершину
  #end
  function GetDateValueByPath(
    _sPath : string  // путь на вершину
  ) : date;

  //----------------------------------------------------------------------------
  #doc
     Получить значение показателя типа DateTime, найдя его по пути на вершину
  #end
  function GetDateTimeValueByPath(
    _sPath : string  // путь на вершину
  ) : _DateTime;

  //----------------------------------------------------------------------------
  #doc
     Получить значение показателя типа Boolean, найдя его по пути на вершину
  #end
  function GetBooleanValueByPath(
    _sPath : string  // путь на вершину
  ) : boolean;

  //----------------------------------------------------------------------------
  #doc
     Получить значение показателя типа Comp, найдя его по пути на вершину
  #end
  function GetCompValueByPath(
    _sPath : string  // путь на вершину
  ) : comp;
  //#endregion ПОЛУЧЕНИЕ ДАННЫХ ПО ПУТИ НА ВЕРШИНУ
  //----------------------------------------------------------------------------

  //----------------------------------------------------------------------------
  //#region УСТАНОВКА ДАННЫХ ПО ПУТИ НА ВЕРШИНУ
  //----------------------------------------------------------------------------
  #doc
     Установить значение признака "Скрытая запись", найдя его по пути на вершину
  #end
  function SetIsHidenRecByPath(
    _sPath  : string;   // путь на вершину
    _Value  : boolean   // значение
  ) : boolean;

  //----------------------------------------------------------------------------
  #doc
     Установить значение показателя типа String, найдя его по пути на вершину
  #end
  function SetStringValueByPath(
    _sPath  : string;   // путь на вершину
    _Value  : string;   // значение
    _wOwner : word = 0  // владелец изменений (по умолчанию lc_ModifyOwner_Def)
  ) : boolean;

  //----------------------------------------------------------------------------
  #doc
     Установить значение показателя типа Double, найдя его по пути на вершину
  #end
  function SetDoubleValueByPath(
    _sPath  : string;   // путь на вершину
    _Value  : double;   // значение
    _wOwner : word = 0  // владелец изменений (по умолчанию lc_ModifyOwner_Def)
  ) : boolean;

  //----------------------------------------------------------------------------
  #doc
     Установить значение показателя типа Date, найдя его по пути на вершину
  #end
  function SetDateValueByPath(
    _sPath  : string;   // путь на вершину
    _Value  : date  ;   // значение
    _wOwner : word = 0  // владелец изменений (по умолчанию lc_ModifyOwner_Def)
  ) : boolean;

  //----------------------------------------------------------------------------
  #doc
     Установить значение показателя типа DateTime, найдя его по пути на вершину
  #end
  function SetDateTimeValueByPath(
    _sPath  : string;     // путь на вершину
    _Value  : _DateTime;  // значение
    _wOwner : word = 0    // владелец изменений (по умолчанию lc_ModifyOwner_Def)
  ) : boolean;

  //----------------------------------------------------------------------------
  #doc
     Установить значение показателя типа Boolean, найдя его по пути на вершину
  #end
  function SetBooleanValueByPath(
    _sPath  : string;   // путь на вершину
    _Value  : boolean;  // значение
    _wOwner : word = 0  // владелец изменений (по умолчанию lc_ModifyOwner_Def)
  ) : boolean;

  //----------------------------------------------------------------------------
  #doc
     Установить значение показателя типа Comp, найдя его по пути на вершину
  #end
  function SetCompValueByPath(
    _sPath  : string;   // путь на вершину
    _Value  : comp;     // значение
    _wOwner : word = 0  // владелец изменений (по умолчанию lc_ModifyOwner_Def)
  ) : boolean;
  //#endregion УСТАНОВКА ДАННЫХ ПО ПУТИ НА ВЕРШИНУ
  //----------------------------------------------------------------------------

  //----------------------------------------------------------------------------
  //#region ПОЛУЧЕНИЕ ИНФОРМАЦИИ ПО СТРУКТУРЕ
  //----------------------------------------------------------------------------
  #doc
     Получить количество вершин по пути на вершину
  #end
  function GetNodeCountByPath(
    _sPath : string  // путь на вершину
  ) : LongInt;
  //#endregion ПОЛУЧЕНИЕ ИНФОРМАЦИИ ПО СТРУКТУРЕ
  //----------------------------------------------------------------------------

  //----------------------------------------------------------------------------
  //#region КЛОНИРОВАНИЕ ДАННЫХ
  //----------------------------------------------------------------------------
  #doc
     Клонировать заданную вершину
  #end
  function CloneNode(
    _cParent : comp;    // ссылка на вышестоящий новой записи
    _sEtalon : string   // путь на эталонную вершину
  ) : comp;

  //----------------------------------------------------------------------------
  #doc
     Клонировать заданную вершину по пути на родительскую вершину
  #end
  function CloneNodeByPath(
    _sParent : string;  // путь на родительскую вершину
    _sEtalon : string   // путь на эталонную вершину
  ) : comp;
  //#endregion КЛОНИРОВАНИЕ ДАННЫХ
  //----------------------------------------------------------------------------

  //----------------------------------------------------------------------------
  //#region УДАЛЕНИЕ ДАННЫХ
  //----------------------------------------------------------------------------
  #doc
     Удалить вершину со всеми подчиненными записями по заданному NRec
  #end
  function DeleteNodeByNRec(
    _cNRec : comp  // ссылка на вершину
  ) : boolean;
  //----------------------------------------------------------------------------
  #doc
     Удалить вершину со всеми подчиненными записями по заданному пути
  #end
  function DeleteNodeByPath(
    _sPath : string  // путь на вершину
  ) : boolean;

  //----------------------------------------------------------------------------
  #doc
     Удалить множественные вершины со всеми подчиненными записями по заданному пути
  #end
  function DeleteMultyNodeByPath(
    _sPath : string  // путь на вершину
  ) : boolean;

  //----------------------------------------------------------------------------
  #doc
     Удалить лишние скрытые записи "XML таблицы"
  #end
  function DeleteTblExtraHidenRec(
    _sTblPath : string;  // путь на вершину таблицы
    _sRecNode : string   // наименование вершины записи таблицы
  ) : boolean;
  //#endregion УДАЛЕНИЕ ДАННЫХ
  //----------------------------------------------------------------------------

  //----------------------------------------------------------------------------
  //#region EVENT
  //----------------------------------------------------------------------------
  #doc
     Получить идентификатор станицы по пути в структуре
  #end
  Event procedure Event_GetPageIDByPath(
      _sPath   : string;  // путь на показатель
  var _sPageID : string   // ID страницы
  );

  //----------------------------------------------------------------------------
  #doc
     Запустить установку фокуса на заданное поле отчета
  #end
  Event procedure Event_RunSelectRepField(
      _sPath   : string   // путь на показатель
  );

  /*
  //----------------------------------------------------------------------------
  #doc
     Проверить инициализацию эталонной структуры отчета
  #end
  Event procedure Event_CheckInitEtalonRepStruct(
  var _sRunErr : string  // описание ошибки выполнения
  );
  */
  //#endregion EVENT
  //----------------------------------------------------------------------------

End; //#endregion ObjInterface
//******************************************************************************


//==============================================================================
VipInterface gzrModiRepStruct(gzr_BaseAbstractObj) implements IgzrModiRepStruct
#Licensed_Free;
Public:
  constructor Init;
  constructor InitBySession(
    _cRepSesID : comp;  // идентификатор сессии структуры отчета
    _cEtlSesID : comp   // идентификатор сессии эталонной структуры отчета
  );
  destructor  Done;
End;
//******************************************************************************


#endif//__gzrModiRepStruct_Vih__
