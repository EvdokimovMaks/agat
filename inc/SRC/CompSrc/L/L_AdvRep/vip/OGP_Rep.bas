procedure CreateBasFile(FBasName: string);
{
  if not Fxla.OpenFile(FBasName, stCreate)
    Exit;

  Fxla.WriteLn('Attribute VB_Name = "Процедуры_формирования_отчетов"');
  Fxla.WriteLn('Dim NewSheet As Variant');
  Fxla.WriteLn('');
  Fxla.WriteLn('Function С_Учетом_Отгрузок(IsPlan As Boolean) As Boolean');
  Fxla.WriteLn('    Dim VarCell As Range');
  Fxla.WriteLn('    If IsPlan Then');
  Fxla.WriteLn('        Set VarCell = Range("O2")');
  Fxla.WriteLn('    Else');
  Fxla.WriteLn('        Set VarCell = Range("U2")');
  Fxla.WriteLn('    End If');
  Fxla.WriteLn('    If IsEmpty(VarCell) Then');
  Fxla.WriteLn('        С_Учетом_Отгрузок = True');
  Fxla.WriteLn('    Else');
  Fxla.WriteLn('        С_Учетом_Отгрузок = VarCell.Value');
  Fxla.WriteLn('    End If');
  Fxla.WriteLn('End Function');
  Fxla.WriteLn('');
  Fxla.WriteLn('Function ОжидаемаяОплатаПлан(Column_5, Column_7, Column_8, Column_10, Column_11, Column_12 As Range) As Double');
  Fxla.WriteLn('Dim TmpSum As Double');
  Fxla.WriteLn('      ');
  Fxla.WriteLn('    If IsEmpty(Column_5) Then');
  Fxla.WriteLn('        ОжидаемаяОплатаПлан = Empty');
  Fxla.WriteLn('        Exit Function');
  Fxla.WriteLn('    End If');
  Fxla.WriteLn('');
  Fxla.WriteLn('    TmpSum = Column_5.Value '' плановая сумма платежей в отчетном периоде');
  Fxla.WriteLn('    If С_Учетом_Отгрузок(True) Then '' с учетом отгрузок и оплат предыдущего периода');
  Fxla.WriteLn('        Dim k1 As Double  '' k1 - разница между платежами и отгрузками');
  Fxla.WriteLn('        k1 = Column_10.Value - Column_8.Value');
  Fxla.WriteLn('        If (k1 < 0) Then '' имеет место недоплата');
  Fxla.WriteLn('            '' ожидаемая оплата = план + долг по отгрузке + реструктурированные долги');
  Fxla.WriteLn('            TmpSum = TmpSum + (-k1) + Column_11.Value - Column_12.Value');
  Fxla.WriteLn('        Else '' в предыдущем периоде оплатили больше, чем отгрузили');
  Fxla.WriteLn('            '' если платежи превышают план, то эту разницу учесть в текущем плане');
  Fxla.WriteLn('            If (Column_10.Value - Column_7.Value) > 0 Then');
  Fxla.WriteLn('                TmpSum = TmpSum - (Column_10.Value - Column_7.Value)');
  Fxla.WriteLn('            End If');
  Fxla.WriteLn('        End If');
  Fxla.WriteLn('    Else');
  Fxla.WriteLn('        TmpSum = TmpSum + Column_11.Value');
  Fxla.WriteLn('    End If');
  Fxla.WriteLn('');
  Fxla.WriteLn('    If TmpSum < 0 Then');
  Fxla.WriteLn('        TmpSum = 0');
  Fxla.WriteLn('    End If');
  Fxla.WriteLn('');
  Fxla.WriteLn('    ОжидаемаяОплатаПлан = TmpSum');
  Fxla.WriteLn('');
  Fxla.WriteLn('End Function');
  Fxla.WriteLn('');
  Fxla.WriteLn('Function ОжидаемаяОплатаСправка(Column_3, Column_11, Column_12, Column_13, Column_14, Column_15 As Range) As Double ');
  Fxla.WriteLn('Dim TmpSum As Double');
  Fxla.WriteLn('    ');
  Fxla.WriteLn('    If IsEmpty(Column_3) Then');
  Fxla.WriteLn('        ОжидаемаяОплатаСправка = Empty');
  Fxla.WriteLn('        Exit Function');
  Fxla.WriteLn('    End If');
  Fxla.WriteLn('');
  Fxla.WriteLn('    TmpSum = Column_3.Value '' плановая сумма платежей в отчетном периоде');
  Fxla.WriteLn('');
  Fxla.WriteLn('    If С_Учетом_Отгрузок(False) Then '' с учетом отгрузок и оплат предыдущего периода');
  Fxla.WriteLn('        Dim k1 As Double  '' k1 - разница между платежами и отгрузками');
  Fxla.WriteLn('        k1 = Column_13.Value - Column_12.Value');
  Fxla.WriteLn('        If (k1 < 0) Then '' имеет место недоплата за предыдущий период');
  Fxla.WriteLn('            '' ожидаемая оплата = план + долг по отгрузке + реструктурированные долги');
  Fxla.WriteLn('            TmpSum = TmpSum + (-k1) + Column_14.Value - Column_15.Value');
  Fxla.WriteLn('        Else '' оплатили больше, чем отгрузили');
  Fxla.WriteLn('            '' если платежи превышают план, то эту разницу учесть в текущем плане');
  Fxla.WriteLn('            If (Column_13.Value - Column_11.Value) > 0 Then');
  Fxla.WriteLn('                TmpSum = TmpSum - (Column_13.Value - Column_11.Value)');
  Fxla.WriteLn('            End If');
  Fxla.WriteLn('        End If');
  Fxla.WriteLn('    Else');
  Fxla.WriteLn('        TmpSum = TmpSum + Column_14.Value');
  Fxla.WriteLn('    End If');
  Fxla.WriteLn('');
  Fxla.WriteLn('    If TmpSum < 0 Then');
  Fxla.WriteLn('        TmpSum = 0');
  Fxla.WriteLn('    End If');
  Fxla.WriteLn('');
  Fxla.WriteLn('    ОжидаемаяОплатаСправка = TmpSum');
  Fxla.WriteLn('');
  Fxla.WriteLn('End Function');
  Fxla.WriteLn('');
  Fxla.WriteLn('Function В_Счет_Плана_Справка(Column_3, Column_4, Column_6, Column_7, Column_16 As Range) As Double');
  Fxla.WriteLn('Dim TmpSum As Double');
  Fxla.WriteLn('    ');
  Fxla.WriteLn('    ');
  Fxla.WriteLn('    If IsEmpty(Column_4) Then');
  Fxla.WriteLn('        В_Счет_Плана_Справка = Empty');
  Fxla.WriteLn('        Exit Function');
  Fxla.WriteLn('    End If');
  Fxla.WriteLn('   ');
  Fxla.WriteLn('    TmpSum = Column_6.Value');
  Fxla.WriteLn('    If С_Учетом_Отгрузок(False) And (Column_16.Value >= 0) Then');
  Fxla.WriteLn('    '' оплата нераспределенными по отгрузкам платежами');
  Fxla.WriteLn('    '' нереструктурированных долгов за прошлые периоды');
  Fxla.WriteLn('        If (Column_7.Value - Column_16.Value) > 0 Then');
  Fxla.WriteLn('        '' оставшуюся сумму относим в счет плана');
  Fxla.WriteLn('            TmpSum = TmpSum + Column_7.Value - Column_16.Value');
  Fxla.WriteLn('        End If');
  Fxla.WriteLn('    End If');
  Fxla.WriteLn('    ');
  Fxla.WriteLn('    '' нельзя в счет плана относить больше, чем сам план');
  Fxla.WriteLn('    If TmpSum > Column_3.Value Then');
  Fxla.WriteLn('        TmpSum = Column_3.Value');
  Fxla.WriteLn('    End If');
  Fxla.WriteLn('    ');
  Fxla.WriteLn('    '' нельзя в счет плана относить больше, чем факт оплаты');
  Fxla.WriteLn('    If TmpSum > Column_4.Value Then');
  Fxla.WriteLn('        TmpSum = Column_4.Value');
  Fxla.WriteLn('    End If');
  Fxla.WriteLn('');
  Fxla.WriteLn('    В_Счет_Плана_Справка = TmpSum');
  Fxla.WriteLn('');
  Fxla.WriteLn('End Function');
  Fxla.WriteLn('');
  Fxla.WriteLn('Sub Создать_Отчет_План(RepDate As Date, ReportType As Byte, _');
  Fxla.WriteLn('    OrgName As String, NumOfRows As Long)');
  Fxla.WriteLn('''');
  Fxla.WriteLn(''' DoReportFormat1 Макрос форматирования отчета "План поступления/расходования ДС"');
  Fxla.WriteLn(''' Макрос записан 27.12.2002 (Юрий Жданович)');
  Fxla.WriteLn('''');
  Fxla.WriteLn('');
  Fxla.WriteLn('''');
  Fxla.WriteLn('    ');
  Fxla.WriteLn('    Sheets("Report data").Calculate');
  Fxla.WriteLn('    Range("A1").FormulaR1C1 = ""');
  Fxla.WriteLn('    Range("A2").FormulaR1C1 = ""');
  Fxla.WriteLn('    Cells.Font.Size = 8');
  Fxla.WriteLn('    Columns("C:C").NumberFormat = "#,##0.000"');
  Fxla.WriteLn('    Columns("E:E").NumberFormat = "#,##0.00"');
  Fxla.WriteLn('    Columns("A:A").HorizontalAlignment = xlCenter');
  Fxla.WriteLn('    Columns("D:D").HorizontalAlignment = xlCenter');
  Fxla.WriteLn('    Range("D1:D6").HorizontalAlignment = xlLeft');
  Fxla.WriteLn('    Range("E4:E12").NumberFormat = "General"');
  Fxla.WriteLn('    Rows("1:6").Font.Size = 9');
  Fxla.WriteLn('    Range("D1").FormulaR1C1 = """Утверждаю"""');
  Fxla.WriteLn('    If (ReportType Mod 2 = 1) Then');
  Fxla.WriteLn('        Range("D2").FormulaR1C1 = "Руководитель"');
  Fxla.WriteLn('        Range("D3").FormulaR1C1 = OrgName');
  Fxla.WriteLn('        Range("A7").FormulaR1C1 = "План поступления денежных средств"');
  Fxla.WriteLn('        Range("A8").FormulaR1C1 = "за поставленную продукцию и оказанные услуги"');
  Fxla.WriteLn('    Else');
  Fxla.WriteLn('        Range("D2").FormulaR1C1 = "Руководитель"');
  Fxla.WriteLn('        Range("D3").FormulaR1C1 = OrgName');
  Fxla.WriteLn('        Range("A7").FormulaR1C1 = "План расходования денежных средств"');
  Fxla.WriteLn('        Range("A8").FormulaR1C1 = "за поставленную продукцию и оказанные услуги " + OrgName');
  Fxla.WriteLn('    End If');
  Fxla.WriteLn('    Range("D4").FormulaR1C1 = """___""_____________ 200_г."');
  Fxla.WriteLn('    Range("A9").NumberFormat = "mmmm yyyy ""года"""');
  Fxla.WriteLn('    Range("A9").FormulaR1C1 = RepDate');
  Fxla.WriteLn('    Range("A11").FormulaR1C1 = "Номер" & Chr(10) & "п/п"');
  Fxla.WriteLn('    Range("B11").FormulaR1C1 = "Продукт, договор, потребитель"');
  Fxla.WriteLn('    Range("C11").FormulaR1C1 = "Количество" & Chr(10) & "по плану"');
  Fxla.WriteLn('    Range("D11").FormulaR1C1 = "Единица" & Chr(10) & "измерения"');
  Fxla.WriteLn('    Range("E11").FormulaR1C1 = "Ожидаемая оплата" & Chr(10) & "(руб)"');
  Fxla.WriteLn('    Range("F11").FormulaR1C1 = "Условия оплаты по договору"');
  Fxla.WriteLn('    Range("A12").FormulaR1C1 = "1"');
  Fxla.WriteLn('    Range("B12").FormulaR1C1 = "2"');
  Fxla.WriteLn('    Range("A12:B12").Select');
  Fxla.WriteLn('    Selection.AutoFill Destination:=Range("A12:F12"), Type:=xlFillDefault');
  Fxla.WriteLn('    Rows("7:9").Font.Size = 11');
  Fxla.WriteLn('    Range("A7:F7").Merge');
  Fxla.WriteLn('    Range("A8:F8").Merge');
  Fxla.WriteLn('    Range("A9:F9").Merge');
  Fxla.WriteLn('    Range("A7:F9").HorizontalAlignment = xlCenter');
  Fxla.WriteLn('    Range("A7:F7").Font.Bold = True');
  Fxla.WriteLn('    Rows("8:9").Font.Italic = True');
  Fxla.WriteLn('    Rows("11:12").Font.Size = 9');
  Fxla.WriteLn('    Rows("11:12").Font.Bold = True');
  Fxla.WriteLn('    Rows("11:12").HorizontalAlignment = xlCenter');
  Fxla.WriteLn('    Rows("11:11").Select');
  Fxla.WriteLn('    With Selection');
  Fxla.WriteLn('        .RowHeight = 36.75');
  Fxla.WriteLn('        .HorizontalAlignment = xlCenter');
  Fxla.WriteLn('        .VerticalAlignment = xlCenter');
  Fxla.WriteLn('        .WrapText = True');
  Fxla.WriteLn('    End With');
  Fxla.WriteLn('    Columns("A:A").ColumnWidth = 5.29');
  Fxla.WriteLn('    Columns("B:B").ColumnWidth = 38.86');
  Fxla.WriteLn('    Columns("C:C").ColumnWidth = 11.75');
  Fxla.WriteLn('    Columns("D:F").EntireColumn.AutoFit');
  Fxla.WriteLn('    Range("A11:F12").Select');
  Fxla.WriteLn('    With Selection.Borders(xlInsideVertical)');
  Fxla.WriteLn('        .LineStyle = xlContinuous');
  Fxla.WriteLn('        .Weight = xlThin');
  Fxla.WriteLn('    End With');
  Fxla.WriteLn('    Range("A11:F12").Select');
  Fxla.WriteLn('    With Selection.Borders(xlEdgeTop)');
  Fxla.WriteLn('        .LineStyle = xlContinuous');
  Fxla.WriteLn('        .Weight = xlMedium');
  Fxla.WriteLn('    End With');
  Fxla.WriteLn('    With Selection.Borders(xlEdgeBottom)');
  Fxla.WriteLn('        .LineStyle = xlContinuous');
  Fxla.WriteLn('        .Weight = xlMedium');
  Fxla.WriteLn('    End With');
  Fxla.WriteLn('    With Selection.Borders(xlInsideHorizontal)');
  Fxla.WriteLn('        .LineStyle = xlContinuous');
  Fxla.WriteLn('        .Weight = xlMedium');
  Fxla.WriteLn('    End With');
  Fxla.WriteLn('    Range("A11:A12").Select');
  Fxla.WriteLn('    With Selection.Borders(xlEdgeLeft)');
  Fxla.WriteLn('        .LineStyle = xlContinuous');
  Fxla.WriteLn('        .Weight = xlMedium');
  Fxla.WriteLn('    End With');
  Fxla.WriteLn('    Range("F11:F12").Select');
  Fxla.WriteLn('    With Selection.Borders(xlEdgeRight)');
  Fxla.WriteLn('        .LineStyle = xlContinuous');
  Fxla.WriteLn('        .Weight = xlMedium');
  Fxla.WriteLn('    End With');
  Fxla.WriteLn('''   перенос данных');
  Fxla.WriteLn('    Dim i, j As Long');
  Fxla.WriteLn('    For i = 1 To NumOfRows');
  Fxla.WriteLn('        ''№ п/п');
  Fxla.WriteLn('        ''Продукт, договор, организация');
  Fxla.WriteLn('        For j = 1 To 2');
  Fxla.WriteLn('            If Not IsEmpty(Sheets("Report data").Cells(4 + i, j)) Then');
  Fxla.WriteLn('                Cells(12 + i, j).FormulaR1C1 = "=''Report data''!R[-8]C"');
  Fxla.WriteLn('            End If');
  Fxla.WriteLn('        Next j');
  Fxla.WriteLn('        ''Количество по плану');
  Fxla.WriteLn('        If Not IsEmpty(Sheets("Report data").Cells(4 + i, 4)) Then');
  Fxla.WriteLn('            If С_Учетом_Отгрузок(True) Then '' с учетом отгрузок и оплат предыдущего периода');
  Fxla.WriteLn('                Cells(12 + i, 3).FormulaR1C1 = _');
  Fxla.WriteLn('                    "=''Report data''!R[-8]C[1]-''Report data''!R[-8]C[6]"');
  Fxla.WriteLn('            Else');
  Fxla.WriteLn('                Cells(12 + i, 3).FormulaR1C1 = _');
  Fxla.WriteLn('                    "=''Report data''!R[-8]C[1]-''Report data''!R[-8]C[3]"');
  Fxla.WriteLn('            End If');
  Fxla.WriteLn('        End If');
  Fxla.WriteLn('        ''Единица измерения');
  Fxla.WriteLn('        If Not IsEmpty(Sheets("Report data").Cells(4 + i, 3)) Then');
  Fxla.WriteLn('            Cells(12 + i, 4).FormulaR1C1 = "=''Report data''!R[-8]C[-1]"');
  Fxla.WriteLn('        End If');
  Fxla.WriteLn('        ''Ожидаемая оплата и условия оплаты по договору');
  Fxla.WriteLn('        For j = 13 To 14');
  Fxla.WriteLn('            If Not IsEmpty(Sheets("Report data").Cells(4 + i, j)) Then');
  Fxla.WriteLn('                Cells(12 + i, j - 8).FormulaR1C1 = "=''Report data''!R[-8]C[8]"');
  Fxla.WriteLn('            End If');
  Fxla.WriteLn('        Next j');
  Fxla.WriteLn('');
  Fxla.WriteLn('        If (Sheets("Report data").Cells(4 + i, 1) = "Итого по:") Then');
  Fxla.WriteLn('            Rows(12 + i).Font.Bold = True');
  Fxla.WriteLn('            Cells(12 + i, 1).HorizontalAlignment = xlRight');
  Fxla.WriteLn('            If (i = NumOfRows) Then');
  Fxla.WriteLn('                Cells(12 + i, 1).FormulaR1C1 = ""');
  Fxla.WriteLn('            Else');
  Fxla.WriteLn('                Cells(12 + i, 2).Font.Bold = False');
  Fxla.WriteLn('                Cells(12 + i, 2).Font.Italic = True');
  Fxla.WriteLn('            End If');
  Fxla.WriteLn('        Else');
  Fxla.WriteLn('            Cells(12 + i, 1).HorizontalAlignment = xlCenter');
  Fxla.WriteLn('        End If');
  Fxla.WriteLn('    Next i');
  Fxla.WriteLn('');
  Fxla.WriteLn('    For i = 1 To 4');
  Fxla.WriteLn('        Range(Cells(i, 4), Cells(i, 6)).Merge');
  Fxla.WriteLn('        Range(Cells(i, 4), Cells(i, 6)).HorizontalAlignment = xlLeft');
  Fxla.WriteLn('    Next i');
  Fxla.WriteLn('    ');
  Fxla.WriteLn('    Cells.EntireColumn.AutoFit');
  Fxla.WriteLn('    Range("A1").Select');
  Fxla.WriteLn('End Sub');
  Fxla.WriteLn('');
  Fxla.WriteLn('Sub Создать_Отчет_Справка(RepDate1, RepDate2, RepDate3, RepDate4 As String, _');
  Fxla.WriteLn('    ReportType As Byte, NumOfRows As Long)');
  Fxla.WriteLn('''');
  Fxla.WriteLn(''' DoReportFormat2 Макрос форматирования отчета "Справка поступления/расходования ДС"');
  Fxla.WriteLn(''' Макрос записан 14.01.2003 (Юрий Жданович)');
  Fxla.WriteLn('''');
  Fxla.WriteLn('');
  Fxla.WriteLn('''');
  Fxla.WriteLn('    ');
  Fxla.WriteLn('    Sheets("Report data").Calculate');
  Fxla.WriteLn('    Cells.Font.Size = 8');
  Fxla.WriteLn('    Rows("3:5").Font.Size = 9');
  Fxla.WriteLn('    Rows("3:5").Font.Bold = True');
  Fxla.WriteLn('    Range("A5").FormulaR1C1 = "1"');
  Fxla.WriteLn('    Range("B5").FormulaR1C1 = "2"');
  Fxla.WriteLn('    Range("A5:B5").Select');
  Fxla.WriteLn('    Selection.AutoFill Destination:=Range("A5:K5"), Type:=xlFillDefault');
  Fxla.WriteLn('    Dim TmpS(3) As String');
  Fxla.WriteLn('    Range("A1").Select');
  Fxla.WriteLn('    If (ReportType Mod 2 = 1) Then');
  Fxla.WriteLn('        TmpS(1) = "поступлении"');
  Fxla.WriteLn('        TmpS(2) = "потребителя"');
  Fxla.WriteLn('        TmpS(3) = "Поступление"');
  Fxla.WriteLn('    Else');
  Fxla.WriteLn('        TmpS(1) = "расходовании"');
  Fxla.WriteLn('        TmpS(2) = "поставщика"');
  Fxla.WriteLn('        TmpS(3) = "Расходование"');
  Fxla.WriteLn('    End If');
  Fxla.WriteLn('    ActiveCell.FormulaR1C1 = _');
  Fxla.WriteLn('        "Справка о " + TmpS(1) + " денежных средств за " + RepDate1 + _');
  Fxla.WriteLn('        " года по состоянию на " + RepDate2');
  Fxla.WriteLn('    Selection.Font.Bold = True');
  Fxla.WriteLn('    Selection.Font.Size = 11');
  Fxla.WriteLn('    Range("A3").FormulaR1C1 = "Номер" & Chr(10) & "п/п"');
  Fxla.WriteLn('    Range("B3").FormulaR1C1 = "Наименование продукта и " + TmpS(2)');
  Fxla.WriteLn('    Range("C3").FormulaR1C1 = TmpS(3) + " денежных средств"');
  Fxla.WriteLn('    Range("C4").FormulaR1C1 = "план"');
  Fxla.WriteLn('    Range("D4").FormulaR1C1 = "факт всего"');
  Fxla.WriteLn('    Range("E4").FormulaR1C1 = "в т.ч. в счет вып.плана"');
  Fxla.WriteLn('    Range("F4").FormulaR1C1 = "% вып. плана"');
  Fxla.WriteLn('    Range("A3:A4").Merge');
  Fxla.WriteLn('    Range("C3:F3").Merge');
  Fxla.WriteLn('    Range("B3:B4").Merge');
  Fxla.WriteLn('    Range("G3").FormulaR1C1 = "Просроченная задолженность по условиям договора"');
  Fxla.WriteLn('    Range("G3:G4").Merge');
  Fxla.WriteLn('    Range("H3").FormulaR1C1 = "В т.ч. возникшая"');
  Fxla.WriteLn('    Range("H4").FormulaR1C1 = "до " + RepDate3');
  Fxla.WriteLn('    Range("I4").FormulaR1C1 = "с " + RepDate3 + Chr(10) + " по " + RepDate4');
  Fxla.WriteLn('    Range("J4").FormulaR1C1 = "после " + RepDate4');
  Fxla.WriteLn('    Range("H3:J3").Merge');
  Fxla.WriteLn('    Range("A1:K1").Merge');
  Fxla.WriteLn('    Range("K3").FormulaR1C1 = _');
  Fxla.WriteLn('        "В т.ч. задолженность по неисполненным авансовым платежам"');
  Fxla.WriteLn('    Range("K3:K4").Merge');
  Fxla.WriteLn('');
  Fxla.WriteLn('    Range("A1:K5").Select');
  Fxla.WriteLn('    With Selection');
  Fxla.WriteLn('        .HorizontalAlignment = xlCenter');
  Fxla.WriteLn('        .VerticalAlignment = xlCenter');
  Fxla.WriteLn('        .WrapText = True');
  Fxla.WriteLn('        .Orientation = 0');
  Fxla.WriteLn('        .AddIndent = False');
  Fxla.WriteLn('        .IndentLevel = 0');
  Fxla.WriteLn('        .ShrinkToFit = False');
  Fxla.WriteLn('        .ReadingOrder = xlContext');
  Fxla.WriteLn('    End With');
  Fxla.WriteLn('    Rows("1:5").HorizontalAlignment = xlCenter');
  Fxla.WriteLn('    Range("A3:K5").Select');
  Fxla.WriteLn('    Selection.Borders(xlDiagonalDown).LineStyle = xlNone');
  Fxla.WriteLn('    Selection.Borders(xlDiagonalUp).LineStyle = xlNone');
  Fxla.WriteLn('    With Selection.Borders(xlEdgeLeft)');
  Fxla.WriteLn('        .LineStyle = xlContinuous');
  Fxla.WriteLn('        .Weight = xlThin');
  Fxla.WriteLn('        .ColorIndex = xlAutomatic');
  Fxla.WriteLn('    End With');
  Fxla.WriteLn('    With Selection.Borders(xlEdgeTop)');
  Fxla.WriteLn('        .LineStyle = xlContinuous');
  Fxla.WriteLn('        .Weight = xlThin');
  Fxla.WriteLn('        .ColorIndex = xlAutomatic');
  Fxla.WriteLn('    End With');
  Fxla.WriteLn('    With Selection.Borders(xlEdgeBottom)');
  Fxla.WriteLn('        .LineStyle = xlContinuous');
  Fxla.WriteLn('        .Weight = xlThin');
  Fxla.WriteLn('        .ColorIndex = xlAutomatic');
  Fxla.WriteLn('    End With');
  Fxla.WriteLn('    With Selection.Borders(xlEdgeRight)');
  Fxla.WriteLn('        .LineStyle = xlContinuous');
  Fxla.WriteLn('        .Weight = xlThin');
  Fxla.WriteLn('        .ColorIndex = xlAutomatic');
  Fxla.WriteLn('    End With');
  Fxla.WriteLn('    With Selection.Borders(xlInsideVertical)');
  Fxla.WriteLn('        .LineStyle = xlContinuous');
  Fxla.WriteLn('        .Weight = xlThin');
  Fxla.WriteLn('        .ColorIndex = xlAutomatic');
  Fxla.WriteLn('    End With');
  Fxla.WriteLn('    With Selection.Borders(xlInsideHorizontal)');
  Fxla.WriteLn('        .LineStyle = xlContinuous');
  Fxla.WriteLn('        .Weight = xlThin');
  Fxla.WriteLn('        .ColorIndex = xlAutomatic');
  Fxla.WriteLn('    End With');
  Fxla.WriteLn('    Range("A5:K5,A3:A4,B3:B4,C3:F3,G3:G4,H3:H4,I3:K3").Select');
  Fxla.WriteLn('    With Selection.Borders(xlEdgeTop)');
  Fxla.WriteLn('        .LineStyle = xlContinuous');
  Fxla.WriteLn('        .Weight = xlMedium');
  Fxla.WriteLn('        .ColorIndex = xlAutomatic');
  Fxla.WriteLn('    End With');
  Fxla.WriteLn('    Range("A5:K5").Select');
  Fxla.WriteLn('    With Selection.Borders(xlEdgeBottom)');
  Fxla.WriteLn('        .LineStyle = xlContinuous');
  Fxla.WriteLn('        .Weight = xlMedium');
  Fxla.WriteLn('        .ColorIndex = xlAutomatic');
  Fxla.WriteLn('    End With');
  Fxla.WriteLn('    Range("A3:A4,A5").Select');
  Fxla.WriteLn('    With Selection.Borders(xlEdgeLeft)');
  Fxla.WriteLn('        .LineStyle = xlContinuous');
  Fxla.WriteLn('        .Weight = xlMedium');
  Fxla.WriteLn('        .ColorIndex = xlAutomatic');
  Fxla.WriteLn('    End With');
  Fxla.WriteLn('');
  Fxla.WriteLn('    Range("I3:K3,K4:K5").Select');
  Fxla.WriteLn('    With Selection.Borders(xlEdgeRight)');
  Fxla.WriteLn('        .LineStyle = xlContinuous');
  Fxla.WriteLn('        .Weight = xlMedium');
  Fxla.WriteLn('        .ColorIndex = xlAutomatic');
  Fxla.WriteLn('    End With');
  Fxla.WriteLn('');
  Fxla.WriteLn('''   перенос данных');
  Fxla.WriteLn('    Dim i, j As Long');
  Fxla.WriteLn('    For i = 1 To NumOfRows');
  Fxla.WriteLn('        For j = 1 To 5');
  Fxla.WriteLn('            If Not IsEmpty(Sheets("Report data").Cells(4 + i, j)) Then');
  Fxla.WriteLn('                Cells(5 + i, j).FormulaR1C1 = "=''Report data''!R[-1]C"');
  Fxla.WriteLn('            End If');
  Fxla.WriteLn('        Next j');
  Fxla.WriteLn('        Range(Cells(5 + i, 3), Cells(5 + i, 11)).NumberFormat = "#,##0.00"');
  Fxla.WriteLn('        Cells(5 + i, 6).NumberFormat = "0.00%"');
  Fxla.WriteLn('        If Not IsEmpty(Sheets("Report data").Cells(4 + i, 3)) Then');
  Fxla.WriteLn('            Cells(5 + i, 5).FormulaR1C1 = "=''Report data''!R[-1]C[3]"');
  Fxla.WriteLn('            If (Cells(5 + i, 3).Value < 0.000001) Then');
  Fxla.WriteLn('                Cells(5 + i, 6).FormulaR1C1 = "0"');
  Fxla.WriteLn('            Else');
  Fxla.WriteLn('                Cells(5 + i, 6).FormulaR1C1 = "=RC[-1]/RC[-3]"');
  Fxla.WriteLn('            End If');
  Fxla.WriteLn('            Cells(5 + i, 7).FormulaR1C1 = "=''Report data''!R[-1]C[3]"');
  Fxla.WriteLn('            Range(Cells(5 + i, 8), Cells(5 + i, 11)).FormulaR1C1 = "=''Report data''!R[-1]C[9]"');
  Fxla.WriteLn('        End If');
  Fxla.WriteLn('');
  Fxla.WriteLn('        If (Sheets("Report data").Cells(4 + i, 1) = "Итого по:") Then');
  Fxla.WriteLn('            Rows(5 + i).Font.Bold = True');
  Fxla.WriteLn('            Cells(5 + i, 1).HorizontalAlignment = xlRight');
  Fxla.WriteLn('            If (i = NumOfRows) Then');
  Fxla.WriteLn('                Cells(5 + i, 1).FormulaR1C1 = ""');
  Fxla.WriteLn('            Else');
  Fxla.WriteLn('                Cells(5 + i, 2).Font.Bold = False');
  Fxla.WriteLn('                Cells(5 + i, 2).Font.Italic = True');
  Fxla.WriteLn('            End If');
  Fxla.WriteLn('        Else');
  Fxla.WriteLn('            Cells(5 + i, 1).HorizontalAlignment = xlCenter');
  Fxla.WriteLn('        End If');
  Fxla.WriteLn('    Next i');
  Fxla.WriteLn('');
  Fxla.WriteLn('    Cells.EntireColumn.AutoFit');
  Fxla.WriteLn('    Range("F:F").ColumnWidth = 7');
  Fxla.WriteLn('    Range("C:E,H:J").ColumnWidth = 12');
  Fxla.WriteLn('    Range("G:G,K:K").ColumnWidth = 15');
  Fxla.WriteLn('    Range("A1").Activate');
  Fxla.WriteLn('End Sub');
  Fxla.WriteLn('');
  Fxla.WriteLn('Sub Создать_Лист_По_Имени(SheetName As String)');
  Fxla.WriteLn('    Set NewSheet = Sheets.Add');
  Fxla.WriteLn('    NewSheet.Name = SheetName');
  Fxla.WriteLn('    NewSheet.Select');
  Fxla.WriteLn('End Sub');
  Fxla.WriteLn('');
  Fxla.WriteLn('Sub Создать_Лист_С_Данными_Для_Справки(VidPlanSum As Byte)');
  Fxla.WriteLn('');
  Fxla.WriteLn('    Set NewSheet = Sheets.Add');
  Fxla.WriteLn('    NewSheet.Name = "Report data"');
  Fxla.WriteLn('    NewSheet.Select');
  Fxla.WriteLn('    Cells.Font.Size = 8');
  Fxla.WriteLn('    Range("U1").FormulaR1C1 = "С учетом отгрузок"');
  Fxla.WriteLn('    Range("U2").FormulaR1C1 = VidPlanSum <> 1');
  Fxla.WriteLn('    Range("A1").FormulaR1C1 = "№" & Chr(10) & "п/п"');
  Fxla.WriteLn('    Range("A1:A3").Merge');
  Fxla.WriteLn('    Range("B1").FormulaR1C1 = "Продукт, договор, организация"');
  Fxla.WriteLn('    Range("B1:B3").Merge');
  Fxla.WriteLn('    Range("C1").FormulaR1C1 = "Отчетный период"');
  Fxla.WriteLn('    Range("C1:I1").Merge');
  Fxla.WriteLn('    Range("C2").FormulaR1C1 = "План"');
  Fxla.WriteLn('    Range("C2:C3").Merge');
  Fxla.WriteLn('    Range("D2").FormulaR1C1 = "Оплачено"');
  Fxla.WriteLn('    Range("D2:H2").Merge');
  Fxla.WriteLn('    Range("D3").FormulaR1C1 = "Всего"');
  Fxla.WriteLn('    Range("E3").FormulaR1C1 = "Отгрузок" & Chr(10) & "предыдущих" & Chr(10) & "периодов"');
  Fxla.WriteLn('    Range("F3").FormulaR1C1 = "Других" & Chr(10) & "отгрузок"');
  Fxla.WriteLn('    Range("G3").FormulaR1C1 = "Нераспределенные" & Chr(10) & "платежи"');
  Fxla.WriteLn('    Range("H3").FormulaR1C1 = "В счет плана"');
  Fxla.WriteLn('    Range("I2").FormulaR1C1 = "Ожидаемая" & Chr(10) & "оплата"');
  Fxla.WriteLn('    Range("I2:I3").Merge');
  Fxla.WriteLn('    Range("J1").FormulaR1C1 = "Просроченная" & Chr(10) & "задолженность"');
  Fxla.WriteLn('    Range("J1:J3").Merge');
  Fxla.WriteLn('    Range("K1").FormulaR1C1 = "Период до начала отчетного периода"');
  Fxla.WriteLn('    Range("K1:P1").Merge');
  Fxla.WriteLn('    Range("K2").FormulaR1C1 = "План"');
  Fxla.WriteLn('    Range("K2:K3").Merge');
  Fxla.WriteLn('    Range("L2").FormulaR1C1 = "Отгружено"');
  Fxla.WriteLn('    Range("L2:L3").Merge');
  Fxla.WriteLn('    Range("M2").FormulaR1C1 = "Оплачено"');
  Fxla.WriteLn('    Range("M2:M3").Merge');
  Fxla.WriteLn('    Range("N2").FormulaR1C1 = "Реструктурированные долги"');
  Fxla.WriteLn('    Range("N2:O2").Merge');
  Fxla.WriteLn('    Range("N3").FormulaR1C1 = "Оплата в отчетном" & Chr(10) & "периоде"');
  Fxla.WriteLn('    Range("O3").FormulaR1C1 = "Оплата за отчетным" & Chr(10) & "периодом"');
  Fxla.WriteLn('    Range("P2").FormulaR1C1 = "Оставшийся" & Chr(10) & "нереструктурированный" & Chr(10) & "долг"');
  Fxla.WriteLn('    Range("P2:P3").Merge');
  Fxla.WriteLn('    Range("Q1").FormulaR1C1 = "Просроченная" & Chr(10) & "задолженность"');
  Fxla.WriteLn('    Range("Q1:S2").Merge');
  Fxla.WriteLn('    Range("Q3").FormulaR1C1 = "До"');
  Fxla.WriteLn('    Range("R3").FormulaR1C1 = "С По"');
  Fxla.WriteLn('    Range("S3").FormulaR1C1 = "После"');
  Fxla.WriteLn('    Range("T1").FormulaR1C1 = "Задолженность" & Chr(10) & "по неисполненным" & Chr(10) & "авансовым платежам"');
  Fxla.WriteLn('    Range("T1:T3").Merge');
  Fxla.WriteLn('    Range("A4").FormulaR1C1 = "1"');
  Fxla.WriteLn('    Range("B4").FormulaR1C1 = "2"');
  Fxla.WriteLn('    Range("A4:B4").Select');
  Fxla.WriteLn('    Selection.AutoFill Destination:=Range("A4:T4"), Type:=xlFillDefault');
  Fxla.WriteLn('    Range("A1:T4").Select');
  Fxla.WriteLn('    Selection.Borders(xlDiagonalDown).LineStyle = xlNone');
  Fxla.WriteLn('    Selection.Borders(xlDiagonalUp).LineStyle = xlNone');
  Fxla.WriteLn('    With Selection.Borders(xlEdgeLeft)');
  Fxla.WriteLn('        .LineStyle = xlContinuous');
  Fxla.WriteLn('        .Weight = xlMedium');
  Fxla.WriteLn('        .ColorIndex = xlAutomatic');
  Fxla.WriteLn('    End With');
  Fxla.WriteLn('    With Selection.Borders(xlEdgeTop)');
  Fxla.WriteLn('        .LineStyle = xlContinuous');
  Fxla.WriteLn('        .Weight = xlMedium');
  Fxla.WriteLn('        .ColorIndex = xlAutomatic');
  Fxla.WriteLn('    End With');
  Fxla.WriteLn('    With Selection.Borders(xlEdgeBottom)');
  Fxla.WriteLn('        .LineStyle = xlContinuous');
  Fxla.WriteLn('        .Weight = xlMedium');
  Fxla.WriteLn('        .ColorIndex = xlAutomatic');
  Fxla.WriteLn('    End With');
  Fxla.WriteLn('    With Selection.Borders(xlEdgeRight)');
  Fxla.WriteLn('        .LineStyle = xlContinuous');
  Fxla.WriteLn('        .Weight = xlMedium');
  Fxla.WriteLn('        .ColorIndex = xlAutomatic');
  Fxla.WriteLn('    End With');
  Fxla.WriteLn('    With Selection.Borders(xlInsideVertical)');
  Fxla.WriteLn('        .LineStyle = xlContinuous');
  Fxla.WriteLn('        .Weight = xlThin');
  Fxla.WriteLn('        .ColorIndex = xlAutomatic');
  Fxla.WriteLn('    End With');
  Fxla.WriteLn('    With Selection.Borders(xlInsideHorizontal)');
  Fxla.WriteLn('        .LineStyle = xlContinuous');
  Fxla.WriteLn('        .Weight = xlThin');
  Fxla.WriteLn('        .ColorIndex = xlAutomatic');
  Fxla.WriteLn('    End With');
  Fxla.WriteLn('    With Selection');
  Fxla.WriteLn('        .HorizontalAlignment = xlCenter');
  Fxla.WriteLn('        .VerticalAlignment = xlCenter');
  Fxla.WriteLn('        .WrapText = True');
  Fxla.WriteLn('        .Orientation = 0');
  Fxla.WriteLn('        .AddIndent = False');
  Fxla.WriteLn('        .IndentLevel = 0');
  Fxla.WriteLn('        .ShrinkToFit = False');
  Fxla.WriteLn('        .ReadingOrder = xlContext');
  Fxla.WriteLn('    End With');
  Fxla.WriteLn('    Rows("1:4").HorizontalAlignment = xlCenter');
  Fxla.WriteLn('    Cells.EntireRow.AutoFit');
  Fxla.WriteLn('    Cells.EntireColumn.AutoFit');
  Fxla.WriteLn('    Range("A4").Select');
  Fxla.WriteLn('End Sub');
  Fxla.WriteLn('');
  Fxla.WriteLn('Sub Создать_Лист_С_Данными_Для_Плана(VidPlanSum As Byte)');
  Fxla.WriteLn('');
  Fxla.WriteLn('    Set NewSheet = Sheets.Add');
  Fxla.WriteLn('    NewSheet.Name = "Report data"');
  Fxla.WriteLn('    NewSheet.Select');
  Fxla.WriteLn('    Cells.Font.Size = 8');
  Fxla.WriteLn('    Range("A1").FormulaR1C1 = "№" & Chr(10) & "п/п"');
  Fxla.WriteLn('    Range("A1:A3").Merge');
  Fxla.WriteLn('    Range("B1").FormulaR1C1 = "Продукт, договор, организация"');
  Fxla.WriteLn('    Range("B1:B3").Merge');
  Fxla.WriteLn('    Range("C1").FormulaR1C1 = "Единица" & Chr(10) & "измерения"');
  Fxla.WriteLn('    Range("C1:C3").Merge');
  Fxla.WriteLn('    Range("D1").FormulaR1C1 = "Количество" & Chr(10) & "до конца" & Chr(10) & _');
  Fxla.WriteLn('                              "отчетного" & Chr(10) & "периода"');
  Fxla.WriteLn('    Range("D1:D3").Merge');
  Fxla.WriteLn('    Range("E1").FormulaR1C1 = "План" & Chr(10) & "отчетного" & Chr(10) & "периода"');
  Fxla.WriteLn('    Range("E1:E3").Merge');
  Fxla.WriteLn('    Range("F1").FormulaR1C1 = "Период до начала отчетного периода"');
  Fxla.WriteLn('    Range("F1:L1").Merge');
  Fxla.WriteLn('    Range("F2").FormulaR1C1 = "Количество"');
  Fxla.WriteLn('    Range("F2:F3").Merge');
  Fxla.WriteLn('    Range("G2").FormulaR1C1 = "План"');
  Fxla.WriteLn('    Range("G2:G3").Merge');
  Fxla.WriteLn('    Range("H2").FormulaR1C1 = "Отгружено"');
  Fxla.WriteLn('    Range("H2:I2").Merge');
  Fxla.WriteLn('    Range("H3").FormulaR1C1 = "На сумму"');
  Fxla.WriteLn('    Range("I3").FormulaR1C1 = "Количество"');
  Fxla.WriteLn('    Range("J2").FormulaR1C1 = "Оплачено"');
  Fxla.WriteLn('    Range("J2:J3").Merge');
  Fxla.WriteLn('    Range("K2").FormulaR1C1 = "Реструктурированные долги"');
  Fxla.WriteLn('    Range("K2:L2").Merge');
  Fxla.WriteLn('    Range("K3").FormulaR1C1 = "Оплата в отчетном" & Chr(10) & "периоде"');
  Fxla.WriteLn('    Range("L3").FormulaR1C1 = "Оплата за отчетным" & Chr(10) & "периодом"');
  Fxla.WriteLn('    Range("M1").FormulaR1C1 = "Ожидаемая" & Chr(10) & "оплата"');
  Fxla.WriteLn('    Range("M1:M3").Merge');
  Fxla.WriteLn('    Range("N1").FormulaR1C1 = "Условия оплаты"');
  Fxla.WriteLn('    Range("N1:N3").Merge');
  Fxla.WriteLn('    Range("A4").FormulaR1C1 = "1"');
  Fxla.WriteLn('    Range("B4").FormulaR1C1 = "2"');
  Fxla.WriteLn('    Range("A4:B4").Select');
  Fxla.WriteLn('    Selection.AutoFill Destination:=Range("A4:N4"), Type:=xlFillDefault');
  Fxla.WriteLn('    Rows("1:4").Font.Size = 9');
  Fxla.WriteLn('    Rows("1:4").Font.Bold = True');
  Fxla.WriteLn('    Rows("1:4").HorizontalAlignment = xlCenter');
  Fxla.WriteLn('    Range("A1:N4").Select');
  Fxla.WriteLn('    Selection.Borders(xlDiagonalDown).LineStyle = xlNone');
  Fxla.WriteLn('    Selection.Borders(xlDiagonalUp).LineStyle = xlNone');
  Fxla.WriteLn('    With Selection.Borders(xlEdgeLeft)');
  Fxla.WriteLn('        .LineStyle = xlContinuous');
  Fxla.WriteLn('        .Weight = xlMedium');
  Fxla.WriteLn('        .ColorIndex = xlAutomatic');
  Fxla.WriteLn('    End With');
  Fxla.WriteLn('    With Selection.Borders(xlEdgeTop)');
  Fxla.WriteLn('        .LineStyle = xlContinuous');
  Fxla.WriteLn('        .Weight = xlMedium');
  Fxla.WriteLn('        .ColorIndex = xlAutomatic');
  Fxla.WriteLn('    End With');
  Fxla.WriteLn('    With Selection.Borders(xlEdgeBottom)');
  Fxla.WriteLn('        .LineStyle = xlContinuous');
  Fxla.WriteLn('        .Weight = xlMedium');
  Fxla.WriteLn('        .ColorIndex = xlAutomatic');
  Fxla.WriteLn('    End With');
  Fxla.WriteLn('    With Selection.Borders(xlEdgeRight)');
  Fxla.WriteLn('        .LineStyle = xlContinuous');
  Fxla.WriteLn('        .Weight = xlMedium');
  Fxla.WriteLn('        .ColorIndex = xlAutomatic');
  Fxla.WriteLn('    End With');
  Fxla.WriteLn('    With Selection.Borders(xlInsideVertical)');
  Fxla.WriteLn('        .LineStyle = xlContinuous');
  Fxla.WriteLn('        .Weight = xlThin');
  Fxla.WriteLn('        .ColorIndex = xlAutomatic');
  Fxla.WriteLn('    End With');
  Fxla.WriteLn('    With Selection.Borders(xlInsideHorizontal)');
  Fxla.WriteLn('        .LineStyle = xlContinuous');
  Fxla.WriteLn('        .Weight = xlThin');
  Fxla.WriteLn('        .ColorIndex = xlAutomatic');
  Fxla.WriteLn('    End With');
  Fxla.WriteLn('    With Selection');
  Fxla.WriteLn('        .HorizontalAlignment = xlCenter');
  Fxla.WriteLn('        .VerticalAlignment = xlCenter');
  Fxla.WriteLn('        .WrapText = True');
  Fxla.WriteLn('        .Orientation = 0');
  Fxla.WriteLn('        .AddIndent = False');
  Fxla.WriteLn('        .IndentLevel = 0');
  Fxla.WriteLn('        .ShrinkToFit = False');
  Fxla.WriteLn('        .ReadingOrder = xlContext');
  Fxla.WriteLn('    End With');
  Fxla.WriteLn('    Cells.EntireRow.AutoFit');
  Fxla.WriteLn('    Cells.EntireColumn.AutoFit');
  Fxla.WriteLn('    Range("A4").Select');
  Fxla.WriteLn('End Sub');
  Fxla.WriteLn('');
  Fxla.WriteLn('Sub Скрыть_Лист_С_Данными()');
  Fxla.WriteLn('    Sheets("Report data").Cells.EntireColumn.AutoFit');
  Fxla.WriteLn('''    Sheets("Report data").Visible = False');
  Fxla.WriteLn('End Sub');

  Fxla.Close;
}
