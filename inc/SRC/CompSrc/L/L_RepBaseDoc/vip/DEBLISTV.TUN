//******************************************************************************
//                                                      (c) корпорация Галактика
// Галактика 7.12 - Оперативный контур
// Отчет "Дебеторский лист по периодам"
//******************************************************************************

Procedure Param2UserTune;
{
   d0 := OtDate;
   d1 := BOtDate;
   d2 := LOtDAte;
   AlignDatUser := AlignDate;
   SaveMyDsk(d0, 'DebListV_Dat2');
   SaveMyDsk(d1, 'DebListV_Dat3');
   SaveMyDsk(d2, 'DebListV_Dat4');
   SaveMyDsk(Per0, 'DebListV_Per0');
   SaveMyDsk(Per1, 'DebListV_Per1');
   SaveMyDsk(Per2, 'DebListV_Per2');
   SaveMyDsk(Per9, 'DebListV_Per9');
   SaveMyDsk(PerA, 'DebListV_PerA');
   SaveMyDsk(OtDatIn, 'DebListV_OtDatIn');
   SaveMyDsk(OtDatCurrent, 'DebListV_OtDatCurrent');
   SaveMyDsk(KolPers, 'DebListV_KolPers');
   SaveMyDsk(TipLen, 'DebListV_TipLen');
   SaveMyDsk(LenPer, 'DebListV_LenPer');
   SaveMyDsk(AlignDatUser, 'DebListV_Dat5');
   SaveMyDsk(AlignDay, 'DebListV_AlignDay');
   SaveMyDsk(Align, 'DebListV_Align');

   SaveMyDsk(FiltDO, 'DebListV_FiltDO'); // вместо Prod, Zakup, KonsP, KonsZ

   SaveMyDsk(FltTipMoney, 'DebListV_FltTipMoney'); // вместо RubD, ValD, RubValD

   SaveMyDsk(VozvrN   , 'DebListV_VozvrN');
   SaveMyDsk(FValut   , 'DebListV_FValut');
   SaveMyDsk(RubValRub, 'DebListV_RubValRub');

   SaveMyDsk(AllKontr, 'DebListV_AllKontr');

   SaveMyDsk(cnt    , 'DebListV_cnt');
   SaveMyDsk(cnt_gr , 'DebListV_cnt_gr');
   SaveMyDsk(cnt_dog, 'DebListV_cnt_dog');

   SaveMyDsk(TypeRep, 'DebListV_TypeRep');

   if (boGetTune('User.ModifTune'))
    {
      if (cValOt = comp(0))
        coSetTune('Rep.cVal', comp(0), 'НДЕ')
      else
        if IsValid(tnKlValOt)
          coSetTune('Rep.cVal', cValOt, KlValOt.Dollar);

      wSetTune('Rep.SoprKontr', word(NaklOnlyWas));
      wSetTune('Rep.DateSopr', word(NaklDat));
    };
};

//******************************************************************************

Procedure UserTune2Param;
 var Datechanged: boolean;
{
   cValOt := coGetTune('Rep.cVal');
   NaklOnlyWas := (wGetTune('Rep.SoprKontr') = 1);
   NaklDat    := (wGetTune('Rep.DateSopr') = 1);
   if (not ReadMyDsk(d0, 'DebListV_Dat2', Datechanged))
     d0 := Cur_Date;

   if (not ReadMyDsk(d1, 'DebListV_Dat3', Datechanged))
     d1 := 0;

   if (not ReadMyDsk(d2, 'DebListV_Dat4', Datechanged))
     d2 := 0;

   if (not ReadMyDsk(Per0, 'DebListV_Per0', Datechanged))
     Per0 := 1;

   if (not ReadMyDsk(Per1, 'DebListV_Per1', Datechanged))
     Per1 := 0;

   if (not ReadMyDsk(Per2, 'DebListV_Per2', Datechanged))
     Per2 := 1;

   if (not ReadMyDsk(Per9, 'DebListV_Per9', Datechanged))
     Per9 := 1;

   if (not ReadMyDsk(PerA, 'DebListV_PerA', Datechanged))
     PerA := 2;

   if (not ReadMyDsk(OtDatIn, 'DebListV_OtDatIn', Datechanged))
     OtDatIn := 0;

   if (not ReadMyDsk(OtDatCurrent, 'DebListV_OtDatCurrent', Datechanged))
     OtDatCurrent := 1;

   if (not ReadMyDsk(KolPers, 'DebListV_KolPers', Datechanged))
     KolPers := 6;

   if (not ReadMyDsk(TipLen, 'DebListV_TipLen', Datechanged))
     TipLen := 1;

   if (not ReadMyDsk(LenPer, 'DebListV_LenPer', Datechanged))
     LenPer := 1;

   if (not ReadMyDsk(AlignDatUser, 'DebListV_Dat5', Datechanged))
     AlignDatUser := 0;

   if (not ReadMyDsk(AlignDay, 'DebListV_AlignDay', Datechanged))
     AlignDay := 1;

   if (not ReadMyDsk(Align, 'DebListV_Align', Datechanged))
     Align := 1;

   if (not ReadMyDsk(FiltDO, 'DebListV_FiltDO', Datechanged))
     FiltDO := 1 + 2 + 0 + 0; // вместо Prod, Zakup, KonsP, KonsZ

   if (not ReadMyDsk(FltTipMoney, 'DebListV_FltTipMoney', Datechanged))
     FltTipMoney := 1 + 2 + 4; // вместо RubD, ValD, RubValD

   if (not ReadMyDsk(VozvrN, 'DebListV_VozvrN', Datechanged))
     VozvrN := 1;

   if (not ReadMyDsk(FValut, 'DebListV_FValut', Datechanged))
     FValut := 0;

   if (not ReadMyDsk(RubValRub, 'DebListV_RubValRub', Datechanged))
     RubValRub := 2;

   if (not ReadMyDsk(AllKontr, 'DebListV_AllKontr', Datechanged))
     AllKontr := 0;

   ReadMyDsk(str    , 'DebListV_KatOrgstr'    , true);
   ReadMyDsk(str_gr , 'DebListV_KatOrgstr_gr' , true);
   ReadMyDsk(str_dog, 'DebListV_KatOrgstr_dog', true);

   if (not ReadMyDsk(cnt, 'DebListV_cnt', true))
     cnt := 0;

   if (not ReadMyDsk(cnt_gr, 'DebListV_cnt_gr', true))
     cnt_gr := 0;

   if (not ReadMyDsk(cnt_dog, 'DebListV_cnt_dog', true))
     cnt_dog := 0;

   if (not ReadMyDsk(TypeRep, 'DebListV_TypeRep', true))
     TypeRep := 0;

   Param2UserTune;
};