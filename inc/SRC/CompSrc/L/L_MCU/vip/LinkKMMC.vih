//*****************************************************************************
// (c) корпорация Галактика
// Галактика 9.10 - логистика
// Объектный интерфейс Привязки Кодов маркировки
//*****************************************************************************
#ifndef _LinkKMMC_VIH_
#define _LinkKMMC_VIH_

//*****************************************************************************
#component "L_MCU"
//*****************************************************************************

#declare Embedded_KMMC
// Встраиваем LinkKMMC
Embedded embKMMC 'Честный знак' interface;
 show at (,,,);
 Cache = slave;
end;
#end

//*****************************************************************************
#declare BindKMMCTabbedSheet
  // Включаем Коды Маркировки, если есть
//if not boGetTune('MCUMARK.Use')
 {
  if (oLinkKMMC.IsExistOne)
  {
    BindEmbeddedInterface(embKMMC, oLinkKMMC);
    SetTabbedSheetVisible(embKMMC, true);
    SetTabbedSheetTitle(embKMMC, oLinkKMMC.TabSheetName);
  }
  else
    SetTabbedSheetVisible(embKMMC, false);
 } 
#end

//*****************************************************************************
#declare KMMCIdle
  // cmIdle
  oLinkKMMC.RefreshOnIdle;
#end

//*****************************************************************************
#declare KMMCPosChange (wTable, wIntMode)
  // событие cmPositionChanged

//  If curtable= #katmc   oLinkKMMC.InitParam(boGetTune('RGHTBL.NOUPDATE.KATMC'),1,coKatMC,Katmc.nrec)
//  If curtable= #Groupmc oLinkKMMC.InitParam(boGetTune('RGHTBL.NOUPDATE.GROUPMC'),1,coGroupMc,Groupmc.nrec)
//  If curtable= #MASKMC  oLinkKMMC.InitParam(boGetTune('RghTbl.NoUpdate.KatMC'),1,coMaskMC,MASKMC.nrec)
 oLinkKMMC.InitParam(#(wIntMode),1,co#(wTable),#(wTable).nrec)
#end
//*****************************************************************************

#declare KMMCFieldsSPDocs (wTable)
  [fsRole]  if(#(wTable).prMc=1 or #(wTable).prMc>2, oLinkKMMC.GetValue(coKatMc,#(wTable).cMcUsl, 'WROLE'),'')
     'Роль в системе маркировки' ('Роль в системе маркировки') :[25], Protect, NoPickButton, NoDel;

  [fsGTIN]  if(#(wTable).prMc=1 or #(wTable).prMc>2, oLinkKMMC.GetValue(coKatMc,#(wTable).cMcUsl, 'SGTIN'),'')
     'GTIN' ('Код товарной позиции по единому каталогу товаров РФ') :[20], Protect, NoPickButton, NoDel;

  [fvMark]  oLinkKMMC.GetVMark(co#(wTable), #(wTable).Nrec,0)
     'Причина вывода из оборота'
        ('Причины вывода маркированного товара из оборота') :[20], Protect, PickButton,NoDel;
#end

#declare KMMCFieldsSPSklad (wTable)
  [fsRole]  if(#(wTable).cMc<>0, oLinkKMMC.GetValue(coKatMc,#(wTable).cMc, 'WROLE'),'')
     'Роль в системе маркировки' ('Роль в системе маркировки') :[25], Protect, NoPickButton, NoDel;

  [fsGTIN]  if(#(wTable).cMc<>0, oLinkKMMC.GetValue(coKatMc,#(wTable).cMc, 'SGTIN'),'')
     'GTIN' ('Код товарной позиции по единому каталогу товаров РФ') :[20], Protect, NoPickButton, NoDel;

  [fvMark]  oLinkKMMC.GetVMark(co#(wTable), #(wTable).Nrec,0)
     'Причина вывода из оборота'
        ('Причины вывода маркированного товара из оборота') :[20], Protect, PickButton,NoDel;
#end


// Если нужно одновременно в нескольких окнах
#declare KMMCFieldsSPDocs2 (wTable)
  fsRole   'Роль в системе маркировки' ('Роль в системе маркировки') :[25], Protect, NoPickButton, NoDel;
  fsGTIN   'GTIN' ('Код товарной позиции по единому каталогу товаров РФ') :[20], Protect, NoPickButton, NoDel;
  fvMark   'Причина вывода из оборота'  ('Причины вывода маркированного товара из оборота') :[20], Protect, PickButton,NoDel;
#end

// только поля по МС
#declare KMMCFieldsMC (wTable,wField)
  [fsRole]  oLinkKMMC.GetValue(coKatMc,#(wTable).#(wField), 'WROLE')
     'Роль в системе маркировки' ('Роль в системе маркировки') :[25], Protect, NoPickButton, NoDel;

  [fsGTIN]  oLinkKMMC.GetValue(coKatMc,#(wTable).#(wField), 'SGTIN')
     'GTIN' ('Код товарной позиции по единому каталогу товаров РФ') :[20], Protect, noPickButton, NoDel;
#end

// поля сертификата качества
#declare KMMCFieldSert(wTable)
  [fsVidDoc] #(wTable).wVidDoc
  ('Вид документа',,sci13Esc): [LIST cg_SertVidDoc_None cg_SertVidDocName_None,
                                                cg_SertVidDoc_Sert cg_SertVidDocName_Sert,
                                                cg_SertVidDoc_Decl cg_SertVidDocName_Decl,
                                                cg_SertVidDoc_Reject cg_SertVidDocName_Reject ] Protect;
//oLinkKMMC.GetValue(coSertific,#(wTable).#(wField), 'Wviddoc')
#end


#declare KMMCFieldsMCSelect(wTable,wField)
, oLinkKMMC.GetValue(coKatMc,#(wTable).#(wField), 'WROLE') (FieldName= fsRole  )
, oLinkKMMC.GetValue(coKatMc,#(wTable).#(wField), 'SGTIN') (FieldName= fSGTIN  )

#end
#declare KMMCCardSNSelect
, ShowKau(cgKau_KatMc,CardSN.cMCKM ) (FieldName =fKMMC , FieldTitle='Вид КМ'    )
, ShowKau(cgKau_KatMc,CardSN.cMC1  ) (FieldName =fKMMC1, FieldTitle='Упаковка 1')
, ShowKau(cgKau_KatMc,CardSN.cMC2  ) (FieldName =fKMMC2, FieldTitle='Упаковка 2')
, ShowKau(cgKau_KatMc,CardSN.cMC3  ) (FieldName =fKMMC3, FieldTitle='Упаковка 3')
//, oLinkKMMC.GetVMark(coCardSN, CardSN.Nrec,0) (FieldName= fvMark, FieldTitle='Причина вывода из оборота' )
, oLinkKMMC.GetVMark(0, CardSN.cKatVMark,0) (FieldName= fvMark, FieldTitle='Причина вывода из оборота' )

#end

#declare KMMCFieldsMC2
  fsRole 'Роль в системе маркировки' ('Роль в системе маркировки') :[25], Protect, NoPickButton, NoDel;
  fsGTIN 'GTIN' ('Код товарной позиции по единому каталогу товаров РФ') :[20], Protect, NoPickButton, NoDel;
#end


#declare KMMCFieldsPick (wTable)
  #fvMark:// 'Причина вывода из оборота'
  { var _wMultu :word = 0;
    var _cRec   :comp = comp(oLinkKMMC.GetVMark(co#(wTable), #(wTable).Nrec,3));
    if oLinkKMMC.SetVMark(co#(wTable), #(wTable).Nrec,_cRec, _wMultu)
    { if _wMultu=0
        oLinkKMMC.SetVMarkOne(co#(wTable), #(wTable).Nrec,_cRec);
      else
      { PushPos(tn#(wTable));
        StartNewVisual(vtNumericVisual, vfTimer, 'Заполнение причин выбытия маркированного товара', 0);

        _Loop #(wTable)
        { NextVisual;
          oLinkKMMC.SetVMarkOne(co#(wTable), #(wTable).Nrec,_cRec);
        }
        StopVisual('',0);
        PopPos(tn#(wTable));
      }
      ReScanPanel(tn#(wTable));
    }//if oLinkKMMC.SetVMark(co#(wTable), #(wTable).Nrec,_cRec, _wMultu)
  } //#fvMark:// 'Причина вывода из оборота'
#end

#declare KMMCFieldsInit (wTable)
  ToggleFieldVisible(#fsRole, oLinkKMMC.IsExistOne);
  ToggleFieldVisible(#fsGTIN, oLinkKMMC.IsExistOne);
  ToggleFieldVisible(#fvMark, oLinkKMMC.IsExistOne);
#end

#declare KMMCFieldsInitMC (wTable)
  ToggleFieldVisible(#fsRole, oLinkKMMC.IsExistOne);
  ToggleFieldVisible(#fsGTIN, oLinkKMMC.IsExistOne);  
#end

#declare KMMCFieldsInitSert (wTable)
  ToggleFieldVisible(#fsVidDoc, oLinkKMMC.IsExistOne);
#end

#declare KMMCKMInfo(wTable, cRec)
  oLinkKMMC.KMInfoReport(#(wTable), #(cRec));
#end

#declare KMMCKMShortInfo(wTable, cRec)
  oLinkKMMC.KMShortInfoReport(#(wTable), #(cRec));
#end
//*****************************************************************************


#declare UnbindKMMC
  UnBindEmbeddedInterface(embKMMC);
#end
//*****************************************************************************

#include MCUMark.inc

//*****************************************************************************
ObjInterface iLinkKMMC;
  //-------------------------------------
  #doc
    Проверить наличие доступа к маркировке продукции
  #end
  function IsExistOne : boolean;
  //-------------------------------------
  #doc
   Получить наименование листа
  #end
  property TabSheetName: string read;
  //-------------------------------------
  #doc
   Инициализация параметров
  #end
  Function InitParam(_wIntMode:word; // CgiNotEdit - блокировка от редактировани
                      _wOption:Word; // битовая маска режима. 1 - визуальный, 2 - открыть окно редактированя
                      _wTable:Word; // код таблицы
                      _cRec: comp // позиция в таблице
                     ) :boolean;
  //-------------------------------------
  #doc
   Получить ошибку
  #end
  Function GetValue(  _wTable:Word; // код таблицы
                      _cRec: comp; // позиция в таблице
                      _sField :string
                       ) :string;
  //-------------------------------------
  #doc
   Получить ошибку
  #end
  Function GetLastError:string;
  //-------------------------------------
  #doc
   Обновить окно
  #end

  procedure RefreshOnIdle;
  //-------------------------------------
  #doc
    Установить параметры выбора причины выбытия
    True - причина указана
  #end
  Function SetVMark( _pTable :word // код таблицы
    ;_crec: comp
    ; var _cKMMCKatVMark : comp
    ; var _wMulti : word
    )  :boolean;
  //-------------------------------------
  #doc
    Установить причину выбытия
  #end
  Function SetVMarkOne( _pTable :word // код таблицы
    ;_crec  : comp
    ;_value : comp
    )  :boolean;
  //-------------------------------------
  #doc
    Получить причину выбытия
  #end
  Function GetVMark( _pTable :word // код таблицы
    ;_crec   : comp    // позиция в таблице
    ;_wField : word // 0 - Name, 1 - код, 2 Код + name
    )  :string;
  //-------------------------------------
  #doc
    Получить ссылку на статус KM по коду статуса
  #end
  Function GetKatNotesNrecByStatus( _status :word; _vidDooc :word =cgDoc_6002 ) : comp;

  //-------------------------------------
  #doc
    Получить статус  по ссылке
  #end
  Function GetKatNotesStatusByNrec( _cKatNotes :comp ) : word;

  #doc
    Получить подробный отчёт о КМ по SpSopr, KatMC или CardSN
  #end
  Procedure KMInfoReport(_pTable: word; _pRec: comp);

  #doc
    Получить краткий отчёт о КМ по SpSopr, KatMC или CardSN
  #end
  Procedure KMShortInfoReport(_pTable: word; _pRec: comp);
end;

ObjInterface iKMMC;
end;


VipInterface LinkKMMC implements iLinkKMMC Licensed(free);
public:
  constructor Init;
  destructor Done;
end;


#end
