//------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Галактика 8.10 - Целевой учет запасов
// Аналитики целевого учета в спецификации
//------------------------------------------------------------------------------

//******************************************************************************
// [PUBLIC] Инициализирует объект для работы с КАУ
Function InitKau(cSaldTune: comp; var wKauKol: word): boolean;
{
  result := false;

  if ( GetFirst SaldTune where (( cSaldTune == SaldTune.nRec )) = tsOk )
    {
      vwSald := SaldTune.wType;
      oTune.GetTune(vwSald);
      wKauKol := oTune.KauQnt;
      result := true;
    }
}

//******************************************************************************
// [PUBLIC] Инициализирует объект для работы с КАУ
Function InitKauU(cSaldTune: comp; bUKS: boolean; var wKauKol: word): boolean;
{
  if ( bUKS )
    result := InitKAU(oTune.GetTune(1), wKauKol);
  else
    result := InitKAU(cSaldTune, wKauKol);
}

//******************************************************************************
// [PUBLIC] Процедура инициализации интерфейса
Procedure SetObjParam(wTable: word; cSpec: comp; wPr: word);
{
  pwPr    := wPr;
  pwTable := wTable;

  set pcSpec := cSpec;

  // RereadRecord необходим, т.к. если вызвали 2 раза подряд SetObjParam с одинаковыми
  // параметрами, в таком случае по команде set pcSpec := cSpec; Атлантис не перечитывает
  // значения полей таблицы из БД. А значения в SpecMTR могли быть изменены другим интерфейсом.
  RereadRecord(#SpecMTR);

  InitWin;

  RereadRecord(#SpecMTR); // Обязательно нужен RereadRecord _после_ инициализации окна
}

//******************************************************************************
// [PUBLIC] Процедура осуществляет переключение форматов
Procedure SelFormat(pbShowK: boolean);
{
  if ( pbShowK )
    SetFormat(scKau10);
  else
    SetFormat(scBlank);

  RereadParam;
}

//------------------------------------------------------------------------------
// [PUBLIC] Возвращает наименование роли для КАУ с заданным номером
Function GetRole(aiNum : word) : string;
{
  result := oTune.GetRoleName(aiNum);
}

//******************************************************************************
// [PUBLIC] Процедура осуществляет привязку объекта целевого учета к позиции спецификации
//
// Замечание:
//    Если необходимо только осуществить привязку ОЦУ к позиции спецификации документа,
//  без использования других возможностей интерфейса LinkMtr2Spec, рекомендуется пользоваться
//  универсальным методом oMtrFun.LinkMtrToSpec
//    Более того, если вызов SetVal все же окажется необходим, более не нужно строить громоздких
//  конструкций вида:
//    case TypeSopr of
//      106: oLinkMTR2Spec.SetVal(coSpSopr, SpSopr.nRec, coGetTune('CelUchForModul.SELL') );
//      206: oLinkMTR2Spec.SetVal(coSpSopr, SpSopr.nRec, coGetTune('CelUchForModul.BUY') );
//      ....
//    end;
//
//    Вместо этого достаточно сделать один вызов SetVal( coSpSopr, SpSopr.nRec, 0 ) либо SetVal( coSpStep, SpStep.nRec, 0 ).
//    Все остальные значения автоматически определит метод oMtrFun.LinkMtrToSpec.
//    Только убедитесь, пожалуйста, в наличии нужной таблицы и вашего типа документа в
//  методах GetSaldTuneByTable, GetSaldTuneBySpSopr, GetSaldTuneBySpStep интерфейса MTRFuncs
//  (тяжело при создании метода учесть все возможные документы системы).
Procedure SetVal(wTable: word; cSpec, cSaldTune: comp );
{
  if ( (wTable = 0) or (cSpec = 0) or (cSaldTune = 0) )
    exit;

  pwTable := wTable;
  pcSpec  := cSpec;

  oMtrFun.LinkMtrToSpec( wTable, cSpec, cSaldTune );
  RereadRecord( #SpecMTR );
  RereadParam;
}

//******************************************************************************
// [PUBLIC] Процедура осуществляет привязку объекта целевого учета к позиции спецификации
//
// Замечание:
//    Если необходимо только осуществить привязку ОЦУ к позиции спецификации документа,
//  без использования других возможностей интерфейса LinkMtr2Spec, рекомендуется пользоваться
//  универсальным методом oMtrFun.LinkMtrToSpec.
//    Более того, если вызов SetValU все же окажется необходим, более не нужно строить громоздких
//  конструкций вида:
//    case TypeSopr of
//      106: oLinkMTR2Spec.SetValU(coSpSopr, SpSopr.nRec, coGetTune('CelUchForModul.SELL'), false);
//      206: oLinkMTR2Spec.SetValU(coSpSopr, SpSopr.nRec, coGetTune('CelUchForModul.BUY'), false);
//      1610, 610, 629:
//        if boGetTune('CelUchForModul.UKS')
//          oLinkMTR2Spec.SetValU(coSpSopr, SpSopr.nRec, 0, true);
//    end;
//
//    Вместо этого достаточно сделать один вызов SetVal( coSpSopr, SpSopr.nRec, 0) либо SetVal( coSpStep, SpStep.nRec, 0)
//  взамен прежнего вызова SetValU. Все остальные значения автоматически определит метод oMtrFun.LinkMtrToSpec.
//    Только убедитесь, пожалуйста, в наличии нужной таблицы и вашего типа документа в
//  методах GetSaldTuneByTable, GetSaldTuneBySpSopr, GetSaldTuneBySpStep интерфейса MTRFuncs
//  (тяжело при создании метода учесть все возможные документы системы).
Procedure SetValU(wTable: word; cSpec, cSaldTune: comp; bUKS: boolean);
{
  if ( bUKS )
    SetVal(wTable, cSpec, oTune.GetTune(1));
  else
    SetVal(wTable, cSpec, cSaldTune);
}

//******************************************************************************
// [PUBLIC] Процедура осуществляет удаление объекта целевого учета привязанного к позиции спецификации
Procedure DelVal(wTable: word; cSpec: comp);
{
  oMTRFun.DelSpecMTR(wTable, cSpec);

  delete SpDocSmeta where ((  wTable == SpDocSmeta.coTable
                          and cSpec  == SpDocSmeta.cSpec ));
}

//******************************************************************************
// [PUBLIC] Проверка возможности копирования привязки к объекту целевого учета
Function CanCopySpec(wSrcTab : word; cSrcSpec : comp; wDstTab : word; cDstSpec : comp): boolean;
{
  result := false;

  if ( GetFirst SpecMTR where (( wSrcTab == SpecMTR.coTable and cSrcSpec == SpecMTR.cSpec)) <> tsOk )
    {
      if ( GetFirst SpecMTR where (( wDstTab == SpecMTR.coTable and cDstSpec == SpecMTR.cSpec)) = tsOk )
        oMTRFun.DelSpecMTR(wDstTab, cDstSpec);

      Exit;
    }

  result := true;
}
