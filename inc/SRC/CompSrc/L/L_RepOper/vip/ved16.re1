//******************************************************************************
//                                                      (c) корпорация Галактика
// Галактика 5.0 - логистика
// Отчет реализации в натуральных показателях
//
//******************************************************************************

//******************************************************************************

Procedure GetForm;
{
 if ( (AllMcUsl<>1) and (AllMcUsl<>5) and (Detal>0 and Detal<>4) and (Not ItogEd) )
   frmdolgoplG.SetGroup('Без количеств');
 else
   if ( (AllMcUsl = 1) or (AllMcUsl = 5) or (Detal > 0 and Detal <> 4) )
     {
       frmdolgoplG.SetGroup( 'Без графы <Наименование матценности/услуги>'#1
                           + 'Без количеств'
                           );
     }
   else
     frmdolgoplG.SetGroup('');
}

//******************************************************************************

Function notBr : boolean;
{
  notBr := (NextVisual and (Not frmdolgoplG.Error));
}

//******************************************************************************

Function GetGrMCUsl(PrMCU : word) : boolean;
{
  GetGrMCUsl   := false;
  GrMcUslName  := '';
  pkGroupMCUsl := '';

  if ( PrMCU = 1 )
    {
      if ( cpcGrMC <> 0 )
        {
          if ( cpcGrMC = GroupMC.NRec )
            {
              GetGrMCUsl  := true;
              pkGroupMCUsl := GroupMc.Kod;
              GrMcUslName := GroupMc.Name;
              Exit;
            }

          if ( (Modifier GetFirst GroupMC where (( cpcGrMC == GroupMC.NRec ))) <> tsOk )
            Exit;

          GetGrMCUsl  := true;
          pkGroupMCUsl := GroupMc.Kod;
          GrMcUslName := GroupMc.Name;
        }
    }
  else
    {
      if ( cpcGrUsl <> 0 )
        {
          if ( cpcGrUsl = GroupUsl.NRec )
            {
              GetGrMCUsl   := true;
              pkGroupMCUsl := GroupUsl.Kod;
              GrMcUslName  := GroupUsl.Name;
              Exit;
            }

          if ( ( Modifier GetFirst GroupUsl where (( cpcGrUsl == GroupUsl.NRec ))) <> tsOk )
            Exit;

          GetGrMCUsl   := true;
          pkGroupMCUsl := GroupUsl.Kod;
          GrMcUslName  := GroupUsl.Name;
        }
    }
}

//******************************************************************************

Function GetMCUsl(tMc : comp; PrMCU : word) : boolean;
{
  McUslName  := '';

  if (tMc = 0)
    {
      GetMCUsl := false;
      Exit;
    }

  tcMcGet := tMc;

  if ( PrMCU = 1 )
    {
      if ( KatMc.NRec = tcMcGet )
        {
          McUslName   := KatMC.Name;
          CurrGroupMC := KatMC.KGroupMC;
          FlagThisMC  := true;
          GetMCUsl    := true;
          Exit;
        }

      if ( (Modifier GetFirst KatMC where (( tcMcGet == KatMC.NRec ))) <> tsOk )
        {
          McUslName := '';
          GetMCUsl  := false;
          Exit;
        }

      McUslName   := KatMC.Name;
      CurrGroupMC := KatMC.KGroupMC;
      FlagThisMC  := true;
    }
  else
    {
      if ( KatUsl.NRec = tcMcGet )
        {
          McUslName   := KatUsl.Name;
          CurrGroupMC := KatUsl.KGroupUsl;
          FlagThisMC  := false;
          GetMCUsl    := true;
          Exit;
        }

      if ( ( Modifier GetFirst KatUsl where (( tcMcGet == KatUsl.NRec )) ) <> tsOk )
        {
          McUslName := '';
          GetMCUsl  := false;
          Exit;
        }

      McUslName   := KatUsl.Name;
      CurrGroupMC := KatUsl.KGroupUsl;
      FlagThisMC  := false;
    }

  GetMCUsl := true;
}

//******************************************************************************

Function GetEd(tMc : comp; PrMCU : word) : boolean;
{
  EdName := '';
  GetEd := false;

  if ( GetMCUsl(tMc, PrMCU) )
    {
      if ( PrMCU = 1 )
        {
          if ( KatMc.cEd = 0 )
            Exit;

          if ( KatEd.NRec = KatMc.cEd )
            {
              GetEd  := true;
              EdName := KatEd.Name;
              Exit;
            }

          if ( (Modifier GetFirst KatEd where (( KatMc.cEd == KatEd.NRec ))) <> tsOk )
            Exit;

          GetEd  := true;
          EdName := KatEd.Name;
        }
      else
        {
          if ( KatUsl.cEd = 0 )
            Exit;

          if ( KatEd.NRec = KatUsl.cEd )
            {
              GetEd  := true;
              EdName := KatEd.Name;
              Exit;
            }

          if ( (Modifier GetFirst KatEd where (( KatUsl.cEd == KatEd.NRec ))) <> tsOk )
            Exit;

          GetEd  := true;
          EdName := KatEd.Name;
        }
    }
}

//******************************************************************************

Function GetOtpEd : boolean;
{
  OtpEdName := '';
  OtpEdKoef := 1.0;
  GetOtpEd  := false;

  if ( SpSopr.cOtpEd = 0 )
    Exit;

  if ( KatOtpEd.NRec = SpSopr.cOtpEd )
    {
      OtpEdName := KatOtpEd.Name;
      OtpEdKoef := KatOtpEd.koef;
      GetOtpEd  := true;
      Exit;
    }

  if ( (GetFirst KatOtpEd where (( SpSopr.cOtpEd == KatOtpEd.NRec ))) <> tsOk )
    Exit;

  OtpEdName := KatOtpEd.Name;
  OtpEdKoef := KatOtpEd.koef;
  GetOtpEd  := true;
}

//******************************************************************************

Function GetDO : boolean;
{
  DONumDescr := 'Не задан';
  DODate     := ZeroDate;
  GetDO      := false;

  if ( not vGetKs(SpSopr.cSopr) )
    Exit;

  if ( not ovGet.vGetSd(vKs.Ks.cStepDoc) )
    Exit;

  if ( not ovGet.vGetBd(ovGet.vGetSDbuf.cBaseDoc) )
    Exit;

  DONumDescr := PrintNumber(ovGet.vGetBDbuf.Descr, ovGet.vGetBDbuf.NoDoc);
  DODate     := ovGet.vGetBDbuf.dDoc;
  GetDO      := true;
}

//******************************************************************************

Function GetOrg : boolean;
{
  orgName := 'Не задан';
  GetOrg  := false;

  if ( not vGetKs(SpSopr.cSopr) )
    Exit;

  if ( not ovGet.vGetKO(vKs.Ks.cOrg) )
    {
      if ( not GetDO )
        Exit;
      else
        { if ( not ovGet.vGetKO(ovGet.vGetBDbuf.cOrg) )
            Exit;
        }
    }

  orgName := ovGet.vGetKObuf.Name;
  GetOrg  := true;
}

//******************************************************************************

Function GetGrDo : boolean;
Var
  ng : boolean;
  cc : comp;
{
  GrDOName := 'Не задана';
  GetGrDo  := false;

  if ( not GetDO )
    Exit;

  ng := true;

  if ( IsValid(#SpGrSch) )
    ng := (ovGet.vGetSDbuf.cBaseDoc<>SpGrSch.cBaseDoc);

  if ( ng )
    {
      cc := ovGet.vGetSDbuf.cBaseDoc;

      if ( (GetFirst SpGrSch where (( word(0) == SpGrSch.wList and cc == SpGrSch.cBaseDoc ))) <> tsOk )
        Exit;
    }

  if ( not ovGet.vGetGS(SpGrSch.cGroupSch) )
    Exit;

  GrDOName := ovGet.vGetGSbuf.Name;
  GetGrDo  := true;
}

//******************************************************************************

Function GetNds : boolean;
var
  _Price  : double;
  _NDS    : double;
  _Akciz  : double;
  _Perc   : double;
  _DrNal  : double;
  tkol    : double;
{
  GetNds             := true;
  OtpEdPrice         := 0.0;
  OtpEdPriceNds1     := 0.0;
  OtpEdPriceNds2     := 0.0;
  OtpEdPriceDopNalog := 0.0;

  if ( (SpSopr.PrMC = 1) or (SpSopr.VidSopr <> 101) )
    {
      tkol := SpSopr.KolOpl;

      if ( Abs(tKol) < 0.00000001 )
        Exit;
    }
  else
    tkol := 1.0;

  GetNalogsInfo(SpSopr.NRec, _Price, _NDS, _Akciz, _Perc, _DrNal);
  OtpEdPrice := (_Price + _NDS + _DrNal) / tKol;

  if ( Abs(_Perc-PrNds2) < 0.01 )
    OtpEdPriceNds2 := _NDS / tKol;
  else
    OtpEdPriceNds1 := _NDS / tKol;

  OtpEdPriceDopNalog := _DrNal / tKol;
}

//******************************************************************************

Procedure PrintHeadReport;
{
  var tdd: Date;
  tdd := d1;

  frmdolgoplG.Write(tdd);                       //01 d1
  tdd := d2;

  frmdolgoplG.Write(tdd);                       //02 d2
  tdd := d3;

  frmdolgoplG.Write(tdd);                       //03 d3
  tdd := d4;

  frmdolgoplG.Write(tdd);                       //03a d4
  frmdolgoplG.Write(AllDescr);                  //04a  AllDescr
  frmdolgoplG.Write(AllKontr);                  //04  AllKontr
  frmdolgoplG.Write(AllParty);                  //041 AllParty
  frmdolgoplG.Write(AllMcUsl);                  //042 AllMcUsl
  frmdolgoplG.Write(NaklAkt);                   //043 NaklAkt

  frmdolgoplG.Write(AllDescrTxt);               //044a AllDescr
  frmdolgoplG.Write(AllKontrTxt);               //044 AllKontr
  frmdolgoplG.Write(AllPartTxt);                //045 AllParty
  frmdolgoplG.Write(AllMcUslTxt);               //046 AllMcUsl
  frmdolgoplG.Write(if (AllDescr > 0, '"'+AllDescrVTxt+'"', ''));      //047a AllDescr
  frmdolgoplG.Write(AllKontrVTxt);              //047 AllKontr
  frmdolgoplG.Write(AllPartVTxt);               //048 AllParty
  frmdolgoplG.Write(AllMcUslVTxt);              //049 AllMcUsl

  frmdolgoplG.Write(DopNalogTxt);               //050 DopNalog

  frmdolgoplG.Write(PrNds1);                    //08 PrNds1
  frmdolgoplG.Write(PrNds2);                    //09 PrNds2

  case AllMcUsl of

    1 :
      GetEd(cpcMc, 1);

    5 :
      GetEd(cpcUsl, 2);

    2 :
      {
        if ( not ItogEd )
          EdName := '';
        else
          {
            if ( ( Modifier GetFirst KatMc where ((  pkGroupMCUsl          <<= KatMc.kGroupMc
                                                 and pkGroupMCUsl + ccTerm >>= KatMc.kGroupMc
                                                 )) ) <> tsOk )
              EdName := '';
            else
              if ( KatMc.cEd = 0 )
                EdName := '';
              else
                {
                  if ( KatEd.NRec = KatMc.cEd )
                    EdName := KatEd.Name;
                  else
                    {
                      if ( ( Modifier GetFirst KatEd where (( KatMc.cEd == KatEd.NRec ))) <> tsOk )
                        EdName := '';
                      else
                        EdName := KatEd.Name;
                    }
                }
          }
      }

    6 :
      {
        if ( not ItogEd )
          EdName := '';
        else
          {
            if ( (Modifier GetFirst KatUsl where ((  pkGroupMCUsl          <<= KatUsl.kGroupUsl
                                                  and pkGroupMCUsl + ccTerm >>= KatUsl.kGroupUsl
                                                  ))) <> tsOk )
              EdName := '';
            else
              if ( KatUsl.cEd = 0 )
                EdName := '';
              else
                {
                  if ( KatEd.NRec = KatUsl.cEd )
                    EdName := KatEd.Name;
                  else
                    {
                      if ( (GetFirst KatEd where (( KatUsl.cEd == KatEd.NRec ))) <> tsOk )
                        EdName := '';
                      else
                        EdName := KatEd.Name;
                    }
                }
          }
      }

  else
    EdName := '';

  end; //case

  frmdolgoplG.Write(EdName);                    //10 pEdname

  frmdolgoplG.Write(ByOpr);                     //11 byOpr
  frmdolgoplG.Write(Detal);                     //12
  frmdolgoplG.Write(RubTysMln);                 //13 0-в рублях 1-в тысячах 2-в миллионах
  frmdolgoplG.Write(TysEd);                     //14 0-в учетных ед. 1-в тысячах уч.ед

  AllHozDoc := 2;
  frmdolgoplG.Write(TiDkGalTxt);              //15

  AllHozDoc := 71;
  frmdolgoplG.Write(TiDkGalTxt);              //16

  AllHozDoc := 82;
  frmdolgoplG.Write(TiDkGalTxt);              //17

  AllHozDoc := 84;
  frmdolgoplG.Write(TiDkGalTxt);              //18

  var dSta : boolean;

  case AllKontr of

    3 :

      _Loop Pick2
        {
          if not notbr
            Break;

          frmdolgoplG.PutEventById(feDoLoop, fcpAllKontr3);
          KatOrg.NRec := Pick2.cRec;

          if ( GetEqual(#KatOrg, 0) )
            frmdolgoplG.Write(KatOrg.Name);
          else
            frmdolgoplG.Write('Ошибка поиска контрагента.');
        }

    5 :
    
      _Loop Pick2
        {
          if not notbr
            Break;

          frmdolgoplG.PutEventById(feDoLoop, fcpAllKontr3);
          GroupSch.NRec := Pick2.cRec;

          if (GetEqual(#GroupSch, 0))
            frmdolgoplG.Write(GroupSch.Name);
          else
            frmdolgoplG.Write('Ошибка поиска группы ДО.');
        }

  end;

  case AllParty of

    3 :

      _Loop Pick3
        {
          if not notbr
            Break;

          frmdolgoplG.PutEventById(feDoLoop, fcpAllParty3);
          KatParty.NRec := Pick3.cRec;

          if ( GetEqual(#KatParty, 0) )
            frmdolgoplG.Write(KatParty.Name);
          else
            frmdolgoplG.Write('Ошибка поиска партии.');
        }

  end;

  Case AllMcUsl of

    3 :
      _Loop Pick
        {
          if not notbr
            Break;

          frmdolgoplG.PutEventById(feDoLoop,fcpAllMcUsl3);
          KatMC.Nrec:=Pick.cRec;

          if ( GetEqual(#KatMc, 0) )
            frmdolgoplG.Write(KatMC.Name + if (Trim(KatMc.BarKod)='','',' (Номенкл.№ '+Trim(KatMc.BarKod)+')'));
          else
            frmdolgoplG.Write('Ошибка поиска МЦ.');
        }

    7 :
      _Loop Pick
        {
          if not notbr
            Break;

          frmdolgoplG.PutEventById(feDoLoop,fcpAllMcUsl3);
          KatUsl.Nrec:=Pick.cRec;

          if ( GetEqual(#KatUsl, 0) )
            frmdolgoplG.Write(KatUsl.Name + if (Trim(KatUsl.Kod)='','',' (Код '+Trim(KatUsl.Kod)+')'))
          else
            frmdolgoplG.Write('Ошибка поиска услуги.');
        }
  end;

  nOrg                      := 0;
  RepDolg1Kol               := 0.0;
  RepDolg1Sum               := 0.0;
  RepOtgrKol                := 0.0;
  RepOtgrSum                := 0.0;
  RepOtgrSumNds1            := 0.0;
  RepOtgrSumNds2            := 0.0;
  RepOtgrSumNoNds           := 0.0;
  RepOtgrSumDopNalog        := 0.0;
  RepOplKol                 := 0.0;
  RepOplSum                 := 0.0;
  RepOplSumNds1             := 0.0;
  RepOplSumNds2             := 0.0;
  RepOplSumNoNds            := 0.0;
  RepOplSumDopNalog         := 0.0;
  RepDolg2Kol               := 0.0;
  RepDolg2Sum               := 0.0;

//  TiDkGal = 2
  RepMoneyOplKol            := 0.0;
  RepMoneyOplSum            := 0.0;
  RepMoneyOplSumNds1        := 0.0;
  RepMoneyOplSumNds2        := 0.0;
  RepMoneyOplSumNoNds       := 0.0;
  RepMoneyOplSumDopNalog    := 0.0;

//  TiDkGal = 71
  RepVzachetOplKol          := 0.0;
  RepVzachetOplSum          := 0.0;
  RepVzachetOplSumNds1      := 0.0;
  RepVzachetOplSumNds2      := 0.0;
  RepVzachetOplSumNoNds     := 0.0;
  RepVzachetOplSumDopNalog  := 0.0;

//  TiDkGal = 82
  RepOVexelOplKol           := 0.0;
  RepOVexelOplSum           := 0.0;
  RepOVexelOplSumNds1       := 0.0;
  RepOVexelOplSumNds2       := 0.0;
  RepOVexelOplSumNoNds      := 0.0;
  RepOVexelOplSumDopNalog   := 0.0;

//  TiDkGal = 84
  RepSVexelOplKol           := 0.0;
  RepSVexelOplSum           := 0.0;
  RepSVexelOplSumNds1       := 0.0;
  RepSVexelOplSumNds2       := 0.0;
  RepSVexelOplSumNoNds      := 0.0;
  RepSVexelOplSumDopNalog   := 0.0;
};


//******************************************************************************

Procedure PrintHeadOrg;
{
  GetOrg;
  nGrDo                     := 0;
  orgDolg1Kol               := 0.0;
  orgDolg1Sum               := 0.0;
  orgOtgrKol                := 0.0;
  orgOtgrSum                := 0.0;
  orgOtgrSumNds1            := 0.0;
  orgOtgrSumNds2            := 0.0;
  orgOtgrSumNoNds           := 0.0;
  orgOtgrSumDopNalog        := 0.0;
  orgOplKol                 := 0.0;
  orgOplSum                 := 0.0;
  orgOplSumNds1             := 0.0;
  orgOplSumNds2             := 0.0;
  orgOplSumNoNds            := 0.0;
  orgOplSumDopNalog         := 0.0;
  orgDolg2Kol               := 0.0;
  orgDolg2Sum               := 0.0;

//  TiDkGal = 2
  orgMoneyOplKol            := 0.0;
  orgMoneyOplSum            := 0.0;
  orgMoneyOplSumNds1        := 0.0;
  orgMoneyOplSumNds2        := 0.0;
  orgMoneyOplSumNoNds       := 0.0;
  orgMoneyOplSumDopNalog    := 0.0;

//  TiDkGal = 71
  orgVzachetOplKol          := 0.0;
  orgVzachetOplSum          := 0.0;
  orgVzachetOplSumNds1      := 0.0;
  orgVzachetOplSumNds2      := 0.0;
  orgVzachetOplSumNoNds     := 0.0;
  orgVzachetOplSumDopNalog  := 0.0;

//  TiDkGal = 82
  orgOVexelOplKol           := 0.0;
  orgOVexelOplSum           := 0.0;
  orgOVexelOplSumNds1       := 0.0;
  orgOVexelOplSumNds2       := 0.0;
  orgOVexelOplSumNoNds      := 0.0;
  orgOVexelOplSumDopNalog   := 0.0;

//  TiDkGal = 84
  orgSVexelOplKol           := 0.0;
  orgSVexelOplSum           := 0.0;
  orgSVexelOplSumNds1       := 0.0;
  orgSVexelOplSumNds2       := 0.0;
  orgSVexelOplSumNoNds      := 0.0;
  orgSVexelOplSumDopNalog   := 0.0;

  nOrg := nOrg + 1;

  frmdolgoplG.PutEventById(feDoLoop, fcDOOrg3);

  frmdolgoplG.Write(nOrg);                       //01 nOrg
  frmdolgoplG.Write(OrgName);                    //02 orgName
}

//******************************************************************************

Procedure PrintHeadGrDo;
{
  if ( ovGet.vGetGS(TmpGrN.cRec1) )
    GrDOName := ovGet.vGetGSbuf.Name;
  else
    GrDOName := 'Не задана';

  nDo                 := 0;
  GrDODolg1Kol        := 0.0;
  GrDODolg1Sum        := 0.0;
  GrDOOtgrKol         := 0.0;
  GrDOOtgrSum         := 0.0;
  GrDOOtgrSumNds1     := 0.0;
  GrDOOtgrSumNds2     := 0.0;
  GrDOOtgrSumNoNds    := 0.0;
  GrDOOtgrSumDopNalog := 0.0;
  GrDOOplKol          := 0.0;
  GrDOOplSum          := 0.0;
  GrDOOplSumNds1      := 0.0;
  GrDOOplSumNds2      := 0.0;
  GrDOOplSumNoNds     := 0.0;
  GrDOOplSumDopNalog  := 0.0;
  GrDODolg2Kol        := 0.0;
  GrDODolg2Sum        := 0.0;

  nGrDo               := nGrDo + 1;

  if ( Detal < 3 )
    {
      frmdolgoplG.PutEventById(feDoLoop, fcDOGrDO3);

      frmdolgoplG.Write(nGrDo);                      //01 nGrDo
      frmdolgoplG.Write(GrDOName);                   //02 GrDOName
    }
}

//******************************************************************************

Procedure PrintHeadDo;
{
  GetDO;
  nSp               := 0;
  DODolg1Kol        := 0.0;
  DODolg1Sum        := 0.0;
  DOOtgrKol         := 0.0;
  DOOtgrSum         := 0.0;
  DOOtgrSumNds1     := 0.0;
  DOOtgrSumNds2     := 0.0;
  DOOtgrSumNoNds    := 0.0;
  DOOtgrSumDopNalog := 0.0;
  DOOplKol          := 0.0;
  DOOplSum          := 0.0;
  DOOplSumNds1      := 0.0;
  DOOplSumNds2      := 0.0;
  DOOplSumNoNds     := 0.0;
  DOOplSumDopNalog  := 0.0;
  DODolg2Kol        := 0.0;
  DODolg2Sum        := 0.0;

  nDo               := nDo + 1;

  if ( Detal < 2 )
    {
      frmdolgoplG.PutEventById(feDoLoop, fcDODO3);

      frmdolgoplG.Write(nDo);                        //01 nGrDo
      frmdolgoplG.Write(DONumDescr);                 //02 DONumDescr
      frmdolgoplG.Write(DODate);                     //03 DODate
    }
}

//******************************************************************************

Procedure PrintSpP;
Var

  Dolg1Kol
, DolgNds1
, DolgNds2
, DolgDopNalog
, Dolg1Sum
, OtgrKol
, OtgrSumNoNds
, OtgrSumNds1
, OtgrSumNds2
, OtgrSumDopNalog
, OtgrSum
, OplKol
, OplSumNoNds
, OplSumNds1
, OplSumNds2
, OplSumDopNalog
, OplSum
, Dolg2Kol
, Dolg2Sum
, OtpNds1
, OtpNds2
, OtpDopNalog
                   : double;

  VidOpl
                   : string;

  i
                   : word;

  ii
, FindI
                   : longint;

  FlagFind
                   : integer;
{
  GetEd(SpSopr.cMcUsl, SpSopr.PrMc);
  GetOtpEd;

  var
    PRC
  , PRCNds1
  , PRCNds2
  , PRCDopNalog
  , OEK
                 : double;

  GetNds;

  if ( RubTysMln = 1 )
    {
      PRC := OtpEdPrice / 1000.0;
      PRCNds1 := OtpEdPriceNds1 / 1000.0;
      PRCNds2 := OtpEdPriceNds2 / 1000.0;
      PRCDopNalog := OtpEdPriceDopNalog / 1000.0;
    }
  else
    if ( RubTysMln = 2 )
      {
        PRC := OtpEdPrice / 1000000.0;
        PRCNds1 := OtpEdPriceNds1 / 1000000.0;
        PRCNds2 := OtpEdPriceNds2 / 1000000.0;
        PRCDopNalog := OtpEdPriceDopNalog / 1000000.0;
      }
    else
      {
        PRC := OtpEdPrice;
        PRCNds1 := OtpEdPriceNds1;
        PRCNds2 := OtpEdPriceNds2;
        PRCDopNalog := OtpEdPriceDopNalog;
      }

  if ( TysEd = 2 )
    OEK := OtpEdKoef / 1000000.0;
  else
    if ( TysEd = 1 )
      OEK := OtpEdKoef / 1000.0;
    else
      OEK := OtpEdKoef;

  Dolg1Sum          := TmpGrN.Sums[1] * PRC;
  DolgNds1          := TmpGrN.Sums[1] * PRCNds1;
  DolgNds2          := TmpGrN.Sums[1] * PRCNds2;
  DolgDopNalog      := TmpGrN.Sums[1] * PRCDopNalog;

  OtgrSum           := TmpGrN.Sums[2] * PRC;
  OtgrSumNds1       := TmpGrN.Sums[2] * PRCNds1;
  OtgrSumNds2       := TmpGrN.Sums[2] * PRCNds2;
  OtgrSumNoNds      := OtgrSum - OtgrSumNds1 - OtgrSumNds2;

  OtgrSumDopNalog   := TmpGrN.Sums[2] * PRCDopNalog;
  OplSum            := TmpGrN.Sums[3] * PRC;
//  OplSumNds1        := TmpGrN.Sums[3] * OtpEdPriceNds1;
//  OplSumNds2        := TmpGrN.Sums[3] * OtpEdPriceNds2;

  OplSumNds1        := TmpGrN.Sums[3] * PRCNds1;
  OplSumNds2        := TmpGrN.Sums[3] * PRCNds2;
  OplSumNoNds       := OplSum - OplSumNds1 - OplSumNds2;

//  OplSumDopNalog    := TmpGrN.Sums[3] * OtpEdPriceDopNalog;
  OplSumDopNalog    := TmpGrN.Sums[3] * PRCDopNalog;
  Dolg2Sum          := Dolg1Sum + OtgrSum - OplSum;

  OtpNds1           := DolgNds1+OtgrSumNds1-OplSumNds1;
  OtpNds2           := DolgNds2+OtgrSumNds2-OplSumNds2;
  OtpDopNalog       := DolgDopNalog+OtgrSumDopNalog-OplSumDopNalog;

  Dolg1Kol          := TmpGrN.Sums[1] * OEK;
  OtgrKol           := TmpGrN.Sums[2] * OEK;
  OplKol            := TmpGrN.Sums[3] * OEK;
  Dolg2Kol          := Dolg1Kol + OtgrKol - OplKol;

  DODolg1Sum        := DODolg1Sum        + Dolg1Sum;
  DOOtgrSum         := DOOtgrSum         + OtgrSum;
  DOOtgrSumNds1     := DOOtgrSumNds1     + OtgrSumNds1;
  DOOtgrSumNds2     := DOOtgrSumNds2     + OtgrSumNds2;
  DOOtgrSumNoNds    := DOOtgrSumNoNds    + OtgrSumNoNds;
  DOOtgrSumDopNalog := DOOtgrSumDopNalog + OtgrSumDopNalog;

  DOOplSum          := DOOplSum          + OplSum;
  DOOplSumNds1      := DOOplSumNds1      + OplSumNds1;
  DOOplSumNds2      := DOOplSumNds2      + OplSumNds2;
  DOOplSumNoNds     := DOOplSumNoNds     + OplSumNoNds;
  DOOplSumDopNalog  := DOOplSumDopNalog  + OplSumDopNalog;
  DODolg2Sum        := DODolg2Sum        + Dolg2Sum;

  if ( ItogEd or (AllMcUsl = 1) or (AllMcUsl = 5) )
    {
      DODolg1Kol    := DODolg1Kol     + Dolg1Kol;
      DOOtgrKol     := DOOtgrKol      + OtgrKol;
      DOOplKol      := DOOplKol       + OplKol;
      DODolg2Kol    := DODolg2Kol     + Dolg2Kol;
    }

//  TiDkGal = 2
  orgMoneyOplKol             := orgMoneyOplKol + TmpGrN.Sums[11] * OEK;
  orgMoneyOplSum             := orgMoneyOplSum + TmpGrN.Sums[11] * PRC;
  orgMoneyOplSumNds1         := orgMoneyOplSumNds1 + TmpGrN.Sums[11] * PRCNds1;
  orgMoneyOplSumNds2         := orgMoneyOplSumNds2 + TmpGrN.Sums[11] * PRCNds2;
  orgMoneyOplSumNoNds        := orgMoneyOplSum - orgMoneyOplSumNds1 - orgMoneyOplSumNds2;
  orgMoneyOplSumDopNalog     := orgMoneyOplSumDopNalog + TmpGrN.Sums[11] * PRCDopNalog;

//  TiDkGal = 71
  orgVzachetOplKol           := orgVzachetOplKol + TmpGrN.Sums[12] * OEK;
  orgVzachetOplSum           := orgVzachetOplSum + TmpGrN.Sums[12] * PRC;
  orgVzachetOplSumNds1       := orgVzachetOplSumNds1 + TmpGrN.Sums[12] * PRCNds1;
  orgVzachetOplSumNds2       := orgVzachetOplSumNds2 + TmpGrN.Sums[12] * PRCNds2;
  orgVzachetOplSumNoNds      := orgVzachetOplSum - orgVzachetOplSumNds1 - orgVzachetOplSumNds2;
  orgVzachetOplSumDopNalog   := orgVzachetOplSumDopNalog + TmpGrN.Sums[12] * PRCDopNalog;

//  TiDkGal = 82
  orgOVexelOplKol            := orgOVexelOplKol + TmpGrN.Sums[13] * OEK;
  orgOVexelOplSum            := orgOVexelOplSum + TmpGrN.Sums[13] * PRC;
  orgOVexelOplSumNds1        := orgOVexelOplSumNds1 + TmpGrN.Sums[13] * PRCNds1;
  orgOVexelOplSumNds2        := orgOVexelOplSumNds2 + TmpGrN.Sums[13] * PRCNds2;
  orgOVexelOplSumNoNds       := orgOVexelOplSum - orgOVexelOplSumNds1 - orgOVexelOplSumNds2;
  orgOVexelOplSumDopNalog    := orgOVexelOplSumDopNalog + TmpGrN.Sums[13] * PRCDopNalog;

//  TiDkGal = 84
  orgSVexelOplKol            := orgSVexelOplKol + TmpGrN.Sums[14] * OEK;
  orgSVexelOplSum            := orgSVexelOplSum + TmpGrN.Sums[14] * PRC;
  orgSVexelOplSumNds1        := orgSVexelOplSumNds1 + TmpGrN.Sums[14] * PRCNds1;
  orgSVexelOplSumNds2        := orgSVexelOplSumNds2 + TmpGrN.Sums[14] * PRCNds2;
  orgSVexelOplSumNoNds       := orgSVexelOplSum - orgSVexelOplSumNds1 - orgSVexelOplSumNds2;
  orgSVexelOplSumDopNalog    := orgSVexelOplSumDopNalog + TmpGrN.Sums[14] * PRCDopNalog;

  nSp           := nSp + 1;

// ALL MC 03/31/99 12: 00pm

  if ( Detal = 4 )
    {
      DecNextMc := 0;
      ii := 1;           // когда NextMc = 0

      DecNextMc := 0;   // для новых элементов массива
      FlagFind  := 0;

      if ( NextMc > 0 )
        {
          // поиск в неупорядоченном массиве

          For (ii := 1;ii <= NextMc;ii++)
            {
              if ( a_McUslName[ii] = McUslName )
                {
                  FlagFind  := 1;
                  FindI     := ii;
                  DecNextMc := -1; // true: N = N , false: N = N + 1
                }
            }
        }

      if ( FlagFind = 1 )
        ii := FindI;

      if ( ii > NextMc )
        {
          NextMc := NextMc + 1;

          a_Dolg1Sum[ii]           := 0;

          a_DolgNds1[ii]           := 0;
          a_DolgNds2[ii]           := 0;
          a_DolgDopNalog[ii]       := 0;

          a_OtgrSum[ii]            := 0;
          a_OtgrSumNds1[ii]        := 0;
          a_OtgrSumNds2[ii]        := 0;
          a_OtgrSumNoNds[ii]       := 0;
          a_OtgrSumDopNalog[ii]    := 0;
          a_OplSum[ii]             := 0;
          a_OplSumNds1[ii]         := 0;
          a_OplSumNds2[ii]         := 0;
          a_OplSumNoNds[ii]        := 0;
          a_OplSumDopNalog[ii]     := 0;
          a_Dolg2Sum[ii]           := 0;

          a_Dolg1Kol[ii]           := 0;
          a_OtgrKol[ii]            := 0;
          a_OplKol[ii]             := 0;
          a_Dolg2Kol[ii]           := 0;

          a_OtpEdKoef[ii]          := 0;
          a_OtpEdPrice[ii]         := 0;
          a_OtpEdPriceNds1[ii]     := 0;
          a_OtpEdPriceNds2[ii]     := 0;
          a_OtpEdPriceDopNalog[ii] := 0;
          a_OtpEdKolDolg[ii]       := 0;
          a_OtpEdKolOtgr[ii]       := 0;
          a_OtpEdKolOpl[ii]        := 0;

          a_OtpNds1[ii]            := 0;
          a_OtpNds2[ii]            := 0;
          a_OtpDopNalog[ii]        := 0;
        }

      a_DolgNds1[ii]           := a_DolgNds1[ii]           + DolgNds1;
      a_DolgNds2[ii]           := a_DolgNds2[ii]           + DolgNds2;
      a_DolgDopNalog[ii]       := a_DolgDopNalog[ii]       + DolgDopNalog;

      a_Dolg1Sum[ii]           := a_Dolg1Sum[ii]           + Dolg1Sum;
      a_OtgrSum[ii]            := a_OtgrSum[ii]            + OtgrSum;
      a_OtgrSumNds1[ii]        := a_OtgrSumNds1[ii]        + OtgrSumNds1;
      a_OtgrSumNds2[ii]        := a_OtgrSumNds2[ii]        + OtgrSumNds2;
      a_OtgrSumNoNds[ii]       := a_OtgrSumNoNds[ii]       + OtgrSumNoNds;
      a_OtgrSumDopNalog[ii]    := a_OtgrSumDopNalog[ii]    + OtgrSumDopNalog;
      a_OplSum[ii]             := a_OplSum[ii]             + OplSum;
      a_OplSumNds1[ii]         := a_OplSumNds1[ii]         + OplSumNds1;
      a_OplSumNds2[ii]         := a_OplSumNds2[ii]         + OplSumNds2;
      a_OplSumNoNds[ii]        := a_OplSumNoNds[ii]        + OplSumNoNds;
      a_OplSumDopNalog[ii]     := a_OplSumDopNalog[ii]     + OplSumDopNalog;
      a_Dolg2Sum[ii]           := a_Dolg2Sum[ii]           + Dolg2Sum;

      a_Dolg1Kol[ii]           := a_Dolg1Kol[ii]           + Dolg1Kol;
      a_OtgrKol[ii]            := a_OtgrKol[ii]            + OtgrKol;
      a_OplKol[ii]             := a_OplKol[ii]             + OplKol;
      a_Dolg2Kol[ii]           := a_Dolg2Kol[ii]           + Dolg2Kol;

      a_OtpEdKoef[ii]          := a_OtpEdKoef[ii]          + OtpEdKoef;
      a_OtpEdPrice[ii]         := a_OtpEdPrice[ii]         + OtpEdPrice;
      a_OtpEdPriceNds1[ii]     := a_OtpEdPriceNds1[ii]     + OtpEdPriceNds1;
      a_OtpEdPriceNds2[ii]     := a_OtpEdPriceNds2[ii]     + OtpEdPriceNds2;
      a_OtpEdPriceDopNalog[ii] := a_OtpEdPriceDopNalog[ii] + OtpEdPriceDopNalog;
      a_OtpEdKolDolg[ii]       := a_OtpEdKolDolg[ii]       + TmpGrN.Sums[1];
      a_OtpEdKolOtgr[ii]       := a_OtpEdKolOtgr[ii]       + TmpGrN.Sums[2];
      a_OtpEdKolOpl[ii]        := a_OtpEdKolOpl[ii]        + TmpGrN.Sums[3];

      a_OtpNds1[ii]            := a_OtpNds1[ii]            + OtpNds1;
      a_OtpNds2[ii]            := a_OtpNds2[ii]            + OtpNds2;
      a_OtpDopNalog[ii]        := a_OtpDopNalog[ii]        + OtpDopNalog;

      a_McUslName[ii]          := McUslName; // s
      a_OtpEdName[ii]          := OtpEdName; // s
      a_EdName[ii]             := EdName;    // s

      a_CurrGroupMC[ii]        := CurrGroupMC; // группа данной МС/услуги
      a_FlagThisMC[ii]         := FlagThisMC; // для МС - true , для услуг - false
    }
// ALL MC 03/31/99 12: 01pm

  if ( Detal < 1 )
    {
      frmdolgoplG.PutEventById(feDoLoop, fcDOSp3);

      frmdolgoplG.Write(nSp);                        //01 nSp
      frmdolgoplG.Write(McUslName);                  //02 McName
      frmdolgoplG.Write(OtpEdName);                  //03 OtpEdName
      frmdolgoplG.Write(OtpEdKoef);                  //04 OtpEdKoef
      frmdolgoplG.Write(OtpEdPrice);                 //05 OtpEdPrice
      frmdolgoplG.Write(OtpEdPriceNds1);             //06 OtpEdPriceNds1
      frmdolgoplG.Write(OtpEdPriceNds2);             //07 OtpEdPriceNds2
      frmdolgoplG.Write(OtpEdPriceDopNalog);         //07а OtpEdPriceDopNalog
      frmdolgoplG.Write(TmpGrN.Sums[1]);        //08 OtpEdKolDolg
      frmdolgoplG.Write(TmpGrN.Sums[2]);        //09 OtpEdKolOtgr
      frmdolgoplG.Write(TmpGrN.Sums[3]);         //10 OtpEdKolOpl
      frmdolgoplG.Write(EdName);                     //11 EdName
      frmdolgoplG.Write(Dolg1Kol);                   //12 Dolg1Kol
      frmdolgoplG.Write(Dolg1Sum);                   //13 Dolg1Sum
      frmdolgoplG.Write(OtgrKol);                    //14 OtgrKol
      frmdolgoplG.Write(OtgrSumNoNds);               //15 OtgrSumNoNds
      frmdolgoplG.Write(OtgrSumNds1);                //16 OtgrSumNds1
      frmdolgoplG.Write(OtgrSumNds2);                //17 OtgrSumNds2
      frmdolgoplG.Write(OtgrSumDopNalog);            //17a OtgrSumDopNalog
      frmdolgoplG.Write(OtgrSum);                    //18 OtgrSum
      frmdolgoplG.Write(OplKol);                     //19 OplKol
      frmdolgoplG.Write(OplSumNoNds);                //20 OplSumNoNds
      frmdolgoplG.Write(OplSumNds1);                 //21 OplSumNds1
      frmdolgoplG.Write(OplSumNds2);                 //22 OplSumNds2
      frmdolgoplG.Write(OplSumDopNalog);             //22a OplSumDopNalog
      frmdolgoplG.Write(OplSum);                     //23 OplSum
      frmdolgoplG.Write(Dolg2Kol);                   //24 Dolg2Kol
      frmdolgoplG.Write(Dolg2Sum);                   //25 Dolg2Sum

      VidOpl := '';

      For (i := 1; i <= 10; i++)
        if ( TmpGrN.ls[i] > 0 )
          {
            AllHozDoc := word(TmpGrN.ls[i]);
            VidOpl := VidOpl + TiDkGalTxt + ', ';
          }

      frmdolgoplG.Write(SubStr(VidOpl, 1, Length(VidOpl) - 2));       //26 VidOpl
    }
}

//******************************************************************************

Procedure PrintFootDo;
{
  if ( Detal < 2 )
    {
      frmdolgoplG.Write(nSp);                   //01 nSpDo
      frmdolgoplG.Write(DODolg1Kol);            //02 DODolg1Kol
      frmdolgoplG.Write(DODolg1Sum);            //03 DODolg1Sum
      frmdolgoplG.Write(DOOtgrKol);             //04 DOOtgrKol
      frmdolgoplG.Write(DOOtgrSum);             //05 DOOtgrSum
      frmdolgoplG.Write(DOOtgrSumNds1);         //06 DOOtgrSumNds1
      frmdolgoplG.Write(DOOtgrSumNds2);         //07 DOOtgrSumNds2
      frmdolgoplG.Write(DOOtgrSumNoNds);        //08 DOOtgrSumNoNds
      frmdolgoplG.Write(DOOtgrSumDopNalog);     //08a DOOtgrSumDopNalog
      frmdolgoplG.Write(DOOplKol);              //09 DOOplKol
      frmdolgoplG.Write(DOOplSum);              //10 DOOplSum
      frmdolgoplG.Write(DOOplSumNds1);          //11 DOOplSumNds1
      frmdolgoplG.Write(DOOplSumNds2);          //12 DOOplSumNds2
      frmdolgoplG.Write(DOOplSumNoNds);         //13 DOOplSumNoNds
      frmdolgoplG.Write(DOOplSumDopNalog);      //13a DOOplSumDopNalog
      frmdolgoplG.Write(DODolg2Kol);            //14 DODolg2Kol
      frmdolgoplG.Write(DODolg2Sum);            //15 DODolg2Sum
    }

  GrDODolg1Kol        := GrDODolg1Kol        + DODolg1Kol;
  GrDODolg1Sum        := GrDODolg1Sum        + DODolg1Sum;
  GrDOOtgrKol         := GrDOOtgrKol         + DOOtgrKol;
  GrDOOtgrSum         := GrDOOtgrSum         + DOOtgrSum;
  GrDOOtgrSumNds1     := GrDOOtgrSumNds1     + DOOtgrSumNds1;
  GrDOOtgrSumNds2     := GrDOOtgrSumNds2     + DOOtgrSumNds2;
  GrDOOtgrSumNoNds    := GrDOOtgrSumNoNds    + DOOtgrSumNoNds;
  GrDOOtgrSumDopNalog := GrDOOtgrSumDopNalog + DOOtgrSumDopNalog;
  GrDOOplKol          := GrDOOplKol          + DOOplKol;
  GrDOOplSum          := GrDOOplSum          + DOOplSum;
  GrDOOplSumNds1      := GrDOOplSumNds1      + DOOplSumNds1;
  GrDOOplSumNds2      := GrDOOplSumNds2      + DOOplSumNds2;
  GrDOOplSumNoNds     := GrDOOplSumNoNds     + DOOplSumNoNds;
  GrDOOplSumDopNalog  := GrDOOplSumDopNalog  + DOOplSumDopNalog;
  GrDODolg2Kol        := GrDODolg2Kol        + DODolg2Kol;
  GrDODolg2Sum        := GrDODolg2Sum        + DODolg2Sum;
}

//******************************************************************************

Procedure PrintFootGrDo;
{
  if ( Detal < 3 )
    {
      frmdolgoplG.Write(nDo);                   //01 nDoGrDo
      frmdolgoplG.Write(GrDODolg1Kol);          //02 GrDODolg1Kol
      frmdolgoplG.Write(GrDODolg1Sum);          //03 GrDODolg1Sum
      frmdolgoplG.Write(GrDOOtgrKol);           //04 GrDOOtgrKol
      frmdolgoplG.Write(GrDOOtgrSum);           //05 GrDOOtgrSum
      frmdolgoplG.Write(GrDOOtgrSumNds1);       //06 GrDOOtgrSumNds1
      frmdolgoplG.Write(GrDOOtgrSumNds2);       //07 GrDOOtgrSumNds2
      frmdolgoplG.Write(GrDOOtgrSumNoNds);      //08 GrDOOtgrSumNoNds
      frmdolgoplG.Write(GrDOOtgrSumDopNalog);   //08a GrDOOtgrSumDopNalog
      frmdolgoplG.Write(GrDOOplKol);            //09 GrDOOplKol
      frmdolgoplG.Write(GrDOOplSum);            //10 GrDOOplSum
      frmdolgoplG.Write(GrDOOplSumNds1);        //11 GrDOOplSumNds1
      frmdolgoplG.Write(GrDOOplSumNds2);        //12 GrDOOplSumNds2
      frmdolgoplG.Write(GrDOOplSumNoNds);       //13 GrDOOplSumNoNds
      frmdolgoplG.Write(GrDOOplSumDopNalog);    //13a GrDOOplSumDopNalog
      frmdolgoplG.Write(GrDODolg2Kol);          //14 GrDODolg2Kol
      frmdolgoplG.Write(GrDODolg2Sum);          //15 GrDODolg2Sum
    }

  orgDolg1Kol        := orgDolg1Kol        + GrDODolg1Kol;
  orgDolg1Sum        := orgDolg1Sum        + GrDODolg1Sum;
  orgOtgrKol         := orgOtgrKol         + GrDOOtgrKol;
  orgOtgrSum         := orgOtgrSum         + GrDOOtgrSum;
  orgOtgrSumNds1     := orgOtgrSumNds1     + GrDOOtgrSumNds1;
  orgOtgrSumNds2     := orgOtgrSumNds2     + GrDOOtgrSumNds2;
  orgOtgrSumNoNds    := orgOtgrSumNoNds    + GrDOOtgrSumNoNds;
  orgOtgrSumDopNalog := orgOtgrSumDopNalog + GrDOOtgrSumDopNalog;
  orgOplKol          := orgOplKol          + GrDOOplKol;
  orgOplSum          := orgOplSum          + GrDOOplSum;
  orgOplSumNds1      := orgOplSumNds1      + GrDOOplSumNds1;
  orgOplSumNds2      := orgOplSumNds2      + GrDOOplSumNds2;
  orgOplSumNoNds     := orgOplSumNoNds     + GrDOOplSumNoNds;
  orgOplSumDopNalog  := orgOplSumDopNalog  + GrDOOplSumDopNalog;
  orgDolg2Kol        := orgDolg2Kol        + GrDODolg2Kol;
  orgDolg2Sum        := orgDolg2Sum        + GrDODolg2Sum;
}

//******************************************************************************

Procedure PrintFootOrg;
{
  frmdolgoplG.Write(nGrDo);                   //01 nGrDoOrg
  frmdolgoplG.Write(OrgDolg1Kol);             //02 orgDolg1Kol
  frmdolgoplG.Write(OrgDolg1Sum);             //03 orgDolg1Sum
  frmdolgoplG.Write(OrgOtgrKol);              //04 orgOtgrKol
  frmdolgoplG.Write(OrgOtgrSum);              //05 orgOtgrSum
  frmdolgoplG.Write(OrgOtgrSumNds1);          //06 orgOtgrSumNds1
  frmdolgoplG.Write(OrgOtgrSumNds2);          //07 orgOtgrSumNds2
  frmdolgoplG.Write(OrgOtgrSumNoNds);         //08 orgOtgrSumNoNds
  frmdolgoplG.Write(OrgOtgrSumDopNalog);      //08a orgOtgrSumDopNalog
  frmdolgoplG.Write(OrgOplKol);               //09 orgOplKol
  frmdolgoplG.Write(OrgOplSum);               //10 orgOplSum
  frmdolgoplG.Write(OrgOplSumNds1);           //11 orgOplSumNds1
  frmdolgoplG.Write(OrgOplSumNds2);           //12 orgOplSumNds2
  frmdolgoplG.Write(OrgOplSumNoNds);          //13 orgOplSumNoNds
  frmdolgoplG.Write(OrgOplSumDopNalog);       //13a orgOplSumDopNalog
  frmdolgoplG.Write(OrgDolg2Kol);             //14 orgDolg2Kol
  frmdolgoplG.Write(OrgDolg2Sum);             //15 orgDolg2Sum

//  TiDkGal = 2
  frmdolgoplG.Write(OrgMoneyOplKol);          //16
  frmdolgoplG.Write(OrgMoneyOplSum);          //17
  frmdolgoplG.Write(OrgMoneyOplSumNds1);      //18
  frmdolgoplG.Write(OrgMoneyOplSumNds2);      //19
  frmdolgoplG.Write(OrgMoneyOplSumNoNds);     //20
  frmdolgoplG.Write(OrgMoneyOplSumDopNalog);  //21

//  TiDkGal = 71
  frmdolgoplG.Write(OrgVzachetOplKol);        //22
  frmdolgoplG.Write(OrgVzachetOplSum);        //23
  frmdolgoplG.Write(OrgVzachetOplSumNds1);    //24
  frmdolgoplG.Write(OrgVzachetOplSumNds2);    //25
  frmdolgoplG.Write(OrgVzachetOplSumNoNds);   //26
  frmdolgoplG.Write(OrgVzachetOplSumDopNalog);//27

//  TiDkGal = 82
  frmdolgoplG.Write(OrgOVexelOplKol);         //28
  frmdolgoplG.Write(OrgOVexelOplSum);         //29
  frmdolgoplG.Write(OrgOVexelOplSumNds1);     //30
  frmdolgoplG.Write(OrgOVexelOplSumNds2);     //31
  frmdolgoplG.Write(OrgOVexelOplSumNoNds);    //32
  frmdolgoplG.Write(OrgOVexelOplSumDopNalog); //33

//  TiDkGal = 84
  frmdolgoplG.Write(OrgSVexelOplKol);         //34
  frmdolgoplG.Write(OrgSVexelOplSum);         //35
  frmdolgoplG.Write(OrgSVexelOplSumNds1);     //36
  frmdolgoplG.Write(OrgSVexelOplSumNds2);     //37
  frmdolgoplG.Write(OrgSVexelOplSumNoNds);    //38
  frmdolgoplG.Write(OrgSVexelOplSumDopNalog); //39

  RepDolg1Kol        := RepDolg1Kol        + orgDolg1Kol;
  RepDolg1Sum        := RepDolg1Sum        + orgDolg1Sum;
  RepOtgrKol         := RepOtgrKol         + orgOtgrKol;
  RepOtgrSum         := RepOtgrSum         + orgOtgrSum;
  RepOtgrSumNds1     := RepOtgrSumNds1     + orgOtgrSumNds1;
  RepOtgrSumNds2     := RepOtgrSumNds2     + orgOtgrSumNds2;
  RepOtgrSumNoNds    := RepOtgrSumNoNds    + orgOtgrSumNoNds;
  RepOtgrSumDopNalog := RepOtgrSumDopNalog + orgOtgrSumDopNalog;

  RepOplKol          := RepOplKol          + orgOplKol;
  RepOplSum          := RepOplSum          + orgOplSum;
  RepOplSumNds1      := RepOplSumNds1      + orgOplSumNds1;
  RepOplSumNds2      := RepOplSumNds2      + orgOplSumNds2;
  RepOplSumNoNds     := RepOplSumNoNds     + orgOplSumNoNds;
  RepOplSumDopNalog  := RepOplSumDopNalog  + orgOplSumDopNalog;
  RepDolg2Kol        := RepDolg2Kol        + orgDolg2Kol;
  RepDolg2Sum        := RepDolg2Sum        + orgDolg2Sum;

//  TiDkGal = 2
  RepMoneyOplKol           := RepMoneyOplKol           + orgMoneyOplKol;
  RepMoneyOplSum           := RepMoneyOplSum           + orgMoneyOplSum;
  RepMoneyOplSumNds1       := RepMoneyOplSumNds1       + orgMoneyOplSumNds1;
  RepMoneyOplSumNds2       := RepMoneyOplSumNds2       + orgMoneyOplSumNds2;
  RepMoneyOplSumNoNds      := RepMoneyOplSumNoNds      + orgMoneyOplSumNoNds;
  RepMoneyOplSumDopNalog   := RepMoneyOplSumDopNalog   + orgMoneyOplSumDopNalog;

//  TiDkGal = 71
  RepVzachetOplKol         := RepVzachetOplKol         + orgVzachetOplKol;
  RepVzachetOplSum         := RepVzachetOplSum         + orgVzachetOplSum;
  RepVzachetOplSumNds1     := RepVzachetOplSumNds1     + orgVzachetOplSumNds1;
  RepVzachetOplSumNds2     := RepVzachetOplSumNds2     + orgVzachetOplSumNds2;
  RepVzachetOplSumNoNds    := RepVzachetOplSumNoNds    + orgVzachetOplSumNoNds;
  RepVzachetOplSumDopNalog := RepVzachetOplSumDopNalog + orgVzachetOplSumDopNalog;

//  TiDkGal = 82
  RepOVexelOplKol          := RepOVexelOplKol          + orgOVexelOplKol;
  RepOVexelOplSum          := RepOVexelOplSum          + orgOVexelOplSum;
  RepOVexelOplSumNds1      := RepOVexelOplSumNds1      + orgOVexelOplSumNds1;
  RepOVexelOplSumNds2      := RepOVexelOplSumNds2      + orgOVexelOplSumNds2;
  RepOVexelOplSumNoNds     := RepOVexelOplSumNoNds     + orgOVexelOplSumNoNds;
  RepOVexelOplSumDopNalog  := RepOVexelOplSumDopNalog  + orgOVexelOplSumDopNalog;

//  TiDkGal = 84
  RepSVexelOplKol          := RepSVexelOplKol          + orgSVexelOplKol;
  RepSVexelOplSum          := RepSVexelOplSum          + orgSVexelOplSum;
  RepSVexelOplSumNds1      := RepSVexelOplSumNds1      + orgSVexelOplSumNds1;
  RepSVexelOplSumNds2      := RepSVexelOplSumNds2      + orgSVexelOplSumNds2;
  RepSVexelOplSumNoNds     := RepSVexelOplSumNoNds     + orgSVexelOplSumNoNds;
  RepSVexelOplSumDopNalog  := RepSVexelOplSumDopNalog  + orgSVexelOplSumDopNalog;
}

//******************************************************************************

Procedure PrintFootReport;
{
  frmdolgoplG.Write(nOrg);                     //01 nOrgRep
  frmdolgoplG.Write(RepDolg1Kol);              //02 RepDolg1Kol
  frmdolgoplG.Write(RepDolg1Sum);              //03 RepDolg1Sum
  frmdolgoplG.Write(RepOtgrKol);               //04 RepOtgrKol
  frmdolgoplG.Write(RepOtgrSum);               //05 RepOtgrSum
  frmdolgoplG.Write(RepOtgrSumNds1);           //06 RepOtgrSumNds1
  frmdolgoplG.Write(RepOtgrSumNds2);           //07 RepOtgrSumNds2
  frmdolgoplG.Write(RepOtgrSumNoNds);          //08 RepOtgrSumNoNds
  frmdolgoplG.Write(RepOtgrSumDopNalog);       //08a RepOtgrSumDopNalog
  frmdolgoplG.Write(RepOplKol);                //09 RepOplKol
  frmdolgoplG.Write(RepOplSum);                //10 RepOplSum
  frmdolgoplG.Write(RepOplSumNds1);            //11 RepOplSumNds1
  frmdolgoplG.Write(RepOplSumNds2);            //12 RepOplSumNds2
  frmdolgoplG.Write(RepOplSumNoNds);           //13 RepOplSumNoNds
  frmdolgoplG.Write(RepOplSumDopNalog);        //13a RepOplSumDopNalog
  frmdolgoplG.Write(RepDolg2Kol);              //14 RepDolg2Kol
  frmdolgoplG.Write(RepDolg2Sum);              //15 RepDolg2Sum

//  TiDkGal = 2
  frmdolgoplG.Write(RepMoneyOplKol);           //16
  frmdolgoplG.Write(RepMoneyOplSum);           //17
  frmdolgoplG.Write(RepMoneyOplSumNds1);       //18
  frmdolgoplG.Write(RepMoneyOplSumNds2);       //19
  frmdolgoplG.Write(RepMoneyOplSumNoNds);      //20
  frmdolgoplG.Write(RepMoneyOplSumDopNalog);   //21

//  TiDkGal = 71
  frmdolgoplG.Write(RepVzachetOplKol);         //22
  frmdolgoplG.Write(RepVzachetOplSum);         //23
  frmdolgoplG.Write(RepVzachetOplSumNds1);     //24
  frmdolgoplG.Write(RepVzachetOplSumNds2);     //25
  frmdolgoplG.Write(RepVzachetOplSumNoNds);    //26
  frmdolgoplG.Write(RepVzachetOplSumDopNalog); //27

//  TiDkGal = 82
  frmdolgoplG.Write(RepOVexelOplKol);          //28
  frmdolgoplG.Write(RepOVexelOplSum);          //29
  frmdolgoplG.Write(RepOVexelOplSumNds1);      //30
  frmdolgoplG.Write(RepOVexelOplSumNds2);      //31
  frmdolgoplG.Write(RepOVexelOplSumNoNds);     //32
  frmdolgoplG.Write(RepOVexelOplSumDopNalog);  //33

//  TiDkGal = 84
  frmdolgoplG.Write(RepSVexelOplKol);          //34
  frmdolgoplG.Write(RepSVexelOplSum);          //35
  frmdolgoplG.Write(RepSVexelOplSumNds1);      //36
  frmdolgoplG.Write(RepSVexelOplSumNds2);      //37
  frmdolgoplG.Write(RepSVexelOplSumNoNds);     //38
  frmdolgoplG.Write(RepSVexelOplSumDopNalog);  //39
}

#include allmc.prg

//******************************************************************************

Procedure PrintReport;
Var
  SavOrg
, SavGrDO
, SavDO
           : string;

  dSta
           : boolean;
{
  NextMc    := 0;
  DecNextMc := 0;

// if (RecordsInTable(#ObSubSch) = 0)
  if ( GetFirst TmpGrN <> tsOk )
    {
      if ( notBr )
        Message('По установленным ограничениям реализация и задолженности отсутствуют.', InFormation);
    }
  else
    {
      SavOrg  := ''#255;
      SavGrDO := ''#255;
      SavDO   := ''#255;
      PrintHeadReport;

      _Loop TmpGrN2
        {
          if not notbr
            Break;

          if ( (GetFirst TmpGrN where
                        (( word(167) == TmpGrN.kTbl and TmpGrN2.cRec == TmpGrN.cRec ))
               ) <> tsOk
             )
            Continue;

          if ( (GetFirst SpSopr where
                        (( TmpGrN.cRec2 == SpSopr.NRec ))
               ) <> tsOk
             )
            Continue;

          if ( SavOrg <> TmpGrN.Ss[1] )
            {
              if ( SavOrg <> ''#255 )
                {
                  PrintFootDO;
                  PrintFootGrDO;
                  PrintFootOrg;
                }

              SavOrg  := TmpGrN.Ss[1];
              SavGrDO := ''#255;
              SavDO   := ''#255;

              PrintHeadOrg;
            }

          if ( SavGrDO <> TmpGrN.Ss[2] )
            {
              if (SavGrDO<>''#255)
                {
                  PrintFootDO;
                  PrintFootGrDO;
                }

              SavGrDO := TmpGrN.Ss[2];
              SavDO   := ''#255;
              PrintHeadGrDo;
            }

          if ( SavDO <> TmpGrN.Ss[3] )
            {
              if ( SavDO <> ''#255 )
                PrintFootDO;

              SavDO := TmpGrN.Ss[3];
              PrintHeadDo;
            }

          PrintSpP;
        }

      PrintFootDO;
      PrintFootGrDO;
      PrintFootOrg;

      if ( Detal = 4 )
        PrintMCAll;
    }

  if ( (NotBr) and (GetFirst TmpGrN2 = tsOk) )
    frmdolgoplG.ShowFile('');
  else
    frmdolgoplG.AbortForm;
}
