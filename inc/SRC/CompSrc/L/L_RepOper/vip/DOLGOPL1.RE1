//********************************************************************************
//                                                        (c) корпорация Галактика
// Галактика 7.12 - логистика
// Отчет "Ведомость отгрузки и закупки в натуральных показателях"
//
//********************************************************************************

Procedure GetForm;
{
  if (prvid <> 0)
    Exit;

  if ( (Detal > 0) and (not ItogEd) )
    frmDolgOpl1.SetGroup('Без количеств')
  else
    if (Detal > 0)
    {
      frmDolgOpl1.SetGroup( 'Без графы <Наименование матценности/услуги>'#1
                          + 'Без количеств'
                          );
    }
    else
      frmDolgOpl1.SetGroup('');
}

Function NotBr : boolean;
{
  if (prvid = 0)
    notBr := (NextVisual and (not frmDolgOpl1.Error));
  else
    notBr := NextVisual;
}

Function GetGrMCUsl(PrMCU : word) : boolean;
{
  GetGrMCUsl   := false;
  GrMcUslName  := '';
  pkGroupMCUsl := '';

  if ( PrMCU = 1 )
    {
      if ( cpcGrMC <> 0 )
        {
          if ( cpcGrMC = GroupMC.nRec )
           {
              GetGrMCUsl   := true;
              pkGroupMCUsl := GroupMc.Kod;
              GrMcUslName  := GroupMc.Name;

              Exit;
            }

          if ( Modifier GetFirst GroupMC where (( cpcGrMC == GroupMC.nRec )) <> tsOk )
            Exit;

        GetGrMCUsl   := true;
        pkGroupMCUsl := GroupMc.Kod;
        GrMcUslName  := GroupMc.Name;
      }
    }
  else
    {
      if ( cpcGrUsl <> 0 )
        {
          if ( cpcGrUsl = GroupUsl.nRec )
            {
              GetGrMCUsl   := true;
              pkGroupMCUsl := GroupUsl.Kod;
              GrMcUslName  := GroupUsl.Name;

              Exit;
            }

          if ( Modifier GetFirst GroupUsl where (( cpcGrUsl == GroupUsl.nRec )) <> tsOk )
            Exit;

          GetGrMCUsl   := true;
          pkGroupMCUsl := GroupUsl.Kod;
          GrMcUslName  := GroupUsl.Name;
        }
    }
}

Function GetMCUsl(tMc : comp; PrMCU : word) : boolean;
{
  McUslName := '';

  if ( tMc = 0 )
    {
      GetMCUsl := false;
      Exit;
    }

  tcMcGet := tMc;

  if ( PrMCU = 1 )
    {
      if ( KatMc.nRec = tcMcGet )
        {
          McUslName := KatMC.Name;
          GetMCUsl := true;
          Exit;
        }

      if ( Modifier GetFirst KatMC where (( tcMcGet == KatMC.nRec )) <> tsOk )
        {
          McUslName := '';
          GetMCUsl  := false;
          Exit;
        }

      McUslName := KatMC.Name;
    }
  else
    {
      if ( KatUsl.nRec = tcMcGet )
        {
          McUslName := KatUsl.Name;
          GetMCUsl := true;

          Exit;
        }

      if ( Modifier GetFirst KatUsl where (( tcMcGet == KatUsl.nRec )) <> tsOk )
        {
          McUslName := '';
          GetMCUsl  := false;

          Exit;
        }

      McUslName := KatUsl.Name;
    }

  GetMCUsl := true;
}

Function GetEd(tMc : comp; PrMCU : word) : boolean;
{
  EdName := '';
  GetEd := false;

  if ( GetMCUsl(tMc, PrMCU))
    {
      if ( PrMCU = 1 )
        {
          if ( KatMc.cEd = 0 )
            Exit;

          if ( KatEd.nRec = KatMc.cEd )
            {
              GetEd  := true;
              EdName := KatEd.Name;

              Exit;
            }

          if ( Modifier GetFirst KatEd where (( KatMc.cEd == KatEd.nRec )) <> tsOk )
            Exit;

          GetEd  := true;
          EdName := KatEd.Name;
        }
      else
        {
          if ( KatUsl.cEd = 0 )
            Exit;

          if ( KatEd.nRec = KatUsl.cEd )
            {
              GetEd  := true;
              EdName := KatEd.Name;

              Exit;
            }

          if ( Modifier GetFirst KatEd where (( KatUsl.cEd == KatEd.nRec )) <> tsOk )
            Exit;

          GetEd  := true;
          EdName := KatEd.Name;
       }
    }
}

Function GetOtpEd(pcOtpEd : comp) : boolean;
{
  OtpEdName := '';
  OtpEdKoef := 1.0;
  GetOtpEd  := false;

  if ( pcOtpEd = 0 )
    Exit;

  if ( KatOtpEd.nRec = pcOtpEd )
    {
      OtpEdName := KatOtpEd.Name;
      OtpEdKoef := KatOtpEd.koef;
      GetOtpEd  := true;

      Exit;
    }

  if ( GetFirst KatOtpEd where (( pcOtpEd == KatOtpEd.nRec )) <> tsOk )
    Exit;

  OtpEdName := KatOtpEd.Name;
  OtpEdKoef := KatOtpEd.koef;
  GetOtpEd  := true;
}

Function Getdo : boolean;
{
  doNumDescr := 'Не задан';
  doDate     := ZeroDate;
  Getdo      := false;

  if ( not vGetKs(SpSopr.cSopr) )    Exit;
  if ( not ovGet.vGetSD(vKs.Ks.cStepdoc) ) Exit;
  if ( not ovGet.vGetBD(ovGet.vGetSDbuf.cBasedoc) ) Exit;

  doNumDescr := PrintNumber(ovGet.vGetBDbuf.Descr, ovGet.vGetBDbuf.Nodoc);
  doDate     := ovGet.vGetBDbuf.ddoc;
  doNRec     := ovGet.vGetBDbuf.nRec;
  Getdo      := true;
}

Function Getorg : boolean;
{
  orgName := 'Не задан';
  Getorg  := false;

  if ( not vGetKs(SpSopr.cSopr) )
    Exit;

  if ( not ovGet.vGetKO(vKs.Ks.corg) )
    {
      if ( Getdo )
        {
          if ( not ovGet.vGetKO(ovGet.vGetBDbuf.corg) )
            Exit;
        }
      else
        Exit;
    }

  orgName := ovGet.vGetKObuf.Name;
  orgNRec := ovGet.vGetKObuf.nRec;
  Getorg  := true;
}

Function GetGrdo : boolean;
Var
  ng : boolean;
  cc : comp;
{
  GrdoName := 'Не задана';
  GetGrdo  := false;

  if ( not Getdo )
    Exit;

  ng := true;

  if ( IsValid(#SpGrSch) )
    ng := (ovGet.vGetSDbuf.cBasedoc <> SpGrSch.cBasedoc);

  if ( ng )
    {
      cc := ovGet.vGetSDbuf.cBasedoc;

      if ( GetFirst SpGrSch where ((  word(0) == SpGrSch.wList
                                  and cc      == SpGrSch.cBasedoc
                                  )) <> tsOk )
        Exit;
    }

  if ( not ovGet.vGetGS(SpGrSch.cGroupSch) )
    Exit;

  GrdoName := ovGet.vGetGSbuf.Name;
  GrdoCode := ovGet.vGetGSbuf.Kod;
  GrdoNrec := ovGet.vGetGSbuf.nRec;
  GetGrdo  := true;
}

Function GetDG : boolean;
{
  doGNumDescr := 'Не задан';
  doGDate     := ZeroDate;
  GetDG       := false;

  if ( not vGetKs(SpSopr.cSopr) )
    Exit;

  if ( not vGetdog(vKs.Ks.cdogovor) )
    Exit;

  doGNumDescr := PrintNumber(vdog.dog.Descr, vdog.dog.Nodoc);
  doGDate     := vdog.dog.ddoc;
  doGNRec     := vdog.dog.nRec;
  GetDG       := true;
}

Function GetGrDG : boolean;
Var
  ng : boolean;
  cc : comp;
{
  GrdoName := 'Не задана';
  GetGrDG  := false;

  if ( not GetDG )
    Exit;

  ng := true;

  if ( IsValid(#SpGrSch1) )
    ng := (vdog.dog.nRec <> SpGrSch1.cBasedoc);

  if ( ng )
    {
      cc := vdog.dog.nRec;

      if ( GetFirst SpGrSch1 where ((  word(1) == SpGrSch1.wList
                                   and cc      == SpGrSch1.cBasedoc
                                   )) <> tsOk )
        Exit;
    }

  if ( not ovGet.vGetGS(SpGrSch1.cGroupSch) )
    Exit;

  GrdoGName := ovGet.vGetGSbuf.Name;
  GrdoGCode := ovGet.vGetGSbuf.Kod;
  GrdoGNrec := ovGet.vGetGSbuf.nRec;
  GetGrDG   := true;
}

Function GetNds : boolean;
Var
  _Price
, _NDS
, _Akciz
, _Perc
, _DrNal
, tkol
           : double;
{
  GetNds := true;
  OtpEdPrice         := 0.0;
  OtpEdPriceNds1     := 0.0;
  OtpEdPriceNds2     := 0.0;
  OtpEdPricedopNalog := 0.0;

  if ( (SpSopr.prMC = 1) or (SpSopr.VidSopr <> 101) )
    {
      tkol := SpSopr.KolOpl;

      if ( Abs(tKol) < 0.00000001 )
        Exit;
    }
  else
    tkol := 1.0;

  GetNalogsInfo(SpSopr.nRec, _Price, _NDS, _Akciz, _Perc, _DrNal);
  OtpEdPrice := (_Price + _NDS + _DrNal) / tKol;

  if ( Abs(_Perc - PrNds2) < 0.01 )
    OtpEdPriceNds2 := _NDS / tKol;
  else
    OtpEdPriceNds1 := _NDS / tKol;

  OtpEdPricedopNalog := _DrNal / tKol;
}

Function GetRz : boolean;
Var
  tkol : double;
{
  GetRz := true;

  OtpEdPrice     := 0.0;
  OtpEdPriceNds1 := 0.0;
  OtpEdPriceNds2 := 0.0;
  OtpEdPricedopNalog := 0.0;

  tkol := RzSpDoc.Kol;

  if ( Abs(tKol) < 0.00000001 )
    Exit;

  OtpEdPrice := RzSpDoc.Price;
}

Procedure PrintHeadReport;
Var
  tdd  : date;
  dSta : boolean;
{
  if (prvid = 0)
    {
      frmDolgOpl1.Write(word(pDirect));             //00 wDirect
      tdd := d1;

      frmDolgOpl1.Write(tdd);                       //01 d1
      tdd := d2;

      frmDolgOpl1.Write(tdd);                       //02 d2
      tdd := d3;

      frmDolgOpl1.Write(tdd);                       //03 d3
      tdd := d4;

      frmDolgOpl1.Write(tdd);                       //03a d4
      frmDolgOpl1.Write(AllDescr);                  //04a  AllDescr
      frmDolgOpl1.Write(AllKontr);                  //04  AllKontr
      frmDolgOpl1.Write(AllOtvPodr);                //04b AllOtvPodr
      frmDolgOpl1.Write(AllParty);                  //041 AllParty
      frmDolgOpl1.Write(AllMcUsl);                  //042 AllMcUsl
      frmDolgOpl1.Write(NaklAkt);                   //043 NaklAkt
      frmDolgOpl1.Write(AllDescrTxt);               //044a AllDescr
      frmDolgOpl1.Write(AllKontrTxt);               //044 AllKontr
      frmDolgOpl1.Write(AllOtvPodrTxt);             //044b AllOtvPodr
      frmDolgOpl1.Write(AllPartTxt);                //045 AllParty
      frmDolgOpl1.Write(AllMcUslTxt);               //046 AllMcUsl
      frmDolgOpl1.Write(if (AllDescr>0,'"' + AllDescrVTxt + '"',''));      //047a AllDescr
    }

  if (prvid = 0)
    {
      if ( AllKontr = 1)
        {
        Katorg.nRec := cpcKatorg;
        if (sum1 = 1)
          frmDolgOpl1.Write(str1);
        else
          frmDolgOpl1.Write('');
        }
      else
        if (sum1 = 1)
          frmDolgOpl1.Write(AllKontrVTxt);            //047 AllKontr
        else
          frmDolgOpl1.Write('');

      frmDolgOpl1.Write(AllOtvPodrVTxt);            //047b AllOtvPodr

      if (sum2 = 1)
        frmDolgOpl1.Write(AllPartVTxt);               //048 AllParty
      else
        frmDolgOpl1.Write('');

      if (sum3 = 1)
        frmDolgOpl1.Write(AllMcUslVTxt);              //049 AllMcUsl
      else
        frmDolgOpl1.Write('');
      frmDolgOpl1.Write(dopNalogTxt);               //050 dopNalog
      frmDolgOpl1.Write(PrNds1);                    //08 PrNds1
      frmDolgOpl1.Write(PrNds2);                    //09 PrNds2
    }

  if (prvid = 0)
  case AllMcUsl of

 /*   1 :
      {
        GetEd(cpcMc, 1);
      }

    5 :
      {
        GetEd(cpcUsl, 2);
      }   */

    2 :
      {
        if ( ItogEd )
          {
            if ( Modifier GetFirst KatMc where ((  pkGroupMCUsl          <<= KatMc.kGroupMc
                                               and pkGroupMCUsl + ccTerm >>= KatMc.kGroupMc
                                               )) <> tsOk )
              EdName:='';
            else if ( KatMc.cEd <> 0 )
              {
                if ( KatEd.nRec <> KatMc.cEd )
                  {
                    if ( Modifier GetFirst KatEd where (( KatMc.cEd == KatEd.nRec )) <> tsOk )
                      EdName := '';
                    else
                      EdName := KatEd.Name;
                  }
                else
                  EdName := KatEd.Name;
              }
            else
              EdName := '';
          }
        else
          EdName := '';
      }
    5 :
      {
        if ( ItogEd )
          {
            if ( Modifier GetFirst KatUsl where ((  pkGroupMCUsl          <<= KatUsl.kGroupUsl
                                                and pkGroupMCUsl + ccTerm >>= KatUsl.kGroupUsl
                                                )) <> tsOk )
                  EdName := '';
            else if ( KatUsl.cEd <> 0 )
              {
                if ( KatEd.nRec <> KatUsl.cEd )
                  {
                    if ( GetFirst KatEd where (( KatUsl.cEd == KatEd.nRec )) <> tsOk )
                      EdName := '';
                    else
                      EdName := KatEd.Name;
                  }
                else
                  EdName := KatEd.Name;
              }
            else
              EdName := '';
          }
        else
          EdName := '';
      }

    else
      {
        EdName := '';
      }

  end; //case

  if (prvid = 0)
    {
      frmDolgOpl1.Write(EdName);                    //10 pEdname

      frmDolgOpl1.Write(ByOpr);                     //11 byOpr
      frmDolgOpl1.Write(Detal);                     //12
      frmDolgOpl1.Write(RubTysMln);                 //13 0-в рублях 1-в тысячах 2-в миллионах
      frmDolgOpl1.Write(TysEd);                     //14 0-в учетных ед. 1-в тысячах уч.ед

      AllHozdoc := 2;
      frmDolgOpl1.Write(TiDkGalTxt);              //15

      AllHozdoc := 71;
      frmDolgOpl1.Write(TiDkGalTxt);              //16

      AllHozdoc := 82;
      frmDolgOpl1.Write(TiDkGalTxt);              //17

      AllHozdoc := 84;
      frmDolgOpl1.Write(TiDkGalTxt);              //18
    }
  else
    {
      if not notBr
        {
        pXL.DisConnectExcel;
          Exit;
        }
      pXL.CreateVar(sXLSFileName);
      pXL.SetStringVar('header', CommonFormHeader);
      pXL.SetNumberVar('Вид', VidOt );

      if (pDirect=1)
       s3 := 'ВЕДОМОСТЬ ОТГРУЗКИ И РЕАЛИЗАЦИИ В НАТУРАЛЬНЫХ ПОКАЗАТЕЛЯХ';
      else
        if (pDirect=2)
          s3 := 'ВЕДОМОСТЬ ОТГРУЗКИ И ЗАКУПКИ В НАТУРАЛЬНЫХ ПОКАЗАТЕЛЯХ'
        else
          s3 := '';

     pXL.SetStringVar('head1',s3);

      if (pDirect = 1)
        {
          s1 := 'Покупатель: ';
          s2:= 'покупателю: ';
        }
      else
        if (pDirect = 2)
          {
            s1 := 'Поставщик: ';
            s2 := 'поставщику: ';
          }
        else
          {
            s1 := '';
            s2 := '';
          }
      pXL.SetStringVar('head2', 'по ' + if ( ByOpr   = 0, 'всем (по выписке)', if (ByOpr   = 2, 'выполненным' ,'выписанным'))
                                      + if ( NaklAkt = 1, ' накладным'       , if (NaklAkt = 2, ' актам'      ,' накладным, актам'))
                                      + if(Longint(d1) = 0, '', ' с '  + DateToStr(d1,'DD/MM/YYYY'))
                                      + if(longint(d4) = 0, '', ' по ' + DateToStr(d4,'DD/MM/YYYY')));

      pXL.SetStringVar('период',' за период с ' + DateToStr(d2,'DD/MM/YYYY') + ' по ' + DateToStr(d3,'DD/MM/YYYY'));
      pXL.SetStringVar('Дескр', 'По ' + AllDescrTxt + ' ' + if (AllDescr>0, '"' + AllDescrVTxt + '"', ''));
      pXL.SetStringVar('Контр', 'По ' + AllKontrTxt + ' ' + AllKontrVTxt );
      pXL.SetStringVar('Парт' , 'По ' + AllPartTxt + ' '  + AllPartVTxt  );
      pXL.SetStringVar('МцУсл', 'По ' + AllMcUslTxt + ' ' + AllMcUslVTxt + if(EdName='','',if (sum3 = 1,' Учетная единица: '+EdName,'')));
      pXL.SetStringVar('ЦО',    if ((AllOtvPodr = 1) and (AllKontr=3),  'По ' + AllOtvPodrTxt + ' ' + AllOtvPodrVTxt,
                                       if (AllOtvPodr = 2, 'По ' + AllOtvPodrTxt + ' множественный выбор','')));

      pXL.SetStringVar('Отгружено',  'Отгружено (выполнено)'
                                 + if (TysEd=2,', в миллионах учетных единиц', if (TysEd=1,', в тысячах учетных единиц',''))
                                 + if (RubTysMln=1,', в тысячах ' + sGetTune('NDE.NameRublEI'),
                                       if (RubTysMln=2,', в миллионах ' + sGetTune('NDE.NameRublEI'),'')));
      pXL.SetStringVar('Оплачено',  'Оплачено'+
                                 + if (TysEd=2,', в миллионах учетных единиц', if (TysEd=1,', в тысячах учетных единиц',''))
                                 + if (RubTysMln=1,', в тысячах ' + sGetTune('NDE.NameRublEI'),
                                       if (RubTysMln=2,', в миллионах ' + sGetTune('NDE.NameRublEI'),'')));
      pXL.SetStringVar('учЕд',  if (TysEd = 2, '(в млн)', if(TysEd = 1, '(в тыс)', '')));
      pXL.SetStringVar('Ед',   EdName);
      pXL.SetStringVar('Сумма', 'Сумма ('+if (RubTysMln=1,'тыс. ', if (RubTysMln=2,'млн.','')) + sGetTune('NDE.ShortRub')+ ')');
      pXL.SetStringVar('НДС1',  'Сумма НДС (' + DoubleToStr(PrNds1, '666') + '%)');
      pXL.SetStringVar('НДС2',  'Сумма НДС (' + DoubleToStr(PrNds2, '666') + '%)');
      pXL.SetStringVar('Налог', 'В том числе '+DopNalogTxt );

      if (ItogEdTxt = 'с итогами')
        pXL.SetNumberVar('Итог', 1)
      else
        pXL.SetNumberVar('Итог', 0);


      AllHozdoc := 2;
      pXL.SetStringVar('Док1', TiDkGalTxt);              //15

      AllHozdoc := 71;
      pXL.SetStringVar('Док2', TiDkGalTxt);              //16

      AllHozdoc := 82;
      pXL.SetStringVar('Док3', TiDkGalTxt);              //17

      AllHozdoc := 84;
      pXL.SetStringVar('Док4', TiDkGalTxt);              //18

      pXL.PublishVar;

      pXL.CreateTbls(sXLSFileName);
      pXL.CreateTbl('DolgOpl1');
      pXL.ClearTblBuffer;
      pXL.CreateTblFld('Ном1');
      pXL.CreateTblFld('Ном2');
      pXL.CreateTblFld('Ном3');
      pXL.CreateTblFld('Ном4');
      pXL.CreateTblFld('Ном5');  // Отсрочка платежа
      pXL.CreateTblFld('Ном6');
      pXL.CreateTblFld('Ном7');
      pXL.CreateTblFld('Ном8');
      pXL.CreateTblFld('Ном9');
      pXL.CreateTblFld('Ном10');
      pXL.CreateTblFld('Ном11');
      pXL.CreateTblFld('Ном12');
      pXL.CreateTblFld('Ном13');
      pXL.CreateTblFld('Ном14');
      pXL.CreateTblFld('Ном15');  // Отсрочка платежа
      pXL.CreateTblFld('Ном16');
      pXL.CreateTblFld('Ном17');
      pXL.CreateTblFld('Ном18');
      pXL.CreateTblFld('Ном19');
      pXL.CreateTblFld('Ном20');
      pXL.CreateTblFld('Ном21');
      pXL.CreateTblFld('Ном22');
      pXL.CreateTblFld('Ном23');
      pXL.CreateTblFld('Ном24');
      pXL.CreateTblFld('Ном25');  // Отсрочка платежа
      pXL.CreateTblFld('Ном26');
      pXL.CreateTblFld('Ном27');
      pXL.CreateTblFld('Ном28');
      pXL.CreateTblFld('Ном29');
      pXL.CreateTblFld('Ном30');
      pXL.CreateTblFld('Ном31');
      pXL.CreateTblFld('Ном32');
    }

  if (prvid = 0)
  Case AllKontr of

    1 :
      if (sum1 > 1)
        _Loop Pick2
          {
            if not notbr
              Break;

            frmDolgOpl1.PutEventById(fedoLoop, fcpAllKontr);
            Katorg.nRec := Pick2.cRec;

            if ( GetEqual(#Katorg, 0))
              frmDolgOpl1.Write(Katorg.Name)
            else
              frmDolgOpl1.Write('Ошибка поиска контрагента.');
          }
    3 :
      if (sum1 > 1)
        _Loop Pick2
          {
            if not notbr
              Break;

            frmDolgOpl1.PutEventById(fedoLoop, fcpAllKontr);
            GroupSch.nRec := Pick2.cRec;

            if ( GetEqual(#GroupSch, 0) )
              frmDolgOpl1.Write(GroupSch.Name);
            else
              frmDolgOpl1.Write('Ошибка поиска группы ДО.');
          }
    4 :
      if (sum1 > 1)
        _Loop Pick2
          {
            if not notbr
              Break;

            frmDolgOpl1.PutEventById(fedoLoop, fcpAllKontr);
            dogovor.nRec := Pick2.cRec;

            if ( GetEqual(#dogovor, 0) )
              frmDolgOpl1.Write( '№ '
                               + dogovor.Nodoc
                               + ' от '
                               + DateToStr(dogovor.ddoc,'DD/MM/YYYY')
                             );
            else
              frmDolgOpl1.Write('Ошибка поиска договора.');
          }
    5 :
      if (sum1 > 1)
        _Loop Pick2
          {
            if not notbr
              Break;

            frmDolgOpl1.PutEventById(fedoLoop, fcpAllKontr);
            GroupSch.nRec := Pick2.cRec;

            if ( GetEqual(#GroupSch, 0) )
              frmDolgOpl1.Write(GroupSch.Name);
            else
              frmDolgOpl1.Write('Ошибка поиска группы договоров.');
          }
  end;

  if (prvid = 0)
  case AllKontr of

    3:
      {
        case AllOtvPodr of

          1 :
              {
                frmDolgOpl1.PutEventById(fedoLoop, fcpAllOtvPodr);
                frmDolgOpl1.Write(OtvPodr.Name);
              }

          2 :
            _Loop Pick4 where ((word(11) == Pick4.wList))
              {
                if not notbr
                  Break;

                frmDolgOpl1.PutEventById(fedoLoop, fcpAllOtvPodr);
                OtvPodr.nRec := Pick4.cRec;

                if ( GetEqual(#OtvPodr, 0) )
                  frmDolgOpl1.Write(OtvPodr.Name);
                else
                  frmDolgOpl1.Write('Ошибка поиска отв. подразделения ДО.');
              }
        end;
      }
  end; //case

  if (prvid = 0)
  Case AllParty of
    1:
       if (sum2 > 1)
         _Loop Pick3
        {
          if not notbr
            Break;

           frmDolgOpl1.PutEventById(fedoLoop,fcpAllParty);
           KatParty.nRec:=Pick3.cRec;
           if (GetEqual(#KatParty,0)) frmDolgOpl1.Write(KatParty.Name)
           else                       frmDolgOpl1.Write('Ошибка поиска партии.');
        }
  end;

  if (prvid = 0)
  Case AllMcUsl of

    1 :
      if (sum3 > 1)
        _Loop Pick
        {
          if not notbr
            Break;

          frmDolgOpl1.PutEventById(fedoLoop, fcpAllMcUsl);
          KatMC.nRec := Pick.cRec;

          if ( GetEqual(#KatMc, 0) )
            frmDolgOpl1.Write( KatMC.Name + if ( Trim(KatMc.BarKod) = ''
                                               , ''
                                               , ' (Номенкл.№ ' + Trim(KatMc.BarKod) + ')'
                                               )
                             );
           else
             frmDolgOpl1.Write('Ошибка поиска МЦ.');
        }

    4 :
      if (sum3 > 1)
        _Loop Pick
        {
          if not notbr
            Break;

          frmDolgOpl1.PutEventById(fedoLoop, fcpAllMcUsl);
          KatUsl.nRec := Pick.cRec;

          if ( GetEqual(#KatUsl, 0) )
            frmDolgOpl1.Write( KatUsl.Name + if ( Trim(KatUsl.Kod) = ''
                                                , ''
                                                , ' (Код ' + Trim(KatUsl.Kod) + ')'
                                                )
                             )
          else
            frmDolgOpl1.Write('Ошибка поиска услуги.');
        }
  end;

  norg                     := 0;
  Repdolg1Kol              := 0.0;
  Repdolg1Sum              := 0.0;
  RepOtgrKol               := 0.0;
  RepOtgrSum               := 0.0;
  RepOtgrSumNds1           := 0.0;
  RepOtgrSumNds2           := 0.0;
  RepOtgrSumNoNds          := 0.0;
  RepOtgrSumdopNalog       := 0.0;
  RepOplKol                := 0.0;
  RepOplSum                := 0.0;
  RepOplSumNds1            := 0.0;
  RepOplSumNds2            := 0.0;
  RepOplSumNoNds           := 0.0;
  RepOplSumdopNalog        := 0.0;
  Repdolg2Kol              := 0.0;
  Repdolg2Sum              := 0.0;
//  TiDkGal = 2
  RepMoneyOplKol           := 0.0;
  RepMoneyOplSum           := 0.0;
  RepMoneyOplSumNds1       := 0.0;
  RepMoneyOplSumNds2       := 0.0;
  RepMoneyOplSumNoNds      := 0.0;
  RepMoneyOplSumdopNalog   := 0.0;
//  TiDkGal = 71
  RepVzachetOplKol         := 0.0;
  RepVzachetOplSum         := 0.0;
  RepVzachetOplSumNds1     := 0.0;
  RepVzachetOplSumNds2     := 0.0;
  RepVzachetOplSumNoNds    := 0.0;
  RepVzachetOplSumdopNalog := 0.0;
//  TiDkGal = 82
  RepOVexelOplKol          := 0.0;
  RepOVexelOplSum          := 0.0;
  RepOVexelOplSumNds1      := 0.0;
  RepOVexelOplSumNds2      := 0.0;
  RepOVexelOplSumNoNds     := 0.0;
  RepOVexelOplSumdopNalog  := 0.0;
//  TiDkGal = 84
  RepSVexelOplKol          := 0.0;
  RepSVexelOplSum          := 0.0;
  RepSVexelOplSumNds1      := 0.0;
  RepSVexelOplSumNds2      := 0.0;
  RepSVexelOplSumNoNds     := 0.0;
  RepSVexelOplSumdopNalog  := 0.0;
}

Procedure PrintHeadorg;
{
  Getorg;

  if ( AllKontr >= 4 )
    nGrdog := 0;
  else
    nGrdo  := 0;

  orgdolg1Kol              := 0.0;
  orgdolg1Sum              := 0.0;
  orgOtgrKol               := 0.0;
  orgOtgrSum               := 0.0;
  orgOtgrSumNds1           := 0.0;
  orgOtgrSumNds2           := 0.0;
  orgOtgrSumNoNds          := 0.0;
  orgOtgrSumdopNalog       := 0.0;
  orgOplKol                := 0.0;
  orgOplSum                := 0.0;
  orgOplSumNds1            := 0.0;
  orgOplSumNds2            := 0.0;
  orgOplSumNoNds           := 0.0;
  orgOplSumdopNalog        := 0.0;
  orgdolg2Kol              := 0.0;
  orgdolg2Sum              := 0.0;

//  TiDkGal = 2
  orgMoneyOplKol           := 0.0;
  orgMoneyOplSum           := 0.0;
  orgMoneyOplSumNds1       := 0.0;
  orgMoneyOplSumNds2       := 0.0;
  orgMoneyOplSumNoNds      := 0.0;
  orgMoneyOplSumdopNalog   := 0.0;
//  TiDkGal = 71
  orgVzachetOplKol         := 0.0;
  orgVzachetOplSum         := 0.0;
  orgVzachetOplSumNds1     := 0.0;
  orgVzachetOplSumNds2     := 0.0;
  orgVzachetOplSumNoNds    := 0.0;
  orgVzachetOplSumdopNalog := 0.0;
//  TiDkGal = 82
  orgOVexelOplKol          := 0.0;
  orgOVexelOplSum          := 0.0;
  orgOVexelOplSumNds1      := 0.0;
  orgOVexelOplSumNds2      := 0.0;
  orgOVexelOplSumNoNds     := 0.0;
  orgOVexelOplSumdopNalog  := 0.0;
//  TiDkGal = 84
  orgSVexelOplKol          := 0.0;
  orgSVexelOplSum          := 0.0;
  orgSVexelOplSumNds1      := 0.0;
  orgSVexelOplSumNds2      := 0.0;
  orgSVexelOplSumNoNds     := 0.0;
  orgSVexelOplSumdopNalog  := 0.0;

  norg := norg + 1;
  if (prvid = 0)
    {
      frmDolgOpl1.PutEventById(fedoLoop, fcdoorg);

      frmDolgOpl1.Write(norg);                       //01 norg
      frmDolgOpl1.Write(orgName);                    //02 orgName
      frmDolgOpl1.Write(orgNRec);                    //03 orgNRec
    }
  else
    {
      if not notBr
        {
          pXL.DisConnectExcel;
          Exit;
        }
      pXL.ClearTblBuffer;
      pXL.SetTblStringFldValue('Ном1',s1 + orgName);
      pXL.InsTblRow;
    }
}

Procedure PrintHeadGrdog;
{
  if ( AllKontr >= 5 )
    {
      if ( ovGet.vGetGS(TmpGrN.cRec1) )
        {
          GrdoGName := ovGet.vGetGSbuf.Name;
          GrdoGCode := ovGet.vGetGSbuf.Kod;
          GrdoGNrec := ovGet.vGetGSbuf.nRec;
        }
      else
        {
          GrdoGCode := '';
          GrdoGNrec := 0;
          GrdoGName := 'Не задана';
        }

      nGrdog := nGrdog + 1;
    }
  else
    {
      GrdoGCode := '';
      GrdoGNrec := 0;
      GrdoGName := 'Не задана';
    }

  ndog                 := 0;
  GrdoGdolg1Kol        := 0.0;
  GrdoGdolg1Sum        := 0.0;
  GrdoGOtgrKol         := 0.0;
  GrdoGOtgrSum         := 0.0;
  GrdoGOtgrSumNds1     := 0.0;
  GrdoGOtgrSumNds2     := 0.0;
  GrdoGOtgrSumNoNds    := 0.0;
  GrdoGOtgrSumdopNalog := 0.0;
  GrdoGOplKol          := 0.0;
  GrdoGOplSum          := 0.0;
  GrdoGOplSumNds1      := 0.0;
  GrdoGOplSumNds2      := 0.0;
  GrdoGOplSumNoNds     := 0.0;
  GrdoGOplSumdopNalog  := 0.0;
  GrdoGdolg2Kol        := 0.0;
  GrdoGdolg2Sum        := 0.0;

  if ( Detal < 5 )
    {
      if (prvid = 0)
        {
          frmDolgOpl1.PutEventById(fedoLoop, fcdoGrdoG);

          frmDolgOpl1.Write(nGrdog);                      //01 nGrdog
          frmDolgOpl1.Write(GrdoGName);                   //02 GrdoGName
          frmDolgOpl1.Write(GrdoGCode);                   //03 GrdoGCode
          frmDolgOpl1.Write(GrdoGNRec);                   //04 GrdoGNRec
        }
      else
        if (AllKontr >= 5)
          {
            if not notBr
              {
                pXL.DisConnectExcel;
                Exit;
              }
            pXL.ClearTblBuffer;
            pXL.SetTblStringFldValue('Ном2','Группа договоров: ' + GrdoGName);
            pXL.InsTblRow;
          }
    }
}

Procedure PrintHeadGrdo;
{
  if ( AllKontr < 4 )
    {
      if ( ovGet.vGetGS(TmpGrN.cRec1) )
        {
          GrdoName := ovGet.vGetGSbuf.Name;
          GrdoCode := ovGet.vGetGSbuf.Kod;
          GrdoNrec := ovGet.vGetGSbuf.nRec;
        }
      else GrdoName := 'Не задана';
        nGrdo := nGrdo + 1;
    }
  else
    {
      GrdoName := 'Не задана';
      GrdoCode := '';
      GrdoNrec := 0;
    }

  ndo                 := 0;
  Grdodolg1Kol        := 0.0;
  Grdodolg1Sum        := 0.0;
  GrdoOtgrKol         := 0.0;
  GrdoOtgrSum         := 0.0;
  GrdoOtgrSumNds1     := 0.0;
  GrdoOtgrSumNds2     := 0.0;
  GrdoOtgrSumNoNds    := 0.0;
  GrdoOtgrSumdopNalog := 0.0;
  GrdoOplKol          := 0.0;
  GrdoOplSum          := 0.0;
  GrdoOplSumNds1      := 0.0;
  GrdoOplSumNds2      := 0.0;
  GrdoOplSumNoNds     := 0.0;
  GrdoOplSumdopNalog  := 0.0;
  Grdodolg2Kol        := 0.0;
  Grdodolg2Sum        := 0.0;

  if ( Detal < 3 )
    {
      if (prvid = 0)
        {
          frmDolgOpl1.PutEventById(fedoLoop, fcdoGrdo);

          frmDolgOpl1.Write(nGrdo);                      //01 nGrdo
          frmDolgOpl1.Write(GrdoName);                   //02 GrdoName
          frmDolgOpl1.Write(GrdoCode);                   //03 GrdoCode
          frmDolgOpl1.Write(GrdoNRec);                   //04 GrdoNRec
        }
      else
        if (AllKontr < 4)
          {
            if not notBr
              {
                pXL.DisConnectExcel;
                Exit;
              }
            pXL.ClearTblBuffer;
            pXL.SetTblStringFldValue('Ном2','Группа ДО: ' + GrdoName);
            pXL.InsTblRow;
          }
    }
}

Procedure PrintHeaddog;
{
  if ( AllKontr >= 4 )
    {
      GetDG;
      ndog := ndog + 1;
    }
  else
    {
      doGNRec     := 0;
      doGNumDescr := '';
      doGDate     := ZeroDate;
    }

  nGrdo              := 0;
  doGdolg1Kol        := 0.0;
  doGdolg1Sum        := 0.0;
  doGOtgrKol         := 0.0;
  doGOtgrSum         := 0.0;
  doGOtgrSumNds1     := 0.0;
  doGOtgrSumNds2     := 0.0;
  doGOtgrSumNoNds    := 0.0;
  doGOtgrSumdopNalog := 0.0;
  doGOplKol          := 0.0;
  doGOplSum          := 0.0;
  doGOplSumNds1      := 0.0;
  doGOplSumNds2      := 0.0;
  doGOplSumNoNds     := 0.0;
  doGOplSumdopNalog  := 0.0;
  doGdolg2Kol        := 0.0;
  doGdolg2Sum        := 0.0;

  if ( Detal < 4 )
    if (prvid = 0)
      {
        frmDolgOpl1.PutEventById(fedoLoop, fcdodoG);

        frmDolgOpl1.Write(doGNRec);                     //00 doNRec
        frmDolgOpl1.Write(ndog);                        //01 nGrdo
        frmDolgOpl1.Write(doGNumDescr);                 //02 doNumDescr
        frmDolgOpl1.Write(doGDate);                     //03 doDate
      }
    else
      if (AllKontr >= 4)
        {
          if not notBr
            {
              pXL.DisConnectExcel;
              Exit;
            }
          pXL.ClearTblBuffer;
          pXL.SetTblStringFldValue('Ном31','Договор: ' + DOGNumDescr + ' от ' + DateToStr(DOGDate,'DD/MM/YYYY')) ;
          pXL.InsTblRow;
        }
}

Procedure PrintHeaddo;
{
  Getdo;

  nSp               := 0;
  dodolg1Kol        := 0.0;
  dodolg1Sum        := 0.0;
  doOtgrKol         := 0.0;
  doOtgrSum         := 0.0;
  doOtgrSumNds1     := 0.0;
  doOtgrSumNds2     := 0.0;
  doOtgrSumNoNds    := 0.0;
  doOtgrSumdopNalog := 0.0;
  doOplKol          := 0.0;
  doOplSum          := 0.0;
  doOplSumNds1      := 0.0;
  doOplSumNds2      := 0.0;
  doOplSumNoNds     := 0.0;
  doOplSumdopNalog  := 0.0;
  dodolg2Kol        := 0.0;
  dodolg2Sum        := 0.0;

  ndo := ndo + 1;

  if ( Detal < 2 )
    if (prvid = 0)
      {
        frmDolgOpl1.PutEventById(fedoLoop, fcdodo);

        frmDolgOpl1.Write(doNRec);                     //00 doNRec
        frmDolgOpl1.Write(ndo);                        //01 nGrdo
        frmDolgOpl1.Write(doNumDescr);                 //02 doNumDescr
        frmDolgOpl1.Write(doDate);                     //03 doDate
      }
    else
      {
        if not notBr
          {
            pXL.DisConnectExcel;
            Exit;
          }
        pXL.ClearTblBuffer;
        pXL.SetTblStringFldValue('Ном3','Документ-основание: ' + DONumDescr + ' от ' + DateToStr(DODate,'DD/MM/YYYY')) ;
        pXL.InsTblRow;
      }
}

Procedure PrintSpP;
Var
  dolg1Kol
, dolg1Sum
, OtgrKol
, OtgrSumNoNds
, OtgrSumNds1
, OtgrSumNds2
, OtgrSumdopNalog
, OtgrSum
, OplKol
, OplSumNoNds
, OplSumNds1
, OplSumNds2
, OplSumdopNalog
, OplSum
, dolg2Kol
, dolg2Sum
, PRC
, PRCNds1
, PRCNds2
, PRCdopNalog
, OEK
                   : double;

  Vidopl
                   : string;

  i
                   : word;
{
  GetEd(SpSopr.cMcUsl, SpSopr.prMC);
  GetOtpEd(SpSopr.cOtpEd);
  GetNds;

  if ( RubTysMln = 1 )
    {
      PRC         := OtpEdPrice         / 1000.0;
      PRCNds1     := OtpEdPriceNds1     / 1000.0;
      PRCNds2     := OtpEdPriceNds2     / 1000.0;
      PRCdopNalog := OtpEdPricedopNalog / 1000.0;
    }
  else if ( RubTysMln = 2 )
    {
      PRC         := OtpEdPrice         / 1000000.0;
      PRCNds1     := OtpEdPriceNds1     / 1000000.0;
      PRCNds2     := OtpEdPriceNds2     / 1000000.0;
      PRCdopNalog := OtpEdPricedopNalog / 1000000.0;
    }
  else
    {
      PRC         := OtpEdPrice;
      PRCNds1     := OtpEdPriceNds1;
      PRCNds2     := OtpEdPriceNds2;
      PRCdopNalog := OtpEdPricedopNalog;
    }

  if ( TysEd = 2 )
    OEK := OtpEdKoef / 1000000.0;
  else if ( TysEd = 1 )
    OEK := OtpEdKoef / 1000.0;
  else
    OEK := OtpEdKoef;

  dolg1Sum          := TmpGrN.Sums[1] * PRC;
  OtgrSum           := TmpGrN.Sums[2] * PRC;
  OtgrSumNds1       := TmpGrN.Sums[2] * PRCNds1;
  OtgrSumNds2       := TmpGrN.Sums[2] * PRCNds2;
  OtgrSumNoNds      := OtgrSum - OtgrSumNds1 - OtgrSumNds2;
  OtgrSumdopNalog   := TmpGrN.Sums[2] * PRCdopNalog;
  OplSum            := TmpGrN.Sums[3] * PRC;
//  OplSumNds1      := TmpGrN.Sums[3] * OtpEdPriceNds1;
//  OplSumNds2      := TmpGrN.Sums[3] * OtpEdPriceNds2;
  OplSumNds1        := TmpGrN.Sums[3] * PRCNds1;
  OplSumNds2        := TmpGrN.Sums[3] * PRCNds2;
  OplSumNoNds       := OplSum - OplSumNds1 - OplSumNds2;
//  OplSumdopNalog  := TmpGrN.Sums[3] * OtpEdPricedopNalog;
  OplSumdopNalog    := TmpGrN.Sums[3] * PRCdopNalog;
  dolg2Sum          := dolg1Sum + OtgrSum - OplSum;

  dolg1Kol          := TmpGrN.Sums[1] * OEK;
  OtgrKol           := TmpGrN.Sums[2] * OEK;
  OplKol            := TmpGrN.Sums[3] * OEK;
  dolg2Kol          := dolg1Kol + OtgrKol - OplKol;

  dodolg1Sum        += dolg1Sum;
  doOtgrSum         += OtgrSum;
  doOtgrSumNds1     += OtgrSumNds1;
  doOtgrSumNds2     += OtgrSumNds2;
  doOtgrSumNoNds    += OtgrSumNoNds;
  doOtgrSumdopNalog += OtgrSumdopNalog;
  doOplSum          += OplSum;
  doOplSumNds1      += OplSumNds1;
  doOplSumNds2      += OplSumNds2;
  doOplSumNoNds     += OplSumNoNds;
  doOplSumdopNalog  += OplSumdopNalog;
  dodolg2Sum        += dolg2Sum;

  if ItogEd
    {
      dodolg1Kol += dolg1Kol;
      doOtgrKol  += OtgrKol;
      doOplKol   += OplKol;
      dodolg2Kol += dolg2Kol;
    }

//  TiDkGal = 2
  orgMoneyOplKol           += TmpGrN.Sums[11] * OEK;
  orgMoneyOplSum           += TmpGrN.Sums[11] * PRC;
  orgMoneyOplSumNds1       += TmpGrN.Sums[11] * PRCNds1;
  orgMoneyOplSumNds2       += TmpGrN.Sums[11] * PRCNds2;
  orgMoneyOplSumdopNalog   += TmpGrN.Sums[11] * PRCdopNalog;
  orgMoneyOplSumNoNds      := orgMoneyOplSum - orgMoneyOplSumNds1 - orgMoneyOplSumNds2;
//  TiDkGal = 71
  orgVzachetOplKol         += TmpGrN.Sums[12] * OEK;
  orgVzachetOplSum         += TmpGrN.Sums[12] * PRC;
  orgVzachetOplSumNds1     += TmpGrN.Sums[12] * PRCNds1;
  orgVzachetOplSumNds2     += TmpGrN.Sums[12] * PRCNds2;
  orgVzachetOplSumdopNalog += TmpGrN.Sums[12] * PRCdopNalog;
  orgVzachetOplSumNoNds    := orgVzachetOplSum - orgVzachetOplSumNds1 - orgVzachetOplSumNds2;
//  TiDkGal = 82
  orgOVexelOplKol          += TmpGrN.Sums[13] * OEK;
  orgOVexelOplSum          += TmpGrN.Sums[13] * PRC;
  orgOVexelOplSumNds1      += TmpGrN.Sums[13] * PRCNds1;
  orgOVexelOplSumNds2      += TmpGrN.Sums[13] * PRCNds2;
  orgOVexelOplSumdopNalog  += TmpGrN.Sums[13] * PRCdopNalog;
  orgOVexelOplSumNoNds     := orgOVexelOplSum - orgOVexelOplSumNds1 - orgOVexelOplSumNds2;
//  TiDkGal = 84
  orgSVexelOplKol          += TmpGrN.Sums[14] * OEK;
  orgSVexelOplSum          += TmpGrN.Sums[14] * PRC;
  orgSVexelOplSumNds1      += TmpGrN.Sums[14] * PRCNds1;
  orgSVexelOplSumNds2      += TmpGrN.Sums[14] * PRCNds2;
  orgSVexelOplSumdopNalog  += TmpGrN.Sums[14] * PRCdopNalog;
  orgSVexelOplSumNoNds     := orgSVexelOplSum - orgSVexelOplSumNds1 - orgSVexelOplSumNds2;

  nSp++;

  if ( Detal < 1 )
    {
      if ( prvid = 0)
        {
          frmDolgOpl1.PutEventById(fedoLoop, fcdoSp);

          frmDolgOpl1.Write(SpSopr.cmcUsl);              //-01
          frmDolgOpl1.Write(SpSopr.nRec);                //00 nSp
          frmDolgOpl1.Write(nSp);                        //01 nSp
          frmDolgOpl1.Write(McUslName);                  //02 McName
          frmDolgOpl1.Write(OtpEdName);                  //03 OtpEdName
          frmDolgOpl1.Write(OtpEdKoef);                  //04 OtpEdKoef
          frmDolgOpl1.Write(OtpEdPrice);                 //05 OtpEdPrice
          frmDolgOpl1.Write(OtpEdPriceNds1);             //06 OtpEdPriceNds1
          frmDolgOpl1.Write(OtpEdPriceNds2);             //07 OtpEdPriceNds2
          frmDolgOpl1.Write(OtpEdPricedopNalog);         //07а OtpEdPricedopNalog
          frmDolgOpl1.Write(TmpGrN.Sums[1]);             //08 OtpEdKoldolg
          frmDolgOpl1.Write(TmpGrN.Sums[2]);             //09 OtpEdKolOtgr
          frmDolgOpl1.Write(TmpGrN.Sums[3]);             //10 OtpEdKolOpl
          frmDolgOpl1.Write(EdName);                     //11 EdName
          frmDolgOpl1.Write(dolg1Kol);                   //12 dolg1Kol
          frmDolgOpl1.Write(dolg1Sum);                   //13 dolg1Sum
          frmDolgOpl1.Write(OtgrKol);                    //14 OtgrKol
          frmDolgOpl1.Write(OtgrSumNoNds);               //15 OtgrSumNoNds
          frmDolgOpl1.Write(OtgrSumNds1);                //16 OtgrSumNds1
          frmDolgOpl1.Write(OtgrSumNds2);                //17 OtgrSumNds2
          frmDolgOpl1.Write(OtgrSumdopNalog);            //17a OtgrSumdopNalog
          frmDolgOpl1.Write(OtgrSum);                    //18 OtgrSum
          frmDolgOpl1.Write(OplKol);                     //19 OplKol
          frmDolgOpl1.Write(OplSumNoNds);                //20 OplSumNoNds
          frmDolgOpl1.Write(OplSumNds1);                 //21 OplSumNds1
          frmDolgOpl1.Write(OplSumNds2);                 //22 OplSumNds2
          frmDolgOpl1.Write(OplSumdopNalog);             //22a OplSumdopNalog
          frmDolgOpl1.Write(OplSum);                     //23 OplSum
          frmDolgOpl1.Write(dolg2Kol);                   //24 dolg2Kol
          frmDolgOpl1.Write(dolg2Sum);                   //25 dolg2Sum
        }
      else
        {
          if not notBr
            {
              pXL.DisConnectExcel;
              Exit;
            }
          pXL.ClearTblBuffer;
          pXL.SetTblStringFldValue('Ном4',  McUslName);
          pXL.SetTblStringFldValue('Ном5',  OtpEdName);
          pXL.SetTblNumberFldValue('Ном6',  OtpEdKoef);
          pXL.SetTblNumberFldValue('Ном7',  OtpEdPrice);
          pXL.SetTblNumberFldValue('Ном8',  OtpEdPriceNds1);
          pXL.SetTblNumberFldValue('Ном9',  OtpEdPriceNds2);
          pXL.SetTblNumberFldValue('Ном10', OtpEdPricedopNalog);
          pXL.SetTblNumberFldValue('Ном11', TmpGrN.Sums[1]);
          pXL.SetTblNumberFldValue('Ном12', TmpGrN.Sums[2]);
          pXL.SetTblNumberFldValue('Ном13', TmpGrN.Sums[3]);
          pXL.SetTblStringFldValue('Ном14', EdName);
          pXL.SetTblNumberFldValue('Ном15', dolg1Kol);
          pXL.SetTblNumberFldValue('Ном16', dolg1Sum);
          pXL.SetTblNumberFldValue('Ном17', OtgrKol);
          pXL.SetTblNumberFldValue('Ном18', OtgrSumNoNds);
          pXL.SetTblNumberFldValue('Ном19', OtgrSumNds1);
          pXL.SetTblNumberFldValue('Ном20', OtgrSumNds2);
          pXL.SetTblNumberFldValue('Ном21', OtgrSumdopNalog);
          pXL.SetTblNumberFldValue('Ном22', OtgrSum);
          pXL.SetTblNumberFldValue('Ном23', OplKol);
          pXL.SetTblNumberFldValue('Ном24', OplSumNoNds);
          pXL.SetTblNumberFldValue('Ном25', OplSumNds1);
          pXL.SetTblNumberFldValue('Ном26', OplSumNds2);
          pXL.SetTblNumberFldValue('Ном27', OplSumdopNalog);
          pXL.SetTblNumberFldValue('Ном28', OplSum);
          pXL.SetTblNumberFldValue('Ном29', dolg2Kol);
          pXL.SetTblNumberFldValue('Ном30', dolg2Sum);
        }

      Vidopl := '';

      for (i := 1; i <= 10; i++)
        if ( TmpGrN.ls[i] > 0 )
          {
            AllHozdoc := word(TmpGrN.ls[i]);
            Vidopl := Vidopl + TiDkGalTxt + ', ';
          }

      if (prvid = 0)
        frmDolgOpl1.Write(SubStr(Vidopl, 1, Length(Vidopl) - 2));       //26 Vidopl
     else
       pXL.SetTblStringFldValue('Ном32', SubStr(Vidopl, 1, Length(Vidopl) - 2) );
      if (prvid = 1)
        pXL.InsTblRow;
    }
}

Procedure PrintRzP;
Var
  dolg1Kol
, dolg1Sum
, OtgrKol
, OtgrSumNoNds
, OtgrSumNds1
, OtgrSumNds2
, OtgrSumdopNalog
, OtgrSum
, OplKol
, OplSumNoNds
, OplSumNds1
, OplSumNds2
, OplSumdopNalog
, OplSum
, dolg2Kol
, dolg2Sum
, PRC
, PRCNds1
, PRCNds2
, PRCdopNalog
, OEK
                   : double;

  Vidopl
                   : string;

  i
                   : word;
{
  GetEd(RzSpDoc.cMc, 1);
  GetOtpEd(RzSpDoc.cOtpEd);
  GetRz;

  if ( RubTysMln = 1 )
    {
      PRC         := OtpEdPrice         / 1000.0;
      PRCNds1     := OtpEdPriceNds1     / 1000.0;
      PRCNds2     := OtpEdPriceNds2     / 1000.0;
      PRCdopNalog := OtpEdPricedopNalog / 1000.0;
    }
  else if ( RubTysMln = 2 )
    {
      PRC         := OtpEdPrice         / 1000000.0;
      PRCNds1     := OtpEdPriceNds1     / 1000000.0;
      PRCNds2     := OtpEdPriceNds2     / 1000000.0;
      PRCdopNalog := OtpEdPricedopNalog / 1000000.0;
    }
  else
    {
      PRC         := OtpEdPrice;
      PRCNds1     := OtpEdPriceNds1;
      PRCNds2     := OtpEdPriceNds2;
      PRCdopNalog := OtpEdPricedopNalog;
    }

  if ( TysEd = 2 )
    OEK := OtpEdKoef / 1000000.0;
  else if ( TysEd = 1 )
    OEK := OtpEdKoef / 1000.0;
  else
    OEK := OtpEdKoef;

  dolg1Sum          := TmpGrN.Sums[1] * PRC;
  OtgrSum           := TmpGrN.Sums[2] * PRC;
  OtgrSumNds1       := TmpGrN.Sums[2] * PRCNds1;
  OtgrSumNds2       := TmpGrN.Sums[2] * PRCNds2;
  OtgrSumNoNds      := OtgrSum - OtgrSumNds1 - OtgrSumNds2;
  OtgrSumdopNalog   := TmpGrN.Sums[2] * PRCdopNalog;
  dolg2Sum          := dolg1Sum + OtgrSum;

  dolg1Kol          := TmpGrN.Sums[1] * OEK;
  OtgrKol           := TmpGrN.Sums[2] * OEK;
  dolg2Kol          := dolg1Kol + OtgrKol;

  dodolg1Sum        += dolg1Sum;
  doOtgrSum         += OtgrSum;
  doOtgrSumNds1     += OtgrSumNds1;
  doOtgrSumNds2     += OtgrSumNds2;
  doOtgrSumNoNds    += OtgrSumNoNds;
  doOtgrSumdopNalog += OtgrSumdopNalog;
  dodolg2Sum        += dolg2Sum;

  if ItogEd
    {
      dodolg1Kol += dolg1Kol;
      doOtgrKol  += OtgrKol;
      dodolg2Kol += dolg2Kol;
    }

//  TiDkGal = 2
  orgMoneyOplKol           += TmpGrN.Sums[11] * OEK;
  orgMoneyOplSum           += TmpGrN.Sums[11] * PRC;
  orgMoneyOplSumNds1       += TmpGrN.Sums[11] * PRCNds1;
  orgMoneyOplSumNds2       += TmpGrN.Sums[11] * PRCNds2;
  orgMoneyOplSumdopNalog   += TmpGrN.Sums[11] * PRCdopNalog;
  orgMoneyOplSumNoNds      := orgMoneyOplSum - orgMoneyOplSumNds1 - orgMoneyOplSumNds2;
//  TiDkGal = 71
  orgVzachetOplKol         += TmpGrN.Sums[12] * OEK;
  orgVzachetOplSum         += TmpGrN.Sums[12] * PRC;
  orgVzachetOplSumNds1     += TmpGrN.Sums[12] * PRCNds1;
  orgVzachetOplSumNds2     += TmpGrN.Sums[12] * PRCNds2;
  orgVzachetOplSumdopNalog += TmpGrN.Sums[12] * PRCdopNalog;
  orgVzachetOplSumNoNds    := orgVzachetOplSum - orgVzachetOplSumNds1 - orgVzachetOplSumNds2;
//  TiDkGal = 82
  orgOVexelOplKol          += TmpGrN.Sums[13] * OEK;
  orgOVexelOplSum          += TmpGrN.Sums[13] * PRC;
  orgOVexelOplSumNds1      += TmpGrN.Sums[13] * PRCNds1;
  orgOVexelOplSumNds2      += TmpGrN.Sums[13] * PRCNds2;
  orgOVexelOplSumdopNalog  += TmpGrN.Sums[13] * PRCdopNalog;
  orgOVexelOplSumNoNds     := orgOVexelOplSum - orgOVexelOplSumNds1 - orgOVexelOplSumNds2;
//  TiDkGal = 84
  orgSVexelOplKol          += TmpGrN.Sums[14] * OEK;
  orgSVexelOplSum          += TmpGrN.Sums[14] * PRC;
  orgSVexelOplSumNds1      += TmpGrN.Sums[14] * PRCNds1;
  orgSVexelOplSumNds2      += TmpGrN.Sums[14] * PRCNds2;
  orgSVexelOplSumdopNalog  += TmpGrN.Sums[14] * PRCdopNalog;
  orgSVexelOplSumNoNds     := orgSVexelOplSum - orgSVexelOplSumNds1 - orgSVexelOplSumNds2;

  nSp++;

  if ( Detal < 1 )
    {
      if (prvid = 0)
      {
      frmDolgOpl1.PutEventById(fedoLoop, fcdoSp);

      frmDolgOpl1.Write(RzSpDoc.cMC);                //-01
      frmDolgOpl1.Write(SpSopr.nRec);                //00 nSp
      frmDolgOpl1.Write(nSp);                        //01 nSp
      frmDolgOpl1.Write(McUslName);                  //02 McName
      frmDolgOpl1.Write(OtpEdName);                  //03 OtpEdName
      frmDolgOpl1.Write(OtpEdKoef);                  //04 OtpEdKoef
      frmDolgOpl1.Write(OtpEdPrice);                 //05 OtpEdPrice
      frmDolgOpl1.Write(OtpEdPriceNds1);             //06 OtpEdPriceNds1
      frmDolgOpl1.Write(OtpEdPriceNds2);             //07 OtpEdPriceNds2
      frmDolgOpl1.Write(OtpEdPricedopNalog);         //07а OtpEdPricedopNalog
      frmDolgOpl1.Write(TmpGrN.Sums[1]);             //08 OtpEdKoldolg
      frmDolgOpl1.Write(TmpGrN.Sums[2]);             //09 OtpEdKolOtgr
      frmDolgOpl1.Write(TmpGrN.Sums[3]);             //10 OtpEdKolOpl
      frmDolgOpl1.Write(EdName);                     //11 EdName
      frmDolgOpl1.Write(dolg1Kol);                   //12 dolg1Kol
      frmDolgOpl1.Write(dolg1Sum);                   //13 dolg1Sum
      frmDolgOpl1.Write(OtgrKol);                    //14 OtgrKol
      frmDolgOpl1.Write(OtgrSumNoNds);               //15 OtgrSumNoNds
      frmDolgOpl1.Write(OtgrSumNds1);                //16 OtgrSumNds1
      frmDolgOpl1.Write(OtgrSumNds2);                //17 OtgrSumNds2
      frmDolgOpl1.Write(OtgrSumdopNalog);            //17a OtgrSumdopNalog
      frmDolgOpl1.Write(OtgrSum);                    //18 OtgrSum
      frmDolgOpl1.Write(OplKol);                     //19 OplKol
      frmDolgOpl1.Write(OplSumNoNds);                //20 OplSumNoNds
      frmDolgOpl1.Write(OplSumNds1);                 //21 OplSumNds1
      frmDolgOpl1.Write(OplSumNds2);                 //22 OplSumNds2
      frmDolgOpl1.Write(OplSumdopNalog);             //22a OplSumdopNalog
      frmDolgOpl1.Write(OplSum);                     //23 OplSum
      frmDolgOpl1.Write(dolg2Kol);                   //24 dolg2Kol
      frmDolgOpl1.Write(dolg2Sum);                   //25 dolg2Sum
      }
      else
        {
           if not notBr
            {
              pXL.DisConnectExcel;
              Exit;
            }
          pXL.ClearTblBuffer;
          pXL.SetTblStringFldValue('Ном4', McUslName);
          pXL.SetTblStringFldValue('Ном5', OtpEdName);
          pXL.SetTblNumberFldValue('Ном6', OtpEdKoef);
          pXL.SetTblNumberFldValue('Ном7', OtpEdPrice);
          pXL.SetTblNumberFldValue('Ном8', OtpEdPriceNds1);
          pXL.SetTblNumberFldValue('Ном9', OtpEdPriceNds2);
          pXL.SetTblNumberFldValue('Ном10',OtpEdPricedopNalog);
          pXL.SetTblNumberFldValue('Ном11',TmpGrN.Sums[1]);
          pXL.SetTblNumberFldValue('Ном12',TmpGrN.Sums[2]);
          pXL.SetTblNumberFldValue('Ном13',TmpGrN.Sums[3]);
          pXL.SetTblStringFldValue('Ном14',EdName);
          pXL.SetTblNumberFldValue('Ном15',dolg1Kol);
          pXL.SetTblNumberFldValue('Ном16',dolg1Sum);
          pXL.SetTblNumberFldValue('Ном17',OtgrKol);
          pXL.SetTblNumberFldValue('Ном18',OtgrSumNoNds);
          pXL.SetTblNumberFldValue('Ном19',OtgrSumNds1);
          pXL.SetTblNumberFldValue('Ном20',OtgrSumNds2);
          pXL.SetTblNumberFldValue('Ном21',OtgrSumdopNalog);
          pXL.SetTblNumberFldValue('Ном22',OtgrSum);
          pXL.SetTblNumberFldValue('Ном23',OplKol);
          pXL.SetTblNumberFldValue('Ном24',OplSumNoNds);
          pXL.SetTblNumberFldValue('Ном25',OplSumNds1);
          pXL.SetTblNumberFldValue('Ном26',OplSumNds2);
          pXL.SetTblNumberFldValue('Ном27',OplSumdopNalog);
          pXL.SetTblNumberFldValue('Ном28',OplSum);
          pXL.SetTblNumberFldValue('Ном29',dolg2Kol);
          pXL.SetTblNumberFldValue('Ном30',dolg2Sum);
       }

      Vidopl := '';

      for (i := 1; i <= 10; i++)
        if ( TmpGrN.ls[i] > 0 )
          {
            AllHozdoc := word(TmpGrN.ls[i]);
            Vidopl += TiDkGalTxt + ', ';
          }

      if (prvid = 0)
        frmDolgOpl1.Write(SubStr(Vidopl, 1, Length(Vidopl) - 2));       //26 Vidopl
      else
        pXL.SetTblStringFldValue('Ном31', SubStr(Vidopl, 1, Length(Vidopl) - 2) );
      if (prvid = 1)
        pXL.InsTblRow;
    }
}

Procedure PrintFootdog;
{
  if ( Detal < 4 )
    {
      if (prvid = 0)
        {
          frmDolgOpl1.Write(nGrdo);                      //01 nSpdog
          frmDolgOpl1.Write(doGdolg1Kol);                //02 dodolg1Kol
          frmDolgOpl1.Write(doGdolg1Sum);                //03 dodolg1Sum
          frmDolgOpl1.Write(doGOtgrKol);                 //04 doOtgrKol
          frmDolgOpl1.Write(doGOtgrSum);                 //05 doOtgrSum
          frmDolgOpl1.Write(doGOtgrSumNds1);             //06 doOtgrSumNds1
          frmDolgOpl1.Write(doGOtgrSumNds2);             //07 doOtgrSumNds2
          frmDolgOpl1.Write(doGOtgrSumNoNds);            //08 doOtgrSumNoNds
          frmDolgOpl1.Write(doGOtgrSumdopNalog);         //08a doOtgrSumdopNalog
          frmDolgOpl1.Write(doGOplKol);                  //09 doOplKol
          frmDolgOpl1.Write(doGOplSum);                  //10 doOplSum
          frmDolgOpl1.Write(doGOplSumNds1);              //11 doOplSumNds1
          frmDolgOpl1.Write(doGOplSumNds2);              //12 doOplSumNds2
          frmDolgOpl1.Write(doGOplSumNoNds);             //13 doOplSumNoNds
          frmDolgOpl1.Write(doGOplSumdopNalog);          //13a doOplSumdopNalog
          frmDolgOpl1.Write(doGdolg2Kol);                //14 dodolg2Kol
          frmDolgOpl1.Write(doGdolg2Sum);                //15 dodolg2Sum
        }
      else
        if (AllKontr>=4)
          {
            pXL.ClearTblBuffer;
            if (Detal < 2)
            {
              pXL.SetTblStringFldValue('Ном31',  'Итого по договору: ' );
              if (VidOt < 4)
                {
                  pXL.InsTblRow;
                  pXL.ClearTblBuffer;
                }
            }
            pXL.SetTblNumberFldValue('Ном15', doGdolg1Kol);
            pXL.SetTblNumberFldValue('Ном16', doGdolg1Sum);
            pXL.SetTblNumberFldValue('Ном17', doGOtgrKol);
            pXL.SetTblNumberFldValue('Ном18', doGOtgrSumNoNds);
            pXL.SetTblNumberFldValue('Ном19', doGOtgrSumNds1);
            pXL.SetTblNumberFldValue('Ном20', doGOtgrSumNds2);
            pXL.SetTblNumberFldValue('Ном21', doGOtgrSumdopNalog);
            pXL.SetTblNumberFldValue('Ном22', doGOtgrSum);
            pXL.SetTblNumberFldValue('Ном23', doGOplKol);
            pXL.SetTblNumberFldValue('Ном24', doGOplSumNoNds);
            pXL.SetTblNumberFldValue('Ном25', doGOplSumNds1);
            pXL.SetTblNumberFldValue('Ном26', doGOplSumNds2);
            pXL.SetTblNumberFldValue('Ном27', doGOplSumdopNalog);
            pXL.SetTblNumberFldValue('Ном28', doGOplSum);
            pXL.SetTblNumberFldValue('Ном29', doGdolg2Kol);
            pXL.SetTblNumberFldValue('Ном30', doGdolg2Sum);
            pXL.InsTblRow;
          }
    }

  GrdoGdolg1Kol        += doGdolg1Kol;
  GrdoGdolg1Sum        += doGdolg1Sum;
  GrdoGOtgrKol         += doGOtgrKol;
  GrdoGOtgrSum         += doGOtgrSum;
  GrdoGOtgrSumNds1     += doGOtgrSumNds1;
  GrdoGOtgrSumNds2     += doGOtgrSumNds2;
  GrdoGOtgrSumNoNds    += doGOtgrSumNoNds;
  GrdoGOtgrSumdopNalog += doGOtgrSumdopNalog;
  GrdoGOplKol          += doGOplKol;
  GrdoGOplSum          += doGOplSum;
  GrdoGOplSumNds1      += doGOplSumNds1;
  GrdoGOplSumNds2      += doGOplSumNds2;
  GrdoGOplSumNoNds     += doGOplSumNoNds;
  GrdoGOplSumdopNalog  += doGOplSumdopNalog;
  GrdoGdolg2Kol        += doGdolg2Kol;
  GrdoGdolg2Sum        += doGdolg2Sum;
}

Procedure PrintFootGrdog;
{
  if ( Detal < 5 )
    {
      if (prvid = 0)
        {
          frmDolgOpl1.Write(ndog);                       //01 ndoGrdo

          frmDolgOpl1.Write(GrdoGdolg1Kol);              //02 Grdodolg1Kol
          frmDolgOpl1.Write(GrdoGdolg1Sum);              //03 Grdodolg1Sum
          frmDolgOpl1.Write(GrdoGOtgrKol);               //04 GrdoOtgrKol
          frmDolgOpl1.Write(GrdoGOtgrSum);               //05 GrdoOtgrSum
          frmDolgOpl1.Write(GrdoGOtgrSumNds1);           //06 GrdoOtgrSumNds1
          frmDolgOpl1.Write(GrdoGOtgrSumNds2);           //07 GrdoOtgrSumNds2
          frmDolgOpl1.Write(GrdoGOtgrSumNoNds);          //08 GrdoOtgrSumNoNds
          frmDolgOpl1.Write(GrdoGOtgrSumdopNalog);       //08a GrdoOtgrSumdopNalog
          frmDolgOpl1.Write(GrdoGOplKol);                //09 GrdoOplKol
          frmDolgOpl1.Write(GrdoGOplSum);                //10 GrdoOplSum
          frmDolgOpl1.Write(GrdoGOplSumNds1);            //11 GrdoOplSumNds1
          frmDolgOpl1.Write(GrdoGOplSumNds2);            //12 GrdoOplSumNds2
          frmDolgOpl1.Write(GrdoGOplSumNoNds);           //13 GrdoOplSumNoNds
          frmDolgOpl1.Write(GrdoGOplSumdopNalog);        //13a GrdoOplSumdopNalog
          frmDolgOpl1.Write(GrdoGdolg2Kol);              //14 Grdodolg2Kol
          frmDolgOpl1.Write(GrdoGdolg2Sum);              //15 Grdodolg2Sum
        }
      else
        if (AllKontr>=5)
          {
            if not notBr
              {
                pXL.DisConnectExcel;
                Exit;
              }
            pXL.ClearTblBuffer;
            if (Detal <> 4)
            {
              pXL.SetTblStringFldValue('Ном2',  'Итого по группе договоров:');
              if (VidOt < 4)
                {
                  pXL.InsTblRow;
                  pXL.ClearTblBuffer;
                }
            }

            pXL.SetTblNumberFldValue('Ном15', GrdoGdolg1Kol);
            pXL.SetTblNumberFldValue('Ном16', GrdoGdolg1Sum);
            pXL.SetTblNumberFldValue('Ном17', GrdoGOtgrKol);
            pXL.SetTblNumberFldValue('Ном18', GrdoGOtgrSumNoNds);
            pXL.SetTblNumberFldValue('Ном19', GrdoGOtgrSumNds1);
            pXL.SetTblNumberFldValue('Ном20', GrdoGOtgrSumNds2);
            pXL.SetTblNumberFldValue('Ном21', GrdoGOtgrSumdopNalog);
            pXL.SetTblNumberFldValue('Ном22', GrdoGOtgrSum);
            pXL.SetTblNumberFldValue('Ном23', GrdoGOplKol);
            pXL.SetTblNumberFldValue('Ном24', GrdoGOplSumNoNds);
            pXL.SetTblNumberFldValue('Ном25', GrdoGOplSumNds1);
            pXL.SetTblNumberFldValue('Ном26', GrdoGOplSumNds2);
            pXL.SetTblNumberFldValue('Ном27', GrdoGOplSumdopNalog);
            pXL.SetTblNumberFldValue('Ном28', GrdoGOplSum);
            pXL.SetTblNumberFldValue('Ном29', GrdoGdolg2Kol);
            pXL.SetTblNumberFldValue('Ном30', GrdoGdolg2Sum);
            pXL.InsTblRow;
          }
    }

  orgdolg1Kol        += GrdoGdolg1Kol;
  orgdolg1Sum        += GrdoGdolg1Sum;
  orgOtgrKol         += GrdoGOtgrKol;
  orgOtgrSum         += GrdoGOtgrSum;
  orgOtgrSumNds1     += GrdoGOtgrSumNds1;
  orgOtgrSumNds2     += GrdoGOtgrSumNds2;
  orgOtgrSumNoNds    += GrdoGOtgrSumNoNds;
  orgOtgrSumdopNalog += GrdoGOtgrSumdopNalog;
  orgOplKol          += GrdoGOplKol;
  orgOplSum          += GrdoGOplSum;
  orgOplSumNds1      += GrdoGOplSumNds1;
  orgOplSumNds2      += GrdoGOplSumNds2;
  orgOplSumNoNds     += GrdoGOplSumNoNds;
  orgOplSumdopNalog  += GrdoGOplSumdopNalog;
  orgdolg2Kol        += GrdoGdolg2Kol;
  orgdolg2Sum        += GrdoGdolg2Sum;
}

Procedure PrintFootdo;
{
  if ( Detal < 2 )
    {
      if (prvid = 0)
        {
          frmDolgOpl1.Write(nSp);                        //01 nSpdo
          frmDolgOpl1.Write(dodolg1Kol);                 //02 dodolg1Kol
          frmDolgOpl1.Write(dodolg1Sum);                 //03 dodolg1Sum
          frmDolgOpl1.Write(doOtgrKol);                  //04 doOtgrKol
          frmDolgOpl1.Write(doOtgrSum);                  //05 doOtgrSum
          frmDolgOpl1.Write(doOtgrSumNds1);              //06 doOtgrSumNds1
          frmDolgOpl1.Write(doOtgrSumNds2);              //07 doOtgrSumNds2
          frmDolgOpl1.Write(doOtgrSumNoNds);             //08 doOtgrSumNoNds
          frmDolgOpl1.Write(doOtgrSumdopNalog);          //08a doOtgrSumdopNalog
          frmDolgOpl1.Write(doOplKol);                   //09 doOplKol
          frmDolgOpl1.Write(doOplSum);                   //10 doOplSum
          frmDolgOpl1.Write(doOplSumNds1);               //11 doOplSumNds1
          frmDolgOpl1.Write(doOplSumNds2);               //12 doOplSumNds2
          frmDolgOpl1.Write(doOplSumNoNds);              //13 doOplSumNoNds
          frmDolgOpl1.Write(doOplSumdopNalog);           //13a doOplSumdopNalog
          frmDolgOpl1.Write(dodolg2Kol);                 //14 dodolg2Kol
          frmDolgOpl1.Write(dodolg2Sum);                 //15 dodolg2Sum
        }
      else
        {
          if not notBr
            {
              pXL.DisConnectExcel;
              Exit;
            }
          pXL.ClearTblBuffer;
          if (detal <> 1)
          {
            pXL.SetTblStringFldValue('Ном3',  'Итого по ДО:');
            if (VidOt < 4)
              {
                pXL.InsTblRow;
                pXL.ClearTblBuffer;
              }
           }

          pXL.SetTblNumberFldValue('Ном15', dodolg1Kol);
          pXL.SetTblNumberFldValue('Ном16', dodolg1Sum);
          pXL.SetTblNumberFldValue('Ном17', doOtgrKol);
          pXL.SetTblNumberFldValue('Ном18', doOtgrSumNoNds);
          pXL.SetTblNumberFldValue('Ном19', doOtgrSumNds1);
          pXL.SetTblNumberFldValue('Ном20', doOtgrSumNds2);
          pXL.SetTblNumberFldValue('Ном21', doOtgrSumdopNalog);
          pXL.SetTblNumberFldValue('Ном22', doOtgrSum);
          pXL.SetTblNumberFldValue('Ном23', doOplKol);
          pXL.SetTblNumberFldValue('Ном24', doOplSumNoNds);
          pXL.SetTblNumberFldValue('Ном25', doOplSumNds1);
          pXL.SetTblNumberFldValue('Ном26', doOplSumNds2);
          pXL.SetTblNumberFldValue('Ном27', doOplSumdopNalog);
          pXL.SetTblNumberFldValue('Ном28', doOplSum);
          pXL.SetTblNumberFldValue('Ном29', dodolg2Kol);
          pXL.SetTblNumberFldValue('Ном30', dodolg2Sum);
          pXL.InsTblRow;
        }
    }

  Grdodolg1Kol        += dodolg1Kol;
  Grdodolg1Sum        += dodolg1Sum;
  GrdoOtgrKol         += doOtgrKol;
  GrdoOtgrSum         += doOtgrSum;
  GrdoOtgrSumNds1     += doOtgrSumNds1;
  GrdoOtgrSumNds2     += doOtgrSumNds2;
  GrdoOtgrSumNoNds    += doOtgrSumNoNds;
  GrdoOtgrSumdopNalog += doOtgrSumdopNalog;
  GrdoOplKol          += doOplKol;
  GrdoOplSum          += doOplSum;
  GrdoOplSumNds1      += doOplSumNds1;
  GrdoOplSumNds2      += doOplSumNds2;
  GrdoOplSumNoNds     += doOplSumNoNds;
  GrdoOplSumdopNalog  += doOplSumdopNalog;
  Grdodolg2Kol        += dodolg2Kol;
  Grdodolg2Sum        += dodolg2Sum;
}

Procedure PrintFootGrdo;
{
  if ( Detal < 3 )
    {
      if (prvid = 0)
        {
          frmDolgOpl1.Write(ndo);                        //01 ndoGrdo
          frmDolgOpl1.Write(Grdodolg1Kol);               //02 Grdodolg1Kol
          frmDolgOpl1.Write(Grdodolg1Sum);               //03 Grdodolg1Sum
          frmDolgOpl1.Write(GrdoOtgrKol);                //04 GrdoOtgrKol
          frmDolgOpl1.Write(GrdoOtgrSum);                //05 GrdoOtgrSum
          frmDolgOpl1.Write(GrdoOtgrSumNds1);            //06 GrdoOtgrSumNds1
          frmDolgOpl1.Write(GrdoOtgrSumNds2);            //07 GrdoOtgrSumNds2
          frmDolgOpl1.Write(GrdoOtgrSumNoNds);           //08 GrdoOtgrSumNoNds
          frmDolgOpl1.Write(GrdoOtgrSumdopNalog);        //08a GrdoOtgrSumdopNalog
          frmDolgOpl1.Write(GrdoOplKol);                 //09 GrdoOplKol
          frmDolgOpl1.Write(GrdoOplSum);                 //10 GrdoOplSum
          frmDolgOpl1.Write(GrdoOplSumNds1);             //11 GrdoOplSumNds1
          frmDolgOpl1.Write(GrdoOplSumNds2);             //12 GrdoOplSumNds2
          frmDolgOpl1.Write(GrdoOplSumNoNds);            //13 GrdoOplSumNoNds
          frmDolgOpl1.Write(GrdoOplSumdopNalog);         //13a GrdoOplSumdopNalog
          frmDolgOpl1.Write(Grdodolg2Kol);               //14 Grdodolg2Kol
          frmDolgOpl1.Write(Grdodolg2Sum);               //15 Grdodolg2Sum
        }
      else
        if (AllKontr<4)
          {
            pXL.ClearTblBuffer;
            if (Detal < 2)
            {
              pXL.SetTblStringFldValue('Ном2',  'Итого по группе ДО:');
              if (VidOt < 4)
              {
                pXL.InsTblRow;
                pXL.ClearTblBuffer;
              }
            }

            pXL.SetTblNumberFldValue('Ном15',  Grdodolg1Kol);
            pXL.SetTblNumberFldValue('Ном16', Grdodolg1Sum);
            pXL.SetTblNumberFldValue('Ном17', GrdoOtgrKol);
            pXL.SetTblNumberFldValue('Ном18', GrdoOtgrSumNoNds);
            pXL.SetTblNumberFldValue('Ном19', GrdoOtgrSumNds1);
            pXL.SetTblNumberFldValue('Ном20', GrdoOtgrSumNds2);
            pXL.SetTblNumberFldValue('Ном21', GrdoOtgrSumdopNalog);
            pXL.SetTblNumberFldValue('Ном22', GrdoOtgrSum);
            pXL.SetTblNumberFldValue('Ном23', GrdoOplKol);
            pXL.SetTblNumberFldValue('Ном24', GrdoOplSumNoNds);
            pXL.SetTblNumberFldValue('Ном25', GrdoOplSumNds1);
            pXL.SetTblNumberFldValue('Ном26', GrdoOplSumNds2);
            pXL.SetTblNumberFldValue('Ном27', GrdoOplSumdopNalog);
            pXL.SetTblNumberFldValue('Ном28', GrdoOplSum);
            pXL.SetTblNumberFldValue('Ном29', Grdodolg2Kol);
            pXL.SetTblNumberFldValue('Ном30', Grdodolg2Sum);
            pXL.InsTblRow;
          }
    }

  doGdolg1Kol        += Grdodolg1Kol;
  doGdolg1Sum        += Grdodolg1Sum;
  doGOtgrKol         += GrdoOtgrKol;
  doGOtgrSum         += GrdoOtgrSum;
  doGOtgrSumNds1     += GrdoOtgrSumNds1;
  doGOtgrSumNds2     += GrdoOtgrSumNds2;
  doGOtgrSumNoNds    += GrdoOtgrSumNoNds;
  doGOtgrSumdopNalog += GrdoOtgrSumdopNalog;
  doGOplKol          += GrdoOplKol;
  doGOplSum          += GrdoOplSum;
  doGOplSumNds1      += GrdoOplSumNds1;
  doGOplSumNds2      += GrdoOplSumNds2;
  doGOplSumNoNds     += GrdoOplSumNoNds;
  doGOplSumdopNalog  += GrdoOplSumdopNalog;
  doGdolg2Kol        += Grdodolg2Kol;
  doGdolg2Sum        += Grdodolg2Sum;
}

Procedure PrintFootorg;
{
  if (prvid = 0)
  {
  if ( AllKontr < 4 )
    frmDolgOpl1.Write(nGrdo);                        //01 nGrdoorg
  else
    frmDolgOpl1.Write(nGrdog);                       //01 nGrdoorg

  frmDolgOpl1.Write(orgdolg1Kol);                    //02 orgdolg1Kol
  frmDolgOpl1.Write(orgdolg1Sum);                    //03 orgdolg1Sum
  frmDolgOpl1.Write(orgOtgrKol);                     //04 orgOtgrKol
  frmDolgOpl1.Write(orgOtgrSum);                     //05 orgOtgrSum
  frmDolgOpl1.Write(orgOtgrSumNds1);                 //06 orgOtgrSumNds1
  frmDolgOpl1.Write(orgOtgrSumNds2);                 //07 orgOtgrSumNds2
  frmDolgOpl1.Write(orgOtgrSumNoNds);                //08 orgOtgrSumNoNds
  frmDolgOpl1.Write(orgOtgrSumdopNalog);             //08a orgOtgrSumdopNalog
  frmDolgOpl1.Write(orgOplKol);                      //09 orgOplKol
  frmDolgOpl1.Write(orgOplSum);                      //10 orgOplSum
  frmDolgOpl1.Write(orgOplSumNds1);                  //11 orgOplSumNds1
  frmDolgOpl1.Write(orgOplSumNds2);                  //12 orgOplSumNds2
  frmDolgOpl1.Write(orgOplSumNoNds);                 //13 orgOplSumNoNds
  frmDolgOpl1.Write(orgOplSumdopNalog);              //13a orgOplSumdopNalog
  frmDolgOpl1.Write(orgdolg2Kol);                    //14 orgdolg2Kol
  frmDolgOpl1.Write(orgdolg2Sum);                    //15 orgdolg2Sum
//  TiDkGal = 2
  frmDolgOpl1.Write(orgMoneyOplKol);                 //16
  frmDolgOpl1.Write(orgMoneyOplSum);                 //17
  frmDolgOpl1.Write(orgMoneyOplSumNds1);             //18
  frmDolgOpl1.Write(orgMoneyOplSumNds2);             //19
  frmDolgOpl1.Write(orgMoneyOplSumNoNds);            //20
  frmDolgOpl1.Write(orgMoneyOplSumdopNalog);         //21
//  TiDkGal = 71
  frmDolgOpl1.Write(orgVzachetOplKol);               //22
  frmDolgOpl1.Write(orgVzachetOplSum);               //23
  frmDolgOpl1.Write(orgVzachetOplSumNds1);           //24
  frmDolgOpl1.Write(orgVzachetOplSumNds2);           //25
  frmDolgOpl1.Write(orgVzachetOplSumNoNds);          //26
  frmDolgOpl1.Write(orgVzachetOplSumdopNalog);       //27
//  TiDkGal = 82
  frmDolgOpl1.Write(orgOVexelOplKol);                //28
  frmDolgOpl1.Write(orgOVexelOplSum);                //29
  frmDolgOpl1.Write(orgOVexelOplSumNds1);            //30
  frmDolgOpl1.Write(orgOVexelOplSumNds2);            //31
  frmDolgOpl1.Write(orgOVexelOplSumNoNds);           //32
  frmDolgOpl1.Write(orgOVexelOplSumdopNalog);        //33
//  TiDkGal = 84
  frmDolgOpl1.Write(orgSVexelOplKol);                //34
  frmDolgOpl1.Write(orgSVexelOplSum);                //35
  frmDolgOpl1.Write(orgSVexelOplSumNds1);            //36
  frmDolgOpl1.Write(orgSVexelOplSumNds2);            //37
  frmDolgOpl1.Write(orgSVexelOplSumNoNds);           //38
  frmDolgOpl1.Write(orgSVexelOplSumdopNalog);        //39
  }
  else
    {
      if not notBr
        {
          pXL.DisConnectExcel;
          Exit;
        }
      pXL.ClearTblBuffer;
      if (Detal < 5)
      {
        pXL.SetTblStringFldValue('Ном1',  'Итого по ' + s2);
        if (VidOt < 4)
        {
          pXL.InsTblRow;
          pXL.ClearTblBuffer;
        }
      }

      pXL.SetTblNumberFldValue('Ном15', orgdolg1Kol);
      pXL.SetTblNumberFldValue('Ном16', orgdolg1Sum);
      pXL.SetTblNumberFldValue('Ном17', orgOtgrKol);
      pXL.SetTblNumberFldValue('Ном18', orgOtgrSumNoNds);
      pXL.SetTblNumberFldValue('Ном19', orgOtgrSumNds1);
      pXL.SetTblNumberFldValue('Ном20', orgOtgrSumNds2);
      pXL.SetTblNumberFldValue('Ном21', orgOtgrSumdopNalog);
      pXL.SetTblNumberFldValue('Ном22', orgOtgrSum);
      pXL.SetTblNumberFldValue('Ном23', orgOplKol);
      pXL.SetTblNumberFldValue('Ном24', orgOplSumNoNds);
      pXL.SetTblNumberFldValue('Ном25', orgOplSumNds1);
      pXL.SetTblNumberFldValue('Ном26', orgOplSumNds2);
      pXL.SetTblNumberFldValue('Ном27', orgOplSumdopNalog);
      pXL.SetTblNumberFldValue('Ном28', orgOplSum);
      pXL.SetTblNumberFldValue('Ном29', orgdolg2Kol);
      pXL.SetTblNumberFldValue('Ном30', orgdolg2Sum);
      pXL.InsTblRow;

    /*  if (VidOt = 1) or (VidOt = 3) or (VidOt = 5)
        if  Abs(OrgMoneyOplSum)>0.005 or Abs(OrgVzachetOplSum)>0.005 or Abs(OrgOVexelOplSum)>0.005 or Abs(OrgSVexelOplSum)>0.005
          {
            pXL.ClearTblBuffer;
            AllHozdoc := 2;
            pXL.SetTblStringFldValue('Ном3', TiDkGalTxt);
            pXL.SetTblNumberFldValue('Ном17',orgMoneyOplKol);
            pXL.SetTblNumberFldValue('Ном18',orgMoneyOplSumNoNds);
            pXL.SetTblNumberFldValue('Ном19',orgMoneyOplSumNds1);
            pXL.SetTblNumberFldValue('Ном20',orgMoneyOplSumNds2);
            pXL.SetTblNumberFldValue('Ном21',orgMoneyOplSumdopNalog);
            pXL.SetTblNumberFldValue('Ном22',orgMoneyOplSum);
            pXL.InsTblRow;

            pXL.ClearTblBuffer;
            AllHozdoc := 71;
            pXL.SetTblStringFldValue('Ном3', TiDkGalTxt);
            pXL.SetTblNumberFldValue('Ном17',orgVzachetOplKol);
            pXL.SetTblNumberFldValue('Ном18',orgVzachetOplSumNoNds);
            pXL.SetTblNumberFldValue('Ном19',orgVzachetOplSumNds1);
            pXL.SetTblNumberFldValue('Ном20',orgVzachetOplSumNds2);
            pXL.SetTblNumberFldValue('Ном21',orgVzachetOplSumdopNalog);
            pXL.SetTblNumberFldValue('Ном22',orgVzachetOplSum);
            pXL.InsTblRow;

            pXL.ClearTblBuffer;
            AllHozdoc := 82;
            pXL.SetTblStringFldValue('Ном3', TiDkGalTxt);
            pXL.SetTblNumberFldValue('Ном17',orgOVexelOplKol);
            pXL.SetTblNumberFldValue('Ном18',orgOVexelOplSumNoNds);
            pXL.SetTblNumberFldValue('Ном19',orgOVexelOplSumNds1);
            pXL.SetTblNumberFldValue('Ном20',orgOVexelOplSumNds2);
            pXL.SetTblNumberFldValue('Ном21',orgOVexelOplSumdopNalog);
            pXL.SetTblNumberFldValue('Ном22',orgOVexelOplSum);
            pXL.InsTblRow;

            pXL.ClearTblBuffer;
            AllHozdoc := 84;
            pXL.SetTblStringFldValue('Ном3', TiDkGalTxt);
            pXL.SetTblNumberFldValue('Ном17',orgSVexelOplKol);
            pXL.SetTblNumberFldValue('Ном18',orgSVexelOplSumNoNds);
            pXL.SetTblNumberFldValue('Ном19',orgSVexelOplSumNds1);
            pXL.SetTblNumberFldValue('Ном20',orgSVexelOplSumNds2);
            pXL.SetTblNumberFldValue('Ном21',orgSVexelOplSumdopNalog);
            pXL.SetTblNumberFldValue('Ном22',orgSVexelOplSum);
            pXL.InsTblRow;
          } */
    }

  Repdolg1Kol        += orgdolg1Kol;
  Repdolg1Sum        += orgdolg1Sum;
  RepOtgrKol         += orgOtgrKol;
  RepOtgrSum         += orgOtgrSum;
  RepOtgrSumNds1     += orgOtgrSumNds1;
  RepOtgrSumNds2     += orgOtgrSumNds2;
  RepOtgrSumNoNds    += orgOtgrSumNoNds;
  RepOtgrSumdopNalog += orgOtgrSumdopNalog;
  RepOplKol          += orgOplKol;
  RepOplSum          += orgOplSum;
  RepOplSumNds1      += orgOplSumNds1;
  RepOplSumNds2      += orgOplSumNds2;
  RepOplSumNoNds     += orgOplSumNoNds;
  RepOplSumdopNalog  += orgOplSumdopNalog;
  Repdolg2Kol        += orgdolg2Kol;
  Repdolg2Sum        += orgdolg2Sum;

//  TiDkGal = 2
  RepMoneyOplKol           += orgMoneyOplKol;
  RepMoneyOplSum           += orgMoneyOplSum;
  RepMoneyOplSumNds1       += orgMoneyOplSumNds1;
  RepMoneyOplSumNds2       += orgMoneyOplSumNds2;
  RepMoneyOplSumNoNds      += orgMoneyOplSumNoNds;
  RepMoneyOplSumdopNalog   += orgMoneyOplSumdopNalog;
//  TiDkGal = 71
  RepVzachetOplKol         += orgVzachetOplKol;
  RepVzachetOplSum         += orgVzachetOplSum;
  RepVzachetOplSumNds1     += orgVzachetOplSumNds1;
  RepVzachetOplSumNds2     += orgVzachetOplSumNds2;
  RepVzachetOplSumNoNds    += orgVzachetOplSumNoNds;
  RepVzachetOplSumdopNalog += orgVzachetOplSumdopNalog;
//  TiDkGal = 82
  RepOVexelOplKol          += orgOVexelOplKol;
  RepOVexelOplSum          += orgOVexelOplSum;
  RepOVexelOplSumNds1      += orgOVexelOplSumNds1;
  RepOVexelOplSumNds2      += orgOVexelOplSumNds2;
  RepOVexelOplSumNoNds     += orgOVexelOplSumNoNds;
  RepOVexelOplSumdopNalog  += orgOVexelOplSumdopNalog;
//  TiDkGal = 84
  RepSVexelOplKol          += orgSVexelOplKol;
  RepSVexelOplSum          += orgSVexelOplSum;
  RepSVexelOplSumNds1      += orgSVexelOplSumNds1;
  RepSVexelOplSumNds2      += orgSVexelOplSumNds2;
  RepSVexelOplSumNoNds     += orgSVexelOplSumNoNds;
  RepSVexelOplSumdopNalog  += orgSVexelOplSumdopNalog;
}

Procedure PrintFootReport;
{
  if (prvid = 0)
  {
  frmDolgOpl1.Write(norg);                           //01 norgRep
  frmDolgOpl1.Write(Repdolg1Kol);                    //02 Repdolg1Kol
  frmDolgOpl1.Write(Repdolg1Sum);                    //03 Repdolg1Sum
  frmDolgOpl1.Write(RepOtgrKol);                     //04 RepOtgrKol
  frmDolgOpl1.Write(RepOtgrSum);                     //05 RepOtgrSum
  frmDolgOpl1.Write(RepOtgrSumNds1);                 //06 RepOtgrSumNds1
  frmDolgOpl1.Write(RepOtgrSumNds2);                 //07 RepOtgrSumNds2
  frmDolgOpl1.Write(RepOtgrSumNoNds);                //08 RepOtgrSumNoNds
  frmDolgOpl1.Write(RepOtgrSumdopNalog);             //08a RepOtgrSumdopNalog
  frmDolgOpl1.Write(RepOplKol);                      //09 RepOplKol
  frmDolgOpl1.Write(RepOplSum);                      //10 RepOplSum
  frmDolgOpl1.Write(RepOplSumNds1);                  //11 RepOplSumNds1
  frmDolgOpl1.Write(RepOplSumNds2);                  //12 RepOplSumNds2
  frmDolgOpl1.Write(RepOplSumNoNds);                 //13 RepOplSumNoNds
  frmDolgOpl1.Write(RepOplSumdopNalog);              //13a RepOplSumdopNalog
  frmDolgOpl1.Write(Repdolg2Kol);                    //14 Repdolg2Kol
  frmDolgOpl1.Write(Repdolg2Sum);                    //15 Repdolg2Sum
//  TiDkGal = 2
  frmDolgOpl1.Write(RepMoneyOplKol);                 //16
  frmDolgOpl1.Write(RepMoneyOplSum);                 //17
  frmDolgOpl1.Write(RepMoneyOplSumNds1);             //18
  frmDolgOpl1.Write(RepMoneyOplSumNds2);             //19
  frmDolgOpl1.Write(RepMoneyOplSumNoNds);            //20
  frmDolgOpl1.Write(RepMoneyOplSumdopNalog);         //21
//  TiDkGal = 71
  frmDolgOpl1.Write(RepVzachetOplKol);               //22
  frmDolgOpl1.Write(RepVzachetOplSum);               //23
  frmDolgOpl1.Write(RepVzachetOplSumNds1);           //24
  frmDolgOpl1.Write(RepVzachetOplSumNds2);           //25
  frmDolgOpl1.Write(RepVzachetOplSumNoNds);          //26
  frmDolgOpl1.Write(RepVzachetOplSumdopNalog);       //27
//  TiDkGal = 82
  frmDolgOpl1.Write(RepOVexelOplKol);                //28
  frmDolgOpl1.Write(RepOVexelOplSum);                //29
  frmDolgOpl1.Write(RepOVexelOplSumNds1);            //30
  frmDolgOpl1.Write(RepOVexelOplSumNds2);            //31
  frmDolgOpl1.Write(RepOVexelOplSumNoNds);           //32
  frmDolgOpl1.Write(RepOVexelOplSumdopNalog);        //33
//  TiDkGal = 84
  frmDolgOpl1.Write(RepSVexelOplKol);                //34
  frmDolgOpl1.Write(RepSVexelOplSum);                //35
  frmDolgOpl1.Write(RepSVexelOplSumNds1);            //36
  frmDolgOpl1.Write(RepSVexelOplSumNds2);            //37
  frmDolgOpl1.Write(RepSVexelOplSumNoNds);           //38
  frmDolgOpl1.Write(RepSVexelOplSumdopNalog);        //39
  }
  else
    {
      if not notBr
        {
          pXL.DisConnectExcel;
          Exit;
        }
      pXL.ClearTblBuffer;
      pXL.SetTblStringFldValue('Ном1',  'Итого по отчету:');
      if (VidOt < 4)
        {
          pXL.InsTblRow;
          pXL.ClearTblBuffer;
        }

      pXL.SetTblNumberFldValue('Ном15', Repdolg1Kol);
      pXL.SetTblNumberFldValue('Ном16', Repdolg1Sum);
      pXL.SetTblNumberFldValue('Ном17', RepOtgrKol);
      pXL.SetTblNumberFldValue('Ном18', RepOtgrSumNoNds);
      pXL.SetTblNumberFldValue('Ном19', RepOtgrSumNds1);
      pXL.SetTblNumberFldValue('Ном20', RepOtgrSumNds2);
      pXL.SetTblNumberFldValue('Ном21', RepOtgrSumdopNalog);
      pXL.SetTblNumberFldValue('Ном22', RepOtgrSum);
      pXL.SetTblNumberFldValue('Ном23', RepOplKol);
      pXL.SetTblNumberFldValue('Ном24', RepOplSumNoNds);
      pXL.SetTblNumberFldValue('Ном25', RepOplSumNds1);
      pXL.SetTblNumberFldValue('Ном26', RepOplSumNds2);
      pXL.SetTblNumberFldValue('Ном27', RepOplSumdopNalog);
      pXL.SetTblNumberFldValue('Ном28', RepOplSum);
      pXL.SetTblNumberFldValue('Ном29', Repdolg2Kol);
      pXL.SetTblNumberFldValue('Ном30', Repdolg2Sum);
      pXL.InsTblRow;

    /*  if (VidOt = 1) or (VidOt = 3) or (VidOt = 5)
        if Abs(RepMoneyOplSum)>0.005 or Abs(RepVzachetOplSum)>0.005 or Abs(RepOVexelOplSum)>0.005 or Abs(RepSVexelOplSum)>0.005
          {
            pXL.ClearTblBuffer;
            AllHozdoc := 2;
            pXL.SetTblStringFldValue('Ном3', TiDkGalTxt);
            pXL.SetTblNumberFldValue('Ном17',RepMoneyOplKol);
            pXL.SetTblNumberFldValue('Ном18',RepMoneyOplSumNoNds);
            pXL.SetTblNumberFldValue('Ном19',RepMoneyOplSumNds1);
            pXL.SetTblNumberFldValue('Ном20',RepMoneyOplSumNds2);
            pXL.SetTblNumberFldValue('Ном21',RepMoneyOplSumdopNalog);
            pXL.SetTblNumberFldValue('Ном22',RepMoneyOplSum);
            pXL.InsTblRow;

            pXL.ClearTblBuffer;
            AllHozdoc := 71;
            pXL.SetTblStringFldValue('Ном3', TiDkGalTxt);
            pXL.SetTblNumberFldValue('Ном17',RepVzachetOplKol);
            pXL.SetTblNumberFldValue('Ном18',RepVzachetOplSumNoNds);
            pXL.SetTblNumberFldValue('Ном19',RepVzachetOplSumNds1);
            pXL.SetTblNumberFldValue('Ном20',RepVzachetOplSumNds2);
            pXL.SetTblNumberFldValue('Ном21',RepVzachetOplSumdopNalog);
            pXL.SetTblNumberFldValue('Ном22',RepVzachetOplSum);
            pXL.InsTblRow;

            pXL.ClearTblBuffer;
            AllHozdoc := 82;
            pXL.SetTblStringFldValue('Ном3', TiDkGalTxt);
            pXL.SetTblNumberFldValue('Ном17',RepOVexelOplKol);
            pXL.SetTblNumberFldValue('Ном18',RepOVexelOplSumNoNds);
            pXL.SetTblNumberFldValue('Ном19',RepOVexelOplSumNds1);
            pXL.SetTblNumberFldValue('Ном20',RepOVexelOplSumNds2);
            pXL.SetTblNumberFldValue('Ном21',RepOVexelOplSumdopNalog);
            pXL.SetTblNumberFldValue('Ном22',RepOVexelOplSum);
            pXL.InsTblRow;

            pXL.ClearTblBuffer;
            AllHozdoc := 84;
            pXL.SetTblStringFldValue('Ном3', TiDkGalTxt);
            pXL.SetTblNumberFldValue('Ном17',RepSVexelOplKol);
            pXL.SetTblNumberFldValue('Ном18',RepSVexelOplSumNoNds);
            pXL.SetTblNumberFldValue('Ном19',RepSVexelOplSumNds1);
            pXL.SetTblNumberFldValue('Ном20',RepSVexelOplSumNds2);
            pXL.SetTblNumberFldValue('Ном21',RepSVexelOplSumdopNalog);
            pXL.SetTblNumberFldValue('Ном22',RepSVexelOplSum);
            pXL.InsTblRow;
          }                  */

      StartNewVisual(vtRotateVisual, vfTimer, 'Выгрузка данных в Excel', 1);
      NextVisual;
      pXL.PublishTbl('DolgOpl1');
      pXL.LoadReport(sXLSFileName);
      StopVisual('', 0);
      pXL.DisConnectExcel;
    }
}

Procedure PrintReport;
Var
  Savorg
, SavGrdo
, Savdo
, SavGrdoG
, SavdoG
             : string;

  dSta
             : boolean;
{
  if not dolgOpl1Init
    {
      Message('Отчет не проинициализирован!', Warning);
      Exit;
    }

  if ( GetFirst TmpGrN <> tsOk )
    {
      if ( notBr )
        Message('По установленным ограничениям реализация и задолженности отсутствуют.', Information);

      Exit;
    }
  else
    {
      if (prvid = 1)
        {
          if ( not pxlRepSetup.CheckParam(0, 'L_RepOper\DolgOpl1', sXLTFileName) )
            if (not pXLRepSetup.RunSetUpDialog(2, 'L_RepOper\DolgOpl1', sXLTFileName) )
               Exit;

          Set sXLSFileName := pXL.CreateNextReport(sXLTFileName, TRUE);
          NextVisual;
        }

      Savorg   := ''#255;
      SavGrdoG := ''#255;
      SavdoG   := ''#255;
      SavGrdo  := ''#255;
      Savdo    := ''#255;

      PrintHeadReport;

      _Loop TmpGrN2
        {
          if not notbr
            Break;

          if ( GetFirst TmpGrN where ((  word(167)    == TmpGrN.kTbl
                                     and TmpGrN2.cRec == TmpGrN.cRec
                                     )) <> tsOk )
            continue;

          if ( TmpGrN2.ds[10] = ZeroDate )
            {
              if ( GetFirst SpSopr where (( TmpGrN.cRec2 == SpSopr.nRec )) <> tsOk )
                continue;

              if ( Savorg <> TmpGrN.Ss[1] )
                {
                  if ( Savorg <> ''#255 )
                    {
                      PrintFootdo;
                      PrintFootGrdo;
                      PrintFootdoG;
                      PrintFootGrdoG;
                      PrintFootorg;
                    }

                  Savorg   := TmpGrN.Ss[1];
                  SavGrdo  := ''#255;
                  Savdo    := ''#255;
                  Savdog   := ''#255;
                  SavGrdog := ''#255;

                  PrintHeadorg;
                }

              if ( SavGrdoG <> TmpGrN.Ss[2] )
                {
                  if ( SavGrdoG <> ''#255 )
                    {
                      PrintFootdo;
                      PrintFootGrdo;
                      PrintFootdoG;
                      PrintFootGrdoG;
                    }

                  SavGrdoG := TmpGrN.Ss[2];
                  Savdo    := ''#255;
                  SavdoG   := ''#255;
                  SavGrdo  := ''#255;

                  PrintHeadGrdog;
                }

              if ( SavdoG <> TmpGrN.Ss[3] )
                {
                  if ( SavdoG <> ''#255 )
                    {
                      PrintFootdo;
                      PrintFootGrdo;
                      PrintFootdoG;
                    }

                  SavdoG  := TmpGrN.Ss[3];
                  Savdo   := ''#255;
                  SavGrdo := ''#255;
                  PrintHeaddog;
                }

              if ( SavGrdo <> TmpGrN.Ss[4] )
                {
                  if ( SavGrdo <> ''#255)
                    {
                      PrintFootdo;
                      PrintFootGrdo;
                    }

                  SavGrdo := TmpGrN.Ss[4];
                  Savdo   := ''#255;
                  PrintHeadGrdo;
                }

              if ( Savdo <> TmpGrN.Ss[5] )
                {
                  if ( Savdo <> ''#255 )
                    PrintFootdo;

                  Savdo := TmpGrN.Ss[5];

                  PrintHeaddo;
                }

              PrintSpP;
            }
          else
            {
              if ( GetFirst RzSpDoc where (( TmpGrN.cRec2 == RzSpDoc.nRec )) <> tsOk )
                continue;

              if ( GetFirst SpSopr where (( TmpGrN.cRec3 == SpSopr.nRec )) <> tsOk )
                continue;

              if ( Savorg <> TmpGrN.Ss[1] )
                {
                  if ( Savorg <> ''#255 )
                    {
                      PrintFootdo;
                      PrintFootGrdo;
                      PrintFootdoG;
                      PrintFootGrdoG;
                      PrintFootorg;
                    }

                  Savorg   := TmpGrN.Ss[1];
                  SavGrdo  := ''#255;
                  Savdo    := ''#255;
                  Savdog   := ''#255;
                  SavGrdog := ''#255;

                  PrintHeadorg;
                }

              if ( SavGrdoG <> TmpGrN.Ss[2] )
                {
                  if ( SavGrdoG <> ''#255 )
                    {
                      PrintFootdo;
                      PrintFootGrdo;
                      PrintFootdoG;
                      PrintFootGrdoG;
                    }

                  SavGrdoG := TmpGrN.Ss[2];
                  Savdo    := ''#255;
                  SavdoG   := ''#255;
                  SavGrdo  := ''#255;

                  PrintHeadGrdog;
                }

              if ( SavdoG <> TmpGrN.Ss[3] )
                {
                  if ( SavdoG <> ''#255 )
                    {
                      PrintFootdo;
                      PrintFootGrdo;
                      PrintFootdoG;
                    }

                  SavdoG  := TmpGrN.Ss[3];
                  Savdo   := ''#255;
                  SavGrdo := ''#255;
                  PrintHeaddog;
                }

              if ( SavGrdo <> TmpGrN.Ss[4] )
                {
                  if ( SavGrdo <> ''#255)
                    {
                      PrintFootdo;
                      PrintFootGrdo;
                    }

                  SavGrdo := TmpGrN.Ss[4];
                  Savdo   := ''#255;
                  PrintHeadGrdo;
                }

              if ( Savdo <> TmpGrN.Ss[5] )
                {
                  if ( Savdo <> ''#255 )
                    PrintFootdo;

                  Savdo := TmpGrN.Ss[5];

                  PrintHeaddo;
                }

              PrintRzP;
            }
        }

      PrintFootdo;
      PrintFootGrdo;
      PrintFootdoG;
      PrintFootGrdoG;
      PrintFootorg;
      PrintFootReport;
    }

  if (prvid <> 0)
  {
    if (GetFirst TmpGrN2 = tsOk)
      {}
  }
  else
    if ( (notBr) and (GetFirst TmpGrN2 = tsOk) )
      frmDolgOpl1.ShowFile('');
    else
      frmDolgOpl1.Abortform;
}
