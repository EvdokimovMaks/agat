/*
 ╔═══════════════════════════════════════════════════════════════════════════╗
 ║                     (c) 1994,97 корпорация ГАЛАКТИКА                      ║
 ║ Проект        : ГАЛАКТИКА                                                 ║
 ║ Система       : Давальческое сырье                                        ║
 ║ Версия        : 5.20                                                      ║
 ║ Назначение    : Макросы для отладки                                       ║
 ║ Ответственный : Левченко Андрей Александрович(Andrew)                     ║
 ║ Параметры     : НЕТ                                                       ║
 ╚═══════════════════════════════════════════════════════════════════════════╝
*/

//Public функции !!!!!!!!!!!!!!!!!!
//Function GetStrDsk_Deb : string;
//Procedure SetStrDsk_Deb(prStrDSK_Deb : string);
//Function GetNameObj : string;
//Procedure SetNameObj(prNameObj : string);
//Function LoadDebugObj(prDebugObj : oDebug) : boolean;
//Function GetModeDebug : boolean;
//Function SetModeDebug(prFlagDebug : boolean) : Boolean;
//Procedure SetStartVarDebug(prStrDSK_Deb : string; prNameObj : string);


#ifndef _DEBUG_MAC_
#define _DEBUG_MAC_


Function WrkRunWindow_Debug(prTypeWnd : word; prNameWnd : string; prDebStr : string) : Boolean; forward;
//Procedure RunCommand; forward;

const
 cntNameDebugObj = 'DebugObj';
end

const
  cnt_StrDsk_RunDebug        = 'RunDebug';
  cnt_StrDsk_NameFileDebug   = 'NameFileDebug';
  cnt_FlagRunTimeDebug       = 'FlagRunTimeDebug';
end;

var GlbStrDSK_Deb            : String;
var GlbNameObj, Buff_NameObj : string;
var GlbFlagDeb, Buff_FlagDeb : Boolean;
var GlbCountEnMac : word;
//var Glb_CR_WriteInFileDebug : word;
var GlbFlag_LoadDebugObj      : boolean;

var DebugObj     : oDebug;


Procedure CopyVarDebugToBuff;
{
 Buff_NameObj := GlbNameObj;
 Buff_FlagDeb := GlbFlagDeb;
} // Procedure CopyVarIRToBuff

Procedure CopyBuffToVarDebug;
{
 GlbNameObj := Buff_NameObj;
 GlbFlagDeb := Buff_FlagDeb;
} // Procedure CopyBuffToVarIR


//**************************************************************************************************************************
//****************************************** Отладка ***********************************************************************
//**************************************************************************************************************************
#Declare DecReadGenVarDebFromDSK(prStrDSK_Dec, prFlagDeb_Dec, prNameFileDebug_Dec)
{var datechanged : boolean;

 if (not ReadMyDSK(#prFlagDeb_Dec, #prStrDSK_Dec + cnt_StrDsk_RunDebug, datechanged))
     #prFlagDeb_Dec := word(0);
 if (not ReadMyDSK(#prNameFileDebug_Dec, #prStrDSK_Dec + cnt_StrDsk_NameFileDebug, datechanged))
     #prNameFileDebug_Dec := '';
 if (#prNameFileDebug_Dec = '') #prNameFileDebug_Dec := 'FD_' + GlbStrDSK_Deb + '.txt';
}
#end

#Declare DecSaveGenVarFromDSK(prStrDSK_Dec, FlagDeb_Dec, prNameFileDebug_Dec)
{
 SaveMyDSK(#FlagDeb_Dec, #prStrDSK_Dec + cnt_StrDsk_RunDebug);
 SaveMyDSK(#prNameFileDebug_Dec, #prStrDSK_Dec + cnt_StrDsk_NameFileDebug);
}
#end

#Declare DecReadFlagRunTimeDebFromDSK(prStrDSK_Dec, FlagRunTime_Dec)
{var datechanged : boolean;

 if (not ReadMyDSK(#FlagRunTime_Dec, #prStrDSK_Dec + cnt_FlagRunTimeDebug, datechanged))
     #FlagRunTime_Dec := word(0);
}
#end

#Declare DecSaveFlagRunTimeFromDSK(prStrDSK_Dec, FlagRunTime_Dec)
{
 SaveMyDSK(#FlagRunTime_Dec, #prStrDSK_Dec + cnt_FlagRunTimeDebug);
}
#end

#Declare DecSetModeLowIR(prNameLowObj_Dec, prObj_Dec, prDebugObj_Dec)
{
 if (GlbFlagDeb) #prObj_Dec.SetModeDebug(GlbNameObj+'_'+#prNameLowObj_Dec, #prDebugObj_Dec)
}
#end

#Declare WriteInFileDebug(prStr_Dec, prNameFunc_Dec)
{var IndexWnd_Out : Integer;
 var varTypeWnd : word;
 var varNameWnd, varNameObj : string;

// Message(''#3'1 WriteInFileDebug  GlbFlagDeb = '+string(GlbFlagDeb)+' GlbNameObj = '+GlbNameObj+' prStr_Dec='+#prStr_Dec, Information);
 GlbCountEnMac := GlbCountEnMac + 1;
 if (GlbFlagDeb)
    {
// Message(''#3'2 WriteInFileDebug  GlbFlagDeb = '+string(GlbFlagDeb)+' GlbNameObj = '+GlbNameObj+' prStr_Dec='+#prStr_Dec, Information);
     if (not NullVipRef(DebugObj))
        {
// Message(''#3'3 WriteInFileDebug  GlbFlagDeb = '+string(GlbFlagDeb)+' GlbNameObj = '+GlbNameObj+' prStr_Dec='+#prStr_Dec, Information);
         if (DebugObj.GetFlagRunDebug() <> word(0))
            {
             if (not DebugObj.ObjLoadIn_DebugObj(GlbNameObj)) DebugObj.Insert_TabObj(0, GlbNameObj, 1);
             if (not DebugObj.FuncLoadIn_DebugObj(0, #prNameFunc_Dec, GlbNameObj))
                 DebugObj.Insert_TabFunc(0, #prNameFunc_Dec, GlbNameObj, DebugObj.GetFlagPick_Obj(0, GlbNameObj));
             DebugObj.OutputMess_Debug(0, #prNameFunc_Dec, GlbNameObj, #prStr_Dec);
	     if (GlbCountEnMac <= 1)
		{
                 if (DebugObj.GetFlagWrScreen())
                     if (DebugObj.GetFlagPick_AllWnd(varTypeWnd, varNameWnd, IndexWnd_Out, varNameObj))
                         if (DebugObj.GetFlagPick_Func(0, #prNameFunc_Dec, GlbNameObj))
                             WrkRunWindow_Debug(varTypeWnd, varNameWnd, #prStr_Dec);

 		}
//             if (DebugObj.GetFlagCommand())
//                {
//   	           DebugObj.SetFlagCommand(false);
//                 RunCommand();
//                }
             if (DebugObj.GetFlagExitProc())
		{
                 DebugObj.SetFlagExitProc(False);
                 if (Message('Вы хотите выйти из процедуры(функции)?', YesNo) = cmYes)
                     if (Message('Правда хотите?', YesNo) = cmYes)
                         if (Message('А репа не треснет?', YesNo) = cmNo)
                             Exit;
		}
            }
	 else GlbFlagDeb := false;
        }
     else
	{
         Message('Error!!! В интерфейс '+string(GlbNameObj)+' не загружен объект отладки!');
	 GlbFlagDeb := false;
	}
    }
 GlbCountEnMac := GlbCountEnMac -1;
// Message(''#3'900000  WriteInFileDebug  GlbFlagDeb = '+string(GlbFlagDeb)+' GlbNameObj = '+GlbNameObj, Information);
}
#end

Procedure WriteInFileDebug_Proc(prStr : string; prNameFunc : string);
{
 #WriteInFileDebug(prStr, prNameFunc)
}

Procedure RunWindowDebug;
{var IndexWnd_Out : Integer;
 var varTypeWnd : word;
 var varNameWnd, varNameObj : string;

#ifdef DEBUG_MODE
 if (GlbFlagDeb)
    {
     GlbCountEnMac := GlbCountEnMac + 1;
     if (GlbCountEnMac <= 1)
        {
         if (DebugObj.GetFlagPick_AllWnd(varTypeWnd, varNameWnd, IndexWnd_Out, varNameObj))
	    {
             WrkRunWindow_Debug(varTypeWnd, varNameWnd, '');
	    }
        }
//     if (DebugObj.GetFlagCommand())
//        {
//         DebugObj.SetFlagCommand(false);
//         RunCommand();
//        }
     GlbCountEnMac := GlbCountEnMac -1;
    }
#endif
}

Function GetStrDsk_Deb : string;
{
 GetStrDsk_Deb := GlbStrDSK_Deb;
} // procedure SetStrDsk_Deb

Procedure SetStrDsk_Deb(prStrDSK_Deb : string);
{
 GlbStrDSK_Deb := prStrDSK_Deb;
} // procedure SetStrDsk_Deb

Function GetNameObj : string;
{
 GetNameObj := GlbNameObj;
} // function GetNameObj

Procedure SetNameObj(prNameObj : string);
{
 GlbNameObj := prNameObj;
} // function GetNameObj

Function LoadDebugObj(prDebugObj : oDebug) : boolean;
{
LoadDebugObj := true;
#ifdef DEBUG_MODE
 DebugObj := prDebugObj;
#endif
} // function LoadDebugObj

Function GetDebugObj : oDebug;
{
 GetDebugObj := DebugObj;
} // function GetDebugObj

Function GetModeDebug : boolean;
{
 GetModeDebug := GlbFlagDeb;
} // function GetModeDebug

Function SetModeDebug(prFlagDebug : boolean) : Boolean;
{
 SetModeDebug := true;
#ifdef DEBUG_MODE
 GlbFlagDeb := prFlagDebug;
 if (prFlagDebug)
    {
     if (NullVipRef(DebugObj))
        {
         Message('Системная ошибка !!! Не загружен интерфейс <' + 'DebugObj' + '>', Error);
         SetModeDebug := false;
        }
    }
#else
 GlbFlagDeb := false;
#endif
} // function SetModeDebug

Procedure SetStartVarDebug(prStrDSK_Deb : string; prNameObj : string);
{
 SetStrDsk_Deb(prStrDSK_Deb);
 SetNameObj(prNameObj);
} // procedure SetStartVarDebug

Function DefCorrectDebugMode(prNameFileCode : string) : boolean;
{
 DefCorrectDebugMode := false;
 if (GlbStrDSK_Deb = '')
    {
     Message(''#3'Ошибка!!! Не определено имя DSK переменной   GlbStrDSK_Deb = '+GlbStrDSK_Deb+' GlbNameObj = '+GlbNameObj+' NullVipRef(DebugObj) = '+string(NullVipRef(DebugObj))+', файл '+prNameFileCode,Information);
     Exit;
    }
 if (GlbNameObj    = '')
    {
     Message(''#3'Ошибка!!! Не определено имя объекта GlbStrDSK_Deb = '+GlbStrDSK_Deb+' GlbNameObj = '+GlbNameObj+' NullVipRef(DebugObj) = '+string(NullVipRef(DebugObj))+',  файл '+prNameFileCode,Information);
     Exit;
    }
 if (NullVipRef(DebugObj))
    {
     Message(''#3'Ошибка!!! Передана невалидная ссылка на объект DebugObj GlbStrDSK_Deb = '+GlbStrDSK_Deb+' GlbNameObj = '+GlbNameObj+' NullVipRef(DebugObj) = '+string(NullVipRef(DebugObj))+',   файл '+prNameFileCode,Information);
     Exit;
    }
 DefCorrectDebugMode := true;
}

#Declare DecSetDebugInObj(VarObj_Dec, NameObj_Dec, prDebugObj_Dec)
{var varFlagDeb : boolean;

 varFlagDeb := false;
 #VarObj_Dec.SetStrDsk_Deb(GetStrDsk_Deb());
 #VarObj_Dec.SetNameObj(GetNameObj()+'_'+#NameObj_Dec);
  if (Not NullVipRef(#prDebugObj_Dec))
     {
      if (DefCorrectDebugMode(#NameObj_Dec))
         {
          #VarObj_Dec.LoadDebugObj(#prDebugObj_Dec);
          if (#prDebugObj_Dec.GetFlagRunDebug() <> word(0)) varFlagDeb := true;
	 }
     }
 #VarObj_Dec.SetModeDebug(varFlagDeb);
}
#End

Function RunWindow_Debug(prTypeWnd : word; prNameWnd : string; prDebStr : string) : Boolean;
{
 RunWindow_Debug := WrkRunWindow_Debug(prTypeWnd, prNameWnd, prDebStr);
}

Function StartDebug_InitInter(prStrDSK_Deb : string; prNameObj : string; var prDebugObj : oDebug) : boolean;
{var varFlagRunDebug  : word;
 var varNameFileDebug : string;
 var bRzlt : boolean;

 bRzlt := true;
 GlbFlag_LoadDebugObj := false;
 varFlagRunDebug := 0;
#ifdef DEBUG_MODE
 SetStartVarDebug(prStrDSK_Deb, prNameObj);
 #DecReadGenVarDebFromDSK(prStrDSK_Deb, varFlagRunDebug, varNameFileDebug)
 if (varFlagRunDebug <> 0)
    {
     if (NullVipRef(DebugObj))
        {
	 GlbFlag_LoadDebugObj := true;
         if (Not GetVipRef(DebugObj, 'DebugObject'))
	    {
             Message('Ошибка!!! Не загружен объект '+'DebugObject'+' интерфейс '+prNameObj);
	     GlbFlag_LoadDebugObj := false;
	     Exit;
	    }
	}
     if (DefCorrectDebugMode(prNameObj))
	{
         if (DebugObj.InitShortStatusVar())
            {
             if (varNameFileDebug = '') varNameFileDebug := 'FD_' + prStrDSK_Deb + '.txt';
             DebugObj.SetStartData(prStrDSK_Deb, varFlagRunDebug, varNameFileDebug);
             DebugObj.RunWndNstDebug(prStrDSK_Deb);
             varFlagRunDebug := DebugObj.GetFlagRunDebug();
            }
	}
     else varFlagRunDebug := 0;
    }
 prDebugObj := DebugObj;
#endif
 bRzlt := (varFlagRunDebug <> 0)
 SetModeDebug(bRzlt);
 StartDebug_InitInter := bRzlt;
} // function StartDebug_InitInter

Function StartDebug_HotKey(var prDebugObj : oDebug) : boolean;
{var varFlagRunDebug  : word;
 var varNameFileDebug : string;
 var varFlagCorrectMode : boolean;
 var bRzlt : boolean;

// Message('1 StartDebug_HotKey  NullVipRef(DebugObj)='+NullVipRef(DebugObj));
 bRzlt := false;
 GlbFlag_LoadDebugObj := false;
 varFlagCorrectMode   := true;
 varFlagRunDebug      := 0;
#ifdef DEBUG_MODE
// Message('2 StartDebug_HotKey  NullVipRef(DebugObj)='+NullVipRef(DebugObj));
 if (NullVipRef(DebugObj))
    {
     GlbFlag_LoadDebugObj := true;
     if (Not GetVipRef(DebugObj, 'DebugObject'))
        {
         GlbFlag_LoadDebugObj := false;
         Message('Ошибка!!! Не загружен объект '+'DebugObject'+' интерфейс '+GlbNameObj);
	 Exit;
	}
     varFlagCorrectMode := DefCorrectDebugMode(GetNameObj());
// Message('3 StartDebug_HotKey  NullVipRef(DebugObj)='+NullVipRef(DebugObj)+' varFlagCorrectMode='+varFlagCorrectMode);
     if (varFlagCorrectMode)
	{
         if (DebugObj.InitShortStatusVar())
            {
             #DecReadGenVarDebFromDSK(GlbStrDSK_Deb, varFlagRunDebug, varNameFileDebug)
             if (varNameFileDebug = '') varNameFileDebug := 'FD_' + GlbStrDSK_Deb + '.txt';
             DebugObj.SetStartData(GlbStrDSK_Deb, varFlagRunDebug, varNameFileDebug);
// Message('4 StartDebug_HotKey  NullVipRef(DebugObj)='+NullVipRef(DebugObj)+' varFlagCorrectMode='+varFlagCorrectMode);
            }
	}
    }
// Message('5 StartDebug_HotKey  NullVipRef(DebugObj)='+NullVipRef(DebugObj)+' varFlagCorrectMode='+varFlagCorrectMode);
 if (varFlagCorrectMode)
    {
// Message('7 StartDebug_HotKey  NullVipRef(DebugObj)='+NullVipRef(DebugObj)+' varFlagCorrectMode='+varFlagCorrectMode);
     if (DefCorrectDebugMode(GetNameObj()))
	{
// Message('8 StartDebug_HotKey  NullVipRef(DebugObj)='+NullVipRef(DebugObj)+' varFlagCorrectMode='+varFlagCorrectMode);
         DebugObj.RunWndNstDebug(GlbStrDSK_Deb);
         varFlagRunDebug := DebugObj.GetFlagRunDebug();
	}
    }
 prDebugObj := DebugObj;
#endif
 bRzlt := (varFlagRunDebug <> 0)
 SetModeDebug(bRzlt);
 StartDebug_HotKey := bRzlt;
} // function StartDebug_HotKey

Function StartDebug_Ext(prStrDSK_Deb : string; prNameObj : string; var prDebugObj : oDebug) : boolean;
{
#ifdef DEBUG_MODE
 SetStartVarDebug(prStrDSK_Deb, prNameObj);
 StartDebug_Ext := StartDebug_HotKey(prDebugObj);
#else
 StartDebug_Ext := true;
#endif
}

Function DoneDebug : boolean;
{var bRzlt : boolean;

 bRzlt := true;
// message('1000000 Debug.Mac    DoneDebug');
 if (GlbFlag_LoadDebugObj)
    {
     if (Not NullVipRef(DebugObj))
        {
// message('2000000 Debug.Mac    DoneDebug');
         if (GlbStrDSK_Deb <> '') #DecSaveGenVarFromDSK(GlbStrDSK_Deb, DebugObj.GetFlagRunDebug(), DebugObj.GetNameFileDebug())
// message('3000000 Debug.Mac    DoneDebug');
         bRzlt := bRzlt and DebugObj.SaveDataToDSK();
         bRzlt := bRzlt and DebugObj.DoneInter();
         if (Not NullVipRef(DebugObj)) FreeVipInterface(DebugObj);
        }
    }
 DoneDebug := bRzlt;
// message('5000000 Debug.Mac    DoneDebug = '+DoneDebug);
} // function DoneDebug

Function NP_Deb(prPRMC : word; prRefMCUsl : comp) : string;
{
 NP_Deb := '';
 if (GlbFlagDeb)
     if (Not NullVipRef(DebugObj)) NP_Deb := DebugObj.GetNameMCUsl(prPRMC, prRefMCUsl);
}

Function MC_Deb(prRefMC : comp) : string;
{
 MC_Deb := '';
 if (GlbFlagDeb)
     if (Not NullVipRef(DebugObj)) MC_Deb := DebugObj.GetNameMCUsl(toMC, prRefMC);
}


// эта ф. нигде не вызывается, определена чтобы убрать предупреждения компиляции
Procedure ListFunc_Debug_Mac;
{
 CopyVarDebugToBuff();
 CopyBuffToVarDebug();

 var varStr, varNameFunc : string;
 varStr := ''; varNameFunc := '';
 WriteInFileDebug_Proc(varStr, varNameFunc);

 RunWindowDebug();
 GetStrDsk_Deb();

 var varStrDSK_Deb : string;
 varStrDSK_Deb := '';
 SetStrDsk_Deb(varStrDSK_Deb);

 GetNameObj();

 var varNameObj : string;
 varNameObj := '';
 SetNameObj(varNameObj);

 var varDebugObj : oDebug;
 LoadDebugObj(varDebugObj);

 GetDebugObj();
 GetModeDebug();

 var varFlagDebug : boolean;
 varFlagDebug := true;
 SetModeDebug(varFlagDebug);

! var varStrDSK_Deb, varNameObj : string;
 varStrDSK_Deb := ''; varNameObj := '';
 SetStartVarDebug(varStrDSK_Deb, varNameObj);

 var varNameFileCode : string;
 varNameFileCode := '';
 DefCorrectDebugMode(varNameFileCode);

 var varTypeWnd : word;
 var varNameWnd, varDebStr : string;
 varTypeWnd := 0;
 varNameWnd := ''; varDebStr := '';
 RunWindow_Debug(varTypeWnd, varNameWnd, varDebStr);

! var varStrDSK_Deb, varNameObj : string;
! var varDebugObj : oDebug;
 StartDebug_InitInter(varStrDSK_Deb, varNameObj, varDebugObj);

! var varDebugObj : oDebug;
 StartDebug_HotKey(varDebugObj);

! var varStrDSK_Deb, varNameObj : string;
! var varDebugObj : oDebug;
 varStrDSK_Deb := ''; varNameObj := '';
 StartDebug_Ext(varStrDSK_Deb, varNameObj, varDebugObj);

 DoneDebug();

 var varPRMC : word;
 var varRefMCUsl : comp;
 varPRMC := 0;
 varRefMCUsl := 0;
 NP_Deb(varPRMC, varRefMCUsl);

 var varRefMC : comp;
 varRefMC := 0;
 MC_Deb(varRefMC);
}

#end
