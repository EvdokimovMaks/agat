/*
╔═════════════════════════════════════════════════════════════╗
║             (c) 2001  Корпорация ГАЛАКТИКА                  ║
║ Проект:     Галактика                                       ║
║ Система:    Контроллинг                                     ║
║ Версия:     7.1                                             ║
║ Назначение: Интерфейс настройки выгрузки проводок в         ║
║             бюджеты                                         ║
║ Автор:      Медведь Наталья Леонидовна (Medved)             ║
║ Параметры:  Нет                                             ║
╚═════════════════════════════════════════════════════════════╝
*/
#include TuneShet.vin
#INCLUDE getkau.vih

INTERFACE iTuneBillShab 'Настройка выгрузки проводок в бюджеты'
  EscClose, Cyan;
show at(,,,25);

#include GetKAU.var

Create View vTuneBillObor
 var
   cTemp, myPlansNo, ccSetBill: comp;
   i                          : integer;
   NumField                   : word;
  As Select
   if (SpBill.wKau2[1] = 0, 'Да', 'Нет')(FieldName = WklSeb),

   if (GetAnyKau(cgAkSimple, SpBill.wKau1[1], SpBill.cKau1[1]), GivenAnName(cgAnName),'') (FieldName = TblKau1),
    if (GetAnyKau(cgAkSimple, SpBill.wKau1[2], SpBill.cKau1[2]), GivenAnName(cgAnName),'') (FieldName = TblKau2),
     if (GetAnyKau(cgAkSimple, SpBill.wKau1[3], SpBill.cKau1[3]), GivenAnName(cgAnName),'') (FieldName = TblKau3),
      if (GetAnyKau(cgAkSimple, SpBill.wKau1[4], SpBill.cKau1[4]), GivenAnName(cgAnName),'') (FieldName = TblKau4),
       if (GetAnyKau(cgAkSimple, SpBill.wKau1[5], SpBill.cKau1[5]), GivenAnName(cgAnName),'') (FieldName = TblKau5),
        if (GetAnyKau(cgAkSimple, SpBill.wKau1[6], SpBill.cKau1[6]), GivenAnName(cgAnName),'') (FieldName = TblKau6),
         if (GetAnyKau(cgAkSimple, SpBill.wKau1[7], SpBill.cKau1[7]), GivenAnName(cgAnName),'') (FieldName = TblKau7),
          if (GetAnyKau(cgAkSimple, SpBill.wKau1[8], SpBill.cKau1[8]), GivenAnName(cgAnName),'') (FieldName = TblKau8),
           if (GetAnyKau(cgAkSimple, SpBill.wKau1[9], SpBill.cKau1[9]), GivenAnName(cgAnName),'') (FieldName = TblKau9),
            if (GetAnyKau(cgAkSimple, SpBill.wKau1[10], SpBill.cKau1[10]),GivenAnName(cgAnName),'') (FieldName = TblKau10),
   BillObor.*
   From
      BillObor
     ,FpPeriod
     ,PlansSch
     ,SetBill
     ,SetBill SetBillD
     ,SpBill
     ,ShabSmet
     ,StShab
     ,KaElem
     ,KatPodr
     ,Sloj
     ,SpSloj
   where
     ((
       word(1)              == BillObor.wPrzBill

   and BillObor.cPeriod     == fpPeriod.nRec

   and BillObor.cPlansSch   == PlansSch.nRec

       //3-я панель
   and ccSetBill            == SetBill.nRec

   and BillObor.nRec        == SpBill.cBillObor
   and ccSetBill            == SpBill.cSetBill

   and SpBill.cKau2[1]      == ShabSmet.nRec

   and SpBill.cKau2[2]      == StShab.nRec

   and SpBill.cKau2[3]      == KaElem.nRec

   and SpBill.cPodr         == KatPodr.nRec

   and SpBill.cSlojTbl1     == Sloj.nRec

   and Sloj.nRec            == SpSloj.cMain
     ))
;

var iTuneSh: oTuneShet;
    sTitleShab  , sTitleStShab, sTitleElZ  : string;
    sTitleWklSeb, sTitlePodr  , sTitleSloj : string;
    sTitleAn,     sTitleVar   , sTitleZn   : string;
//---------------------------------------------------------------------------
function MyGetKauName(wKau : word) : string;
{
  if (wKau = 0)
   MyGetKauName := ''
  else
   if(GetFirst FastFirstRow KatKau where ((wKau == KatKau.KodGroup)) = tsOk)
    MyGetKauName := LoCase(KatKau.Name)
   else
    MyGetKauName := '? ' + string(wKau);
}
//---------------------------------------------------------------------------
Procedure pVisiblePodr;
{
 if (SpBill.wPodrRes = word(5))
  SetFieldState(#KatPodr.Name, sfVisible)
 else
  ClearFieldState(#KatPodr.Name, sfVisible)
}

procedure pDisableOrEnableKauFields;
{
 #declare ShowHideKauFields(Num)
  if (SpBill.wKau1[#Num] = 0)
   {
    ClearFieldState(#SpBill.wCodeTbl1[#Num], sfVisible);
    ClearFieldState(#TblKau#Num, sfVisible);
   }
  else
   {
    SetFieldState(#SpBill.wCodeTbl1[#Num], sfVisible);
    if (SpBill.wCodeTbl1[#Num] = 5)
     SetFieldState(#TblKau#Num, sfVisible)
    else
     ClearFieldState(#TblKau#Num, sfVisible);
   }
 #end
 #ShowHideKauFields(1)
 #ShowHideKauFields(2)
 #ShowHideKauFields(3)
 #ShowHideKauFields(4)
 #ShowHideKauFields(5)
 #ShowHideKauFields(6)
 #ShowHideKauFields(7)
 #ShowHideKauFields(8)
 #ShowHideKauFields(9)
 #ShowHideKauFields(10)
 #undef ShowHideKauFields
}

Procedure pSetSpBill(cRecTune: comp);
{
 set ccSetBill := cRecTune;
 ReReadRecord(#SpBill);
}

procedure pPickKau(NumFld: Word);
{
 #declare PickTblKau(Num)
  if (iGetKau.GetCodeKau(cgiPick, SpBill.wKau1[#Num], SpBill.cKau1[#Num])<> 0)
   set SpBill.cKau1[#Num] := SpBill.cKau1[#Num];
 #end
 #PickTblKau(NumFld);
 #undef PickTblKau
}
//---------------------------------------------------------------------------
Window winEditTune 'Редактирование настройки выгрузки проводок' EscClose;
show at (,,,25);

 Browse brEditTuneBill (,,sci1378Esc);
 show at (,,,9)
 Table BillObor;
  Fields
  BillObor.Name 'Содержание'('Содержание',,sci178Esc)   :[30];
  PlansSch.Name 'План счетов'('План счетов',,)          :[15], Protect, PickButton;
  fpPeriod.Name 'Период','действия'('Период действия',,):[10], Protect, PickButton;
 end;//browse

 Embedded embSetBill interface iTuneSh.winTuneShet
  show at (,10,,14)
 end;

 Screen scEditSpBill ('',,sci138Esc) ;
  show at (,15,,) ;
  Table SpBill;
 Fields
  sTitleShab: skip, {Font = {bold = true}};
  ShabSmet.Name ('Шаблон бюджета',,): PickButton, Protect;
  sTitleStShab: skip, {Font = {bold = true}};
  StShab.Name ('Статья шаблон бюджета',,): PickButton, Protect;
  sTitleElZ: skip, {Font = {bold = true}};
  KaElem.Name ('Элемент затрат',,): PickButton, Protect;
  sTitleWklSeb: skip, {Font = {bold = true}};
  WklSeb      ('Включение в себестоимость, выбирается с помощью F3',,):
               Protect, PickButton;
  sTitlePodr: skip, {Font = {bold = true}};
  SpBill.wPodrRes ('Подразделение бюджета',,):
    [List 1 'Дебет',
          2 'Кредит',
          3 'Аналитика дебетовая',
          4 'Аналитика кредитовая',
          5 'Значение'], protect;
  KatPodr.Name ('Подразделение бюджета',,): PickButton, Protect;
  sTitleSloj: skip, {Font = {bold = true}};
  Sloj.Name ('Группа аналитик',): PickButton, Protect;
  sTitleAn  : skip, {Font = {bold = true}};
  sTitleVar : skip, {Font = {bold = true}};
  sTitleZn  : skip, {Font = {bold = true}};

  #declare NameTabField(Num)
   MyGetKauName(SpBill.wKau1[#Num]): Skip;

   SpBill.wCodeTbl1[#Num] ('Настройка аналитики',,):
    [List 1 'Не формировать',
          3 'Аналитика дебетовая',
          4 'Аналитика кредитовая',
          5 'Значение'], protect;

   TblKau#Num   ('КАУ #Num-го уровня',): Protect, PickButton;
  #end
  #NameTabField(1)
  #NameTabField(2)
  #NameTabField(3)
  #NameTabField(4)
  #NameTabField(5)
  #NameTabField(6)
  #NameTabField(7)
  #NameTabField(8)
  #NameTabField(9)
  #NameTabField(10)
  #undef NameTabField
 <<
  .@@@@@@@@@@@@@@@@@@@@@@@@.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
  .@@@@@@@@@@@@@@@@@@@@@@@@.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
  .@@@@@@@@@@@@@@@@@@@@@@@@.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
  .@@@@@@@@@@@@@@@@@@@@@@@@.@@@@
  .@@@@@@@@@@@@@@@@@@@@@@@@.@@@@@@@@@@@@@@@@@.@@@@@@@@@@@@@@@@@@@@@@@@@@@@
  .@@@@@@@@@@@@@@@@@@@@@@@@.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

  .@@@@@@@@@@@@@@@@@@@@@@@@ .@@@@@@@@@@@@@@@@@ .@@@@@@@@@@@@@@@@@@@@@@@@@@
  .@@@@@@@@@@@@@@@@@@@@@@@@ .@@@@@@@@@@@@@@@@@ .@@@@@@@@@@@@@@@@@@@@@@@@@@
  .@@@@@@@@@@@@@@@@@@@@@@@@ .@@@@@@@@@@@@@@@@@ .@@@@@@@@@@@@@@@@@@@@@@@@@@
  .@@@@@@@@@@@@@@@@@@@@@@@@ .@@@@@@@@@@@@@@@@@ .@@@@@@@@@@@@@@@@@@@@@@@@@@
  .@@@@@@@@@@@@@@@@@@@@@@@@ .@@@@@@@@@@@@@@@@@ .@@@@@@@@@@@@@@@@@@@@@@@@@@
  .@@@@@@@@@@@@@@@@@@@@@@@@ .@@@@@@@@@@@@@@@@@ .@@@@@@@@@@@@@@@@@@@@@@@@@@
  .@@@@@@@@@@@@@@@@@@@@@@@@ .@@@@@@@@@@@@@@@@@ .@@@@@@@@@@@@@@@@@@@@@@@@@@
  .@@@@@@@@@@@@@@@@@@@@@@@@ .@@@@@@@@@@@@@@@@@ .@@@@@@@@@@@@@@@@@@@@@@@@@@
  .@@@@@@@@@@@@@@@@@@@@@@@@ .@@@@@@@@@@@@@@@@@ .@@@@@@@@@@@@@@@@@@@@@@@@@@
  .@@@@@@@@@@@@@@@@@@@@@@@@ .@@@@@@@@@@@@@@@@@ .@@@@@@@@@@@@@@@@@@@@@@@@@@
  .@@@@@@@@@@@@@@@@@@@@@@@@ .@@@@@@@@@@@@@@@@@ .@@@@@@@@@@@@@@@@@@@@@@@@@@
 >>
 end ; // Screen scSpBill
HandleEvent // Win
cmInit:
 iTuneSh.pSetParam(word(1));

cmDone:
 {
  if (isModified)
   if (not UpDateTable) Abort;

  iTuneSh.pSetParam(word(0));
 }
end ; // HandleEvent
end ; // Window
//===========================================================================
TableEvent table BillObor;
cmSetDefault:
 {
  ClearBuffer(#BillObor);
  BillObor.cPlansSch := myPlansNo;
  iTuneSh.pSetRec(comp(0), word(7));
 }

cmCheckRecord:
 if (BillObor.cPlansSch = comp(0))
  {
   message('Необходимо обязательно задать план счетов.', Warning);
   SelectField(#PlansSch.Name);
   PutCommand(cmPick);
   abort; exit;
  }

cmInsertRecord :
  insert current BillObor;

cmUpdateRecord :
  Update current BillObor;

cmDeleteRecord:
 {
  if (message('Удалить настройку выгрузки проводок?',YesNo + mfSwapButtons)=Yes)
   {
    delete noVisual SetBillD where (( word(7)      == SetBillD.fCase and
                                     BillObor.nRec == SetBillD.pRec));

    delete current BillObor;
   }
  else
    abort;
 }

cmPositionChanged:
 {
  iTuneSh.pSetRec(BillObor.nRec, word(7));
  pVisiblePodr;
  pDisableOrEnableKauFields;
 }
end;
//===========================================================================
TableEvent table SpBill;
cmSetDefault:
 {
  ClearBuffer(#SpBill);
  if (ccSetBill <> comp(0))
   if (GetFirst SpBill <> tsOK)
    {
     SpBill.cBillObor := BillObor.nRec;
     SpBill.cSetBill  := ccSetBill;
     insert current SpBill;
    }
  pVisiblePodr;
  pDisableOrEnableKauFields;
 }

cmCheckField:
 case CurField of
  #SpBill.wCodeTbl1[1], #SpBill.wCodeTbl1[2], #SpBill.wCodeTbl1[3],
  #SpBill.wCodeTbl1[4], #SpBill.wCodeTbl1[5], #SpBill.wCodeTbl1[6],
  #SpBill.wCodeTbl1[7], #SpBill.wCodeTbl1[8], #SpBill.wCodeTbl1[9],
  #SpBill.wCodeTbl1[10]:
   pDisableOrEnableKauFields;
 end; // case

cmCheckRecord:
  {}

cmUpdateRecord :
 Update current SpBill;

cmDeleteRecord:
 {
  if (message('Удалить текущую запись?',YesNo + mfSwapButtons)=Yes)
   {
    delete current SpBill;
   }
  else
   abort;
 }

cmPositionChanged:
 {
  pVisiblePodr;
  pDisableOrEnableKauFields;
 }
end;
//===========================================================================
Procedure pEditTune(cRecTune: comp);
{
 RunWindow(winEditTune);
}
//===========================================================================
Browse brTuneBillObor (,,sci1478Esc);
show at (,,,9)
Table BillObor;
 Fields
 BillObor.Name 'Содержание'('Содержание',,)            :[30], protect;
 PlansSch.Name 'План счетов'('План счетов',,)          :[15], Protect;
 fpPeriod.Name 'Период','действия'('Период действия',,):[10], Protect;
end;//browse

Embedded brSetBill interface iTuneSh
show at (,10,,)
end;
//---------------------------------------------------------------------------
HandleEvent
 cmInit:
  {
   myPlansNo  := coGetTune('Fin.User.cPlansSch');
   if (myPlansNo = 0)
    myPlansNo := coGetTune('Konsolid.cPlansSch');
   if (myPlansNo = 0)
    {
     Message('Установите текущий план счетов в настройке системы!',CancelButton);
     exit;
    }

   if ( not LoadVipRef (iTuneSh, 'iTuneShet') )
    {
     Message('Системная ошибка! Не загружен интерфейс "iTuneShet".', CancelButton);
     exit;
    }

   BindEvent(pEditTune, iTuneSh.pEditShet);
   BindEvent(pSetSpBill, iTuneSh.pRecTune);
   iTuneSh.pSetParam(word(0));
   iTuneSh.pSetParBalans(word(1));

   sTitleShab   := 'Шаблон бюджета';
   sTitleStShab := 'Статья шаблона бюджета';
   sTitleElZ    := 'Элемент затрат';
   sTitleWklSeb := 'Включение в себестоимость';
   sTitlePodr   := 'Подразделение бюджета';
   sTitleSloj   := 'Группа аналитик';
   sTitleAn     := 'Аналитика';
   sTitleVar    := 'Вариант формирования';
   sTitleZn     := 'Значение';
   pVisiblePodr;
   pDisableOrEnableKauFields;
  }

 cmInsert:
  PutCommand(cmEdit);

 cmEdit:
  RunWindow(winEditTune);

 cmSetCurTable:
  case Target of
   #SpBill:
     if (GetFirst SetBill <> tsOk)
      {
       Message('  Переход невозможен т. к.'+Chr(13)+
               '  текущий документ не заполнен.')
       abort;
      }
  end; // case

 cmPick:
  case CurField of
   #PlansSch.Name:
    {//???
     cTemp := BillObor.cPlansSch;
     if (RunInterface('GetPlansSch', cTemp) <> cmCancel)
      {
       set BillObor.cPlansSch := cTemp;
       if (updatetable)
        iTuneSh.pSetRec(BillObor.nRec, word(7));
      }
    }

   #fpPeriod.Name:
    {
     cTemp := BillObor.cPeriod;
     if (RunInterface(GetPeriod, word(cgiPick),
                      coGetTune('BaseTPP'), comp(0),cTemp,word(0)) <> cmCancel)
      set BillObor.cPeriod := cTemp;
    }

   #ShabSmet.Name:
    {
     cTemp := SpBill.cKau2[1];
     if (RunInterface(iShablonBudg, word(1), cTemp) <> cmCancel)
      {
       set SpBill.cKau2[1]  := cTemp;
       set SpBill.cSlojTbl1 := ShabSmet.cSloj;
      }
    }

   #StShab.Name:
    {
     cTemp := SpBill.cKau2[2];
     if (RunInterface(GetStGroup, word(2), SpBill.cKau2[1], cTemp) <> cmCancel)
      {
       set SpBill.cKau2[2]  := cTemp;
      }
    }

   #KaElem.Name:
    {
     cTemp := SpBill.cKau2[3];
     if (RunInterface(iKaElem, word(1), cTemp) <> cmCancel)
      set SpBill.cKau2[3] := cTemp;
    }

   #WklSeb: //включение в себестоимость
    if (SpBill.wKau2[1] = 0)
     set SpBill.wKau2[1] := 1
    else
     set SpBill.wKau2[1] := 0;

   #KatPodr.Name:
    {
     cTemp := SpBill.cPodr;
     if (RunInterface(GetAnyPodr, cTemp, 0) <> cmCancel)
      set SpBill.cPodr := cTemp;
    }

   #Sloj.Name:
    {//группа аналитик
     cTemp := SpBill.cSlojTbl1;
     if (RunInterface(KlGrKAU, word(1), cgSloj_RazdelPP, cTemp) <> cmCancel)
      {
       set SpBill.cSlojTbl1 := cTemp;
       for(i := 1; i <= 10; i := i + 1)
        {
         set SpBill.wKau1[i]     := word(0);
         set SpBill.cKau1[i]     := comp(0);
         set SpBill.wCodeTbl1[i] := 0;
        }
       i := 0;
       _loop SpSloj
        {
         inc(i);
         set SpBill.wKau1[i]     := SpSloj.KodGrKau;
        }
      }
     pDisableOrEnableKauFields;
    }

   #TblKau1, #TblKau2, #TblKau3, #TblKau4, #TblKau5,
   #TblKau6, #TblKau7, #TblKau8, #TblKau9, #TblKau10:
    {
     case Curfield of
      #TblKau1 : NumField := 1;
      #TblKau2 : NumField := 2;
      #TblKau3 : NumField := 3;
      #TblKau4 : NumField := 4;
      #TblKau5 : NumField := 5;
      #TblKau6 : NumField := 6;
      #TblKau7 : NumField := 7;
      #TblKau8 : NumField := 8;
      #TblKau9 : NumField := 9;
      #TblKau10: NumField := 10;
     end; // case
     pPickKau(NumField);
    }
  end; // case

 cmDelOnProtect:
  if (CurWindow = wnMainWindow) stop;

 cmDone:
  FreeVipInterface(iTuneSh);
End;
End.