/*************************************************************************************************\
* Наименование: Объектные интерфейсы для работы с IQuery в JS-библиотеке "Функции для работы с    *
*               прямым SQL": DSQL_IQueryParamSetter, DSQL_IJSQuery, DSQL_IJSQueryManager          *
* Контур/Модуль:                                                                                  *
* Примечание:                                                                                     *
*                                                                                                 *
* Вид работы  |Номер         |Дата    |Исполнитель              |Проект                           *
* ----------------------------------------------------------------------------------------------- *
* Разработка  |#001          |18/11/19|Сопов Д.Е.               |Галактика Сибирь                 *
\*************************************************************************************************/
#ifndef __JSQuery__
#define __JSQuery__

#include Query.vih

#doc
Объектный интерфейс "Установщик параметра sql-запроса"
#end
objinterface DSQL_IQueryParamSetter;
  #doc
  Сохраняет значение, которое будет передаваться в параметр запроса
  #end
  procedure SetParamValue(value: variant);

  #doc
  Передает сохраненное значение в параметр с именем paramName запроса query
  #end
  procedure SetQueryParamValue(query: IQuery; paramName: string);
end;

vipinterface DSQL_QueryStringParamSetter implements DSQL_IQueryParamSetter Licensed(Free);
vipinterface DSQL_QueryCompParamSetter   implements DSQL_IQueryParamSetter Licensed(Free);
vipinterface DSQL_QueryWordParamSetter   implements DSQL_IQueryParamSetter Licensed(Free);
vipinterface DSQL_QueryDoubleParamSetter implements DSQL_IQueryParamSetter Licensed(Free);
vipinterface DSQL_QueryDateParamSetter   implements DSQL_IQueryParamSetter Licensed(Free);
vipinterface DSQL_QueryBoolParamSetter   implements DSQL_IQueryParamSetter Licensed(Free);

#doc
Обертка к IQuery для корректной работы IQuery в JS библиотеке.
Установка параметров запроса в direct sql и в IQuery в частности происходит по ссылке.
Переменная со значением параметра, полученная из JS скрипта уничтожается при завершении выполнения
соответствующего обработчика JS-инструкции и запрос выполняется некорректно.
DSQL_IJSQuery хранит словарь объектов типа DSQL_IQueryParamSetter, каждый из которых содержит переменную,
хранящую значение устанавливаемого параметра. Непосредственно перед выполнением запроса (GetResultSet, Execute)
сеттеры устанавливают параметры запроса. Таким образом предотвращается преждевременная деинициализация переменных
со значениями параметров запроса.
Свойство ResultSet - результат запроса, полученный с помощью метода GetResultSet. При вызове метода GetResultSet
предыдущий результат запроса уничтожается.
#end
objinterface DSQL_IJSQuery;
  function GetResultSet: IResultSet;
  function Execute: integer;
  function setMacro(macro: string; value: variant): DSQL_IJSQuery;
  function isMacroDefined(macro: string): byte;
  function addCriteria(combination: string; criteria: variant): DSQL_IJSQuery;
  function errorCode: integer;
  function rowCount: longInt;
  function SetParam(paramName: string; paramValue: variant): DSQL_IJSQuery;
  property ResultSet: IResultSet read;
end;

vipinterface DSQL_JSQuery implements DSQL_IJSQuery Licensed(Free);
public:
  Constructor Init;
  Constructor Create(sqlStr: variant);
end;

#doc
Менеджер объектов DSQL_IJSQuery.
Создает, организует доступ к объектам по уникальным ключам key
#end
objinterface DSQL_IJSQueryManager;
  #doc
  Создает DSQL_IJSQuery с ключем key и текстом запроса sqlStr. sqlStr - строка/id sql строки/идентификатор текста запроса.
  Возвращает ссылку на объект.
  #end
  function CreateJSQuery(key: variant; sqlStr: variant): DSQL_IJSQuery;

  #doc
  Возвращает DSQL_IJSQuery по ключу key. Если объект не найден - возвращает nullref.
  #end
  function GetJSQuery(key: variant): DSQL_IJSQuery;

  #doc
  Удаляет объект по ключу key. Возвращает True, если объект найден и удален.
  #end
  function RemoveJSQuery(key: variant): boolean;
end;

vipinterface DSQL_JSQueryManager implements DSQL_IJSQueryManager  Licensed(Free);

#end
