//------------------------------------------------------------------------------
//                                                      (c) Корпорация Галактика
// Галактика ERP 9.1 - Общеиспользуемый функционал
// Хранилище параметров интерфейсов
//------------------------------------------------------------------------------

#ifndef _ParamStore_INCLUDED_
#define _ParamStore_INCLUDED_

#component "C_Common"

#declare SerializeParameter(_Value, _Name)
  SerializeParameter(#_Value, #_Name, self)
#end

#declare DeserializeParameter(_Value, _Name)
{
  var _Value: variant = #_Value;
  DeserializeParameter(_Value, #_Name, self);
  #_Value := _Value;
}
#end

#declare SerializeMarker(_Marker, _Name)
  SerializeMarker(#_Marker, #_Name, 'Comp', self)
#end

#declare DeserializeMarker(_Marker, _Name)
  DeserializeMarker(#_Marker, #_Name, self)
#end

vipinterface ParamStore Licensed (free);
static:
  #doc
  Метод для сохранения параметра.</brief>
  Для вызова данного метода существует макрос SerializeParameter(_Value, _Name) с параметром _Ref = self.
  #end
  function SerializeParameter(_Value // #docl Значение параметра. Поддерживаемые типы данных - Integer, Longint, Single, Double, Date, String, Boolean, Byte, Word, Comp.
                   : variant; _Name  // #docl Имя параметра.
                   : string;  _Ref   // #docl Ссылка на интерфейс параметра: self - текущий, NullRef - без привязки к интерфейсу.
                   : ObjRef): boolean; // #docl true - значение записано.

  #doc
  Восстановление параметра.</brief>
  Для вызова данного метода существует макрос DeserializeParameter(_Value, _Name) с параметром _Ref = self.
  #end
  function DeserializeParameter(var _Value // #decl Значение параметра (возвращаемый параметр с типом variant)
                         : variant; _Name  // #decl Имя параметра.
                         : string;  _Ref   // #decl Ссылка на интерфейс параметра: self - текущий, NullRef - без привязки к интерфейсу.
                         : ObjRef): boolean; // #decl true - значение получено.

  #doc
  Сохранения маркера.</brief>
  Для вызова данного метода существует макрос SerializeMarker(_Marker, _Name) с параметром _Ref = self, _Type = 'Comp'.<br>
  Поддерживаемые типы данных в маркере - 'Integer', 'Longint', 'Single', 'Double', 'Date', 'String', 'Boolean', 'Byte', 'Word', 'Comp'.
  #end
  function SerializeMarker(_Marker // #docl Уникальный идентификатор маркера.
                 : TPtr;   _Name   // #docl Имя параметра.
                 ,         _Type   // #docl Тип данных в строковом выражении.
                 : string; _Ref    // #docl Ссылка на интерфейс параметра: self - текущий, NullRef - без привязки к интерфейсу.
                 : ObjRef): boolean; // #docl true - значение записано.

  #doc
  Восстановление маркера.</brief>
  Для вызова данного метода существует макрос DeserializeMarker(_Marker, _Name) с параметром _Ref = self.<br>
  Поддерживаемые типы данных в маркере - 'Integer', 'Longint', 'Single', 'Double', 'Date', 'String', 'Boolean', 'Byte', 'Word', 'Comp'.
  #end
  function DeserializeMarker(_Marker // #docl Уникальный идентификатор маркера.
                   : TPtr;   _Name   // #docl Имя параметра.
                   : string; _Ref    // #docl Ссылка на интерфейс параметра: self - текущий, NullRef - без привязки к интерфейсу.
                   : ObjRef): boolean; // #docl true - значение получено

  #doc
 Удаление параметров и маркеров.
  #end
  function ClearStore(_Name     // #docl Имя параметра. Если не указано, то будут удалены все параметры.
          : string;   _Ref      // #docl Ссылка на интерфейс параметра: self - текущий, NullRef - без привязки к интерфейсу.
          : ObjRef;   _Type     // #docl 0 - параметры и маркеры (по умолчанию), 1- параметры, 2 - маркеры.
          : word = 0; _AllUsers // #docl true - удалить у всех пользователей, false - только у текущего (по умолчанию).
          : boolean = false): boolean;

  #doc
  Удаление устаревших параметров.
  #end
  public procedure ClearUnused(_before // #docl Раньше какой даты/времени удалить параметры/маркеры.
                               : _datetime);

  #doc
  Копирование параметров/маркеров от одного пользователя другому.
  #end
  function CopyUserStore(_UserTo   // #docl  Ссылка на пользователя, параметры и маркеры которого надо скопировать.
                       , _UserFrom // #docl  Ссылка на пользователя кому копировать.
                       : comp): boolean; // #docl  true - скопировано успешно.

end;

#end
