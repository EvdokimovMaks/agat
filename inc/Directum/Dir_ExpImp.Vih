#ifndef _IDIR_ExpImp_INCLUDED_
#define _IDIR_ExpImp_INCLUDED_

#ifdef ComponentVersion
#component "F_USERREPORT"
#endif


//===============================================
#doc
 Таблица для импорта из xml
#end 
table struct tmp_field
(  num_rec : longint
  ,table_main :string[30]
  ,table_slave:string[30]
  ,field_name :string[30]
  ,field_value:string[100]
  ,num_row : longint
  ,kluch   : string[20]
  ,REFERENCE     : string[100]
  ,REFERENCE_TBL :word
  ,Prioritet:longint
)
with index
(  tmp_field01 = Prioritet+num_rec + table_main + table_slave +num_row+field_name +field_value
  ,tmp_field02 = table_main + table_slave +field_name +field_value
  ,tmp_field03 = table_main + kluch +field_name +field_value
  ,tmp_field04 = num_rec + table_main + table_slave +num_row+field_name +field_value
  
);


//===============================================
#doc
 Таблица для описания полей документа
#end 
table struct tmp_dict
( table_name : string[50]
 ,table_title: string[50]
 ,table_slave: string[50]
 ,field_name : string[100]
 ,field_title : string[100]
 ,field_type : string[20]
 ,num_field  : longint 
 ,ref_table  : string
) 
with index
( tmp_dict01 = num_field
) ;

//===============================================
#doc
 Таблица для описания словаря
#end 
table struct tmp_dict_opis
( table_name : string[50]
 ,table_title: string[50]
 ,nomer : longint
 ,tip   : word //0 - встроен,1 объектный,2 - через DSQL
 ,pa    : word
)
with index
( tmp_dict_opis01 = table_name
 ,tmp_dict_opis02 = nomer
)
;

//===============================================
#doc
 Таблица для хранения ссылок для подгрузки
#end 
table struct tmp_ref
( table_name : string[50]
  ,nrec      : string[30]
  ,PA       : word // признак что уже выгружена
)
with index
(   tmp_ref01 = table_name+nrec
  , tmp_ref02 = PA+table_name+nrec
);

//===============================================
#doc
 Таблица для хранения списка таблиц для экспортассылок для подгрузки
#end 
table struct tmp_table_spis
(  table_name : string[50]
)
with index
(   tmp_tbl_spis01 = table_name
);


#doc
  objinterface objDIR_ExpImp;
#end  
objinterface objDIR_ExpImp;
//static:
//===================================
//общие функции
//===================================
//########### Dir_ExpImpFunc.Vpp ###### 
//===================================
#doc
 Установить запись в протокол, пустой параметр отключает запись
#end
Procedure SetLogFileNM(w :string);
#doc
Вычислить произвольное выражение
#end
//===================================
Function Expression_ ( w_express :string ) :string ;
//===================================
#doc
 вычислить значение поля
 w_maintable :string ; - главная таблица
 w_slavetable :string ; - раздел
 w_field :string ;    - имя поля
 w_fieldtitle :string - заголовок
#end 
//===================================
Function Expression_TBL ( w_maintable :string; w_slavetable :string; w_field :string; w_fieldtitle :string ) :string ;
//===================================
#doc
 получить ошибку
#end 
//===================================
Function GetError :string ;
#doc
проинициализировать экспорт по таблице
#end
Function Export_Table_Func(wnmTable:string; wnmOper:string; wpsDate: string; wpsTime:string; wpsNrec :string) : boolean ;
#doc
 найти первое поле
#end
Function FIELD_First(var wnmtable:string;var wnmslave:string;var wfld:string; var ww_value:string):boolean;
#doc
 найти следующее поле
#end
Function FIELD_Next(var wnmtable:string;var wnmslave:string;var wfld:string; var ww_value:string):longint;


Function Export_Table_Count(wnmTable:string) : string ;
#DOC
 Отркрыть файл для записи, предварительно его удалив
#END
Function OpenFile(wFileName:string) : boolean ;
#DOC
 Отркрыть файл для чтения
#END
Function OpenFileRead(wFileName:string) : boolean ;
#DOC
 Закрыть файл 
#END
Function CloseFile :boolean ;
#doc
 пишем в файл преобразую в 1251 кодировку windows
#end 
//Procedure My_WriteLn(var w:string) ;
Procedure My_WriteLn(const w:string;const ww_tag:string='';const ww_Prefix:string='') ;

#doc
 читаем строку из файла преобразую в 866 кодировку windows
#end 
Procedure My_ReadLn(var w:string) ;
#doc
получить дату последнего экспорта 
#end
Function GetLastDateExport :string ;
#doc
получить время последнего экспорта 
#end
Function GetLastTimeExport :string ;
#doc
установить дату последнего экспорта 
#end
Procedure SetLastDateExport(wdate:string);
#doc
установить время последнего экспорта 
#end
Procedure SetLastTimeExport(wtime :string);
#doc
 Инициализация работы с журналом
 nm_table - имя таблицы в ловаре галактики
 wLast_Date - время последнего обмена
 wLast_Time - Дата последнего обмена
 woperation:word - фильтр по типу операции, 666 фильтр по NREC в wLast_date
 сразу проверяется наличие записей в журнале по указаной таблице 
 начиная с указаного периода
#end
Function JournalInit(nm_table :string; wLast_date:string; wLast_time :string; woperation:word) :boolean ;
#Doc
 получение следующей записи в журнале
#end
Function JournalNext :boolean;
#Doc
 получение значения поля
#end
Function GetJournalFieldVal(nm_table :string; field_name:string) :string;
//=========================================
//== Запустить интерфейс редактирования ===
//=========================================
#doc
  Запустить интерфейс редактирования по nrec
  wtable - имя таблицы
  wnrec - ссылка
#end
Function RunInterfaceEditNrec(wtable :string; wnrec :string) :boolean;
#doc
  Запустить интерфейс редактирования по коду
  wtable - имя таблицы
  wkod - код записи
#end
Function RunInterfaceEditKod(wtable :string; wkod :string) :boolean;
#doc
  Запустить интерфейс выбора по nrec
  wtable - имя таблицы
  wnrec - ссылка
#end
Function RunInterfaceVibNrec(wtable :string; wnrec :string) :string;
#doc
  Запустить интерфейс выбора по коду
  wtable - имя таблицы
  wkod - код записи
#end
Function RunInterfaceVibKod(wtable :string; wkod :string) :string;


//=======================================
//######### Dir_ExpImpXml.Vpp   #############
//=============================== 
#doc
 запуск экспорта из галактики в режиме обмена бизнес документами 
#end
Function StartExportXML( wpsFileName:string; wpsNastrName:string )  :boolean ;
#doc
 запуск импорта в галактики в режиме обмена бизнес документами 
#end
 
Function StartImportXML( wpsFileName:string; wpsNastrName:string )  :boolean ;
//============================
// Мои функции по xml - обмену
//============================
#doc
 записать заголовок
#end
Function XMLDeclaration :boolean ;
#doc
 записать начало сеуции
#end 
Function XMLBeginWrite:boolean ;
#doc
 записать конец сообщения
#end 
Function XMLEndWrite:boolean ;
#doc
 закрыть файл
#end 
Function XMLCLose :boolean ;
#doc
Записать запись в файл обмена  fileobmen
#end
Function XMLWriteRec(wnmtable:string ) :boolean ;
#doc
 записать таблицу
#end
Function XmlWriteTable(wnmTable:string;  wpsDate:string; wpsTime:string; wpsNrec :string) :boolean;
#doc
 сформировать выходной файл
#end
Function XmlWriteFile(wpsFileName:string; wpsNastrName:string; wpsDateTimeLastChange:string;
          wpsObjectType:string; wpsObjectNrec:string) :boolean; 

//====================
#doc
Прочитать запись из файл обмена  fileobme
#end
Function XMLReadRec(wnmtable:string ) :boolean;
#doc
Прочитат из файл обмена  fileobmen
#end
Function XmlReadFile(wnmfile : string) :boolean;

//=====================================
// Функции словаря
// ###### Dir_ExpImpDict.Vpp ##########
//=====================================
#doc
 тип переменных
#end
//=====================================
Function My_GetType(w : word ) :string ;
#doc
 тип переменных во внешних атрибутах
#end 
Function My_GetTypeAttr(w : word ) :string ;
//=====================================
#doc
 Получить список документов, вызывать пока не вернет ''
#end 
Function Dict_GetDocSpis(i:word ) :string ;
#doc
 Получить список частей документов, вызывать пока не вернет ''
#end 
Function Dict_GetDocPart(wtable :string ; slave_table:string ) :string ;
#doc
 Заполнить общее описание остальных таблиц - вызывать только при базе на ORACLE или MSSQL
 на PERVASIVE при наличии уверенности в работе DSQL (Прямой SQL)
#end
Function Fill_dict_opis(const ww_slovar:string='') : boolean ;
//======================================

#doc
 установить таблицу в словаре
#end
Function DICT_SETTABLE(wnmtable :string ) : string ;
Function DICT_GETTITLE(wnmtable :string ) : string ;

#doc
  Встать на первую запись в словаре
#end  
Function Dict_File_First :boolean ;
#doc
  Встать на следующую запись в словаре
#end  
Function Dict_File_Next :boolean ;
#doc
  Встать на последную запись в словаре
#end  
Function Dict_File_Last :boolean ;

//=====================================
#doc
  Встать на первое поле
#end  
Function Dict_Fld_First :boolean ;
#doc
  Встать на следующее поле
#end  
Function Dict_Fld_Next :boolean ;
#doc
  Встать на последнее поле
#end  
Function Dict_Fld_Last :boolean ;
//==============================
#doc
 получить поля 
#end 
Function Dict_Fld_GetName_D(var  wTITLE :string ; var wType :string ) :string ;
Function Dict_Fld_GetName :string ;
//==============================
#doc
 получить первую запись по документу
#end 
//==============================
Function Dict_TypeDoc_First(wtable:string) : string ;
#doc
 получить следующую запись по документу
#end 
Function Dict_TypeDoc_Next(wtable:string) : string ;
#doc
 получить настройки в файл
#end 
Function Dict_TypeDocFile(wtable:string) :boolean ;
#doc
 получить все настройки в файл
#end 
Function Dict_TypeDocFileAll(wpsDirName:string; wpsFileName:string) :boolean ;
//======================================================
// функции для Katorg  Dir_ExpImpKatorg.Vpp
//=========================================
//Function Export_Katorg_Init(wpsDate:string; wpsTime:string; wpsNrec :string) : boolean ;
//Function Export_Katorg_First :boolean ;
//Function Export_Katorg_Next :boolean ;
// функции для Katpodr  Dir_ExpImpKatpodr.Vpp
//=========================================
//Function Export_Katpodr_Init(wpsDate:string; wpsTime:string; wpsNrec :string) : boolean ;
//Function Export_Katpodr_First :boolean ;
//Function Export_Katpodr_Next :boolean ;

//============================================
//функции по работе с внешними атрибутами
// Attr_Func.vpp
//============================================
#doc
 проверить наличие записи в значениях
#end 
//============================================
Function CheckAttr(wtbl :word; wname:string; wtype :word ) :boolean ;
//============================================
#doc
 проверить наличие записи в значениях
#end 
//============================================
Function CheckAttrVal(wtbl :word ;wname :string ;wwcrec:comp ) :boolean ;
#doc
 получить значение атрибута 
#end 
Function GetAttr(wtbl :word ;wname :string ;wcrec:comp ) :string ;
#doc
 установить значение атрибута 
#end 
Procedure SetAttr(wtbl :word ;wname :string ;wwcrec:comp;wval:string );
#doc
 устновить атрибут с типом ссылка
#end 
Procedure SetAttrComp(wtbl :word ;wname :string ;wwcrec:comp; wtblan : word ; wval:string );
#doc
 установить значение атрибута из DBF
#end 
Procedure SetAttrDBF(wtbl :word ;wname :string ;wwcrec:comp;wfld:string;whandler:longint );
#doc
 установить загрузить мемо значение атрибута из DBF
#end 
Function SetAttrMemoFromDbf(wtbl :word ;wname :string ;wwcrec:comp;whandler:longint ;wnmfield :string ) : word;
//По работе с XML
#doc
 Установить значение поля
#end
Function SetFieldValue(wnmtable:string;wfield:string;ww_nrec:string;wvalue:string) :boolean;  

#doc
получить путь до файла
#end
Function GetPathFromFile(ww_file:string) :string;

end;
#doc
vipinterface DIR_ExpImp implements objDIR_ExpImp
//vipinterface DIR_ExpImp 
parameters
(
  PsMode :String     // Online , Batch , XML 
 ;PsType :String     //тип EXPORT- экспорт, IMPORT импорт , DICT - словарь
 ;psFileName:String  // файл для обмена
 ;psNastrName:String // наименование настройки обмена для xml
 ;psDateTimeLastChange:String //дата последнего обмена - строка в формате DD/MM/YYYY HH:MM:SS:SSS
 ;psObjectType:String // тип объекта , строка или системный код
 ;psObjectNrec:String // ключ объекта (начиинается на "`") или ссылка на объект 
 ;psFuncRun:String    // строка для запуска чего либо еще

)

#end
vipinterface DIR_ExpImp implements objDIR_ExpImp
//vipinterface DIR_ExpImp 
parameters
(
  PsMode :String     // Online , Batch , XML 
 ;PsType :String     //тип EXPORT- экспорт, IMPORT импорт , DICT - словарь
 ;psFileName:String  // файл для обмена
 ;psNastrName:String // наименование настройки обмена для xml
 ;psDateTimeLastChange:String //дата последнего обмена - строка в формате DD/MM/YYYY HH:MM:SS:SSS
 ;psObjectType:String // тип объекта , строка или системный код
 ;psObjectNrec:String // ключ объекта (начиинается на "`") или ссылка на объект 
 ;psFuncRun:String    // строка для запуска чего либо еще

)
Licensed (free)
;
//===================================
//Новое - через объектные фейсы
//===================================
#doc
  Объектный интерфейс плагина для браузера валидаторов.
#end
objinterface IDIR_ExpIMP;
  #doc
  Установить запись в протокол, пустой параметр отключает запись
  #end
  Procedure SetLogFileNM(w :string);

  #doc
  Вычислить произвольное выражение
  #end
  Function Expression_ ( w_express :string ) :string ;
  #doc
    Возвращает заголовок таблицы.
  #end
  function GetTableTitle: string;

  #doc
    Возвращает имя главной таблицы
  #end
  function GetTableName: string;
  #doc
    Возвращает имя следующей дочерней таблицы
  #end
  Function GetSlaveName(wnmslave :string) :string;
  
  #doc
    Запускает инициализацию.
  #end

  Function Export_Init(wpsDate:string; wpsTime:string; wpsNrec :string) : boolean ;
  #doc
    Получить первую запись.
  #end
  Function Export_First :boolean ;
  #doc
    Получить следующую запись.
  #end
  Function Export_Next :boolean ;
  #doc
    Получить первую запись дочерней таблицы.
  #end
  Function Export_SlaveFirst(w_slave :string) :boolean;
  #doc
    Получить следующую запись дочерней таблицы.
  #end
  Function Export_SlaveNext :boolean;
  #doc
    Инициализация импорта
  #end
  Function IMPORT_INIT(wnmfile:string) :boolean;
  #doc
   сохранить запись
  #end
  Function UpdateCurrent(wnmtable:string) :boolean;
  #doc
   Добавить чистую запись
  #end
  Function InsertCurrent(wnmtable:string) :boolean;  

  #doc
    Возвращает валидатор.
  #end
  function GetValidator: IDir_ExpImp;
end;




#end
