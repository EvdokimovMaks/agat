#include SpStepHelper.vih
#include AG_TriggerUtils.vih

#component "AGAT"

interface AG_TriggerHandler_SpStep;

var
  _spstepHelper: SpStepHelper;

function doAction(buf: AG_ITriggerRecordBuffer; wBeforeAfter: word; wOper: word): boolean;
{
  result := true;
  var b: AG_ITriggerRecordBuffer_SpStep = AG_ITriggerRecordBuffer_SpStep(buf);
  case wBeforeAfter of
    TRIGGER_AFTER:
      case wOper of
        TRIGGER_INSERT,
        TRIGGER_UPDATE:
          if b.value.PrMc = 1 and b.value.cMcUsl != comp(0)
          {
            AG_TriggersState::PushAllTriggersState;
            AG_TriggersState::SetAllTriggersState(false);
            _spstepHelper.SetSpstepStZatr(b.value.Nrec);
            AG_TriggersState::PopAllTriggersState;
          }
      end; //case wOper
  end; //case wBeforeAfter
}

procedure doRollBack(buf: AG_ITriggerRecordBuffer; wBeforeAfter: word; wOper: word);
{
  #__UNUSED__(buf, wBeforeAfter, wOper)
}

end.
