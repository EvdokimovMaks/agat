#include query.vih

#component "F_COMMON"

alter interface ShowAnalytics;

overload
  static function ShowKau(wKau: word; cKau: tKodKAU): string;
end;

var
  _queryKauClaim: IQuery;

sql query queryKauClaim =
  select 'Заявка №' + indent.noind +
         ' от ' + date2str('%dd.%MM.%yyyy', indent.dind) +
         ' / Строка №' + cast(claim.wpos as string) +
         ' / ' + case when claim.prmc = 2 then coalesce(katusl.name,'') else coalesce(katmc.name,'') end +
         ' / ' + cast(claim.kol as string) + ' / ' + cast(claim.price as string) + ' / ' + cast(claim.summa as string)
  from claim
  join indent on indent.nrec = claim.cindent
  left join katmc on katmc.nrec = claim.cmcusl
  left join katusl on katusl.nrec = claim.cmcusl
  where claim.nrec = :ClaimNrec
;

function ShowKau(wKau: word; cKau: tKodKAU): string;
{

  if wKau = cgKau_Claim
  {

    if NullVipRef(_queryKauClaim)
      _queryKauClaim := queryManager.createQuery(queryKauClaim);

    _try
      result := string(_queryKauClaim.setParam('ClaimNrec', cKau).getResultValue);
    _except
      on exNoResult: result := '';

  }
  else
    result := inherited::ShowKau(wKau, cKau);

}

end.
