#include ExtAttrPicker.vih
#include ExtAttr.vih
#include CardHelper.vih
#include BusinessTripLinkedBasedocs.vih

#component "F_PODOT"

//Докомпиляция интерфейса редактирования приказа на командировки
alter interface GETPRIKAZ;

overload
  Procedure Embed_GotoDoc; // перерисовка закладок при переходе между записями (сотрудниками, этапами, приказами)
end;

extendformats scrEditPrikaz, brEditSpPrikaz;
extendTabbedSheets wiPrikaz;

var
  _extAttrPicker: ExtAttrPicker;
  _extAttr: iExtAttr;
  _cardHelper: CardHelper;
  _businessTripLinkedBasedocs: BusinessTripLinkedBasedocs new;

//Добавляем к базовой вьюхе внешние атрибуты приказа на командировку
create view
as select _extAttr.sGetAttrID(coPrikaz, prikaz.nrec, ATTRNAM_NREC_PRIKAZ_ZAKAZ_ZATRAT) (fieldname = ZakazZatratFld),
          _extAttr.sGetAttrID(coPrikaz, prikaz.nrec, ATTRNAM_NREC_PRIKAZ_VID_RASHODOV) (fieldname = VidRashodovFld),
          _cardHelper.GetCardValueByLschet(spprikaz.clsch) (fieldname = KartaFld)
;

//#region Overload

//При перерисовке закладок при переходе между записями (сотрудниками, этапами, приказами)
//перерисовываем добавленную нами закладку с документами основаниями
Procedure Embed_GotoDoc;
{
  inherited::Embed_GotoDoc;
  if (not isValid(#spprikaz))
    _businessTripLinkedBasedocs.SetSpprikazNrec(0);
  else
    _businessTripLinkedBasedocs.SetSpprikazNrec(spprikaz.nrec);
}

//#endregion

//окно редактирования приказа
window wiPrikaz;
  //В скрин шапки приказа на командировку добавляем внешние атрибуты Вид расходов, Заказ затрат
  screen scrEditPrikaz ('', hcKassaIPrikaz, sci1378Esc);
  fields
    VidRashodovFld ('Вид расходов'): protect, pickbutton;
    ZakazZatratFld ('Заказ списания затрат на командировочные расходы'): protect, pickbutton;
<<








`Вид расходов`.@@@@@@@@@@@@@@@ `Заказ затрат`.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
>>
  end; //screen scrEditPrikaz

  //В брауз с сотрудниками добавляем внешний атрибут лицевого счета сотрудника "Корпоративная карта"
  Browse brEditSpPrikaz ('Командированные сотрудники', hcKassaISpPrikaz, sci1378InsPm);
  Show at (,10,,14);
  Table SpPrikaz;
  fields
    KartaFld 'Корпоративная карта' : [10], protect;
  end; //browse brEditSpPrikaz

  //в нижнюю панель с закладками добавляем закладку с документами основаниями
  Tabbedsheet BOTTOM tsWKomUdPrikaz
    embedded embbrLinkedBasedocs 'Документы основания' interface _businessTripLinkedBasedocs;
    end;
  end; // tabbedsheet tsWKomUdPrikaz

end; //window wiPrikaz

//#region Вспомогательные процедуры и функции

procedure PickZakazZatratFld;
{
  _extAttrPicker.PickExtAttr(coPrikaz, prikaz.nrec, ATTRNAM_NREC_PRIKAZ_ZAKAZ_ZATRAT);
  rereadrecord;
}

procedure ClearZakazZatratFld;
{
  _extAttr.DeleteValueID(coPrikaz, prikaz.nrec, ATTRNAM_NREC_PRIKAZ_ZAKAZ_ZATRAT);
  rereadrecord;
}

procedure PickVidRashodovFld;
{
  _extAttrPicker.PickExtAttr(coPrikaz, prikaz.nrec, ATTRNAM_NREC_PRIKAZ_VID_RASHODOV);
  rereadrecord;
}

procedure ClearVidRashodovFld;
{
  _extAttr.DeleteValueID(coPrikaz, prikaz.nrec, ATTRNAM_NREC_PRIKAZ_VID_RASHODOV);
  rereadrecord;
}

//#endregion

handleevent
  //при переключении на вкладку со списком привязанных ДО - обновляем данные на этой вкладке
  cmChangeTabbedSheetFormat:
  {
    if target = embbrLinkedBasedocs
      _businessTripLinkedBasedocs.Refresh;
    else
      inherited::handleevent(cmChangeTabbedSheetFormat);
  }

  //обработка очистки заказа затрат, вида расходов
  cmDelOnProtect:
  {
    case curfield of
      #ZakazZatratFld: ClearZakazZatratFld;
      #VidRashodovFld: ClearVidRashodovFld;
    else
      inherited::handleevent(cmPick);
    end;
  }

  //обработка выбора заказа затрат, вида расходов
  cmPick:
  {
    case curfield of
      #ZakazZatratFld: PickZakazZatratFld;
      #VidRashodovFld: PickVidRashodovFld;
    else
      inherited::handleevent(cmPick);
    end;
  }

  cmInit:
  {
    //Необходимо, чтобы интерфейс открывался в кадрах с отображением вкладок спецификации и т.п.
    //так же, как и в кассе. Отображение этих вкладок регулируется параметром typerun.
    //Устанавливаем его таким же, как в кассе.
    typerun := 0;
    inherited::handleevent(cmInit);
  }

end; //handleevent GETPRIKAZ

end.
