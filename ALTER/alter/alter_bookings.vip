#component "M_MNPLAN"
alter interface bookings;

const
  cmExtFilter1 = 31111;
  cmExtFilter2 = 31112;
end;

var
  iGetKAU: GetKAU;
  lExtFilter1Marker: longint;
  lExtFilter2Marker: longint;

sql query qExecutor =
select indent.nrec
from indent
join claim on indent.nrec = claim.cindent and claim.cvalkau[2] = ?
group by indent.nrec;

sql query qOrg =
select oa.cobject
from objacct oa
join basedoc bd on oa.cowner = bd.nrec and bd.corg = ?
where oa.typeown = 34 and oa.typeobj = 3
group by oa.cobject;

create view
condition ExtFilter1 = foundmarker(lExtFilter1Marker, indent.nrec)
condition ExtFilter2 = foundmarker(lExtFilter2Marker, indent.nrec);

handleevent
cmExtFilter1:
{
  if (ConditionActive(tcExtFilter1))
  {
    PopCondition(tcExtFilter1);
    donemarker(lExtFilter1Marker,'');
    rereadrecord(#indent);
  }
  else
  {
    var c: comp;
    if (iGetKAU.GetCodeKau(1, 3, c) > 0)
    {
      lExtFilter1Marker := initmarker('', 8, 100, 10, false);
      var stmt: longint;
      stmt := sqlAllocStmt;
      sqlPrepare(stmt, qExecutor);
      sqlBindParam(stmt, 1, c);
      var indentNrec: comp;
      sqlBindCol(stmt, 1, indentNrec);
      sqlExecute(stmt);
      while sqlFetch(stmt) = tsOk do
      {
        insertmarker(lExtFilter1Marker, indentNrec);
      }
      sqlFreeStmt(stmt);
      if getmarkercount(lExtFilter1Marker) = 0
      {
        message('Не найдены заявки с указанным исполнителем. Фильтр не установлен');
        donemarker(lExtFilter1Marker,'');
      }
      else
      {
        PushCondition(tcExtFilter1);
      }
      rereadrecord(#indent);
    }
  }
}

cmExtFilter2:
{
  if (ConditionActive(tcExtFilter2))
  {
    PopCondition(tcExtFilter2);
    donemarker(lExtFilter2Marker,'');
    rereadrecord(#indent);
  }
  else
  {
    var c: comp;
    if (iGetKAU.GetCodeKau(1, 1, c) > 0)
    {
      lExtFilter2Marker := initmarker('', 8, 100, 10, false);
      var stmt: longint;
      stmt := sqlAllocStmt;
      sqlPrepare(stmt, qOrg);
      sqlBindParam(stmt, 1, c);
      var indentNrec: comp;
      sqlBindCol(stmt, 1, indentNrec);
      sqlExecute(stmt);
      while sqlFetch(stmt) = tsOk do
      {
        insertmarker(lExtFilter2Marker, indentNrec);
      }
      sqlFreeStmt(stmt);
      if getmarkercount(lExtFilter2Marker) = 0
      {
        message('Не найдены заявки c указанным контрагентом. Фильтр не установлен');
        donemarker(lExtFilter2Marker,'');
      }
      else
      {
        PushCondition(tcExtFilter2);
      }
      rereadrecord(#indent);
    }
  }
}

cmHotKeys :
{
  var MenuID : longint;
  MenuID := LoadMenu('MainBookingsTree');

  AddMenuItem(MenuID, 'separator', 0);
  AddMenuItem(MenuID, if(ConditionActive(tcExtFilter1), 'Снять ', 'Установить ')+'фильтр по исполнителю', cmExtFilter1);
  AddMenuItem(MenuID, if(ConditionActive(tcExtFilter2), 'Снять ', 'Установить ')+'фильтр по контрагенту из ДО', cmExtFilter2);

  if( ExistTune('BookingsFunc.Func01') )
  {
    AddMenuItem(MenuID, 'separator', 0);

    if( ( coGetTune('BookingsFunc.Func01') != comp(0) ) and ( sGetTune('BookingsFunc.Func01') != '' ) )
        AddMenuItem(MenuID, '(Alt+1) ' + sGetTune('BookingsFunc.Func01'), cmAlt1);
    if( ( coGetTune('BookingsFunc.Func02') != comp(0) ) and ( sGetTune('BookingsFunc.Func02') != '' ) )
        AddMenuItem(MenuID, '(Alt+2) ' + sGetTune('BookingsFunc.Func02'), cmAlt2);
    if( ( coGetTune('BookingsFunc.Func03') != comp(0) ) and ( sGetTune('BookingsFunc.Func03') != '' ) )
        AddMenuItem(MenuID, '(Alt+3) ' + sGetTune('BookingsFunc.Func03'), cmAlt3);
    if( ( coGetTune('BookingsFunc.Func04') != comp(0) ) and ( sGetTune('BookingsFunc.Func04') != '' ) )
        AddMenuItem(MenuID, '(Alt+4) ' + sGetTune('BookingsFunc.Func04'), cmAlt4);
    if( ( coGetTune('BookingsFunc.Func05') != comp(0) ) and ( sGetTune('BookingsFunc.Func05') != '' ) )
        AddMenuItem(MenuID, '(Alt+5) ' + sGetTune('BookingsFunc.Func05'), cmAlt5);
    if( ( coGetTune('BookingsFunc.Func06') != comp(0) ) and ( sGetTune('BookingsFunc.Func06') != '' ) )
        AddMenuItem(MenuID, '(Alt+6) ' + sGetTune('BookingsFunc.Func06'), cmAlt6);
    if( ( coGetTune('BookingsFunc.Func07') != comp(0) ) and ( sGetTune('BookingsFunc.Func07') != '' ) )
        AddMenuItem(MenuID, '(Alt+7) ' + sGetTune('BookingsFunc.Func07'), cmAlt7);
    if( ( coGetTune('BookingsFunc.Func08') != comp(0) ) and ( sGetTune('BookingsFunc.Func08') != '' ) )
        AddMenuItem(MenuID, '(Alt+8) ' + sGetTune('BookingsFunc.Func08'), cmAlt8);
    if( ( coGetTune('BookingsFunc.Func09') != comp(0) ) and ( sGetTune('BookingsFunc.Func09') != '' ) )
        AddMenuItem(MenuID, '(Alt+9) ' + sGetTune('BookingsFunc.Func09'), cmAlt9);
    if( ( coGetTune('BookingsFunc.Func10') != comp(0) ) and ( sGetTune('BookingsFunc.Func10') != '' ) )
        AddMenuItem(MenuID, '(Alt+0) ' + sGetTune('BookingsFunc.Func10'), cmAlt0);
  }

  PutHotCommand(RunLoadMenu(MenuID));
}
end;
end.
