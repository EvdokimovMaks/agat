#component "L_SOPRDOC"

alter interface soprdocb;

table struct tNpp (SpsoprNrec: comp, Npp: string[20]) with index (i01 = SpsoprNrec);

var
  _curNpp: word;
  _maxNpp: word;

create view as select * from tNpp;

procedure SaveNpp;
{
  //message('SaveNpp');
  _maxNpp := 0;
  delete all tNpp;
  pushpos(#spsopr);
  _loop spsopr
  {
    if (_maxNpp < spsopr.npp) _maxNpp := spsopr.npp;
    insert tNpp set tNpp.SpsoprNrec := spsopr.nrec, tNpp.Npp := spsopr.npp;
  }
  poppos(#spsopr);
}

procedure RestoreNpp;
{
  //message('RestoreNpp maxnpp='+_maxNpp+' curnpp='+_curNpp);
  var curNppIsSet: boolean;
  curNppIsSet := false;

  pushpos(#spsopr);
  _loop spsopr
  {
    if getfirst tNpp where ((spsopr.nrec == tNpp.SpsoprNrec)) = tsOk
    {
      update current spsopr set spsopr.npp := tNpp.Npp;
    }
    else if (not curNppIsSet) and (_curNpp != 0)
    {
      update current spsopr set spsopr.npp := _curNpp;
      curNppIsSet := true;
    }
    else
    {
      _maxNpp++;
      update current spsopr set spsopr.npp := _maxNpp;
    }
  }
  poppos(#spsopr);
}

window editsopr;
tableevent table spsopr;
cmPick:
{
  if (curfield = #katmc.name or curfield = #katmc.barkod)
  {
    _curNpp := if((not isNew) and (isValidAll(#spsopr)), spsopr.Npp, 0);

    SaveNpp;
    if inherited::handleevent(cmPick) = heOk
      RestoreNpp;
    rereadrecord(#spsopr);
  }
  else
    inherited::handleevent(cmPick);
}
end;
end;
end.
