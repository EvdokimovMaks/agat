#include Query.vih
#include SaldTune.vih
#include tSpDocs.vih

#component "L_Dogovor"

alter interface vipSpDocs;

overload
  Function tSpDocsObjInterface.Insert_current_SpDocs(var SpDocsPos : #TSpDocsP) : word;
end;

var
  _qStZ: IQuery;
#include SaldTune.var


sql query qStZ =
select
  AddSumTune.Nrec
from
  SpDocs
left join CalPlan
  on CalPlan.Nrec = SpDocs.cDoc
join Dogovor
  on Dogovor.Nrec = case SpDocs.TiDk
                      when 400 then SpDocs.cDoc
                      when 401 then SpDocs.cDoc
                      when 403 then CalPlan.cDogovor
                      else #comp(0)
                    end
join AttrNam
  on AttrNam.wTable = 1707 and
     AttrNam.Name   = 'Статья расходов (коммерческих, накладных)'
join AttrVal
  on AttrVal.wTable   = 1707         and
     AttrVal.cRec     = Dogovor.Nrec and
     AttrVal.cAttrNam = AttrNam.Nrec
join SpKau spkStZ
  on spkStZ.Nrec = AttrVal.vComp
join FpKatImp
  on FpKatImp.Code = :Code
join FpImpRel
  on FpImpRel.cMain    = FpKatImp.Nrec and
     FpImpRel.ImpKodAn = :ImpKodAn     and
     FpImpRel.cImpMean = spkStZ.Nrec
join AddSumTune
  on AddSumTune.Nrec = FpImpRel.cMean
where
  SpDocs.Nrec = :cSpDocs and
  Dogovor.Direct = 2
;


Function Insert_current_SpDocs(var SpDocsPos : #TSpDocsP) : word;
{
  result := Inherited::Insert_current_SpDocs(SpDocsPos);
  if result != tsOk exit;
  if (SpDocsPos.TiDk != 400 and SpDocsPos.TiDk != 401 and SpDocsPos.TiDk != 403) exit;

  if (_qStZ = NullRef)
    _qStZ := queryManager.createQuery(qStZ)
                         .setParam('Code', FPKATIMP_CODE_STZ2013_STZSTROY)
                         .setParam('ImpKodAn', cgKau_StZ2013);

  _qStZ.setParam('cSpdocs', SpDocsPos.Nrec);

  var cStZ: comp = comp(0);
  if _qStZ.execute.errorCode = tsOk
    if _qStZ.fetch.errorCode = tsOk
      cStZ := _qStZ.row.ValAt(1);

  if cStZ != comp(0)
  {
    var vcSaldTune: comp = coGetTune('CELUCHFORMODUL.BUY');
    oMTRFun.InsSpecMTR_Kau(coSpDocs, SpDocsPos.nRec
                                   , vcSaldTune
                                   , comp(0)
                                   , cStZ
                                   , oTune.GetDefKauRef(vcSaldTune, 2)
                                   , oTune.GetDefKauRef(vcSaldTune, 3)
                                   , oTune.GetDefKauRef(vcSaldTune, 4)
                                   , oTune.GetDefKauRef(vcSaldTune, 5)
                                   , oTune.GetDefKauRef(vcSaldTune, 6)
                                   , oTune.GetDefKauRef(vcSaldTune, 7)
                                   , oTune.GetDefKauRef(vcSaldTune, 8)
                                   , oTune.GetDefKauRef(vcSaldTune, 9)
                          );
  }
}

end.
