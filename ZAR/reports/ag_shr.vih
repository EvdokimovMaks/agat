#component "AGAT"

objinterface IAG_ShrDep;
  function  getCount: longint;
  function  first: boolean;
  function  next: boolean;
  function  find(cDep: comp): boolean;
  function  exist(cDep: comp): boolean;
  function  hasChildren: boolean;
  function  getTopDepNrec(cDep: comp): comp;
  procedure addFilterByDep(cDep: comp; bWithChildren: boolean = false; hierMaxLevel: integer = 0);
  procedure addFilterByDeps(mDep: TPtr; bWithChildren: boolean = false; hierMaxLevel: integer = 0);
  procedure delAllFilters;
  function  toNewSqlTmpTable(sqlTmpTableName: string): boolean;
  function  toExistingSqlTmpTable(sqlTmpTableName: string): boolean;

  property Nrec   : comp;
  property cParent: comp;
  property Code   : string[100];
  property Name   : string;
  property DatN   : date;
  property DatOk  : date;

  index idxNrec = Nrec;
  index idxParent = cParent, Code;
end;

vipinterface AG_ShrDep implements IAG_ShrDep;
public:
  constructor Create(dDate: date; bWithTopEntry: boolean);
  destructor Done;
end;

objinterface IAG_StaffStruct;
  function  getCount: longint;
  function  first: boolean;
  function  next: boolean;
  function  find(cStaffStruct: comp): boolean;
  function  exist(cStaffStruct: comp): boolean;
  function  toNewSqlTmpTable(sqlTmpTableName: string): boolean;
  function  toExistingSqlTmpTable(sqlTmpTableName: string): boolean;

  property Nrec     : comp;
  property cDep     : comp;
  property sSort    : string[50];
  property cPost    : comp;
  property cCateg   : comp;
  property cPodgr   : comp;
  property Qty      : double;
  property Oklad    : double;
  property BonusVred: double;
  property BonusPrem: double;
  property BonusSekr: double;
  property FOT      : double;

  index idxNrec = Nrec;
  index idxDep = cDep, sSort;
end;

vipinterface AG_StaffStruct implements IAG_StaffStruct;
public:
  constructor Create(dDate: date; Deps: IAG_ShrDep);
end;

const
  SHRDEPTOTALS_DEP        : word = 0;
  SHRDEPTOTALS_DEP_PODGR  : word = 1;
  SHRDEPTOTALS_DEP_CATEG  : word = 2;
  SHRDEPTOTALS_ITOGO      : word = 3;
  SHRDEPTOTALS_ITOGO_PODGR: word = 4;
  SHRDEPTOTALS_ITOGO_CATEG: word = 5;
end;

objinterface IAG_ShrDepTotals;
  function  getCount: longint;
  function  first: boolean;
  function  next: boolean;
  procedure filterByDepPodgrCateg(ccDep: comp; ccPodgr: comp; ccCateg: comp);
  procedure filterByDepPodgr(ccDep: comp; ccPodgr: comp);
  procedure filterByDep(ccDep: comp);
  procedure delAllFilters;

  property cDep     : comp;
  property cCateg   : comp;
  property cPodgr   : comp;
  property Qty      : double;
  property Oklad    : double;
  property BonusVred: double;
  property BonusPrem: double;
  property BonusSekr: double;
  property FOT      : double;

  index idxDep = cDep;
  index idxDepPodgr = cDep, cPodgr;
  index idxDepPodgrCateg = cDep, cPodgr, cCateg;
end;

vipinterface AG_ShrDepTotals implements IAG_ShrDepTotals;
public:
  constructor Create(ss: IAG_StaffStruct; bGroupByDep: boolean;
                     bGroupByPodgr: boolean; bGroupByCateg: boolean);
end;
