#include Stock.vih
#include Query.vih

#component "AGAT"

interface StockParamsFactory;

sql query qKatstroy =
  select nrec
  from katstroy
  where name like 'закрыт' or code in ('000029','000028');

procedure InitParamsDefault(var params: IStockParams);
{
  params.OnDate := cur_date;
  params.SetGroupByFlag(WarehouseSectionFlag_Katpodr)
        .SetGroupByFlag(WarehouseSectionFlag_Katmol)
        .SetGroupByFlag(WarehouseSectionFlag_Katparty)
        .SetGroupByFlag(WarehouseSectionFlag_Katstroy);
}

procedure InitParamsFree(var params: IStockParams);
{
  params.OnDate := cur_date;
  params.SetGroupByFlag(WarehouseSectionFlag_Katpodr)
        .SetGroupByFlag(WarehouseSectionFlag_Katmol)
        .SetGroupByFlag(WarehouseSectionFlag_Katstroy);

  params.SetFilterFlag(WarehouseSectionFlag_Katstroy);
  params.AddNrecToFilter(WarehouseSectionFlag_Katstroy, 0);

  var q: IQuery;
  q := queryManager.createQuery(qKatstroy);

  var rs: IResultSet;
  rs := q.getResultSet;

  if rs != nullref and q.errorCode = tsOk
  {
    params.AddNrecToFilter(WarehouseSectionFlag_Katstroy, rs.row.ValAt(1));
  }
}

function Get(stockParamsType: word = StockParamsType_NoInit): IStockParams;
{
  var _params: IStockParams;
  if loadvipref(_params, 'AGAT::StockParams')
  {
    case stockParamsType of
      StockParamsType_Default: InitParamsDefault(_params);
      StockParamsType_Free: InitParamsFree(_params);
    end;
    result := _params;
  }
  else
    result := nullref;
}

end.
