#include KatstroyHelper.vih

#component "AGAT"

extensionpoint epappinit;

handler with replace RegisterGlobKatstroyHelper on extensionPoint epAppInit
action
{

  RegisterGlobalIfc('KatstroyHelper');
  result := true;
}


interface KatstroyHelper;

create view vks
var _katstroyNrec: comp;
as select *
from katstroy
where (( _katstroyNrec == katstroy.nrec ));

function posEndOfDate(s: string; posStartOfDate: byte): byte;
{
  var symb: string; symb := '0123456789./\';
  var k: byte; k := posStartOfDate;
  while (pos(s[k], symb) > 0 and k <= length(s)) k++;
  result := k-1;
}

function GetKatstroyCloseDate(katstroyNrec: comp): date;
{
  vks._katstroyNrec := katstroyNrec;
  if vks.getfirst katstroy = tsOk
  {
    var s: string;
    s := replace(locase(vks.katstroy.name),' ','');

    var k: byte;
    k := pos('закрыт',s);

    if k > 0
    {
      k := k + 6;
      var s1: string;
      s1 := substr(s, k, posEndOfDate(s, k) - k + 1);
      s1 := replace(s1, '/', '.');
      s1 := replace(s1, '\', '.');
      case length(s1) of
        8: result := strtodate(s1, 'DD.MM.YY');
        10: result := strtodate(s1, 'DD.MM.YYYY');
      else
        result := 0;
      end;
    }
    else
      result := 0;
  }
  else
    result := 0;
}

function IsKatstroyClosed(katstroyNrec: comp): boolean;
{
  vks._katstroyNrec := katstroyNrec;
  if vks.getfirst katstroy = tsOk
  {
    result := pos('закрыт', replace(locase(vks.katstroy.name),' ','')) > 0;
  }
  else
    result := false;
}

end.
