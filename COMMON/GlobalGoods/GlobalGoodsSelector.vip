#include GlobalGoods.vih
#include ExternalQuery.vih
#include Marker.vih

#component "AGAT"

interface GlobalGoodsSelector;

table struct tGoods ( globalId: comp, name: string) with index (i00 = globalId, i01 = name);

var
  _options: IGlobalGoodsSelectorOptions;
  _goodsMarker: IMarker(Marker) new;
  _externalQueryTextFactory: IExternalQueryTextFactory;
  _externalQuery: IExternalQuery;

create view
as select *
from tGoods, tGoods brGoods (i01);

constructor Init;
{
  result := loadvipref(_options, 'AGAT::GlobalGoodsSelectorOptions') and
            loadvipref(_externalQueryTextFactory, 'AGAT::ExternalQueryTextFactory') and
            loadvipref(_externalQuery, 'AGAT::ExternalQuery');
}

function replaceSymbols(s: string; srcSymbols: string; dstSymbols: string): string;
{
  var i: integer;
  for(i:=1; i<=length(srcSymbols); i++)
    s := replace(s, srcSymbols[i], dstSymbols[i]);
  result := s;
}

function getNameFilter: string;
{
  if _options != nullref
  {
    var s: string;
    s := '%'+replaceSymbols(_options.NameFilter, '`#~!@#$^&*()-+_=,.;:/|\ "''','%%%%%%%%%%%%%%%%%%%%%%%%%%')+'%';
    while pos('%%', s) > 0 do s := replace(s,'%%','%');
    result := s;
  }
  else
    result := '';
}

function getLinkedServerName: string;
{
  result := if(_options!=nullref, _options.LinkedServerName, '');
}

procedure RefreshGoodsTable;
{
  delete all tGoods;

  var t: IExternalQueryText;
  t := _externalQueryTextFactory.
       CreateText('select dbo.toComp(ID) as globalId, SHEADLINE# as name').
       AddString('from openquery ('+getLinkedServerName+', ''SELECT ID, SHEADLINE# FROM BTK.BS_GOODS').
       AddString('WHERE UPPER(SHEADLINE#) like '''''+upcase(getNameFilter)+''''''')');

  sqlCopyInto(_externalQuery.GetResultSet(t), #tGoods, false);

}

window wSelectGlobalGoods 'Выбор МЦ Global ERP', escclose;
  screen sc1;
    show(,,,3) fixed_y;
    fields
      [OptionsNameFilter] _options.NameFilter: noprotect;
<<

 .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
>>
  end;
  browse browseGoods (,,sci1EnIns);
    show(,4,,);
    table brGoods;
    recMarker = _goodsMarker{brGoods.globalId};
    fields
      brGoods.Name 'Наименование': [100], protect;
  end;
  handleevent
    cmDefault:
    {
      if curfield = #OptionsNameFilter
      {
        RefreshGoodsTable;
        rereadrecord(#brGoods);
        if getfirst brGoods = tsOk
          SelectFormat(browseGoods);
      }
      else
        closewindowex(wSelectGlobalGoods, cmDefault);
    }
    cminit:
      _goodsMarker.Caption := (' Отмечено [%d] записей.');
  end;
end;

function ShowUI: longint;
{
  result := runwindowmodal(wSelectGlobalGoods);
}

procedure SetOptions(aOptions: IGlobalGoodsSelectorOptions);
{
  _options := aOptions;
}

function Options: IGlobalGoodsSelectorOptions;
{
  result := _options;
}

function SelectedGoods: IGlobalGoodsCollection;
{

  var lMarker, lMarkerCnt: longint;
  lMarker := initmarker('', 8, 10, 20, false);
  IMarkerExA(_goodsMarker).ExportToAll(lMarker);

  lMarkerCnt := getMarkerCount(lMarker);
  if lMarkerCnt = 0
    InsertMarker(lMarker, brGoods.globalId);

  var rs: IResultSet;
  if (lMarkerCnt > 600)   //если помеченные мц нельзя запихнуть в текст запроса
  {
    var s: longint;
    sqlAddStr(s, 'table MarkedGoods (Id: comp) with index (i01 = Id);')
    sqlCreateTmpTable(s, ctmNormal);

    var i: longint;
    var c: comp;
    for(i:=0; i<GetMarkerCount(lMarker); i++)
      if getmarker(lMarker, i, c)
        sqlExecDirect('insert MarkedGoods (Id) Values (#comp('+c+'))');

    var t: IExternalQueryText;
    t := _externalQueryTextFactory.
         CreateText('select dbo.toComp(g.ID) as globalId, g.SHEADLINE# as name').
         AddString ('from ['+getLinkedServerName+']..[BTK].[BS_GOODS] g').
         AddString ('where g.ID in (select dbo.galnrec2sql(#MARKEDGOODS.F$Id) from #MARKEDGOODS)');

    rs := _externalQuery.GetResultSet(t);

    sqlDropTmpTable('MarkedGoods');
  }
  else    //если помеченные мц можно запихнуть в текст запроса
  {
    var t: IExternalQueryText;
    t := _externalQueryTextFactory.
         CreateText('select dbo.toComp(ID) as globalId, SHEADLINE# as name').
         AddString ('from openquery ('+getLinkedServerName+', ''SELECT ID, SHEADLINE# FROM BTK.BS_GOODS').
         AddString ('WHERE ID IN (');

    var c: comp;       c := 0;
    var s, s1: string; s := ''; s1 := '';

    if getmarker(lMarker, 0, c)
      s := string(c);

    var i: longint;    i := 1;
    while getmarker(lMarker, i, c)
    {
      s1 := ','+string(c);
      if (length(s)+length(s1) > 255)
      {
        t.AddString(s);
        s := '';
      }
      s+=s1;
      i++;
    }
    if (s!='')
      t.AddString(s);

    t.AddString(')'')');

    rs := _externalQuery.GetResultSet(t);
  }

  var ggc: IGlobalGoodsCollection;
  ggc := IGlobalGoodsCollection(new(GlobalGoodsCollection));

  if rs.getFirst = tsOk do
  {
    ggc.ClearCurrent;
    ggc.GoodsId   := rs.row.Val('globalId');
    ggc.GoodsName := rs.row.Val('name');
    ggc.doInsert;
  } while rs.getNext = tsOk;

  result := ggc;
}

end.
