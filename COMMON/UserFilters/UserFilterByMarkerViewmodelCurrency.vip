#include UserFilter.vih
#include UserFilterViewmodel.vih
#include Params.vih
#include GetKau.vih

#component "AGAT"

interface UserFilterByMarkerViewmodelCurrency;

create view
as select *
from klval, pick
where ((
  35 == pick.wlist
));

function IUserFilterMarkerViewmodel.Presentation: string;
{
  var lMarker: longint;
  lMarker := IUserFilterByMarker(_filter).Marker;

  var s: string = '';
  _loop klval where (foundmarker(lMarker, klval.nrec))
  {
    s += if(s='','','; ') + klval.SIMVOLV;
  }

  result := s;
}

function GetParam(aParams: IParams; aParamName: string; aDefaultValue: variant): variant;
{
  if aParams = nullref
    result := aDefaultValue
  else
    result := aParams.GetParam(aParamName, aDefaultValue);
}

function IUserFilterMarkerViewmodel.Pick(params: IParams = nullref): boolean;
{
  result := false;

  var isSingle: boolean;
  isSingle := boolean(GetParam(params, 'IsSingle', 0));

  var lMarker: longint;
  lMarker := IUserFilterByMarker(_filter).Marker;

  if isSingle
  {
    var c: comp;
    if runinterface(L_VAL::GetValKod, c) = cmDefault
    {
      clearmarker(lMarker);
      insertMarker(lMarker, c);
      IsSet  := true;
      result := true;
    }
  }
  else
  {
    if runinterface(L_VAL::GETSOMEVAL, 0) = cmDefault
    {
      clearmarker(lMarker);
      _loop pick
        insertmarker(lMarker, pick.crec);
      IsSet  := true;
      result := true;
    }
  }
}

end.
