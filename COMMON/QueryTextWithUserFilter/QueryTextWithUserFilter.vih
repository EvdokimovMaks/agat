#ifndef __QueryTextWithUserFilter__
#define __QueryTextWithUserFilter__

#include QueryText.vih
#include UserFilter.vih

#component "AGAT"

vipinterface JoinTableWithMarkerFilter(QueryTextDecorator);
public:
  constructor JoinTableWithMarkerFilter(aTableName : string;
                                        aFieldName : string;
                                        aFilter    : IUserFilterByMarker;
                                        aTableAlias: string = '';
                                        aOnClause  : ISqlString = nullref);
  destructor Done;
  procedure IQueryText.CreateJoin   (var sqlString: longint; params: IParams = nullref);
  procedure IQueryText.CreateWhere  (var sqlString: longint; params: IParams = nullref);
end;

vipinterface WhereFieldWithMarkerFilter(QueryTextDecorator);
public:
constructor WhereFieldWithMarkerFilter(aFilter    : IUserFilterByMarker;
                                       aFieldName : string);
  destructor Done;
  procedure IQueryText.CreateWhere  (var sqlString: longint; params: IParams = nullref);
end;

vipinterface WhereFieldWithPeriodFilter(QueryTextDecorator);
public:
  constructor WhereFieldWithPeriodFilter(filter: IUserFilterByPeriod; filteredFieldName: string);
  procedure IQueryText.CreateWhere  (var sqlString: longint; params: IParams = nullref);
end;

vipinterface WhereFieldWithBetweenDoubleFilter(QueryTextDecorator);
public:
  constructor WhereFieldWithBetweenDoubleFilter(filter: IUserFilterBetweenDoubles;
                                                filteredFieldName: string);
  procedure IQueryText.CreateWhere  (var sqlString: longint; params: IParams = nullref);
end;

#end
