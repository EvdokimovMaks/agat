#include QueryTextWithUserFilter.vih
#include QueryText.vih
#include UserFilter.vih

#component "AGAT"

interface WhereFieldWithPeriodFilter;

var
  _filter   : IUserFilterByPeriod;
  _fieldName: string;

constructor WhereFieldWithPeriodFilter(filter: IUserFilterByPeriod; filteredFieldName: string);
{
  _filter    := filter;
  _fieldName := filteredFieldName;
  result     := true;
}

function dateToSqlStrDate(d: date): string;
{
  result := '#date('+datetostr(d,'DD,MM,YYYY')+')'
}

procedure IQueryText.CreateWhere  (var sqlString: longint; params: IParams = nullref);
{
  inherited::CreateWhere(sqlString, params);
  if _filter.IsSet
  {
    sqlAddStr(sqlString, 'and ('+_fieldName+' between ');
    sqlAddStr(sqlString, dateToSqlStrDate(_filter.StartDate) + ' and');
    sqlAddStr(sqlString, dateToSqlStrDate(_filter.EndDate) + ')');
  }
}

end.
