#include QueryTextWithUserFilter.vih
#include QueryText.vih
#include UserFilter.vih

#component "AGAT"

interface WhereFieldWithBetweenDoubleFilter;

var
  _filter   : IUserFilterBetweenDoubles;
  _fieldName: string;

constructor WhereFieldWithBetweenDoubleFilter(filter: IUserFilterBetweenDoubles;
                                              filteredFieldName: string);
{
  _filter := filter;
  _fieldName := filteredFieldName;
  result := true;
}

procedure IQueryText.CreateWhere  (var sqlString: longint; params: IParams = nullref);
{
  inherited::CreateWhere(sqlString, params);
  if _filter.IsSet
  {
    sqlAddStr(sqlString, '('+_fieldName+' between ');
    sqlAddStr(sqlString, _filter.MinValue + ' and');
    sqlAddStr(sqlString, _filter.MaxValue + ')');
  }
}

end.
