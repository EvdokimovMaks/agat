#include ContractID.vih
#include Query.vih

#component "AGAT"

extensionpoint epappinit;

handler with replace RegisterGlobContractIDHelper on extensionPoint epAppInit
action
{

  RegisterGlobalIfc('ContractIDHelper');
  result := true;
}


interface ContractIDHelper;

var
  factory: ContractIDGetterFactory;

function GetContractID(getByKey: word; cRec: comp): string; cacheable;
{
  var ifc: IContractIDGetter;
  ifc := factory.Get(getByKey);
  if ifc != nullref
    result := ifc.GetContractID(cRec)
  else
    result := '';
}

sql query qGetKatstroyByContractId =
  select distinct topks.nrec
  from spkau
  join attrval on attrval.cattrnam = #comp(00010000000004CCh) and attrval.vcomp = spkau.nrec
  join katstroy ks on ks.nrec = attrval.crec
  join katstroy topks on topks.nrec = case when ks.cstroy = #comp(0) then ks.nrec else ks.cstroy end
  where spkau.kodgrkau = 10527 and spkau.name = :contractId
;

function GetKatstroyByContractId(contractId: string; katstroyMarker: longint = 0): longint;
{

  if trim(contractId) != ''
  {

    if katstroyMarker = 0
      katstroyMarker := InitMarker('', sizeOf(comp), 10, 100, false);

    var rs: IResultSet;
    rs := queryManager.createQuery(qGetKatstroyByContractId).setParam('contractId', contractId).getResultSet;

    if rs != nullref
      if rs.getFirst = tsOk do
      {
        InsertMarker(katstroyMarker, comp(rs.row.valAt(1)));
      } while rs.getNext = tsOk;

  }

  result := katstroyMarker;

}

end.
