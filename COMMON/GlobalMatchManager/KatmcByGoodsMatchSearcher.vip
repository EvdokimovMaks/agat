#include GlobalMatchManager.vih
#include ExternalQuery.vih
#include Query.vih

#component "AGAT"

#include GlobalConst.inc

interface KatmcByGoodsMatchSearcher;

var
  _idObjMappingType        : string;
  _idRefClass              : string;
  _externalQueryTextFactory: IExternalQueryTextFactory;
  _externalQuery           : IExternalQuery;

function getLinkedServerName: string;
{
  result := DEFAULT_GLOBAL_SERVER_NAME;
}

function IGlobalMatchSearcher.SearchMatch(args: tArgsArray): IResultSet;
{
  var goodsId: comp;
  goodsId := args[0];
  var t: IExternalQueryText;
  t := _externalQueryTextFactory.
       CreateText('select mc.f$nrec as katmcNrec,').
       AddString ('       mc.f$cgroupmc as groupmcNrec,').
       AddString ('       mc.f$ctype as typemcNrec,').
       AddString ('       mc.f$name as katmcName,').
       AddString ('       mc.f$barkod as katmcBarcode').
       AddString ('from openquery ('+getLinkedServerName+', '' ').
       AddString ('     select SIDEXTERNALOBJ as KatmcNrec').
       AddString ('     from BTK.AGT_OBJMAPPING mapping').
       AddString ('     where mapping.idobjmappingtype = '+_idObjMappingType+' and mapping.idrefclass = '+_idRefClass+' and mapping.IDREFOBJ='+string(goodsId)).
       AddString ('     '') gl').
       AddString ('join t$katmc mc on mc.f$nrec = dbo.toComp(gl.KatmcNrec)');
  result := _externalQuery.GetResultSet(t);
}

constructor Init;
{
  _idRefClass := DEFAULT_GLOBAL_MATCH_GOODS_IDREFCLASS;
  _idObjMappingType := DEFAULT_GLOBAL_MATCH_GOODS_IDOBJMAPPINGTYPE;
  result := loadvipref(_externalQueryTextFactory, 'AGAT::ExternalQueryTextFactory') and
            loadvipref(_externalQuery, 'AGAT::ExternalQuery');
}

property IdObjMappingType: string absolute _idObjMappingType;
property IdRefClass: string absolute _idRefClass;

end.
