#include DogovorHelper.vih
#include ExtClassEx.vih
#include SaldTune.vih
#include MtrFuncs.vih

#component "AGAT"

interface DogovorHelper;

#include SaldTune.var
#include MtrFuncs.var

create view
var
  _cDogovor: comp;
  _cFpKatImp: comp;
  _cStZD: comp;
as select
  Dogovor.Nrec
from
  Dogovor
 ,SpDocs SpDocsD
 ,SpecMtr SpecMtrD
 ,CalPlan
 ,SpDocs SpDocsC
 ,SpecMtr SpecMtrC
 ,Dogovor DopSogl
 ,FpKatImp
 ,FpImpRel
where ((
      _cDogovor      == Dogovor.Nrec

  and Dogovor.TiDk   == SpDocsD.TiDk
  and Dogovor.Nrec   == SpDocsD.cDoc

  and coSpDocs       == SpecMtrD.coTable
  and SpDocsD.Nrec   == SpecMtrD.cSpec

  and Dogovor.Nrec   == CalPlan.cDogovor
  and Dogovor.Direct == CalPlan.DirectMc

  and cgDoc_0403     == SpDocsC.TiDk
  and CalPlan.Nrec   == SpDocsC.cDoc

  and coSpDocs       == SpecMtrC.coTable
  and SpDocsC.Nrec   == SpecMtrC.cSpec

  and _cDogovor      == DopSogl.cDogovor

  and FPKATIMP_CODE_STZ2013_STZSTROY == FpKatImp.Code

  and _cFpKatImp     == FpImpRel.cMain
  and cgKau_StZ2013  == FpImpRel.ImpKodAn
  and _cStZD         == FpImpRel.cImpMean
));


function SetIGK(dogovorNrec: comp; igk: string): boolean;
{

  var ec: iExtClassEx99;

  igk := trim(igk);

  if igk = ''
    ec.DeleteClassVal(213, coDogovor, dogovorNrec);
  else
  {

    var igkOld: string;
    igkOld := ec.GetSegName(213, dogovorNrec);

    if igkOld <> igk
    {
      ec.DeleteClassVal(213, coDogovor, dogovorNrec);
      ec.LinkSegClass(coDogovor, dogovorNrec, 'Идентификатор государственного контракта', igk);
    }

  }

}


procedure OnAfterChangeStZ(dogovorNrec: comp);
{
  _cDogovor := dogovorNrec;
  if getfirst Dogovor != tsOk exit;
  if Dogovor.Direct != 2 exit;

  if _cFpKatImp = 0
    _cFpKatImp := if(getfirst FpKatImp = tsOk, FpKatImp.Nrec, comp(0));

  _cStZD := coGetAttrId(coDogovor, _cDogovor, ATTRNAM_NREC_DOGOVOR_STZ);
  var cStZ: comp = if(getfirst FpImpRel = tsOk, FpImpRel.cMean, comp(0));

  var vcSaldTune: comp = coGetTune('CELUCHFORMODUL.BUY');

  _loop SpDocsD
    if getfirst SpecMtrD = tsOk
      update current SpecMtrD set SpecMtrD.cKau[1] := cStZ;
    else
      oMTRFun.InsSpecMTR_Kau(coSpDocs, SpDocsD.nRec
                                     , vcSaldTune
                                     , comp(0)
                                     , cStZ
                                     , oTune.GetDefKauRef(vcSaldTune, 2)
                                     , oTune.GetDefKauRef(vcSaldTune, 3)
                                     , oTune.GetDefKauRef(vcSaldTune, 4)
                                     , oTune.GetDefKauRef(vcSaldTune, 5)
                                     , oTune.GetDefKauRef(vcSaldTune, 6)
                                     , oTune.GetDefKauRef(vcSaldTune, 7)
                                     , oTune.GetDefKauRef(vcSaldTune, 8)
                                     , oTune.GetDefKauRef(vcSaldTune, 9)
                            );

  _loop CalPlan
    _loop SpDocsC
      if getfirst SpecMtrC = tsOk
        update current SpecMtrC set SpecMtrC.cKau[1] := cStZ;
      else
        oMTRFun.InsSpecMTR_Kau(coSpDocs, SpDocsC.nRec
                                       , vcSaldTune
                                       , comp(0)
                                       , cStZ
                                       , oTune.GetDefKauRef(vcSaldTune, 2)
                                       , oTune.GetDefKauRef(vcSaldTune, 3)
                                       , oTune.GetDefKauRef(vcSaldTune, 4)
                                       , oTune.GetDefKauRef(vcSaldTune, 5)
                                       , oTune.GetDefKauRef(vcSaldTune, 6)
                                       , oTune.GetDefKauRef(vcSaldTune, 7)
                                       , oTune.GetDefKauRef(vcSaldTune, 8)
                                       , oTune.GetDefKauRef(vcSaldTune, 9)
                              );

  _loop DopSogl
    coSetAttrId(coDogovor, DopSogl.Nrec, ATTRNAM_NREC_DOGOVOR_STZ, _cStZD, ShowKau(cgKau_StZ2013, _cStZD));
}

end.
