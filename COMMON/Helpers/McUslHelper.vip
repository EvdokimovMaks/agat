#include McUslHelper.vih
#include Query.vih

#component "AGAT"

interface McUslHelper;

sql query queryGetUslPercentNds =
  select max(coalesce(spgrnal.nalog,0))
  from katusl
  left join grnal on grnal.nrec = katusl.cgrnal
  left join spgrnal on spgrnal.cgrnal = grnal.nrec
  where katusl.nrec = :KatuslNrec
;

sql query queryGetMcPercentNds =
  select max(coalesce(spgrnal.nalog,0))
  from katmc
  left join grnal on grnal.nrec = katmc.cgrnal
  left join spgrnal on spgrnal.cgrnal = grnal.nrec
  where katmc.nrec = :KatmcNrec
;

sql query queryGetMcDeflatorGroup =
  select coalesce(avGrDefl.vComp, #comp(0))
  from katmc
  left join attrval avGrDefl on avGrDefl.wtable = 1432 and
                                avGrDefl.crec = katmc.cgroupmc and
                                avGrDefl.cattrnam = #comp(0001000000000440h) and
                                katmc.cgroupmc <> #comp(0)
  where katmc.nrec = :KatmcNrec
;

var
  _qGetMcPercentNds: IQuery;
  _qGetUslPercentNds: IQuery;
  _qGetMcDeflatorGroup: IQuery;

function GetMcPercentNds(cMc: comp): double;
{
  if _qGetMcPercentNds = nullref
    _qGetMcPercentNds := queryManager.createQuery(queryGetMcPercentNds);

  result := _qGetMcPercentNds.setParam('KatmcNrec', cMc).getResultValue;
}

function GetUslPercentNds(cUsl: comp): double;
{
  if _qGetUslPercentNds = nullref
    _qGetUslPercentNds := queryManager.createQuery(queryGetUslPercentNds);

  result := _qGetUslPercentNds.setParam('KatuslNrec', cUsl).getResultValue;
}

function GetPercentNds(prMc: word; cMcUsl: comp): double;
{
  case prMc of
    1: result := GetMcPercentNds(cMcUsl);
    2: result := GetUslPercentNds(cMcUsl);
  else
    result := 0;
  end;
}

function GetMcDeflatorGroupNrec(cMc: comp): comp;
{
  if _qGetMcDeflatorGroup = nullref
    _qGetMcDeflatorGroup := queryManager.createQuery(queryGetMcDeflatorGroup);

  result := _qGetMcDeflatorGroup.setParam('KatmcNrec', cMc).getResultValue;
}

end.
