#include PlporHelper.vih
#include BasedocHelper.vih
#include ContractId.vih
#include RSHelper.vih
#include Query.vih

#component "AGAT"

interface PlporHelper;

sql query qSelectLinkedBasedoc =
  select distinct basedoc.nrec
  from basefin
  join basedoc on basedoc.nrec = basefin.cbasedoc or basedoc.nrec = basefin.cpredopldo
  where basefin.cplpor=:PlporNrec
;

var
  _basedocHelper: IBasedocHelper;
  _qLinkedBasedoc: IQuery;
  _contractIdHelper: ContractIDHelper;
  _rsHelper: RSHelper;

create view
as select *
from plpor;

create view vSetUIN
var
  _plporNrec: comp;
as select *
from plpor
where ((
  _plporNrec == plpor.nrec
));

procedure IPlporHelper.RecalcLinkedBasedocStatuses(aPlporNrec: comp; aExcludeBasefin: TCompArray);
{
  var rs: IResultSet;
  rs := _qLinkedBasedoc.setParam('PlporNrec', aPlporNrec).getResultSet;
  if _qLinkedBasedoc.errorCode = tsOk and rs != nullref
  {

    if rs.getFirst = tsOk do
    {
      _basedocHelper.RecalcBasedocStatus(rs.row.ValAt(1), aExcludeBasefin);
    } while rs.getNext = tsOk;

  }
}

type ttaxArray = array[1..10] of string;

function GetTaxArray(taxString: string): ttaxArray;
{
  var a: ttaxArray;
  var i, p: integer;
  for(i := 1; i<=count(a); i++)
  {
    p := pos(';', taxString+';');
    if p > 0
    {
      a[i] := substr(taxString, 1, p-1);
      taxString := substr(taxString,p+1,255);
    }
    else
      a[i] := '';
  }
}

function GetTaxString(a: ttaxArray): string;
{
  var s: string = '';
  var i: integer;
  for(i := 1; i<=count(a); i++)
    s += a[i] + ';';
  result := s;
}

procedure IPlporHelper.SetPlporUIN(aPlporNrec: comp);
{
  vSetUIN._plporNrec := aPlporNrec;
  if vSetUIN.getfirst plpor = tsOk
  {
    var cid: string;
    cid := _contractIdHelper.GetContractID(GetContractIDKey_ByPlpor, aPlporNrec);
    var a: ttaxArray;
    a := GetTaxArray(vSetUIN.plpor.tax);
    if a[9] != cid
    {
      a[9] := cid;
      vSetUIN.plpor.tax := GetTaxString(a);
      vSetUIN.update current plpor;
    }
  }
}

sql query qGetBasedocNrec =
  select top 1 bd.nrec
  from plpor
  join plpor plp on plp.tidk = plpor.tidk and plp.cplat = plpor.cplat and plp.namepl1 like '%проценты за период%'
  join soprhoz sh on sh.tipdoc = plp.tidk and sh.csoprdoc = plp.nrec
  join stepdoc sd on sd.nrec = sh.cstepdoc
  join basedoc bd on bd.nrec = sd.cbasedoc
  where plpor.nrec = :plporNrec
  order by plp.datvip desc
;

function IPlporHelper.DefineIncomePlporBasedocNrec(incomePlporNrec: comp): comp;
{

  result := 0;

  if getfirst plpor where (( incomePlporNrec == plpor.nrec )) = tsOk
  {

    if pos('проценты за период', plpor.namepl1) > 0 and plpor.tidkgal = 2
    {

      if getfirst katbank where (( plpor.cbankpol == katbank.nrec )) = tsOk
        if substr(katbank.mfo1, 1, 5) = '40702'
        {
          result := comp(0001000000009841h); //ДО №01689008 от 12/01/2012
          exit;
        }

      var rs: IResultSet;
      rs := queryManager.createQuery(qGetBasedocNrec).setParam('plporNrec', incomePlporNrec).getResultSet;

      if rs.getFirst = tsOk
        result := comp(rs.row.valAt(1));

    }

  }

}



constructor Init;
{
  result := getvipref(_basedocHelper, 'AGAT::BasedocHelper');
  _qLinkedBasedoc := queryManager.createQuery(qSelectLinkedBasedoc);
}

property BasedocHelper: IBasedocHelper absolute _basedocHelper;

end.
