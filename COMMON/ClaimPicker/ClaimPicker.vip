#include ClaimPicker.vih
#include Marker.vih

#component "AGAT"

interface ClaimPicker;

var
  _marker: IMarker(Marker) new;

create view
as select *
from indent brIndent, katnotes indentKatnotes, katpodr orderKatpodr, katpodr performKatpodr,
     claim brClaim, katmc, katusl, groupmc, groupusl, katotped,
     claim
where ((
  brIndent.cstate   == indentKatnotes.nrec and
  brIndent.corder   == orderKatpodr.nrec and
  brIndent.cperform == performKatpodr.nrec and
  brIndent.nrec     == brClaim.cIndent and
  brClaim.cmcusl    == katmc.nrec and
  brClaim.cmcusl    == katusl.nrec and
  brClaim.cgroup    == groupmc.nrec and
  brClaim.cgroup    == groupusl.nrec and
  brClaim.cOtpEd    == katotped.nrec
));

function isMC: boolean;
{
  result := brClaim.PrMC != 2;
}

window wPickClaim 'Выбор позиции заявки' escclose doaccept;

browse brwIndent;
  show(,,,12);
  table brIndent;
  fields
    indentKatnotes.sname 'Статус': [20], protect;
    orderKatpodr.name 'Заказчик': [40], protect;
    performKatpodr.name 'Исполнитель': [40], protect;
    brIndent.noind 'Номер': [10], protect;
    brIndent.descr 'Дескр': [6], protect;
end;

browse brwClaim;
  show(,13,,);
  table brClaim;
  fields
    brClaim.wPos ''#6'№'#13'':[2], protect, noautosize;
    if(isMC,'Т','У') '':[2], protect, noautosize;
    if(isMC, groupmc.name, groupusl.name) ''#6'Наименование'#6#13'группы': [30], protect;
    if(isMC, katmc.name, katusl.name) ''#6'Наименование'#6#13'ресурса': [30], protect;
    if(isMC, katmc.barkod, katusl.kod) ''#6'Номенклатурный'#6#13'номер': [20], protect;
    if(isMC, katmc.obozn, katusl.obozn) ''#6'Конструкторское'#6#13'обозначение': [20], protect;
    katotped.name ''#6'Ед.'#6#13'изм.':[5], protect;
    brClaim.kol ''#6'Кол-во': [8,3], protect;
end;

end; //window wPickClaim

window wPickClaimMulty 'Выбор позиций заявок' escclose doaccept;

browse brwIndentMulty;
  show(,,,12);
  table brIndent;
  fields
    indentKatnotes.sname 'Статус': [20], protect;
    orderKatpodr.name 'Заказчик': [40], protect;
    performKatpodr.name 'Исполнитель': [40], protect;
    brIndent.noind 'Номер': [10], protect;
    brIndent.descr 'Дескр': [6], protect;
end;

browse brwClaimMulty;
  show(,13,,);
  table brClaim;
  recMarker = _marker { brClaim.nrec };
  fields
    brClaim.wPos ''#6'№'#13'':[2], protect, noautosize;
    if(isMC,'Т','У') '':[2], protect, noautosize;
    if(isMC, groupmc.name, groupusl.name) ''#6'Наименование'#6#13'группы': [30], protect;
    if(isMC, katmc.name, katusl.name) ''#6'Наименование'#6#13'ресурса': [30], protect;
    if(isMC, katmc.barkod, katusl.kod) ''#6'Номенклатурный'#6#13'номер': [20], protect;
    if(isMC, katmc.obozn, katusl.obozn) ''#6'Конструкторское'#6#13'обозначение': [20], protect;
    katotped.name ''#6'Ед.'#6#13'изм.':[5], protect;
    brClaim.kol ''#6'Кол-во': [8,3], protect;
end;

end; //window wPickClaim

procedure SetClaimPosition(aClaimNrec: comp);
{
  if getfirst claim where ((aClaimNrec == claim.nrec)) = tsOk
    if getfirst brIndent where ((claim.cindent == brIndent.nrec)) = tsOk
      if getfirst brClaim where ((aClaimNrec == brClaim.nrec)) = tsOk {}
}

function IClaimPicker.PickSingle(defaultNrec: comp = 0): comp;
{

  if defaultNrec != comp(0) SetClaimPosition(defaultNrec);

  if runwindowmodal(wPickClaim) = cmDefault
    result := brClaim.nrec
  else
    result := 0;

}

function IClaimPicker.PickMulty(lMarker: longint): boolean;
{
  _marker.ImportFrom(lMarker);
  if runwindowmodal(wPickClaimMulty) = cmDefault
  {
    _marker.ExportTo(lMarker);
    result := true;
  }
  else
    result := false;

}

end.
