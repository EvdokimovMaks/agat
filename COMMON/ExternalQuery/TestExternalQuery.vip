#include ExternalQuery.vih

#component "AGAT"

interface TestExternalQuery;
table struct t ( globalid: string[20], name: string );

var tf: IExternalQueryTextFactory;
var ss: string;

create view as select * from t;

screen sc1;
show (,,,5);
fields
  ss: noprotect;
buttons
  cmDoOk, default;
  cmDoOk2;
<<
 <. test .>  <.test2 .>
 .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
>>
end;

browse br1;
show(,6,,);
table t;
fields
  t.globalid 'globalid': [20], protect;
  t.name 'name':[80], protect;
end;

handleevent
cminit:
{
  getvipref(tf, 'AGAT::ExternalQueryTextFactory');
}
cmDoOk2:
{
    var t1: IExternalQueryText;
  t1 := tf.CreateText('select top 100');
  //vaAddStr(0,'script script1;');
  //vaAddStr(0,'begin');
  //vaAddStr(0,'  sql procedure proc1(queryId: longint); { }');
  //vaAddStr(0,'end');
  //var h: longint;
  //h := vaCompile(0);
  //vaFreeSource(0);
  //if h = -1
  //  Message(vaErrorText)
}
cmDoOk:
{
  var t: IExternalQueryText;
//  t := tf.CreateText('select top 100 cast(a.SIDEXTERNALOBJ as varchar(20)) as NRec, cast(a.IDREFOBJ as varchar(20)) as GlobalID, g.SHEADLINE# as Name');
//  t.AddString('from [USELECT]..[BTK].[AGT_OBJMAPPING] a');
//  t.AddString('join [USELECT]..[BTK].[BS_GOODS] g on g.id = a.IDREFOBJ');
//  t.AddString('where a.idobjmappingtype=24746150001');
//  t.AddString('and a.idrefclass = 17372001');

  t := tf.CreateText('select top 32000 cast(g.ID as varchar(20)) as GlobalID, g.SHEADLINE# as Name');
  t.AddString('from [USELECT]..[BTK].[BS_GOODS] g');
  var eq: ExternalQuery;
  sqlCopyInto(eq.GetResultSet(t), #t, false);
  rereadrecord(#t);
}
end;
end.
