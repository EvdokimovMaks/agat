#include ExtAttrPicker.vih
#include ExtAttr.vih
#include CardHelper.vih

#component "F_PODOT"

//Докомпиляция интерфейса редактирования приказа на командировки
alter interface GETPRIKAZ;

overload
  Function PickSpPrikaz: boolean;
end;

extendformats scrEditPrikaz;

var
  _extAttrPicker: ExtAttrPicker;
  _extAttr: iExtAttr;
  _cardHelper: CardHelper;

//Добавляем к базовой вьюхе внешние атрибуты приказа на командировку
create view
as select _extAttr.sGetAttrID(coPrikaz, prikaz.nrec, ATTRNAM_NREC_PRIKAZ_ZAKAZ_ZATRAT) (fieldname = ZakazZatratFld),
          _extAttr.sGetAttrID(coPrikaz, prikaz.nrec, ATTRNAM_NREC_PRIKAZ_VID_RASHODOV) (fieldname = VidRashodovFld),
          _extAttr.sGetAttrID(coPrikaz, prikaz.nrec, ATTRNAM_NREC_PRIKAZ_KORPORATIVNAYA_KARTA) (fieldname = KartaFld)
;

//#region Overload

//При выборе сотрудника копируем номер корпоративной карты лицевого счета сотрудника
//в номер корпоративной карты приказа
Function PickSpPrikaz: boolean;
{
  if inherited::PickSpPrikaz
  {
    _extAttr.coSetAttrID(
      coPrikaz,
      prikaz.nrec,
      ATTRNAM_NREC_PRIKAZ_KORPORATIVNAYA_KARTA,
      _cardHelper.GetCardNrecByLschet(spprikaz.clsch),
      _cardHelper.GetCardValueByLschet(spprikaz.clsch)
    );

    rereadrecord(#prikaz);

    result := true;
  }
  else
    result := false;
}
//#endregion

//окно редактирования приказа
window wiPrikaz;
  //В скрин шапки приказа на командировку добавляем внешние атрибуты Вид расходов,
  //Заказ затрат, Корпоративная карта
  screen scrEditPrikaz ('', hcKassaIPrikaz, sci1378Esc);
  fields
    VidRashodovFld ('Вид расходов'): protect, pickbutton;
    ZakazZatratFld ('Заказ списания затрат на командировочные расходы'): protect, pickbutton;
    KartaFld ('Номер корпоративной пластиковой карты работника'): protect, pickbutton;
<<








`Вид расходов`.@@@@@@@@@@@@@@@ `Заказ затрат`.@@@@@@@@@@@@@@@ `Корпоративная карта`.@@@@@@@@@@@@@@@@@@@@@@@@@
>>
  end; //screen scrEditPrikaz

end; //window wiPrikaz

//#region Вспомогательные процедуры и функции

procedure PickZakazZatratFld;
{
  _extAttrPicker.PickExtAttr(coPrikaz, prikaz.nrec, ATTRNAM_NREC_PRIKAZ_ZAKAZ_ZATRAT);
  rereadrecord;
}

procedure ClearZakazZatratFld;
{
  _extAttr.DeleteValueID(coPrikaz, prikaz.nrec, ATTRNAM_NREC_PRIKAZ_ZAKAZ_ZATRAT);
  rereadrecord;
}

procedure PickVidRashodovFld;
{
  _extAttrPicker.PickExtAttr(coPrikaz, prikaz.nrec, ATTRNAM_NREC_PRIKAZ_VID_RASHODOV);
  rereadrecord;
}

procedure ClearVidRashodovFld;
{
  _extAttr.DeleteValueID(coPrikaz, prikaz.nrec, ATTRNAM_NREC_PRIKAZ_VID_RASHODOV);
  rereadrecord;
}

procedure PickKartaFld;
{
  _extAttrPicker.PickExtAttr(coPrikaz, prikaz.nrec, ATTRNAM_NREC_PRIKAZ_KORPORATIVNAYA_KARTA);
  rereadrecord;
}

procedure ClearKartaFld;
{
  _extAttr.DeleteValueID(coPrikaz, prikaz.nrec, ATTRNAM_NREC_PRIKAZ_KORPORATIVNAYA_KARTA);
  rereadrecord;
}
//#endregion

handleevent
  //обработка очистки заказа затрат, вида расходов, корпоративной карты
  cmDelOnProtect:
  {
    case curfield of
      #ZakazZatratFld: ClearZakazZatratFld;
      #VidRashodovFld: ClearVidRashodovFld;
      #KartaFld      : ClearKartaFld;
    else
      inherited::handleevent(cmPick);
    end;
  }

  //обработка выбора заказа затрат, вида расходов, корпоративной карты
  cmPick:
  {
    case curfield of
      #ZakazZatratFld: PickZakazZatratFld;
      #VidRashodovFld: PickVidRashodovFld;
      #KartaFld      : PickKartaFld;
    else
      inherited::handleevent(cmPick);
    end;
  }

  cmInit:
  {
    //Необходимо, чтобы интерфейс открывался в кадрах с отображением вкладок спецификации и т.п.
    //так же, как и в кассе. Отображение этих вкладок регулируется параметром typerun.
    //Устанавливаем его таким же, как в кассе.
    typerun := 0;
    inherited::handleevent(cmInit);
  }

end; //handleevent GETPRIKAZ

end.
