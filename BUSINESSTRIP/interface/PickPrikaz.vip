#include PickPrikaz.vih
#include QueryText.vih
#include Query.vih

#component "AGAT"

interface PickPrikaz;

table struct tPrikaz (
  nrec: comp,
  nodoc: string[100],
  ddoc: date,
  KatnotesName: string[100],
  Mesto: string,
  Name: string
) with index (
  i01 = ddoc + nodoc
);

var
  _filters: PickPrikazFilters noauto;
  _queryText: ISqlString;

create view
as select *
from tprikaz;

window wUI 'Выбор приказа на командировку' escclose, doaccept;
  browse brPrikaz ('Приказы на командировки', hcKassaIPrikazKomUd, sci14EnIns);
  table tprikaz;
  fields
    tPrikaz.NoDoc   'Номер'            ('Номер приказа на командировку')             : [10], Protect;
    tPrikaz.dDoc    'Дата'             ('Дата формирования приказа на командировку') : [10, 'DD/MM/YYYY'], Protect;
    tPrikaz.KatnotesName 'Статус'           ('Статус приказа на командировку')            : [10], Protect;
    tPrikaz.Mesto   'Место назначения' ('Место, куда командируются сотрудники')      : [30], Protect;
    tPrikaz.Name    'Содержание'       ('Содержание приказа на командировку')        : [30], Protect;
  end;
  handleevent
    cmInit: { Refresh; RefreshUI; }
    cmEdit: runinterfacenomodal(F_PODOT::GETPRIKAZ, true, 1, tPrikaz.nrec, 0);
  end;
end;

//#region IPickPrikaz

function IPickPrikaz.ShowUI: word;
{
  result := runwindowmodal(wUI);
}

procedure IPickPrikaz.RefreshUI;
{
  rereadrecord(#tprikaz);
}

procedure IPickPrikaz.Refresh;
{
  delete all tPrikaz;

  var s: longint = 0;
  _queryText.Create(s);

  var rs: IResultSet;
  rs := queryManager.createQuery(s).getResultSet;

  sqlCopyInto(rs, #tPrikaz, true);
}

property IPickPrikaz.SelectedPrikazNrec: comp read tprikaz.nrec;
property IPickPrikaz.Filters: PickPrikazFilters read _filters;

//#endregion

constructor Init;
{
  result := true;
  _filters := new(PickPrikazFilters);
  _filters.InitFilter;
  _queryText := ISqlString(new(PickPrikazQueryText, PickPrikazQueryText(_filters)));
}

destructor Done;
{
  _filters.DoneFilter;
}

end.
