#include PD_ObjectList.vih
#include PD_ObjectListIterator.vih

#component "PD_AGAT"

interface PD_ObjectList;

var
  _arr: array[0..0] of PD_IObject;
  _size: longint;

constructor _PD_Object(repo: PD_IObjectRepository);
{
  inherited::_PD_Object(repo);
  _size := 0;
  setLimit(_arr, 0);
  result := true;
}

procedure PD_IObject.free;
{
  inherited::free;
  var i: longint = 0;
  for(i := 0; i < _size; i++)
    freeDependency(_arr[i]);
}

function add(obj: PD_IObject): boolean;
{
  _arr[_size++] := obj;
  result := true;
}

function get(ind: longint): PD_IObject;
{
  result := _arr[ind];
}

function getSize: longint;
{
  result := _size;
}

function iterator: PD_IIterator;
{
  result := PD_IIterator(new(PD_ObjectListIterator, _PD_ObjectListIterator(self, 0)));
}

end.
