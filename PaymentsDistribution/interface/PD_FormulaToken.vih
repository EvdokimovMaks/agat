#ifndef __PD_FormulaToken_VIH__
#define __PD_FormulaToken_VIH__

#include PD_Cell.vih
#include PD_Context.vih

#component "PD_AGAT"

objInterface PD_IFormulaToken;
  function value(cell: PD_ICell; context: PD_IContext): string;
  procedure free;
end;

vipInterface PD_FormulaTokenChain implements PD_IFormulaToken;
public:
	constructor _PD_FormulaTokenChain(next: PD_IFormulaToken);
	function selfValue(cell: PD_ICell; context: PD_IContext): string;
end;

vipInterface PD_FormulaTokenConst(PD_FormulaTokenChain);
public:
  constructor _PD_FormulaTokenConst(s: string; next: PD_IFormulaToken);
  function selfValue(cell: PD_ICell; context: PD_IContext): string;
end;

vipInterface PD_FormulaTokenCurrentRowCell(PD_FormulaTokenChain);
public:
  constructor _PD_FormulaTokenCurrentRowCell(cellIndex: byte; next: PD_IFormulaToken);
  function selfValue(cell: PD_ICell; context: PD_IContext): string;
end;

vipInterface PD_FormulaTokenCell(PD_FormulaTokenChain);
public:
  constructor _PD_FormulaTokenCell(rowFname: string[20]; cellIndex: byte; next: PD_IFormulaToken);
  function selfValue(cell: PD_ICell; context: PD_IContext): string;
  procedure PD_IFormulaToken.free;
end;

vipInterface PD_FormulaParser;
public:
  function parse(s: string): PD_IFormulaToken;
end;

#end
