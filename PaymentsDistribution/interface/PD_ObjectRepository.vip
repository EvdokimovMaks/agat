#include PD_ObjectRepository.vih
#include PD_IObject.vih

#component "PD_AGAT"

interface PD_ObjectRepository;

var
  _objects: TPD_ObjectArray;
  _id: longint;

constructor init;
{
  _id := 0;
  setLimit(_objects, 0);
  result := true;
}

function add(obj: PD_IObject): longint;
{
  if obj != nullRef
  {
    _objects[++_id] := obj;
    result := _id;
  }
  else
    result := 0;
}

function get(id: longint): PD_IObject;
{
  result := _objects[id];
}

procedure freeObj(id: longint);
{
  if _objects[id] = nullRef exit;
  var o: PD_IObject = _objects[id];
  if o.id != 0
  {
    o.free;
    _objects[id] := nullRef;
    freeVipInterface(o);
  }
}

procedure freeAll;
{
  var i: longint = 0;
  for(i := 0; i < _id; i++) freeObj(i);
  _id := 0;
  setLimit(_objects, 0);
}

end.
