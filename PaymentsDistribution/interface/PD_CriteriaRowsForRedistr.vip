#include PD_Context.vih
#include PD_IIterator.vih
#include PD_ObjectList.vih

#component "PD_AGAT"

#include PD_Redistribute.vih
interface PD_CriteriaRowsForRedistr;

var
  _context: PD_IContext;
  _isKredit: boolean;

procedure add(objList: PD_ObjectList; toList: PD_ObjectList);
{
  if objList = nullRef exit;
  var i: PD_IIterator = nullRef;
  for(i := objList.iterator; i.hasNext; i.next)
  {
    var r: PD_IRow = PD_IRow(i.get);
    if r.isItog = false and r.isKredit = _isKredit and r.cAddSumTune != comp(0)
      toList.add(r);
    else
      add(r.children, toList);
  }
}

function meetCriteria(objList: PD_ObjectList): PD_ObjectList;
{
  if objList = nullref { result := nullref; exit; }
  var l: PD_ObjectList noAuto;
  l := new(PD_ObjectList, _PD_Object(_context.repo));
  add(objList, l);
  result := l;
}

constructor _PD_CriteriaRowsForRedistr(context: PD_IContext; isKredit: boolean = false);
{
  _context := context;
  _isKredit := isKredit;
  result := _context != nullref;
}

constructor Init;
{
  result := false;
}

end.
