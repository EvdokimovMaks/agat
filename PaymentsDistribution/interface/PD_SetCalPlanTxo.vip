#include Marker.vih
#include Query.vih
#include ExtAttr.vih
#include Dogovor.vih
#include PD_ChangeStatusTxo.vih
#include GetKau.vih
#include DogovorHelper.vih

#component "PD_AGAT"

interface PD_SetCalPlanTxo 'Контроль наличия проводок в ТПС по исполняемым ПКП расходных договоров' escClose;
show(,,180,);
table struct TmpCalPlan
(
  Nrec: comp
 ,cDogovor: comp
 ,cOrg: comp
 ,cDS: comp
 ,DDDoc: date
 ,DNoDoc: string[100]
 ,DDoc: date
 ,NoDoc: string[100]
 ,sZakaz: string
 ,Summa: double
)
with index
(
  IDX0 = DDDoc + DNoDoc + DDoc + NoDoc
);

table struct TmpZakaz (
  cCalPlan: comp
 ,Zakaz: string[20]
) with index (
  i01 = cCalPlan
);

var
  _chStatusTxo: PD_ChangeStatusTxo;
  _m: IMarker(Marker) new;
  _dogHelper: DogovorHelper;
#include ExtAttr.var
#include GetKau.var

create view
as select
  oExtAttr.sGetAttrID(coDogovor, DS.Nrec, ATTRNAM_NREC_DOGOVOR_STZ) (fieldname = DSStZFld)
from
  TmpCalPlan
 ,TmpZakaz
 ,CalPlan
 ,Dogovor
 ,KatOrg
 ,Dogovor DS
 ,AttrDog DSAttr
 ,MagOper
 ,HozOper
where ((
      TmpCalPlan.Nrec     == CalPlan.Nrec
  and TmpCalPlan.cDogovor == Dogovor.Nrec
  and TmpCalPlan.cOrg     == KatOrg.Nrec
  and TmpCalPlan.cDS      == DS.Nrec
  and TmpCalPlan.cDS      == DSAttr.cDogovor
  and 403                 == MagOper.TipDoc
  and TmpCalPlan.Nrec     == MagOper.cSoprDoc
  and PLANSSCH_NREC_TEHN  == MagOper.cPlansSch
  and MagOper.cHozOper    == HozOper.Nrec
))
bounds TmpZakazCP = TmpCalPlan.Nrec == TmpZakaz.cCalPlan
;

browse br1 (,,sci14Esc);
  show(,,,20);
  table TmpCalPlan;
  recmarker = _m {TmpCalPlan.Nrec};
  fields
    KatOrg.Name 'Контрагент': [30], protect;
    TmpCalPlan.DDDoc 'Дата договора': [10], protect;
    TmpCalPlan.DNoDoc 'Номер договра': [10], protect;
    [DSFld] DS.NoDoc + ' ' + DS.DDoc 'Доп.согл.': [10], protect, editButton;
    DSStZFld 'ДС Статья затрат': [10], protect;
    DSAttr.Subject1 'Предмет ДС': [10], protect;
    TmpCalPlan.DDoc 'Дата ПКП': [10], protect;
    TmpCalPlan.NoDoc 'Номер ПКП': [10], protect;
    TmpCalPlan.sZakaz 'Заказы': [10], protect;
    TmpCalPlan.Summa 'Сумма ПКП': [12,'\2p[|-]3666`666`666`666`666`666`666.88'], protect;
    HozOper.Name1 'ТХО': [30], protect;
end;

screen sc1(,,sci1Esc);
  show(,21,,) fixed_y;
  buttons
    cmOk, default;
<<
  <.Сформировать проводки.>
>>
end;

sql query qData =
select
  cp.Nrec,
  d2.Nrec as cDogovor,
  d2.cOrg as cOrg,
  d.Nrec as cDS,
  d2.dDoc as DDDoc,
  d2.NoDoc as DNoDoc,
  cp.dfrom as DDoc,
  cp.nodoc as NoDoc,
  cp.SummaSpec as Summa
from CalPlan cp
join Dogovor d on d.nrec = cp.cDogovor
left join Dogovor d1 on d1.Nrec = d.cDogovor
join Dogovor d2 on d2.Nrec = coalesce(d1.nrec, d.nrec)
outer apply (select count(*) as cnt
             from spdocs
             join specmtr on specmtr.cotable = 1723 and specmtr.cspec = spdocs.nrec
             where spdocs.tidk = 403 and spdocs.cdoc = cp.nrec and specmtr.cobj <> #comp(0) and specmtr.cobj <> #comp(4611969475094101269)
            ) t
where cp.DirectMc = 2 and cp.Status = 1 and coalesce(t.cnt, 0) > 0 and d.status <> 3
;

sql query qZakaz =
select distinct cp.Nrec as cCalPlan, SubString(ks.name, 1, InStr(' ', ks.name+' ', 1)-1) as Zakaz: string[20]
from CalPlan cp
join Dogovor d on d.nrec = cp.cDogovor
join SpDocs on SpDocs.tidk = 403 and SpDocs.cdoc = cp.Nrec
join specmtr on specmtr.cotable = 1723 and specmtr.cspec = spdocs.nrec
join katstroy ks on ks.nrec = specmtr.cobj
where cp.DirectMc = 2 and cp.Status = 1 and d.status <> 3
;

handleevent

  cmInit:
  {
    var q: IQuery = queryManager.createQuery(qData);
    sqlCopyInto(q, tnTmpCalPlan, true);

    var q1: IQuery = queryManager.createQuery(qZakaz);

    StartNewVisual(vtIndicatorVisual, vfTimer+vfBreak, 'Заполнение колонки Заказы', RecordsInTable(tnTmpCalPlan));
    sqlCopyInto(q1, tnTmpZakaz, true);

    AddBounds(tbTmpZakazCP);
    _loop TmpCalPlan
    {
      _loop TmpZakaz
        TmpCalPlan.sZakaz += TmpZakaz.Zakaz + ' ';
      if TmpCalPlan.sZakaz != '' update current TmpCalPlan;
      if not NextVisual break;
    }
    SubBounds(tbTmpZakazCP);
    StopVisual;
  }

  cmOk:
  {
    SubBounds(tbRMTmpCalPlan1);
    AddBounds(tbRMTmpCalPlan2);
    startnewvisual(vtIndicatorVisual, vfTimer + vfBreak, 'Формирование ТХО', _m.count);
    _loop _m
    {
      _chStatusTxo.process(403, TmpCalPlan.Nrec, 0, 281474976710821);
      if not nextvisual break;
    }
    SubBounds(tbRMTmpCalPlan2);
    AddBounds(tbRMTmpCalPlan1);
    stopvisual('', 0);
    RereadRecord(tnTmpCalPlan);
  }

  cmHotKeys:
    PutHotCommand(RunMenu('PD_AGAT::mnuPD_SetCalPlanTxo'));

  cmValue1:  //Установка статьи затрат
  {
    if _m.count = 0
    {
      Message('Не отмечено ни одной записи');
      exit;
    }
    var cStZ: comp = 0;
    if iGetKau.GetCodeKau(cgiPick, cgKau_StZ2013, cStZ) = 0 exit;
    var md: TPtr = InitMarker('', 8, 10, 10, true);
    SubBounds(tbRMTmpCalPlan1);
    AddBounds(tbRMTmpCalPlan2);
    startnewvisual(vtIndicatorVisual, vfTimer + vfBreak, 'Установка статьи затрат', _m.count);
    _loop _m
    {
      if not nextvisual break;
      if FoundMarker(md, TmpCalPlan.cDS) continue;
      InsertMarker(md, TmpCalPlan.cDS);
      oExtAttr.coSetAttrID(coDogovor, TmpCalPlan.cDS, ATTRNAM_NREC_DOGOVOR_STZ,
                           cStZ, ShowKau(cgKau_StZ2013, cStZ));
      _dogHelper.OnAfterChangeStZ(TmpCalPlan.cDS);
    }
    SubBounds(tbRMTmpCalPlan2);
    AddBounds(tbRMTmpCalPlan1);
    DoneMarker(md, '');
    stopvisual('', 0);
    RereadRecord(tnTmpCalPlan);
  }

  cmEdit:
  {
    case curfield of
      #DSFld:
      {
        RunInterfaceNoModal(L_Dogovor::Dogovor, 0, 0, 0, 0, TmpCalPlan.cDS, TmpCalPlan.cDS, IFilterDog(NullRef));
      }
    end;
  }

end;

end.

mnuPD_SetCalPlanTxo menu {
  - 'Установка статьи затртат', cmValue1;
}


VipInterface UserReport_SetCalPlanTxo Implements IUserReport licensed(free);
Interface UserReport_SetCalPlanTxo;
  create view dummy;
  procedure Run;
  begin
    runinterfacenomodal(PD_AGAT::PD_SetCalPlanTxo);
  end;

  function GetReportName: String;
  begin
    GetReportName := 'Контроль наличия проводок в ТПС по исполняемым ПКП расходных договоров';
  end;

  function GetGroupName (Level : Word) : String;
  begin
    if (Level = 1)
      GetGroupName := 'Распределение платежей'
    else
      GetGroupName := '';
  end;

  function GetPriority : Integer;
  begin
    GetPriority := 0;
  end;

  function VisibleInModule(Ind : Byte) : String;
  begin
    VisibleInModule := '';
    case Ind of
      1 : VisibleInModule := 'B_Finans';
    end;
  end;
end.
