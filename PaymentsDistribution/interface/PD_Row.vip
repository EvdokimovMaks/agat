#include PD_Row.vih

#component "PD_AGAT"

interface PD_Row;

var
  _parent: PD_IRow noAuto;
  _name: string;
  _code: string[40];
  _npp: string[20];
  _fname: string[20];
  _cAddSumTune: comp;
  _children: PD_ObjectList noAuto;
  _schema: PD_IRowSchema;
  _cellArr: Array [0..0] of PD_ICell;

constructor _PD_Object(repo: PD_IObjectRepository);
{
  result := inherited::_PD_Object(repo);
  _children := new(PD_ObjectList, _PD_Object(repo));
}

function setCell(col: byte; cell: PD_ICell): boolean;
{
  _cellArr[col] := cell;
  result := true;
}

function getCell(col: byte): PD_ICell;
{
  result := _cellArr[col];
}

procedure PD_IObject.free;
{
  inherited::free;
  freeDependency(_children);
  freeDependency(_schema);
  freeDependency(_parent);
  var i: byte = 0;
  for(i := 0; i < 20; i++)
    freeDependency(_cellArr[i]);
}

property parent: PD_IRow absolute _parent;
property name: string absolute _name;
property code: string[40] absolute _code;
property npp: string[20] absolute _npp;
property fname: string[20] absolute _fname;
property cAddSumTune: comp absolute _cAddSumTune;
property children: PD_ObjectList read _children;
property schema: PD_IRowSchema absolute _schema;

end.
