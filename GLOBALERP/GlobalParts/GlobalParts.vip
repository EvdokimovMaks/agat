#include GlobalParts.vih

#component "AGAT"

interface GlobalParts;

var
  _goods: IGlobalGoods;
  _parent: IGlobalParts;
  _children: ICollection;
  _qty: double;


constructor Init;
{
  _goods := IGlobalGoods(new(GlobalGoods));
  _parent := nullref;
  _children := ICollection(new(System::Collection));
  _qty := 0;
  result := true;
}

constructor GlobalParts(aGoods: IGlobalGoods; aParent: IGlobalParts = nullref; aQty: double = 0);
{
  _children := ICollection(new(System::Collection));
  _goods := aGoods;
  _parent := aParent;
  _qty := aQty;
}

function IGlobalParts.CreateChild(aGoods: IGlobalGoods = nullref; aQty: double = 0): IGlobalParts;
{
  if aGoods = nullref
    aGoods := IGlobalGoods(new(GlobalGoods));
  var newChild: IGlobalParts;
  newChild := IGlobalParts(new(GlobalParts, GlobalParts(aGoods, IGlobalParts(self), aQty)));
  _children.Add(newChild);
  result := newChild;
}

procedure IGlobalParts.AddChild(aChild: IGlobalParts);
{
  aChild.Parent := IGlobalParts(self);
  _children.Add(aChild);
}

function IGlobalParts.FullQty: double;
{
  result := if(_parent != nullref, _parent.FullQty, 1) * _qty;
}

property IGlobalParts.Goods: IGlobalGoods absolute _goods;
property IGlobalParts.Children: ICollection absolute _children;
property IGlobalParts.Parent: IGlobalGoods absolute _parent;
property IGlobalParts.Qty: double absolute _qty;

end.
