#include GlobalDataProviderMatches.vih
#include ExternalQuery.vih
#include Query.vih

#component "AGAT"

interface GlobalDataProviderMatches;

create view
as select *
from katmc;

function IGlobalDataProviderMatches.GetGoodsByKatmcNrec(aKatmcNrec: comp): IResultSet;
{
  var t: IExternalQueryText;
  t := _externalQueryTextFactory.
       CreateText('select goodsId, goodsName, measureId, measureName').
       AddString ('from openquery ('+getLinkedServerName+', '' ').
       AddString ('select goods.ID as goodsId, goods.SHEADLINE# as goodsName, goods.IdMeasureItem as measureId, measure.sShortName as measureName').
       AddString ('from BTK.AGT_OBJMAPPING mapping').
       AddString ('join BTK.BS_GOODS goods on mapping.IDREFOBJ = goods.ID').
       AddString ('left join BTK.MSR_MEASUREITEMMAP measure on measure.IDOBJECT=goods.IdMeasureItem').
       AddString ('where mapping.idobjmappingtype = 24746150001 and mapping.idrefclass = 17372001 and mapping.SIDEXTERNALOBJ='''''+string(aKatmcNrec)+'''''').
       AddString (' '') ');
  result := _externalQuery.GetResultSet(t);
}

function IGlobalDataProviderMatches.GetKatmcByGoodsId(aGoodsId: comp): IResultSet;
{
  var t: IExternalQueryText;
  t := _externalQueryTextFactory.
        CreateText('select mc.f$nrec as katmcNrec,                                                                                                                        ').
        AddString ('       mc.f$cgroupmc as groupmcNrec,                                                                                                                  ').
        AddString ('       mc.f$ctype as typemcNrec,                                                                                                                      ').
        AddString ('       mc.f$name as katmcName,                                                                                                                        ').
        AddString ('       mc.f$barkod as katmcBarcode                                                                                                                    ').
        AddString ('from (select mc.F$NREC,                                                                                                                               ').
        AddString ('             max(spo.F$DORD) as MAXDORD                                                                                                               ').
        AddString ('      from openquery ('+getLinkedServerName+', '' select SIDEXTERNALOBJ as KatmcNrec                                                                  ').
        AddString ('                                 from BTK.AGT_OBJMAPPING mapping                                                                                      ').
        AddString ('                                 where mapping.idobjmappingtype = 24746150001 and mapping.idrefclass = 17372001 and mapping.IDREFOBJ='+string(aGoodsId)).
        AddString ('                               ''                                                                                                                     ').
        AddString ('                     ) gl                                                                                                                             ').
        AddString ('      join T$KATMC mc on mc.F$NREC = dbo.toComp(gl.KatmcNrec)                                                                                         ').
        AddString ('      left join T$SPORDER spo on spo.F$SP=0 and spo.F$VIDORDER=0 and spo.F$CMC=mc.F$NREC                                                              ').
        AddString ('      group by mc.F$NREC) t                                                                                                                           ').
        AddString ('join T$KATMC mc on t.F$NREC = mc.F$NREC                                                                                                               ').
        AddString ('order by t.MAXDORD desc                                                                                                                               ');

  result := _externalQuery.GetResultSet(t);
}

function IGlobalDataProviderMatches.InsertMatch(aGoodsId: comp; aKatMcNrec: comp): integer;
{
  result := -1;
  if aGoodsId != 0 and aKatMcNrec != 0
  {
    var t: IExternalQueryText;
    t := _externalQueryTextFactory.
         CreateText('execute ( ''').
         AddString ('BEGIN').
         AddString ('BTK.AGT_GALAXYGATEPKG.CREATEGOODSMAPPING(''''').
         AddString (string(aKatmcNrec)+''''','+string(aGoodsId)+');').
         AddString ('END; '') at ' + getLinkedServerName);
//         CreateText('insert openquery ('+getLinkedServerName+', '' ').
//         AddString ('select IDOBJMAPPINGTYPE, IDREFCLASS, IDREFOBJ, SIDEXTERNALOBJ, SIDGALAXYGDSGROUP, SIDGALAXYGDSTYPE').
//         AddString ('from BTK.AGT_OBJMAPPING'')').
//         AddString ('values (24746150001, 17372001, '+string(aGoodsId)+', '''+string(aKatMcNrec)+''', ').
//         AddString ('        '''+string(aKatMcGroup)+''', '''+string(aKatMcType)+''')');
    result := _externalQuery.Execute(t).errorCode;

    update katmc where ((aKatmcNrec == katmc.nrec))
      set katmc.cmcmat := aGoodsId;

  }
}

function IGlobalDataProviderMatches.DeleteMatch(aKatmcNrec: comp): integer;
{
  result := -1;
  if aKatmcNrec != 0
  {
    var t: IExternalQueryText;
    t := _externalQueryTextFactory.
         CreateText('execute ( ''').
         AddString ('BEGIN').
         AddString ('BTK.AGT_GALAXYGATEPKG.DELETEGOODSMAPPING('''''+string(aKatmcNrec)+''''');').
         AddString ('END; '') at ' + getLinkedServerName);

    result := _externalQuery.Execute(t).errorCode;

    update katmc where ((aKatmcNrec == katmc.nrec))
      set katmc.cmcmat := 0;

  }
}

function IGlobalDataProviderMatches.UpdateMatch(aGoodsId: comp; aKatMcNrec: comp): integer;
{
  var rslt: integer;
  rslt := DeleteMatch(aKatmcNrec);
  result := InsertMatch(aGoodsId, aKatmcNrec);
  /*
  if aGoodsId != 0 and aKatMcNrec != 0
  {
    var t: IExternalQueryText;
    t := _externalQueryTextFactory.
         CreateText('update t').
         AddString ('set t.IDREFOBJ = '+string(aGoodsId)).
         AddString ('from openquery ('+getLinkedServerName+', '' ').
         AddString ('select IDREFOBJ from BTK.AGT_OBJMAPPING').
         AddString ('where mapping.idobjmappingtype = 24746150001 and mapping.idrefclass = 17372001 and mapping.SIDEXTERNALOBJ = '''''+string(aKatMcNrec)+''''') t');
    result := _externalQuery.Execute(t).errorCode;
  }
  */
}

function IGlobalDataProviderMatches.GetMeasure(aKatedNrec:comp): IResultSet;
{
  var t: IExternalQueryText;
  t := _externalQueryTextFactory.
       CreateText('select measureId, measureName').
       AddString ('from openquery ('+getLinkedServerName+', '' ').
       AddString ('select goods.IdMeasureItem as measureId, measure.sShortName as measureName').
       AddString ('from BTK.AGT_OBJMAPPING mapping').
       AddString ('left join BTK.MSR_MEASUREITEMMAP measure on measure.IDOBJECT=mapping.IDREFOBJ').
       AddString ('where mapping.idobjmappingtype = 24746150001 and mapping.idrefclass = 17372001 and mapping.SIDEXTERNALOBJ='''''+string(aKatedNrec)+'''''').
       AddString (' '') ');
  result := _externalQuery.GetResultSet(t);
}

function IGlobalDataProviderMatches.GetMeasureOtpedCoeff(aKatmcNrec: comp; aGlobalGoodsId: comp): IResultSet;
{
  var t: IExternalQueryText;
  t := _externalQueryTextFactory.
       CreateText('select oe.F$KOEF as Coeff').
       AddString ('from openquery('+getLinkedServerName+', ''').
       AddString ('    select om.sidexternalobj').
       AddString ('    from btk.bs_goods g').
       AddString ('    left join btk.agt_objmapping om on om.idobjmappingtype = 24746150001').
       AddString ('                                   and om.idrefclass = 16738001').
       AddString ('                                   and om.idrefobj = g.idmeasureitem').
       AddString ('    where g.Id='+string(aGlobalGoodsId)).
       AddString (''') t').
       AddString ('join T$KATOTPED oe on oe.F$PRMC = 1').
       AddString ('                  and oe.F$CMCUSL = dbo.toComp('+string(aKatmcNrec)+')').
       AddString ('                  and oe.F$CKATED = dbo.toComp(t.sidexternalobj)');
  result := _externalQuery.GetResultSet(t);
}

function IGlobalDataProviderMatches.GetMeasures(aGoodsId: comp): IResultSet;
{
  var t: IExternalQueryText;
  t := _externalQueryTextFactory.
       CreateText('select t.MeasureId, dbo.toComp(t.KatedNrec) as KatedNrec, t.nrate').
       AddString ('from openquery('+getLinkedServerName+', ''').
       AddString ('    select msr.Id as MeasureId, om.sidexternalobj as KatedNrec, gm.nrate').
       AddString ('    from btk.bs_goods g').
       AddString ('    join btk.bs_goodmsritem gm on gm.idgoodsandservice = g.id').
       AddString ('    join btk.msr_measureitem msr on msr.id = gm.idmsritem').
       AddString ('    join btk.agt_objmapping om on om.idobjmappingtype = 24746150001').
       AddString ('                              and om.idrefclass = 16738001').
       AddString ('                              and om.idrefobj = gm.idmsritem').
       AddString ('    where g.Id = '+string(aGoodsId)).
       AddString (''') t');
  result := _externalQuery.GetResultSet(t);
}

function IGlobalDataProviderMatches.GetAllMatches: IResultSet;
{
  var t: IExternalQueryText;
  t := _externalQueryTextFactory.
        CreateText('select dbo.toComp(KatmcNrec) as KatmcNrec, ').
        AddString ('       dbo.toComp(GoodsId) as GoodsId, ').
        AddString ('       GoodsName, ').
        AddString ('       dbo.toComp(MeasureId) as MeasureId, ').
        AddString ('       MeasureName,').
        AddString ('       oe.f$koef as MeasureCoeff').
        AddString ('from openquery('+getLinkedServerName+', ''').
        AddString ('  select mapping.SIDEXTERNALOBJ as katmcNrec,').
        AddString ('         goods.ID as goodsId,').
        AddString ('         goods.SHEADLINE# as goodsName,').
        AddString ('         goods.IdMeasureItem as measureId,').
        AddString ('         measure.sShortName as measureName,').
        AddString ('	       om.SIDEXTERNALOBJ as KatEdNrec').
        AddString ('  from BTK.AGT_OBJMAPPING mapping').
        AddString ('  join BTK.BS_GOODS goods on mapping.IDREFOBJ = goods.ID').
        AddString ('  left join BTK.MSR_MEASUREITEMMAP measure on measure.IDOBJECT=goods.IdMeasureItem').
        AddString ('  left join btk.agt_objmapping om on om.idobjmappingtype = 24746150001').
        AddString ('                                     and om.idrefclass = 16738001').
        AddString ('                                     and om.idrefobj = goods.idmeasureitem').
        AddString ('  where mapping.idobjmappingtype = 24746150001 and mapping.idrefclass = 17372001').
        AddString (''') t').
        AddString ('join T$KATOTPED oe on oe.F$PRMC = 1').
        AddString ('                  and oe.F$CMCUSL = dbo.toComp(t.katmcNrec)').
        AddString ('                  and oe.F$CKATED = dbo.toComp(t.KatedNrec)');
  result := _externalQuery.GetResultSet(t);
}

end.
