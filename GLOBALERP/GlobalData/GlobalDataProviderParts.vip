#include GlobalDataProviderParts.vih
#include ExternalQuery.vih
#include Query.vih

#component "AGAT"

interface GlobalDataProviderParts;

function IGlobalDataProviderParts.GlobalSpecsWithNameLike(aName: string): IResultSet;
{
  var t: IExternalQueryText;
  t := _externalQueryTextFactory.
       CreateText('select dbo.toComp(DocId) as DocId, DocName,').
       AddString ('       dbo.toComp(VersionId) as VersionId, VersionName,').
       AddString ('       dbo.toComp(GoodsId) as GoodsId, GoodsName').
       AddString ('from openquery ('+getLinkedServerName+', ''').
       AddString ('  select doc.Id as DocID, doc.sheadline# as DocName,').
       AddString ('         version.Id as VersionId, version.sheadline# as VersionName,').
       AddString ('         goods.Id as GoodsId, goods.sheadline# as GoodsName').
       AddString ('  from BTK.TD_CONSTRSPECIFICATION doc').
       AddString ('  join BTK.TD_SPECIFICATION version on version.idspecification=doc.id and version.idstate_mc=200').
       AddString ('  join BTK.BS_GOODS goods on goods.id = doc.idgoods').
       AddString ('WHERE UPPER(doc.sheadline#) like '+aName).
       AddString (  ' or UPPER(goods.sheadline#) like '+aName).
       AddString (''')');
  result := _externalQuery.GetResultSet(t);
}

function IGlobalDataProviderParts.GlobalSpecsPos(aDocId: comp; aParentId: comp; aVersionId: comp; aParentQty: double = 1): IResultSet;
{
  var t: IExternalQueryText;
  t := _externalQueryTextFactory.
       CreateText('select dbo.toComp('+string(aDocId)+') as DocId,').
       AddString ('       dbo.toComp('+string(aParentId)+') as ParentId,').
       AddString ('       dbo.toComp(SpecId) as SpecId,').
       AddString ('       dbo.toComp(GoodsId) as GoodsId,').
       AddString ('       GoodsName,').
       AddString ('       dbo.toComp(MeasureId) as MeasureId,').
       AddString ('       MeasureName,').
       AddString ('       cast('+string(aParentQty,0,6)+' as Float) as ParentQty,').
       AddString ('       cast(NormQty as float) as NormQty,').
       AddString ('       cast(NormQty as float) * '+string(aParentQty,0,6)+' as FullQty,').
       AddString ('       dbo.toComp(VersionId) as VersionId').
       AddString ('from openquery ('+getLinkedServerName+', ''').
       AddString ('select spec.Id as SpecId, goods.id as GoodsId, goods.sheadline# as GoodsName, v.Id as VersionId,').
       AddString ('       spec.IdMeasureItem as MeasureId, measure.sShortName as MeasureName, spec.nQuantity as NormQty').
       AddString ('  from BTK.TD_SPECPOSLIST spec').
       AddString ('  join BTK.BS_GOODS goods on goods.id = spec.IdGoods').
       AddString ('  left join BTK.MSR_MEASUREITEMMAP measure on measure.idboobj#=spec.IdMeasureItem').
       AddString ('  left join (select doc.IdGoods, max(version.Id) as Id').
       AddString ('             from BTK.TD_CONSTRSPECIFICATION doc').
       AddString ('             join BTK.TD_SPECIFICATION version on version.idspecification=doc.id and version.idstate_mc=200').
       AddString ('             group by doc.IdGoods').
       AddString ('            ) v on v.IdGoods = goods.Id').
       AddString ('  where spec.idSpecification = '+string(aVersionId)).
       AddString (''')');

  result := _externalQuery.GetResultSet(t);
}

end.
