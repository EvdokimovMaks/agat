#include GlobalMatch.vih
#include Params.vih
#include Query.vih
#include System.vih

#component "AGAT"

interface GoodsMatchCollectionFillerIndent;

sql query qSelect =
  select distinct claim.cmcusl as nrec
  from indent
  join claim on claim.cindent = indent.nrec and claim.prmc = 1
  where indent.nrec = :indentNrec
;

function GetParam(aParams: IParams; aName: string; aDefaultValue: variant): variant;
{
  if aParams = nullref
    result := aDefaultValue
  else
    result := aParams.GetParam(aName, aDefaultValue);
}

procedure IGoodsMatchCollectionFiller.FillCollection(aMatchesCollection: ICollection; aParams: IParams = nullref);
{
  if aMatchesCollection = nullref exit;

  var indentNrec: comp;
  indentNrec := GetParam(aParams, 'Nrec', 0);
  if indentNrec = 0 exit;

  var q: IQuery;
  q := queryManager.createQuery(qSelect).setParam('indentNrec', indentNrec);

  var rs: IResultSet;
  rs := q.getresultset;

  if rs != nullref
    if rs.getFirst = tsOk do
    {
      aMatchesCollection.Add(
        new(GoodsMatches, GoodsMatches(
          nullref,
          IMC(new(MC, LoadByNrec( rs.row.Val('nrec') )))
        ))
      );
    } while rs.getNext = tsOk;
}
end.
