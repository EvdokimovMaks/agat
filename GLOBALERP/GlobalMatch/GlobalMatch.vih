#ifndef _GlobalMatchManager_
#define _GlobalMatchManager_

#include GlobalGoods.vih
#include GlobalDataProviderMatches.vih
#include Query.vih
#include System.vih
#include Params.vih

#component "AGAT"

const
  MatchDirection_SearchGlobal = 001b;
  MatchDirection_SearchGalaxy = 010b;
  MatchDirection_DontSearch   = 100b;
end;

objinterface IMC;
  property Nrec       : comp;
  property Name       : string;
  property Code       : string[80];
  property KatedNrec  : comp;
  property GroupmcNrec: comp;
  property TypemcNrec : comp;
end;

objinterface IGoodsMatch;
  property Goods: IGlobalGoods;
  property MC: IMC;
end;

objinterface IGoodsMatches(IGoodsMatch);
  property MCCollection: ICollection;
end;

objinterface IMatchLoaderGoodsByMC;
  function LoadMatches(aMC: IMC): ICollection;
end;

objinterface IMatchLoaderMCByGoods;
  function LoadMatches(aGoods: IGlobalGoods): ICollection;
end;

objinterface IMatchLoaderMeasureByKated;
  function LoadMeasure(aKatedNrec: comp): IGlobalMeasure;
end;

objinterface IMatchSaver;
  function SaveMatches(aMatch: IGoodsMatch): boolean;
end;

objinterface IUIEditMatches;
  function ShowUI: longint;
  property MatchesList: IList;
  property MatchDirection: byte;
end;

objinterface IMatchesManager;
  procedure LoadMatches(aMatchesCollection: ICollection);
  function ShowUIEditMatches(aMatchesList: IList; aMatchDirection: byte = MatchDirection_SearchGlobal): longint;
  procedure SaveMatches(aMatchesCollection: ICollection);
end;

vipinterface MC implements IMC;
  public:
    constructor LoadByNrec(aKatmcNrec: comp);
end;

vipinterface GoodsMatch implements IGoodsMatch;
  public:
    function InitObjectsIfNull: boolean;
    constructor Init;
    constructor GoodsMatch(aGoods: IGlobalGoods = nullref;
                           aMC: IMC = nullref);
end;

vipinterface GoodsMatches(GoodsMatch) implements IGoodsMatches;
  public:
    function InitObjectsIfNull: boolean;
    constructor GoodsMatches(aGoods: IGlobalGoods = nullref;
                             aMC: IMC = nullref;
                             aMCCollection: ICollection = nullref);
end;

vipinterface MatchLoaderGoodsByMC implements IMatchLoaderGoodsByMC;
  public:
    constructor Init;
    constructor MatchLoaderGoodsByMC(aDataProvider: IGlobalDataProviderMatches);
    property DataProvider: IGlobalDataProviderMatches;
end;

vipinterface MatchLoaderMCByGoods implements IMatchLoaderMCByGoods;
  public:
    constructor Init;
    constructor MatchLoaderMCByGoods(aDataProvider: IGlobalDataProviderMatches);
    property DataProvider: IGlobalDataProviderMatches;
end;

vipinterface MatchLoaderMeasureByKated implements IMatchLoaderMeasureByKated;
  public:
    constructor Init;
    constructor MatchLoaderMeasureByKated(aDataProvider: IGlobalDataProviderMatches);
    property DataProvider: IGlobalDataProviderMatches;
end;

vipinterface MatchSaver implements IMatchSaver;
  public:
    constructor Init;
end;

vipinterface MatchesManager implements IMatchesManager;
  public:
    constructor Init;
    constructor MatchesManager(aMatchLoaderMCByGoods: IMatchLoaderMCByGoods = nullref;
                               aMatchLoaderGoodsByMC: IMatchLoaderGoodsByMC = nullref);
    property MatchLoaderMCByGoods: IMatchLoaderMCByGoods;
    property MatchLoaderGoodsByMC: IMatchLoaderGoodsByMC;
end;

VipInterface UIEditMatches implements IUIEditMatches;
  public:
    constructor Init;
    property MatchLoaderGoodsByMC: IMatchLoaderGoodsByMC;
end;

objinterface IGoodsMatchCollectionFiller;
  procedure FillCollection(aMatchesCollection: ICollection; aParams: IParams = nullref);
end;

vipinterface GoodsMatchCollectionFillerBasedoc implements IGoodsMatchCollectionFiller;
vipinterface GoodsMatchCollectionFillerKatsopr implements IGoodsMatchCollectionFiller;

#end
