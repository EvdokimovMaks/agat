#include GlobalMatch.vih

#component "AGAT"

interface MatchesManager;

var
  _matchLoaderMCByGoods: IMatchLoaderMCByGoods;
  _matchLoaderGoodsByMC: IMatchLoaderGoodsByMC;

function InitObjectsByDefaultIfNull: boolean;
{
  result := true;

  if _matchLoaderMCByGoods = nullref
    result := result and getvipref(_matchLoaderMCByGoods, 'AGAT::MatchLoaderMCByGoods');

  if _matchLoaderGoodsByMC = nullref
    result := result and getvipref(_matchLoaderGoodsByMC, 'AGAT::MatchLoaderGoodsByMC');
}

constructor Init;
{
  result := InitObjectsByDefaultIfNull;
}

constructor MatchesManager(aMatchLoaderMCByGoods: IMatchLoaderMCByGoods = nullref;
                           aMatchLoaderGoodsByMC: IMatchLoaderGoodsByMC = nullref);
{
  _matchLoaderMCByGoods := aMatchLoaderMCByGoods;
  _matchLoaderGoodsByMC := aMatchLoaderGoodsByMC;
  result := InitObjectsByDefaultIfNull;
}

property MatchLoaderMCByGoods: IMatchLoaderMCByGoods absolute _matchLoaderMCByGoods;
property MatchLoaderGoodsByMC: IMatchLoaderGoodsByMC absolute _matchLoaderGoodsByMC;

procedure IMatchesManager.LoadMatches(aMatchesCollection: ICollection);
{
  //Пройти в цикле по aMatchesCollection
  //На каждой итерации цикла получить элемент коллекции типа IGoodsMatches
  //Определить, в элементе не заполнен Goods или MC, в зависимости от этого
  //вызвать метод LoadMatches у _matchLoaderMCByGoods или _matchLoaderGoodsByMC
  //он возвращает коллекцию соответствий. Присвоить незаполненному элементу значение
  //из первого элемента возвращенной коллекции. Если осуществляетс поиск MC - присвоить
  //полю MCCollection значение коллекции, возвращаемой методом LoadMatches
}

function IMatchesManager.ShowUIEditMatches(aMatchesList: IList): longint;
{

}

procedure IMatchesManager.SaveMatches(aMatchesCollection: ICollection);
{

}
end.
