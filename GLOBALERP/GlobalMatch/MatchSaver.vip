#include GlobalMatch.vih
#include GlobalDataProviderMatches.vih
#include GlobalGoods.vih
#include System.vih

#component "AGAT"

interface MatchSaver;

var
  _searcher: IMatchLoaderGoodsByMC;
  _dataprovider: IGlobalDataProviderMatches;

function IMatchSaver.SaveMatches(aMatch: IGoodsMatch): boolean;
{
  result := false;
  var enum: IEnumerator;

  if aMatch.Goods != nullref and aMatch.MC != nullref and aMatch.Goods.GoodsId != 0 and aMatch.MC.Nrec != 0
  {
    enum := _searcher.LoadMatches(aMatch.MC).GetEnumerator;
    var foundgoods: IGlobalGoods;
    foundgoods := nullref;

    if enum.MoveNext then
      foundgoods := IGlobalGoods(enum.Current);

    if foundgoods != nullref
    {
      if foundgoods.GoodsId != aMatch.Goods.GoodsId
        result := _dataprovider.UpdateMatch(aMatch.Goods.GoodsId, aMatch.MC.Nrec) = tsOk;
    }
    else
      result := _dataprovider.InsertMatch(aMatch.Goods.GoodsId,
                                          aMatch.MC.Nrec,
                                          aMatch.MC.GroupmcNrec,
                                          aMatch.MC.TypemcNrec) = tsOk;
  }
}

function InitDefault: boolean;
{
  result := true;

  if _searcher = nullref
    result := result and getvipref(_searcher,'AGAT::MatchLoaderGoodsByMC');

  if _dataprovider = nullref
    result := result and getvipref(_dataprovider,'AGAT::GlobalDataProviderMatches');
}

constructor Init;
{
  result := InitDefault;
}

end.
