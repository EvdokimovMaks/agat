#include GlobalMatchManager.vih
#include ExternalQuery.vih
#include Query.vih

#component "AGAT"

interface KatmcByGoodsMatchSearcher_LastIncome;
function IGlobalMatchSearcher.SearchMatch(args: tArgsArray): IResultSet;
{
  var goodsId: comp;
  goodsId := args[0];
  var t: IExternalQueryText;
  t := _externalQueryTextFactory.
        CreateText('select mc.f$nrec as katmcNrec,').
        AddString ('       mc.f$cgroupmc as groupmcNrec,').
        AddString ('       mc.f$ctype as typemcNrec,').
        AddString ('       mc.f$name as katmcName,').
        AddString ('       mc.f$barkod as katmcBarcode').
        AddString ('from (select mc.F$NREC,').
        AddString ('             spo.F$DORD,').
        AddString ('             max(spo.F$DORD) over () as MAXDORD').
        AddString ('      from openquery (USELECT, '' select SIDEXTERNALOBJ as KatmcNrec').
        AddString ('                                 from BTK.AGT_OBJMAPPING mapping').
        AddString ('                                 where mapping.idobjmappingtype = '+_idObjMappingType+' and mapping.idrefclass = '+_idRefClass+' and mapping.IDREFOBJ='+string(goodsId)).
        AddString ('                               ''').
        AddString ('                     ) gl').
        AddString ('      join T$KATMC mc on mc.F$NREC = dbo.toComp(gl.KatmcNrec)').
        AddString ('      left join T$SPORDER spo on spo.F$SP=0 and spo.F$VIDORDER=0 and spo.F$CMC=mc.F$NREC) t').
        AddString ('join T$KATMC mc on t.F$NREC = mc.F$NREC').
        AddString ('where t.F$DORD = t.MAXDORD');

  result := _externalQuery.GetResultSet(t);
}
end.
