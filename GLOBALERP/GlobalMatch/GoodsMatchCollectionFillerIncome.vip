#include GlobalMatch.vih
#include Params.vih
#include Query.vih
#include System.vih

#component "AGAT"

interface GoodsMatchCollectionFillerIncome;

sql query qSelect =
  select distinct mc.nrec as KatmcNrec
  from katsopr k
  join spsopr sp on sp.CSOPR = k.nrec and sp.prmc = 1
  join katmc mc on mc.nrec = sp.cmcusl
  where k.vidsopr = 101 and k.dopr between :D1 and :D2
;

function GetParam(aParams: IParams; aName: string; aDefaultValue: variant): variant;
{
  if aParams = nullref
    result := aDefaultValue
  else
    result := aParams.GetParam(aName, aDefaultValue);
}

procedure IGoodsMatchCollectionFiller.FillCollection(aMatchesCollection: ICollection; aParams: IParams = nullref);
{
  if aMatchesCollection = nullref exit;

  var D1, D2: date;
  D1 := GetParam(aParams, 'D1', date(01,01,1990));
  D2 := GetParam(aParams, 'D2', date(01,01,1990));

  var q: IQuery;
  q := queryManager.createQuery(qSelect);
  q.setParam('D1', D1);
  q.setParam('D1', D2);

  var rs: IResultSet;
  rs := q.getresultset;

  if rs != nullref
    if rs.getFirst = tsOk do
    {
      aMatchesCollection.Add(
        new(GoodsMatches, GoodsMatches(
          nullref,
          IMC(new(MC, LoadByNrec( rs.row.Val('KatmcNrec') )))
        ))
      );
    } while rs.getNext = tsOk;
}
end.
