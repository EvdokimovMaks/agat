#include IdentAPI.vih

#component "F_PAT"

VipInterface IdApi_AG_DSQL Implements ObjIdentApiPlugin Licensed(free);

interface IdApi_AG_DSQL;

var
  _key: string;

procedure myLog(s: string);
{
  LogStrToFile('IdApi_AG_DSQL.log', s);
}

procedure myLogTxoApiInfoDoc(buf: TTxoApiInfoDoc);
{
  myLog('  buf.cSoprHoz = ' + string(buf.cSoprHoz,0,0));
  myLog('  buf.TiDkGal  = ' + buf.TiDkGal  );
  myLog('  buf.TiDk     = ' + buf.TiDk     );
  myLog('  buf.cSoprDoc = ' + string(buf.cSoprDoc,0,0));
  myLog('  buf.cHozOper = ' + string(buf.cHozOper,0,0));
  myLog('  buf.cPlansSch= ' + string(buf.cPlansSch,0,0));
  myLog('  buf.KodReg   = ' + buf.KodReg   );
  myLog('  buf.cObor    = ' + string(buf.cObor,0,0));
  myLog('  buf.DatOb    = ' + buf.DatOb    );
  myLog('  buf.cValut   = ' + string(buf.cValut,0,0));
  myLog('  buf.dBeginFp = ' + buf.dBeginFp );
  myLog('  buf.dEndFp   = ' + buf.dEndFp   );
}

//Инициализировать окно парметров ключа
function InitPluginWnd( TiDkGal, SysOper : word; Key : string ) : boolean;
{
  myLog('InitPluginWnd: TiDkGal=' + TiDkGal + '; SysOper=' + SysOper + '; Key=' + Key);
  _key := Key;
  result := true;
}

//генерация строки параметров [Param1:"Value1"][Param2:"Value2"]
function ParamGen : string;
{
  result := '';
}

//разбор массива параметров [Param1:"Value1"][Param2:"Value2"]
//(параметры уже предварительно разобраны калькулятором и переложены в массив )
function ParamParser( hTxo : longint; TiDkGal, SysOper : word ) : boolean;
{
  myLog('ParamParser: hTxo=' + hTxo + '; TiDkGal=' + TiDkGal + '; SysOper=' + SysOper);
  result := true;
}

//инициализация расчета -  срабатывает один раз при первом обращении к плагину
//во время разноске одного документа, закрытии одного счета, формирования одного FR отчета и т.п.
procedure InitCalculation (hTxo : longint; buf : TTxoApiInfoDoc);
{
  myLog('InitCalculation: hTxo=' + hTxo);
  myLogTxoApiInfoDoc(buf);
}

//конкретный расчет конкретных параметров
procedure MakeCalculation (hTxo : longint; buf : TTxoApiInfoDoc);
{
  myLog('MakeCalculation: hTxo=' + hTxo);
  myLogTxoApiInfoDoc(buf);

  // получим ссылку на Si сервер
  var hSiServ : TPtr = patRep_GetPatSiServ(hTxo);
  myLog('  hSiServ=' + hSiServ);
  // получим
  var filtersCount: longint = SiServ_GetFiltersCount(hSiServ);
  myLog(' SiServ_GetFiltersCount=' + filtersCount);
}

//завершение расчета -  срабатывает один раз после завершения всех расчетов
//при разноске одного документа, закрытии одного счета, формирования одного FR отчета и т.п.
procedure DoneCalculation (hTxo : longint; buf : TTxoApiInfoDoc);
{
  myLog('DoneCalculation: hTxo=' + hTxo);
  myLogTxoApiInfoDoc(buf);
}

end.

VipInterface IdApiReg_AG_DSQL Implements ObjIdentApiPluginRegistrator Licensed(Free);

interface IdApiReg_AG_DSQL;
procedure DoRegisterIdents;
{
  AddIdent('AG_DSQL', 'SQL-запрос', 'IdApi_AG_DSQL', '');
}
end.