#ifndef __AG_TZR_ZP_VIH__
#define __AG_TZR_ZP_VIH__

#component "AGAT"

objinterface AG_IZP;
  function First    : boolean;
  function Next     : boolean;
  property Nrec     : comp;
  property SchetO   : string[21];
  property SubOsSch : string[20];
  property SchetK   : string[21];
  property SubSchK  : string[20];
  property cStZ     : comp;
  property cPodgr   : comp;
  property cCateg   : comp;
  property cPodr    : comp;
  property cPerson  : comp;
  property KodSpO   : comp;
  property SumOb    : double;
  index idxNrec = Nrec;
end;

vipinterface AG_ZP implements AG_IZP;
public:
  constructor Create(dBeg: date; dEnd: date; sGroupBy: string = '');
end;

objinterface AG_ITZR_BaseKatSopr;
  function First    : boolean;
  function Next     : boolean;
  property Nrec     : comp;
  property DSopr    : date;
  property NSopr    : string[100];
  property sZakaz   : string[40];
  property cKatSopr : comp;
  property cZakaz   : comp;
  property SumOb    : double;
  property OrdSum   : double;
  property OrdSumAll: double;
  property KRZP     : double;
  property SumBase  : double;
  index idxNrec = Nrec;
  index idxSort = DSopr, NSopr, sZakaz;
end;

vipinterface AG_TZR_BaseKatSopr implements AG_ITZR_BaseKatSopr;
public:
  constructor Create(dBeg: date; dEnd: date);
  constructor Clone(src: AG_ITZR_BaseKatSopr);
end;

objinterface AG_ITZR_Base;
  function First   : boolean;
  function Next    : boolean;
  procedure IsklZakaz(ccZakaz: comp);
  property Nrec       : comp;
  property cZakaz     : comp;
  property sZakaz     : string[40];
  property KRZP       : double;
  property Summa      : double;
  property SumTotal   : double read;
  property BaseKatSopr: AG_ITZR_BaseKatSopr read;
  index idxNrec   = Nrec;
  index idxcZakaz = cZakaz;
  index idxsZakaz = sZakaz;
end;

vipinterface AG_TZR_Base implements AG_ITZR_Base;
public:
  constructor Create(dBeg: date; dEnd: date);
  constructor Clone(src: AG_ITZR_Base; isDeep: boolean = true);
end;

objinterface AG_ITZR_ZP;
  function  First: boolean;
  function  Next : boolean;
  property Nrec      : comp;
  property SchetO    : string[21];
  property SubOsSch  : string[20];
  property SchetK    : string[21];
  property SubSchK   : string[20];
  property cZakaz    : comp;
  property cStZ      : comp;
  property cPodgr    : comp;
  property cCateg    : comp;
  property cPodr     : comp;
  property KodSpO    : comp;
  property SumOb     : double;
  index idxNrec = Nrec;
end;

vipinterface AG_TZR_ZP implements AG_ITZR_ZP;
public:
  constructor Create(ZP: AG_IZP; Base: AG_ITZR_Base);
  constructor GroupByZakazStZKodSpO(TzrZP: AG_ITZR_ZP);
  destructor Done;
end;

type AG_TTZR_ZP_Report_Params = Record
  dBeg      : date;
  dEnd      : date;
  zp        : AG_IZP;
  base1     : AG_ITZR_Base;
  tzr_zp1   : AG_ITZR_ZP;
  base2     : AG_ITZR_Base;
  tzr_zp2   : AG_ITZR_ZP;
  mIsklZakaz: TPtr;
end;

vipinterface AG_TZR_ZP_Report;
public:
  procedure PrintXLT(sXLTFileName: string; isCreateXLT: boolean = false);
  constructor Create(p: AG_TTZR_ZP_Report_Params);
  destructor Done;
end;

#end
