#include ag_tzr_zp.vih

#component "AGAT"

interface AG_ZP;

table struct TmpZp (
  Nrec     : comp
, SchetO   : string[21]
, SubOsSch : string[20]
, SchetK   : string[21]
, SubSchK  : string[20]
, cStZ     : comp
, cPodgr   : comp
, cCateg   : comp
, cPodr    : comp
, cPerson  : comp
, KodSpO   : comp
, SumOb    : decimal[31,15]
) with index (
  i01 = Nrec (unique, surrogate)
);

var
  _dBeg: date;
  _dEnd: date;
  _sGroupBy: string;

create view
as select
  TmpZp.Nrec
from
  TmpZp
;

function First: boolean;
{
  result := getfirst TmpZp = tsOk;
}

function Next: boolean;
{
  result := getnext TmpZp = tsOk;
}

sql query qZP =
  select
    SchetO     as SchetO
  , SubOsSch   as SubOsSch
  , SchetK     as SchetK
  , SubSchK    as SubSchK
  , KauOs[2]   as cStZ
  , KauOs[3]   as cPodgr
  , KauOs[4]   as cCateg
  , KauKs[1]   as cPodr
  , KauKs[2]   as cPerson
  , KodSpO     as KodSpO
  , sum(SumOb) as SumOb
  from Oborot
  where
      SchetO = '820' and SubOsSch in ('03', '031')
  and SchetK = '870'
  and DatOb between :dBeg and :dEnd
  and KauOs[1] = #comp(0)
  and KodSpO = #comp(000100000001E778h) //61340-1 Отдел управления материальными потоками
  group by
    SchetO
  , SubOsSch
  , SchetK
  , SubSchK
  , KauOs[2]
  , KauOs[3]
  , KauOs[4]
  , KauKs[1]
  , KauKs[2]
  , KodSpO
;

function PrepareData: boolean;
{
  result := false;

  var s: longint = 0;
  if _sGroupBy = ''
    sqlAddStr(s, qZP);
  else
  {
    sqlAddStr(s, 'select ' + _sGroupBy + ', sum(SumOb) as SumOb');
    sqlAddStr(s, 'from (');
    sqlAddStr(s, qZP);
    sqlAddStr(s, ') t');
    sqlAddStr(s, 'group by ' + _sGroupBy);
  }

  var q: IQuery = queryManager.createQuery(s)
                              .setParam('dBeg', _dBeg)
                              .setParam('dEnd', _dEnd);
  sqlCopyInto(q, #TmpZp, true);

  result := true;
}

constructor Create(dBeg: date; dEnd: date; sGroupBy: string = '');
{
  _dBeg := dBeg;
  _dEnd := dEnd;
  _sGroupBy := trim(sGroupBy);
  result := PrepareData;
}

property Nrec     : comp           absolute TmpZp.Nrec    ;
property SchetO   : string[21]     absolute TmpZp.SchetO  ;
property SubOsSch : string[20]     absolute TmpZp.SubOsSch;
property SchetK   : string[21]     absolute TmpZp.SchetK  ;
property SubSchK  : string[20]     absolute TmpZp.SubSchK ;
property cStZ     : comp           absolute TmpZp.cStZ    ;
property cPodgr   : comp           absolute TmpZp.cPodgr  ;
property cCateg   : comp           absolute TmpZp.cCateg  ;
property cPodr    : comp           absolute TmpZp.cPodr   ;
property cPerson  : comp           absolute TmpZp.cPerson ;
property KodSpO   : comp           absolute TmpZp.KodSpO  ;
property SumOb    : double         absolute TmpZp.SumOb   ;

index idxNrec Auto;

end.
