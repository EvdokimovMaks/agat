#include BasedocReeReport.vih

#component "AGAT"

interface BasedocReeReport_Base;

sql query qSelect =
select case when bd.viddoc=111
            then 'ДО на предоплату закупок'
            else 'ДО на закупку'
       end as viddoc
       bd.ddoc as ddoc,
       bd.nodoc as nodoc,
        as bdds,
        as dform,
        as summa,
        as total,
        as sumopl,
        as sumdolg,
        as val,
        as statusopl,
        as dopl,
        as avans,
        as status,
        as ispoln,
        as dds,
        as bdr,
        as buhsch,
        as dsogl,
        as sogl,
        as soglinfo,
        as org,
        as bank,
        as bankrs,
        as init,
        as cfo,
        as zakaz,
        as contractId,
        as viddoc,
        as dognum,
        as dogdate,
        as procav,
        as nazn,
        as npp,
        as statusName,
        as statusComment
from tbd
join basedoc bd on bd.nrec = tbd.crec
;

function IBasedocReeReport.Title: string;
{
  result := '';
}

function IBasedocReeReport.PrintReport(lBasedocMarker: longint; params: IParams = nullref): boolean;
{


    var szakaz, scfo, _dds: string;
    StartNewVisual(vtRotateVisual, vfThread+vfTimer, 'Формирование отчета', 0);
    var _c: comp;
    if (not isCreateXLT) Set sXLSFileName := pXL.CreateReport(sXLTFileName, True)
                    else Set sXLSFileName := pXL.CreateXLT(sXLTFileName, True);
    pXL.CreateTbls(sXLSFileName);
    pXL.CreateTbl('Main');
    pXL.CreateTblFld('viddoc');
    pXL.CreateTblFld('ddoc'  );
    pXL.CreateTblFld('nodoc' );
    pXL.CreateTblFld('bdds'  );
    pXL.CreateTblFld('dform' );
    pXL.CreateTblFld('summa' );
    pXL.CreateTblFld('total' );
    pXL.CreateTblFld('sumopl');
    pXL.CreateTblFld('sumdolg');
    pXL.CreateTblFld('val'   );
    pXL.CreateTblFld('statusopl');
    pXL.CreateTblFld('dopl'  );
    pXL.CreateTblFld('avans' );
    pXL.CreateTblFld('status');
    pXL.CreateTblFld('ispoln');
    pXL.CreateTblFld('dds'   );
    pXL.CreateTblFld('bdr'   );
    pXL.CreateTblFld('buhsch');
    pXL.CreateTblFld('dsogl' );
    pXL.CreateTblFld('sogl'  );
    pXL.CreateTblFld('vbuh'  );
    pXL.CreateTblFld('vkaz'  );
    pXL.CreateTblFld('vpeu'  );
    pXL.CreateTblFld('vdir'  );
    pXL.CreateTblFld('pbuh'  );
    pXL.CreateTblFld('pkaz'  );
    pXL.CreateTblFld('ppeu'  );
    pXL.CreateTblFld('pdir'  );
    pXL.CreateTblFld('vrez'  );
    pXL.CreateTblFld('soglinfo');
    pXL.CreateTblFld('org'   );
    pXL.CreateTblFld('bank'  );
    pXL.CreateTblFld('bankrs');
    pXL.CreateTblFld('init'  );
    pXL.CreateTblFld('cfo'   );
    pXL.CreateTblFld('zakaz' );
    pXL.CreateTblFld('contractId');
    pXL.CreateTblFld('viddoc');
    pXL.CreateTblFld('dognum' );
    pXL.CreateTblFld('dogdate');
    pXL.CreateTblFld('procav');
    pXL.CreateTblFld('nazn');
    pXL.CreateTblFld('npp');
    pXL.CreateTblFld('statusName');
    pXL.CreateTblFld('statusComment');
    if (not isCreateXLT) {
      pushpos(#brbd);
      var _cnt, _npp: longint;
      _cnt := getmarkercount(mrkmain);
      _npp := 0;
      _loop brbd  where (_cnt=0 or foundmarker(mrkmain,brbd.nrec)) {
        _npp += 1;
        //выводим строки
        if getfirst brbasedoc = tsOk {};
        if getfirst brorg     = tsOk {};
        if getfirst brbank    = tsOk {};
        if getfirst brnote    = tsOk {};
        pXL.ClearTblBuffer;
        pXL.SetTblStringFldValue('npp'      , _npp);
        pXL.SetTblStringFldValue('ddoc'     , datetostr(brbd.ddoc,'DD.MM.YYYY'));
        pXL.SetTblStringFldValue('nodoc'    , brbd.nodoc                       );
        pXL.SetTblStringFldValue('viddoc'   , if(brbasedoc.viddoc=101, 'ДО на закупку', 'ДО на предоплату закупок'));
        pXL.SetTblStringFldValue('nazn'     , brbd.naznpl                      );
        pXL.SetTblStringFldValue('bdds'     , brbd.bdds                        );
        pXL.SetTblStringFldValue('dform'    , datetostr(brbd.dform,'DD.MM.YYYY'));
        pXL.SetTblNumberFldValue('summa'    , brbd.summa                       );
        pXL.SetTblNumberFldValue('total'    , brbd.total                       );
        pXL.SetTblNumberFldValue('sumopl'   , brbd.sumopl                      );
        pXL.SetTblNumberFldValue('sumdolg'  , round(brbd.total-brbd.sumopl,2)  );
        pXL.SetTblStringFldValue('statusopl', if(brbd.sumopl<=0,'Не оплачен', if(brbd.sumopl>=brbd.total,'Полностью оплачен', 'Частично оплачен')));

        _qOpl.setParam('basedocNrec', brbd.nrec);
        if _qOpl.execute.errorcode = tsOk
        {
          if _qOpl.fetch.errorCode = tsOk
          {
            pXL.AddTblStringFldValue('dopl', datetostr(_qOpl.row.Val('datob'),'DD.MM.YYYY'));
            while _qOpl.fetch.errorCode = tsOk
              pXL.AddTblStringFldValue('dopl', '; '+datetostr(_qOpl.row.Val('datob'),'DD.MM.YYYY'));
          }
        }

        pXL.SetTblStringFldValue('avans'    , brbd.avans                       );
        pXL.SetTblStringFldValue('status'   , brnote.name                      );
        pXL.SetTblStringFldValue('ispoln'   , brbd.ispoln                      );
        if pos(' ',brbd.dds) > 0 {
          _dds := replace(substr(brbd.dds,1,pos(' ',brbd.dds)), '.', '');
        } else {
          _dds := brbd.dds;
        }
        pXL.SetTblStringFldValue('dds'      , _dds                             );
        pXL.SetTblStringFldValue('bdr'      , brbd.bdr                         );
        pXL.SetTblStringFldValue('buhsch'   , brbd.buhsch                      );
        pXL.SetTblStringFldValue('dsogl'    , datetostr(brbd.dsogl,'DD.MM.YYYY'));
        pXL.SetTblStringFldValue('sogl'     , vizafld(brbd.sogl,brbd.daysogl)  );
        pXL.SetTblStringFldValue('vbuh'     , vizafld(brbd.vbuh,brbd.daybuh)   );
        pXL.SetTblStringFldValue('vkaz'     , vizafld(brbd.vkaz,brbd.daykaz)   );
        pXL.SetTblStringFldValue('vpeu'     , vizafld(brbd.vpeu,brbd.daypeu)   );
        pXL.SetTblStringFldValue('vdir'     , vizafld(brbd.vdir,brbd.daydir)   );

        pXL.SetTblStringFldValue('pbuh'     , ea.sGetAttrID(WT_BASEDOC, brbd.nrec, ATTRNAM_PBUH));
        pXL.SetTblStringFldValue('pkaz'     , ea.sGetAttrID(WT_BASEDOC, brbd.nrec, ATTRNAM_PKAZ));
        pXL.SetTblStringFldValue('ppeu'     , ea.sGetAttrID(WT_BASEDOC, brbd.nrec, ATTRNAM_PPEU));
        pXL.SetTblStringFldValue('pdir'     , ea.sGetAttrID(WT_BASEDOC, brbd.nrec, ATTRNAM_PDIR));

        pXL.AddTblStringFldValue('soglinfo' ,         GetBDReeExtAttrInfo('Передано на согл.    ', ATTRNAM_SOGL));
        pXL.AddTblStringFldValue('soglinfo' , chr(10)+GetBDReeExtAttrInfo('Казначейство         ', ATTRNAM_KAZN));
        pXL.AddTblStringFldValue('soglinfo' , chr(10)+GetBDReeExtAttrInfo('Бухгалтерия          ', ATTRNAM_BUH));
        pXL.AddTblStringFldValue('soglinfo' , chr(10)+GetBDReeExtAttrInfo('ПЭУ                  ', ATTRNAM_PEU));
        pXL.AddTblStringFldValue('soglinfo' , chr(10)+GetBDReeExtAttrInfo('Коммерческая дирекция', ATTRNAM_DIR));

        pXL.SetTblStringFldValue('vrez'     , vizafld(brbd.vrez,brbd.dayrez)   );
        pXL.SetTblStringFldValue('org'      , brorg.name                       );
        pXL.SetTblStringFldValue('bank'     , brbank.name                      );
        pXL.SetTblStringFldValue('bankrs'   , brbank.schet1                    );
        pXL.SetTblStringFldValue('zakaz'    , brbd.zakaz                       );

        if (getfirst brsd = tsOk)
          pXL.SetTblStringFldValue('contractId', _contractIDHelper.GetContractId(GetContractIDKey_ByStepdoc, brsd.nrec));

        pXL.SetTblStringFldValue('cfo'      , brbd.cfo                         );
        if getfirst brdog     = tsOk {
          pXL.SetTblStringFldValue('dognum' , brdog.nodoc                    );
          pXL.SetTblStringFldValue('dogdate', datetostr(brdog.ddoc,'DD.MM.YYYY'));
        }
        if getfirst brval     = tsOk {
          pXL.SetTblStringFldValue('val'    , brval.dollar);
        } else {
          pXL.SetTblStringFldValue('val'    , '');
        }
        pXL.SetTblStringFldValue('procav'   , if(brbasedoc.procopl>0,
                                                 brbasedoc.procopl,
                                                 if(brbd.total>0 and brbd.sumopl>0,
                                                    round(brbd.sumopl/brbd.total*100,2),
                                                    ''
                                                 )
                                              ) );
        if getfirst brnote = tsOk
          pXL.SetTblStringFldValue('statusName', brnote.name);
        else
          pXL.SetTblStringFldValue('statusName', '');

        if getlast brstatlog = tsOk
          pXL.SetTblStringFldValue('statusComment', brstatlog.comment);
        else
          pXL.SetTblStringFldValue('statusComment', '');

        pXL.InsTblRow;
      }
    }
    pXL.PublishTbl('Main');
    pXL.LoadReport(sXLSFileName);
    pXL.DisConnectExcel;
    poppos(#brbd);
    stopvisual('',0);
}

end.
