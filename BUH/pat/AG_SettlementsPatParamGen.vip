#include AG_SettlementsPatParam.vih

#component "AGAT"

interface AG_SettlementsPatParamGen 'Генератор строки параметров для Pat-алгоритма AG_ВЗАИМОРАСЧЕТЫ';

var
  _paramGen: string;
  _wResult: word;
  _wGroup: word;
  _sKatStroyFilterValue: string;

procedure refreshParamGen;
{
  _paramGen := '';
  if _wGroup > 0
    _paramGen += '[Группа:' + _wGroup + ']';
  _paramGen += '[Заказ:' + _sKatStroyFilterValue + ']';
  _paramGen += '[Рез:' + case(_wResult;
                           0: 'Оплата',
                           1: 'Отгрузка',
                           2: 'Аванс',
                           3: 'Постоплата',
                           4: 'ЗачетАванса',
                           5: 'ОтгрНДС',
                           6: 'ПостоплБезНДС',
                           7: 'ЗачАвБезНДС',
                           8: 'ПостоплНДС',
                           9: 'ЗачАвНДС'; '') + ']';
  set _paramGen := _paramGen;
}

screen scParamGen (,,sci1Esc);
  fields
    _paramGen: protect, centered, {font={bold=true;}};
    _wResult: [list 0 'Сумма оплат', 1 'Сумма поставок', 2 'Сумма аванса', 3 'Сумма постоплат', 4 'Сумма зачета аванса', 
                    5 'Сумма НДС поставок', 6 'Сумма постоплат без НДС', 7 'Сумма зачета аванса без НДС',
                    8 'Сумма постоплат НДС', 9 'Сумма зачета аванса НДС'];
    _sKatStroyFilterValue: NoProtect, {font={backcolor=if(Trim(_sKatStroyFilterValue) = '', colorNeed, 0);}};
    _wGroup: [list 0 'Все платежи', 1 'Платежи в рамках заказа', 2 'Платежи с других заказов', 3 'Привлечение ресурсов организации'];
<<
 .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

 `Результат`                .@@@@@@@@@@@@@@@@@@@@@@@@@@@
 `Пат-фильтр по заказам`    .@@@@@@@@@@@@@@@@@@@@@@@@@@@
 `Фильтр по группе платежей`.@@@@@@@@@@@@@@@@@@@@@@@@@@@
>>
end; // screen scParamGen

procedure refreshFields;
{
  ToggleFieldVisible(#_wGroup, _wResult != 1);

  if _wResult = 1
  {
    _wGroup := 0;
    HideLabel4Field(#_wGroup);
  }
  else
    ShowLabel4Field(#_wGroup);
}

handleevent

  cmCheckField:
  {
    case CurField of
      #_wResult: refreshFields;
    end;
    refreshParamGen;
  }

end;

function ParamGen: string;
{
  refreshParamGen;
  result := _paramGen;
}

function Init(TiDkGal: word; SysOper: word; Key: string): boolean;
{
  #__UNUSED__(TiDkGal, SysOper, Key)
  refreshParamGen;
  refreshFields;
  result := true;
}

end.
