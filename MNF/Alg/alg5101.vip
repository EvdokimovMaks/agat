/*
  Системный алгоритм 5101. Копирование ДО на закупку в ДО на
  предоплату закупок. Запускается из ДО на закупку.
*/

#component "M_MnPlan"
VipInterface Algoritm_5101 Implements oAlgoritm_Sys;
Interface Algoritm_5101 '' (,hcNoContext,) EscClose, Cyan;

  type tbasedoc  = record as table basedoc;
  type tstepdoc  = record as table stepdoc;
  type tspstep   = record as table spstep;
  type tspdocnal = record as table spdocnal;
  type tspecmtr  = record as table specmtr;

  var
    ea       : iextattr;
    newbd    : tbasedoc;
    newsd    : tstepdoc;
    newsps   : tspstep;
    newspn   : tspdocnal;
    newspm   : tspecmtr;

  create view
  var
    _cbasedoc: comp;
  as select *
  from basedoc bd, stepdoc sd, spstep sps, spdocnal spn, specmtr spm,
       basedoc, stepdoc, spstep, spdocnal, specmtr, soprhoz sh
  where ((
    _cbasedoc == bd.nrec and
    bd.nrec   == sd.cbasedoc and
    sd.nrec   == sps.cstepdoc and
    sps.nrec  == spn.cspdoc and
    word(1000+bd.viddoc) == spn.tipdoc and
    1104      == spm.cotable and
    sps.nrec  == spm.cspec
  ));

  Function RunInter(wflag: word; var pt: TRecAcc): boolean; {
    wflag := wflag;
    RunInter := false;
    _cbasedoc := pt.cpNrec;
    if getfirst bd = tsOk {
      var newviddoc: word;
      newviddoc      := bd.viddoc + 10;
      newbd          := bd.buffer;
      newbd.nrec     := 0;
      newbd.descr    := sgettune('USER.DESCR');
      newbd.desgr    := sgettune('USER.DESGR');
      newbd.viddoc   := newviddoc;
      newbd.specyes  := 1;
      newbd.procopl  := 100;
      newbd.cnote    := 40009D44C1790C6Bh;
      newbd.status   := 1;
      basedoc.buffer := tbasedoc(newbd);
      insert current basedoc;
      if getfirst sd = tsOk {
        newsd := sd.buffer;
        newsd.nrec := 0;
        newsd.cbasedoc := basedoc.nrec;
        stepdoc.buffer := tstepdoc(newsd);
        insert current stepdoc;
        _loop sps {
          newsps := sps.buffer;
          newsps.nrec := 0;
          newsps.cstepdoc := stepdoc.nrec;
          spstep.buffer := tspstep(newsps);
          insert current spstep;
          _loop spn {
            newspn := spn.buffer;
            newspn.nrec   := 0;
            newspn.cdoc   := basedoc.nrec;
            newspn.cspdoc := spstep.nrec;
            newspn.tipdoc := 1000+newviddoc;
            spdocnal.buffer := tspdocnal(newspn);
            insert current spdocnal;
          }
          if getfirst spm = tsOk {
            if getfirst specmtr where ((spm.csaldtune == specmtr.csaldtune and
                                        spm.cotable   == specmtr.cotable and
                                        spstep.nrec   == specmtr.cspec)) != tsOk
            {
              clearbuffer(#specmtr);
              specmtr.csaldtune := spm.csaldtune;
              specmtr.cotable   := spm.cotable;
              specmtr.cspec     := spstep.nrec;
              insert current specmtr;
            }
            specmtr.cobj := spm.cobj;
            specmtr.ckau[1] := spm.ckau[1];
            specmtr.ckau[2] := spm.ckau[2];
            specmtr.ckau[3] := spm.ckau[3];
            specmtr.ckau[4] := spm.ckau[4];
            specmtr.ckau[5] := spm.ckau[5];
            specmtr.ckau[6] := spm.ckau[6];
            specmtr.ckau[7] := spm.ckau[7];
            specmtr.ckau[8] := spm.ckau[8];
            specmtr.ckau[9] := spm.ckau[9];
            update current specmtr;
          }
        }
      }
      clearbuffer(#sh);
      sh.cdogovor    := basedoc.cdogovor;
      sh.cappdogovor := basedoc.cappdogovor;
      sh.cstepdoc    := stepdoc.nrec;
      sh.dvalcurse   := basedoc.dvalcurse;
      sh.csoprdoc    := basedoc.nrec;
      sh.tipdoc      := 43;
      sh.tidkgal     := 43;
      sh.nodoc       := basedoc.nodoc;
      sh.datob       := basedoc.ddoc;
      sh.descr       := basedoc.descr;
      sh.desgr       := basedoc.desgr;
      sh.summa       := basedoc.summa;
      sh.direct      := basedoc.direct;
      sh.ccalplan    := basedoc.ccalplan;
      sh.corg        := basedoc.corg;
      insert current sh;
      ea.copyattrid(1102, bd.nrec, basedoc.nrec, ATTRNAM_ISPOLN);
      ea.copyattrid(1102, bd.nrec, basedoc.nrec, ATTRNAM_BUHSCH);
      ea.copyattrid(1102, bd.nrec, basedoc.nrec, ATTRNAM_BDDS);
      ea.copyattrid(1102, bd.nrec, basedoc.nrec, ATTRNAM_BDR);
      ea.copyattrid(1102, bd.nrec, basedoc.nrec, ATTRNAM_DDS);
      ea.coSetAttrId(1102, basedoc.nrec, ATTRNAM_OSNDO, bd.nrec, if(getanykau(0,6,bd.nrec), givenanname(1),''))
      runinterfacenomodal(L_BASEDOC::VSCHETPB,basedoc.nrec);
    }
    RunInter := true;
  }

  function InitInter(var pt: TRecAcc): boolean; {
    pt.Posdel := pt.Posdel;
    InitInter := true;
  }

  Function DoneInter(var pt: TRecAcc): boolean; {
    pt.Posdel := pt.Posdel;
    DoneInter := true;
  }

  function GetNum: word; {
    GetNum := 5101;
  }

  function GetName: string; {
    GetName := 'Агат. Копирование ДО на закупку в ДО на предоплату закупок';
  }

  function GetMemo (st:oSteckCommonString): boolean; {
    GetMemo := true;
    st.push(string('Копирование ДО на закупку в ДО на предоплату закупок.'));
    st.push(string('Настроек не требуется.'));
    st.push(string('Запускается из ДО на закупку.'));
  }

  function GetNameInter: string; {
    GetNameInter := 'Algoritm_5101' ;
  }

  function GetNameInterPr: string; {
   GetNameInterPr := 'AlgoritmSetup_5101' ;
  }
end.

//------------------------------------------------------------------------------------------------------------

#component "M_MnPlan"
VipInterface AlgoritmSetup_5101 Implements oAlgoritmSetup;
Interface AlgoritmSetup_5101 '' (,hcNoContext,) EscClose;
 Function asInitInter(p_cFormPl: comp): boolean; {
   asInitInter := (p_cFormPl > 0);
 }

 Function asDoneInter: boolean; {
   asDoneInter := true;
 }

 Procedure asOnCmSetDefault; {
 }

 Procedure asOnSetWayAccou(p_cWayAccou: comp); {
   if p_cWayAccou > 0 { };
 }
end.

//------------------------------------------------------------------------------------------------------------
#component "AGAT"
interface agat_child_do_ree 'Подчиненные ДО' escclose, doaccept;
  var
    ea: iextattr;

  create view
  var
    cMainDO: comp;
  as select *
  from attrval av, basedoc bd
  where ((
    ATTRNAM_OSNDO == av.cattrnam and
    (cMainDO       = av.vcomp)   and
    av.crec       == bd.nrec
  ));
  parameters cMainDO;
  browse brmain (,,sci14Esc);
    table av;
    fields
      bd.nodoc 'Номер': [10], protect;
      bd.ddoc  'Дата' : [9], protect;
      bd.summa 'Сумма': [8,2], protect;
      ea.sGetAttrId(1102, bd.nrec, ATTRNAM_SOGL)   'На согласовании': [1], protect;
      ea.sGetAttrId(1102, bd.nrec, ATTRNAM_BUH)    'Виза бухгалтерии': [8], protect;
      ea.sGetAttrId(1102, bd.nrec, ATTRNAM_DIR)    'Виза дирекции': [8], protect;
      ea.sGetAttrId(1102, bd.nrec, ATTRNAM_KAZN)   'Виза казначейства': [8], protect;
      ea.sGetAttrId(1102, bd.nrec, ATTRNAM_PEU)    'Виза ПЭУ': [8], protect;
      ea.sGetAttrId(1102, bd.nrec, ATTRNAM_DDS)    'Статья ДДС': [5], protect;
      ea.sGetAttrId(1102, bd.nrec, ATTRNAM_ISPOLN) 'Исполнитель': [5], protect;
      ea.sGetAttrId(1102, bd.nrec, ATTRNAM_AVANS)  'Аванс/ок.расч': [5], protect;
      ea.sGetAttrId(1102, bd.nrec, ATTRNAM_BDDS)   'Бюджет/вне бюджета': [5], protect;
      ea.sGetAttrId(1102, bd.nrec, ATTRNAM_BUHSCH) 'Счет': [5], protect;
  end;
  procedure edit_cur_do; {
    if not isvalidall(#bd) exit;
    if bd.viddoc = 101 {
      runinterfacenomodal(L_BASEDOC::VSCHETB,bd.nrec);
    } else {
      runinterfacenomodal(L_BASEDOC::VSCHETPB,bd.nrec);
    }
  }
  handleevent
    cmdefault: {
      edit_cur_do;
    }
    cmedit: {
      edit_cur_do;
    }
    cminit: {
      if getfirst av <> tsOk {
        message('Счета не найдены');
        putcommand(cmDefault);
      }
    }
  end;
end.

//------------------------------------------------------------------------------------------------------------
#component "L_BASEDOC"
.LinkForm 'AGAT_PRBDOC_PODCH' Prototype is 'PRBDOC'
.Group 'Закупка'
.NameInList 'Агат. Реестр ДО на предоплату, привязанных к текущему счету'
.f 'NUL'
.{
.{ CheckEnter ISBASEFIN
.}
.{ CheckEnter ISEXCLASS
.}
.{ CheckEnter ISGROUP
.}
.{
.}
.begin
  runinterfacenomodal(AGAT::agat_child_do_ree, BaseDocNrec);
end.
.if DELIMITER
.else
.end
.}
.endform
