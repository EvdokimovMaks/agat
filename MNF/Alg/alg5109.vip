#include pwsConverter.vih

#component "M_MNPLAN"

VipInterface Algoritm_5109 Implements oAlgoritm_Sys;
Interface Algoritm_5109 '' (,hcNoContext,) EscClose, Cyan;
const
  STATUS_UTV = 00010000000000E2h;
end;
var
  _mnplanNrec: comp;       //Нрек документа, для которого выполняется алгоритм
  _converter: AGAT::PWSConverter new;
create view
as select *
from mnplan, sys_nar
where ((
  _mnplanNrec == mnplan.nrec
));

Function RunInter(wflag: word; var pt: TRecAcc): boolean;
{
  wflag := wflag;

  RunInter := false;
  //Находим в БД текущий документ
  _mnplanNrec := pt.cMnPlan;
  if (getfirst mnplan != tsOk)
  {
    message('Не найден текущий документ (pt.cpNrec='+pt.cpNrec+')', error);
    exit;
  }
  if mnplan.cstatus <> STATUS_UTV
  {
    message('Формирование сдельного бухгалтерского наряда доступно только в статусе "Утвержденный"');
    exit;
  }

  startnewvisual(vtRotateVisual, vfTimer, 'Формирование сдельного наряда', 0);
  var sys_nar_nrec: comp;
  sys_nar_nrec := _converter.ConvertToSysNar(pt.cMnPlan);
  stopvisual('',0);
  if getfirst sys_nar where ((sys_nar_nrec == sys_nar.nrec)) = tsOk
  {
    message('Сформирован "' + sys_nar.nmnem + '"');
    RunInterface(Z_MP::SYS_NAR, 2);
  }
  else
  {
    message('Формирование сдельного наряда завершено с ошибкой');
  }
  RunInter := true;
}

function InitInter(var pt: TRecAcc): boolean;
{
  result := true;
}

Function DoneInter(var pt: TRecAcc): boolean;
{
  pt.Position := pt.Position;
  DoneInter := true;
}

function GetNum: word;
{
  GetNum := 5109;
}

function GetName: string; {
  GetName := 'АГАТ. Перенос сдельных нарядов из ПланПроизв в ЗарПлат';
}

function GetMemo (st:oSteckCommonString): boolean; {
  GetMemo := true;
  st.push(string(''));
}

function GetNameInter: string; {
  GetNameInter := 'Algoritm_5109' ;
}

function GetNameInterPr: string; {
  GetNameInterPr := 'AlgoritmSetup_5109' ;
}
end.
