#include Cleverence.Warehouse.vih
#include olehelper.vih

#component "CLEVERENCE"

interface iDocument;

var
  _declaredItems: oCollection;
  _currentItems: oCollection;

function oDocument.SetObjectPointer(aObjectPointer: pointer): boolean;
{
  result := false;

  if not inherited::SetObjectPointer(aObjectPointer) exit;

  if _declaredItems != nullRef FreeVipInterface(_declaredItems);
  if _currentItems  != nullRef FreeVipInterface(_currentItems);

  result := true;
}

property Id: string
  read  _oleHelper.GetPropertyValue(_objectPointer, 'Id')
  write _oleHelper.SetPropertyValue(_objectPointer, 'Id', result);

property Barcode: string
  read  _oleHelper.GetPropertyValue(_objectPointer, 'Barcode')
  write _oleHelper.SetPropertyValue(_objectPointer, 'Barcode', result);

property Name: string
  read  _oleHelper.GetPropertyValue(_objectPointer, 'Name')
  write _oleHelper.SetPropertyValue(_objectPointer, 'Name', result);

property DocumentTypeName: string
  read  _oleHelper.GetPropertyValue(_objectPointer, 'DocumentTypeName')
  write _oleHelper.SetPropertyValue(_objectPointer, 'DocumentTypeName', result);

property CreateDate: string
  read  _oleHelper.GetPropertyValue(_objectPointer, 'CreateDate')
  write _oleHelper.SetPropertyValue(_objectPointer, 'CreateDate', result);

property WarehouseId: string
  read  _oleHelper.GetPropertyValue(_objectPointer, 'WarehouseId')
  write _oleHelper.SetPropertyValue(_objectPointer, 'WarehouseId', result);

property CurrentItems : oCollection read GetCustomCollection('CurrentItems',  'CLEVERENCE::iDocumentItemCollection', _currentItems,  'CLEVERENCE::iDocumentItem');

property DeclaredItems: oCollection read GetCustomCollection('DeclaredItems', 'CLEVERENCE::iDocumentItemCollection', _declaredItems, 'CLEVERENCE::iDocumentItem');

end.
