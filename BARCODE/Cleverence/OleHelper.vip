#include olehelper.vih

#component "UTILS"

interface iOleHelper;

function SetPropertyValue(olePointer: pointer; propertyName: string; propertyValue: variant): boolean;
{
  result := false;
  if (longint(olePointer) = 0) exit;
  result := OleCall1(olePointer, ocPut, propertyName, propertyValue);
}

function GetPropertyValue(olePointer: pointer; propertyName: string): variant;
{
  result := '';
  if (longint(olePointer) = 0) exit;
  var v: variant;
  if OleCall1(olePointer, ocGet, propertyName, v)
    result := v;
}

function SetOleObjectPointer(newObjectPointer: pointer; var objectPointer: pointer): boolean;
{
  result := false;

  var lObjectPointer: longint;
  lObjectPointer := longint(objectPointer);

  var lNewObjectPointer: longint;
  lNewObjectPointer := longint(newObjectPointer);

  if (lNewObjectPointer != 0)  //and (longint(objectPointer) = 0)
  {

    if lObjectPointer != 0 and lNewObjectPointer <> lObjectPointer
    {
      OleDestroy(lObjectPointer);
    }

    objectPointer := newObjectPointer;
    result := true;
  }
}

end.
