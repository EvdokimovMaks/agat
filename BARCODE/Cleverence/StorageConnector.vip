#include Cleverence.Warehouse.vih
#include olehelper.vih

#component "CLEVERENCE"

interface iStorageConnector;

constructor Init;
{
  result := false;

  if (not inherited::Init) exit;

  _try
  {
    _objectPointer := OleCreate('Cleverence.Warehouse.StorageConnector');
  }
  _except
    on exOleCantCreateObject:
    {
      message('Ошибка создания OLE-объекта Cleverence.Warehouse.StorageConnector (exOleCantCreateObject)', error);
      exit;
    }
    else
    {
      message('Неизвестное исключение при создании OLE-объекта Cleverence.Warehouse.StorageConnector', error);
      exit;
    }

  result := true;

}

function InitializeServerConnection(connectionString: string): boolean;
{
  result := OleCall1(_objectPointer, ocProc, 'InitializeServerConnection', connectionString);
}

function GetProducts: oProductsBook;
{
  result := oProductsBook(CreateObject('GetProducts', 'CLEVERENCE::iProductsBook'));
}

function GetDocuments(docType: string; checkForFinish: boolean): oCollection;
var collection: oCollection;
{
  result := nullref;

  var p: pointer;
  _try
  {
    OleCall3(_objectPointer, ocFunc, 'GetDocuments', docType, checkForFinish, p);
  }
  _except
  on exOleBadCall:
  {
    message(vipname(self)+'.GetDocuments:'#13''+ExploreException, error);
    exit;
  }
  else
  {
    message(vipname(self)+'.GetDocuments:'#13''+ExploreException, error);
    exit;
  }

  if not loadvipref(collection, 'CLEVERENCE::iDocumentCollection')
  {
    message(vipname(self)+': Ошибка инициализации iCollection', error);
    exit;
  }

  if not collection.SetObjectPointer(p)
  {
    message(vipname(self)+': Ошибка при вызове метода iDocumentCollection.SetObjectPointer', error);
    exit;
  }

  result := collection;
}

function GetEnvironment: oEnvironment;
{
  result := oEnvironment(CreateObject('GetEnvironment', 'CLEVERENCE::iEnvironment'));
}

function CreateProduct: oProduct;
{
  result := oProduct(CreateObject('CreateProduct', 'CLEVERENCE::iProduct'));
}

function CreatePacking: oPacking;
{
  result := oPacking(CreateObject('CreatePacking', 'CLEVERENCE::iPacking'));
}

function CreateFieldValue: oFieldValue;
{
  result := oFieldValue(CreateObject('CreateFieldValue', 'CLEVERENCE::iFieldValue'));
}

function CreateDocumentCollection: oCollection;
{
  var collection: oCollection;
  collection := oCollection(CreateObject('CreateDocumentCollection', 'CLEVERENCE::iDocumentCollection'));
  result := collection;
}

function CreateProductCollection: oCollection;
{
  var collection: oCollection;
  collection := oCollection(CreateObject('CreateProductCollection', 'CLEVERENCE::iCollection'));
  if collection != nullref
    collection.CollectionItemVipInterfaceName := 'CLEVERENCE::iProducts';
  result := collection;
}

function CreateWarehouseCollection: oCollection;
{
  var collection: oCollection;
  collection := oCollection(CreateObject('CreateWarehouseCollection', 'CLEVERENCE::iCollection'));
  if collection != nullref
    collection.CollectionItemVipInterfaceName := 'CLEVERENCE::iWarehouse';
  result := collection;
}

function CreateCellCollection: oCollection;
{
  var collection: oCollection;
  collection := oCollection(CreateObject('CreateCellCollection', 'CLEVERENCE::iCollection'));
  if collection != nullref
    collection.CollectionItemVipInterfaceName := 'CLEVERENCE::iCell';
  result := collection;
}

function CreateDocument: oDocument;
{
  result := oDocument(CreateObject('CreateDocument', 'CLEVERENCE::iDocument'));
}

function CreateDocumentItem: oDocumentItem;
{
  result := oDocumentItem(CreateObject('CreateDocumentItem', 'CLEVERENCE::iDocumentItem'));
}

function CreateWarehouse: oWarehouse;
{
  result := oWarehouse(CreateObject('CreateWarehouse', 'CLEVERENCE::iWarehouse'));
}

function CreateCell: oCell;
{
  result := oCell(CreateObject('CreateCell', 'CLEVERENCE::iCell'));
}

procedure SetProduct(aProduct: oProduct);
{
  SetObject('SetProduct', aProduct);
}

procedure SetDocuments(aDocumentCollection: oCollection);
{
  SetObject('SetDocuments', aDocumentCollection);
}

procedure SetWarehouses(aWarehouseCollection: oCollection);
{
  SetObject('SetWarehouses', aWarehouseCollection);
}

procedure SetProducts(aProductCollection: oCollection);
{
  SetObject('SetProducts', aProductCollection);
}

procedure RemoveDocument(documentId: string);
{
  _try
  {
    OleCall1(_objectPointer, ocProc, 'RemoveDocument', documentId);
  }
  _except
  on exOleBadCall:
  {
    message(vipname(self)+'.RemoveDocument:'#13''+ExploreException, error);
    exit;
  }
  else
  {
    message(vipname(self)+'.RemoveDocument:'#13''+ExploreException, error);
    exit;
  }
}

implementation oStorageConnector.SetObjectPointer abstract;

end.
