#include Cleverence.Warehouse.vih
#include olehelper.vih

#component "CLEVERENCE"

interface iProduct;

var
  _packingCollection: oCollection;
  _fieldValueCollection: oCollection;

function oProduct.SetObjectPointer(aObjectPointer: pointer): boolean;
{
  result := false;

  if not inherited::SetObjectPointer(aObjectPointer) exit;

  if _packingCollection != nullRef FreeVipInterface(_packingCollection);

  if _fieldValueCollection != nullRef FreeVipInterface(_fieldValueCollection);

  result := true;
}

property Barcode: string
  read  _oleHelper.GetPropertyValue(_objectPointer, 'Barcode')
  write _oleHelper.SetPropertyValue(_objectPointer, 'Barcode', result);

property BasePackingId: string
  read  _oleHelper.GetPropertyValue(_objectPointer, 'BasePackingId')
  write _oleHelper.SetPropertyValue(_objectPointer, 'BasePackingId', result);

property Id: string
  read  _oleHelper.GetPropertyValue(_objectPointer, 'Id')
  write _oleHelper.SetPropertyValue(_objectPointer, 'Id', result);

property Name: string
  read  _oleHelper.GetPropertyValue(_objectPointer, 'Name')
  write _oleHelper.SetPropertyValue(_objectPointer, 'Name', result);

property UnitId: string
  read  _oleHelper.GetPropertyValue(_objectPointer, 'UnitId')
  write _oleHelper.SetPropertyValue(_objectPointer, 'UnitId', result);

property UnitConvertionRate: double
  read  _oleHelper.GetPropertyValue(_objectPointer, 'UnitConvertionRate')
  write _oleHelper.SetPropertyValue(_objectPointer, 'UnitConvertionRate', result);

property Packings: oCollection read GetCollection('Packings', _packingCollection, 'CLEVERENCE::iPacking');
property Fields: oCollection read GetCollection('Fields', _fieldValueCollection, 'CLEVERENCE::iFieldValue');

end.
