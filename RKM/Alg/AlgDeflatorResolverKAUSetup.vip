#component "M_MnPlan"
VipInterface AlgoritmSetup_5107 Implements oAlgoritmSetup;
Interface AlgoritmSetup_5107 'Настройки расчета коэффициентов-дефляторов' (,hcNoContext,) EscClose, Doaccept;
show(,,91,10);
var
  iGetKau: getkau;
  cFormPl: comp;

create view
as select *
from Formpl, fptper, wayaccou
where ((
  cFormPl == formpl.nrec  and
  formpl.rescomp[2] == fptper.nrec and
  formpl.rescomp[3] == wayaccou.nrec
));

parameters cFormPl;

//Визуальные элементы-----------------------------------------------------------------------------------------

function GetDeflatorWayaccouName: string;
{
  result := if(getfirst wayaccou = tsOk, wayaccou.name, '');
}

function GetDeflatorPlanName: string;
{
  result := if(getanykau(1, 28, formpl.rescomp[1]),givenanname(1),'');
}

function GetDeflatorPlanFptperName: string;
{
  result := if(getfirst fptper = tsOk, fptper.name, '');
}

screen sc1;
fields
  [DeflatorWayaccouName]    GetDeflatorWayaccouName    : protect, pickbutton;
  [DeflatorPlanName]        GetDeflatorPlanName        : protect, pickbutton;
  [DeflatorPlanFptperName]  GetDeflatorPlanFptperName  : protect, pickbutton;
  formpl.resword[1]: [list 'Аналитика 1', 'Аналитика 2', 'Аналитика 3', 'Аналитика 4', 'Аналитика 5'];
  formpl.resword[2]: [list 'Поле 1', 'Поле 2', 'Поле 3', 'Поле 4', 'Поле 5', 'Поле 6', 'Поле 7', 'Поле 8', 'Поле 9', 'Поле 10', 'Поле 11', 'Поле 12', 'Поле 13', 'Поле 14'];
buttons
  cmDoOk, default;
  cmCancel;
<<

`Шаблон плана с коэффициентами-дефляторами`          .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
`План с коэффициентами-дефляторами`                  .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
`Тип периода планирования в плане с коэффициентами`  .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

`Поле спецификации плана со статьями формы РКМ`      .@@@@@@@@@@@@@@
`Поле коэффициента в представлении "Период"`         .@@@@@@@@@@@@@@

                                                              <. Сохранить .> <. Отмена .>
>>
end;

procedure pickDeflatorWayAccou;
{
  var c: comp;
  c := formpl.rescomp[3];
  if runinterface(M_MNPLAN::NASTRPL, 4, c, 1) = cmDefault
  {
    formpl.rescomp[3] := c;
    setmodified(true);
    rescanpanel(#formpl);
  }
}

procedure pickDeflatorPlan;
{
  var c: comp;
  c := formpl.rescomp[1];
  if iGetKau.GetCodeKAU(1, 28, c) > 0
  {
    formpl.rescomp[1] := c;
    setmodified(true);
    rescanpanel(#formpl);
  }
}

procedure pickDeflatorPlanFptper;
{
  var c: comp;
  c := formpl.rescomp[2];
  if runinterface(F_FPCATALOG::VIEWSPTPER, 5, 0, 0, c) = cmDefault
  {
    formpl.rescomp[2] := c;
    setmodified(true);
    rescanpanel(#formpl);
  }
}

handleevent

cmPick:
{
  case curfield of
    #DeflatorWayAccouName  : pickDeflatorWayAccou;
    #DeflatorPlanName      : pickDeflatorPlan;
    #DeflatorPlanFptperName: pickDeflatorPlanFptper;
  end;
}

cmDefault:
{
  startnewvisual(vtRotateVisual, vfTimer, 'Сохранение', 0);
  if (cFormpl != 0)
  {
    update current formpl;
  }
  stopvisual('',0);
}

cmInit:
{
  if getfirst formpl != tsok
  {
    stop;
    message('Не указан nrec настройки алгоритма (formpl.nrec=0)');
  }
}

cmDoOk:
{
  putcommand(cmDefault);
}

end;

//Реализация функций объектного интерфейса--------------------------------------------------------------------

Function asInitInter(p_cFormPl: comp): boolean;
{
  if p_cFormPl = 0 { }
  result := true;
}

Function asDoneInter: boolean;
{
  result := true;
}

Procedure asOnCmSetDefault; {
}

Procedure asOnSetWayAccou(p_cWayAccou: comp); {
 if p_cWayAccou > 0 { };
}
end.
