#include EditRKMParts.vih

#component "M_MNPLAN"

vipinterface iInterfSys_505 implements Util_ScrSp licensed(free);

interface iInterfSys_505;

var
  gldt            : GlobData;
  iom             : oMainVid;
  isg             : SetGetVid;
  insTbl          : InsertTblMnpl;
  iSetPl          : SetupMnf;
  iSetType        : TypeObjMnf;
  GetN            : Util_GetName;
  gKau            : OiWorkWithKAU;
  ium             : Util_Common;

  ifc             : AGAT::iEditRKMParts new;

create view
var
  _mnplanNrec: comp;
  _fptperNrec: comp;
as select *
from mnplan
where ((
  _mnplanNrec   == mnplan.nrec
));


embedded scMain interface ifc;
end;

//Реализация функций и методов Util_ScrSp---------------------------------------------------------------------
Function InitInter (pGldt: GLOBDATA; piOm: oMainVid): Boolean;
{
  result := false;

  gldt       := pGldt;
  iom        := piOm;
  isg        := iom.GetSetGetVid();
  insTbl     := pgldt.GetInsertTblMnpl();
  iSetPl     := pgldt.GetSetupMnf();
  iSetType   := pgldt.GetTypeObjMnf();
  GetN       := pgldt.uGetName();
  gKau       := pgldt.GetOiWorkWithKAU();
  ium        := pgldt.GetMainInter();

  //TODO: Тип периода планирования должен указываться в настройках интерфейса
  _fptperNrec := 000100000000000Dh;

  result := true;
}

Function DoneInter: Boolean;
{
  if (Not NullVipRef(gldt))
    FreeVipInterface(gldt);
  result := true;
}

procedure initIfc;
{
  if getfirst mnplan != tsok exit;
  var y1, y2: word;
  y1 := year(mnplan.startdate);
  y2 := year(mnplan.enddate);
  if y1 = 0 y1 := year(cur_date);
  if y2 = 0 y2 := y1;
  ifc.initinterface(y1, y2);
}

Function SetOwner (ccMnPlan: Comp): Boolean;
{
  result := false;

  _mnplanNrec := ccMnPlan;

  if (getfirst mnplan != tsOk)
  {
    message(''#3'iInterfSys_505.SetOwner: Ошибка установки курсора на документ', Error);
    exit;
  }

  if (Not iSetPl.InitAll(MnPlan.cWayAccou))
  {
    Message(''#3'Ошибка инициализации шаблона', Error);
    Exit;
  }

  initifc;
  ifc.load(_mnplanNrec);

  rereadrecord;
  result := true;
}

Procedure EventSetParVid (wFlag: Word);
{
  if wFlag = 0 { };
}

Function SetWindowVid (sp: String): Boolean;
{
  if (sp = '') { };
  result := true;
}

Function GetCurPos (var pWlist: Word): Comp;
{
  if (pWlist = 0) { }
  result := 0;
}

Procedure MySetColumnTitle;
{
}

Procedure FillHaveInReserv (Date2Q: Date);
{
  if (Date2Q <> Date2Q) { }
}

Function CheckEnableUseInterface (SysNumVid: Word; WayAccouNRec: Comp; NumVid_WayAccou: Comp; Flag: Word): Boolean;
{
  if ((SysNumVid = 0) and (WayAccouNRec = 0) and (NumVid_WayAccou = 0) and (Flag = 0)) { }
  result := true;
}

Function GetNameInter: String;
{
  result := 'iInterfSys_505';
}

Function GetNameInterPr: String;
{
  result := ''; //iInterfSetup_504
}

Function GetNum: Word;
{
  result := 10505;
}

Function GetName: String;
{
  result := 'Агат. Интерфейс редактирования Форм 3Д-6Д РКМ';
}

Function GetMemo (st: oSteckCommonString): Boolean;
{
  st.push('Интерфейс редактирования Форм 3Д-6Д РКМ');
  st.push('Представление период');
  result := true;
}

procedure refreshifc;
{
  if getfirst mnplan = tsOk
  {
    StartNewVisual(vtRotateVisual,vfTimer,'Обновление',0);
    ifc.Save(mnplan.nrec, _fptperNrec);
    initifc;
    ifc.Load(mnplan.nrec);
    StopVisual('',0);
  }
}

Function SetGetParam (var FlagParam: LongInt; var Direction: Word; var cValue: Comp; var dValue: Double; var lValue: LongInt; var wValue: Word; var dtValue: Date; var dttValue: DateTime; var sValue: s250): Boolean;
{
  result := true;
  if ((cValue > 0) and (dValue > 0) and (lValue > 0) and (wValue > 0) and (sValue = '') and (dtValue = dttValue)) { }

  //message ('SetGetParam: FlagParam='+FlagParam+', Direction='+Direction+', cValue='+cValue+
  //         ''#13', dValue='+dValue+', lValue='+lValue+', wValue='+wValue+
  //         ''#13', dtValue='+dtvalue+', dttValue='+dttValue+', sValue='+sValue);

  if (( Direction and 1) > 0)
  {
    case FlagParam of
      1, 1000, 10000:
      {
        initifc;
        if getfirst mnplan = tsOk
          ifc.Load(mnplan.nrec);
      }
      2:
      {
        refreshifc
      }
      15:
      {
        StartNewVisual(vtRotateVisual,vfTimer,'Сохранение',0);
        if getfirst mnplan = tsOk
          ifc.save(mnplan.nrec, _fptperNrec);
        StopVisual('',0);
      }
    end;

  }
}

end.
