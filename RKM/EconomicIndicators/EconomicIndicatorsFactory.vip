#include EconomicIndicators.vih

#component "AGAT"

interface EconomicIndicatorsFactory;

var
  _defaultEconomicIndicators: IEconomicIndicators;
  _eiWayAccouNrec: comp;

create view
as select *
from mnplan
where ((
  _eiWayAccouNrec == mnplan.cwayaccou
));

create view v
var
  _mnplanNrec: comp;
as select *
from objacct oa, mnplan mp
where ((
  4            == oa.typeown  and
  _mnplanNrec  == oa.cowner   and
  4            == oa.typeobj  and
  oa.cobject  /== mp.nrec and (mp.cwayaccou = _eiWayAccouNrec)
));

function InitDefaultEconomicIndicators: boolean;
{
  if getlast mnplan = tsOk
  {
    result := _defaultEconomicIndicators.InitEconomicIndicators(mnplan.nrec);
  }
  else
    result := false;
}

function NewDefaultEconomicIndicators: boolean;
{
  result := loadvipref(_defaultEconomicIndicators, 'AGAT::EconomicIndicators');
}

constructor Init;
{
  _eiWayAccouNrec := coGetTune('AGAT.RKM.ECOIND.WAY');
  result := NewDefaultEconomicIndicators;
}

function GetDefaultEconomicIndicators: IEconomicIndicators;
{
  if (_defaultEconomicIndicators = nullref)
    NewDefaultEconomicIndicators;

  if (_defaultEconomicIndicators != nullref)
    if (not _defaultEconomicIndicators.IsInitialized)
      InitDefaultEconomicIndicators;

  result := _defaultEconomicIndicators;
}

procedure SetDefaultEconomicIndicators(value: IEconomicIndicators);
{
  _defaultEconomicIndicators := value;
}

function GetForPlan(mnplanNrec: comp):IEconomicIndicators;
{
  result := DefaultEconomicIndicators;
  v._mnplanNrec := mnplanNrec;
  if v.getfirst oa = tsOk
    if v.getfirst mp = tsOk
    {
      var ei: IEconomicIndicators;
      if not loadvipref(ei, 'AGAT::EconomicIndicators') exit;
      if ei.InitEconomicIndicators(v.mp.nrec)
        result := ei
    }
}

property DefaultEconomicIndicators:IEconomicIndicators read GetDefaultEconomicIndicators write SetDefaultEconomicIndicators(result);


end.
