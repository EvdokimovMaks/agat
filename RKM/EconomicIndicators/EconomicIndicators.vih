#ifndef __EconomicIndicators__
#define __EconomicIndicators__

#component "AGAT"

#doc
<brief>Интерфейс определения значений экономических показателей</brief>
#end
objinterface IEconomicIndicators;
  #doc
  <brief>Инициализировать интерфейс получения экон. показателей</brief>
  Выполняется загрузка показателей из плана во временную таблицу
  #end
  function  InitEconomicIndicators(mnplanNrec: comp): boolean;
  #doc
  <brief>Получить значение показателя economicIndicatorNrec за год aYear</brief>
  #end
  function GetValue(aEconomicIndicatorNrec: comp; aYear: word): double;
  #doc
  <brief>Получить среднюю з/п за год aYear</brief>
  #end
  function GetMainSalary(aYear: word): double;
  #doc
  <brief>Получить процент доп. з/п за год aYear</brief>
  #end
  function GetExtraSalary(aYear: word): double;
  #doc
  <brief>Получить процент накладных расходов за год aYear</brief>
  #end
  function GetOverheads(aYear: word): double;
  #doc
  <brief>Получить процент соцотчислений за год aYear</brief>
  #end
  function GetSocialInsurance(aYear: word): double;
  #doc
  <brief>Получить процент профриска за год aYear</brief>
  #end
  function GetProRisk(aYear: word): double;
  #doc
  <brief>Получить процент прибыли за год aYear</brief>
  #end
  function GetProfit(aYear: word): double;
  #doc
  <brief>Получить количество рабочих часов за год aYear</brief>
  #end
  function GetHours(aYear: word): double;
  #doc
  <brief>Получить стоимость нормо-часа за год aYear</brief>
  #end
  function GetHourCost(aYear: word): double;

  property IsInitialized: boolean read;
end;

vipinterface EconomicIndicators implements IEconomicIndicators;
public:
  Constructor Init;
end;

objinterface IEconomicIndicatorsFactory;
  function GetForPlan(mnplanNrec: comp):IEconomicIndicators;
  property defaultEconomicIndicators:IEconomicIndicators;
end;

vipinterface EconomicIndicatorsFactory implements IEconomicIndicatorsFactory;
public:
  Constructor Init;
end;
#end
