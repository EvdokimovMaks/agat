#ifndef __oExplosion__
#define __oExplosion__

#include IModify.vih
#include Query.vih
#include QueryStr.vih

table struct tExplosion (
  Nrec       : longint,
  ParentNrec : longint,
  Type       : word,
  cRec       : comp,
  OtpedNrec  : comp,
  HdrpsNrec  : comp,
  Qty        : double,
  KauCode1   : word,
  KauNrec1   : comp,
  KauCode2   : word,
  KauNrec2   : comp,
  KauCode3   : word,
  KauNrec3   : comp
) with index (
  i00 = Nrec,
  i01 = Type + cRec,
  i02 = ParentNrec
);

#component "AGAT"

//------------------------------------------------------------------------------------------------------------
#doc
<brief>Коллекция МЦ для разузлования</brief>
#end
objinterface oItemsForExplosion;
  property Nrec: comp;         // #docl уникальный номер объекта коллекции
  property KatmcNrec: comp;    // #docl Nrec МЦ
  property HdrpsNrec: comp;    // #docl Nrec производственной спецификации
  property Qty: double;        // #docl количество
  index i01 = Nrec;
end;

vipinterface iItemsForExplosion implements oItemsForExplosion, iModify licensed(free);

//------------------------------------------------------------------------------------------------------------
#doc
<brief>Разузлование</brief>
<p>При выполнении разузлования и при возвращении результатов разузлования oExplosion формирует объекты запросов iQuery.
   Обработчики запроса выполняются после формирования запроса в oExplosion, перед его выполнением.
   Они нужны для добавления фильтров в запрос, добавления join'ов и т.п.
#end
objinterface oExplosion;
  #doc
  <brief>Добавляет мц в коллекцию для разузлования</brief>
  #end
  function  AddItemForExplosion(aKatmcNrec: comp; // #docl Nrec матценности
                                aHdrpsNrec: comp; // #docl ссылка на производственную спецификацию
                                aQty: double      // #docl количество для разузлования
                               ): boolean;        // #docl возвращает true, если добавление успешно
  #doc
  <brief>Очищает коллекцию для разузлования</brief>
  #end
  function ClearItemsForExplosion: boolean;       // #docl возвращает true при успешном выполнении

  #doc
  <brief>Запрос разузлования</brief>
  #end
  property ExplosionQueryStr: UTILS::oQueryStr;

  #doc
  <brief>Запрос выборки результата</brief>
  #end
  property ResultQueryStr: UTILS::oQueryStr;

  #doc
  <brief>Выполнить разузлование</brief>
  #end
  function Explosion: boolean;

  procedure ShowResultTable;
end;

vipinterface iExplosion implements oExplosion licensed(free);
  public: Constructor Init;
end;

//------------------------------------------------------------------------------------------------------------
#end
