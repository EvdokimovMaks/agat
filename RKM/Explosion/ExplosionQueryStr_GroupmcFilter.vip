#include ExplosionQueryStr.vih
#include Query.vih
#include QueryStr.vih
#include ExplosionQueryStr.vih

#component "UTILS"

interface iExplosionQueryStr_GroupmcFilter;

var
  _formplNrec: comp;
  _typerec   : word;

create view
as select *
from spformpl
where ((
  _formplNrec == spformpl.cformpl and
  _typerec    == spformpl.typerec
));

procedure CreateTmpTable(n: string);
{
  //Создаем временную таблицу с набором записей
  sqlDropTmpTable(n);
  sqlCreateTmpTable('table '+n+' ( cRec: comp) with index (i01 = cRec);', ctmNormal);

  //Готовим запрос для заполнения временной таблицы
  var q: IQuery;
  q := queryManager.createQuery('insert '+n+' (cRec) values (:cRec)');

  //Заполняем временную таблицу
  var i: integer;
  var c: comp;
  q.setParam('cRec', c);
  _loop spformpl
  {
    for(i := 1; i <= 20; i++)
    {
      if (spformpl.rescomp1[i] != 0)
      {
        c := if(spformpl.rescomp1[i] = -1, 0, spformpl.rescomp1[i]);
        q.execute;
      }
    }
    for(i := 1; i <= 10; i++)
    {
      if (spformpl.rescomp2[i] != 0)
      {
        c := if(spformpl.rescomp2[i] = -1, 0, spformpl.rescomp2[i]);
        q.execute;
      }
    }
  }
}

function GetTableName: string;
{
  result := 'tFormplGrmcFltr';
}

procedure Create(var l: longint);
{
  if (getfirst spformpl = tsOk)
  {
    CreateTmpTable(GetTableName);
    sqlAddStr(l, 'and psl.wdet = 4 and coalesce(katmc.cgroupmc,#comp(0)) in (select cRec from '+GetTableName+')');
  }
}

property FormplNrec: comp   absolute _formplNrec;
property Typerec   : word   absolute _typerec;
end.
