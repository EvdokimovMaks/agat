#include myVschetB.vih

#component "L_BASEDOC"

interface myVschetB;

procedure RefreshPanel;
{
  RescanPanel(#basedoc);
  RescanPanel(#spstep);
  RescanPanel(#katparty);
  RescanPanel(#saldtune);
}

function SetSpStepPrice(baseDocNrec: comp; spStepNrec: comp; dNewPrice: double): boolean;
{
  result := false;
  if SetPos(baseDocNrec)
    if getfirst SpStep where ((spStepNrec == SpStep.Nrec)) = tsOk
    {
      set SpStep.Price := dNewPrice;
      ChangePos(SpStep.cGrNal);
      update current SpStep;
      ModifDo;
      Result := true;
    }
}

end.

interface myVschetPB;

procedure RefreshPanel;
{
  SetFormat(scVschet2);
  RescanPanel(#basedoc);
  RescanPanel(#spstep);
  RescanPanel(#katparty);
  RescanPanel(#saldtune);
}

function CopyDOWithNoChecks(nRecDO      : comp;
                             naltype     : word;
                             NRecDog     : comp;
                             WithOutRes  : boolean;
                             ChargeParam : word;
                             NeedNomMes  : word = 0 ): comp;
{
  result := CopyDO(nRecDO, naltype, NRecDog, WithOutRes, ChargeParam, NeedNomMes);
}

procedure SetTotal(newTotalValue: double);
{
  var coeff: double = if(BaseDoc.Total = 0, 0, newTotalValue / BaseDoc.Total);
  var oldTotalValue: double = BaseDoc.Total;
  set BaseDoc.Total := newTotalValue;
  set BaseDoc.ProcOpl := 100 * BaseDoc.Total * if(BaseDoc.VhodNal = 1, 1, 1 - BaseDoc.NDS / oldTotalValue) / BaseDoc.Summa;
  GetTotalSkid(FALSE);
}

procedure SetNmbAndDate(newNoDoc: string; newDDoc: date);
{
  BaseDoc.NoDoc := newNoDoc;
  BaseDoc.dDoc := newDDoc;
  BaseDoc.dEnd := Add_Day(BaseDoc.dDoc, BaseDoc.KolDn);
  update current BaseDoc;

  if IsValidAll(tnStepDoc)
  {
    StepDoc.dStart := BaseDoc.dDoc;
    StepDoc.dEnd   := BaseDoc.dEnd;
    update current StepDoc;
  }

  UpDateDoSoprHoz;

  piOFPOut.OnChangeBaseDoc(TBaseDoc(BaseDoc.buffer), cgCom_BaseDocUpdate);
}

function SetSpStepPrice(baseDocNrec: comp; spStepNrec: comp; dNewPrice: double): boolean;
{
  result := false;
  if SetPos(baseDocNrec)
    if getfirst SpStep where ((spStepNrec == SpStep.Nrec)) = tsOk
    {
      set SpStep.Price := dNewPrice;
      ChangePos(SpStep.cGrNal);
      update current SpStep;
      ModifDo;
      Result := true;
    }
}

end.
