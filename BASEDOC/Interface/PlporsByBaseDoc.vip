#include PlporsByBaseDoc.vih
#include extattr.vih
#include MyKatSchet.vih
#include PlPorSimple.vih

#component "AGAT"

interface iPlatezh;

var
  ea: iextattr;
  ks: iPlanSchet;
  pl: F_PLPOR::PlPorSimple;
  SelectedDate: date;

//#region queries

sql query qLastPlporNumber =
  select top 1 nodok
  from plpor
  where tidkgal = :tidkgal and year(datetime(datvip,0)) = :year
  order by datvip desc, nodok desc
;

sql query qPlatezh =
  select ko.kodplatnds    as KPP,
         bd.nrec          as BaseDocNrec,
         bd.viddoc        as BaseDocViddoc,
         bd.name          as BaseDocName,
         bd.nodoc         as Nodoc,
         bd.ddoc          as DateDoc,
         bd.CMYBANK       as CMYBANK,
         bd.cgrotpr       as cgrotpr,
         bd.cgrpol        as cgrpol,
         bd.CTRANSP       as CTRANSP,
         bd.CBANK         as CBank,
         bd.CORG          as Cpol,
         bd.CDOGOVOR      as CDogovor,
         bd.CAPPDOGOVOR   as CAPPDOGOVOR,
         coalesce(avOsnDO.vcomp,#comp(0)) as OsnBasedocNrec,
         avOsnDO.vstring  as sOsnDO,
         coalesce(osndoStepdoc.nrec,#comp(0)) as OsnStepdocNrec,
         coalesce(cp.directplat, 0)  as CalplanDirectplat,
         coalesce(cp.nrec, #comp(0)) as CalplanNrec,
         naz.vcomp        as aNaznach,
         naz.vstring      as Naznach,
         sd.nrec          as StepDocNrec,
         viz.vcomp        as VizaPEU,
         viz.vstring      as sVizaPEU,
         aAVANS.vcomp     as aAVANS,
         aAVANS.vstring   as sAVANS,
         aBUH.vcomp       as aBUH,
         aBUH.vstring     as sBUH,
         aKAZN.vcomp      as aKAZN,
         aKAZN.vstring    as sKAZN,
         aDIR.vcomp       as aDIR,
         aDIR.vstring     as sDIR,
         aREZERV.vcomp    as aREZERV,
         aREZERV.vstring  as sREZERV,
         aSOGL.vcomp      as aSOGL,
         aSOGL.vstring    as sSOGL,
         aREDYSOG.vcomp   as aREDYSOG,
         aREDYSOG.vstring as sREDYSOG,
         aDEYSTVS.vcomp   as aDEYSTVS,
         aDEYSTVS.vstring as sDEYSTVS,
         aDOPPRIM.vcomp   as aDOPPRIM,
         aDOPPRIM.vstring as sDOPPRIM,
         aZAMECHE.vcomp   as aZAMECHE,
         aZAMECHE.vstring as sZAMECHE,
         aISKLUCH.vcomp   as aISKLUCH,
         aISKLUCH.vstring as sISKLUCH,
         aISPOLN.vcomp    as aISPOLN,
         aISPOLN.vstring  as sISPOLN,
         aBUHSCH.vcomp    as aBUHSCH,
         aBUHSCH.vstring  as sBUHSCH,
         aOBOSNOV.vcomp   as aOBOSNOV,
         aOBOSNOV.vstring as sOBOSNOV,
         aCMMNCNT.vcomp   as aCMMNCNT,
         aCMMNCNT.vstring as sCMMNCNT,
         aORGINGR.vcomp   as aORGINGR,
         aORGINGR.vstring as sORGINGR,
         aPEREPIS.vcomp   as aPEREPIS,
         aPEREPIS.vstring as sPEREPIS,
         aBDDS.vcomp      as aBDDS,
         aBDDS.vstring    as sBDDS,
         aPBUH.vcomp      as aPBUH,
         aPBUH.vstring    as sPBUH,
         aPKAZ.vcomp      as aPKAZ,
         aPKAZ.vstring    as sPKAZ,
         aPDIR.vcomp      as aPDIR,
         aPDIR.vstring    as sPDIR,
         aPPEU.vcomp      as aPPEU,
         aPPEU.vstring    as sPPEU,
         aSUBPODR.vcomp   as aSUBPODR,
         aSUBPODR.vstring as sSUBPODR,
         aDDS.vcomp       as aDDS,
         aDDS.vstring     as sDDS,
         aSUMMPKB.vcomp   as aSUMMPKB,
         aSUMMPKB.vstring as sSUMMPKB,
         cast((spst.Summa + case when bd.vhodnal = 2 then spst.NDS else 0 end) as double) * case when bd.viddoc=111 then bd.procopl/100 else 1 end as Summa,
         cast(spst.NDS as double) * case when bd.viddoc=111 then bd.procopl/100 else 1 end as NDS,
         spst.RSFromSpec  as RSFromSpec,
         spst.UserMode    as UserMode,
         spst.UserModeStr as UserModeStr,
         spst.BankSpec    as BankSpec,
         spst.UserDocType as UserDocType,
         spst.Summa18     as Summa18,
         spst.CNal18      as CNal18,
         spst.Stavka18    as Stavka18,
         spst.Summa10     as Summa10,
         spst.CNal10      as CNal10,
         spst.Stavka10    as Stavka10
  from basedoc bd
  left join calplan cp on cp.nrec = bd.ccalplan
  left join katorg ko on ko.nrec = bd.corg
  left join attrval viz     on viz.wtable     = 1102 and viz.crec     = bd.nrec and viz.cattrnam     = #comp(0001000000000088h)  //Виза пэу
  left join attrval naz     on naz.wtable     = 1102 and naz.crec     = bd.nrec and naz.cattrnam     = #comp(000100000000010Dh)  //Назначение платежа
  left join attrval avOsnDO on avOsnDO.wtable = 1102 and avOsnDO.crec = bd.nrec and avOsnDO.cattrnam = #comp(00010000000000B9h) //Основной ДО
  left join attrval aAVANS   on aAVANS.wtable   = 1102 and aAVANS.crec   = bd.nrec and aAVANS.cattrnam   = #comp(000100000000008Dh)
  left join attrval aBUH     on aBUH.wtable     = 1102 and aBUH.crec     = bd.nrec and aBUH.cattrnam     = #comp(0001000000000089h)
  left join attrval aKAZN    on aKAZN.wtable    = 1102 and aKAZN.crec    = bd.nrec and aKAZN.cattrnam    = #comp(0001000000000087h)
  left join attrval aDIR     on aDIR.wtable     = 1102 and aDIR.crec     = bd.nrec and aDIR.cattrnam     = #comp(000100000000008Ah)
  left join attrval aREZERV  on aREZERV.wtable  = 1102 and aREZERV.crec  = bd.nrec and aREZERV.cattrnam  = #comp(0001000000000096h)
  left join attrval aSOGL    on aSOGL.wtable    = 1102 and aSOGL.crec    = bd.nrec and aSOGL.cattrnam    = #comp(000100000000008Bh)
  left join attrval aREDYSOG on aREDYSOG.wtable = 1102 and aREDYSOG.crec = bd.nrec and aREDYSOG.cattrnam = #comp(0001000000000002h)
  left join attrval aDEYSTVS on aDEYSTVS.wtable = 1102 and aDEYSTVS.crec = bd.nrec and aDEYSTVS.cattrnam = #comp(00010000000004E1h)
  left join attrval aDOPPRIM on aDOPPRIM.wtable = 1102 and aDOPPRIM.crec = bd.nrec and aDOPPRIM.cattrnam = #comp(40010868C57CE3D6h)
  left join attrval aZAMECHE on aZAMECHE.wtable = 1102 and aZAMECHE.crec = bd.nrec and aZAMECHE.cattrnam = #comp(000100000000009Fh)
  left join attrval aISKLUCH on aISKLUCH.wtable = 1102 and aISKLUCH.crec = bd.nrec and aISKLUCH.cattrnam = #comp(00010000000006BBh)
  left join attrval aISPOLN  on aISPOLN.wtable  = 1102 and aISPOLN.crec  = bd.nrec and aISPOLN.cattrnam  = #comp(000100000000005Bh)
  left join attrval aBUHSCH  on aBUHSCH.wtable  = 1102 and aBUHSCH.crec  = bd.nrec and aBUHSCH.cattrnam  = #comp(0001000000000094h)
  left join attrval aOBOSNOV on aOBOSNOV.wtable = 1102 and aOBOSNOV.crec = bd.nrec and aOBOSNOV.cattrnam = #comp(00010000000000A0h)
  left join attrval aCMMNCNT on aCMMNCNT.wtable = 1102 and aCMMNCNT.crec = bd.nrec and aCMMNCNT.cattrnam = #comp(00010000000006BDh)
  left join attrval aORGINGR on aORGINGR.wtable = 1102 and aORGINGR.crec = bd.nrec and aORGINGR.cattrnam = #comp(000100000000005Ch)
  left join attrval aPEREPIS on aPEREPIS.wtable = 1102 and aPEREPIS.crec = bd.nrec and aPEREPIS.cattrnam = #comp(0001000000000095h)
  left join attrval aBDDS    on aBDDS.wtable    = 1102 and aBDDS.crec    = bd.nrec and aBDDS.cattrnam    = #comp(000100000000008Eh)
  left join attrval aPBUH    on aPBUH.wtable    = 1102 and aPBUH.crec    = bd.nrec and aPBUH.cattrnam    = #comp(0001000000000097h)
  left join attrval aPKAZ    on aPKAZ.wtable    = 1102 and aPKAZ.crec    = bd.nrec and aPKAZ.cattrnam    = #comp(0001000000000098h)
  left join attrval aPDIR    on aPDIR.wtable    = 1102 and aPDIR.crec    = bd.nrec and aPDIR.cattrnam    = #comp(000100000000009Ah)
  left join attrval aPPEU    on aPPEU.wtable    = 1102 and aPPEU.crec    = bd.nrec and aPPEU.cattrnam    = #comp(0001000000000099h)
  left join attrval aSUBPODR on aSUBPODR.wtable = 1102 and aSUBPODR.crec = bd.nrec and aSUBPODR.cattrnam = #comp(00010000000006BCh)
  left join attrval aDDS     on aDDS.wtable     = 1102 and aDDS.crec     = bd.nrec and aDDS.cattrnam     = #comp(000100000000008Fh)
  left join attrval aSUMMPKB on aSUMMPKB.wtable = 1102 and aSUMMPKB.crec = bd.nrec and aSUMMPKB.cattrnam = #comp(00010000000009DDh)
  left join stepdoc osndoStepdoc on osndoStepdoc.cbasedoc = coalesce(avOsnDO.vcomp,#comp(0)) and coalesce(avOsnDO.vcomp,#comp(0)) <> #comp(0)
  left join stepdoc sd  on sd.cbasedoc = bd.nrec
  left join (select sum(sps.summa)    as Summa,
                    sum(sps.nds)      as NDS,
                    sps.cstepdoc      as CStepDoc,
                    av.vcomp          as RSFromSpec, // расчетный счет позиции спецификации ДО
                    max(um.vcomp)     as UserMode,
                    max(um.vstring)   as UserModeStr,
                    cb.cpodr          as BankSpec,
                    ud.tipusers       as UserDocType, // TIDK для платёжки
                    sum(nal18.SumNal) as Summa18,
                    max(nal18.CNalog) as CNal18,
                    max(nal18.Stavka) as Stavka18,
                    sum(nal10.SumNal) as Summa10,
                    max(nal10.CNalog) as CNal10,
                    max(nal10.Stavka) as Stavka10
             from spstep sps
             left join attrval av  on av.wtable = 1104 and av.crec = sps.nrec and av.cattrnam = #comp(0001000000000A86h)
             left join attrval um  on um.wtable = 1104 and um.crec = sps.nrec and um.cattrnam = #comp(000100000000079Eh)
             left join (select spkau.nrec as cRS, max(spc.ccashbank) as ccashbank
                        from spcash spc
                        join spkau on (case when spc.tblos[1] = 10545 then spc.kauos[1]
                                            when spc.tblos[2] = 10545 then spc.kauos[2]
                                            when spc.tblos[3] = 10545 then spc.kauos[3]
                                            when spc.tblos[4] = 10545 then spc.kauos[4]
                                            when spc.tblos[5] = 10545 then spc.kauos[5]
                                            when spc.tblos[6] = 10545 then spc.kauos[6] end) = spkau.nrec
                        where spc.cplanssch = #comp(000100000000000Eh)
                        group by spkau.nrec
                       ) spc on spc.cRS = coalesce(av.vcomp,#comp(0)) and coalesce(av.vcomp,#comp(0)) <> #comp(0)
             left join cashbank cb on cb.nrec = spc.ccashbank
             left join usersdoc ud on ud.tipgal = 1 and ud.razdel = cb.razdel and ud.ccashbank = cb.nrec

             left join (select n.cspdoc,
                               n.summa  as SumNal,
                               n.cnalog as CNalog,
                               n.nalog  as Stavka
                        from spdocnal n
                        where n.tipdoc = 1101 and n.nalog = 18
                       ) nal18 on nal18.cspdoc = sps.nrec
             left join (select n.cspdoc,
                               n.summa  as SumNal,
                               n.cnalog as CNalog,
                               n.nalog  as Stavka
                        from spdocnal n
                        where n.tipdoc = 1101 and n.nalog = 10
                       ) nal10 on nal10.cspdoc = sps.nrec
             group by sps.cstepdoc, av.vcomp, cb.cpodr, ud.tipusers
            ) spst on spst.cstepdoc = sd.nrec
  where bd.nrec = :basedocNrec
;

sql query qGetBySpCash =
  select cb.name     as BankName,
         cb.cpodr    as BankNrec,
         ud.tipusers as UserType
  from spcash spc
  join cashbank cb on cb.nrec = spc.ccashbank
  left join usersdoc ud on ud.ccashbank = cb.nrec and ud.razdel = cb.razdel and ud.tipgal = 1
  where spc.nrec = :SpCashNrec
;

//#endregion

create view
as select *
from plpor, soprhoz, basefin, nalogfin;

function GetNewPlporNumber(aTidkGal: word; aYear: word): string;
{
  var rs: IResultSet;
  rs := queryManager.createQuery(qLastPlporNumber)
                    .setParam('tidkgal', aTidkGal)
                    .setParam('year', aYear)
                    .getResultSet;
  if rs.getFirst = tsOk
    result := NextNumStr(rs.row.valat(1));
  else
    result := '000001';
}

procedure CreatePlpors(aBaseDocNrec: comp; var aCash: comp; var aBankNrec: comp; var aTIDK: word; aLogFileName: string; aSelectedDate: date);
{
  var q, q1: IQuery;
  var rs, rs1: IResultSet;
  var VSogl, RSSpec: comp;
  var TIDK: word;
  var aViddoc: word;
  var osnBasedocNrec: comp;
  var osnStepdocNrec: comp;

  q := queryManager.createQuery(qPlatezh);
  q.setParam('basedocNrec', aBaseDocNrec);
  rs := q.getResultSet;
  if (rs.getFirst = tsOk) do
  {
    aViddoc := rs.row.val('BasedocViddoc');
    osnBasedocNrec := rs.row.val('osnBasedocNrec');
    osnStepdocNrec := rs.row.val('osnStepdocNrec');
    VSogl := rs.row.val('VizaPEU');
    RSSpec := rs.row.val('RSFromSpec');
    TIDK := rs.row.val('UserDocType');

    if RSSpec = 0 and VSogl = VIZA_S_OBSHIH_SCHETOV and aCash = 0
    {
      message(chr(3) + 'Выберите общий р/счёт для формирования платежек по ДО со значением Визы ПЭУ "С общих р/счет"' + chr(13) +
              'Платежки с данным р/счетом будут сформированы для всех ДО с такой визой');
      //if RunInterface('F_CASHBANK::SELUSDOC', 0, 0, 0, comp(0), aCash) = cmDefault
      if ks.SingleSelector(aCash)
      {
        q1 := queryManager.createQuery(qGetBySpCash);
        q1.setParam('SpCashNrec', aCash);
        rs1 := q1.getResultSet;
        if rs1.getFirst = tsOk
        {
          message('Не найден общий р/сч', error);
          exit;
        }
        else
        {
          aBankNrec := rs1.row.val('BankNrec');
          aTIDK := rs1.row.val('UserType');
        }
      }
      else
      {
        message('Процедура формирования платежных поручений прервана', error);
        exit;
      }
    }

/*
    if RSSpec = 0 and VSogl != VIZA_S_OBSHIH_SCHETOV
    {
      LogStrToFile(aLogFileName, '|                                                                                                 |        Платежное поручение не сформировано,      |');
      LogStrToFile(aLogFileName, '| ДО ' + if(Length(rs.row.val('Naznach'))>=93, substr(rs.row.val('Naznach'),1,93), Pad(rs.row.val('Naznach'), 93)) + '|       т.к. не заполнен атрибут спецификации      |');
      LogStrToFile(aLogFileName, '|                                                                                                 |                "Р/сч списания ДС"                |');
      LogStrToFile(aLogFileName, '|-------------------------------------------------------------------------------------------------|--------------------------------------------------|');
      continue; //если в спецификации не заполнен атрибут "Р/счет списания ДС", то переходим к след итерации
    } */
    if (TIDK = 0 and VSogl != VIZA_S_OBSHIH_SCHETOV) or (TIDK = 0 and aTIDK = 0 and VSogl = VIZA_S_OBSHIH_SCHETOV)
    {
      LogStrToFile(aLogFileName, '|                                                                                                 |        Платежное поручение не сформировано,      |');
      LogStrToFile(aLogFileName, '| ДО ' + if(Length(rs.row.val('Naznach'))>=93, substr(rs.row.val('Naznach'),1,93), Pad(rs.row.val('Naznach'), 93)) + '|        т.к. не определен банк плательщика        |');
      LogStrToFile(aLogFileName, '|                                                                                                 |                                                  |');
      LogStrToFile(aLogFileName, '|-------------------------------------------------------------------------------------------------|--------------------------------------------------|');
      continue; // если р/счёт не привязан к банку, платежку не формируем!
    }
    /*
    if VSogl = VIZA_S_OBSHIH_SCHETOV
    {
      LogStrToFile(aLogFileName, '|                                                                                                 |        Платежное поручение не сформировано,      |');
      LogStrToFile(aLogFileName, '| ДО ' + if(Length(rs.row.val('Naznach'))>=93, substr(rs.row.val('Naznach'),1,93), Pad(rs.row.val('Naznach'), 93)) + '|  т.к. нет р/счета предприятия выбранного банка   |');
      LogStrToFile(aLogFileName, '|                                                                                                 |                                                  |');
      LogStrToFile(aLogFileName, '|-------------------------------------------------------------------------------------------------|--------------------------------------------------|');
      continue; // если выбранный общий счёт не привязан к банку, платежку не формируем!
    }
    */
    ClearBuffer(#plpor);
    plpor.tidkgal   := 1;

    plpor.descr     := sgettune('USER.DESCR');
    plpor.desgr     := sgettune('USER.DESGR');
    plpor.datvip    := aSelectedDate; //rs.row.val('DateDoc');
    plpor.cplat     := CoGetTune('myorg');

    plpor.cbankplat := rs.row.val('BankSpec');

    if plpor.cbankplat = 0
      plpor.cbankplat := aBankNrec;

    plpor.tidk      := rs.row.val('UserDocType');
    if plpor.tidk = 0
      plpor.tidk    := aTIDK;

    //pl.PlPor_GetNewNumber(plpor.tidkgal, plpor.tidk, plpor.descr, plpor.datvip);
    plpor.nodok     := GetNewPlporNumber(plpor.tidkgal, year(plpor.datvip));
    plpor.cpol      := rs.row.val('Cpol');
    plpor.cbankpol  := rs.row.val('CBank');
    plpor.cgruzotp  := plpor.cpol;
    plpor.cgruzpol  := plpor.cplat;
    plpor.sumplat   := rs.row.val('Summa'); //Сумма платежа по док-ту

    if aViddoc = 111 and osnStepdocNrec != 0
      plpor.cstepdoc  := osnStepdocNrec
    else
      plpor.cstepdoc  := rs.row.val('StepdocNrec');

    plpor.cwaymove  := rs.row.val('CTRANSP'); //Ссылка на способ транспортировки
    plpor.namepl1   := rs.row.val('Naznach');
    plpor.namepl4   := 'Сумма НДС ' + rs.row.val('NDS') + ' руб.';
    plpor.summa4    := rs.row.val('NDS');
    plpor.modedoc   := 2048
    insert current plpor;

    ea.coSetAttrID(WT_PLPOR, plpor.nrec, ATTRNAM_USEMODE_PLPOR, rs.row.val('UserMode'), rs.row.val('UserModeStr'));

    ea.coSetAttrID(WT_PLPOR, plpor.nrec, ATTRNAM_VIZAPEU_PLPOR, rs.row.val('VizaPEU'), rs.row.val('sVizaPEU'));
    ea.sSetAttrID(WT_PLPOR, plpor.nrec, ATTRNAM_NAZNPLP_PLPOR, rs.row.val('Naznach'));
    ea.coSetAttrID(WT_PLPOR, plpor.nrec, ATTRNAM_MNBASDC_PLPOR, rs.row.val('OsnBasedocNrec'), rs.row.val('sOsnDO'));

    ea.coSetAttrID(WT_PLPOR, plpor.nrec, ATTRNAM_AVANSOK_PLPOR, rs.row.val('aAVANS'),   rs.row.val('sAVANS'));
    ea.coSetAttrID(WT_PLPOR, plpor.nrec, ATTRNAM_VIZABUH_PLPOR, rs.row.val('aBUH'),     rs.row.val('sBUH'));
    ea.coSetAttrID(WT_PLPOR, plpor.nrec, ATTRNAM_VIZAKAZ_PLPOR, rs.row.val('aKAZN'),    rs.row.val('sKAZN'));
    ea.coSetAttrID(WT_PLPOR, plpor.nrec, ATTRNAM_VIZADIR_PLPOR, rs.row.val('aDIR'),     rs.row.val('sDIR'));
    ea.coSetAttrID(WT_PLPOR, plpor.nrec, ATTRNAM_VIZAREZ_PLPOR, rs.row.val('aREZERV'),  rs.row.val('sREZERV'));
    ea.sSetAttrID (WT_PLPOR, plpor.nrec, ATTRNAM_REDYSOG_PLPOR, rs.row.val('sSOGL'));
    ea.coSetAttrID(WT_PLPOR, plpor.nrec, ATTRNAM_DEYSTVS_PLPOR, rs.row.val('aREDYSOG'), rs.row.val('sREDYSOG'));
    ea.coSetAttrID(WT_PLPOR, plpor.nrec, ATTRNAM_BASEDOC_PLPOR, rs.row.val('aDEYSTVS'), rs.row.val('sDEYSTVS'));
    ea.sSetAttrID (WT_PLPOR, plpor.nrec, ATTRNAM_DOPPRIM_PLPOR, rs.row.val('sDOPPRIM'));
    ea.coSetAttrID(WT_PLPOR, plpor.nrec, ATTRNAM_ZAMECHE_PLPOR, rs.row.val('aZAMECHE'), rs.row.val('sZAMECHE'));
    ea.coSetAttrID(WT_PLPOR, plpor.nrec, ATTRNAM_ISKLUCH_PLPOR, rs.row.val('aISKLUCH'), rs.row.val('sISKLUCH'));
    ea.coSetAttrID(WT_PLPOR, plpor.nrec, ATTRNAM_ISPLNTL_PLPOR, rs.row.val('aISPOLN'),  rs.row.val('sISPOLN'));
    ea.coSetAttrID(WT_PLPOR, plpor.nrec, ATTRNAM_NUMBALS_PLPOR, rs.row.val('aBUHSCH'),  rs.row.val('sBUHSCH'));
    ea.sSetAttrID (WT_PLPOR, plpor.nrec, ATTRNAM_OBOSNOV_PLPOR, rs.row.val('sOBOSNOV'));
    ea.sSetAttrID (WT_PLPOR, plpor.nrec, ATTRNAM_CMMNCNT_PLPOR, rs.row.val('sCMMNCNT'));
    ea.coSetAttrID(WT_PLPOR, plpor.nrec, ATTRNAM_ORGINGR_PLPOR, rs.row.val('aORGINGR'), rs.row.val('sORGINGR'));
    ea.coSetAttrID(WT_PLPOR, plpor.nrec, ATTRNAM_PEREPIS_PLPOR, rs.row.val('aPEREPIS'), rs.row.val('sPEREPIS'));
    ea.coSetAttrID(WT_PLPOR, plpor.nrec, ATTRNAM_POHBBDS_PLPOR, rs.row.val('aBDDS'),    rs.row.val('sBDDS'));
    ea.sSetAttrID (WT_PLPOR, plpor.nrec, ATTRNAM_PRIMBUH_PLPOR, rs.row.val('sPBUH'));
    ea.sSetAttrID (WT_PLPOR, plpor.nrec, ATTRNAM_PRIMKAZ_PLPOR, rs.row.val('sPKAZ'));
    ea.sSetAttrID (WT_PLPOR, plpor.nrec, ATTRNAM_PRIMDIR_PLPOR, rs.row.val('sPDIR'));
    ea.sSetAttrID (WT_PLPOR, plpor.nrec, ATTRNAM_PRIMPEU_PLPOR, rs.row.val('sPPEU'));
    ea.coSetAttrID(WT_PLPOR, plpor.nrec, ATTRNAM_SUBPODR_PLPOR, rs.row.val('aSUBPODR'), rs.row.val('sSUBPODR'));
    ea.coSetAttrID(WT_PLPOR, plpor.nrec, ATTRNAM_RTCLDDS_PLPOR, rs.row.val('aDDS'),     rs.row.val('sDDS'));
    ea.coSetAttrID(WT_PLPOR, plpor.nrec, ATTRNAM_SUMMPKB_PLPOR, rs.row.val('aSUMMPKB'), rs.row.val('sSUMMPKB'));

    LogStrToFile(aLogFileName, '|                                                                                                 |         Платёжное поручение сформировано         |');
    LogStrToFile(aLogFileName, '| ДО ' + if(Length(rs.row.val('Naznach'))>=93, substr(rs.row.val('Naznach'),1,93), Pad(rs.row.val('Naznach'), 93)) + '|                № ' + Pad(plpor.nodok, 32) + '|');
    LogStrToFile(aLogFileName, '|                                                                                                 |               от ' + Pad(DateToStr(plpor.datvip, 'DD.MM.YYYY'), 32) + '|');
    LogStrToFile(aLogFileName, '+-------------------------------------------------------------------------------------------------+--------------------------------------------------+');

    ClearBuffer(#soprhoz);
    soprhoz.cdogovor := rs.row.val('CDogovor');
    if (aViddoc = 111)
      soprhoz.cpredopldo := rs.row.val('BaseDocNrec');
    soprhoz.cstepdoc := plpor.cstepdoc;
    soprhoz.csoprdoc := plpor.nrec;
    soprhoz.tipdoc   := plpor.tidk;
    soprhoz.tidkgal  := plpor.tidkgal;
    soprhoz.nodoc    := plpor.nodok;
    soprhoz.descr    := plpor.descr;
    soprhoz.desgr    := plpor.desgr;
    soprhoz.namesho  := rs.row.val('BaseDocName');
    soprhoz.summa    := plpor.sumplat;
    soprhoz.direct   := 2;
    soprhoz.vhsumhoz := '+';
    soprhoz.modedoc  := plpor.modedoc;
    soprhoz.corg     := plpor.cpol;
    if rs.row.val('CalplanDirectPlat') <> 0
      soprhoz.cfinplan := rs.row.val('CalplanNrec')
    else
      soprhoz.ccalplan := rs.row.val('CalplanNrec');
    insert current soprhoz;

    ClearBuffer(#basefin);
    basefin.cdogovor   := soprhoz.cdogovor;
    basefin.cpredopldo := soprhoz.cpredopldo;
    basefin.cstepdoc   := soprhoz.cstepdoc;

    if (aViddoc = 111 and osnBasedocNrec != 0)
      basefin.cbasedoc := osnBasedocNrec;
    else
      basefin.cbasedoc := rs.row.val('BaseDocNrec');

    basefin.tipdoc     := plpor.tidk;
    basefin.tidkgal    := 1;
    basefin.cplpor     := plpor.nrec;
    basefin.nodoc      := plpor.nodok;
    basefin.descr      := plpor.descr;
    basefin.desgr      := plpor.desgr;
    basefin.namepl     := rs.row.val('BaseDocName');
    basefin.summa      := plpor.sumplat;
    basefin.direct     := 2;
    basefin.corg       := plpor.cpol;
    basefin.ccalplan   := soprhoz.ccalplan;
    basefin.csoprhoz   := soprhoz.nrec;
    insert current basefin;

    if rs.row.val('Summa18') != 0
    {
      ClearBuffer(#nalogfin);
      nalogfin.csoprhoz := soprhoz.nrec;
      nalogfin.cnalog   := rs.row.val('CNal18');
      nalogfin.keynalog := rs.row.val('Stavka18');
      nalogfin.stavka   := rs.row.val('Stavka18');
      nalogfin.summa    := rs.row.val('Summa18');
      nalogfin.tidkgal  := 1;
      nalogfin.csoprdoc := plpor.nrec;
      insert current nalogfin;
    }
    if rs.row.val('Summa10') != 0
    {
      ClearBuffer(#nalogfin);
      nalogfin.csoprhoz := soprhoz.nrec;
      nalogfin.cnalog   := rs.row.val('CNal10');
      nalogfin.keynalog := rs.row.val('Stavka10');
      nalogfin.stavka   := rs.row.val('Stavka10');
      nalogfin.summa    := rs.row.val('Summa10');
      nalogfin.tidkgal  := 1;
      nalogfin.csoprdoc := plpor.nrec;
      insert current nalogfin;
    }
  } while (rs.getnext = tsOk);
}

window wSelPlporDate 'Выбор даты формируемых платежей', doaccept, escclose;
show (,,40,4);
screen sc1;
fields
  SelectedDate: noprotect;
buttons
  cmSetDate, default;
<<
    Выберите дату для будущих платежных
    поручений        .@@@@@@@@@@@
        <.Сформировать платежи.>
>>
end;

handleevent
cmInit:
{
  SelectedDate := Cur_Date;
}
cmSetDate:
{
  if SelectedDate = 0
  {
    message('Заполните дату', Error);
    abort;
    exit;
  }
  CloseWindowEx(wSelPlporDate, cmDefault);
}
cmCancel:
{
  CloseWindowEx(wSelPlporDate, cmCancel);
}
end;

end;

function SetPlporDateUI: date;
{
  if RunWindowModal(wSelPlporDate) = cmDefault
    result := SelectedDate
  else
    result := 0;
}

end.
