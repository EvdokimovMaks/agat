#include MyKatSchet.vih
#component "AGAT"

interface iPlanSchet;

sql query qSchetsWithOutIGK =
select sp.nrec     as SPCashNrec,
       cb.name     as Bank,
       sp.tblos[1] as AN1,
       sp.tblos[2] as AN2,
       sp.tblos[3] as AN3,
       sp.tblos[4] as AN4,
       sp.tblos[5] as AN5,
       sp.tblos[6] as AN6,
       sp.kauos[1] as KAU1,
       sp.kauos[2] as KAU2,
       sp.kauos[3] as KAU3,
       sp.kauos[4] as KAU4,
       sp.kauos[5] as KAU5,
       sp.kauos[6] as KAU6
from spcash sp
join cashbank cb on cb.nrec = sp.ccashbank
where ((sp.tblos[1] <> 10527 and
        sp.tblos[2] <> 10527 and
        sp.tblos[3] <> 10527 and
        sp.tblos[4] <> 10527 and
        sp.tblos[5] <> 10527 and
        sp.tblos[6] <> 10527) or (case when sp.tblos[1] = 10527 then sp.kauos[1]
                                       when sp.tblos[2] = 10527 then sp.kauos[2]
                                       when sp.tblos[3] = 10527 then sp.kauos[3]
                                       when sp.tblos[4] = 10527 then sp.kauos[4]
                                       when sp.tblos[5] = 10527 then sp.kauos[5]
                                       when sp.tblos[6] = 10527 then sp.kauos[6] end) = #comp(0))
;

table struct tBanks (
  nrec   : comp,
  SpNrec : comp,
  name   : string,
  AN1    : word,
  AN2    : word,
  AN3    : word,
  AN4    : word,
  AN5    : word,
  AN6    : word,
  KAU1   : comp,
  KAU2   : comp,
  KAU3   : comp,
  KAU4   : comp,
  KAU5   : comp,
  KAU6   : comp
) with index (
  i01 = nrec (unique, surrogate)
);

create view
as select *
from tBanks;

window wBank 'Выбор общего р/счета' escclose, doaccept;
browse brMain;
table tBanks;
fields
  tBanks.name 'Банк' : [20], protect;
  if(getanykau(0, tBanks.AN2, tBanks.KAU2),givenanname(1),'') 'Номер расчетного счета' : [30], protect;
end; //browse
end; //window

function SingleSelector(var aSpCashNrec: comp): boolean;
{
  var q: IQuery;
  var rs: IResultSet;
  q := queryManager.createQuery(qSchetsWithOutIGK);
  rs := q.getResultSet;
  if (rs.getFirst = tsOk) do
  {
    ClearBuffer(#tBanks);
    tBanks.SpNrec := rs.row.val('SPCashNrec');
    tBanks.name   := rs.row.val('Bank');
    tBanks.AN1    := rs.row.val('AN1');
    tBanks.AN2    := rs.row.val('AN2');
    tBanks.AN3    := rs.row.val('AN3');
    tBanks.AN4    := rs.row.val('AN4');
    tBanks.AN5    := rs.row.val('AN5');
    tBanks.AN6    := rs.row.val('AN6');
    tBanks.KAU1   := rs.row.val('KAU1');
    tBanks.KAU2   := rs.row.val('KAU2');
    tBanks.KAU3   := rs.row.val('KAU3');
    tBanks.KAU4   := rs.row.val('KAU4');
    tBanks.KAU5   := rs.row.val('KAU5');
    tBanks.KAU6   := rs.row.val('KAU6');
    insert current tBanks;
  } while (rs.getnext = tsOk);
  result := false;
  if RunWindowModal(wBank) = cmDefault
  {
    aSpCashNrec := tBanks.SpNrec;
    result := true;
  }
}

function MultiSelector(aMRKR: longint): boolean;
{
  aMRKR := aMRKR;
}

end.
