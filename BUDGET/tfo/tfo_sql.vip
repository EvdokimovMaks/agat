#include TxoApi.vih
#include Query.vih
#component "AGAT"
VipInterface TXO_SQLTFO Implements ObjTxoIdentPlugin;

interface TXO_SQLTFO;

var
  Par1, Par2, Par3, Par4, Par5, Par6: comp;
  Date1, Date2, Date3, Date4, Date5, Date6: date;
  cfgString: string;
  CurSoprDoc, CurSoprHoz, CurHozOper, CurHozObor, CurPlansSch, CurValut: comp;
  CurTiDk, CurKodReg: word;
  CurDatOb, CurBeginFp, CurEndFp: date;

create view
var
  cfgPar1,cfgPar2,cfgPar3,cfgPar4,cfgPar5,cfgPar6: string;
  cfgDate1,cfgDate2,cfgDate3,cfgDate4,cfgDate5,cfgDate6: date;
as select *
from fpobor, allmemo
where ((
  CurHozObor == fpobor.nrec and
  9074       == allmemo.wtable and
  CurHozObor == allmemo.crec
));

file f;

window wInfo 'Информация' doaccept, escclose;
  tabbedsheet tbInfo;
    screen scParams 'Параметры';
      fields
        cfgPar1 : noprotect;
        cfgDate1: noprotect;
        cfgPar2 : noprotect;
        cfgDate2: noprotect;
        cfgPar3 : noprotect;
        cfgDate3: noprotect;
        cfgPar4 : noprotect;
        cfgDate4: noprotect;
        cfgPar5 : noprotect;
        cfgDate5: noprotect;
        cfgPar6 : noprotect;
        cfgDate6: noprotect;
<<

  Par1 .@@@@@@@@@@@@@@@@@@@@@ Date1 .@@@@@@@@@@
  Par2 .@@@@@@@@@@@@@@@@@@@@@ Date2 .@@@@@@@@@@
  Par3 .@@@@@@@@@@@@@@@@@@@@@ Date3 .@@@@@@@@@@
  Par4 .@@@@@@@@@@@@@@@@@@@@@ Date4 .@@@@@@@@@@
  Par5 .@@@@@@@@@@@@@@@@@@@@@ Date5 .@@@@@@@@@@
  Par6 .@@@@@@@@@@@@@@@@@@@@@ Date6 .@@@@@@@@@@
>>
    end;
    screen scInfo 'Информация';
<<

    SQLTFO - Формирование финопераций по SQL запросу из шаблона ТХО.

    Для редактирования запроса необходимо нажать Alt+1 в средней панели окна редактирования ТХО
 (там где поле "Алгоритм в НДЕ").

    В качестве параметров в запросе можно указывать все переменные, которые передаются в TXO API:
    :CurSoprDoc          (тип comp) - ссылка на документ;
    :CurSoprHoz          (тип comp) - журнал хозопераций;
    :CurTiDk             (тип word) - тип документа;
    :CurHozOper          (тип comp) - ТХО;
    :CurHozObor          (тип comp) - ссылка на шаблон ТХО (fpobor);
    :CurPlanssch         (тип comp) - регистр учета;
    :CurKodReg           (тип word) - код регистра учета;
    :CurDatOb            (тип date) - дата проводки;
    :CurValut            (тип comp) - валюта проводки;
    :CurBeginFp          (тип date) - начало периода документа;
    :CurEndFp            (тип date) - конец периода документа;
    :Par1-:Par6          (тип comp) - произвольные параметры (задаются в параметрах идентификатора SQLTFO);
    :Date1-:Date6        (тип date) - произвольные даты (задаются в параметрах идентификатора SQLTFO);

    Алгоритм циклически обрабатывает следующие поля, возвращаемые запросом:

    DatOb                дата проводки;
    StBud                статья бюджета
    An1-An10             аналитики статьи бюджета;
    Period               период планирования;
    CO                   центр ответственности;

    Sum                  сумма в НДЕ финоперации;
    SumV                 сумма в валюте финоперации;
    cVal                 валюта финоперации;
    Kol                  количество финоперации;

    Аналитика заполняется в режиме, указанном в шаблоне ТХО. Рекомендуется использовать пользовательские
 режимы формирования Режим 0 - Режим 9.
>>
    end;
  end;
  handleevent
    cmDefault:
    {
      cfgString := '';
      if (trim(cfgPar1) <> '') cfgString := cfgString + '[Par1:"'+trim(cfgPar1)+'"]';
      if (trim(cfgPar2) <> '') cfgString := cfgString + '[Par2:"'+trim(cfgPar2)+'"]';
      if (trim(cfgPar3) <> '') cfgString := cfgString + '[Par3:"'+trim(cfgPar3)+'"]';
      if (trim(cfgPar4) <> '') cfgString := cfgString + '[Par4:"'+trim(cfgPar4)+'"]';
      if (trim(cfgPar5) <> '') cfgString := cfgString + '[Par5:"'+trim(cfgPar5)+'"]';
      if (trim(cfgPar6) <> '') cfgString := cfgString + '[Par6:"'+trim(cfgPar6)+'"]';
      if (cfgDate1 <> 0) cfgString := cfgString + '[Date1:"'+datetostr(cfgDate1,'DD.MM.YYYY')+'"]';
      if (cfgDate2 <> 0) cfgString := cfgString + '[Date2:"'+datetostr(cfgDate2,'DD.MM.YYYY')+'"]';
      if (cfgDate3 <> 0) cfgString := cfgString + '[Date3:"'+datetostr(cfgDate3,'DD.MM.YYYY')+'"]';
      if (cfgDate4 <> 0) cfgString := cfgString + '[Date4:"'+datetostr(cfgDate4,'DD.MM.YYYY')+'"]';
      if (cfgDate5 <> 0) cfgString := cfgString + '[Date5:"'+datetostr(cfgDate5,'DD.MM.YYYY')+'"]';
      if (cfgDate6 <> 0) cfgString := cfgString + '[Date6:"'+datetostr(cfgDate6,'DD.MM.YYYY')+'"]';
    }
  end;
end;

function GetInfo : string;
{
  result := 'Аналог SQLTXO для финансовых операций';
}
function ParamMaster : string;
{
  cfgString := '';
  runwindowmodal(wInfo);
  result := cfgString;
}

procedure StoreCycles(hTxo : longint; buf : TTxoApiInfoDoc);
var
  ParamCount, i: integer;
  ParamName, ParamValue: string;
  s: longint;
  _s: string;
  qm: vipQueryManager;
  q: IQuery;
  rs: IResultSet;
  _Sum, _SumV, _Kol: double;
{
  CurSoprDoc := buf.cSoprDoc;
  CurSoprHoz := buf.cSoprHoz;
  CurHozOper := buf.cHozOper;
  CurHozObor := buf.cObor;
  CurPlansSch:= buf.cPlansSch;
  CurValut   := buf.cValut;
  CurTiDk    := buf.TiDk;
  CurKodReg  := buf.KodReg;
  CurDatOb   := buf.DatOb;
  CurBeginFp := buf.dBeginFp;
  CurEndFp   := buf.dEndFp;

  if (getfirst fpobor = tsOk) and (getfirst AllMemo = tsOk)
  {
    sqlFreeStr(s);
    f.openmemo(allmemo.mem);
    while not f.eof
    {
      f.readln(_s);
      sqlAddStr(s, _s);
    }
    f.close;
    q := qm.createQuery(s);

    ParamCount := TxoParamCount(hTxo);
    for (i := 1; i <= ParamCount; inc(i))
    {
      ParamName := UpCase(TxoParamName(hTxo, i));
      ParamValue := TxoParamValue(hTxo, i);
      case ParamName of
        'PAR1':  { Par1 := ParamValue; q.setParam('Par1', Par1); }
        'PAR2':  { Par2 := ParamValue; q.setParam('Par2', Par2); }
        'PAR3':  { Par3 := ParamValue; q.setParam('Par3', Par3); }
        'PAR4':  { Par4 := ParamValue; q.setParam('Par4', Par4); }
        'PAR5':  { Par5 := ParamValue; q.setParam('Par5', Par5); }
        'PAR6':  { Par6 := ParamValue; q.setParam('Par6', Par6); }
        'DATE1': { Date1 := strtodate(replace(ParamValue,'/','.'),'DD.MM.YYYY'); q.setParam('Date1', Date1); }
        'DATE2': { Date2 := strtodate(replace(ParamValue,'/','.'),'DD.MM.YYYY'); q.setParam('Date2', Date2); }
        'DATE3': { Date3 := strtodate(replace(ParamValue,'/','.'),'DD.MM.YYYY'); q.setParam('Date3', Date3); }
        'DATE4': { Date4 := strtodate(replace(ParamValue,'/','.'),'DD.MM.YYYY'); q.setParam('Date4', Date4); }
        'DATE5': { Date5 := strtodate(replace(ParamValue,'/','.'),'DD.MM.YYYY'); q.setParam('Date5', Date5); }
        'DATE6': { Date6 := strtodate(replace(ParamValue,'/','.'),'DD.MM.YYYY'); q.setParam('Date6', Date6); }
      end;
    }
    q.setParam('CurSoprDoc', CurSoprDoc);
    q.setParam('CurSoprHoz', CurSoprHoz);
    q.setParam('CurHozOper', CurHozOper);
    q.setParam('CurHozObor', CurHozObor);
    q.setParam('CurPlansSch', CurPlansSch);
    q.setParam('CurValut', CurValut);
    q.setParam('CurTiDk', CurTiDk);
    q.setParam('CurKodReg', CurKodReg);
    q.setParam('CurDatOb', CurDatOb);
    q.setParam('CurBeginFp', CurBeginFp);
    q.setParam('CurEndFp', CurEndFp);

    rs := q.getResultSet;

    if (rs = NullRef)
    {
      TxoDebugMsg(hTxo, 'SQLTFO', 'Ошибка выполнения запроса');
      exit;
    }

    if rs.getFirst = tsOk
      do
      {
        TxoBodyClear   (hTxo);

        for(i := 1; i <= 10; i++)
        {
          if (rs.row.col('An'+i) <> NullRef)
            TxoBodyAddKau  (hTxo, fpobor.flkau[i] , fpobor.wkau[i] , rs.row.val('An'+i));
        }

        if (rs.row.col('StBud')  <> NullRef) TxoBodyAddKau  (hTxo, fpobor.flstbud , 20, rs.row.val('StBud'));
        if (rs.row.col('Period') <> NullRef) TxoBodyAddKau  (hTxo, fpobor.flperiod, 21, rs.row.val('Period'));
        if (rs.row.col('CO')     <> NullRef) TxoBodyAddKau  (hTxo, fpobor.flco    , 22, rs.row.val('CO'));
        if (rs.row.col('DatOb')  <> NullRef) TxoBodyAddDate (hTxo, fpobor.fldatob ,     rs.row.val('DatOb'));
        if (rs.row.col('Sum' )   <> NullRef) _Sum  := rs.row.val('Sum')  else _Sum  := 0;
        if (rs.row.col('SumV')   <> NullRef) _SumV := rs.row.val('SumV') else _SumV := 0;
        if (rs.row.col('Kol' )   <> NullRef) _Kol  := rs.row.val('Kol' ) else _Kol  := 0;
        TxoBodySetSum(hTxo, _Sum, _SumV, _Kol);
        if (rs.row.col('cValW')   <> NullRef)
          TxoBodySetSumVal(hTxo, _SumV, rs.row.val('cVal'));

        TxoBodyInsert(hTxo);
      } while rs.getNext = tsOk
  } //if getfirst AllMemo
}
end.
