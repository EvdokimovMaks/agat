#ifndef __QueryStr__
#define __QueryStr__

#component "UTILS"

#doc
<brief>Интерфейс создания строки запроса</brief>
#end
objinterface oQueryStr;
  #doc
  <brief>Процедура построения/модификации строки запроса. s - идентификатор модифицируемой строки запроса (получается с помощью sqlAddStr)</brief>
  #end
  procedure Create(var l: longint);
end;

#doc
<brief>Абстрактный класс декоратора строки запроса</brief>
#end
vipinterface iQueryStrDecorator implements oQueryStr sourceFile="QueryStrDecorator.vip";
  #doc
  <brief>В конструктор декоратора передается ссылка на декорируемую строку</brief>
  #end
  public: constructor QueryStrDecorator(mainQueryStr: oQueryStr);
end;

#doc
<brief>Декоратор строки запроса простой строкой</brief>
#end
vipinterface iQueryStrDecoratorCommon(iQueryStrDecorator) sourceFile="QueryStrDecoratorCommon.vip";
  public:
  #doc
  <brief></brief>
  #end
  constructor QueryStrDecoratorCommon(mainQueryStr: oQueryStr; sqlStr: variant);
  procedure oQueryStr.Create(var l: longint);
  property SqlStr: variant;
end;

#doc
<brief>Класс строки базового запроса. Содержит строки с секциями запроса.
</brief>
#end
objinterface oQueryStrBase(oQueryStr);
  property qInsert : oQueryStr;
  property qSelect : oQueryStr;
  property qFrom   : oQueryStr;
  property qJoin   : oQueryStr;
  property qWhere  : oQueryStr;
  property qGroupBy: oQueryStr;
end;

vipinterface iQueryStrBase implements oQueryStrBase sourceFile="QueryStrBase.vip";

#doc
<brief>Вип-интерфейс обычной строки запроса. Возвращает строку запроса, переданную в конструктор.</brief>
#end
vipinterface iQueryStrCommon implements oQueryStr sourceFile="QueryStrCommon.vip";
public:
  constructor QueryStrCommon(sqlStr: variant);
end;

#end
