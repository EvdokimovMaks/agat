#include Action.vih
#include Collection.vih
#include Iterator.vih

#component "UTILS"

interface iActionManager;

var
  _actions: oCollection;      //TODO: переписать на связный список
  _index: longint;

constructor Init;
{
  loadvipref(_actions, 'UTILS::iCollection');
  _index := -1;
  result := true;
}

procedure Execute(action: oAction);
{
  while (_index < _actions.GetCount - 1)
  {
    _actions.RemoveAt(_actions.GetCount - 1);
  }
  _actions.Add(action);
  _index := _actions.GetCount - 1;
  action.Execute;
}

procedure Undo;
{
  if (_index >= 0)
  {
    var action: oAction;
    action := _actions.Get(_index);
    if (action != NullRef)
    {
      action.unExecute;
      _index--;
    }
  }
}

procedure Redo;
{
  if (_index < _actions.GetCount)
  {
    var action: oAction;
    action := _actions.Get(_index);
    if (action != NullRef)
    {
      action.Execute;
      _index++;
    }
  }
}

end.
