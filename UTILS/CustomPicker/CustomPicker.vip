#include CustomPicker.vih

#component "UTILS"

interface iCustomPicker;

table struct tsel (nrec: comp, name: string) with index (i01 = nrec (unique), i02 = name);

var
  lMarker: longint;

create view
as select *
from tsel, tsel brsel (i02);

procedure oCustomPicker.ClearSelectionTable;
{
  delete all tsel;
}

procedure oCustomPicker.AddSelectionTableRecord(aNrec: comp; aName: string);
{
  if getfirst fastfirstrow tsel where ((aNrec == tsel.nrec)) != tsOk
  {
    if (aNrec = 0 and aName = '') aName := '[Пусто]';
    insert tsel set nrec := aNrec, name := aName;
  }
}

function oCustomPicker.SelectionTableRecordExists(aNrec: comp): boolean;
{
  result := ( getfirst fastfirstrow tsel where ((aNrec == tsel.nrec)) ) = tsOk;
}

window wpick doaccept, escclose;

browse brpick  (,,sci1InsPM);
table brsel;
fields
  {font={color=if(foundmarker(lmarker, brsel.nrec), 5, 0);}};
  if(foundmarker(lmarker, brsel.nrec), 'V', ''): [2], noautosize, skip;
  brsel.name 'Наименование': [80], protect;
end;

handleevent
  cmDoMarkUnmark:
  {
    if (foundmarker(lmarker, brsel.nrec))
      deletemarker(lmarker, brsel.nrec)
    else
      insertmarker(lmarker, brsel.nrec);
    redrawcurrentandgo(brpick, true);
  }
  cmSelAll:
  {
    pushpos(#brsel);
    clearmarker(lmarker);
    StartNewVisual(vtRotateVisual, vfBreak+vfTimer, 'Пометка записей', 0);
    _loop brsel
    {
      insertmarker(lmarker, brsel.nrec);
      if (not NextVisual) break;
    }
    StopVisual('',0);
    poppos(#brsel);
    rescanpanel(#brsel);
  }
  cmUnSelAll:
  {
    clearmarker(lmarker);
    rescanpanel(#brsel);
  }
end;

end;

function oCustomPicker.Pick(var aMarker: longint; aTitle: string): boolean;
{
  result := false;
  if (aMarker = 0)
    aMarker := initmarker('',8,10,100,false);
  if (lMarker = 0)
    lMarker := initmarker('',8,10,100,false);
  ClearMarker(lMarker);
  copymarker(lMarker, aMarker);
  rereadrecord(#brsel);
  setwindowtitle(wpick, aTitle);
  if runwindowmodal(wpick) = cmDefault
  {
    if getmarkercount(lMarker) = 0
      insertmarker(lMarker, brsel.nrec);
    copymarker(aMarker, lMarker);
    result := true;
  }
}

function oCustomPicker.GetName(aNrec: comp): string;
{
  if getfirst tsel where ((aNrec == tsel.nrec)) = tsOk
    result := tsel.name
  else
    result := '';
}

end.
