#component "AGAT"

#include SvodVedZPSdel.vih
#define sum_format '\2p[|-]366`666`666`666`666.88'
#define time_format '\2p[|-]366`666`666`666`666.888'

interface GetLoadOrderToSalary 'Выбор наряда для загрузки в модуль ЗП' doaccept, escclose;

const
  SDEL_NREC = 00010000000000F7h;
  STATUS_UTV = 00010000000000E2h;
end;

var
  MNPLNRC: comp;

create view
as select *
from mnplan
where ((
  SDEL_NREC == mnplan.CWAYACCOU and
  (mnplan.cstatus = STATUS_UTV)
));

parameters MNPLNRC;

browse br1
table mnplan;
fields
  mnplan.number 'Номер'           : [5], protect;
  mnplan.name   'Сдельные наряды' : [20], protect;
  mnplan.descr  'Дескриптор'      : [5], protect;
end;

handleevent
cminit:
{
  if getfirst mnplan != tsOk { message('Не найдены сдельные наряды.'); exit; };
}
cmDefault:
{
  MNPLNRC := mnplan.nrec; //GetCompParameter()
  RunInterface(LoadOrderToSalary, MNPLNRC);
}
end;
end.

interface LoadOrderToSalary 'Загрузка нарядов из модуля Планирования производства в модуль ЗП';
const
  CKAU_2601 = 00010000000009D9h; // 26010101 Должностной оклад
  CKAU_2602 = 00010000000009DAh; // 26010102 Премия ежемесячная
  CKAU_2001 = 000100000000095Ah; // 20020101 Должностной оклад
  CKAU_2002 = 000100000000095Bh; // 20020102 Премия ежемесячная
  CKAU_2008 = 0001000000000961h; // Прочие выплаты по ОЗП: 20020108
  CKAU_2607 = 00010000000009DFh; // Прочие выплаты по ОЗП: 26010107
  CKAU_2003 = 000100000000095Ch; // Премия квартальная: 20020103
  CKAU_2004 = 000100000000095Dh; // Премия годовая: 20020104
end;
var
  MnplanNrec: comp;
  SV: AGAT::SvodVedZPSdel;
  nameofpws: string;
parameters MnplanNrec;

create view
as select *
from SYS_NAR, PRNARYAD, NARDOP
where ((
 SYS_NAR.Nrec  == PRNARYAD.Mnrec and
 1             == NARDOP.TZP and
 PRNARYAD.Nrec == NARDOP.Mnrec
));

create view vLS
var _lsnrec: comp;
as select *
from lschet, catalogs
where ((
  _lsnrec         == lschet.nrec and
  lschet.CAPPOINT == catalogs.nrec
));

create view vPodr
var _persnrec: comp;
as select *
from persons, katpodr
where ((
  _persnrec      == persons.nrec and
  persons.galdep == katpodr.nrec
));

create view vKAU
var _ckaunrec: comp;
as select *
from spkau
where ((
  _ckaunrec == spkau.nrec
));

create view vSYSNAR
var _mnen: string;
as select *
from SYS_NAR
where ((
  _mnen == SYS_NAR.NMNEM
));

create view vVIDOPL
var _vidcode: word;
as select *
from klvidopl
where ((
_vidcode == klvidopl.vidoplp
));

handleevent
cmInit:
{
  ClearBuffer(#SYS_NAR);
  ClearBuffer(#PRNARYAD);
  ClearBuffer(#NARDOP);
  SV.addpws(MnplanNrec, 1, 4);   // это nrec MNPLAN'a (т.е. нашего сдельного наряда)
  var CNT_NAR: integer;
  CNT_NAR := 0;
  _loop SYS_NAR
  {
    CNT_NAR++;
  }
  CNT_NAR := CNT_NAR + 1;
  insert SYS_NAR set SYS_NAR.NMNEM := 'Наряд №'+CNT_NAR;

  SYS_NAR.MNREC := CNT_NAR;
  sys_nar.cex := pws.PodrNrec;
  sys_nar.filialno := 1;
  sys_nar.choice := 2;
  SYS_NAR.datan := pws.StartDate;
  SYS_NAR.datok := pws.EndDate;

  SYS_NAR.SUMMANAR := 0;
  SYS_NAR.SUMMAPREM := 0;

  _loop pwsWork                  // цикл для загрузки данных
  {
    if getfirst pwsPerson where ((pwswork.pwsPersonNrec == pwsPerson.Nrec)) = tsOk     // работы по человеку
    {
      if getfirst PRNARYAD where ((pwsPerson.PersonCode == PRNARYAD.tabn and (PRNARYAD.CKAUD[1] = pwswork.KatstroyNrec and PRNARYAD.mnrec = SYS_NAR.nrec))) != tsOk   // группировка по ФИО и заказу (надо ли ещё по виду?)
      {
        ClearBuffer(#PRNARYAD);
        PRNARYAD.TPERSON := pwsPerson.PersonNrec;
        PRNARYAD.mnrec := SYS_NAR.nrec;
        PRNARYAD.CLSCH := pwsPerson.LSchetNrec;
        PRNARYAD.tabn := pwsPerson.PersonCode;
        PRNARYAD.datan := pws.StartDate;
        PRNARYAD.datok := pws.EndDate;
        PRNARYAD.MES := Month(SYS_NAR.datan);

        vLS._lsnrec := pwsPerson.LSchetNrec;
        if vLS.getfirst lschet = tsOk { };

        PRNARYAD.cpodr := vLS.lschet.CAPPOINT;
        PRNARYAD.filialno := vLS.lschet.kateg;
        PRNARYAD.cexoz := vLS.lschet.cex;

        case pwsWork.Kind of       // распределение основных выплат в зависимости от вида работ
          0: {                                      // 20.03
               PRNARYAD.cschetd := '20';
               PRNARYAD.csubschd := '03';
               PRNARYAD.tbld[1] := 40; // объекты строительства
               PRNARYAD.tbld[2] := 10016; // статьи затрат
               PRNARYAD.tbld[3] := vLS.lschet.tbld[3];
               PRNARYAD.tbld[4] := vLS.lschet.tbld[4];
               PRNARYAD.CKAUD[1] := pwsWork.KatstroyNrec;
               PRNARYAD.CKAUD[2] := CKAU_2001;
               PRNARYAD.CKAUD[3] := vLS.lschet.CKAUD[3];
               PRNARYAD.CKAUD[4] := vLS.lschet.CKAUD[4];
               if vLS.lschet.sisopl = 20 and vLS.lschet.codtar = 1 or vLS.lschet.sisopl = 20 and vLS.lschet.codtar = 2 then    // Сдельная оплата (тсс-1 или тсс-2)
               {
                 vVIDOPL._vidcode := 100;
                 if vVIDOPL.getfirst klvidopl = tsOk { };
                 PRNARYAD.vidopl := vVIDOPL.klvidopl.vidopl;
               }
               if vLS.lschet.sisopl = 40 then                                     // оклад
               {
                 vVIDOPL._vidcode := 102;
                 if vVIDOPL.getfirst klvidopl = tsOk { };
                 PRNARYAD.vidopl := vVIDOPL.klvidopl.vidopl;
               }
               if vLS.lschet.sisopl = 30 then                                     // повременная оплата
               {
                 vVIDOPL._vidcode := 101;
                 if vVIDOPL.getfirst klvidopl = tsOk { };
                 PRNARYAD.vidopl := vVIDOPL.klvidopl.vidopl;
               }
             }
          1: {                                      // 96.02 Гарантийный ремонт
               PRNARYAD.cschetd := '96';
               PRNARYAD.csubschd := '02';
               PRNARYAD.tbld[1] := 1; // организации
               PRNARYAD.tbld[2] := 40; // объекты строительства
               PRNARYAD.tbld[3] := 14; // договоры
               PRNARYAD.tbld[4] := 158; // 2005. Виды задолженности
               if vLS.lschet.sisopl = 20 and vLS.lschet.codtar = 1 or vLS.lschet.sisopl = 20 and vLS.lschet.codtar = 2 then    // Сдельная оплата (тсс-1 или тсс-2)
               {
                 vVIDOPL._vidcode := 100;
                 if vVIDOPL.getfirst klvidopl = tsOk { };
                 PRNARYAD.vidopl := vVIDOPL.klvidopl.vidopl;
               }
               if vLS.lschet.sisopl = 40 then                                     // оклад
               {
                 vVIDOPL._vidcode := 102;
                 if vVIDOPL.getfirst klvidopl = tsOk { };
                 PRNARYAD.vidopl := vVIDOPL.klvidopl.vidopl;
               }
               if vLS.lschet.sisopl = 30 then
               {
                 vVIDOPL._vidcode := 101;
                 if vVIDOPL.getfirst klvidopl = tsOk { };
                 PRNARYAD.vidopl := vVIDOPL.klvidopl.vidopl;
               }
               PRNARYAD.CKAUD[2] := pwsWork.KatstroyNrec;        // объект строительства (+)
             }
          2: {                                      // 26.01
               PRNARYAD.cschetd := '26';
               PRNARYAD.csubschd := '01';
               PRNARYAD.tbld[1] := 40; // объекты строительства
               PRNARYAD.tbld[2] := 10016; // статьи затрат
               PRNARYAD.tbld[3] := vLS.lschet.tbld[3];
               PRNARYAD.tbld[4] := vLS.lschet.tbld[4];
               PRNARYAD.CKAUD[1] := pwsWork.KatstroyNrec;        // объект строительства (+)
               PRNARYAD.CKAUD[2] := CKAU_2601;                   // 26010101 Должностной оклад
               PRNARYAD.CKAUD[3] := vLS.lschet.CKAUD[3];         // из лицевого счета
               PRNARYAD.CKAUD[4] := vLS.lschet.CKAUD[4];         // из лицевого счета
             }
        end;

        if pwsPerson.BonusValue <> 0      // заполнение vidprem ("Вид премии")
        {
          if vLS.lschet.sisopl = 20 and vLS.lschet.codtar = 1 or vLS.lschet.sisopl = 20 and vLS.lschet.codtar = 2 then   // премия с кодом 110
            PRNARYAD.vidprem := 2;
          if vLS.lschet.sisopl = 40 then                                                                                 // премия с кодом 109
            PRNARYAD.vidprem := 205;
          if vLS.lschet.sisopl = 30 then                                                                                 // премия с кодом 108
            PRNARYAD.vidprem := 211;
        }

        insert current PRNARYAD;
      }

      if pwsWork.HazardPayValue <> 0        // надбавка за вредность (+)
      {
        if getfirst NARDOP where ((1 == NARDOP.tzp and PRNARYAD.nrec == NARDOP.mnrec and (NARDOP.vidopl = 16 or NARDOP.vidopl = 19))) != tsOk then
        {
          ClearBuffer(#NARDOP);
          NARDOP.MNREC := PRNARYAD.Nrec;
          NARDOP.CSCHETD := PRNARYAD.cschetd;
          NARDOP.CSUBSCHD := PRNARYAD.csubschd;
          NARDOP.SUMDOP := pwsWork.QualifPayValue;
          NARDOP.proc := pwsWork.QualifPayPercent;

          if vLS.lschet.sisopl = 20 and vLS.lschet.codtar = 1 or vLS.lschet.sisopl = 20 and vLS.lschet.codtar = 2 then   // сдельно
            vVIDOPL._vidcode := 120
          else  // оклад или повременно
            vVIDOPL._vidcode := 121;
          if vVIDOPL.getfirst klvidopl = tsOk { };
          NARDOP.VIDOPL := vVIDOPL.klvidopl.vidopl;

          case pwsWork.Kind of
          0: {
               NARDOP.tbld[1] := 40; // объекты строительства
               NARDOP.tbld[2] := 10016; // статьи затрат
               NARDOP.tbld[3] := vLS.lschet.tbld[3];
               NARDOP.tbld[4] := vLS.lschet.tbld[4];
               NARDOP.CKAUD[1] := pwsWork.KatstroyNrec;
               NARDOP.CKAUD[2] := CKAU_2008;
               NARDOP.CKAUD[3] := vLS.lschet.CKAUD[3];
               NARDOP.CKAUD[4] := vLS.lschet.CKAUD[4];
             }
          1: {
               NARDOP.tbld[1] := 1; // организации
               NARDOP.tbld[2] := 40; // объекты строительства
               NARDOP.tbld[3] := 14; // договоры
               NARDOP.tbld[4] := 158; // 2005. Виды задолженности
               NARDOP.CKAUD[2] := pwsWork.KatstroyNrec;
             }
          end;

          insert current NARDOP;
        }
        else
        {
          NARDOP.SUMDOP := NARDOP.SUMDOP + pwsWork.HazardPayValue;
          update current NARDOP;
        }
      }

      if pwsWork.QualifPayValue <> 0        // межразрядная сумма (+)
      {
        if getfirst NARDOP where ((1 == NARDOP.tzp and PRNARYAD.nrec == NARDOP.mnrec and (NARDOP.vidopl = 17))) != tsOk then
        {
          ClearBuffer(#NARDOP);
          NARDOP.MNREC := PRNARYAD.Nrec;
          NARDOP.CSCHETD := PRNARYAD.cschetd;
          NARDOP.CSUBSCHD := PRNARYAD.csubschd;
          vVIDOPL._vidcode := 118;
          if vVIDOPL.getfirst klvidopl = tsOk { };
          NARDOP.VIDOPL := vVIDOPL.klvidopl.vidopl;
          NARDOP.SUMDOP := pwsWork.QualifPayValue;
          NARDOP.proc := pwsWork.QualifPayPercent;

          case pwsWork.Kind of
          0: {
               NARDOP.tbld[1] := 40; // объекты строительства
               NARDOP.tbld[2] := 10016; // статьи затрат
               NARDOP.tbld[3] := vLS.lschet.tbld[3];
               NARDOP.tbld[4] := vLS.lschet.tbld[4];
               NARDOP.CKAUD[1] := pwsWork.KatstroyNrec;
               NARDOP.CKAUD[2] := CKAU_2008;
               NARDOP.CKAUD[3] := vLS.lschet.CKAUD[3];
               NARDOP.CKAUD[4] := vLS.lschet.CKAUD[4];
             }
          1: {
               NARDOP.tbld[1] := 1; // организации
               NARDOP.tbld[2] := 40; // объекты строительства
               NARDOP.tbld[3] := 14; // договоры
               NARDOP.tbld[4] := 158; // 2005. Виды задолженности
               NARDOP.CKAUD[2] := pwsWork.KatstroyNrec;
             }
          end;

          insert current NARDOP;
        }
        else
        {
          NARDOP.SUMDOP := NARDOP.SUMDOP + pwsWork.QualifPayValue;
          update current NARDOP;
        }
      }

      PRNARYAD.CHASF := PRNARYAD.CHASF + pwsWork.AvgHours;                                          // часы по факту
      PRNARYAD.KOLDN := trunc(PRNARYAD.CHASF / 8);
      PRNARYAD.CHASGR := pwsPerson.BalanceHoursPlan * PRNARYAD.CHASF / pwsPerson.BalanceHoursFact;  // часы по плану
      PRNARYAD.SUMMPREM := pwsPerson.BonusValue * PRNARYAD.CHASF / pwsPerson.BalanceHoursFact;
      PRNARYAD.SUMMA := pwsPerson.PaymentValue * PRNARYAD.CHASF / pwsPerson.BalanceHoursFact;

      update current PRNARYAD;
    }
  }

  _loop pwsWork                  // цикл для разбивки доплат по заказам
  {
    if getfirst pwsPerson where ((pwswork.pwsPersonNrec == pwsPerson.Nrec)) = tsOk  // все работы по человеку
    { // строки спецификации бух. наряда разбиты по людям и заказам (объектам строительства)
      if getfirst PRNARYAD where ((pwsPerson.PersonCode == PRNARYAD.tabn and (PRNARYAD.CKAUD[1] = pwswork.KatstroyNrec and PRNARYAD.mnrec = SYS_NAR.nrec))) = tsOk then
      {
        if pwsPerson.BonusValue <> 0                       // сумма премии (+)
        {
          if getfirst NARDOP where ((1 == NARDOP.tzp and PRNARYAD.nrec == NARDOP.mnrec and (NARDOP.vidopl = 2 or NARDOP.vidopl = 205 or NARDOP.vidopl = 211))) != tsOk
          {
            case pwsWork.Kind of       // распределение суммы премий в зависимости от вида работ
            0: {                                      // 20.03
                 ClearBuffer(#NARDOP);
                 NARDOP.MNREC := PRNARYAD.Nrec;
                 NARDOP.CSCHETD := PRNARYAD.cschetd;
                 NARDOP.CSUBSCHD := PRNARYAD.csubschd;
                 NARDOP.tbld[1] := 40; // объекты строительства
                 NARDOP.tbld[2] := 10016; // статьи затрат
                 NARDOP.tbld[3] := vLS.lschet.tbld[3];
                 NARDOP.tbld[4] := vLS.lschet.tbld[4];
                 NARDOP.CKAUD[1] := pwsWork.KatstroyNrec;
                 NARDOP.CKAUD[2] := CKAU_2002;
                 NARDOP.CKAUD[3] := vLS.lschet.CKAUD[3];
                 NARDOP.CKAUD[4] := vLS.lschet.CKAUD[4];
                 if vLS.lschet.sisopl = 20 and vLS.lschet.codtar = 1 or vLS.lschet.sisopl = 20 and vLS.lschet.codtar = 2 then    // Сдельная оплата (тсс-1 или тсс-2)
                 {
                   vVIDOPL._vidcode := 110;
                   if vVIDOPL.getfirst klvidopl = tsOk { };
                   NARDOP.VIDOPL := vVIDOPL.klvidopl.vidopl;
                   NARDOP.SUMDOP := pwsPerson.BonusValue * pwsWork.AvgHours / pwsPerson.BalanceHoursFact;
                   NARDOP.proc := pwsPerson.BonusPercent;
                 }
                 if vLS.lschet.sisopl = 40 then                                     // оклад
                 {
                   vVIDOPL._vidcode := 108;
                   if vVIDOPL.getfirst klvidopl = tsOk { };
                   NARDOP.VIDOPL := vVIDOPL.klvidopl.vidopl;
                   NARDOP.SUMDOP := pwsPerson.BonusValue * pwsWork.AvgHours / pwsPerson.BalanceHoursFact;
                   NARDOP.proc := pwsPerson.BonusPercent;
                 }
                 if vLS.lschet.sisopl = 30 then                                     // повременная оплата
                 {
                   vVIDOPL._vidcode := 109;
                   if vVIDOPL.getfirst klvidopl = tsOk { };
                   NARDOP.VIDOPL := vVIDOPL.klvidopl.vidopl;
                   NARDOP.SUMDOP := pwsPerson.BonusValue * pwsWork.AvgHours / pwsPerson.BalanceHoursFact;
                   NARDOP.proc := pwsPerson.BonusPercent;
                 }
                 insert current NARDOP;
               }
            1: {                                      // 96.02 Гарантийный ремонт
                 ClearBuffer(#NARDOP);
                 NARDOP.MNREC := PRNARYAD.Nrec;
                 NARDOP.CSCHETD := PRNARYAD.cschetd;
                 NARDOP.CSUBSCHD := PRNARYAD.csubschd;
                 NARDOP.tbld[1] := 1; // организации
                 NARDOP.tbld[2] := 40; // объекты строительства
                 NARDOP.tbld[3] := 14; // договоры
                 NARDOP.tbld[4] := 158; // 2005. Виды задолженности
                 NARDOP.CKAUD[2] := pwsWork.KatstroyNrec;        // объект строительства (+)
                 if vLS.lschet.sisopl = 20 and vLS.lschet.codtar = 1 or vLS.lschet.sisopl = 20 and vLS.lschet.codtar = 2 then    // Сдельная оплата (тсс-1 или тсс-2)
                 {
                   vVIDOPL._vidcode := 110;
                   if vVIDOPL.getfirst klvidopl = tsOk { };
                   NARDOP.VIDOPL := vVIDOPL.klvidopl.vidopl;
                   NARDOP.SUMDOP := pwsPerson.BonusValue * pwsWork.AvgHours / pwsPerson.BalanceHoursFact;
                   NARDOP.proc := pwsPerson.BonusPercent;
                 }
                 if vLS.lschet.sisopl = 40 then                                     // оклад
                 {
                   vVIDOPL._vidcode := 108;
                   if vVIDOPL.getfirst klvidopl = tsOk { };
                   NARDOP.VIDOPL := vVIDOPL.klvidopl.vidopl;
                   NARDOP.SUMDOP := pwsPerson.BonusValue * pwsWork.AvgHours / pwsPerson.BalanceHoursFact;
                   NARDOP.proc := pwsPerson.BonusPercent;
                 }
                 if vLS.lschet.sisopl = 30 then                                     // повременная оплата
                 {
                   vVIDOPL._vidcode := 109;
                   if vVIDOPL.getfirst klvidopl = tsOk { };
                   NARDOP.VIDOPL := vVIDOPL.klvidopl.vidopl;
                   NARDOP.SUMDOP := pwsPerson.BonusValue * pwsWork.AvgHours / pwsPerson.BalanceHoursFact;
                   NARDOP.proc := pwsPerson.BonusPercent;
                 }
                 insert current NARDOP;
               }
            2: {                                      // 26.01
                 ClearBuffer(#NARDOP);
                 NARDOP.MNREC := PRNARYAD.Nrec;
                 NARDOP.CSCHETD := PRNARYAD.cschetd;
                 NARDOP.CSUBSCHD := PRNARYAD.csubschd;
                 NARDOP.tbld[1] := 40; // объекты строительства
                 NARDOP.tbld[2] := 10016; // статьи затрат
                 NARDOP.tbld[3] := vLS.lschet.tbld[3];
                 NARDOP.tbld[4] := vLS.lschet.tbld[4];
                 NARDOP.CKAUD[1] := pwsWork.KatstroyNrec;        // объект строительст
                 NARDOP.CKAUD[2] := CKAU_2602;                   // 26010101 Должностн
                 NARDOP.CKAUD[3] := vLS.lschet.CKAUD[3];         // из лицевого счета
                 NARDOP.CKAUD[4] := vLS.lschet.CKAUD[4];         // из лицевого счета

                 if vLS.lschet.sisopl = 20 and vLS.lschet.codtar = 1 or vLS.lschet.sisopl = 20 and vLS.lschet.codtar = 2 then    // Сдельная оплата (тсс-1 или тсс-2)
                 {
                   vVIDOPL._vidcode := 110;
                   if vVIDOPL.getfirst klvidopl = tsOk { };
                   NARDOP.VIDOPL := vVIDOPL.klvidopl.vidopl;
                   NARDOP.SUMDOP := pwsPerson.BonusValue * pwsWork.AvgHours / pwsPerson.BalanceHoursFact;
                   NARDOP.proc := pwsPerson.BonusPercent;
                 }
                 if vLS.lschet.sisopl = 40 then                                     // оклад
                 {
                   vVIDOPL._vidcode := 108;
                   if vVIDOPL.getfirst klvidopl = tsOk { };
                   NARDOP.VIDOPL := vVIDOPL.klvidopl.vidopl;
                   NARDOP.SUMDOP := pwsPerson.BonusValue * pwsWork.AvgHours / pwsPerson.BalanceHoursFact;
                   NARDOP.proc := pwsPerson.BonusPercent;
                 }
                 if vLS.lschet.sisopl = 30 then                                     // повременная оплата
                 {
                   vVIDOPL._vidcode := 109;
                   if vVIDOPL.getfirst klvidopl = tsOk { };
                   NARDOP.VIDOPL := vVIDOPL.klvidopl.vidopl;
                   NARDOP.SUMDOP := pwsPerson.BonusValue * pwsWork.AvgHours / pwsPerson.BalanceHoursFact;
                   NARDOP.proc := pwsPerson.BonusPercent;
                 }
                 insert current NARDOP;
               }
            end;
          }
          else
          {
            NARDOP.SUMDOP += pwsPerson.BonusValue * pwsWork.AvgHours / pwsPerson.BalanceHoursFact;
            update current NARDOP;
          }
        }

        if pwsPerson.BonusHzrdValue <> 0                   // сумма премии за вредность (+)
        {
          if getfirst NARDOP where ((1 == NARDOP.tzp and PRNARYAD.nrec == NARDOP.mnrec and (NARDOP.vidopl = 3))) != tsOk then
          {
            ClearBuffer(#NARDOP);
            NARDOP.MNREC := PRNARYAD.Nrec;
            NARDOP.CSCHETD := PRNARYAD.cschetd;
            NARDOP.CSUBSCHD := PRNARYAD.csubschd;
            vVIDOPL._vidcode := 111;
            if vVIDOPL.getfirst klvidopl = tsOk { };
            NARDOP.VIDOPL := vVIDOPL.klvidopl.vidopl;
            NARDOP.SUMDOP := pwsPerson.BonusHzrdValue * pwsWork.AvgHours / pwsPerson.BalanceHoursFact;
            NARDOP.proc := pwsPerson.BonusHzrdPercent;

            if vLS.lschet.sisopl = 20 and vLS.lschet.codtar = 1 or vLS.lschet.sisopl = 20 and vLS.lschet.codtar = 2 then    // только для Сдельная оплата (тсс-1 или тсс-2)
            {
              if pwsWork.Kind = 0  // 20.03
              {
                NARDOP.tbld[1] := 40; // объекты строительства
                NARDOP.tbld[2] := 10016; // статьи затрат
                NARDOP.tbld[3] := vLS.lschet.tbld[3];
                NARDOP.tbld[4] := vLS.lschet.tbld[4];
                NARDOP.CKAUD[1] := pwsWork.KatstroyNrec;
                NARDOP.CKAUD[2] := CKAU_2008;
                NARDOP.CKAUD[3] := vLS.lschet.CKAUD[3];
                NARDOP.CKAUD[4] := vLS.lschet.CKAUD[4];
              }
              if pwsWork.Kind = 1
              {
                NARDOP.tbld[1] := 1; // организации
                NARDOP.tbld[2] := 40; // объекты строительства
                NARDOP.tbld[3] := 14; // договоры
                NARDOP.tbld[4] := 158; // 2005. Виды задолженности
                NARDOP.CKAUD[2] := pwsWork.KatstroyNrec;
              }
            }
            insert current NARDOP;
          }
          else
          {
            NARDOP.sumdop += pwsPerson.BonusHzrdValue * pwsWork.AvgHours / pwsPerson.BalanceHoursFact;
            update current NARDOP;
          }
        }

        if pwsPerson.BonusOtherValue <> 0                  // доп надбавки (+)
        {
          if getfirst NARDOP where ((1 == NARDOP.tzp and PRNARYAD.nrec == NARDOP.mnrec and (NARDOP.vidopl = 46 or NARDOP.vidopl = 23))) != tsOk then
          {
            ClearBuffer(#NARDOP);
            NARDOP.MNREC := PRNARYAD.Nrec;
            NARDOP.CSCHETD := PRNARYAD.cschetd;
            NARDOP.CSUBSCHD := PRNARYAD.csubschd;
            case pwsWork.Kind of
             3: vVIDOPL._vidcode := 138; // 26.перс.надбавка
             4: vVIDOPL._vidcode := 117; // 26.доп.надбавка
            end;
            if vVIDOPL.getfirst klvidopl = tsOk { };
            NARDOP.VIDOPL := vVIDOPL.klvidopl.vidopl;
            NARDOP.SUMDOP := pwsPerson.BonusOtherValue * pwsWork.AvgHours / pwsPerson.BalanceHoursFact;

            if pwsWork.Kind = 3 or pwsWork.Kind = 4 then
            {
              NARDOP.tbld[1] := 40; // объекты строительства
              NARDOP.tbld[2] := 10016; // статьи затрат
              NARDOP.tbld[3] := vLS.lschet.tbld[3];
              NARDOP.tbld[4] := vLS.lschet.tbld[4];
              NARDOP.CKAUD[1] := pwsWork.KatstroyNrec;        // объект строительства (+)
              NARDOP.CKAUD[2] := CKAU_2601;                   // 26010101 Должностной оклад
              NARDOP.CKAUD[3] := vLS.lschet.CKAUD[3];         // из лицевого счета
              NARDOP.CKAUD[4] := vLS.lschet.CKAUD[4];         // из лицевого счета
            }
            insert current NARDOP;
          }
          else
          {
            NARDOP.SUMDOP += pwsPerson.BonusOtherValue * pwsWork.AvgHours / pwsPerson.BalanceHoursFact;
            update current NARDOP;
          }
        }

        if pwsPerson.BonusQuarValue <> 0                  // квартальная премия (+)
        {
          if getfirst NARDOP where ((1 == NARDOP.tzp and PRNARYAD.nrec == NARDOP.mnrec and (NARDOP.vidopl = 240))) != tsOk then
          {
            ClearBuffer(#NARDOP);
            NARDOP.MNREC := PRNARYAD.Nrec;
            NARDOP.CSCHETD := PRNARYAD.cschetd;
            NARDOP.CSUBSCHD := PRNARYAD.csubschd;
            vVIDOPL._vidcode := 107;
            if vVIDOPL.getfirst klvidopl = tsOk { };
            NARDOP.VIDOPL := vVIDOPL.klvidopl.vidopl;
            NARDOP.SUMDOP := pwsPerson.BonusOtherValue * pwsWork.AvgHours / pwsPerson.BalanceHoursFact;
            NARDOP.proc := pwsPerson.BonusQuarPercent;

            if pwsWork.Kind = 0  // 20.03
            {
              NARDOP.tbld[1] := 40; // объекты строительства
              NARDOP.tbld[2] := 10016; // статьи затрат
              NARDOP.tbld[3] := vLS.lschet.tbld[3];
              NARDOP.tbld[4] := vLS.lschet.tbld[4];
              NARDOP.CKAUD[1] := pwsWork.KatstroyNrec;
              NARDOP.CKAUD[2] := CKAU_2003;
              NARDOP.CKAUD[3] := vLS.lschet.CKAUD[3];
              NARDOP.CKAUD[4] := vLS.lschet.CKAUD[4];
            }
            if pwsWork.Kind = 1
            {
              PRNARYAD.tbld[1] := 1; // организации
              PRNARYAD.tbld[2] := 40; // объекты строительства
              PRNARYAD.tbld[3] := 14; // договоры
              PRNARYAD.tbld[4] := 158; // 2005. Виды задолженности
              NARDOP.CKAUD[2] := pwsWork.KatstroyNrec;
            }

            insert current NARDOP;
          }
          else
          {
            NARDOP.SUMDOP += pwsPerson.BonusOtherValue * pwsWork.AvgHours / pwsPerson.BalanceHoursFact;
            update current NARDOP;
          }
        }

        if pwsPerson.BonusYearValue <> 0                  // годовая премия (+)
        {
          if getfirst NARDOP where ((1 == NARDOP.tzp and PRNARYAD.nrec == NARDOP.mnrec and (NARDOP.vidopl = 166))) != tsOk then
          {
            ClearBuffer(#NARDOP);
            NARDOP.MNREC := PRNARYAD.Nrec;
            NARDOP.CSCHETD := PRNARYAD.cschetd;
            NARDOP.CSUBSCHD := PRNARYAD.csubschd;
            vVIDOPL._vidcode := 114;
            if vVIDOPL.getfirst klvidopl = tsOk { };
            NARDOP.VIDOPL := vVIDOPL.klvidopl.vidopl;
            NARDOP.SUMDOP := pwsPerson.BonusYearValue * pwsWork.AvgHours / pwsPerson.BalanceHoursFact;
            NARDOP.proc := pwsPerson.BonusYearPercent;

            if pwsWork.Kind = 0  // 20.03
            {
              NARDOP.tbld[1] := 40; // объекты строительства
              NARDOP.tbld[2] := 10016; // статьи затрат
              NARDOP.tbld[3] := vLS.lschet.tbld[3];
              NARDOP.tbld[4] := vLS.lschet.tbld[4];
              NARDOP.CKAUD[1] := pwsWork.KatstroyNrec;
              NARDOP.CKAUD[2] := CKAU_2004;
              NARDOP.CKAUD[3] := vLS.lschet.CKAUD[3];
              NARDOP.CKAUD[4] := vLS.lschet.CKAUD[4];
            }
            if pwsWork.Kind = 1  // 96.02
            {
              PRNARYAD.tbld[1] := 1; // организации
              PRNARYAD.tbld[2] := 40; // объекты строительства
              PRNARYAD.tbld[3] := 14; // договоры
              PRNARYAD.tbld[4] := 158; // 2005. Виды задолженности
              NARDOP.CKAUD[2] := pwsWork.KatstroyNrec;
            }

            insert current NARDOP;
          }
          else
          {
            NARDOP.SUMDOP += pwsPerson.BonusYearValue * pwsWork.AvgHours / pwsPerson.BalanceHoursFact;
            update current NARDOP;
          }
        }
      }
    }
  }

  _loop PRNARYAD where ((SYS_NAR.nrec == PRNARYAD.mnrec))
  {
    SYS_NAR.SUMMANAR += PRNARYAD.SUMMA;
    SYS_NAR.SUMMAPREM += PRNARYAD.SUMMPREM;
  }

  update current SYS_NAR;
  message('Создан "' + SYS_NAR.NMNEM + '"');
  RunInterface(Z_MP::SYS_NAR, 2);
}
end;

end.
