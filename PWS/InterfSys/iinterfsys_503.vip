#component "M_MNPLAN"

vipinterface iInterfSys_503 implements Util_ScrSp licensed(free);

interface iInterfSys_503;

var
  gldt            : GlobData;
  iom             : oMainVid;
  ipws            : EditPws new;

create View
var
  cCurMnPlan: Comp;

as select *
from mnplan
where ((
  cCurMnPlan == mnplan.nrec
));

embedded scMain interface ipws;
end;

Function InitInter (pGldt: GLOBDATA; piOm: oMainVid): Boolean;
{
  gldt   := pGldt;
  iom    := piOm;
  result := true;
}

Function DoneInter: Boolean;
{
  ipws.DoneInterface;
  if (Not NullVipRef(gldt))
    FreeVipInterface(gldt);
  result := true;
}

Function SetOwner (ccMnPlan: Comp): Boolean;
{
  cCurMnPlan := ccMnPlan;
  if (getfirst  mnplan != tsOk)
  {
    message(''#3'iInterfSys_503.SetOwner: Ошибка установки курсора на документ', Error);
    Result := false;
    exit;
  }
  StartNewVisual(vtRotateVisual,vfTimer,'Загрузка',0);
  ipws.InitInterface(ccMnPlan);
  StopVisual('', 0);
  rereadrecord;
  result := true;
}

Procedure EventSetParVid (wFlag: Word);
{
  if wFlag = 0 { };
}

Function SetWindowVid (sp: String): Boolean;
{
  if (sp = '') { };
  result := true;
}

Function GetCurPos (var pWlist: Word): Comp;
{
  if (pWlist = 0) { }
  result := 0;
}

Procedure MySetColumnTitle;
{
}

Procedure FillHaveInReserv (Date2Q: Date);
{
  if (Date2Q <> Date2Q) { }
}

Function CheckEnableUseInterface (SysNumVid: Word; WayAccouNRec: Comp; NumVid_WayAccou: Comp; Flag: Word): Boolean;
{
  if ((SysNumVid = 0) and (WayAccouNRec = 0) and (NumVid_WayAccou = 0) and (Flag = 0)) { }
  result := true;
}

Function GetNameInter: String;
{
  result := 'iInterfSys_503';
}

Function GetNameInterPr: String;
{
  result := ''; //iInterfSetup_503
}

Function GetNum: Word;
{
  result := 10503;
}

Function GetName: String;
{
  result := 'Агат. Интерфейс редактирования сдельного наряда';
}

Function GetMemo (st: oSteckCommonString): Boolean;
{
  st.push('Интерфейс редактирования сдельного наряда');
  st.push('Плоское представление');
  result := true;
}

Function SetGetParam (var FlagParam: LongInt; var Direction: Word; var cValue: Comp; var dValue: Double; var lValue: LongInt; var wValue: Word; var dtValue: Date; var dttValue: DateTime; var sValue: s250): Boolean;
{
  result := true;
  if ((cValue > 0) and (dValue > 0) and (lValue > 0) and (wValue > 0) and (sValue = '') and (dtValue = dttValue)) { }
  //message('SetGetParam Direction='+Direction+', FlagParam='+FlagParam+', wValue='+wValue+', cValue='+string(cValue,0,0)+', sValue='+sValue);

  if (( Direction and 1) > 0)
  {
    case FlagParam of
      2:
      {
        if(getfirst mnplan = tsOk)
        {
          StartNewVisual(vtRotateVisual,vfTimer,'Обновление',0);
          ipws.ReloadHeader;
          ipws.RecalcBalanceHoursPlan;
          StopVisual('',0);
        }
      }
      16:
      {
        StartNewVisual(vtRotateVisual,vfTimer,'Сохранение',0);
        ipws.DoneInterface;
        StopVisual('',0);
      }
    end;

  }
}
end.
