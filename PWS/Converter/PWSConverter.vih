#ifndef __pwsConverter__
#define __pwsConverter__

#include PWSDataRepository.vih

#component "AGAT"

const
  workkind_00            = word(-1);
  workkind_20            = word(0);
  workkind_96            = word(1);
  workkind_26            = word(2);
  workkind_91            = word(3);

  paymodel_sdeln         = word(20);
  paymodel_povr          = word(30);
  paymodel_oklad         = word(40);

  fld_prnaryad           = word(0);
  fld_Bonus              = word(1);
  fld_HazardPayValue     = word(2);
  fld_QualifPayValue     = word(3);
  fld_BonusValue         = word(4);
  fld_BonusHzrdValue     = word(5);
  fld_BonusQuarValue     = word(6);
  fld_BonusYearValue     = word(7);
  fld_BonusQualif20Value = word(8);
  fld_BonusQualif26Value = word(9);
  fld_BonusCombineValue  = word(10);

  rulecode_vidopl        = word(-1);
  rulecode_schet         = word(-2);

  kaucode_buhstz         = 10016; //2013 Статьи затрат
  kaucode_vidzad         = 0; //2005 Виды задолженности
  kaucode_vidprr         = 0; //2005 Виды прочих расходов

  KATSTROY_OTHER         = 400101CD65EDBD15h;
end;

objinterface IPWSConverterRules;
  procedure AddRuleVidoplSchet  (aworkKind: word; apayModel: word; afldKind: word; aVidopl: word; aSchet: string);
  procedure AddRuleVidoplSchetAn(aworkKind: word; apayModel: word; afldKind: word;
                                 aVidopl: word; aSchet: string; aKauCode: word; aKauValue: variant);
  procedure AddRule(aworkKind: word; apayModel: word; afldKind: word; acode: word; avalue: variant);
  function  RuleExists(aworkKind: word; apayModel: word; afldKind: word; acode: word): boolean;
  function  GetRuleValue(aworkKind: word; apayModel: word; afldKind: word; acode: word): variant;
  procedure ClearRules;
  procedure ShowRules;
end;

vipinterface PWSConverterRules implements IPWSConverterRules;
public:
  constructor Init;
end;

objinterface IPWSConverter;
  function ConvertToSysNar(aMnplanNrec: comp): comp;
  procedure ShowRules;
end;

vipinterface PWSConverter implements IPWSConverter;
public:
  constructor Init;
  property Rules: IPWSConverterRules;
  property DataRepository: IPWSDataRepository;
end;

#end
