#include pws.vih
#include appfuncs.vih

#component "AGAT"

interface pwsReportDataStream;

var
  _af: AppointmentsFunctions;

create view

as select *

from pws, pwsPerson, pwsWork,
     fpperiod, katpodr, klsisopl, klrejim, katstroy

where ((
  pws.Nrec             == pwsPerson.pwsNrec     and
  pwsPerson.nrec       == pwsWork.pwsPersonNrec and
  pws.PeriodNrec       == fpperiod.nrec         and
  pws.PodrNrec         == katpodr.nrec          and
  pwsPerson.PayModel   == klsisopl.sisopl       and
  pwsPerson.WorkMode   == klrejim.rejim         and
  pwsWork.KatstroyNrec == katstroy.nrec
));

datastream pwsDS

(

  table pws
  (
    [Nrec]       pws.Nrec;
    [MnplanNrec] pws.MnplanNrec;
    [Number]     pws.Number;
    [Name]       pws.Name;
    [PeriodNrec] pws.PeriodNrec;
    [PodrNrec]   pws.PodrNrec;
    [StartDate]  pws.StartDate;
    [EndDate]    pws.EndDate;
    [PeriodName] if(getfirst fpperiod = tsOk, fpperiod.name, '');
    [PeriodDbeg] if(getfirst fpperiod = tsOk, fpperiod.dbeg, 0);
    [PeriodDend] if(getfirst fpperiod = tsOk, fpperiod.dend, 0);
    [PodrCode]   if(getfirst katpodr = tsOk, katpodr.kod, '');
    [PodrName]   if(getfirst katpodr = tsOk, katpodr.name, '');
  );

  table pwsPerson
  (
    [Nrec]                 pwsPerson.Nrec;
    [SpmnplanNrec]         pwsPerson.SpmnplanNrec;
    [pwsNrec]              pwsPerson.pwsNrec;
    [PersonNrec]           pwsPerson.PersonNrec;
    [PersonName]           pwsPerson.PersonName;
    [PersonCode]           pwsPerson.PersonCode;
    [LSchetNrec]           pwsPerson.LSchetNrec;
    [PayModel]             pwsPerson.PayModel;
    [Grade]                pwsPerson.Grade;
    [WorkMode]             pwsPerson.WorkMode;
    [BalanceHoursPlan]     pwsPerson.BalanceHoursPlan;
    [BalanceHoursFact]     pwsPerson.BalanceHoursFact;
    [WorkedHoursFull]      pwsPerson.WorkedHoursFull;
    [SalaryPlan]           pwsPerson.SalaryPlan;
    [SalaryFact]           pwsPerson.SalaryFact;
    [RatePercent]          pwsPerson.RatePercent;
    [PaymentValue]         pwsPerson.PaymentValue;
    [HazardPayValue]       pwsPerson.HazardPayValue;
    [QualifPayValue]       pwsPerson.QualifPayValue;
    [BonusPercent]         pwsPerson.BonusPercent;
    [BonusValue]           pwsPerson.BonusValue;
    [BonusHzrdPercent]     pwsPerson.BonusHzrdPercent;
    [BonusHzrdValue]       pwsPerson.BonusHzrdValue;
    [BonusQualif20Value]   pwsPerson.BonusQualif20Value;
    [BonusQualif26Value]   pwsPerson.BonusQualif26Value;
    [BonusCombineValue]    pwsPerson.BonusCombineValue;
    [BonusQuarPercent]     pwsPerson.BonusQuarPercent;
    [BonusQuarValue]       pwsPerson.BonusQuarValue;
    [BonusYearPercent]     pwsPerson.BonusYearPercent;
    [BonusYearValue]       pwsPerson.BonusYearValue;
    [PayModelName]         if(getfirst klsisopl = tsOk, klsisopl.nasisopl, '');
    [WorkModeName]         if(getfirst klrejim = tsOk, klrejim.nrejim, '');
    [PostName]             _af.GetAppPost(_af.GetAppNrec_OnDate(pwsPerson.PersonNrec, if(pws.EndDate = 0, cur_date, pws.EndDate)));
  );

  table pwsWork
  (
    [Nrec]              pwsWork.Nrec;
    [SpmnplNrec]        pwsWork.SpmnplNrec;
    [ValspmnpNrec]      pwsWork.ValspmnpNrec;
    [pwsPersonNrec]     pwsWork.pwsPersonNrec;
    [Number]            pwsWork.Number;
    [JobCreationDate]   pwsWork.JobCreationDate;
    [JobFinishDate]     pwsWork.JobFinishDate;
    [Kind]              pwsWork.Kind;
    [KatstroyNrec]      pwsWork.KatstroyNrec;
    [KatmarshNrec]      pwsWork.KatmarshNrec;
    [KatmarshName]      pwsWork.KatmarshName;
    [KatmarshCode]      pwsWork.KatmarshCode;
    [MarshSpNrec]       pwsWork.MarshSpNrec;
    [MarshSpName]       pwsWork.MarshSpName;
    [MarshSpCode]       pwsWork.MarshSpCode;
    [Grade]             pwsWork.Grade;
    [Qty]               pwsWork.Qty;
    [PieceHours]        pwsWork.PieceHours;
    [PrepareHours]      pwsWork.PrepareHours;
    [StdHours]          pwsWork.StdHours;
    [FullHours]         pwsWork.FullHours;
    [AvgHours]          pwsWork.AvgHours;
    [Koeff]             pwsWork.Koeff;
    [Price]             pwsWork.Price;
    [Tarif]             pwsWork.Tarif;
    [PaymentValue]      pwsWork.PaymentValue;
    [HazardPayPercent]  pwsWork.HazardPayPercent;
    [HazardPayValue]    pwsWork.HazardPayValue;
    [QualifPayPercent]  pwsWork.QualifPayPercent;
    [QualifPayValue]    pwsWork.QualifPayValue;
    [KatstroyShortName] if(getfirst katstroy = tsOk, substr(katstroy.name, 1, pos(' ',katstroy.name+' ') - 1), '');
    [KatstroyName]      if(getfirst katstroy = tsOk, katstroy.name, '');
  );

)

end;

end.
