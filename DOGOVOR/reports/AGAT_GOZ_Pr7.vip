!===============================================================================================================
! Надо сделать настройки. Строки помечены  - В настр
!===============================================================================================================
#include AGAT_GOZ_TMP.tbl
Table struct _DogKontr
 (
   nRec         : comp,
   NoDoc        : String,
   NoDoc_Ext    : String,
   dDoc	        : date,
   dBeg	        : date,
   OrgName      : String,
   Summa        : double,
   TiDk         : word,
   cVidDog      : comp,
   VidCen       : String,
   sAttrDog1    : String,
   sAttrDog2    : String,
   sAttrDog3    : String,
   cKP          : comp,
   Osn_VP_MO    : String,
   TZ           : String,
   cMainDog     : comp
 )
with index
 (
   _DogKontr_01 = nRec,
   _DogKontr_02 = dBeg+NoDoc,
   _DogKontr_03 = cMainDog
 );

#component "AGAT"
!===============================================================================================================
Interface AGAT_GOZ_Pr7 'Справка о заключении договоров с соисполнителями ' (,,)   EscClose, cyan;
Show (,,45,5);
!===============================================================================================================
create view
var 
 _dBeg
,_dEnd            
                  
,dd1,dd2         
                  : date;

 _Item_KP 
,_Item_PrP
,_curnRec_DogSogl
,_curVidDog       
,_cSoprDoc
,_nRec_KonrDog

                  : comp;
 _myPath
,_myDogKontr
                  : string;

 _Line
,_Line2
,_Line3
,_Line4
,_Line5


,_curTiDk_DogSogl
,_npp             
                  : word;
 _isEmpty         : boolean;

as select *
from
 Dogovor
,ExClassVal 
,ExClassSeg

,AttrNam AttrNam_KP
,AttrVal AttrVal_KP
,AttrNam AttrNam_PrP
,AttrVal AttrVal_PrP
,KatOrg
,_Dog
,_Dog _DogTmp
,_Dog _DogDel
,Dogovor  Sogl
,SpDocs
,SpecMTR
,KatStroy
,_Dog _DogRep (_Dog_02)
,_Zakaz
,_Zakaz _ZakazDel

,CalPlan
,SpDocs SpDocsCalPlan

,_Akt
,_Akt _AktDel

,_FOpl
,_FOpl _FOplDel

,Oborot Oborot62_D2013 (accelerate)
,Oborot Oborot62_D2005 (accelerate)

,SpecMTR SpecMTR_GF
,KatSopr Katsopr_GF
,SpSopr SpSopr_GF


,Oborot Oborot62_K2013 (accelerate)
,BuhSchet BuhSchet_K2013 (accelerate)

,Oborot Oborot62_K2005 (accelerate)
,BuhSchet BuhSchet_K2005 (accelerate)
!============================================================
,SpecMTR SpecMTR_Kontr
,KatStroy KatStroy_Kontr
,SpDocs SpDocs_Kontr
,Dogovor Dogovor_Kontr
,Dogovor MainDog_Kontr
,KatOrg KatOrg_Kontr
,AttrNam AttrNam_Kontr
,AttrVal AttrVal_Kontr
!============================================================
,BaseDoc
,BaseFin
,PlPor
,PlPor PlPor_Kontr

,SpDocs SpDocs_CP
,CalPlan CalPlan_CP

,StepDoc
,KatSopr

where ((
    comp(0)                     ==  Dogovor.cDogovor
and Dogovor.nRec                ==  ExClassVal.cRec
and word(123)                   ==  ExClassVal.ClassCode
and ExClassVal.cClassSeg        ==  ExClassSeg.nRec
!============================================================
and word(1707)                  ==  AttrNam_KP.wTable
and 'Конечный потребитель'      ==  AttrNam_KP.Name
and AttrNam_KP.wTable           ==  AttrVal_KP.wTable
and Dogovor.nRec                ==  AttrVal_KP.cRec
and AttrNam_KP.nRec             ==  AttrVal_KP.cAttrNam
!============================================================
and word(1707)                  ==  AttrNam_PrP.wTable
and 'Принадлежность продукции'  ==  AttrNam_PrP.Name
and AttrNam_PrP.wTable          ==  AttrVal_PrP.wTable
and Dogovor.nRec                ==  AttrVal_PrP.cRec
and AttrNam_PrP.nRec            ==  AttrVal_PrP.cAttrNam
!============================================================
and Dogovor.cOrg                ==  KatOrg.nRec
and Dogovor.nRec                ==  _Dog.nRec

and _DogTmp.nRec                ==  Sogl.cDogovor
and word(1)                     ==  Sogl.Status

and _DogTmp.cVidDog             ==  KatVidD.nRec
and _curTiDk_DogSogl            ==  SpDocs.TiDk
and _curnRec_DogSogl            ==  SpDocs.cDoc

and word(1723)                  ==  SpecMTR.CoTable
and SpDocs.nRec                 ==  SpecMTR.cSpec
and SpecMTR.cObj                ==  KatStroy.nRec
!============================================================
and SpDocs.nRec                 ==  SpDocsCalPlan.cUpDoc
and (
      word(403)                  =  SpDocsCalPlan.TiDk
    )
and SpDocsCalPlan.cDoc          ==  CalPlan.nRec
!============================================================
and _DogRep.nRec                ==  _Zakaz.cDogovor

!============================================================
and '862'                       ==  Oborot62_D2013.SCHETO
and (
     '890'                       =  Oborot62_D2013.SCHETK
    )
and _Zakaz.cKatStroy            ==  Oborot62_D2013.KAUOS[3]

and '762'                       ==  Oborot62_D2005.SCHETO
and (
     '790'                       =  Oborot62_D2005.SCHETK
    )
and _Zakaz.cKatStroy            ==  Oborot62_D2005.KAUOS[2]

and _Zakaz.cKatStroy            ==  _Akt.cKatStroy
!============================================================
and '862'                       ==  Oborot62_K2013.SCHETK
and (
     '8100'                     <>  Oborot62_K2013.SCHETO and
     '862'                      <>  Oborot62_K2013.SCHETO
    )
and _Zakaz.cKatStroy            ==  Oborot62_K2013.KAUKS[3]
and Oborot62_K2013.SCHETK       ==  BuhSchet_K2013.SCHET
and Oborot62_K2013.SUBSCHK      ==  BuhSchet_K2013.SUBSCH

and '762'                       ==  Oborot62_K2005.SCHETK
and (
     '7100'                     <>  Oborot62_K2005.SCHETO and
     '762'                      <>  Oborot62_K2005.SCHETO
    )
and _Zakaz.cKatStroy            ==  Oborot62_K2005.KAUKS[2]
and Oborot62_K2005.SCHETK       ==  BuhSchet_K2005.SCHET
and Oborot62_K2005.SUBSCHK      ==  BuhSchet_K2005.SUBSCH

and _cSoprDoc                   ==  PlPor.nRec
and _Zakaz.cKatStroy            ==  _Avans.cKatStroy
and _Zakaz.cKatStroy            ==  _FOpl.cKatStroy
!============================================================
and comp(281474976710657)       ==  SpecMTR_Kontr.cSaldTune
and word(1723)                  ==  SpecMTR_Kontr.CoTable
and _Zakaz.cKatStroy            ==  SpecMTR_Kontr.cObj

and SpecMTR_Kontr.cObj          ==  KatStroy_Kontr.nRec

and SpecMTR_Kontr.cSpec         ==  SpDocs_Kontr.nRec

and SpDocs_Kontr.cDoc           ==  Dogovor_Kontr.nRec
and (
      word(401)                  =  Dogovor_Kontr.TiDk and 
      word(1)                    =  Dogovor_Kontr.Status
    )
and Dogovor_Kontr.cDogovor      ==  MainDog_Kontr.nRec

and Dogovor_Kontr.cOrg          ==  KatOrg_Kontr.nRec

and word(1707)                  ==  AttrNam_Kontr.wTable
and '№ госконтракта, где ОАО "Концерн "Моринсис-Агат" - исполнитель' ==  AttrNam_Kontr.Name
and AttrNam_Kontr.wTable        ==  AttrVal_Kontr.wTable
and Dogovor_Kontr.nRec          ==  AttrVal_Kontr.cRec
and AttrNam_Kontr.nRec          ==  AttrVal_Kontr.cAttrNam

and _nRec_KonrDog               ==  BaseDoc.cDogovor
and BaseDoc.nRec                ==  BaseFin.cBaseDoc
and BaseFin.cPlPor              ==  PlPor_Kontr.nRec

and SpDocs_Kontr.nRec           ==  SpDocs_CP.cUpDoc
and SpDocs_CP.cDoc              ==  CalPlan_CP.nRec

and BaseDoc.nRec                ==  StepDoc.cBaseDoc
and StepDoc.nRec                ==  KatSopr.cStepDoc


))
 condition by_Date  = 
     (
       (
           _dBeg    <= Dogovor.dBeg
       and _dEnd    >= Dogovor.dBeg
       ) or
       (
           _dBeg    <= Dogovor.dEnd
       and _dEnd    >= Dogovor.dEnd
       ) or
       (
           _dBeg    >= Dogovor.dBeg
       and _dBeg    <= Dogovor.dEnd
       ) or
       (
           _dEnd    >= Dogovor.dBeg
       and _dEnd    <= Dogovor.dEnd
       )
     )
 condition by_KP    = 
     _Item_KP       =  AttrVal_KP.vComp

 condition by_PrP   = 
     _Item_PrP      =  AttrVal_PrP.vComp
 condition by_Stat  = 
     word(1)        =  Dogovor.Status
;

Procedure _GetOtgr;
{
!==================================================================================
  if GetFirst Oborot62_D2013 = tsOk do
     {

       ClearBuffer(#_Akt);
       _Akt.cKatStroy :=  _Zakaz.cKatStroy;
       _Akt.Sum       :=  Oborot62_D2013.SumOb;
       _Akt.dDoc      :=  Oborot62_D2013.DatOb;

       _cSoprDoc := Oborot62_D2013.CSOPRDOC;
       if GetFirst KatSopr_GF where ((_cSoprDoc == KatSopr_GF.nRec)) = tsOk do
          { 
            if GetFirst SpSopr_GF where ((KatSopr_GF.nRec == SpSopr_GF.cSopr)) = tsOk do
               {
                 if GetFirst SpecMTR_GF where
                    ((
                           comp(281474976710657)  ==  SpecMTR_GF.cSaldTune
                       and word(1110)             ==  SpecMTR_GF.CoTable
                       and SpSopr_GF.nRec         ==  SpecMTR_GF.cSpec
                       and _Zakaz.cKatStroy       ==  SpecMTR_GF.cObj
                    )) = tsOk 
                    {
                      _Akt.Kol := _Akt.Kol + SpSopr_GF.KOLFACT;
                    }
               } while (GetNext SpSopr_GF where ((KatSopr_GF.nRec == SpSopr_GF.cSopr)) = tsOk and NextVisual);
          } while (GetNext KatSopr_GF where ((_cSoprDoc == KatSopr_GF.nRec)) = tsOk and NextVisual)
       insert current _Akt;

     } while (GetNext Oborot62_D2013 = tsOk and NextVisual);
  
  if GetFirst Oborot62_D2005 = tsOk do
     {
       ClearBuffer(#_Akt);
       _Akt.cKatStroy :=  _Zakaz.cKatStroy;
       _Akt.Sum       :=  Oborot62_D2005.SumOb;
       _Akt.dDoc      :=  Oborot62_D2005.DatOb;

       _cSoprDoc := Oborot62_D2005.CSOPRDOC;
       if GetFirst KatSopr_GF where ((_cSoprDoc == KatSopr_GF.nRec)) = tsOk do
          { 
            if GetFirst SpSopr_GF where ((KatSopr_GF.nRec == SpSopr_GF.cSopr)) = tsOk do
               {
                 if GetFirst SpecMTR_GF where
                    ((
                           comp(281474976710657)  ==  SpecMTR_GF.cSaldTune
                       and word(1110)             ==  SpecMTR_GF.CoTable
                       and SpSopr_GF.nRec         ==  SpecMTR_GF.cSpec
                       and _Zakaz.cKatStroy       ==  SpecMTR_GF.cObj
                    )) = tsOk 
                    {
                      _Akt.Kol := _Akt.Kol + SpSopr_GF.KOLFACT;
                    }
               } while (GetNext SpSopr_GF where ((KatSopr_GF.nRec == SpSopr_GF.cSopr)) = tsOk and NextVisual);
          } while (GetNext KatSopr_GF where ((_cSoprDoc == KatSopr_GF.nRec)) = tsOk and NextVisual)

       insert current _Akt;
     } while (GetNext Oborot62_D2005 = tsOk and NextVisual);
!==================================================================================
}

Procedure _GetOpl;
{
!==================================================================================
  if GetFirst Oborot62_K2013 = tsOk do
     {
       _cSoprDoc := Oborot62_K2013.CSOPRDOC;
       if (GetFirst BuhSchet_K2013 = tsOk) 
          {
            if inStr('Аванс',BuhSchet_K2013.Name) <> 0
               {
                 ClearBuffer(#_Avans);
                 _Avans.cKatStroy :=  _Zakaz.cKatStroy;
                 _Avans.Sum       :=  Oborot62_K2013.SumOb;
                 _Avans.dDoc      :=  Oborot62_K2013.DatOb;
                 if GetFirst PlPor = tsOk _Avans.NoDoc := PlPor.NODOK;
                 insert current _Avans;
               }
            ClearBuffer(#_FOpl);
            _FOpl.cKatStroy :=  _Zakaz.cKatStroy;
            _FOpl.Sum       :=  Oborot62_K2013.SumOb;
            _FOpl.dDoc      :=  Oborot62_K2013.DatOb;
            if GetFirst PlPor = tsOk _FOpl.NoDoc := PlPor.NODOK;
            insert current _FOpl;
          }
     } while (GetNext Oborot62_K2013 = tsOk and NextVisual);
  
  if GetFirst Oborot62_K2005 = tsOk do
     {
       _cSoprDoc := Oborot62_K2005.CSOPRDOC;
       if (GetFirst BuhSchet_K2005 = tsOk) 
          {
            if inStr('Аванс',BuhSchet_K2005.Name) <> 0
               {
                 ClearBuffer(#_Avans);
                 _Avans.cKatStroy :=  _Zakaz.cKatStroy;
                 _Avans.Sum       :=  Oborot62_K2005.SumOb;
                 _Avans.dDoc      :=  Oborot62_K2005.DatOb;
                 if GetFirst PlPor = tsOk _Avans.NoDoc := PlPor.NODOK;
                 insert current _Avans;
               }
            ClearBuffer(#_FOpl);
            _FOpl.cKatStroy :=  _Zakaz.cKatStroy;
            _FOpl.Sum       :=  Oborot62_K2005.SumOb;
            _FOpl.dDoc      :=  Oborot62_K2005.DatOb;
            if GetFirst PlPor = tsOk _FOpl.NoDoc := PlPor.NODOK;
            insert current _FOpl;
          }
     } while (GetNext Oborot62_K2005 = tsOk and NextVisual);
!==================================================================================
}

Procedure _PopAllCondition;
{
  PopCondition(tcby_Date);
  PopCondition(tcby_KP);
  PopCondition(tcby_PrP);
  PopCondition(tcby_Stat);
}

Procedure _InsDog;
{
  if GetFirst _Dog <> tsOk
     {
       ClearBuffer(#_Dog);
       _Dog.nRec      := Dogovor.nRec;
       _Dog.NoDoc     := Dogovor.NoDoc;
       _Dog.NoDoc_Ext := Dogovor.NoDoc_Ext;
       _Dog.dDoc      := Dogovor.dDoc;
       _Dog.dBeg      := Dogovor.dBeg;
       _Dog.OrgName   := KatOrg.Name;
       _Dog.Summa     := Dogovor.Summa;
       _Dog.TiDk      := Dogovor.TiDk;
       _Dog.cVidDog   := Dogovor.cVidDog;
       _Dog.VidCen    := ExClassSeg.Name;
       insert current _Dog;
     }
}

Procedure _CreateTmp;
{
  if GetFirst _DogTmp = tsOk do
     {
       if GetFirst Sogl = tsOk
          {
            _curTiDk_DogSogl := Sogl.TiDk;
            _curnRec_DogSogl := Sogl.nRec;
            _DogTmp.cMainDog := Sogl.cDogovor;
            update current _DogTmp;

          } else 
          {
            _curTiDk_DogSogl := _DogTmp.TiDk;
            _curnRec_DogSogl := _DogTmp.nRec;
            _DogTmp.cMainDog := _DogTmp.nRec;
            update current _DogTmp;
          }
       if GetFirst SpDocs = tsOk do
          {
            if (GetFirst SpecMTR = tsOk) and (GetFirst KatStroy = tsOk)
               {
               dd1 :=  date(0,0,0);
               dd2 :=  date(0,0,0);

               if GetFirst SpDocsCalPlan = tsOk and GetFirst CalPlan  = tsOk
                  {
                    dd1 := CalPlan.dFrom;
                    dd2 := CalPlan.dTo;
                  } 

               if (    _dBeg    <= dd1
                   and _dEnd    >= dd2
                  ) or
                  (
                       _dBeg    <= dd1
                   and _dEnd    >= dd2
                  ) or
                  (
                       _dBeg    >= dd1
                   and _dBeg    <= dd2
                  ) or
                  (
                       _dEnd    >= dd1
                   and _dEnd    <= dd2
                  )
               {  // if _dBeg _dEnd
                  if GetFirst _Zakaz where ((KatStroy.nRec == _Zakaz.cKatStroy))  <> tsOk
                     {
                       ClearBuffer(#_Zakaz);
                       _Zakaz.dFactPost := dd2;
                       _Zakaz.cDogovor  := _DogTmp.nRec;
                       _Zakaz.cKatStroy := KatStroy.nRec;
                       _Zakaz.ZakNo     := KatStroy.Name;
                       if GetFirst KatVidD = tsOk {_Zakaz.KatVidD   := KatVidD.Name;};
                       if InStr('Поставка',(_DogRep.NoDoc_Ext+' '+_Zakaz.KatVidD)) = 0
                          {
                            _Zakaz.Kol := 1;
                          }
                          else 
                          {
                            _Zakaz.Kol := SpDocs.Kol;
                          }
                       _Zakaz.Price     := SpDocs.Price;
                       _Zakaz.Sum       := SpDocs.Summa;
                       insert current _Zakaz; 
                     }
               } // if _dBeg _dEnd
               } // if (GetFirst SpecMTR = tsOk) and (GetFirst KatStroy = tsOk)
          } while (GetNext SpDocs = tsOk and NextVisual);
     } while (GetNext _DogTmp = tsOk and NextVisual);
!===============================================================================================================
}
Procedure _CreateExcelRep;
{
  _myPath := TranslatePath('%startpath%'+'Xls\AGAT_GOZ_Pr7.xlt');
  if FileExist(_myPath)
     {
       var xlREs : boolean;
       xlRes := xlCreateExcelWithTemplate(_myPath,true); 
       if (not xlRes)  { Message('Не открылся Excel'); Exit; }
       xlRes := xlIsExcelValid;
       if (not xlRes)  { Message('Не инициализирован Excel'); Exit; }
       xlRes := xlGetActiveWorkBookName(_myPath);
       if (not xlRes)
          { Message('Не активна книга Excel '+_myPath); Exit; }
!==============================================================================
       xlSetCellStringValue('Справка о заключении договоров с соисполнителями за '+Year(_dBeg)+'-'+Year(_dEnd)+' г.г.',1,1,1,1);
       if XLCREATEMATRIX(10000, 24) {};

       _Line := 1;
       if GetFirst _DogRep = tsOk do
          {
            if GetFirst _Zakaz = tsOk
               {
                 _isEmpty := true;
                 xlStWriteToMatrix (_Line, 1, 'Договор № '+_DogRep.NoDoc+' от '+DateToStr(_DogRep.dBeg, 'DD.MM.YYYY')+' '+_DogRep.NoDoc_Ext+' '+_Zakaz.KatVidD);
                 xlStWriteToMatrix (_Line, 16,'+');
                 _Line2 := _Line+1;
                 do 
                 {
                   xlStWriteToMatrix (_Line2, 1, _Zakaz.ZakNo);
                   xlStWriteToMatrix (_Line2, 2, DateToStr(_Zakaz.dFactPost, 'DD.MM.YYYY'));

                   _GetOtgr;
                   if GetFirst _Akt = tsOk
                      {
                        xlAddStrToMatrix (_Line2, 3, DateToStr(_Akt.dDoc, 'DD.MM.YYYY'));
                      }
                   xlStWriteToMatrix (_Line2, 4, _Zakaz.Price); // цена

                   _GetOpl;

                   _Line3 := _Line2;
                   _Line4 := _Line2;

                   if GetFirst _FOpl = tsOk do
                      {
                        xlStWriteToMatrix (_Line3, 5, _FOpl.Sum);
                        xlStWriteToMatrix (_Line3, 6, _FOpl.NoDoc);
                        xlStWriteToMatrix (_Line3, 7, DateToStr(_FOpl.dDoc, 'DD.MM.YYYY'));

                        xlStWriteToMatrix (_Line3, 21, _Zakaz.cDogovor);
                        xlStWriteToMatrix (_Line3, 22, _Zakaz.ZakNo);
                        inc(_Line3);
                      } while (GetNext _FOpl = tsOk and NextVisual);

!==========================================================================================================
                   if GetFirst SpecMTR_Kontr = tsOk do
                      {
                        if GetFirst SpDocs_Kontr = tsOk and GetFirst Dogovor_Kontr = tsOk
                           {
                             if GetFirst AttrNam_Kontr = tsOk and GetFirst AttrVal_Kontr = tsOk and AttrVal_Kontr.vComp = _DogRep.cMainDog
                                {
                                  if GetFirst KatOrg_Kontr = tsOk {}; 
                                  if GetFirst MainDog_Kontr = tsOk 
                                     {
                                       _myDogKontr   := KatOrg_Kontr.Name+' Договор № '+MainDog_Kontr.NoDoc+' от ' + DateToStr(MainDog_Kontr.dDoc, 'DD.MM.YYYY');
                                       _nRec_KonrDog := MainDog_Kontr.nRec;
                                     } 
                                     else
                                     {
                                       _myDogKontr := KatOrg_Kontr.Name+' Договор № '+Dogovor_Kontr.NoDoc+' от ' + DateToStr(Dogovor_Kontr.dDoc, 'DD.MM.YYYY');
                                       _nRec_KonrDog := Dogovor_Kontr.nRec;
                                     }

                                  if GetFirst KatStroy_Kontr = tsOk {};

                                  xlStWriteToMatrix (_Line4, 8, _myDogKontr);
                                  if (GetFirst SpDocs_CP = tsOk and GetFirst CalPlan_CP = tsOk)
                                     {
                                       xlStWriteToMatrix (_Line4, 9, DateToStr(CalPlan_CP.dTo, 'DD.MM.YYYY'));
                                     }

                                  if GetFirst StepDoc = tsOk and GetFirst KatSopr = tsOk
                                     {
                                       xlStWriteToMatrix (_Line4, 10, DateToStr(KatSopr.dSopr, 'DD.MM.YYYY'));
                                     }

                                  xlStWriteToMatrix (_Line4, 11, SpDocs_Kontr.Summa);

                                  xlStWriteToMatrix (_Line4, 17, '+');
                                  xlStWriteToMatrix (_Line4, 24, SpecMTR_Kontr.cObj);
                                  _isEmpty := false;

                                  if GetFirst BaseDoc = tsOk do
                                     {
                                       if BaseDoc.Summa = SpDocs_Kontr.Summa
                                          {
                                            _Line5 := _Line4;
                                            if GetFirst BaseFin = tsOk do
                                               {
                                                 xlStWriteToMatrix (_Line5, 12, BaseFin.Summa);
                                                 xlStWriteToMatrix (_Line5, 13, BaseFin.NoDoc);
                                                 xlStWriteToMatrix (_Line5, 14, DateToStr(BaseFin.dDoc, 'DD.MM.YYYY'));

                                                 if GetFirst PlPor_Kontr = tsOk 
                                                    {
                                                      xlStWriteToMatrix (_Line5, 15, PlPor_Kontr.NamePl1+' '+PlPor_Kontr.NamePl2+' '+PlPor_Kontr.NamePl3+' '+PlPor_Kontr.NamePl4);
                                                    }

                                                 xlStWriteToMatrix (_Line5, 17, '+');
                                                 xlStWriteToMatrix (_Line5, 23, BaseDoc.nRec);
                                                 xlStWriteToMatrix (_Line5, 24, SpecMTR_Kontr.cObj);

                                                 inc(_Line5);
                                                 _Line4 := _Line5-1;
                                               } while (GetNext BaseFin = tsOk and NextVisual);
                                          }
                                     } while (GetNext BaseDoc = tsOk and NextVisual);
                                  inc(_Line4);
                                }
                           }
                      } while (GetNext SpecMTR_Kontr = tsOk and NextVisual);
!==========================================================================================================

                   if _Line3 < _Line5 then _Line3 := _Line5;
                   if (_Line3 - _Line2 <> 0) or (_Line4 - _Line2 <> 0)
                      {
                        if _Line3 >= _Line4
                          {
                           _Line2:= _Line3-1;
                          } else
                          {
                           _Line2:= _Line4-1;
                          }
                      }
                  if not _isEmpty xlStWriteToMatrix (_Line, 17, '+');

                   inc(_Line2);
                 } while (GetNext _Zakaz = tsOk and NextVisual);
                 _Line := _Line2;
               } //if GetFirst _Zakaz = tsOk
          } while (GetNext _DogRep = tsOk and NextVisual);
!==============================================================================
       xlWriteMatrixToExcel(5,1);
       if xlFreeMatrix{};
       if xlRes:=xlRunMacro('Format') {};
       xlKillExcel;
!==============================================================================
     } else Message ('Шаблон "AGAT_GOZ_Pr7.xlt" не найден!')//if FileExist(myPath)
}

Panel pnl_RepDogGOZ;
 Table Dogovor;
  Screen scr1 ('...',,sci13Esc);
  Show at (,,,);
  Fields
   _dBeg         : noProtect;
   _dEnd         : noProtect;
  Buttons
  cmValue1,,,'Сформировать';
  cmValue2,,,'Выход';
<< 

`период с`.@@@@@@@@@@  `по`.@@@@@@@@@@

     <. Сформировать .>    <. Выход .>
>>
 end;
end; // Panel
HandleEvent
cmInit:{
  _PopAllCondition;
  _Item_KP  := comp(281474976711950);  // Конечный потребитель - Прямой               //В настр
  _Item_PrP := comp(281474976711945);  // Принадлежность продукции - Спецтехника      //В настр
  var datechanged : boolean = false;
  if ((not readmydsk(_dBeg,'AGAT_GOZ_Pr7_dBeg',datechanged)) or (datechanged)) _dBeg := Cur_date;
  if ((not readmydsk(_dEnd,'AGAT_GOZ_Pr7_dEnd',datechanged)) or (datechanged)) _dEnd := Cur_date;
} // cmInit

cmDone:{
  SaveMyDsk(_dBeg,'AGAT_GOZ_Pr7_dBeg');
  SaveMyDsk(_dEnd,'AGAT_GOZ_Pr7_dEnd');
}//cmDone

cmValue1:{
  StartNewVisual(vtRotateVisual,vfTimer + vfBreak + vfConfirm,''#3'Обработка договоров...'#13#13#3,1);
  
  Delete all _DogDel;
  Delete all _ZakazDel;
  Delete all _AktDel;
  Delete all _FOplDel;
 
  PushCondition(tcby_KP);
  PushCondition(tcby_PrP);
!======================================================================
! Собираем договоры по датам  
!======================================================================
  PushCondition(tcby_Date);
  if GetFirst Dogovor = tsOk do
     { 
       _InsDog;
     } while(GetNext Dogovor = tsOk and NextVisual);
!======================================================================
! Собираем договоры по статусу "исполняемый"
!======================================================================
  PopCondition(tcby_Date);
  PushCondition(tcby_Stat);
  if GetFirst Dogovor = tsOk do
     { 
       _InsDog;
     } while(GetNext Dogovor = tsOk and NextVisual);

  _PopAllCondition;
  _CreateTmp;
  _CreateExcelRep;

  StopVisual('',0);
  CloseInterface(cmDefault);
}
end; // HandleEvent
end. // Interface

VipInterface UserReport_AGAT_GOZ_Pr7 Implements IUserReport licensed(free);
Interface UserReport_AGAT_GOZ_Pr7;
  create view dummy;
  procedure Run;
  begin
    runinterfacenomodal(AGAT::AGAT_GOZ_Pr7);
  end;

  function GetReportName: String;
  begin
    GetReportName := 'Справка (приложение 7)';
  end;

  function GetGroupName (Level : Word) : String;
  begin
    #__UNUSED__(Level)
    GetGroupName := 'Отчеты ГОЗ';
  end;

  function GetPriority : Integer;
  begin
    GetPriority := 0;
  end;

  function VisibleInModule(Ind : Byte) : String;
  begin
    VisibleInModule := '';
    case Ind of
      1 : VisibleInModule := 'DOGOVOR';
    end;
  end;
end.
